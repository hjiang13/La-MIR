Compilation and Execution Results
=================================

CPP_30.cpp: Compilation Failed
Error: ./CPP_30.cpp: In function ‘void get_positive(vector*, vector*)’:
./CPP_30.cpp:40:17: error: ‘_M_realloc_insert’ was not declared in this scope
   40 |                 _M_realloc_insert(__result, __result_finish, &__x);
      |                 ^~~~~~~~~~~~~~~~~
./CPP_30.cpp: In function ‘void _M_realloc_insert(vector*, float*, float*)’:
./CPP_30.cpp:63:36: error: invalid conversion from ‘void*’ to ‘float*’ [-fpermissive]
   63 |         float* __new_start = malloc(__new_size * sizeof(float));
      |                              ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                    |
      |                                    void*
./CPP_30.cpp: At global scope:
./CPP_30.cpp:81:13: error: ‘vector’ is not a template
   81 | bool issame(vector<float> a,vector<float>b){
      |             ^~~~~~
./CPP_30.cpp:81:29: error: ‘vector’ is not a template
   81 | bool issame(vector<float> a,vector<float>b){
      |                             ^~~~~~
./CPP_30.cpp: In function ‘bool issame(vector, vector)’:
./CPP_30.cpp:82:11: error: ‘struct vector’ has no member named ‘size’
   82 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_30.cpp:82:21: error: ‘struct vector’ has no member named ‘size’
   82 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_30.cpp:83:22: error: ‘struct vector’ has no member named ‘size’
   83 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_30.cpp:85:18: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   85 |         if (abs(a[i]-b[i])>1e-4) return false;
      |                  ^
./CPP_30.cpp:85:23: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   85 |         if (abs(a[i]-b[i])>1e-4) return false;
      |                       ^
In file included from ./CPP_30.cpp:80:
./CPP_30.cpp: In function ‘int main()’:
./CPP_30.cpp:90:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   90 |     assert (issame(get_positive({-1, -2, 4, 5, 6}) , {4, 5, 6} ));
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_30.cpp:19:27: note:   initializing argument 1 of ‘void get_positive(vector*, vector*)’
   19 | void get_positive(vector* __result, vector* __v) {
      |                   ~~~~~~~~^~~~~~~~
In file included from ./CPP_30.cpp:80:
./CPP_30.cpp:91:71: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   91 |     assert (issame(get_positive({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}) , {5, 3, 2, 3, 3, 9, 123, 1}));
      |                                                                       ^
      |                                                                       |
      |                                                                       <brace-enclosed initializer list>
./CPP_30.cpp:19:27: note:   initializing argument 1 of ‘void get_positive(vector*, vector*)’
   19 | void get_positive(vector* __result, vector* __v) {
      |                   ~~~~~~~~^~~~~~~~
In file included from ./CPP_30.cpp:80:
./CPP_30.cpp:92:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   92 |      assert (issame(get_positive({-1, -2}) , {} ));
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_30.cpp:19:27: note:   initializing argument 1 of ‘void get_positive(vector*, vector*)’
   19 | void get_positive(vector* __result, vector* __v) {
      |                   ~~~~~~~~^~~~~~~~
In file included from ./CPP_30.cpp:80:
./CPP_30.cpp:93:36: error: too few arguments to function ‘void get_positive(vector*, vector*)’
   93 |      assert (issame(get_positive({}) , {}));
      |                                    ^
./CPP_30.cpp:19:6: note: declared here
   19 | void get_positive(vector* __result, vector* __v) {
      |      ^~~~~~~~~~~~


CPP_9.cpp: Compilation Failed
Error: ./CPP_9.cpp: In function ‘void _Z11rolling_maxSt6vectorIiSaIiEE(vector*, vector*)’:
./CPP_9.cpp:24:39: error: request for member ‘_M_start’ in ‘__x->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   24 |   int* __first = __x->_M_base._M_impl._M_start;
      |                                       ^~~~~~~~
./CPP_9.cpp:25:38: error: request for member ‘_M_finish’ in ‘__x->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   25 |   int* __last = __x->_M_base._M_impl._M_finish;
      |                                      ^~~~~~~~~
./CPP_9.cpp:26:51: error: request for member ‘_M_start’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   26 |   int* __result_start = __result->_M_base._M_impl._M_start;
      |                                                   ^~~~~~~~
./CPP_9.cpp:27:52: error: request for member ‘_M_finish’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   27 |   int* __result_finish = __result->_M_base._M_impl._M_finish;
      |                                                    ^~~~~~~~~
./CPP_9.cpp:28:60: error: request for member ‘_M_end_of_storage’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   28 |   int* __result_end_of_storage = __result->_M_base._M_impl._M_end_of_storage;
      |                                                            ^~~~~~~~~~~~~~~~~
./CPP_9.cpp:47:26: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
   47 |   __result_start = malloc(sizeof(int));
      |                    ~~~~~~^~~~~~~~~~~~~
      |                          |
      |                          void*
./CPP_9.cpp:52:29: error: request for member ‘_M_start’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   52 |   __result->_M_base._M_impl._M_start = __result_start;
      |                             ^~~~~~~~
./CPP_9.cpp:53:29: error: request for member ‘_M_finish’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   53 |   __result->_M_base._M_impl._M_finish = __result_finish;
      |                             ^~~~~~~~~
./CPP_9.cpp:54:29: error: request for member ‘_M_end_of_storage’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   54 |   __result->_M_base._M_impl._M_end_of_storage = __result_end_of_storage;
      |                             ^~~~~~~~~~~~~~~~~
./CPP_9.cpp: At global scope:
./CPP_9.cpp:79:13: error: ‘vector’ is not a template
   79 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_9.cpp:79:27: error: ‘vector’ is not a template
   79 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_9.cpp: In function ‘bool issame(vector, vector)’:
./CPP_9.cpp:80:11: error: ‘struct vector’ has no member named ‘size’
   80 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_9.cpp:80:21: error: ‘struct vector’ has no member named ‘size’
   80 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_9.cpp:81:22: error: ‘struct vector’ has no member named ‘size’
   81 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_9.cpp:83:14: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   83 |         if (a[i]!=b[i]) return false;
      |              ^
./CPP_9.cpp:83:20: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   83 |         if (a[i]!=b[i]) return false;
      |                    ^
In file included from ./CPP_9.cpp:78:
./CPP_9.cpp: In function ‘int main()’:
./CPP_9.cpp:88:21: error: ‘rolling_max’ was not declared in this scope
   88 |      assert (issame(rolling_max({}),{}));
      |                     ^~~~~~~~~~~


CPP_35.cpp: Compilation Failed
Error: In file included from ./CPP_35.cpp:49:
./CPP_35.cpp: In function ‘int main()’:
./CPP_35.cpp:51:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   51 |     assert (abs(max_element({1, 2, 3})- 3)<1e-4);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_35.cpp:4:26: note:   initializing argument 1 of ‘float max_element(float*, int)’
    4 | float max_element(float* data, int size) {
      |                   ~~~~~~~^~~~
In file included from ./CPP_35.cpp:49:
./CPP_35.cpp:51:13: error: ‘abs’ was not declared in this scope
   51 |     assert (abs(max_element({1, 2, 3})- 3)<1e-4);
      |             ^~~
./CPP_35.cpp:52:68: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   52 |     assert (abs(max_element({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10})- 124)<1e-4);
      |                                                                    ^
      |                                                                    |
      |                                                                    <brace-enclosed initializer list>
./CPP_35.cpp:4:26: note:   initializing argument 1 of ‘float max_element(float*, int)’
    4 | float max_element(float* data, int size) {
      |                   ~~~~~~~^~~~


CPP_134.cpp: Compilation Failed
Error: In file included from ./CPP_134.cpp:43:
./CPP_134.cpp: In function ‘int main()’:
./CPP_134.cpp:45:51: error: too few arguments to function ‘bool check_if_last_char_is_a_letter(const char*, uint64_t)’
   45 |     assert (check_if_last_char_is_a_letter("apple") == false);
      |                                                   ^
./CPP_134.cpp:4:6: note: declared here
    4 | bool check_if_last_char_is_a_letter(const char* str, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./CPP_134.cpp:43:
./CPP_134.cpp:46:56: error: too few arguments to function ‘bool check_if_last_char_is_a_letter(const char*, uint64_t)’
   46 |     assert (check_if_last_char_is_a_letter("apple pi e") == true);
      |                                                        ^
./CPP_134.cpp:4:6: note: declared here
    4 | bool check_if_last_char_is_a_letter(const char* str, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./CPP_134.cpp:43:
./CPP_134.cpp:47:51: error: too few arguments to function ‘bool check_if_last_char_is_a_letter(const char*, uint64_t)’
   47 |     assert (check_if_last_char_is_a_letter("eeeee") == false);
      |                                                   ^
./CPP_134.cpp:4:6: note: declared here
    4 | bool check_if_last_char_is_a_letter(const char* str, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./CPP_134.cpp:43:
./CPP_134.cpp:48:47: error: too few arguments to function ‘bool check_if_last_char_is_a_letter(const char*, uint64_t)’
   48 |     assert (check_if_last_char_is_a_letter("A") == true);
      |                                               ^
./CPP_134.cpp:4:6: note: declared here
    4 | bool check_if_last_char_is_a_letter(const char* str, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./CPP_134.cpp:43:
./CPP_134.cpp:49:58: error: too few arguments to function ‘bool check_if_last_char_is_a_letter(const char*, uint64_t)’
   49 |     assert (check_if_last_char_is_a_letter("Pumpkin pie ") == false);
      |                                                          ^
./CPP_134.cpp:4:6: note: declared here
    4 | bool check_if_last_char_is_a_letter(const char* str, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./CPP_134.cpp:43:
./CPP_134.cpp:50:59: error: too few arguments to function ‘bool check_if_last_char_is_a_letter(const char*, uint64_t)’
   50 |     assert (check_if_last_char_is_a_letter("Pumpkin pie 1") == false);
      |                                                           ^
./CPP_134.cpp:4:6: note: declared here
    4 | bool check_if_last_char_is_a_letter(const char* str, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./CPP_134.cpp:43:
./CPP_134.cpp:51:46: error: too few arguments to function ‘bool check_if_last_char_is_a_letter(const char*, uint64_t)’
   51 |     assert (check_if_last_char_is_a_letter("") == false);
      |                                              ^
./CPP_134.cpp:4:6: note: declared here
    4 | bool check_if_last_char_is_a_letter(const char* str, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./CPP_134.cpp:43:
./CPP_134.cpp:52:54: error: too few arguments to function ‘bool check_if_last_char_is_a_letter(const char*, uint64_t)’
   52 |     assert (check_if_last_char_is_a_letter("eeeee e ") == false);
      |                                                      ^
./CPP_134.cpp:4:6: note: declared here
    4 | bool check_if_last_char_is_a_letter(const char* str, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./CPP_134.cpp:43:
./CPP_134.cpp:53:55: error: too few arguments to function ‘bool check_if_last_char_is_a_letter(const char*, uint64_t)’
   53 |     assert (check_if_last_char_is_a_letter("apple pie") == false);
      |                                                       ^
./CPP_134.cpp:4:6: note: declared here
    4 | bool check_if_last_char_is_a_letter(const char* str, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./CPP_134.cpp:43:
./CPP_134.cpp:54:57: error: too few arguments to function ‘bool check_if_last_char_is_a_letter(const char*, uint64_t)’
   54 |     assert (check_if_last_char_is_a_letter("apple pi e ") == false);
      |                                                         ^
./CPP_134.cpp:4:6: note: declared here
    4 | bool check_if_last_char_is_a_letter(const char* str, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


CPP_102.cpp: Execution Failed
Error: CPP_102: ./CPP_102.cpp:14: int main(): Assertion `choose_num(12, 15) == 14' failed.
Aborted (core dumped)


CPP_45.cpp: Compilation Failed
Error: In file included from ./CPP_45.cpp:6:
./CPP_45.cpp: In function ‘int main()’:
./CPP_45.cpp:8:13: error: ‘abs’ was not declared in this scope
    8 |     assert (abs(triangle_area(5, 3) - 7.5)<1e-4);
      |             ^~~


CPP_21.cpp: Compilation Failed
Error: ./CPP_21.cpp: In function ‘void rescale_to_unit(vector*, vector*)’:
./CPP_21.cpp:41:13: error: ‘__m128’ was not declared in this scope
   41 |             __m128 vec = _mm_loadu_ps(vec_ptr);
      |             ^~~~~~
./CPP_21.cpp:42:19: error: expected ‘;’ before ‘min_vec’
   42 |             __m128 min_vec = _mm_set1_ps(vec_min_val);
      |                   ^~~~~~~~
      |                   ;
./CPP_21.cpp:43:19: error: expected ‘;’ before ‘max_vec’
   43 |             __m128 max_vec = _mm_set1_ps(vec_max_val);
      |                   ^~~~~~~~
      |                   ;
./CPP_21.cpp:45:19: error: expected ‘;’ before ‘cmp_min’
   45 |             __m128 cmp_min = _mm_cmplt_ps(vec, min_vec);
      |                   ^~~~~~~~
      |                   ;
./CPP_21.cpp:46:19: error: expected ‘;’ before ‘cmp_max’
   46 |             __m128 cmp_max = _mm_cmpgt_ps(vec, max_vec);
      |                   ^~~~~~~~
      |                   ;
./CPP_21.cpp:48:38: error: ‘vec’ was not declared in this scope
   48 |             vec_min_val = _mm_min_ps(vec, min_vec)[0];
      |                                      ^~~
./CPP_21.cpp:48:43: error: ‘min_vec’ was not declared in this scope; did you mean ‘min_val’?
   48 |             vec_min_val = _mm_min_ps(vec, min_vec)[0];
      |                                           ^~~~~~~
      |                                           min_val
./CPP_21.cpp:48:27: error: ‘_mm_min_ps’ was not declared in this scope
   48 |             vec_min_val = _mm_min_ps(vec, min_vec)[0];
      |                           ^~~~~~~~~~
./CPP_21.cpp:49:43: error: ‘max_vec’ was not declared in this scope; did you mean ‘max_val’?
   49 |             vec_max_val = _mm_max_ps(vec, max_vec)[0];
      |                                           ^~~~~~~
      |                                           max_val
./CPP_21.cpp:49:27: error: ‘_mm_max_ps’ was not declared in this scope
   49 |             vec_max_val = _mm_max_ps(vec, max_vec)[0];
      |                           ^~~~~~~~~~
./CPP_21.cpp:69:13: error: ‘__m128’ was not declared in this scope
   69 |             __m128 vec = _mm_loadu_ps(vec_ptr);
      |             ^~~~~~
./CPP_21.cpp:70:19: error: expected ‘;’ before ‘min_vec’
   70 |             __m128 min_vec = _mm_set1_ps(min_val);
      |                   ^~~~~~~~
      |                   ;
./CPP_21.cpp:71:19: error: expected ‘;’ before ‘scale_vec’
   71 |             __m128 scale_vec = _mm_set1_ps(scale);
      |                   ^~~~~~~~~~
      |                   ;
./CPP_21.cpp:73:13: error: ‘vec’ was not declared in this scope
   73 |             vec = _mm_sub_ps(vec, min_vec);
      |             ^~~
./CPP_21.cpp:73:35: error: ‘min_vec’ was not declared in this scope; did you mean ‘min_val’?
   73 |             vec = _mm_sub_ps(vec, min_vec);
      |                                   ^~~~~~~
      |                                   min_val
./CPP_21.cpp:73:19: error: ‘_mm_sub_ps’ was not declared in this scope
   73 |             vec = _mm_sub_ps(vec, min_vec);
      |                   ^~~~~~~~~~
./CPP_21.cpp:74:35: error: ‘scale_vec’ was not declared in this scope
   74 |             vec = _mm_mul_ps(vec, scale_vec);
      |                                   ^~~~~~~~~
./CPP_21.cpp:74:19: error: ‘_mm_mul_ps’ was not declared in this scope
   74 |             vec = _mm_mul_ps(vec, scale_vec);
      |                   ^~~~~~~~~~
./CPP_21.cpp:75:13: error: ‘_mm_storeu_ps’ was not declared in this scope
   75 |             _mm_storeu_ps(vec_ptr, vec);
      |             ^~~~~~~~~~~~~
./CPP_21.cpp: At global scope:
./CPP_21.cpp:91:13: error: ‘vector’ is not a template
   91 | bool issame(vector<float> a,vector<float>b){
      |             ^~~~~~
./CPP_21.cpp:91:29: error: ‘vector’ is not a template
   91 | bool issame(vector<float> a,vector<float>b){
      |                             ^~~~~~
./CPP_21.cpp: In function ‘bool issame(vector, vector)’:
./CPP_21.cpp:92:11: error: ‘struct vector’ has no member named ‘size’
   92 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_21.cpp:92:21: error: ‘struct vector’ has no member named ‘size’
   92 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_21.cpp:93:22: error: ‘struct vector’ has no member named ‘size’
   93 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_21.cpp:95:18: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   95 |         if (abs(a[i]-b[i])>1e-4) return false;
      |                  ^
./CPP_21.cpp:95:23: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   95 |         if (abs(a[i]-b[i])>1e-4) return false;
      |                       ^
./CPP_21.cpp:95:13: error: ‘abs’ was not declared in this scope
   95 |         if (abs(a[i]-b[i])>1e-4) return false;
      |             ^~~
In file included from ./CPP_21.cpp:90:
./CPP_21.cpp: In function ‘int main()’:
./CPP_21.cpp:100:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
  100 |     assert (issame(rescale_to_unit({2.0, 49.9}) , {0.0, 1.0}));
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_21.cpp:19:30: note:   initializing argument 1 of ‘void rescale_to_unit(vector*, vector*)’
   19 | void rescale_to_unit(vector* out, vector* in) {
      |                      ~~~~~~~~^~~
In file included from ./CPP_21.cpp:90:
./CPP_21.cpp:101:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
  101 |      assert (issame(rescale_to_unit({100.0, 49.9}) ,{1.0, 0.0}));
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_21.cpp:19:30: note:   initializing argument 1 of ‘void rescale_to_unit(vector*, vector*)’
   19 | void rescale_to_unit(vector* out, vector* in) {
      |                      ~~~~~~~~^~~
In file included from ./CPP_21.cpp:90:
./CPP_21.cpp:102:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
  102 |      assert (issame(rescale_to_unit({1.0, 2.0, 3.0, 4.0, 5.0}) , {0.0, 0.25, 0.5, 0.75, 1.0}));
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_21.cpp:19:30: note:   initializing argument 1 of ‘void rescale_to_unit(vector*, vector*)’
   19 | void rescale_to_unit(vector* out, vector* in) {
      |                      ~~~~~~~~^~~
In file included from ./CPP_21.cpp:90:
./CPP_21.cpp:103:61: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
  103 |     assert (issame(rescale_to_unit({2.0, 1.0, 5.0, 3.0, 4.0}) , {0.25, 0.0, 1.0, 0.5, 0.75}));
      |                                                             ^
      |                                                             |
      |                                                             <brace-enclosed initializer list>
./CPP_21.cpp:19:30: note:   initializing argument 1 of ‘void rescale_to_unit(vector*, vector*)’
   19 | void rescale_to_unit(vector* out, vector* in) {
      |                      ~~~~~~~~^~~
In file included from ./CPP_21.cpp:90:
./CPP_21.cpp:104:67: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
  104 |      assert (issame(rescale_to_unit({12.0, 11.0, 15.0, 13.0, 14.0}) ,{0.25, 0.0, 1.0, 0.5, 0.75}));
      |                                                                   ^
      |                                                                   |
      |                                                                   <brace-enclosed initializer list>
./CPP_21.cpp:19:30: note:   initializing argument 1 of ‘void rescale_to_unit(vector*, vector*)’
   19 | void rescale_to_unit(vector* out, vector* in) {
      |                      ~~~~~~~~^~~


CPP_78.cpp: Execution Failed
Error: CPP_78: ./CPP_78.cpp:29: int main(): Assertion `hex_key("AB") == 1' failed.
Aborted (core dumped)


CPP_63.cpp: Compilation Failed
Error: In file included from ./CPP_63.cpp:30:
./CPP_63.cpp: In function ‘int main()’:
./CPP_63.cpp:32:13: error: ‘fibfib’ was not declared in this scope
   32 |     assert (fibfib(2) == 1);
      |             ^~~~~~


CPP_100.cpp: Compilation Failed
Error: ./CPP_100.cpp: In function ‘void make_a_pile(vector*, int)’:
./CPP_100.cpp:25:24: error: request for member ‘_M_start’ in ‘v->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   25 |     v->_M_base._M_impl._M_start = ptr;
      |                        ^~~~~~~~
./CPP_100.cpp:26:24: error: request for member ‘_M_finish’ in ‘v->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   26 |     v->_M_base._M_impl._M_finish = ptr;
      |                        ^~~~~~~~~
./CPP_100.cpp:27:24: error: request for member ‘_M_end_of_storage’ in ‘v->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   27 |     v->_M_base._M_impl._M_end_of_storage = ptr + 1;
      |                        ^~~~~~~~~~~~~~~~~
./CPP_100.cpp:31:41: error: request for member ‘_M_start’ in ‘v->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   31 |         int* start = v->_M_base._M_impl._M_start;
      |                                         ^~~~~~~~
./CPP_100.cpp:32:42: error: request for member ‘_M_finish’ in ‘v->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   32 |         int* finish = v->_M_base._M_impl._M_finish;
      |                                          ^~~~~~~~~
./CPP_100.cpp:33:50: error: request for member ‘_M_end_of_storage’ in ‘v->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   33 |         int* end_of_storage = v->_M_base._M_impl._M_end_of_storage;
      |                                                  ^~~~~~~~~~~~~~~~~
./CPP_100.cpp:39:28: warning: overflow in conversion from ‘long int’ to ‘int’ changes value from ‘2305843009213693951’ to ‘-1’ [-Woverflow]
   39 |                 new_size = 2305843009213693951;
      |                            ^~~~~~~~~~~~~~~~~~~
./CPP_100.cpp:52:32: error: request for member ‘_M_start’ in ‘v->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   52 |             v->_M_base._M_impl._M_start = new_ptr;
      |                                ^~~~~~~~
./CPP_100.cpp:53:32: error: request for member ‘_M_finish’ in ‘v->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   53 |             v->_M_base._M_impl._M_finish = new_ptr + i;
      |                                ^~~~~~~~~
./CPP_100.cpp:54:32: error: request for member ‘_M_end_of_storage’ in ‘v->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   54 |             v->_M_base._M_impl._M_end_of_storage = new_ptr + new_size;
      |                                ^~~~~~~~~~~~~~~~~
./CPP_100.cpp: At global scope:
./CPP_100.cpp:63:13: error: ‘vector’ is not a template
   63 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_100.cpp:63:27: error: ‘vector’ is not a template
   63 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_100.cpp: In function ‘bool issame(vector, vector)’:
./CPP_100.cpp:64:11: error: ‘struct vector’ has no member named ‘size’
   64 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_100.cpp:64:21: error: ‘struct vector’ has no member named ‘size’
   64 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_100.cpp:65:22: error: ‘struct vector’ has no member named ‘size’
   65 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_100.cpp:67:10: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   67 |     if (a[i]!=b[i]) return false;
      |          ^
./CPP_100.cpp:67:16: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   67 |     if (a[i]!=b[i]) return false;
      |                ^
In file included from ./CPP_100.cpp:62:
./CPP_100.cpp: In function ‘int main()’:
./CPP_100.cpp:72:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
   72 |     assert (issame(make_a_pile(3) , {3, 5, 7}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:72:33: error: too few arguments to function ‘void make_a_pile(vector*, int)’
   72 |     assert (issame(make_a_pile(3) , {3, 5, 7}));
      |                                 ^
./CPP_100.cpp:22:6: note: declared here
   22 | void make_a_pile(vector* v, int n) {
      |      ^~~~~~~~~~~
In file included from ./CPP_100.cpp:62:
./CPP_100.cpp:73:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
   73 |     assert (issame(make_a_pile(4) , {4,6,8,10}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:73:33: error: too few arguments to function ‘void make_a_pile(vector*, int)’
   73 |     assert (issame(make_a_pile(4) , {4,6,8,10}));
      |                                 ^
./CPP_100.cpp:22:6: note: declared here
   22 | void make_a_pile(vector* v, int n) {
      |      ^~~~~~~~~~~
In file included from ./CPP_100.cpp:62:
./CPP_100.cpp:74:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
   74 |     assert (issame(make_a_pile(5) , {5, 7, 9, 11, 13}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:74:33: error: too few arguments to function ‘void make_a_pile(vector*, int)’
   74 |     assert (issame(make_a_pile(5) , {5, 7, 9, 11, 13}));
      |                                 ^
./CPP_100.cpp:22:6: note: declared here
   22 | void make_a_pile(vector* v, int n) {
      |      ^~~~~~~~~~~
In file included from ./CPP_100.cpp:62:
./CPP_100.cpp:75:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
   75 |     assert (issame(make_a_pile(6) , {6, 8, 10, 12, 14, 16}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:75:33: error: too few arguments to function ‘void make_a_pile(vector*, int)’
   75 |     assert (issame(make_a_pile(6) , {6, 8, 10, 12, 14, 16}));
      |                                 ^
./CPP_100.cpp:22:6: note: declared here
   22 | void make_a_pile(vector* v, int n) {
      |      ^~~~~~~~~~~
In file included from ./CPP_100.cpp:62:
./CPP_100.cpp:76:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
   76 |     assert (issame(make_a_pile(8) , {8, 10, 12, 14, 16, 18, 20, 22}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:76:33: error: too few arguments to function ‘void make_a_pile(vector*, int)’
   76 |     assert (issame(make_a_pile(8) , {8, 10, 12, 14, 16, 18, 20, 22}));
      |                                 ^
./CPP_100.cpp:22:6: note: declared here
   22 | void make_a_pile(vector* v, int n) {
      |      ^~~~~~~~~~~


CPP_106.cpp: Compilation Failed
Error: ./CPP_106.cpp:5:24: error: ‘vector’ in namespace ‘std’ does not name a type
    5 | void _Z1fi(struct std::vector* noalias sret, int i32_1) {
      |                        ^~~~~~
./CPP_106.cpp:4:1: note: ‘std::vector’ is defined in header ‘<vector>’; did you forget to ‘#include <vector>’?
    3 | #include <string.h>
  +++ |+#include <vector>
    4 | 
./CPP_106.cpp:5:40: error: expected ‘,’ or ‘...’ before ‘sret’
    5 | void _Z1fi(struct std::vector* noalias sret, int i32_1) {
      |                                        ^~~~
./CPP_106.cpp: In function ‘void _Z1fi(int*)’:
./CPP_106.cpp:6:15: error: ‘_Vector_base’ in namespace ‘std’ does not name a type
    6 |   struct std::_Vector_base* base = (struct std::_Vector_base*)sret;
      |               ^~~~~~~~~~~~
./CPP_106.cpp:6:49: error: ‘_Vector_base’ in namespace ‘std’ does not name a type
    6 |   struct std::_Vector_base* base = (struct std::_Vector_base*)sret;
      |                                                 ^~~~~~~~~~~~
./CPP_106.cpp:6:61: error: expected ‘)’ before ‘*’ token
    6 |   struct std::_Vector_base* base = (struct std::_Vector_base*)sret;
      |                                    ~                        ^
      |                                                             )
./CPP_106.cpp:6:62: error: expected primary-expression before ‘)’ token
    6 |   struct std::_Vector_base* base = (struct std::_Vector_base*)sret;
      |                                                              ^
./CPP_106.cpp:7:28: error: request for member ‘_M_impl’ in ‘* base’, which is of non-class type ‘int’
    7 |   int* begin = (int*)base->_M_impl._M_start;
      |                            ^~~~~~~
./CPP_106.cpp:8:26: error: request for member ‘_M_impl’ in ‘* base’, which is of non-class type ‘int’
    8 |   int* end = (int*)base->_M_impl._M_finish;
      |                          ^~~~~~~
./CPP_106.cpp:9:31: error: request for member ‘_M_impl’ in ‘* base’, which is of non-class type ‘int’
    9 |   int* capacity = (int*)base->_M_impl._M_end_of_storage;
      |                               ^~~~~~~
./CPP_106.cpp:12:7: error: ‘i32_1’ was not declared in this scope; did you mean ‘int32_t’?
   12 |   if (i32_1 < 1) {
      |       ^~~~~
      |       int32_t
./CPP_106.cpp:16:17: error: ‘i32_1’ was not declared in this scope; did you mean ‘int32_t’?
   16 |   while (size < i32_1) {
      |                 ^~~~~
      |                 int32_t
./CPP_106.cpp:33:23: error: ‘i32_1’ was not declared in this scope; did you mean ‘int32_t’?
   33 |   for (int i = 0; i < i32_1; i++) {
      |                       ^~~~~
      |                       int32_t
./CPP_106.cpp: In function ‘int main()’:
./CPP_106.cpp:39:15: error: ‘vector’ in namespace ‘std’ does not name a type
   39 |   struct std::vector* vec = (struct std::vector*)malloc(sizeof(struct std::vector));
      |               ^~~~~~
./CPP_106.cpp:39:15: note: ‘std::vector’ is defined in header ‘<vector>’; did you forget to ‘#include <vector>’?
./CPP_106.cpp:39:42: error: ‘vector’ in namespace ‘std’ does not name a type
   39 |   struct std::vector* vec = (struct std::vector*)malloc(sizeof(struct std::vector));
      |                                          ^~~~~~
./CPP_106.cpp:39:42: note: ‘std::vector’ is defined in header ‘<vector>’; did you forget to ‘#include <vector>’?
./CPP_106.cpp:39:48: error: expected ‘)’ before ‘*’ token
   39 |   struct std::vector* vec = (struct std::vector*)malloc(sizeof(struct std::vector));
      |                             ~                  ^
      |                                                )
./CPP_106.cpp:39:49: error: expected primary-expression before ‘)’ token
   39 |   struct std::vector* vec = (struct std::vector*)malloc(sizeof(struct std::vector));
      |                                                 ^
./CPP_106.cpp:40:16: error: too many arguments to function ‘void _Z1fi(int*)’
   40 |   _Z1fi(vec, 10);
      |                ^
./CPP_106.cpp:5:6: note: declared here
    5 | void _Z1fi(struct std::vector* noalias sret, int i32_1) {
      |      ^~~~~
./CPP_106.cpp: At global scope:
./CPP_106.cpp:46:13: error: ‘vector’ was not declared in this scope
   46 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_106.cpp:46:20: error: expected primary-expression before ‘int’
   46 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_106.cpp:46:27: error: ‘vector’ was not declared in this scope
   46 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_106.cpp:46:34: error: expected primary-expression before ‘int’
   46 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_106.cpp:46:39: error: expression list treated as compound expression in initializer [-fpermissive]
   46 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
./CPP_106.cpp:54:5: error: redefinition of ‘int main()’
   54 | int main(){
      |     ^~~~
./CPP_106.cpp:38:5: note: ‘int main()’ previously defined here
   38 | int main() {
      |     ^~~~
In file included from ./CPP_106.cpp:45:
./CPP_106.cpp: In function ‘int main()’:
./CPP_106.cpp:55:20: error: ‘f’ was not declared in this scope
   55 |     assert (issame(f(5) , {1, 2, 6, 24, 15}));
      |                    ^
./CPP_106.cpp:55:44: error: ‘issame’ cannot be used as a function
   55 |     assert (issame(f(5) , {1, 2, 6, 24, 15}));
      |                                            ^
./CPP_106.cpp:56:53: error: ‘issame’ cannot be used as a function
   56 |     assert (issame(f(7) , {1, 2, 6, 24, 15, 720, 28}));
      |                                                     ^
./CPP_106.cpp:57:30: error: ‘issame’ cannot be used as a function
   57 |     assert (issame(f(1) , {1}));
      |                              ^
./CPP_106.cpp:58:36: error: ‘issame’ cannot be used as a function
   58 |     assert (issame(f(3) , {1, 2, 6}));
      |                                    ^


CPP_83.cpp: Execution Failed
Error: CPP_83: ./CPP_83.cpp:39: int main(): Assertion `starts_one_ends(3) == 180' failed.
Aborted (core dumped)


CPP_116.cpp: Compilation Failed
Error: ./CPP_116.cpp: In function ‘void _Z10sort_arraySt6vectorIiSaIiEE(void*, void*)’:
./CPP_116.cpp:60:5: error: ‘_ZSt20__throw_length_errorPKc’ was not declared in this scope
   60 |     _ZSt20__throw_length_errorPKc("vector::_M_realloc_insert");
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_116.cpp: At global scope:
./CPP_116.cpp:144:13: error: ‘vector’ was not declared in this scope
  144 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_116.cpp:144:20: error: expected primary-expression before ‘int’
  144 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_116.cpp:144:27: error: ‘vector’ was not declared in this scope
  144 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_116.cpp:144:34: error: expected primary-expression before ‘int’
  144 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_116.cpp:144:39: error: expression list treated as compound expression in initializer [-fpermissive]
  144 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_116.cpp:143:
./CPP_116.cpp: In function ‘int main()’:
./CPP_116.cpp:153:20: error: ‘sort_array’ was not declared in this scope
  153 |     assert (issame(sort_array({1,5,2,3,4}) , {1, 2, 4, 3, 5}));
      |                    ^~~~~~~~~~
./CPP_116.cpp:153:61: error: ‘issame’ cannot be used as a function
  153 |     assert (issame(sort_array({1,5,2,3,4}) , {1, 2, 4, 3, 5}));
      |                                                             ^
./CPP_116.cpp:154:71: error: ‘issame’ cannot be used as a function
  154 |     assert (issame(sort_array({-2,-3,-4,-5,-6}) , {-4, -2, -6, -5, -3}));
      |                                                                       ^
./CPP_116.cpp:155:61: error: ‘issame’ cannot be used as a function
  155 |     assert (issame(sort_array({1,0,2,3,4}) , {0, 1, 2, 4, 3}));
      |                                                             ^
./CPP_116.cpp:156:39: error: ‘issame’ cannot be used as a function
  156 |     assert (issame(sort_array({}) , {}));
      |                                       ^
./CPP_116.cpp:157:93: error: ‘issame’ cannot be used as a function
  157 |     assert (issame(sort_array({2,5,77,4,5,3,5,7,2,3,4}) , {2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77}));
      |                                                                                             ^
./CPP_116.cpp:158:72: error: ‘issame’ cannot be used as a function
  158 |     assert (issame(sort_array({3,6,44,12,32,5}) , {32, 3, 5, 6, 12, 44}));
      |                                                                        ^
./CPP_116.cpp:159:65: error: ‘issame’ cannot be used as a function
  159 |     assert (issame(sort_array({2,4,8,16,32}) , {2, 4, 8, 16, 32}));
      |                                                                 ^
./CPP_116.cpp:160:65: error: ‘issame’ cannot be used as a function
  160 |     assert (issame(sort_array({2,4,8,16,32}) , {2, 4, 8, 16, 32}));
      |                                                                 ^


CPP_99.cpp: Compilation Failed
Error: ./CPP_99.cpp: In function ‘int closest_integer(const char*)’:
./CPP_99.cpp:7:17: error: ‘round’ was not declared in this scope
    7 |     return (int)round(num);
      |                 ^~~~~


CPP_82.cpp: Compilation Failed
Error: In file included from ./CPP_82.cpp:31:
./CPP_82.cpp: In function ‘int main()’:
./CPP_82.cpp:33:26: error: cannot convert ‘const char*’ to ‘basic_string*’
   33 |     assert (prime_length("Hello") == true);
      |                          ^~~~~~~
      |                          |
      |                          const char*
./CPP_82.cpp:13:33: note:   initializing argument 1 of ‘bool prime_length(basic_string*)’
   13 | bool prime_length(basic_string* s) {
      |                   ~~~~~~~~~~~~~~^
In file included from ./CPP_82.cpp:31:
./CPP_82.cpp:34:26: error: cannot convert ‘const char*’ to ‘basic_string*’
   34 |     assert (prime_length("abcdcba") == true);
      |                          ^~~~~~~~~
      |                          |
      |                          const char*
./CPP_82.cpp:13:33: note:   initializing argument 1 of ‘bool prime_length(basic_string*)’
   13 | bool prime_length(basic_string* s) {
      |                   ~~~~~~~~~~~~~~^
In file included from ./CPP_82.cpp:31:
./CPP_82.cpp:35:26: error: cannot convert ‘const char*’ to ‘basic_string*’
   35 |     assert (prime_length("kittens") == true);
      |                          ^~~~~~~~~
      |                          |
      |                          const char*
./CPP_82.cpp:13:33: note:   initializing argument 1 of ‘bool prime_length(basic_string*)’
   13 | bool prime_length(basic_string* s) {
      |                   ~~~~~~~~~~~~~~^
In file included from ./CPP_82.cpp:31:
./CPP_82.cpp:36:26: error: cannot convert ‘const char*’ to ‘basic_string*’
   36 |     assert (prime_length("orange") == false);
      |                          ^~~~~~~~
      |                          |
      |                          const char*
./CPP_82.cpp:13:33: note:   initializing argument 1 of ‘bool prime_length(basic_string*)’
   13 | bool prime_length(basic_string* s) {
      |                   ~~~~~~~~~~~~~~^
In file included from ./CPP_82.cpp:31:
./CPP_82.cpp:37:26: error: cannot convert ‘const char*’ to ‘basic_string*’
   37 |     assert (prime_length("wow") == true);
      |                          ^~~~~
      |                          |
      |                          const char*
./CPP_82.cpp:13:33: note:   initializing argument 1 of ‘bool prime_length(basic_string*)’
   13 | bool prime_length(basic_string* s) {
      |                   ~~~~~~~~~~~~~~^
In file included from ./CPP_82.cpp:31:
./CPP_82.cpp:38:26: error: cannot convert ‘const char*’ to ‘basic_string*’
   38 |     assert (prime_length("world") == true);
      |                          ^~~~~~~
      |                          |
      |                          const char*
./CPP_82.cpp:13:33: note:   initializing argument 1 of ‘bool prime_length(basic_string*)’
   13 | bool prime_length(basic_string* s) {
      |                   ~~~~~~~~~~~~~~^
In file included from ./CPP_82.cpp:31:
./CPP_82.cpp:39:26: error: cannot convert ‘const char*’ to ‘basic_string*’
   39 |     assert (prime_length("MadaM") == true);
      |                          ^~~~~~~
      |                          |
      |                          const char*
./CPP_82.cpp:13:33: note:   initializing argument 1 of ‘bool prime_length(basic_string*)’
   13 | bool prime_length(basic_string* s) {
      |                   ~~~~~~~~~~~~~~^
In file included from ./CPP_82.cpp:31:
./CPP_82.cpp:40:26: error: cannot convert ‘const char*’ to ‘basic_string*’
   40 |     assert (prime_length("Wow") == true);
      |                          ^~~~~
      |                          |
      |                          const char*
./CPP_82.cpp:13:33: note:   initializing argument 1 of ‘bool prime_length(basic_string*)’
   13 | bool prime_length(basic_string* s) {
      |                   ~~~~~~~~~~~~~~^
In file included from ./CPP_82.cpp:31:
./CPP_82.cpp:41:26: error: cannot convert ‘const char*’ to ‘basic_string*’
   41 |     assert (prime_length("") == false);
      |                          ^~
      |                          |
      |                          const char*
./CPP_82.cpp:13:33: note:   initializing argument 1 of ‘bool prime_length(basic_string*)’
   13 | bool prime_length(basic_string* s) {
      |                   ~~~~~~~~~~~~~~^
In file included from ./CPP_82.cpp:31:
./CPP_82.cpp:42:26: error: cannot convert ‘const char*’ to ‘basic_string*’
   42 |     assert (prime_length("HI") == true);
      |                          ^~~~
      |                          |
      |                          const char*
./CPP_82.cpp:13:33: note:   initializing argument 1 of ‘bool prime_length(basic_string*)’
   13 | bool prime_length(basic_string* s) {
      |                   ~~~~~~~~~~~~~~^
In file included from ./CPP_82.cpp:31:
./CPP_82.cpp:43:26: error: cannot convert ‘const char*’ to ‘basic_string*’
   43 |     assert (prime_length("go") == true);
      |                          ^~~~
      |                          |
      |                          const char*
./CPP_82.cpp:13:33: note:   initializing argument 1 of ‘bool prime_length(basic_string*)’
   13 | bool prime_length(basic_string* s) {
      |                   ~~~~~~~~~~~~~~^
In file included from ./CPP_82.cpp:31:
./CPP_82.cpp:44:26: error: cannot convert ‘const char*’ to ‘basic_string*’
   44 |     assert (prime_length("gogo") == false);
      |                          ^~~~~~
      |                          |
      |                          const char*
./CPP_82.cpp:13:33: note:   initializing argument 1 of ‘bool prime_length(basic_string*)’
   13 | bool prime_length(basic_string* s) {
      |                   ~~~~~~~~~~~~~~^
In file included from ./CPP_82.cpp:31:
./CPP_82.cpp:45:26: error: cannot convert ‘const char*’ to ‘basic_string*’
   45 |     assert (prime_length("aaaaaaaaaaaaaaa") == false);
      |                          ^~~~~~~~~~~~~~~~~
      |                          |
      |                          const char*
./CPP_82.cpp:13:33: note:   initializing argument 1 of ‘bool prime_length(basic_string*)’
   13 | bool prime_length(basic_string* s) {
      |                   ~~~~~~~~~~~~~~^
In file included from ./CPP_82.cpp:31:
./CPP_82.cpp:46:26: error: cannot convert ‘const char*’ to ‘basic_string*’
   46 |     assert (prime_length("Madam") == true);
      |                          ^~~~~~~
      |                          |
      |                          const char*
./CPP_82.cpp:13:33: note:   initializing argument 1 of ‘bool prime_length(basic_string*)’
   13 | bool prime_length(basic_string* s) {
      |                   ~~~~~~~~~~~~~~^
In file included from ./CPP_82.cpp:31:
./CPP_82.cpp:47:26: error: cannot convert ‘const char*’ to ‘basic_string*’
   47 |     assert (prime_length("M") == false);
      |                          ^~~
      |                          |
      |                          const char*
./CPP_82.cpp:13:33: note:   initializing argument 1 of ‘bool prime_length(basic_string*)’
   13 | bool prime_length(basic_string* s) {
      |                   ~~~~~~~~~~~~~~^
In file included from ./CPP_82.cpp:31:
./CPP_82.cpp:48:26: error: cannot convert ‘const char*’ to ‘basic_string*’
   48 |     assert (prime_length("0") == false);
      |                          ^~~
      |                          |
      |                          const char*
./CPP_82.cpp:13:33: note:   initializing argument 1 of ‘bool prime_length(basic_string*)’
   13 | bool prime_length(basic_string* s) {
      |                   ~~~~~~~~~~~~~~^


CPP_39.cpp: Execution Failed
Error: CPP_39: ./CPP_39.cpp:17: int main(): Assertion `prime_fib(1) == 2' failed.
Aborted (core dumped)


CPP_56.cpp: Compilation Failed
Error: In file included from ./CPP_56.cpp:26:
./CPP_56.cpp: In function ‘int main()’:
./CPP_56.cpp:28:36: error: too few arguments to function ‘bool correct_bracketing(const char*, uint64_t)’
   28 |     assert (correct_bracketing("<>"));
      |                                    ^
./CPP_56.cpp:4:6: note: declared here
    4 | bool correct_bracketing(const char *s, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:29:40: error: too few arguments to function ‘bool correct_bracketing(const char*, uint64_t)’
   29 |     assert (correct_bracketing("<<><>>"));
      |                                        ^
./CPP_56.cpp:4:6: note: declared here
    4 | bool correct_bracketing(const char *s, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:30:46: error: too few arguments to function ‘bool correct_bracketing(const char*, uint64_t)’
   30 |     assert (correct_bracketing("<><><<><>><>"));
      |                                              ^
./CPP_56.cpp:4:6: note: declared here
    4 | bool correct_bracketing(const char *s, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:31:60: error: too few arguments to function ‘bool correct_bracketing(const char*, uint64_t)’
   31 |     assert (correct_bracketing("<><><<<><><>><>><<><><<>>>"));
      |                                                            ^
./CPP_56.cpp:4:6: note: declared here
    4 | bool correct_bracketing(const char *s, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:32:48: error: too few arguments to function ‘bool correct_bracketing(const char*, uint64_t)’
   32 |     assert (not (correct_bracketing("<<<><>>>>")));
      |                                                ^
./CPP_56.cpp:4:6: note: declared here
    4 | bool correct_bracketing(const char *s, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:33:43: error: too few arguments to function ‘bool correct_bracketing(const char*, uint64_t)’
   33 |     assert (not (correct_bracketing("><<>")));
      |                                           ^
./CPP_56.cpp:4:6: note: declared here
    4 | bool correct_bracketing(const char *s, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:34:40: error: too few arguments to function ‘bool correct_bracketing(const char*, uint64_t)’
   34 |     assert (not (correct_bracketing("<")));
      |                                        ^
./CPP_56.cpp:4:6: note: declared here
    4 | bool correct_bracketing(const char *s, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:35:43: error: too few arguments to function ‘bool correct_bracketing(const char*, uint64_t)’
   35 |     assert (not (correct_bracketing("<<<<")));
      |                                           ^
./CPP_56.cpp:4:6: note: declared here
    4 | bool correct_bracketing(const char *s, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:36:40: error: too few arguments to function ‘bool correct_bracketing(const char*, uint64_t)’
   36 |     assert (not (correct_bracketing(">")));
      |                                        ^
./CPP_56.cpp:4:6: note: declared here
    4 | bool correct_bracketing(const char *s, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:37:42: error: too few arguments to function ‘bool correct_bracketing(const char*, uint64_t)’
   37 |     assert (not (correct_bracketing("<<>")));
      |                                          ^
./CPP_56.cpp:4:6: note: declared here
    4 | bool correct_bracketing(const char *s, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:38:55: error: too few arguments to function ‘bool correct_bracketing(const char*, uint64_t)’
   38 |     assert (not (correct_bracketing("<><><<><>><>><<>")));
      |                                                       ^
./CPP_56.cpp:4:6: note: declared here
    4 | bool correct_bracketing(const char *s, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:39:55: error: too few arguments to function ‘bool correct_bracketing(const char*, uint64_t)’
   39 |     assert (not (correct_bracketing("<><><<><>><>>><>")));
      |                                                       ^
./CPP_56.cpp:4:6: note: declared here
    4 | bool correct_bracketing(const char *s, uint64_t length) {
      |      ^~~~~~~~~~~~~~~~~~


CPP_11.cpp: Compilation Failed
Error: ./CPP_11.cpp:3:22: error: variable or field ‘string_xor’ declared void
    3 | void string_xor(std::string* result, const std::string* str1, const std::string* str2) {
      |                      ^~~~~~
./CPP_11.cpp:3:22: error: ‘string’ is not a member of ‘std’
./CPP_11.cpp:2:1: note: ‘std::string’ is defined in header ‘<string>’; did you forget to ‘#include <string>’?
    1 | #include <string.h>
  +++ |+#include <string>
    2 | 
./CPP_11.cpp:3:30: error: ‘result’ was not declared in this scope
    3 | void string_xor(std::string* result, const std::string* str1, const std::string* str2) {
      |                              ^~~~~~
./CPP_11.cpp:3:38: error: expected primary-expression before ‘const’
    3 | void string_xor(std::string* result, const std::string* str1, const std::string* str2) {
      |                                      ^~~~~
./CPP_11.cpp:3:63: error: expected primary-expression before ‘const’
    3 | void string_xor(std::string* result, const std::string* str1, const std::string* str2) {
      |                                                               ^~~~~
In file included from ./CPP_11.cpp:37:
./CPP_11.cpp: In function ‘int main()’:
./CPP_11.cpp:39:13: error: ‘string_xor’ was not declared in this scope
   39 |     assert (string_xor("111000", "101010") == "010010");
      |             ^~~~~~~~~~


CPP_146.cpp: Compilation Failed
Error: In file included from ./CPP_146.cpp:20:
./CPP_146.cpp: In function ‘int main()’:
./CPP_146.cpp:22:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   22 |     assert (specialFilter({5, -2, 1, -5}) == 0  );
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_146.cpp:5:24: note:   initializing argument 1 of ‘int specialFilter(int*, int)’
    5 | int specialFilter(int* arr, int size) {
      |                   ~~~~~^~~
In file included from ./CPP_146.cpp:20:
./CPP_146.cpp:23:45: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   23 |     assert (specialFilter({15, -73, 14, -15}) == 1);
      |                                             ^
      |                                             |
      |                                             <brace-enclosed initializer list>
./CPP_146.cpp:5:24: note:   initializing argument 1 of ‘int specialFilter(int*, int)’
    5 | int specialFilter(int* arr, int size) {
      |                   ~~~~~^~~
In file included from ./CPP_146.cpp:20:
./CPP_146.cpp:24:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   24 |     assert (specialFilter({33, -2, -3, 45, 21, 109}) == 2);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_146.cpp:5:24: note:   initializing argument 1 of ‘int specialFilter(int*, int)’
    5 | int specialFilter(int* arr, int size) {
      |                   ~~~~~^~~
In file included from ./CPP_146.cpp:20:
./CPP_146.cpp:25:55: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   25 |     assert (specialFilter({43, -12, 93, 125, 121, 109}) == 4);
      |                                                       ^
      |                                                       |
      |                                                       <brace-enclosed initializer list>
./CPP_146.cpp:5:24: note:   initializing argument 1 of ‘int specialFilter(int*, int)’
    5 | int specialFilter(int* arr, int size) {
      |                   ~~~~~^~~
In file included from ./CPP_146.cpp:20:
./CPP_146.cpp:26:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   26 |     assert (specialFilter({71, -2, -33, 75, 21, 19}) == 3);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_146.cpp:5:24: note:   initializing argument 1 of ‘int specialFilter(int*, int)’
    5 | int specialFilter(int* arr, int size) {
      |                   ~~~~~^~~
In file included from ./CPP_146.cpp:20:
./CPP_146.cpp:27:30: error: invalid conversion from ‘int’ to ‘int*’ [-fpermissive]
   27 |     assert (specialFilter({1}) == 0              );
      |                              ^
      |                              |
      |                              int
./CPP_146.cpp:27:30: error: too few arguments to function ‘int specialFilter(int*, int)’
./CPP_146.cpp:5:5: note: declared here
    5 | int specialFilter(int* arr, int size) {
      |     ^~~~~~~~~~~~~
In file included from ./CPP_146.cpp:20:
./CPP_146.cpp:28:29: error: too few arguments to function ‘int specialFilter(int*, int)’
   28 |     assert (specialFilter({}) == 0                   );
      |                             ^
./CPP_146.cpp:5:5: note: declared here
    5 | int specialFilter(int* arr, int size) {
      |     ^~~~~~~~~~~~~


CPP_59.cpp: Execution Failed
Error: CPP_59: ./CPP_59.cpp:18: int main(): Assertion `largest_prime_factor(27) == 3' failed.
Aborted (core dumped)


CPP_77.cpp: Compilation Failed
Error: ./CPP_77.cpp: In function ‘int iscuber(int)’:
./CPP_77.cpp:11:12: error: ‘cube’ was not declared in this scope; did you mean ‘iscuber’?
   11 |     return cube <= abs_x;
      |            ^~~~
      |            iscuber


CPP_0.cpp: Compilation Failed
Error: ./CPP_0.cpp: In function ‘int main()’:
./CPP_0.cpp:41:5: error: ‘vector’ was not declared in this scope
   41 |     vector<float> a={1.0, 2.0, 3.9, 4.0, 5.0, 2.2};
      |     ^~~~~~
./CPP_0.cpp:41:12: error: expected primary-expression before ‘float’
   41 |     vector<float> a={1.0, 2.0, 3.9, 4.0, 5.0, 2.2};
      |            ^~~~~
In file included from ./CPP_0.cpp:39:
./CPP_0.cpp:42:32: error: ‘a’ was not declared in this scope
   42 |     assert (has_close_elements(a, 0.3)==true);
      |                                ^
./CPP_0.cpp:45:63: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   45 |     assert (has_close_elements({1.0, 2.0, 5.9, 4.0, 5.0}, 0.95) == true);
      |                                                               ^
      |                                                               |
      |                                                               <brace-enclosed initializer list>
./CPP_0.cpp:19:36: note:   initializing argument 1 of ‘int has_close_elements(std_vector*, float)’
   19 | int has_close_elements(std_vector* v, float threshold) {
      |                        ~~~~~~~~~~~~^
In file included from ./CPP_0.cpp:39:
./CPP_0.cpp:46:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   46 |     assert (has_close_elements({1.0, 2.0, 5.9, 4.0, 5.0}, 0.8) ==false);
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_0.cpp:19:36: note:   initializing argument 1 of ‘int has_close_elements(std_vector*, float)’
   19 | int has_close_elements(std_vector* v, float threshold) {
      |                        ~~~~~~~~~~~~^
In file included from ./CPP_0.cpp:39:
./CPP_0.cpp:47:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   47 |     assert (has_close_elements({1.0, 2.0, 3.0, 4.0, 5.0}, 2.0) == true);
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_0.cpp:19:36: note:   initializing argument 1 of ‘int has_close_elements(std_vector*, float)’
   19 | int has_close_elements(std_vector* v, float threshold) {
      |                        ~~~~~~~~~~~~^
In file included from ./CPP_0.cpp:39:
./CPP_0.cpp:48:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   48 |     assert (has_close_elements({1.1, 2.2, 3.1, 4.1, 5.1}, 1.0) == true);
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_0.cpp:19:36: note:   initializing argument 1 of ‘int has_close_elements(std_vector*, float)’
   19 | int has_close_elements(std_vector* v, float threshold) {
      |                        ~~~~~~~~~~~~^
In file included from ./CPP_0.cpp:39:
./CPP_0.cpp:49:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   49 |     assert (has_close_elements({1.1, 2.2, 3.1, 4.1, 5.1}, 0.5) == false);
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_0.cpp:19:36: note:   initializing argument 1 of ‘int has_close_elements(std_vector*, float)’
   19 | int has_close_elements(std_vector* v, float threshold) {
      |                        ~~~~~~~~~~~~^


CPP_127.cpp: Compilation Failed
Error: ./CPP_127.cpp:3:24: error: variable or field ‘intersection’ declared void
    3 | void intersection(std::string* result, std::vector<int>* v1, std::vector<int>* v2) {
      |                        ^~~~~~
./CPP_127.cpp:3:24: error: ‘string’ is not a member of ‘std’
./CPP_127.cpp:2:1: note: ‘std::string’ is defined in header ‘<string>’; did you forget to ‘#include <string>’?
    1 | #include <string.h>
  +++ |+#include <string>
    2 | 
./CPP_127.cpp:3:32: error: ‘result’ was not declared in this scope
    3 | void intersection(std::string* result, std::vector<int>* v1, std::vector<int>* v2) {
      |                                ^~~~~~
./CPP_127.cpp:3:45: error: ‘vector’ is not a member of ‘std’
    3 | void intersection(std::string* result, std::vector<int>* v1, std::vector<int>* v2) {
      |                                             ^~~~~~
./CPP_127.cpp:2:1: note: ‘std::vector’ is defined in header ‘<vector>’; did you forget to ‘#include <vector>’?
    1 | #include <string.h>
  +++ |+#include <vector>
    2 | 
./CPP_127.cpp:3:52: error: expected primary-expression before ‘int’
    3 | void intersection(std::string* result, std::vector<int>* v1, std::vector<int>* v2) {
      |                                                    ^~~
./CPP_127.cpp:3:67: error: ‘vector’ is not a member of ‘std’
    3 | void intersection(std::string* result, std::vector<int>* v1, std::vector<int>* v2) {
      |                                                                   ^~~~~~
./CPP_127.cpp:3:67: note: ‘std::vector’ is defined in header ‘<vector>’; did you forget to ‘#include <vector>’?
./CPP_127.cpp:3:74: error: expected primary-expression before ‘int’
    3 | void intersection(std::string* result, std::vector<int>* v1, std::vector<int>* v2) {
      |                                                                          ^~~
In file included from ./CPP_127.cpp:42:
./CPP_127.cpp: In function ‘int main()’:
./CPP_127.cpp:44:13: error: ‘intersection’ was not declared in this scope
   44 |     assert (intersection({1, 2}, {2, 3}) == "NO");
      |             ^~~~~~~~~~~~


CPP_122.cpp: Compilation Failed
Error: In file included from ./CPP_122.cpp:18:
./CPP_122.cpp: In function ‘int main()’:
./CPP_122.cpp:20:56: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   20 |     assert (add_elements({1,-2,-3,41,57,76,87,88,99}, 3) == -4);
      |                                                        ^
      |                                                        |
      |                                                        <brace-enclosed initializer list>
./CPP_122.cpp:3:23: note:   initializing argument 1 of ‘int add_elements(int*, int)’
    3 | int add_elements(int* arr, int size) {
      |                  ~~~~~^~~
In file included from ./CPP_122.cpp:18:
./CPP_122.cpp:21:49: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   21 |     assert (add_elements({111,121,3,4000,5,6}, 2) == 0);
      |                                                 ^
      |                                                 |
      |                                                 <brace-enclosed initializer list>
./CPP_122.cpp:3:23: note:   initializing argument 1 of ‘int add_elements(int*, int)’
    3 | int add_elements(int* arr, int size) {
      |                  ~~~~~^~~
In file included from ./CPP_122.cpp:18:
./CPP_122.cpp:22:51: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   22 |     assert (add_elements({11,21,3,90,5,6,7,8,9}, 4) == 125);
      |                                                   ^
      |                                                   |
      |                                                   <brace-enclosed initializer list>
./CPP_122.cpp:3:23: note:   initializing argument 1 of ‘int add_elements(int*, int)’
    3 | int add_elements(int* arr, int size) {
      |                  ~~~~~^~~
In file included from ./CPP_122.cpp:18:
./CPP_122.cpp:23:54: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   23 |     assert (add_elements({111,21,3,4000,5,6,7,8,9}, 4) == 24);
      |                                                      ^
      |                                                      |
      |                                                      <brace-enclosed initializer list>
./CPP_122.cpp:3:23: note:   initializing argument 1 of ‘int add_elements(int*, int)’
    3 | int add_elements(int* arr, int size) {
      |                  ~~~~~^~~
In file included from ./CPP_122.cpp:18:
./CPP_122.cpp:24:32: error: invalid conversion from ‘int’ to ‘int*’ [-fpermissive]
   24 |     assert (add_elements({1}, 1) == 1);
      |                                ^
      |                                |
      |                                int
./CPP_122.cpp:3:23: note:   initializing argument 1 of ‘int add_elements(int*, int)’
    3 | int add_elements(int* arr, int size) {
      |                  ~~~~~^~~


CPP_49.cpp: Execution Failed
Error: CPP_49: ./CPP_49.cpp:36: int main(): Assertion `modp(1101, 101) == 2' failed.
Aborted (core dumped)


CPP_55.cpp: Compilation Failed
Error: In file included from ./CPP_55.cpp:25:
./CPP_55.cpp: In function ‘int main()’:
./CPP_55.cpp:27:13: error: ‘fib’ was not declared in this scope
   27 |     assert (fib(10) == 55);
      |             ^~~


CPP_115.cpp: Compilation Failed
Error: ./CPP_115.cpp: In function ‘int max_fill(int**, int, int)’:
./CPP_115.cpp:11:31: error: invalid types ‘int[int]’ for array subscript
   11 |             sum += vec[i][0][j];
      |                               ^
./CPP_115.cpp: In function ‘int main()’:
./CPP_115.cpp:20:24: error: ‘malloc’ was not declared in this scope
   20 |     int** vec = (int**)malloc(10 * sizeof(int*));
      |                        ^~~~~~
./CPP_115.cpp:3:1: note: ‘malloc’ is defined in header ‘<cstdlib>’; did you forget to ‘#include <cstdlib>’?
    2 | #include <stdint.h>
  +++ |+#include <cstdlib>
    3 | 
./CPP_115.cpp:26:24: error: invalid types ‘int[int]’ for array subscript
   26 |             vec[i][0][j] = j;
      |                        ^
./CPP_115.cpp: At global scope:
./CPP_115.cpp:38:5: error: redefinition of ‘int main()’
   38 | int main(){
      |     ^~~~
./CPP_115.cpp:18:5: note: ‘int main()’ previously defined here
   18 | int main() {
      |     ^~~~
In file included from ./CPP_115.cpp:37:
./CPP_115.cpp: In function ‘int main()’:
./CPP_115.cpp:39:58: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int**’
   39 |     assert (max_fill({{0,0,1,0}, {0,1,0,0}, {1,1,1,1}}, 1) == 6);
      |                                                          ^
      |                                                          |
      |                                                          <brace-enclosed initializer list>
./CPP_115.cpp:6:20: note:   initializing argument 1 of ‘int max_fill(int**, int, int)’
    6 | int max_fill(int** vec, int size, int fill_value) {
      |              ~~~~~~^~~
In file included from ./CPP_115.cpp:37:
./CPP_115.cpp:40:69: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int**’
   40 |     assert (max_fill({{0,0,1,1}, {0,0,0,0}, {1,1,1,1}, {0,1,1,1}}, 2) == 5);
      |                                                                     ^
      |                                                                     |
      |                                                                     <brace-enclosed initializer list>
./CPP_115.cpp:6:20: note:   initializing argument 1 of ‘int max_fill(int**, int, int)’
    6 | int max_fill(int** vec, int size, int fill_value) {
      |              ~~~~~~^~~
In file included from ./CPP_115.cpp:37:
./CPP_115.cpp:41:43: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int**’
   41 |     assert (max_fill({{0,0,0}, {0,0,0}}, 5) == 0);
      |                                           ^
      |                                           |
      |                                           <brace-enclosed initializer list>
./CPP_115.cpp:6:20: note:   initializing argument 1 of ‘int max_fill(int**, int, int)’
    6 | int max_fill(int** vec, int size, int fill_value) {
      |              ~~~~~~^~~
In file included from ./CPP_115.cpp:37:
./CPP_115.cpp:42:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int**’
   42 |     assert (max_fill({{1,1,1,1}, {1,1,1,1}}, 2) == 4);
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_115.cpp:6:20: note:   initializing argument 1 of ‘int max_fill(int**, int, int)’
    6 | int max_fill(int** vec, int size, int fill_value) {
      |              ~~~~~~^~~
In file included from ./CPP_115.cpp:37:
./CPP_115.cpp:43:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int**’
   43 |     assert (max_fill({{1,1,1,1}, {1,1,1,1}}, 9) == 2);
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_115.cpp:6:20: note:   initializing argument 1 of ‘int max_fill(int**, int, int)’
    6 | int max_fill(int** vec, int size, int fill_value) {
      |              ~~~~~~^~~


CPP_40.cpp: Compilation Failed
Error: In file included from ./CPP_40.cpp:21:
./CPP_40.cpp: In function ‘int main()’:
./CPP_40.cpp:23:45: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   23 |     assert (triples_sum_to_zero({1, 3, 5, 0}) == false);
      |                                             ^
      |                                             |
      |                                             <brace-enclosed initializer list>
./CPP_40.cpp:4:31: note:   initializing argument 1 of ‘bool triples_sum_to_zero(int*, int)’
    4 | bool triples_sum_to_zero(int* arr, int size) {
      |                          ~~~~~^~~
In file included from ./CPP_40.cpp:21:
./CPP_40.cpp:24:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   24 |     assert (triples_sum_to_zero({1, 3, 5, -1}) == false);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_40.cpp:4:31: note:   initializing argument 1 of ‘bool triples_sum_to_zero(int*, int)’
    4 | bool triples_sum_to_zero(int* arr, int size) {
      |                          ~~~~~^~~
In file included from ./CPP_40.cpp:21:
./CPP_40.cpp:25:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   25 |     assert (triples_sum_to_zero({1, 3, -2, 1}) == true);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_40.cpp:4:31: note:   initializing argument 1 of ‘bool triples_sum_to_zero(int*, int)’
    4 | bool triples_sum_to_zero(int* arr, int size) {
      |                          ~~~~~^~~
In file included from ./CPP_40.cpp:21:
./CPP_40.cpp:26:45: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   26 |     assert (triples_sum_to_zero({1, 2, 3, 7}) == false);
      |                                             ^
      |                                             |
      |                                             <brace-enclosed initializer list>
./CPP_40.cpp:4:31: note:   initializing argument 1 of ‘bool triples_sum_to_zero(int*, int)’
    4 | bool triples_sum_to_zero(int* arr, int size) {
      |                          ~~~~~^~~
In file included from ./CPP_40.cpp:21:
./CPP_40.cpp:27:45: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   27 |     assert (triples_sum_to_zero({1, 2, 5, 7}) == false);
      |                                             ^
      |                                             |
      |                                             <brace-enclosed initializer list>
./CPP_40.cpp:4:31: note:   initializing argument 1 of ‘bool triples_sum_to_zero(int*, int)’
    4 | bool triples_sum_to_zero(int* arr, int size) {
      |                          ~~~~~^~~
In file included from ./CPP_40.cpp:21:
./CPP_40.cpp:28:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   28 |     assert (triples_sum_to_zero({2, 4, -5, 3, 9, 7}) == true);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_40.cpp:4:31: note:   initializing argument 1 of ‘bool triples_sum_to_zero(int*, int)’
    4 | bool triples_sum_to_zero(int* arr, int size) {
      |                          ~~~~~^~~
In file included from ./CPP_40.cpp:21:
./CPP_40.cpp:29:36: error: invalid conversion from ‘int’ to ‘int*’ [-fpermissive]
   29 |     assert (triples_sum_to_zero({1}) == false);
      |                                    ^
      |                                    |
      |                                    int
./CPP_40.cpp:29:36: error: too few arguments to function ‘bool triples_sum_to_zero(int*, int)’
./CPP_40.cpp:4:6: note: declared here
    4 | bool triples_sum_to_zero(int* arr, int size) {
      |      ^~~~~~~~~~~~~~~~~~~
In file included from ./CPP_40.cpp:21:
./CPP_40.cpp:30:48: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   30 |     assert (triples_sum_to_zero({1, 3, 5, -100}) == false);
      |                                                ^
      |                                                |
      |                                                <brace-enclosed initializer list>
./CPP_40.cpp:4:31: note:   initializing argument 1 of ‘bool triples_sum_to_zero(int*, int)’
    4 | bool triples_sum_to_zero(int* arr, int size) {
      |                          ~~~~~^~~
In file included from ./CPP_40.cpp:21:
./CPP_40.cpp:31:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   31 |     assert (triples_sum_to_zero({100, 3, 5, -100}) == false);
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_40.cpp:4:31: note:   initializing argument 1 of ‘bool triples_sum_to_zero(int*, int)’
    4 | bool triples_sum_to_zero(int* arr, int size) {
      |                          ~~~~~^~~


CPP_130.cpp: Compilation Failed
Error: ./CPP_130.cpp:112:13: error: ‘vector’ was not declared in this scope
  112 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_130.cpp:112:20: error: expected primary-expression before ‘int’
  112 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_130.cpp:112:27: error: ‘vector’ was not declared in this scope
  112 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_130.cpp:112:34: error: expected primary-expression before ‘int’
  112 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_130.cpp:112:39: error: expression list treated as compound expression in initializer [-fpermissive]
  112 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
./CPP_130.cpp:120:5: error: redefinition of ‘int main()’
  120 | int main(){
      |     ^~~~
./CPP_130.cpp:104:5: note: ‘int main()’ previously defined here
  104 | int main() {
      |     ^~~~
In file included from ./CPP_130.cpp:111:
./CPP_130.cpp: In function ‘int main()’:
./CPP_130.cpp:121:20: error: ‘tri’ was not declared in this scope
  121 |     assert (issame(tri(3) , {1, 3, 2, 8}));
      |                    ^~~
./CPP_130.cpp:121:41: error: ‘issame’ cannot be used as a function
  121 |     assert (issame(tri(3) , {1, 3, 2, 8}));
      |                                         ^
./CPP_130.cpp:122:44: error: ‘issame’ cannot be used as a function
  122 |     assert (issame(tri(4) , {1, 3, 2, 8, 3}));
      |                                            ^
./CPP_130.cpp:123:48: error: ‘issame’ cannot be used as a function
  123 |     assert (issame(tri(5) , {1, 3, 2, 8, 3, 15}));
      |                                                ^
./CPP_130.cpp:124:51: error: ‘issame’ cannot be used as a function
  124 |     assert (issame(tri(6) , {1, 3, 2, 8, 3, 15, 4}));
      |                                                   ^
./CPP_130.cpp:125:55: error: ‘issame’ cannot be used as a function
  125 |     assert (issame(tri(7) , {1, 3, 2, 8, 3, 15, 4, 24}));
      |                                                       ^
./CPP_130.cpp:126:58: error: ‘issame’ cannot be used as a function
  126 |     assert (issame(tri(8) , {1, 3, 2, 8, 3, 15, 4, 24, 5}));
      |                                                          ^
./CPP_130.cpp:127:62: error: ‘issame’ cannot be used as a function
  127 |     assert (issame(tri(9) , {1, 3, 2, 8, 3, 15, 4, 24, 5, 35}));
      |                                                              ^
./CPP_130.cpp:128:104: error: ‘issame’ cannot be used as a function
  128 |     assert (issame(tri(20) , {1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11}));
      |                                                                                                        ^
./CPP_130.cpp:129:32: error: ‘issame’ cannot be used as a function
  129 |     assert (issame(tri(0) , {1}));
      |                                ^
./CPP_130.cpp:130:35: error: ‘issame’ cannot be used as a function
  130 |     assert (issame(tri(1) , {1, 3}));
      |                                   ^


CPP_48.cpp: Compilation Failed
Error: ./CPP_48.cpp: In function ‘void* _ZdlPv(void*)’:
./CPP_48.cpp:20:16: error: void value not ignored as it ought to be
   20 |     return free(p);
      |            ~~~~^~~
./CPP_48.cpp: In function ‘int is_palindrome(__cxx11_basic_string*)’:
./CPP_48.cpp:29:49: error: invalid conversion from ‘void*’ to ‘__cxx11_basic_string*’ [-fpermissive]
   29 |         __cxx11_basic_string* _M_string = malloc(sizeof(__cxx11_basic_string));
      |                                           ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                 |
      |                                                 void*
In file included from ./CPP_48.cpp:75:
./CPP_48.cpp: In function ‘int main()’:
./CPP_48.cpp:77:27: error: cannot convert ‘const char*’ to ‘__cxx11_basic_string*’
   77 |     assert (is_palindrome("") == true);
      |                           ^~
      |                           |
      |                           const char*
./CPP_48.cpp:23:41: note:   initializing argument 1 of ‘int is_palindrome(__cxx11_basic_string*)’
   23 | int is_palindrome(__cxx11_basic_string* s) {
      |                   ~~~~~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_48.cpp:75:
./CPP_48.cpp:78:27: error: cannot convert ‘const char*’ to ‘__cxx11_basic_string*’
   78 |     assert (is_palindrome("aba") == true);
      |                           ^~~~~
      |                           |
      |                           const char*
./CPP_48.cpp:23:41: note:   initializing argument 1 of ‘int is_palindrome(__cxx11_basic_string*)’
   23 | int is_palindrome(__cxx11_basic_string* s) {
      |                   ~~~~~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_48.cpp:75:
./CPP_48.cpp:79:27: error: cannot convert ‘const char*’ to ‘__cxx11_basic_string*’
   79 |     assert (is_palindrome("aaaaa") == true);
      |                           ^~~~~~~
      |                           |
      |                           const char*
./CPP_48.cpp:23:41: note:   initializing argument 1 of ‘int is_palindrome(__cxx11_basic_string*)’
   23 | int is_palindrome(__cxx11_basic_string* s) {
      |                   ~~~~~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_48.cpp:75:
./CPP_48.cpp:80:27: error: cannot convert ‘const char*’ to ‘__cxx11_basic_string*’
   80 |     assert (is_palindrome("zbcd") == false);
      |                           ^~~~~~
      |                           |
      |                           const char*
./CPP_48.cpp:23:41: note:   initializing argument 1 of ‘int is_palindrome(__cxx11_basic_string*)’
   23 | int is_palindrome(__cxx11_basic_string* s) {
      |                   ~~~~~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_48.cpp:75:
./CPP_48.cpp:81:27: error: cannot convert ‘const char*’ to ‘__cxx11_basic_string*’
   81 |     assert (is_palindrome("xywyx") == true);
      |                           ^~~~~~~
      |                           |
      |                           const char*
./CPP_48.cpp:23:41: note:   initializing argument 1 of ‘int is_palindrome(__cxx11_basic_string*)’
   23 | int is_palindrome(__cxx11_basic_string* s) {
      |                   ~~~~~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_48.cpp:75:
./CPP_48.cpp:82:27: error: cannot convert ‘const char*’ to ‘__cxx11_basic_string*’
   82 |     assert (is_palindrome("xywyz") == false);
      |                           ^~~~~~~
      |                           |
      |                           const char*
./CPP_48.cpp:23:41: note:   initializing argument 1 of ‘int is_palindrome(__cxx11_basic_string*)’
   23 | int is_palindrome(__cxx11_basic_string* s) {
      |                   ~~~~~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_48.cpp:75:
./CPP_48.cpp:83:27: error: cannot convert ‘const char*’ to ‘__cxx11_basic_string*’
   83 |     assert (is_palindrome("xywzx") == false);
      |                           ^~~~~~~
      |                           |
      |                           const char*
./CPP_48.cpp:23:41: note:   initializing argument 1 of ‘int is_palindrome(__cxx11_basic_string*)’
   23 | int is_palindrome(__cxx11_basic_string* s) {
      |                   ~~~~~~~~~~~~~~~~~~~~~~^


CPP_96.cpp: Compilation Failed
Error: ./CPP_96.cpp:108:13: error: ‘vector’ is not a template
  108 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_96.cpp:108:27: error: ‘vector’ is not a template
  108 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_96.cpp: In function ‘bool issame(vector, vector)’:
./CPP_96.cpp:109:11: error: ‘vector’ {aka ‘struct vector’} has no member named ‘size’
  109 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_96.cpp:109:21: error: ‘vector’ {aka ‘struct vector’} has no member named ‘size’
  109 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_96.cpp:110:22: error: ‘vector’ {aka ‘struct vector’} has no member named ‘size’
  110 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_96.cpp:112:10: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
  112 |     if (a[i]!=b[i]) return false;
      |          ^
./CPP_96.cpp:112:16: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
  112 |     if (a[i]!=b[i]) return false;
      |                ^
./CPP_96.cpp: At global scope:
./CPP_96.cpp:116:5: error: redefinition of ‘int main()’
  116 | int main(){
      |     ^~~~
./CPP_96.cpp:100:5: note: ‘int main()’ previously defined here
  100 | int main() {
      |     ^~~~
In file included from ./CPP_96.cpp:107:
./CPP_96.cpp: In function ‘int main()’:
./CPP_96.cpp:117:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
  117 |     assert (issame(count_up_to(5) , {2,3}));
      |                                ^
      |                                |
      |                                int
./CPP_96.cpp:117:33: error: too few arguments to function ‘void count_up_to(vector*, int)’
  117 |     assert (issame(count_up_to(5) , {2,3}));
      |                                 ^
./CPP_96.cpp:23:6: note: declared here
   23 | void count_up_to(vector* v, int n) {
      |      ^~~~~~~~~~~
In file included from ./CPP_96.cpp:107:
./CPP_96.cpp:118:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
  118 |     assert (issame(count_up_to(6) , {2,3,5}));
      |                                ^
      |                                |
      |                                int
./CPP_96.cpp:118:33: error: too few arguments to function ‘void count_up_to(vector*, int)’
  118 |     assert (issame(count_up_to(6) , {2,3,5}));
      |                                 ^
./CPP_96.cpp:23:6: note: declared here
   23 | void count_up_to(vector* v, int n) {
      |      ^~~~~~~~~~~
In file included from ./CPP_96.cpp:107:
./CPP_96.cpp:119:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
  119 |     assert (issame(count_up_to(7) , {2,3,5}));
      |                                ^
      |                                |
      |                                int
./CPP_96.cpp:119:33: error: too few arguments to function ‘void count_up_to(vector*, int)’
  119 |     assert (issame(count_up_to(7) , {2,3,5}));
      |                                 ^
./CPP_96.cpp:23:6: note: declared here
   23 | void count_up_to(vector* v, int n) {
      |      ^~~~~~~~~~~
In file included from ./CPP_96.cpp:107:
./CPP_96.cpp:120:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
  120 |     assert (issame(count_up_to(10) , {2,3,5,7}));
      |                                ^~
      |                                |
      |                                int
./CPP_96.cpp:120:34: error: too few arguments to function ‘void count_up_to(vector*, int)’
  120 |     assert (issame(count_up_to(10) , {2,3,5,7}));
      |                                  ^
./CPP_96.cpp:23:6: note: declared here
   23 | void count_up_to(vector* v, int n) {
      |      ^~~~~~~~~~~
In file included from ./CPP_96.cpp:107:
./CPP_96.cpp:121:33: error: too few arguments to function ‘void count_up_to(vector*, int)’
  121 |     assert (issame(count_up_to(0) , {}));
      |                                 ^
./CPP_96.cpp:23:6: note: declared here
   23 | void count_up_to(vector* v, int n) {
      |      ^~~~~~~~~~~
In file included from ./CPP_96.cpp:107:
./CPP_96.cpp:122:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
  122 |     assert (issame(count_up_to(22) , {2,3,5,7,11,13,17,19}));
      |                                ^~
      |                                |
      |                                int
./CPP_96.cpp:122:34: error: too few arguments to function ‘void count_up_to(vector*, int)’
  122 |     assert (issame(count_up_to(22) , {2,3,5,7,11,13,17,19}));
      |                                  ^
./CPP_96.cpp:23:6: note: declared here
   23 | void count_up_to(vector* v, int n) {
      |      ^~~~~~~~~~~
In file included from ./CPP_96.cpp:107:
./CPP_96.cpp:123:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
  123 |     assert (issame(count_up_to(1) , {}));
      |                                ^
      |                                |
      |                                int
./CPP_96.cpp:123:33: error: too few arguments to function ‘void count_up_to(vector*, int)’
  123 |     assert (issame(count_up_to(1) , {}));
      |                                 ^
./CPP_96.cpp:23:6: note: declared here
   23 | void count_up_to(vector* v, int n) {
      |      ^~~~~~~~~~~
In file included from ./CPP_96.cpp:107:
./CPP_96.cpp:124:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
  124 |     assert (issame(count_up_to(18) , {2,3,5,7,11,13,17}));
      |                                ^~
      |                                |
      |                                int
./CPP_96.cpp:124:34: error: too few arguments to function ‘void count_up_to(vector*, int)’
  124 |     assert (issame(count_up_to(18) , {2,3,5,7,11,13,17}));
      |                                  ^
./CPP_96.cpp:23:6: note: declared here
   23 | void count_up_to(vector* v, int n) {
      |      ^~~~~~~~~~~
In file included from ./CPP_96.cpp:107:
./CPP_96.cpp:125:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
  125 |     assert (issame(count_up_to(47) , {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43}));
      |                                ^~
      |                                |
      |                                int
./CPP_96.cpp:125:34: error: too few arguments to function ‘void count_up_to(vector*, int)’
  125 |     assert (issame(count_up_to(47) , {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43}));
      |                                  ^
./CPP_96.cpp:23:6: note: declared here
   23 | void count_up_to(vector* v, int n) {
      |      ^~~~~~~~~~~
In file included from ./CPP_96.cpp:107:
./CPP_96.cpp:126:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
  126 |     assert (issame(count_up_to(101) , {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}));
      |                                ^~~
      |                                |
      |                                int
./CPP_96.cpp:126:35: error: too few arguments to function ‘void count_up_to(vector*, int)’
  126 |     assert (issame(count_up_to(101) , {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}));
      |                                   ^
./CPP_96.cpp:23:6: note: declared here
   23 | void count_up_to(vector* v, int n) {
      |      ^~~~~~~~~~~


CPP_3.cpp: Compilation Failed
Error: In file included from ./CPP_3.cpp:27:
./CPP_3.cpp: In function ‘int main()’:
./CPP_3.cpp:29:26: error: too few arguments to function ‘bool below_zero(const int*, int)’
   29 |     assert (below_zero({}) == false);
      |                          ^
./CPP_3.cpp:4:6: note: declared here
    4 | bool below_zero(const int* data, int size) {
      |      ^~~~~~~~~~
In file included from ./CPP_3.cpp:27:
./CPP_3.cpp:30:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   30 |     assert (below_zero({1, 2, -3, 1, 2, -3}) == false);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_3.cpp:4:28: note:   initializing argument 1 of ‘bool below_zero(const int*, int)’
    4 | bool below_zero(const int* data, int size) {
      |                 ~~~~~~~~~~~^~~~
In file included from ./CPP_3.cpp:27:
./CPP_3.cpp:31:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   31 |     assert (below_zero({1, 2, -4, 5, 6}) == true);
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_3.cpp:4:28: note:   initializing argument 1 of ‘bool below_zero(const int*, int)’
    4 | bool below_zero(const int* data, int size) {
      |                 ~~~~~~~~~~~^~~~
In file included from ./CPP_3.cpp:27:
./CPP_3.cpp:32:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   32 |     assert (below_zero({1, -1, 2, -2, 5, -5, 4, -4}) == false);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_3.cpp:4:28: note:   initializing argument 1 of ‘bool below_zero(const int*, int)’
    4 | bool below_zero(const int* data, int size) {
      |                 ~~~~~~~~~~~^~~~
In file included from ./CPP_3.cpp:27:
./CPP_3.cpp:33:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   33 |     assert (below_zero({1, -1, 2, -2, 5, -5, 4, -5}) == true);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_3.cpp:4:28: note:   initializing argument 1 of ‘bool below_zero(const int*, int)’
    4 | bool below_zero(const int* data, int size) {
      |                 ~~~~~~~~~~~^~~~
In file included from ./CPP_3.cpp:27:
./CPP_3.cpp:34:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   34 |     assert (below_zero({1, -2, 2, -2, 5, -5, 4, -4}) == true);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_3.cpp:4:28: note:   initializing argument 1 of ‘bool below_zero(const int*, int)’
    4 | bool below_zero(const int* data, int size) {
      |                 ~~~~~~~~~~~^~~~


CPP_4.cpp: Compilation Failed
Error: In file included from ./CPP_4.cpp:26:
./CPP_4.cpp: In function ‘int main()’:
./CPP_4.cpp:28:56: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   28 |     assert (abs(mean_absolute_deviation({1.0, 2.0, 3.0}) - 2.0/3.0) < 1e-4);
      |                                                        ^
      |                                                        |
      |                                                        <brace-enclosed initializer list>
./CPP_4.cpp:5:38: note:   initializing argument 1 of ‘float mean_absolute_deviation(float*, int)’
    5 | float mean_absolute_deviation(float *vector, int length) {
      |                               ~~~~~~~^~~~~~
In file included from ./CPP_4.cpp:26:
./CPP_4.cpp:29:61: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   29 |     assert (abs(mean_absolute_deviation({1.0, 2.0, 3.0, 4.0}) - 1.0) < 1e-4);
      |                                                             ^
      |                                                             |
      |                                                             <brace-enclosed initializer list>
./CPP_4.cpp:5:38: note:   initializing argument 1 of ‘float mean_absolute_deviation(float*, int)’
    5 | float mean_absolute_deviation(float *vector, int length) {
      |                               ~~~~~~~^~~~~~
In file included from ./CPP_4.cpp:26:
./CPP_4.cpp:30:66: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   30 |     assert (abs(mean_absolute_deviation({1.0, 2.0, 3.0, 4.0, 5.0}) - 6.0/5.0) < 1e-4);
      |                                                                  ^
      |                                                                  |
      |                                                                  <brace-enclosed initializer list>
./CPP_4.cpp:5:38: note:   initializing argument 1 of ‘float mean_absolute_deviation(float*, int)’
    5 | float mean_absolute_deviation(float *vector, int length) {
      |                               ~~~~~~~^~~~~~


CPP_80.cpp: Execution Failed
Error: CPP_80: ./CPP_80.cpp:29: int main(): Assertion `is_happy("aabb") == false' failed.
Aborted (core dumped)


CPP_23.cpp: Compilation Failed
Error: In file included from ./CPP_23.cpp:19:
./CPP_23.cpp: In function ‘int main()’:
./CPP_23.cpp:21:20: error: cannot convert ‘const char*’ to ‘basic_string*’
   21 |     assert (strlen("") == 0);
      |                    ^~
      |                    |
      |                    const char*
./CPP_23.cpp:14:30: note:   initializing argument 1 of ‘int32_t strlen(basic_string*)’
   14 | int32_t strlen(basic_string *s) {
      |                ~~~~~~~~~~~~~~^
In file included from ./CPP_23.cpp:19:
./CPP_23.cpp:22:20: error: cannot convert ‘const char*’ to ‘basic_string*’
   22 |     assert (strlen("x") == 1);
      |                    ^~~
      |                    |
      |                    const char*
./CPP_23.cpp:14:30: note:   initializing argument 1 of ‘int32_t strlen(basic_string*)’
   14 | int32_t strlen(basic_string *s) {
      |                ~~~~~~~~~~~~~~^
In file included from ./CPP_23.cpp:19:
./CPP_23.cpp:23:21: error: cannot convert ‘const char*’ to ‘basic_string*’
   23 |      assert (strlen("asdasnakj") == 9);
      |                     ^~~~~~~~~~~
      |                     |
      |                     const char*
./CPP_23.cpp:14:30: note:   initializing argument 1 of ‘int32_t strlen(basic_string*)’
   14 | int32_t strlen(basic_string *s) {
      |                ~~~~~~~~~~~~~~^


CPP_136.cpp: Compilation Failed
Error: ./CPP_136.cpp:36:13: error: ‘vector’ was not declared in this scope
   36 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_136.cpp:36:20: error: expected primary-expression before ‘int’
   36 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_136.cpp:36:27: error: ‘vector’ was not declared in this scope
   36 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_136.cpp:36:34: error: expected primary-expression before ‘int’
   36 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_136.cpp:36:39: error: expression list treated as compound expression in initializer [-fpermissive]
   36 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_136.cpp:35:
./CPP_136.cpp: In function ‘int main()’:
./CPP_136.cpp:45:64: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int**’
   45 |     assert (issame(largest_smallest_integers({2, 4, 1, 3, 5, 7}) , {0, 1}));
      |                                                                ^
      |                                                                |
      |                                                                <brace-enclosed initializer list>
./CPP_136.cpp:4:38: note:   initializing argument 1 of ‘void largest_smallest_integers(int**, int*, int)’
    4 | void largest_smallest_integers(int** result, int* arr, int len) {
      |                                ~~~~~~^~~~~~
In file included from ./CPP_136.cpp:35:
./CPP_136.cpp:45:74: error: ‘issame’ cannot be used as a function
   45 |     assert (issame(largest_smallest_integers({2, 4, 1, 3, 5, 7}) , {0, 1}));
      |                                                                          ^
./CPP_136.cpp:46:67: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int**’
   46 |     assert (issame(largest_smallest_integers({2, 4, 1, 3, 5, 7, 0}) , {0, 1}));
      |                                                                   ^
      |                                                                   |
      |                                                                   <brace-enclosed initializer list>
./CPP_136.cpp:4:38: note:   initializing argument 1 of ‘void largest_smallest_integers(int**, int*, int)’
    4 | void largest_smallest_integers(int** result, int* arr, int len) {
      |                                ~~~~~~^~~~~~
In file included from ./CPP_136.cpp:35:
./CPP_136.cpp:46:77: error: ‘issame’ cannot be used as a function
   46 |     assert (issame(largest_smallest_integers({2, 4, 1, 3, 5, 7, 0}) , {0, 1}));
      |                                                                             ^
./CPP_136.cpp:47:68: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int**’
   47 |     assert (issame(largest_smallest_integers({1, 3, 2, 4, 5, 6, -2}) , {-2, 1}));
      |                                                                    ^
      |                                                                    |
      |                                                                    <brace-enclosed initializer list>
./CPP_136.cpp:4:38: note:   initializing argument 1 of ‘void largest_smallest_integers(int**, int*, int)’
    4 | void largest_smallest_integers(int** result, int* arr, int len) {
      |                                ~~~~~~^~~~~~
In file included from ./CPP_136.cpp:35:
./CPP_136.cpp:47:79: error: ‘issame’ cannot be used as a function
   47 |     assert (issame(largest_smallest_integers({1, 3, 2, 4, 5, 6, -2}) , {-2, 1}));
      |                                                                               ^
./CPP_136.cpp:48:68: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int**’
   48 |     assert (issame(largest_smallest_integers({4, 5, 3, 6, 2, 7, -7}) , {-7, 2}));
      |                                                                    ^
      |                                                                    |
      |                                                                    <brace-enclosed initializer list>
./CPP_136.cpp:4:38: note:   initializing argument 1 of ‘void largest_smallest_integers(int**, int*, int)’
    4 | void largest_smallest_integers(int** result, int* arr, int len) {
      |                                ~~~~~~^~~~~~
In file included from ./CPP_136.cpp:35:
./CPP_136.cpp:48:79: error: ‘issame’ cannot be used as a function
   48 |     assert (issame(largest_smallest_integers({4, 5, 3, 6, 2, 7, -7}) , {-7, 2}));
      |                                                                               ^
./CPP_136.cpp:49:71: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int**’
   49 |     assert (issame(largest_smallest_integers({7, 3, 8, 4, 9, 2, 5, -9}) , {-9, 2}));
      |                                                                       ^
      |                                                                       |
      |                                                                       <brace-enclosed initializer list>
./CPP_136.cpp:4:38: note:   initializing argument 1 of ‘void largest_smallest_integers(int**, int*, int)’
    4 | void largest_smallest_integers(int** result, int* arr, int len) {
      |                                ~~~~~~^~~~~~
In file included from ./CPP_136.cpp:35:
./CPP_136.cpp:49:82: error: ‘issame’ cannot be used as a function
   49 |     assert (issame(largest_smallest_integers({7, 3, 8, 4, 9, 2, 5, -9}) , {-9, 2}));
      |                                                                                  ^
./CPP_136.cpp:50:48: error: too few arguments to function ‘void largest_smallest_integers(int**, int*, int)’
   50 |     assert (issame(largest_smallest_integers({}) , {0, 0}));
      |                                                ^
./CPP_136.cpp:4:6: note: declared here
    4 | void largest_smallest_integers(int** result, int* arr, int len) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./CPP_136.cpp:35:
./CPP_136.cpp:50:58: error: ‘issame’ cannot be used as a function
   50 |     assert (issame(largest_smallest_integers({}) , {0, 0}));
      |                                                          ^
./CPP_136.cpp:51:49: error: too few arguments to function ‘void largest_smallest_integers(int**, int*, int)’
   51 |     assert (issame(largest_smallest_integers({0}) , {0, 0}));
      |                                                 ^
./CPP_136.cpp:4:6: note: declared here
    4 | void largest_smallest_integers(int** result, int* arr, int len) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./CPP_136.cpp:35:
./CPP_136.cpp:51:59: error: ‘issame’ cannot be used as a function
   51 |     assert (issame(largest_smallest_integers({0}) , {0, 0}));
      |                                                           ^
./CPP_136.cpp:52:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int**’
   52 |     assert (issame(largest_smallest_integers({-1, -3, -5, -6}) , {-1, 0}));
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_136.cpp:4:38: note:   initializing argument 1 of ‘void largest_smallest_integers(int**, int*, int)’
    4 | void largest_smallest_integers(int** result, int* arr, int len) {
      |                                ~~~~~~^~~~~~
In file included from ./CPP_136.cpp:35:
./CPP_136.cpp:52:73: error: ‘issame’ cannot be used as a function
   52 |     assert (issame(largest_smallest_integers({-1, -3, -5, -6}) , {-1, 0}));
      |                                                                         ^
./CPP_136.cpp:53:65: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int**’
   53 |     assert (issame(largest_smallest_integers({-1, -3, -5, -6, 0}) , {-1, 0}));
      |                                                                 ^
      |                                                                 |
      |                                                                 <brace-enclosed initializer list>
./CPP_136.cpp:4:38: note:   initializing argument 1 of ‘void largest_smallest_integers(int**, int*, int)’
    4 | void largest_smallest_integers(int** result, int* arr, int len) {
      |                                ~~~~~~^~~~~~
In file included from ./CPP_136.cpp:35:
./CPP_136.cpp:53:76: error: ‘issame’ cannot be used as a function
   53 |     assert (issame(largest_smallest_integers({-1, -3, -5, -6, 0}) , {-1, 0}));
      |                                                                            ^
./CPP_136.cpp:54:65: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int**’
   54 |     assert (issame(largest_smallest_integers({-6, -4, -4, -3, 1}) , {-3, 1}));
      |                                                                 ^
      |                                                                 |
      |                                                                 <brace-enclosed initializer list>
./CPP_136.cpp:4:38: note:   initializing argument 1 of ‘void largest_smallest_integers(int**, int*, int)’
    4 | void largest_smallest_integers(int** result, int* arr, int len) {
      |                                ~~~~~~^~~~~~
In file included from ./CPP_136.cpp:35:
./CPP_136.cpp:54:76: error: ‘issame’ cannot be used as a function
   54 |     assert (issame(largest_smallest_integers({-6, -4, -4, -3, 1}) , {-3, 1}));
      |                                                                            ^
./CPP_136.cpp:55:71: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int**’
   55 |     assert (issame(largest_smallest_integers({-6, -4, -4, -3, -100, 1}) , {-3, 1}));
      |                                                                       ^
      |                                                                       |
      |                                                                       <brace-enclosed initializer list>
./CPP_136.cpp:4:38: note:   initializing argument 1 of ‘void largest_smallest_integers(int**, int*, int)’
    4 | void largest_smallest_integers(int** result, int* arr, int len) {
      |                                ~~~~~~^~~~~~
In file included from ./CPP_136.cpp:35:
./CPP_136.cpp:55:82: error: ‘issame’ cannot be used as a function
   55 |     assert (issame(largest_smallest_integers({-6, -4, -4, -3, -100, 1}) , {-3, 1}));
      |                                                                                  ^


CPP_27.cpp: Compilation Failed
Error: ./CPP_27.cpp:18:83: error: expected ‘,’ or ‘...’ before ‘this’
   18 | void _Z9filp_caseNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(std_string* this, const std_string* other) {
      |                                                                                   ^~~~
./CPP_27.cpp: In function ‘void _Z9filp_caseNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(std_string*)’:
./CPP_27.cpp:19:9: error: ‘other’ was not declared in this scope
   19 |     if (other->_M_string_length == 0) return;
      |         ^~~~~
./CPP_27.cpp:21:5: error: invalid use of ‘this’ in non-member function
   21 |     this->_M_string_length = 0;
      |     ^~~~
./CPP_27.cpp:22:5: error: invalid use of ‘this’ in non-member function
   22 |     this->_M_string_data._M_data = 0;
      |     ^~~~
./CPP_27.cpp:24:15: error: ‘other’ was not declared in this scope
   24 |     char* p = other->_M_dataplus._M_p;
      |               ^~~~~
./CPP_27.cpp:42:13: error: invalid use of ‘this’ in non-member function
   42 |         if (this->_M_string_length > 15) {
      |             ^~~~
./CPP_27.cpp:43:51: error: invalid use of ‘this’ in non-member function
   43 |             temp._M_dataplus._M_p = (char*)malloc(this->_M_string_length);
      |                                                   ^~~~
./CPP_27.cpp:46:13: error: invalid use of ‘this’ in non-member function
   46 |         if (this->_M_string_length == 1) {
      |             ^~~~
./CPP_27.cpp:47:39: error: invalid use of ‘this’ in non-member function
   47 |             *temp._M_dataplus._M_p = *this->_M_dataplus._M_p;
      |                                       ^~~~
./CPP_27.cpp:48:20: error: invalid use of ‘this’ in non-member function
   48 |         } else if (this->_M_string_length > 1) {
      |                    ^~~~
./CPP_27.cpp:49:43: error: invalid use of ‘this’ in non-member function
   49 |             memcpy(temp._M_dataplus._M_p, this->_M_dataplus._M_p, this->_M_string_length);
      |                                           ^~~~
./CPP_27.cpp:49:67: error: invalid use of ‘this’ in non-member function
   49 |             memcpy(temp._M_dataplus._M_p, this->_M_dataplus._M_p, this->_M_string_length);
      |                                                                   ^~~~
./CPP_27.cpp:52:33: error: invalid use of ‘this’ in non-member function
   52 |         temp._M_string_length = this->_M_string_length;
      |                                 ^~~~
./CPP_27.cpp:55:9: error: invalid use of ‘this’ in non-member function
   55 |         this->_M_string_length = temp._M_string_length + 1;
      |         ^~~~
./CPP_27.cpp:56:9: error: invalid use of ‘this’ in non-member function
   56 |         this->_M_dataplus._M_p = (char*)malloc(this->_M_string_length);
      |         ^~~~
./CPP_27.cpp:56:48: error: invalid use of ‘this’ in non-member function
   56 |         this->_M_dataplus._M_p = (char*)malloc(this->_M_string_length);
      |                                                ^~~~
./CPP_27.cpp:58:13: error: invalid use of ‘this’ in non-member function
   58 |         if (this->_M_string_length > 1) {
      |             ^~~~
./CPP_27.cpp:59:20: error: invalid use of ‘this’ in non-member function
   59 |             memcpy(this->_M_dataplus._M_p, temp._M_dataplus._M_p, temp._M_string_length);
      |                    ^~~~
./CPP_27.cpp:62:11: error: invalid use of ‘this’ in non-member function
   62 |         *(this->_M_dataplus._M_p + this->_M_string_length - 1) = c;
      |           ^~~~
./CPP_27.cpp:62:36: error: invalid use of ‘this’ in non-member function
   62 |         *(this->_M_dataplus._M_p + this->_M_string_length - 1) = c;
      |                                    ^~~~
./CPP_27.cpp:63:11: error: invalid use of ‘this’ in non-member function
   63 |         *(this->_M_dataplus._M_p + this->_M_string_length) = 0;
      |           ^~~~
./CPP_27.cpp:63:36: error: invalid use of ‘this’ in non-member function
   63 |         *(this->_M_dataplus._M_p + this->_M_string_length) = 0;
      |                                    ^~~~
./CPP_27.cpp:65:58: error: ISO C++ forbids comparison between pointer and integer [-fpermissive]
   65 |         if (temp._M_dataplus._M_p != temp._M_string_data._M_data) {
      |                                                          ^~~~~~~
In file included from ./CPP_27.cpp:72:
./CPP_27.cpp: In function ‘int main()’:
./CPP_27.cpp:74:13: error: ‘filp_case’ was not declared in this scope
   74 |     assert (filp_case("") == "");
      |             ^~~~~~~~~


CPP_16.cpp: Compilation Failed
Error: ./CPP_16.cpp: In function ‘int count_distinct_characters(const char*)’:
./CPP_16.cpp:24:17: error: ‘__throw_length_error’ was not declared in this scope
   24 |                 __throw_length_error("vector::_M_realloc_insert");
      |                 ^~~~~~~~~~~~~~~~~~~~


CPP_72.cpp: Compilation Failed
Error: In file included from ./CPP_72.cpp:21:
./CPP_72.cpp: In function ‘int main()’:
./CPP_72.cpp:23:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   23 |     assert (will_it_fly({3, 2, 3}, 9)==true);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_72.cpp:4:23: note:   initializing argument 1 of ‘bool will_it_fly(int*, int, int)’
    4 | bool will_it_fly(int* arr, int size, int threshold) {
      |                  ~~~~~^~~
In file included from ./CPP_72.cpp:21:
./CPP_72.cpp:24:34: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   24 |     assert (will_it_fly({1, 2}, 5) == false);
      |                                  ^
      |                                  |
      |                                  <brace-enclosed initializer list>
./CPP_72.cpp:4:23: note:   initializing argument 1 of ‘bool will_it_fly(int*, int, int)’
    4 | bool will_it_fly(int* arr, int size, int threshold) {
      |                  ~~~~~^~~
In file included from ./CPP_72.cpp:21:
./CPP_72.cpp:25:31: error: invalid conversion from ‘int’ to ‘int*’ [-fpermissive]
   25 |     assert (will_it_fly({3}, 5) == true);
      |                               ^
      |                               |
      |                               int
./CPP_72.cpp:25:31: error: too few arguments to function ‘bool will_it_fly(int*, int, int)’
./CPP_72.cpp:4:6: note: declared here
    4 | bool will_it_fly(int* arr, int size, int threshold) {
      |      ^~~~~~~~~~~
In file included from ./CPP_72.cpp:21:
./CPP_72.cpp:26:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   26 |     assert (will_it_fly({3, 2, 3}, 1) == false);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_72.cpp:4:23: note:   initializing argument 1 of ‘bool will_it_fly(int*, int, int)’
    4 | bool will_it_fly(int* arr, int size, int threshold) {
      |                  ~~~~~^~~
In file included from ./CPP_72.cpp:21:
./CPP_72.cpp:27:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   27 |     assert (will_it_fly({1, 2, 3}, 6) ==false);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_72.cpp:4:23: note:   initializing argument 1 of ‘bool will_it_fly(int*, int, int)’
    4 | bool will_it_fly(int* arr, int size, int threshold) {
      |                  ~~~~~^~~
In file included from ./CPP_72.cpp:21:
./CPP_72.cpp:28:31: error: invalid conversion from ‘int’ to ‘int*’ [-fpermissive]
   28 |     assert (will_it_fly({5}, 5) == true);
      |                               ^
      |                               |
      |                               int
./CPP_72.cpp:28:31: error: too few arguments to function ‘bool will_it_fly(int*, int, int)’
./CPP_72.cpp:4:6: note: declared here
    4 | bool will_it_fly(int* arr, int size, int threshold) {
      |      ^~~~~~~~~~~


CPP_43.cpp: Compilation Failed
Error: In file included from ./CPP_43.cpp:24:
./CPP_43.cpp: In function ‘int main()’:
./CPP_43.cpp:26:43: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   26 |     assert (pairs_sum_to_zero({1, 3, 5, 0}) == false);
      |                                           ^
      |                                           |
      |                                           <brace-enclosed initializer list>
./CPP_43.cpp:4:35: note:   initializing argument 1 of ‘bool pairs_sum_to_zero(const int*, int)’
    4 | bool pairs_sum_to_zero(const int* arr, int size) {
      |                        ~~~~~~~~~~~^~~
In file included from ./CPP_43.cpp:24:
./CPP_43.cpp:27:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   27 |     assert (pairs_sum_to_zero({1, 3, -2, 1}) == false);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_43.cpp:4:35: note:   initializing argument 1 of ‘bool pairs_sum_to_zero(const int*, int)’
    4 | bool pairs_sum_to_zero(const int* arr, int size) {
      |                        ~~~~~~~~~~~^~~
In file included from ./CPP_43.cpp:24:
./CPP_43.cpp:28:43: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   28 |     assert (pairs_sum_to_zero({1, 2, 3, 7}) == false);
      |                                           ^
      |                                           |
      |                                           <brace-enclosed initializer list>
./CPP_43.cpp:4:35: note:   initializing argument 1 of ‘bool pairs_sum_to_zero(const int*, int)’
    4 | bool pairs_sum_to_zero(const int* arr, int size) {
      |                        ~~~~~~~~~~~^~~
In file included from ./CPP_43.cpp:24:
./CPP_43.cpp:29:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   29 |     assert (pairs_sum_to_zero({2, 4, -5, 3, 5, 7}) == true);
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_43.cpp:4:35: note:   initializing argument 1 of ‘bool pairs_sum_to_zero(const int*, int)’
    4 | bool pairs_sum_to_zero(const int* arr, int size) {
      |                        ~~~~~~~~~~~^~~
In file included from ./CPP_43.cpp:24:
./CPP_43.cpp:30:34: error: invalid conversion from ‘int’ to ‘const int*’ [-fpermissive]
   30 |     assert (pairs_sum_to_zero({1}) == false);
      |                                  ^
      |                                  |
      |                                  int
./CPP_43.cpp:30:34: error: too few arguments to function ‘bool pairs_sum_to_zero(const int*, int)’
./CPP_43.cpp:4:6: note: declared here
    4 | bool pairs_sum_to_zero(const int* arr, int size) {
      |      ^~~~~~~~~~~~~~~~~
In file included from ./CPP_43.cpp:24:
./CPP_43.cpp:31:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   31 |     assert (pairs_sum_to_zero({-3, 9, -1, 3, 2, 30}) == true);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_43.cpp:4:35: note:   initializing argument 1 of ‘bool pairs_sum_to_zero(const int*, int)’
    4 | bool pairs_sum_to_zero(const int* arr, int size) {
      |                        ~~~~~~~~~~~^~~
In file included from ./CPP_43.cpp:24:
./CPP_43.cpp:32:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   32 |     assert (pairs_sum_to_zero({-3, 9, -1, 3, 2, 31}) == true);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_43.cpp:4:35: note:   initializing argument 1 of ‘bool pairs_sum_to_zero(const int*, int)’
    4 | bool pairs_sum_to_zero(const int* arr, int size) {
      |                        ~~~~~~~~~~~^~~
In file included from ./CPP_43.cpp:24:
./CPP_43.cpp:33:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   33 |     assert (pairs_sum_to_zero({-3, 9, -1, 4, 2, 30}) == false);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_43.cpp:4:35: note:   initializing argument 1 of ‘bool pairs_sum_to_zero(const int*, int)’
    4 | bool pairs_sum_to_zero(const int* arr, int size) {
      |                        ~~~~~~~~~~~^~~
In file included from ./CPP_43.cpp:24:
./CPP_43.cpp:34:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   34 |     assert (pairs_sum_to_zero({-3, 9, -1, 4, 2, 31}) == false);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_43.cpp:4:35: note:   initializing argument 1 of ‘bool pairs_sum_to_zero(const int*, int)’
    4 | bool pairs_sum_to_zero(const int* arr, int size) {
      |                        ~~~~~~~~~~~^~~


CPP_53.cpp: Compilation Failed
Error: ./CPP_53.cpp: In function ‘int main()’:
./CPP_53.cpp:15:15: error: ‘rand’ was not declared in this scope
   15 |         int x=rand()%1000;
      |               ^~~~


CPP_126.cpp: Compilation Failed
Error: In file included from ./CPP_126.cpp:47:
./CPP_126.cpp: In function ‘int main()’:
./CPP_126.cpp:49:26: error: invalid conversion from ‘int’ to ‘Vector*’ [-fpermissive]
   49 |     assert (is_sorted({5}) == true);
      |                          ^
      |                          |
      |                          int
./CPP_126.cpp:23:24: note:   initializing argument 1 of ‘bool is_sorted(Vector*)’
   23 | bool is_sorted(Vector* v) {
      |                ~~~~~~~~^
In file included from ./CPP_126.cpp:47:
./CPP_126.cpp:50:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   50 |     assert (is_sorted({1, 2, 3, 4, 5}) == true);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_126.cpp:23:24: note:   initializing argument 1 of ‘bool is_sorted(Vector*)’
   23 | bool is_sorted(Vector* v) {
      |                ~~~~~~~~^
In file included from ./CPP_126.cpp:47:
./CPP_126.cpp:51:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   51 |     assert (is_sorted({1, 3, 2, 4, 5}) == false);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_126.cpp:23:24: note:   initializing argument 1 of ‘bool is_sorted(Vector*)’
   23 | bool is_sorted(Vector* v) {
      |                ~~~~~~~~^
In file included from ./CPP_126.cpp:47:
./CPP_126.cpp:52:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   52 |     assert (is_sorted({1, 2, 3, 4, 5, 6}) == true);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_126.cpp:23:24: note:   initializing argument 1 of ‘bool is_sorted(Vector*)’
   23 | bool is_sorted(Vector* v) {
      |                ~~~~~~~~^
In file included from ./CPP_126.cpp:47:
./CPP_126.cpp:53:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   53 |     assert (is_sorted({1, 2, 3, 4, 5, 6, 7}) == true);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_126.cpp:23:24: note:   initializing argument 1 of ‘bool is_sorted(Vector*)’
   23 | bool is_sorted(Vector* v) {
      |                ~~~~~~~~^
In file included from ./CPP_126.cpp:47:
./CPP_126.cpp:54:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   54 |     assert (is_sorted({1, 3, 2, 4, 5, 6, 7}) == false);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_126.cpp:23:24: note:   initializing argument 1 of ‘bool is_sorted(Vector*)’
   23 | bool is_sorted(Vector* v) {
      |                ~~~~~~~~^
In file included from ./CPP_126.cpp:47:
./CPP_126.cpp:56:26: error: invalid conversion from ‘int’ to ‘Vector*’ [-fpermissive]
   56 |     assert (is_sorted({1}) == true);
      |                          ^
      |                          |
      |                          int
./CPP_126.cpp:23:24: note:   initializing argument 1 of ‘bool is_sorted(Vector*)’
   23 | bool is_sorted(Vector* v) {
      |                ~~~~~~~~^
In file included from ./CPP_126.cpp:47:
./CPP_126.cpp:57:32: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   57 |     assert (is_sorted({3, 2, 1}) == false);
      |                                ^
      |                                |
      |                                <brace-enclosed initializer list>
./CPP_126.cpp:23:24: note:   initializing argument 1 of ‘bool is_sorted(Vector*)’
   23 | bool is_sorted(Vector* v) {
      |                ~~~~~~~~^
In file included from ./CPP_126.cpp:47:
./CPP_126.cpp:58:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   58 |     assert (is_sorted({1, 2, 2, 2, 3, 4}) == false);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_126.cpp:23:24: note:   initializing argument 1 of ‘bool is_sorted(Vector*)’
   23 | bool is_sorted(Vector* v) {
      |                ~~~~~~~~^
In file included from ./CPP_126.cpp:47:
./CPP_126.cpp:59:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   59 |     assert (is_sorted({1, 2, 3, 3, 3, 4}) == false);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_126.cpp:23:24: note:   initializing argument 1 of ‘bool is_sorted(Vector*)’
   23 | bool is_sorted(Vector* v) {
      |                ~~~~~~~~^
In file included from ./CPP_126.cpp:47:
./CPP_126.cpp:60:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   60 |     assert (is_sorted({1, 2, 2, 3, 3, 4}) == true);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_126.cpp:23:24: note:   initializing argument 1 of ‘bool is_sorted(Vector*)’
   23 | bool is_sorted(Vector* v) {
      |                ~~~~~~~~^
In file included from ./CPP_126.cpp:47:
./CPP_126.cpp:61:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   61 |     assert (is_sorted({1, 2, 3, 4}) == true);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_126.cpp:23:24: note:   initializing argument 1 of ‘bool is_sorted(Vector*)’
   23 | bool is_sorted(Vector* v) {
      |                ~~~~~~~~^


CPP_52.cpp: Compilation Failed
Error: In file included from ./CPP_52.cpp:40:
./CPP_52.cpp: In function ‘int main()’:
./CPP_52.cpp:42:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   42 |     assert (below_threshold({1, 2, 4, 10}, 100));
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_52.cpp:17:33: note:   initializing argument 1 of ‘int below_threshold(std_vector*, int)’
   17 | int below_threshold(std_vector* vec, int threshold) {
      |                     ~~~~~~~~~~~~^~~
In file included from ./CPP_52.cpp:40:
./CPP_52.cpp:43:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   43 |     assert (not(below_threshold({1, 20, 4, 10}, 5)));
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_52.cpp:17:33: note:   initializing argument 1 of ‘int below_threshold(std_vector*, int)’
   17 | int below_threshold(std_vector* vec, int threshold) {
      |                     ~~~~~~~~~~~~^~~
In file included from ./CPP_52.cpp:40:
./CPP_52.cpp:44:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   44 |     assert (below_threshold({1, 20, 4, 10}, 21));
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_52.cpp:17:33: note:   initializing argument 1 of ‘int below_threshold(std_vector*, int)’
   17 | int below_threshold(std_vector* vec, int threshold) {
      |                     ~~~~~~~~~~~~^~~
In file included from ./CPP_52.cpp:40:
./CPP_52.cpp:45:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   45 |     assert (below_threshold({1, 20, 4, 10}, 22));
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_52.cpp:17:33: note:   initializing argument 1 of ‘int below_threshold(std_vector*, int)’
   17 | int below_threshold(std_vector* vec, int threshold) {
      |                     ~~~~~~~~~~~~^~~
In file included from ./CPP_52.cpp:40:
./CPP_52.cpp:46:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   46 |     assert (below_threshold({1, 8, 4, 10}, 11));
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_52.cpp:17:33: note:   initializing argument 1 of ‘int below_threshold(std_vector*, int)’
   17 | int below_threshold(std_vector* vec, int threshold) {
      |                     ~~~~~~~~~~~~^~~
In file included from ./CPP_52.cpp:40:
./CPP_52.cpp:47:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   47 |     assert (not(below_threshold({1, 8, 4, 10}, 10)));
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_52.cpp:17:33: note:   initializing argument 1 of ‘int below_threshold(std_vector*, int)’
   17 | int below_threshold(std_vector* vec, int threshold) {
      |                     ~~~~~~~~~~~~^~~


CPP_2.cpp: Compilation Failed
Error: In file included from ./CPP_2.cpp:8:
./CPP_2.cpp: In function ‘int main()’:
./CPP_2.cpp:11:10: error: ‘abs’ was not declared in this scope
   11 |  assert (abs(truncate_number(1.33) - 0.33) < 1e-4);
      |          ^~~


CPP_57.cpp: Compilation Failed
Error: In file included from ./CPP_57.cpp:38:
./CPP_57.cpp: In function ‘int main()’:
./CPP_57.cpp:40:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   40 |     assert (monotonic({1, 2, 4, 10}) == true);
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_57.cpp:17:23: note:   initializing argument 1 of ‘int monotonic(Vector*)’
   17 | int monotonic(Vector* vec) {
      |               ~~~~~~~~^~~
In file included from ./CPP_57.cpp:38:
./CPP_57.cpp:41:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   41 |     assert (monotonic({1, 2, 4, 20}) == true);
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_57.cpp:17:23: note:   initializing argument 1 of ‘int monotonic(Vector*)’
   17 | int monotonic(Vector* vec) {
      |               ~~~~~~~~^~~
In file included from ./CPP_57.cpp:38:
./CPP_57.cpp:42:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   42 |     assert (monotonic({1, 20, 4, 10}) == false);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_57.cpp:17:23: note:   initializing argument 1 of ‘int monotonic(Vector*)’
   17 | int monotonic(Vector* vec) {
      |               ~~~~~~~~^~~
In file included from ./CPP_57.cpp:38:
./CPP_57.cpp:43:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   43 |     assert (monotonic({4, 1, 0, -10}) == true);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_57.cpp:17:23: note:   initializing argument 1 of ‘int monotonic(Vector*)’
   17 | int monotonic(Vector* vec) {
      |               ~~~~~~~~^~~
In file included from ./CPP_57.cpp:38:
./CPP_57.cpp:44:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   44 |     assert (monotonic({4, 1, 1, 0}) == true);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_57.cpp:17:23: note:   initializing argument 1 of ‘int monotonic(Vector*)’
   17 | int monotonic(Vector* vec) {
      |               ~~~~~~~~^~~
In file included from ./CPP_57.cpp:38:
./CPP_57.cpp:45:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   45 |     assert (monotonic({1, 2, 3, 2, 5, 60}) == false);
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_57.cpp:17:23: note:   initializing argument 1 of ‘int monotonic(Vector*)’
   17 | int monotonic(Vector* vec) {
      |               ~~~~~~~~^~~
In file included from ./CPP_57.cpp:38:
./CPP_57.cpp:46:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   46 |     assert (monotonic({1, 2, 3, 4, 5, 60}) == true);
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_57.cpp:17:23: note:   initializing argument 1 of ‘int monotonic(Vector*)’
   17 | int monotonic(Vector* vec) {
      |               ~~~~~~~~^~~
In file included from ./CPP_57.cpp:38:
./CPP_57.cpp:47:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   47 |     assert (monotonic({9, 9, 9, 9}) == true);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_57.cpp:17:23: note:   initializing argument 1 of ‘int monotonic(Vector*)’
   17 | int monotonic(Vector* vec) {
      |               ~~~~~~~~^~~


CPP_159.cpp: Compilation Failed
Error: ./CPP_159.cpp:2:1: error: stray ‘`’ in program
    2 | ```
      | ^
./CPP_159.cpp:2:2: error: stray ‘`’ in program
    2 | ```
      |  ^
./CPP_159.cpp:2:3: error: stray ‘`’ in program
    2 | ```
      |   ^
./CPP_159.cpp:42:1: error: stray ‘`’ in program
   42 | ```
      | ^
./CPP_159.cpp:42:2: error: stray ‘`’ in program
   42 | ```
      |  ^
./CPP_159.cpp:42:3: error: stray ‘`’ in program
   42 | ```
      |   ^
./CPP_159.cpp:1:1: error: ‘Here’ does not name a type
    1 | Here is the C source code generated from the provided LLVM IR code:
      | ^~~~
In file included from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/stdlib.h:97:8: error: ‘size_t’ does not name a type
   97 | extern size_t __ctype_get_mb_cur_max (void) __THROW __wur;
      |        ^~~~~~
/usr/include/stdlib.h:56:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
   55 | #include <bits/floatn.h>
  +++ |+#include <cstddef>
   56 | 
/usr/include/stdlib.h:212:36: error: ‘size_t’ has not been declared
  212 | extern int strfromd (char *__dest, size_t __size, const char *__format,
      |                                    ^~~~~~
/usr/include/stdlib.h:216:36: error: ‘size_t’ has not been declared
  216 | extern int strfromf (char *__dest, size_t __size, const char *__format,
      |                                    ^~~~~~
/usr/include/stdlib.h:220:36: error: ‘size_t’ has not been declared
  220 | extern int strfroml (char *__dest, size_t __size, const char *__format,
      |                                    ^~~~~~
/usr/include/stdlib.h:232:38: error: ‘size_t’ has not been declared
  232 | extern int strfromf32 (char *__dest, size_t __size, const char * __format,
      |                                      ^~~~~~
/usr/include/stdlib.h:238:38: error: ‘size_t’ has not been declared
  238 | extern int strfromf64 (char *__dest, size_t __size, const char * __format,
      |                                      ^~~~~~
/usr/include/stdlib.h:244:39: error: ‘size_t’ has not been declared
  244 | extern int strfromf128 (char *__dest, size_t __size, const char * __format,
      |                                       ^~~~~~
/usr/include/stdlib.h:250:39: error: ‘size_t’ has not been declared
  250 | extern int strfromf32x (char *__dest, size_t __size, const char * __format,
      |                                       ^~~~~~
/usr/include/stdlib.h:256:39: error: ‘size_t’ has not been declared
  256 | extern int strfromf64x (char *__dest, size_t __size, const char * __format,
      |                                       ^~~~~~
In file included from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/sys/types.h:33:9: error: ‘__u_char’ does not name a type
   33 | typedef __u_char u_char;
      |         ^~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:34:9: error: ‘__u_short’ does not name a type
   34 | typedef __u_short u_short;
      |         ^~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:35:9: error: ‘__u_int’ does not name a type
   35 | typedef __u_int u_int;
      |         ^~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:36:9: error: ‘__u_long’ does not name a type
   36 | typedef __u_long u_long;
      |         ^~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:37:9: error: ‘__quad_t’ does not name a type
   37 | typedef __quad_t quad_t;
      |         ^~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:38:9: error: ‘__u_quad_t’ does not name a type
   38 | typedef __u_quad_t u_quad_t;
      |         ^~~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:39:9: error: ‘__fsid_t’ does not name a type
   39 | typedef __fsid_t fsid_t;
      |         ^~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:42:9: error: ‘__loff_t’ does not name a type; did you mean ‘__locale_t’?
   42 | typedef __loff_t loff_t;
      |         ^~~~~~~~
      |         __locale_t
/usr/include/x86_64-linux-gnu/sys/types.h:47:9: error: ‘__ino_t’ does not name a type
   47 | typedef __ino_t ino_t;
      |         ^~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:54:9: error: ‘__ino64_t’ does not name a type
   54 | typedef __ino64_t ino64_t;
      |         ^~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:59:9: error: ‘__dev_t’ does not name a type
   59 | typedef __dev_t dev_t;
      |         ^~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:64:9: error: ‘__gid_t’ does not name a type
   64 | typedef __gid_t gid_t;
      |         ^~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:69:9: error: ‘__mode_t’ does not name a type; did you mean ‘__locale_t’?
   69 | typedef __mode_t mode_t;
      |         ^~~~~~~~
      |         __locale_t
/usr/include/x86_64-linux-gnu/sys/types.h:74:9: error: ‘__nlink_t’ does not name a type
   74 | typedef __nlink_t nlink_t;
      |         ^~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:79:9: error: ‘__uid_t’ does not name a type
   79 | typedef __uid_t uid_t;
      |         ^~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:97:9: error: ‘__pid_t’ does not name a type
   97 | typedef __pid_t pid_t;
      |         ^~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:103:9: error: ‘__id_t’ does not name a type
  103 | typedef __id_t id_t;
      |         ^~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:114:9: error: ‘__daddr_t’ does not name a type
  114 | typedef __daddr_t daddr_t;
      |         ^~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:115:9: error: ‘__caddr_t’ does not name a type
  115 | typedef __caddr_t caddr_t;
      |         ^~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:121:9: error: ‘__key_t’ does not name a type
  121 | typedef __key_t key_t;
      |         ^~~~~~~
In file included from /usr/include/x86_64-linux-gnu/sys/types.h:126,
                 from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/bits/types/clock_t.h:7:9: error: ‘__clock_t’ does not name a type
    7 | typedef __clock_t clock_t;
      |         ^~~~~~~~~
In file included from /usr/include/x86_64-linux-gnu/sys/types.h:128,
                 from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h:7:9: error: ‘__clockid_t’ does not name a type
    7 | typedef __clockid_t clockid_t;
      |         ^~~~~~~~~~~
In file included from /usr/include/x86_64-linux-gnu/sys/types.h:129,
                 from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/bits/types/time_t.h:7:9: error: ‘__time_t’ does not name a type
    7 | typedef __time_t time_t;
      |         ^~~~~~~~
In file included from /usr/include/x86_64-linux-gnu/sys/types.h:130,
                 from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/bits/types/timer_t.h:7:9: error: ‘__timer_t’ does not name a type
    7 | typedef __timer_t timer_t;
      |         ^~~~~~~~~
In file included from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/sys/types.h:134:9: error: ‘__useconds_t’ does not name a type
  134 | typedef __useconds_t useconds_t;
      |         ^~~~~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:138:9: error: ‘__suseconds_t’ does not name a type
  138 | typedef __suseconds_t suseconds_t;
      |         ^~~~~~~~~~~~~
In file included from /usr/include/x86_64-linux-gnu/sys/types.h:155,
                 from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/bits/stdint-intn.h:24:9: error: ‘__int8_t’ does not name a type; did you mean ‘__int128_t’?
   24 | typedef __int8_t int8_t;
      |         ^~~~~~~~
      |         __int128_t
/usr/include/x86_64-linux-gnu/bits/stdint-intn.h:25:9: error: ‘__int16_t’ does not name a type; did you mean ‘__int128_t’?
   25 | typedef __int16_t int16_t;
      |         ^~~~~~~~~
      |         __int128_t
/usr/include/x86_64-linux-gnu/bits/stdint-intn.h:26:9: error: ‘__int32_t’ does not name a type; did you mean ‘__int128_t’?
   26 | typedef __int32_t int32_t;
      |         ^~~~~~~~~
      |         __int128_t
/usr/include/x86_64-linux-gnu/bits/stdint-intn.h:27:9: error: ‘__int64_t’ does not name a type; did you mean ‘__int128_t’?
   27 | typedef __int64_t int64_t;
      |         ^~~~~~~~~
      |         __int128_t
In file included from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/sys/types.h:158:9: error: ‘__uint8_t’ does not name a type; did you mean ‘__uint128_t’?
  158 | typedef __uint8_t u_int8_t;
      |         ^~~~~~~~~
      |         __uint128_t
/usr/include/x86_64-linux-gnu/sys/types.h:159:9: error: ‘__uint16_t’ does not name a type; did you mean ‘__uint128_t’?
  159 | typedef __uint16_t u_int16_t;
      |         ^~~~~~~~~~
      |         __uint128_t
/usr/include/x86_64-linux-gnu/sys/types.h:160:9: error: ‘__uint32_t’ does not name a type; did you mean ‘__uint128_t’?
  160 | typedef __uint32_t u_int32_t;
      |         ^~~~~~~~~~
      |         __uint128_t
/usr/include/x86_64-linux-gnu/sys/types.h:161:9: error: ‘__uint64_t’ does not name a type; did you mean ‘__uint128_t’?
  161 | typedef __uint64_t u_int64_t;
      |         ^~~~~~~~~~
      |         __uint128_t
In file included from /usr/include/endian.h:35,
                 from /usr/include/x86_64-linux-gnu/sys/types.h:176,
                 from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/bits/byteswap.h:33:17: error: ‘__uint16_t’ does not name a type; did you mean ‘__uint128_t’?
   33 | static __inline __uint16_t
      |                 ^~~~~~~~~~
      |                 __uint128_t
/usr/include/x86_64-linux-gnu/bits/byteswap.h:48:17: error: ‘__uint32_t’ does not name a type; did you mean ‘__uint128_t’?
   48 | static __inline __uint32_t
      |                 ^~~~~~~~~~
      |                 __uint128_t
/usr/include/x86_64-linux-gnu/bits/byteswap.h:69:31: error: ‘__uint64_t’ does not name a type; did you mean ‘__uint128_t’?
   69 | __extension__ static __inline __uint64_t
      |                               ^~~~~~~~~~
      |                               __uint128_t
In file included from /usr/include/endian.h:36,
                 from /usr/include/x86_64-linux-gnu/sys/types.h:176,
                 from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/bits/uintn-identity.h:32:17: error: ‘__uint16_t’ does not name a type; did you mean ‘__uint128_t’?
   32 | static __inline __uint16_t
      |                 ^~~~~~~~~~
      |                 __uint128_t
/usr/include/x86_64-linux-gnu/bits/uintn-identity.h:38:17: error: ‘__uint32_t’ does not name a type; did you mean ‘__uint128_t’?
   38 | static __inline __uint32_t
      |                 ^~~~~~~~~~
      |                 __uint128_t
/usr/include/x86_64-linux-gnu/bits/uintn-identity.h:44:17: error: ‘__uint64_t’ does not name a type; did you mean ‘__uint128_t’?
   44 | static __inline __uint64_t
      |                 ^~~~~~~~~~
      |                 __uint128_t
In file included from /usr/include/x86_64-linux-gnu/sys/select.h:37,
                 from /usr/include/x86_64-linux-gnu/sys/types.h:179,
                 from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h:10:3: error: ‘__time_t’ does not name a type; did you mean ‘__sigset_t’?
   10 |   __time_t tv_sec;  /* Seconds.  */
      |   ^~~~~~~~
      |   __sigset_t
/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h:11:3: error: ‘__suseconds_t’ does not name a type
   11 |   __suseconds_t tv_usec; /* Microseconds.  */
      |   ^~~~~~~~~~~~~
In file included from /usr/include/x86_64-linux-gnu/sys/select.h:39,
                 from /usr/include/x86_64-linux-gnu/sys/types.h:179,
                 from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h:12:3: error: ‘__time_t’ does not name a type; did you mean ‘__sigset_t’?
   12 |   __time_t tv_sec;  /* Seconds.  */
      |   ^~~~~~~~
      |   __sigset_t
/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h:16:3: error: ‘__syscall_slong_t’ does not name a type
   16 |   __syscall_slong_t tv_nsec; /* Nanoseconds.  */
      |   ^~~~~~~~~~~~~~~~~
In file included from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/sys/types.h:185:9: error: ‘__blksize_t’ does not name a type
  185 | typedef __blksize_t blksize_t;
      |         ^~~~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:192:9: error: ‘__blkcnt_t’ does not name a type
  192 | typedef __blkcnt_t blkcnt_t;  /* Type to count number of disk blocks.  */
      |         ^~~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:196:9: error: ‘__fsblkcnt_t’ does not name a type
  196 | typedef __fsblkcnt_t fsblkcnt_t; /* Type to count file system blocks.  */
      |         ^~~~~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:200:9: error: ‘__fsfilcnt_t’ does not name a type
  200 | typedef __fsfilcnt_t fsfilcnt_t; /* Type to count file system inodes.  */
      |         ^~~~~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:219:9: error: ‘__blkcnt64_t’ does not name a type
  219 | typedef __blkcnt64_t blkcnt64_t;     /* Type to count number of disk blocks. */
      |         ^~~~~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:220:9: error: ‘__fsblkcnt64_t’ does not name a type
  220 | typedef __fsblkcnt64_t fsblkcnt64_t; /* Type to count file system blocks.  */
      |         ^~~~~~~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:221:9: error: ‘__fsfilcnt64_t’ does not name a type
  221 | typedef __fsfilcnt64_t fsfilcnt64_t; /* Type to count file system inodes.  */
      |         ^~~~~~~~~~~~~~
In file included from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/stdlib.h:411:4: error: ‘size_t’ has not been declared
  411 |    size_t __statelen) __THROW __nonnull ((2));
      |    ^~~~~~
/usr/include/stdlib.h:425:5: error: ‘int32_t’ does not name a type
  425 |     int32_t *fptr;  /* Front pointer.  */
      |     ^~~~~~~
/usr/include/stdlib.h:426:5: error: ‘int32_t’ does not name a type
  426 |     int32_t *rptr;  /* Rear pointer.  */
      |     ^~~~~~~
/usr/include/stdlib.h:427:5: error: ‘int32_t’ does not name a type
  427 |     int32_t *state;  /* Array of state values.  */
      |     ^~~~~~~
/usr/include/stdlib.h:431:5: error: ‘int32_t’ does not name a type
  431 |     int32_t *end_ptr;  /* Pointer behind state table.  */
      |     ^~~~~~~
/usr/include/stdlib.h:435:8: error: ‘int32_t’ has not been declared
  435 |        int32_t *__restrict __result) __THROW __nonnull ((1, 2));
      |        ^~~~~~~
/usr/include/stdlib.h:441:4: error: ‘size_t’ has not been declared
  441 |    size_t __statelen,
      |    ^~~~~~
/usr/include/stdlib.h:539:22: error: ‘size_t’ was not declared in this scope; did you mean ‘std::size_t’?
  539 | extern void *malloc (size_t __size) __THROW __attribute_malloc__
      |                      ^~~~~~
      |                      std::size_t
In file included from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:258:26: note: ‘std::size_t’ declared here
  258 |   typedef __SIZE_TYPE__  size_t;
      |                          ^~~~~~
In file included from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/stdlib.h:542:22: error: ‘size_t’ was not declared in this scope; did you mean ‘std::size_t’?
  542 | extern void *calloc (size_t __nmemb, size_t __size)
      |                      ^~~~~~
      |                      std::size_t
In file included from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:258:26: note: ‘std::size_t’ declared here
  258 |   typedef __SIZE_TYPE__  size_t;
      |                          ^~~~~~
In file included from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/stdlib.h:542:38: error: ‘size_t’ was not declared in this scope; did you mean ‘std::size_t’?
  542 | extern void *calloc (size_t __nmemb, size_t __size)
      |                                      ^~~~~~
      |                                      std::size_t
In file included from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:258:26: note: ‘std::size_t’ declared here
  258 |   typedef __SIZE_TYPE__  size_t;
      |                          ^~~~~~
In file included from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/stdlib.h:542:51: error: expression list treated as compound expression in initializer [-fpermissive]
  542 | extern void *calloc (size_t __nmemb, size_t __size)
      |                                                   ^
/usr/include/stdlib.h:550:36: error: ‘size_t’ has not been declared
  550 | extern void *realloc (void *__ptr, size_t __size)
      |                                    ^~~~~~
/usr/include/stdlib.h:559:41: error: ‘size_t’ has not been declared
  559 | extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
      |                                         ^~~~~~
/usr/include/stdlib.h:559:57: error: ‘size_t’ has not been declared
  559 | extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
      |                                                         ^~~~~~
In file included from /usr/include/stdlib.h:568,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/alloca.h:32:22: error: ‘size_t’ was not declared in this scope; did you mean ‘std::size_t’?
   32 | extern void *alloca (size_t __size) __THROW;
      |                      ^~~~~~
      |                      std::size_t
In file included from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:258:26: note: ‘std::size_t’ declared here
  258 |   typedef __SIZE_TYPE__  size_t;
      |                          ^~~~~~
In file included from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/stdlib.h:574:22: error: ‘size_t’ was not declared in this scope; did you mean ‘std::size_t’?
  574 | extern void *valloc (size_t __size) __THROW __attribute_malloc__
      |                      ^~~~~~
      |                      std::size_t
In file included from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:258:26: note: ‘std::size_t’ declared here
  258 |   typedef __SIZE_TYPE__  size_t;
      |                          ^~~~~~
In file included from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/stdlib.h:580:45: error: ‘size_t’ has not been declared
  580 | extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
      |                                             ^~~~~~
/usr/include/stdlib.h:580:65: error: ‘size_t’ has not been declared
  580 | extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
      |                                                                 ^~~~~~
/usr/include/stdlib.h:586:29: error: ‘size_t’ was not declared in this scope; did you mean ‘std::size_t’?
  586 | extern void *aligned_alloc (size_t __alignment, size_t __size)
      |                             ^~~~~~
      |                             std::size_t
In file included from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:258:26: note: ‘std::size_t’ declared here
  258 |   typedef __SIZE_TYPE__  size_t;
      |                          ^~~~~~
In file included from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/stdlib.h:586:49: error: ‘size_t’ was not declared in this scope; did you mean ‘std::size_t’?
  586 | extern void *aligned_alloc (size_t __alignment, size_t __size)
      |                                                 ^~~~~~
      |                                                 std::size_t
In file included from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:258:26: note: ‘std::size_t’ declared here
  258 |   typedef __SIZE_TYPE__  size_t;
      |                          ^~~~~~
In file included from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/stdlib.h:586:62: error: expression list treated as compound expression in initializer [-fpermissive]
  586 | extern void *aligned_alloc (size_t __alignment, size_t __size)
      |                                                              ^
/usr/include/stdlib.h:821:9: error: ‘size_t’ has not been declared
  821 |         size_t __nmemb, size_t __size, __compar_fn_t __compar)
      |         ^~~~~~
/usr/include/stdlib.h:821:25: error: ‘size_t’ has not been declared
  821 |         size_t __nmemb, size_t __size, __compar_fn_t __compar)
      |                         ^~~~~~
/usr/include/stdlib.h:830:34: error: ‘size_t’ has not been declared
  830 | extern void qsort (void *__base, size_t __nmemb, size_t __size,
      |                                  ^~~~~~
/usr/include/stdlib.h:830:50: error: ‘size_t’ has not been declared
  830 | extern void qsort (void *__base, size_t __nmemb, size_t __size,
      |                                                  ^~~~~~
/usr/include/stdlib.h:833:36: error: ‘size_t’ has not been declared
  833 | extern void qsort_r (void *__base, size_t __nmemb, size_t __size,
      |                                    ^~~~~~
/usr/include/stdlib.h:833:52: error: ‘size_t’ has not been declared
  833 | extern void qsort_r (void *__base, size_t __nmemb, size_t __size,
      |                                                    ^~~~~~
/usr/include/stdlib.h:904:6: error: ‘size_t’ has not been declared
  904 |      size_t __len) __THROW __nonnull ((3, 4, 5));
      |      ^~~~~~
/usr/include/stdlib.h:907:6: error: ‘size_t’ has not been declared
  907 |      size_t __len) __THROW __nonnull ((3, 4, 5));
      |      ^~~~~~
/usr/include/stdlib.h:911:31: error: ‘size_t’ has not been declared
  911 |       char *__restrict __buf, size_t __len)
      |                               ^~~~~~
/usr/include/stdlib.h:915:31: error: ‘size_t’ has not been declared
  915 |       char *__restrict __buf, size_t __len)
      |                               ^~~~~~
/usr/include/stdlib.h:922:36: error: ‘size_t’ has not been declared
  922 | extern int mblen (const char *__s, size_t __n) __THROW;
      |                                    ^~~~~~
/usr/include/stdlib.h:926:34: error: ‘size_t’ has not been declared
  926 |      const char *__restrict __s, size_t __n) __THROW;
      |                                  ^~~~~~
/usr/include/stdlib.h:933:8: error: ‘size_t’ does not name a type
  933 | extern size_t mbstowcs (wchar_t *__restrict  __pwcs,
      |        ^~~~~~
/usr/include/stdlib.h:933:8: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
/usr/include/stdlib.h:936:8: error: ‘size_t’ does not name a type
  936 | extern size_t wcstombs (char *__restrict __s,
      |        ^~~~~~
/usr/include/stdlib.h:936:8: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
/usr/include/stdlib.h:992:46: error: ‘size_t’ has not been declared
  992 | extern int ptsname_r (int __fd, char *__buf, size_t __buflen)
      |                                              ^~~~~~
In file included from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_159.cpp:4:
/usr/include/c++/9/cstdlib:154:11: error: ‘::mbstowcs’ has not been declared
  154 |   using ::mbstowcs;
      |           ^~~~~~~~
/usr/include/c++/9/cstdlib:171:11: error: ‘::wcstombs’ has not been declared
  171 |   using ::wcstombs;
      |           ^~~~~~~~
In file included from ./CPP_159.cpp:4:
/usr/include/c++/9/stdlib.h:68:12: error: ‘std::mbstowcs’ has not been declared
   68 | using std::mbstowcs;
      |            ^~~~~~~~
/usr/include/c++/9/stdlib.h:80:12: error: ‘std::wcstombs’ has not been declared
   80 | using std::wcstombs;
      |            ^~~~~~~~
In file included from ./CPP_159.cpp:5:
/usr/include/string.h:44:8: error: ‘size_t’ has not been declared
   44 |        size_t __n) __THROW __nonnull ((1, 2));
      |        ^~~~~~
/usr/include/string.h:47:56: error: ‘size_t’ has not been declared
   47 | extern void *memmove (void *__dest, const void *__src, size_t __n)
      |                                                        ^~~~~~
/usr/include/string.h:55:18: error: ‘size_t’ has not been declared
   55 |         int __c, size_t __n)
      |                  ^~~~~~
/usr/include/string.h:61:42: error: ‘size_t’ has not been declared
   61 | extern void *memset (void *__s, int __c, size_t __n) __THROW __nonnull ((1));
      |                                          ^~~~~~
/usr/include/string.h:64:56: error: ‘size_t’ has not been declared
   64 | extern int memcmp (const void *__s1, const void *__s2, size_t __n)
      |                                                        ^~~~~~
/usr/include/string.h:71:42: error: ‘size_t’ has not been declared
   71 | extern void *memchr (void *__s, int __c, size_t __n)
      |                                          ^~~~~~
/usr/include/string.h:73:54: error: ‘size_t’ has not been declared
   73 | extern const void *memchr (const void *__s, int __c, size_t __n)
      |                                                      ^~~~~~
/usr/include/string.h:110:49: error: ‘size_t’ has not been declared
  110 | extern "C++" void *memrchr (void *__s, int __c, size_t __n)
      |                                                 ^~~~~~
/usr/include/string.h:112:61: error: ‘size_t’ has not been declared
  112 | extern "C++" const void *memrchr (const void *__s, int __c, size_t __n)
      |                                                             ^~~~~~
/usr/include/string.h:126:39: error: ‘size_t’ has not been declared
  126 |         const char *__restrict __src, size_t __n)
      |                                       ^~~~~~
/usr/include/string.h:134:9: error: ‘size_t’ has not been declared
  134 |         size_t __n) __THROW __nonnull ((1, 2));
      |         ^~~~~~
/usr/include/string.h:140:57: error: ‘size_t’ has not been declared
  140 | extern int strncmp (const char *__s1, const char *__s2, size_t __n)
      |                                                         ^~~~~~
/usr/include/string.h:147:8: error: ‘size_t’ does not name a type
  147 | extern size_t strxfrm (char *__restrict __dest,
      |        ^~~~~~
/usr/include/string.h:34:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
   33 | #include <stddef.h>
  +++ |+#include <cstddef>
   34 | 
/usr/include/string.h:160:8: error: ‘size_t’ does not name a type
  160 | extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
      |        ^~~~~~
/usr/include/string.h:160:8: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
/usr/include/string.h:175:45: error: ‘size_t’ has not been declared
  175 | extern char *strndup (const char *__string, size_t __n)
      |                                             ^~~~~~
/usr/include/string.h:273:8: error: ‘size_t’ does not name a type
  273 | extern size_t strcspn (const char *__s, const char *__reject)
      |        ^~~~~~
/usr/include/string.h:273:8: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
/usr/include/string.h:277:8: error: ‘size_t’ does not name a type
  277 | extern size_t strspn (const char *__s, const char *__accept)
      |        ^~~~~~
/usr/include/string.h:277:8: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
/usr/include/string.h:369:46: error: ‘size_t’ has not been declared
  369 | extern void *memmem (const void *__haystack, size_t __haystacklen,
      |                                              ^~~~~~
/usr/include/string.h:370:30: error: ‘size_t’ has not been declared
  370 |        const void *__needle, size_t __needlelen)
      |                              ^~~~~~
/usr/include/string.h:376:34: error: ‘size_t’ has not been declared
  376 |    const void *__restrict __src, size_t __n)
      |                                  ^~~~~~
/usr/include/string.h:379:39: error: ‘size_t’ has not been declared
  379 |         const void *__restrict __src, size_t __n)
      |                                       ^~~~~~
/usr/include/string.h:385:8: error: ‘size_t’ does not name a type
  385 | extern size_t strlen (const char *__s)
      |        ^~~~~~
/usr/include/string.h:385:8: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
/usr/include/string.h:391:8: error: ‘size_t’ does not name a type
  391 | extern size_t strnlen (const char *__string, size_t __maxlen)
      |        ^~~~~~
/usr/include/string.h:391:8: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
/usr/include/string.h:421:53: error: ‘size_t’ has not been declared
  421 | extern char *strerror_r (int __errnum, char *__buf, size_t __buflen)
      |                                                     ^~~~~~
In file included from /usr/include/string.h:432,
                 from ./CPP_159.cpp:5:
/usr/include/strings.h:34:54: error: ‘size_t’ has not been declared
   34 | extern int bcmp (const void *__s1, const void *__s2, size_t __n)
      |                                                      ^~~~~~
/usr/include/strings.h:38:53: error: ‘size_t’ has not been declared
   38 | extern void bcopy (const void *__src, void *__dest, size_t __n)
      |                                                     ^~~~~~
/usr/include/strings.h:42:31: error: ‘size_t’ has not been declared
   42 | extern void bzero (void *__s, size_t __n) __THROW __nonnull ((1));
      |                               ^~~~~~
/usr/include/strings.h:120:61: error: ‘size_t’ has not been declared
  120 | extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
      |                                                             ^~~~~~
/usr/include/strings.h:134:6: error: ‘size_t’ has not been declared
  134 |      size_t __n, locale_t __loc)
      |      ^~~~~~
In file included from ./CPP_159.cpp:5:
/usr/include/string.h:436:40: error: ‘size_t’ has not been declared
  436 | extern void explicit_bzero (void *__s, size_t __n) __THROW __nonnull ((1));
      |                                        ^~~~~~
/usr/include/string.h:458:34: error: ‘size_t’ has not been declared
  458 |    const char *__restrict __src, size_t __n)
      |                                  ^~~~~~
/usr/include/string.h:461:39: error: ‘size_t’ has not been declared
  461 |         const char *__restrict __src, size_t __n)
      |                                       ^~~~~~
/usr/include/string.h:474:34: error: ‘size_t’ has not been declared
  474 | extern void *memfrob (void *__s, size_t __n) __THROW __nonnull ((1));
      |                                  ^~~~~~
./CPP_159.cpp: In function ‘void _Z3eatiii(std_vector*, int, int, int)’:
./CPP_159.cpp:28:56: error: ‘malloc’ cannot be used as a function
   28 |     __result->_M_base._M_impl._M_start = (int*)malloc(8);
      |                                                        ^
./CPP_159.cpp:34:56: error: ‘malloc’ cannot be used as a function
   34 |     __result->_M_base._M_impl._M_start = (int*)malloc(8);
      |                                                        ^
./CPP_159.cpp:39:43: error: ‘__tmp’ was not declared in this scope
   39 |   __result->_M_base._M_impl._M_start[1] = __tmp;
      |                                           ^~~~~
./CPP_159.cpp: At global scope:
./CPP_159.cpp:43:1: error: ‘Please’ does not name a type
   43 | Please note that this C code is a direct translation of the provided LLVM IR code and may not be optimal or idiomatic C code.
      | ^~~~~~
./CPP_159.cpp:46:13: error: ‘vector’ was not declared in this scope
   46 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_159.cpp:46:20: error: expected primary-expression before ‘int’
   46 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_159.cpp:46:27: error: ‘vector’ was not declared in this scope
   46 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_159.cpp:46:34: error: expected primary-expression before ‘int’
   46 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_159.cpp:46:39: error: expression list treated as compound expression in initializer [-fpermissive]
   46 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_159.cpp:45:
./CPP_159.cpp: In function ‘int main()’:
./CPP_159.cpp:55:20: error: ‘eat’ was not declared in this scope
   55 |     assert (issame(eat(5, 6, 10) , {11, 4}));
      |                    ^~~
./CPP_159.cpp:55:43: error: ‘issame’ cannot be used as a function
   55 |     assert (issame(eat(5, 6, 10) , {11, 4}));
      |                                           ^
./CPP_159.cpp:55:5: error: ‘__assert_fail’ was not declared in this scope
   55 |     assert (issame(eat(5, 6, 10) , {11, 4}));
      |     ^~~~~~
./CPP_159.cpp:56:42: error: ‘issame’ cannot be used as a function
   56 |     assert (issame(eat(4, 8, 9) , {12, 1}));
      |                                          ^
./CPP_159.cpp:57:44: error: ‘issame’ cannot be used as a function
   57 |     assert (issame(eat(1, 10, 10) , {11, 0}));
      |                                            ^
./CPP_159.cpp:58:42: error: ‘issame’ cannot be used as a function
   58 |     assert (issame(eat(2, 11, 5) , {7, 0}));
      |                                          ^
./CPP_159.cpp:60:41: error: ‘issame’ cannot be used as a function
   60 |     assert (issame(eat(4, 5, 7) , {9, 2}));
      |                                         ^
./CPP_159.cpp:61:41: error: ‘issame’ cannot be used as a function
   61 |     assert (issame(eat(4, 5, 1) , {5, 0}));
      |                                         ^


CPP_108.cpp: Compilation Failed
Error: ./CPP_108.cpp:32:5: error: redefinition of ‘int main()’
   32 | int main(){
      |     ^~~~
./CPP_108.cpp:25:5: note: ‘int main()’ previously defined here
   25 | int main() {
      |     ^~~~
In file included from ./CPP_108.cpp:31:
./CPP_108.cpp: In function ‘int main()’:
./CPP_108.cpp:33:26: error: too few arguments to function ‘int count_nums(int*, int)’
   33 |     assert (count_nums({}) == 0);
      |                          ^
./CPP_108.cpp:4:5: note: declared here
    4 | int count_nums(int* arr, int len) {
      |     ^~~~~~~~~~
In file included from ./CPP_108.cpp:31:
./CPP_108.cpp:34:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   34 |     assert (count_nums({-1, -2, 0}) == 0);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_108.cpp:4:21: note:   initializing argument 1 of ‘int count_nums(int*, int)’
    4 | int count_nums(int* arr, int len) {
      |                ~~~~~^~~
In file included from ./CPP_108.cpp:31:
./CPP_108.cpp:35:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   35 |     assert (count_nums({1, 1, 2, -2, 3, 4, 5}) == 6);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_108.cpp:4:21: note:   initializing argument 1 of ‘int count_nums(int*, int)’
    4 | int count_nums(int* arr, int len) {
      |                ~~~~~^~~
In file included from ./CPP_108.cpp:31:
./CPP_108.cpp:36:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   36 |     assert (count_nums({1, 6, 9, -6, 0, 1, 5}) == 5);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_108.cpp:4:21: note:   initializing argument 1 of ‘int count_nums(int*, int)’
    4 | int count_nums(int* arr, int len) {
      |                ~~~~~^~~
In file included from ./CPP_108.cpp:31:
./CPP_108.cpp:37:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   37 |     assert (count_nums({1, 100, 98, -7, 1, -1}) == 4);
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_108.cpp:4:21: note:   initializing argument 1 of ‘int count_nums(int*, int)’
    4 | int count_nums(int* arr, int len) {
      |                ~~~~~^~~
In file included from ./CPP_108.cpp:31:
./CPP_108.cpp:38:49: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   38 |     assert (count_nums({12, 23, 34, -45, -56, 0}) == 5);
      |                                                 ^
      |                                                 |
      |                                                 <brace-enclosed initializer list>
./CPP_108.cpp:4:21: note:   initializing argument 1 of ‘int count_nums(int*, int)’
    4 | int count_nums(int* arr, int len) {
      |                ~~~~~^~~
In file included from ./CPP_108.cpp:31:
./CPP_108.cpp:39:31: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   39 |     assert (count_nums({-0, 1}) == 1);
      |                               ^
      |                               |
      |                               <brace-enclosed initializer list>
./CPP_108.cpp:4:21: note:   initializing argument 1 of ‘int count_nums(int*, int)’
    4 | int count_nums(int* arr, int len) {
      |                ~~~~~^~~
In file included from ./CPP_108.cpp:31:
./CPP_108.cpp:40:27: error: invalid conversion from ‘int’ to ‘int*’ [-fpermissive]
   40 |     assert (count_nums({1}) == 1);
      |                           ^
      |                           |
      |                           int
./CPP_108.cpp:40:27: error: too few arguments to function ‘int count_nums(int*, int)’
./CPP_108.cpp:4:5: note: declared here
    4 | int count_nums(int* arr, int len) {
      |     ^~~~~~~~~~


CPP_61.cpp: Compilation Failed
Error: In file included from ./CPP_61.cpp:20:
./CPP_61.cpp: In function ‘int main()’:
./CPP_61.cpp:22:36: error: too few arguments to function ‘bool correct_bracketing(const char*, int)’
   22 |     assert (correct_bracketing("()"));
      |                                    ^
./CPP_61.cpp:3:6: note: declared here
    3 | bool correct_bracketing(const char* str, int length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:20:
./CPP_61.cpp:23:40: error: too few arguments to function ‘bool correct_bracketing(const char*, int)’
   23 |     assert (correct_bracketing("(()())"));
      |                                        ^
./CPP_61.cpp:3:6: note: declared here
    3 | bool correct_bracketing(const char* str, int length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:20:
./CPP_61.cpp:24:46: error: too few arguments to function ‘bool correct_bracketing(const char*, int)’
   24 |     assert (correct_bracketing("()()(()())()"));
      |                                              ^
./CPP_61.cpp:3:6: note: declared here
    3 | bool correct_bracketing(const char* str, int length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:20:
./CPP_61.cpp:25:60: error: too few arguments to function ‘bool correct_bracketing(const char*, int)’
   25 |     assert (correct_bracketing("()()((()()())())(()()(()))"));
      |                                                            ^
./CPP_61.cpp:3:6: note: declared here
    3 | bool correct_bracketing(const char* str, int length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:20:
./CPP_61.cpp:26:48: error: too few arguments to function ‘bool correct_bracketing(const char*, int)’
   26 |     assert (not (correct_bracketing("((()())))")));
      |                                                ^
./CPP_61.cpp:3:6: note: declared here
    3 | bool correct_bracketing(const char* str, int length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:20:
./CPP_61.cpp:27:43: error: too few arguments to function ‘bool correct_bracketing(const char*, int)’
   27 |     assert (not (correct_bracketing(")(()")));
      |                                           ^
./CPP_61.cpp:3:6: note: declared here
    3 | bool correct_bracketing(const char* str, int length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:20:
./CPP_61.cpp:28:40: error: too few arguments to function ‘bool correct_bracketing(const char*, int)’
   28 |     assert (not (correct_bracketing("(")));
      |                                        ^
./CPP_61.cpp:3:6: note: declared here
    3 | bool correct_bracketing(const char* str, int length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:20:
./CPP_61.cpp:29:43: error: too few arguments to function ‘bool correct_bracketing(const char*, int)’
   29 |     assert (not (correct_bracketing("((((")));
      |                                           ^
./CPP_61.cpp:3:6: note: declared here
    3 | bool correct_bracketing(const char* str, int length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:20:
./CPP_61.cpp:30:40: error: too few arguments to function ‘bool correct_bracketing(const char*, int)’
   30 |     assert (not (correct_bracketing(")")));
      |                                        ^
./CPP_61.cpp:3:6: note: declared here
    3 | bool correct_bracketing(const char* str, int length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:20:
./CPP_61.cpp:31:42: error: too few arguments to function ‘bool correct_bracketing(const char*, int)’
   31 |     assert (not (correct_bracketing("(()")));
      |                                          ^
./CPP_61.cpp:3:6: note: declared here
    3 | bool correct_bracketing(const char* str, int length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:20:
./CPP_61.cpp:32:55: error: too few arguments to function ‘bool correct_bracketing(const char*, int)’
   32 |     assert (not (correct_bracketing("()()(()())())(()")));
      |                                                       ^
./CPP_61.cpp:3:6: note: declared here
    3 | bool correct_bracketing(const char* str, int length) {
      |      ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:20:
./CPP_61.cpp:33:55: error: too few arguments to function ‘bool correct_bracketing(const char*, int)’
   33 |     assert (not (correct_bracketing("()()(()())()))()")));
      |                                                       ^
./CPP_61.cpp:3:6: note: declared here
    3 | bool correct_bracketing(const char* str, int length) {
      |      ^~~~~~~~~~~~~~~~~~


CPP_124.cpp: Compilation Failed
Error: In file included from ./CPP_124.cpp:47:
./CPP_124.cpp: In function ‘int main()’:
./CPP_124.cpp:49:24: error: cannot convert ‘const char*’ to ‘string*’
   49 |     assert (valid_date("03-11-2000") == true);
      |                        ^~~~~~~~~~~~
      |                        |
      |                        const char*
./CPP_124.cpp:10:24: note:   initializing argument 1 of ‘int valid_date(string*)’
   10 | int valid_date(string* date) {
      |                ~~~~~~~~^~~~
In file included from ./CPP_124.cpp:47:
./CPP_124.cpp:50:24: error: cannot convert ‘const char*’ to ‘string*’
   50 |     assert (valid_date("15-01-2012") == false);
      |                        ^~~~~~~~~~~~
      |                        |
      |                        const char*
./CPP_124.cpp:10:24: note:   initializing argument 1 of ‘int valid_date(string*)’
   10 | int valid_date(string* date) {
      |                ~~~~~~~~^~~~
In file included from ./CPP_124.cpp:47:
./CPP_124.cpp:51:24: error: cannot convert ‘const char*’ to ‘string*’
   51 |     assert (valid_date("04-0-2040") == false);
      |                        ^~~~~~~~~~~
      |                        |
      |                        const char*
./CPP_124.cpp:10:24: note:   initializing argument 1 of ‘int valid_date(string*)’
   10 | int valid_date(string* date) {
      |                ~~~~~~~~^~~~
In file included from ./CPP_124.cpp:47:
./CPP_124.cpp:52:24: error: cannot convert ‘const char*’ to ‘string*’
   52 |     assert (valid_date("06-04-2020") == true);
      |                        ^~~~~~~~~~~~
      |                        |
      |                        const char*
./CPP_124.cpp:10:24: note:   initializing argument 1 of ‘int valid_date(string*)’
   10 | int valid_date(string* date) {
      |                ~~~~~~~~^~~~
In file included from ./CPP_124.cpp:47:
./CPP_124.cpp:53:24: error: cannot convert ‘const char*’ to ‘string*’
   53 |     assert (valid_date("01-01-2007") == true);
      |                        ^~~~~~~~~~~~
      |                        |
      |                        const char*
./CPP_124.cpp:10:24: note:   initializing argument 1 of ‘int valid_date(string*)’
   10 | int valid_date(string* date) {
      |                ~~~~~~~~^~~~
In file included from ./CPP_124.cpp:47:
./CPP_124.cpp:54:24: error: cannot convert ‘const char*’ to ‘string*’
   54 |     assert (valid_date("03-32-2011") == false);
      |                        ^~~~~~~~~~~~
      |                        |
      |                        const char*
./CPP_124.cpp:10:24: note:   initializing argument 1 of ‘int valid_date(string*)’
   10 | int valid_date(string* date) {
      |                ~~~~~~~~^~~~
In file included from ./CPP_124.cpp:47:
./CPP_124.cpp:55:24: error: cannot convert ‘const char*’ to ‘string*’
   55 |     assert (valid_date("") == false);
      |                        ^~
      |                        |
      |                        const char*
./CPP_124.cpp:10:24: note:   initializing argument 1 of ‘int valid_date(string*)’
   10 | int valid_date(string* date) {
      |                ~~~~~~~~^~~~
In file included from ./CPP_124.cpp:47:
./CPP_124.cpp:56:24: error: cannot convert ‘const char*’ to ‘string*’
   56 |     assert (valid_date("04-31-3000") == false);
      |                        ^~~~~~~~~~~~
      |                        |
      |                        const char*
./CPP_124.cpp:10:24: note:   initializing argument 1 of ‘int valid_date(string*)’
   10 | int valid_date(string* date) {
      |                ~~~~~~~~^~~~
In file included from ./CPP_124.cpp:47:
./CPP_124.cpp:57:24: error: cannot convert ‘const char*’ to ‘string*’
   57 |     assert (valid_date("06-06-2005") == true);
      |                        ^~~~~~~~~~~~
      |                        |
      |                        const char*
./CPP_124.cpp:10:24: note:   initializing argument 1 of ‘int valid_date(string*)’
   10 | int valid_date(string* date) {
      |                ~~~~~~~~^~~~
In file included from ./CPP_124.cpp:47:
./CPP_124.cpp:58:24: error: cannot convert ‘const char*’ to ‘string*’
   58 |     assert (valid_date("21-31-2000") == false);
      |                        ^~~~~~~~~~~~
      |                        |
      |                        const char*
./CPP_124.cpp:10:24: note:   initializing argument 1 of ‘int valid_date(string*)’
   10 | int valid_date(string* date) {
      |                ~~~~~~~~^~~~
In file included from ./CPP_124.cpp:47:
./CPP_124.cpp:59:24: error: cannot convert ‘const char*’ to ‘string*’
   59 |     assert (valid_date("04-12-2003") == true);
      |                        ^~~~~~~~~~~~
      |                        |
      |                        const char*
./CPP_124.cpp:10:24: note:   initializing argument 1 of ‘int valid_date(string*)’
   10 | int valid_date(string* date) {
      |                ~~~~~~~~^~~~
In file included from ./CPP_124.cpp:47:
./CPP_124.cpp:60:24: error: cannot convert ‘const char*’ to ‘string*’
   60 |     assert (valid_date("04122003") == false);
      |                        ^~~~~~~~~~
      |                        |
      |                        const char*
./CPP_124.cpp:10:24: note:   initializing argument 1 of ‘int valid_date(string*)’
   10 | int valid_date(string* date) {
      |                ~~~~~~~~^~~~
In file included from ./CPP_124.cpp:47:
./CPP_124.cpp:61:24: error: cannot convert ‘const char*’ to ‘string*’
   61 |     assert (valid_date("20030412") == false);
      |                        ^~~~~~~~~~
      |                        |
      |                        const char*
./CPP_124.cpp:10:24: note:   initializing argument 1 of ‘int valid_date(string*)’
   10 | int valid_date(string* date) {
      |                ~~~~~~~~^~~~
In file included from ./CPP_124.cpp:47:
./CPP_124.cpp:62:24: error: cannot convert ‘const char*’ to ‘string*’
   62 |     assert (valid_date("2003-04") == false);
      |                        ^~~~~~~~~
      |                        |
      |                        const char*
./CPP_124.cpp:10:24: note:   initializing argument 1 of ‘int valid_date(string*)’
   10 | int valid_date(string* date) {
      |                ~~~~~~~~^~~~
In file included from ./CPP_124.cpp:47:
./CPP_124.cpp:63:24: error: cannot convert ‘const char*’ to ‘string*’
   63 |     assert (valid_date("2003-04-12") == false);
      |                        ^~~~~~~~~~~~
      |                        |
      |                        const char*
./CPP_124.cpp:10:24: note:   initializing argument 1 of ‘int valid_date(string*)’
   10 | int valid_date(string* date) {
      |                ~~~~~~~~^~~~
In file included from ./CPP_124.cpp:47:
./CPP_124.cpp:64:24: error: cannot convert ‘const char*’ to ‘string*’
   64 |     assert (valid_date("04-2003") == false);
      |                        ^~~~~~~~~
      |                        |
      |                        const char*
./CPP_124.cpp:10:24: note:   initializing argument 1 of ‘int valid_date(string*)’
   10 | int valid_date(string* date) {
      |                ~~~~~~~~^~~~


CPP_142.cpp: Compilation Failed
Error: In file included from ./CPP_142.cpp:19:
./CPP_142.cpp: In function ‘int main()’:
./CPP_142.cpp:21:32: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   21 |     assert (sum_squares({1,2,3}) == 6);
      |                                ^
      |                                |
      |                                <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* data, int size) {
      |                 ~~~~~^~~~
In file included from ./CPP_142.cpp:19:
./CPP_142.cpp:22:32: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   22 |     assert (sum_squares({1,4,9}) == 14);
      |                                ^
      |                                |
      |                                <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* data, int size) {
      |                 ~~~~~^~~~
In file included from ./CPP_142.cpp:19:
./CPP_142.cpp:23:27: error: too few arguments to function ‘int sum_squares(int*, int)’
   23 |     assert (sum_squares({}) == 0);
      |                           ^
./CPP_142.cpp:3:5: note: declared here
    3 | int sum_squares(int* data, int size) {
      |     ^~~~~~~~~~~
In file included from ./CPP_142.cpp:19:
./CPP_142.cpp:24:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   24 |     assert (sum_squares({1,1,1,1,1,1,1,1,1}) == 9);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* data, int size) {
      |                 ~~~~~^~~~
In file included from ./CPP_142.cpp:19:
./CPP_142.cpp:25:53: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   25 |     assert (sum_squares({-1,-1,-1,-1,-1,-1,-1,-1,-1}) == -3);
      |                                                     ^
      |                                                     |
      |                                                     <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* data, int size) {
      |                 ~~~~~^~~~
In file included from ./CPP_142.cpp:19:
./CPP_142.cpp:26:28: error: too few arguments to function ‘int sum_squares(int*, int)’
   26 |     assert (sum_squares({0}) == 0);
      |                            ^
./CPP_142.cpp:3:5: note: declared here
    3 | int sum_squares(int* data, int size) {
      |     ^~~~~~~~~~~
In file included from ./CPP_142.cpp:19:
./CPP_142.cpp:27:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   27 |     assert (sum_squares({-1,-5,2,-1,-5}) == -126);
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* data, int size) {
      |                 ~~~~~^~~~
In file included from ./CPP_142.cpp:19:
./CPP_142.cpp:28:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   28 |     assert (sum_squares({-56,-99,1,0,-2}) == 3030);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* data, int size) {
      |                 ~~~~~^~~~
In file included from ./CPP_142.cpp:19:
./CPP_142.cpp:29:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   29 |     assert (sum_squares({-1,0,0,0,0,0,0,0,-1}) == 0);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* data, int size) {
      |                 ~~~~~^~~~
In file included from ./CPP_142.cpp:19:
./CPP_142.cpp:30:89: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   30 |     assert (sum_squares({-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37}) == -14196);
      |                                                                                         ^
      |                                                                                         |
      |                                                                                         <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* data, int size) {
      |                 ~~~~~^~~~
In file included from ./CPP_142.cpp:19:
./CPP_142.cpp:31:107: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   31 |     assert (sum_squares({-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10}) == -1448);
      |                                                                                                           ^
      |                                                                                                           |
      |                                                                                                           <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* data, int size) {
      |                 ~~~~~^~~~


CPP_66.cpp: Compilation Failed
Error: ./CPP_66.cpp: In function ‘int main()’:
./CPP_66.cpp:5:15: error: ‘digitSum’ was not declared in this scope
    5 |     int sum = digitSum(str, len);
      |               ^~~~~~~~
./CPP_66.cpp: At global scope:
./CPP_66.cpp:11:5: error: redefinition of ‘int main()’
   11 | int main(){
      |     ^~~~
./CPP_66.cpp:1:5: note: ‘int main()’ previously defined here
    1 | int main() {
      |     ^~~~
In file included from ./CPP_66.cpp:10:
./CPP_66.cpp: In function ‘int main()’:
./CPP_66.cpp:12:13: error: ‘digitSum’ was not declared in this scope
   12 |     assert (digitSum("") == 0);
      |             ^~~~~~~~


CPP_114.cpp: Compilation Failed
Error: In file included from ./CPP_114.cpp:27:
./CPP_114.cpp: In function ‘int main()’:
./CPP_114.cpp:29:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int64_t*’ {aka ‘long int*’}
   29 |     assert (minSubArraySum({2, 3, 4, 1, 2, 4}) == 1);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_114.cpp:3:33: note:   initializing argument 1 of ‘int64_t minSubArraySum(int64_t*, int64_t)’
    3 | int64_t minSubArraySum(int64_t* arr, int64_t n) {
      |                        ~~~~~~~~~^~~
In file included from ./CPP_114.cpp:27:
./CPP_114.cpp:30:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int64_t*’ {aka ‘long int*’}
   30 |     assert (minSubArraySum({-1, -2, -3}) == -6);
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_114.cpp:3:33: note:   initializing argument 1 of ‘int64_t minSubArraySum(int64_t*, int64_t)’
    3 | int64_t minSubArraySum(int64_t* arr, int64_t n) {
      |                        ~~~~~~~~~^~~
In file included from ./CPP_114.cpp:27:
./CPP_114.cpp:31:48: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int64_t*’ {aka ‘long int*’}
   31 |     assert (minSubArraySum({-1, -2, -3, 2, -10}) == -14);
      |                                                ^
      |                                                |
      |                                                <brace-enclosed initializer list>
./CPP_114.cpp:3:33: note:   initializing argument 1 of ‘int64_t minSubArraySum(int64_t*, int64_t)’
    3 | int64_t minSubArraySum(int64_t* arr, int64_t n) {
      |                        ~~~~~~~~~^~~
In file included from ./CPP_114.cpp:27:
./CPP_114.cpp:32:47: error: invalid conversion from ‘long int’ to ‘int64_t*’ {aka ‘long int*’} [-fpermissive]
   32 |     assert (minSubArraySum({-9999999999999999}) == -9999999999999999);
      |                                               ^
      |                                               |
      |                                               long int
./CPP_114.cpp:32:47: error: too few arguments to function ‘int64_t minSubArraySum(int64_t*, int64_t)’
./CPP_114.cpp:3:9: note: declared here
    3 | int64_t minSubArraySum(int64_t* arr, int64_t n) {
      |         ^~~~~~~~~~~~~~
In file included from ./CPP_114.cpp:27:
./CPP_114.cpp:33:48: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int64_t*’ {aka ‘long int*’}
   33 |     assert (minSubArraySum({0, 10, 20, 1000000}) == 0);
      |                                                ^
      |                                                |
      |                                                <brace-enclosed initializer list>
./CPP_114.cpp:3:33: note:   initializing argument 1 of ‘int64_t minSubArraySum(int64_t*, int64_t)’
    3 | int64_t minSubArraySum(int64_t* arr, int64_t n) {
      |                        ~~~~~~~~~^~~
In file included from ./CPP_114.cpp:27:
./CPP_114.cpp:34:48: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int64_t*’ {aka ‘long int*’}
   34 |     assert (minSubArraySum({-1, -2, -3, 10, -5}) == -6);
      |                                                ^
      |                                                |
      |                                                <brace-enclosed initializer list>
./CPP_114.cpp:3:33: note:   initializing argument 1 of ‘int64_t minSubArraySum(int64_t*, int64_t)’
    3 | int64_t minSubArraySum(int64_t* arr, int64_t n) {
      |                        ~~~~~~~~~^~~
In file included from ./CPP_114.cpp:27:
./CPP_114.cpp:35:53: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int64_t*’ {aka ‘long int*’}
   35 |     assert (minSubArraySum({100, -1, -2, -3, 10, -5}) == -6);
      |                                                     ^
      |                                                     |
      |                                                     <brace-enclosed initializer list>
./CPP_114.cpp:3:33: note:   initializing argument 1 of ‘int64_t minSubArraySum(int64_t*, int64_t)’
    3 | int64_t minSubArraySum(int64_t* arr, int64_t n) {
      |                        ~~~~~~~~~^~~
In file included from ./CPP_114.cpp:27:
./CPP_114.cpp:36:49: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int64_t*’ {aka ‘long int*’}
   36 |     assert (minSubArraySum({10, 11, 13, 8, 3, 4}) == 3);
      |                                                 ^
      |                                                 |
      |                                                 <brace-enclosed initializer list>
./CPP_114.cpp:3:33: note:   initializing argument 1 of ‘int64_t minSubArraySum(int64_t*, int64_t)’
    3 | int64_t minSubArraySum(int64_t* arr, int64_t n) {
      |                        ~~~~~~~~~^~~
In file included from ./CPP_114.cpp:27:
./CPP_114.cpp:37:53: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int64_t*’ {aka ‘long int*’}
   37 |     assert (minSubArraySum({100, -33, 32, -1, 0, -2}) == -33);
      |                                                     ^
      |                                                     |
      |                                                     <brace-enclosed initializer list>
./CPP_114.cpp:3:33: note:   initializing argument 1 of ‘int64_t minSubArraySum(int64_t*, int64_t)’
    3 | int64_t minSubArraySum(int64_t* arr, int64_t n) {
      |                        ~~~~~~~~~^~~
In file included from ./CPP_114.cpp:27:
./CPP_114.cpp:38:33: error: invalid conversion from ‘int’ to ‘int64_t*’ {aka ‘long int*’} [-fpermissive]
   38 |     assert (minSubArraySum({-10}) == -10);
      |                                 ^
      |                                 |
      |                                 int
./CPP_114.cpp:38:33: error: too few arguments to function ‘int64_t minSubArraySum(int64_t*, int64_t)’
./CPP_114.cpp:3:9: note: declared here
    3 | int64_t minSubArraySum(int64_t* arr, int64_t n) {
      |         ^~~~~~~~~~~~~~
In file included from ./CPP_114.cpp:27:
./CPP_114.cpp:39:31: error: invalid conversion from ‘int’ to ‘int64_t*’ {aka ‘long int*’} [-fpermissive]
   39 |     assert (minSubArraySum({7}) == 7);
      |                               ^
      |                               |
      |                               int
./CPP_114.cpp:39:31: error: too few arguments to function ‘int64_t minSubArraySum(int64_t*, int64_t)’
./CPP_114.cpp:3:9: note: declared here
    3 | int64_t minSubArraySum(int64_t* arr, int64_t n) {
      |         ^~~~~~~~~~~~~~
In file included from ./CPP_114.cpp:27:
./CPP_114.cpp:40:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int64_t*’ {aka ‘long int*’}
   40 |     assert (minSubArraySum({1, -1}) == -1);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_114.cpp:3:33: note:   initializing argument 1 of ‘int64_t minSubArraySum(int64_t*, int64_t)’
    3 | int64_t minSubArraySum(int64_t* arr, int64_t n) {
      |                        ~~~~~~~~~^~~


CPP_85.cpp: Compilation Failed
Error: ./CPP_85.cpp:24:5: error: redefinition of ‘int main()’
   24 | int main(){
      |     ^~~~
./CPP_85.cpp:14:5: note: ‘int main()’ previously defined here
   14 | int main() {
      |     ^~~~
In file included from ./CPP_85.cpp:23:
./CPP_85.cpp: In function ‘int main()’:
./CPP_85.cpp:25:24: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   25 |     assert (add({4, 88}) == 88);
      |                        ^
      |                        |
      |                        <brace-enclosed initializer list>
./CPP_85.cpp:4:14: note:   initializing argument 1 of ‘int add(int*, int)’
    4 | int add(int* data, int size) {
      |         ~~~~~^~~~
In file included from ./CPP_85.cpp:23:
./CPP_85.cpp:26:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   26 |     assert (add({4, 5, 6, 7, 2, 122}) == 122);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_85.cpp:4:14: note:   initializing argument 1 of ‘int add(int*, int)’
    4 | int add(int* data, int size) {
      |         ~~~~~^~~~
In file included from ./CPP_85.cpp:23:
./CPP_85.cpp:27:29: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   27 |     assert (add({4, 0, 6, 7}) == 0);
      |                             ^
      |                             |
      |                             <brace-enclosed initializer list>
./CPP_85.cpp:4:14: note:   initializing argument 1 of ‘int add(int*, int)’
    4 | int add(int* data, int size) {
      |         ~~~~~^~~~
In file included from ./CPP_85.cpp:23:
./CPP_85.cpp:28:29: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   28 |     assert (add({4, 4, 6, 8}) == 12);
      |                             ^
      |                             |
      |                             <brace-enclosed initializer list>
./CPP_85.cpp:4:14: note:   initializing argument 1 of ‘int add(int*, int)’
    4 | int add(int* data, int size) {
      |         ~~~~~^~~~


CPP_46.cpp: Execution Failed
Error: CPP_46: ./CPP_46.cpp:61: int main(): Assertion `fib4(5) == 4' failed.
Aborted (core dumped)


CPP_28.cpp: Compilation Failed
Error: ./CPP_28.cpp: In function ‘int main()’:
./CPP_28.cpp:39:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   39 |     str1.ptr = "Hello ";
      |                ^~~~~~~~
./CPP_28.cpp:41:16: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   41 |     str2.ptr = "World";
      |                ^~~~~~~
./CPP_28.cpp: At global scope:
./CPP_28.cpp:58:5: error: redefinition of ‘int main()’
   58 | int main(){
      |     ^~~~
./CPP_28.cpp:36:5: note: ‘int main()’ previously defined here
   36 | int main() {
      |     ^~~~
In file included from ./CPP_28.cpp:57:
./CPP_28.cpp: In function ‘int main()’:
./CPP_28.cpp:59:27: error: too few arguments to function ‘void concatenate(vector_t*, string_t*)’
   59 |     assert (concatenate({}) == "");
      |                           ^
./CPP_28.cpp:15:6: note: declared here
   15 | void concatenate(vector_t* vector, string_t* result) {
      |      ^~~~~~~~~~~
In file included from ./CPP_28.cpp:57:
./CPP_28.cpp:60:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector_t*’
   60 |      assert (concatenate({"x", "y", "z"}) == "xyz");
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_28.cpp:15:28: note:   initializing argument 1 of ‘void concatenate(vector_t*, string_t*)’
   15 | void concatenate(vector_t* vector, string_t* result) {
      |                  ~~~~~~~~~~^~~~~~
In file included from ./CPP_28.cpp:57:
./CPP_28.cpp:61:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector_t*’
   61 |     assert (concatenate({"x", "y", "z", "w", "k"}) == "xyzwk");
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_28.cpp:15:28: note:   initializing argument 1 of ‘void concatenate(vector_t*, string_t*)’
   15 | void concatenate(vector_t* vector, string_t* result) {
      |                  ~~~~~~~~~~^~~~~~


CPP_62.cpp: Compilation Failed
Error: ./CPP_62.cpp:19:59: error: expected ‘,’ or ‘...’ before ‘sret’
   19 | void _Z10derivativeSt6vectorIfSaIfEE(std__vector* noalias sret, std__vector* readonly) {
      |                                                           ^~~~
./CPP_62.cpp: In function ‘void _Z10derivativeSt6vectorIfSaIfEE(std__vector*)’:
./CPP_62.cpp:20:32: error: ‘sret’ was not declared in this scope
   20 |     _Vector_impl_data* impl = &sret->_M_base._M_impl;
      |                                ^~~~
./CPP_62.cpp:21:41: error: ‘readonly’ was not declared in this scope; did you mean ‘readonly_impl’?
   21 |     _Vector_impl_data* readonly_impl = &readonly->_M_base._M_impl;
      |                                         ^~~~~~~~
      |                                         readonly_impl
./CPP_62.cpp:43:21: error: ‘__throw_length_error’ was not declared in this scope
   43 |                     __throw_length_error("vector::_M_realloc_insert");
      |                     ^~~~~~~~~~~~~~~~~~~~
./CPP_62.cpp: At global scope:
./CPP_62.cpp:77:13: error: ‘vector’ was not declared in this scope
   77 | bool issame(vector<float> a,vector<float>b){
      |             ^~~~~~
./CPP_62.cpp:77:20: error: expected primary-expression before ‘float’
   77 | bool issame(vector<float> a,vector<float>b){
      |                    ^~~~~
./CPP_62.cpp:77:29: error: ‘vector’ was not declared in this scope
   77 | bool issame(vector<float> a,vector<float>b){
      |                             ^~~~~~
./CPP_62.cpp:77:36: error: expected primary-expression before ‘float’
   77 | bool issame(vector<float> a,vector<float>b){
      |                                    ^~~~~
./CPP_62.cpp:77:43: error: expression list treated as compound expression in initializer [-fpermissive]
   77 | bool issame(vector<float> a,vector<float>b){
      |                                           ^
In file included from ./CPP_62.cpp:76:
./CPP_62.cpp: In function ‘int main()’:
./CPP_62.cpp:86:20: error: ‘derivative’ was not declared in this scope
   86 |     assert (issame(derivative({3, 1, 2, 4, 5}) , {1, 4, 12, 20}));
      |                    ^~~~~~~~~~
./CPP_62.cpp:86:64: error: ‘issame’ cannot be used as a function
   86 |     assert (issame(derivative({3, 1, 2, 4, 5}) , {1, 4, 12, 20}));
      |                                                                ^
./CPP_62.cpp:87:50: error: ‘issame’ cannot be used as a function
   87 |     assert (issame(derivative({1, 2, 3}) , {2, 6}));
      |                                                  ^
./CPP_62.cpp:88:50: error: ‘issame’ cannot be used as a function
   88 |     assert (issame(derivative({3, 2, 1}) , {2, 2}));
      |                                                  ^
./CPP_62.cpp:89:63: error: ‘issame’ cannot be used as a function
   89 |     assert (issame(derivative({3, 2, 1, 0, 4}) , {2, 2, 0, 16}));
      |                                                               ^
./CPP_62.cpp:90:40: error: ‘issame’ cannot be used as a function
   90 |     assert (issame(derivative({1}) , {}));
      |                                        ^


CPP_36.cpp: Execution Failed
Error: CPP_36: ./CPP_36.cpp:24: int main(): Assertion `fizz_buzz(50) == 0' failed.
Aborted (core dumped)


CPP_131.cpp: Compilation Failed
Error: ./CPP_131.cpp:31:5: error: redefinition of ‘int main()’
   31 | int main(){
      |     ^~~~
./CPP_131.cpp:23:5: note: ‘int main()’ previously defined here
   23 | int main() {
      |     ^~~~


CPP_152.cpp: Compilation Failed
Error: ./CPP_152.cpp: In function ‘void _Z7compareSt6vectorIiSaIiEES1_(vector*, vector*, vector*)’:
./CPP_152.cpp:24:44: error: request for member ‘_M_finish’ in ‘__x->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   24 |     int* __x_finish = __x->_M_base._M_impl._M_finish;
      |                                            ^~~~~~~~~
./CPP_152.cpp:25:43: error: request for member ‘_M_start’ in ‘__x->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   25 |     int* __x_start = __x->_M_base._M_impl._M_start;
      |                                           ^~~~~~~~
./CPP_152.cpp:26:43: error: request for member ‘_M_start’ in ‘__y->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   26 |     int* __y_start = __y->_M_base._M_impl._M_start;
      |                                           ^~~~~~~~
./CPP_152.cpp:27:53: error: request for member ‘_M_start’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   27 |     int* __result_start = __result->_M_base._M_impl._M_start;
      |                                                     ^~~~~~~~
./CPP_152.cpp:28:54: error: request for member ‘_M_finish’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   28 |     int* __result_finish = __result->_M_base._M_impl._M_finish;
      |                                                      ^~~~~~~~~
./CPP_152.cpp:29:62: error: request for member ‘_M_end_of_storage’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   29 |     int* __result_end_of_storage = __result->_M_base._M_impl._M_end_of_storage;
      |                                                              ^~~~~~~~~~~~~~~~~
./CPP_152.cpp:48:30: warning: overflow in conversion from ‘long int’ to ‘int’ changes value from ‘2305843009213693951’ to ‘-1’ [-Woverflow]
   48 |                 __capacity = 2305843009213693951;
      |                              ^~~~~~~~~~~~~~~~~~~
./CPP_152.cpp:67:31: error: request for member ‘_M_start’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   67 |     __result->_M_base._M_impl._M_start = __result_start - __n;
      |                               ^~~~~~~~
./CPP_152.cpp:68:31: error: request for member ‘_M_finish’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   68 |     __result->_M_base._M_impl._M_finish = __result_start;
      |                               ^~~~~~~~~
./CPP_152.cpp:69:31: error: request for member ‘_M_end_of_storage’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   69 |     __result->_M_base._M_impl._M_end_of_storage = __result_end_of_storage;
      |                               ^~~~~~~~~~~~~~~~~
./CPP_152.cpp: At global scope:
./CPP_152.cpp:74:13: error: ‘vector’ is not a template
   74 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_152.cpp:74:27: error: ‘vector’ is not a template
   74 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_152.cpp: In function ‘bool issame(vector, vector)’:
./CPP_152.cpp:75:11: error: ‘struct vector’ has no member named ‘size’
   75 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_152.cpp:75:21: error: ‘struct vector’ has no member named ‘size’
   75 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_152.cpp:76:22: error: ‘struct vector’ has no member named ‘size’
   76 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_152.cpp:78:10: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   78 |     if (a[i]!=b[i]) return false;
      |          ^
./CPP_152.cpp:78:16: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   78 |     if (a[i]!=b[i]) return false;
      |                ^
In file included from ./CPP_152.cpp:73:
./CPP_152.cpp: In function ‘int main()’:
./CPP_152.cpp:83:20: error: ‘compare’ was not declared in this scope
   83 |     assert (issame(compare({1,2,3,4,5,1},{1,2,3,4,2,-2}),{0,0,0,0,3,3}));
      |                    ^~~~~~~


CPP_132.cpp: Compilation Failed
Error: ./CPP_132.cpp: In function ‘int is_nested(std_string*)’:
./CPP_132.cpp:28:34: error: ‘i’ was not declared in this scope
   28 |     return s->_M_string_length > i;
      |                                  ^
In file included from ./CPP_132.cpp:32:
./CPP_132.cpp: In function ‘int main()’:
./CPP_132.cpp:34:23: error: cannot convert ‘const char*’ to ‘std_string*’
   34 |     assert (is_nested("[[]]") == true);
      |                       ^~~~~~
      |                       |
      |                       const char*
./CPP_132.cpp:9:27: note:   initializing argument 1 of ‘int is_nested(std_string*)’
    9 | int is_nested(std_string* s) {
      |               ~~~~~~~~~~~~^
In file included from ./CPP_132.cpp:32:
./CPP_132.cpp:35:23: error: cannot convert ‘const char*’ to ‘std_string*’
   35 |     assert (is_nested("[]]]]]]][[[[[]") == false);
      |                       ^~~~~~~~~~~~~~~~
      |                       |
      |                       const char*
./CPP_132.cpp:9:27: note:   initializing argument 1 of ‘int is_nested(std_string*)’
    9 | int is_nested(std_string* s) {
      |               ~~~~~~~~~~~~^
In file included from ./CPP_132.cpp:32:
./CPP_132.cpp:36:23: error: cannot convert ‘const char*’ to ‘std_string*’
   36 |     assert (is_nested("[][]") == false);
      |                       ^~~~~~
      |                       |
      |                       const char*
./CPP_132.cpp:9:27: note:   initializing argument 1 of ‘int is_nested(std_string*)’
    9 | int is_nested(std_string* s) {
      |               ~~~~~~~~~~~~^
In file included from ./CPP_132.cpp:32:
./CPP_132.cpp:37:24: error: cannot convert ‘const char*’ to ‘std_string*’
   37 |     assert (is_nested(("[]")) == false);
      |                       ~^~~~~
      |                        |
      |                        const char*
./CPP_132.cpp:9:27: note:   initializing argument 1 of ‘int is_nested(std_string*)’
    9 | int is_nested(std_string* s) {
      |               ~~~~~~~~~~~~^
In file included from ./CPP_132.cpp:32:
./CPP_132.cpp:38:23: error: cannot convert ‘const char*’ to ‘std_string*’
   38 |     assert (is_nested("[[[[]]]]") == true);
      |                       ^~~~~~~~~~
      |                       |
      |                       const char*
./CPP_132.cpp:9:27: note:   initializing argument 1 of ‘int is_nested(std_string*)’
    9 | int is_nested(std_string* s) {
      |               ~~~~~~~~~~~~^
In file included from ./CPP_132.cpp:32:
./CPP_132.cpp:39:23: error: cannot convert ‘const char*’ to ‘std_string*’
   39 |     assert (is_nested("[]]]]]]]]]]") == false);
      |                       ^~~~~~~~~~~~~
      |                       |
      |                       const char*
./CPP_132.cpp:9:27: note:   initializing argument 1 of ‘int is_nested(std_string*)’
    9 | int is_nested(std_string* s) {
      |               ~~~~~~~~~~~~^
In file included from ./CPP_132.cpp:32:
./CPP_132.cpp:40:23: error: cannot convert ‘const char*’ to ‘std_string*’
   40 |     assert (is_nested("[][][[]]") == true);
      |                       ^~~~~~~~~~
      |                       |
      |                       const char*
./CPP_132.cpp:9:27: note:   initializing argument 1 of ‘int is_nested(std_string*)’
    9 | int is_nested(std_string* s) {
      |               ~~~~~~~~~~~~^
In file included from ./CPP_132.cpp:32:
./CPP_132.cpp:41:23: error: cannot convert ‘const char*’ to ‘std_string*’
   41 |     assert (is_nested("[[]") == false);
      |                       ^~~~~
      |                       |
      |                       const char*
./CPP_132.cpp:9:27: note:   initializing argument 1 of ‘int is_nested(std_string*)’
    9 | int is_nested(std_string* s) {
      |               ~~~~~~~~~~~~^
In file included from ./CPP_132.cpp:32:
./CPP_132.cpp:42:23: error: cannot convert ‘const char*’ to ‘std_string*’
   42 |     assert (is_nested("[]]") == false);
      |                       ^~~~~
      |                       |
      |                       const char*
./CPP_132.cpp:9:27: note:   initializing argument 1 of ‘int is_nested(std_string*)’
    9 | int is_nested(std_string* s) {
      |               ~~~~~~~~~~~~^
In file included from ./CPP_132.cpp:32:
./CPP_132.cpp:43:23: error: cannot convert ‘const char*’ to ‘std_string*’
   43 |     assert (is_nested("[[]][[") == true);
      |                       ^~~~~~~~
      |                       |
      |                       const char*
./CPP_132.cpp:9:27: note:   initializing argument 1 of ‘int is_nested(std_string*)’
    9 | int is_nested(std_string* s) {
      |               ~~~~~~~~~~~~^
In file included from ./CPP_132.cpp:32:
./CPP_132.cpp:44:23: error: cannot convert ‘const char*’ to ‘std_string*’
   44 |     assert (is_nested("[[][]]") == true);
      |                       ^~~~~~~~
      |                       |
      |                       const char*
./CPP_132.cpp:9:27: note:   initializing argument 1 of ‘int is_nested(std_string*)’
    9 | int is_nested(std_string* s) {
      |               ~~~~~~~~~~~~^
In file included from ./CPP_132.cpp:32:
./CPP_132.cpp:45:23: error: cannot convert ‘const char*’ to ‘std_string*’
   45 |     assert (is_nested("") == false);
      |                       ^~
      |                       |
      |                       const char*
./CPP_132.cpp:9:27: note:   initializing argument 1 of ‘int is_nested(std_string*)’
    9 | int is_nested(std_string* s) {
      |               ~~~~~~~~~~~~^
In file included from ./CPP_132.cpp:32:
./CPP_132.cpp:46:23: error: cannot convert ‘const char*’ to ‘std_string*’
   46 |     assert (is_nested("[[[[[[[[") == false);
      |                       ^~~~~~~~~~
      |                       |
      |                       const char*
./CPP_132.cpp:9:27: note:   initializing argument 1 of ‘int is_nested(std_string*)’
    9 | int is_nested(std_string* s) {
      |               ~~~~~~~~~~~~^
In file included from ./CPP_132.cpp:32:
./CPP_132.cpp:47:23: error: cannot convert ‘const char*’ to ‘std_string*’
   47 |     assert (is_nested("]]]]]]]]") == false);
      |                       ^~~~~~~~~~
      |                       |
      |                       const char*
./CPP_132.cpp:9:27: note:   initializing argument 1 of ‘int is_nested(std_string*)’
    9 | int is_nested(std_string* s) {
      |               ~~~~~~~~~~~~^


CPP_68.cpp: Compilation Failed
Error: ./CPP_68.cpp:3:24: error: stray ‘`’ in program
    3 | However, I can use the `llc` tool from the LLVM project to generate C code from the IR code. Here is the result:
      |                        ^
./CPP_68.cpp:3:28: error: stray ‘`’ in program
    3 | However, I can use the `llc` tool from the LLVM project to generate C code from the IR code. Here is the result:
      |                            ^
./CPP_68.cpp:4:1: error: stray ‘`’ in program
    4 | ```
      | ^
./CPP_68.cpp:4:2: error: stray ‘`’ in program
    4 | ```
      |  ^
./CPP_68.cpp:4:3: error: stray ‘`’ in program
    4 | ```
      |   ^
./CPP_68.cpp:73:1: error: stray ‘`’ in program
   73 | ```
      | ^
./CPP_68.cpp:73:2: error: stray ‘`’ in program
   73 | ```
      |  ^
./CPP_68.cpp:73:3: error: stray ‘`’ in program
   73 | ```
      |   ^
./CPP_68.cpp:76:74: warning: missing terminating ' character
   76 | Also, keep in mind that this code is not optimized for performance, as it's a direct translation from the IR code. In a real-world scenario, you would likely want to optimize the code further for your specific use case.
      |                                                                          ^
./CPP_68.cpp:76:74: error: missing terminating ' character
   76 | Also, keep in mind that this code is not optimized for performance, as it's a direct translation from the IR code. In a real-world scenario, you would likely want to optimize the code further for your specific use case.
      |                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_68.cpp:1:1: error: ‘Unfortunately’ does not name a type
    1 | Unfortunately, the IR code you provided is quite long and complex, and manually translating it to C source code would be a significant undertaking.
      | ^~~~~~~~~~~~~
In file included from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/stdlib.h:97:8: error: ‘size_t’ does not name a type
   97 | extern size_t __ctype_get_mb_cur_max (void) __THROW __wur;
      |        ^~~~~~
/usr/include/stdlib.h:56:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
   55 | #include <bits/floatn.h>
  +++ |+#include <cstddef>
   56 | 
/usr/include/stdlib.h:212:36: error: ‘size_t’ has not been declared
  212 | extern int strfromd (char *__dest, size_t __size, const char *__format,
      |                                    ^~~~~~
/usr/include/stdlib.h:216:36: error: ‘size_t’ has not been declared
  216 | extern int strfromf (char *__dest, size_t __size, const char *__format,
      |                                    ^~~~~~
/usr/include/stdlib.h:220:36: error: ‘size_t’ has not been declared
  220 | extern int strfroml (char *__dest, size_t __size, const char *__format,
      |                                    ^~~~~~
/usr/include/stdlib.h:232:38: error: ‘size_t’ has not been declared
  232 | extern int strfromf32 (char *__dest, size_t __size, const char * __format,
      |                                      ^~~~~~
/usr/include/stdlib.h:238:38: error: ‘size_t’ has not been declared
  238 | extern int strfromf64 (char *__dest, size_t __size, const char * __format,
      |                                      ^~~~~~
/usr/include/stdlib.h:244:39: error: ‘size_t’ has not been declared
  244 | extern int strfromf128 (char *__dest, size_t __size, const char * __format,
      |                                       ^~~~~~
/usr/include/stdlib.h:250:39: error: ‘size_t’ has not been declared
  250 | extern int strfromf32x (char *__dest, size_t __size, const char * __format,
      |                                       ^~~~~~
/usr/include/stdlib.h:256:39: error: ‘size_t’ has not been declared
  256 | extern int strfromf64x (char *__dest, size_t __size, const char * __format,
      |                                       ^~~~~~
In file included from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/sys/types.h:33:9: error: ‘__u_char’ does not name a type
   33 | typedef __u_char u_char;
      |         ^~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:34:9: error: ‘__u_short’ does not name a type
   34 | typedef __u_short u_short;
      |         ^~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:35:9: error: ‘__u_int’ does not name a type
   35 | typedef __u_int u_int;
      |         ^~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:36:9: error: ‘__u_long’ does not name a type
   36 | typedef __u_long u_long;
      |         ^~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:37:9: error: ‘__quad_t’ does not name a type
   37 | typedef __quad_t quad_t;
      |         ^~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:38:9: error: ‘__u_quad_t’ does not name a type
   38 | typedef __u_quad_t u_quad_t;
      |         ^~~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:39:9: error: ‘__fsid_t’ does not name a type
   39 | typedef __fsid_t fsid_t;
      |         ^~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:42:9: error: ‘__loff_t’ does not name a type; did you mean ‘__locale_t’?
   42 | typedef __loff_t loff_t;
      |         ^~~~~~~~
      |         __locale_t
/usr/include/x86_64-linux-gnu/sys/types.h:47:9: error: ‘__ino_t’ does not name a type
   47 | typedef __ino_t ino_t;
      |         ^~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:54:9: error: ‘__ino64_t’ does not name a type
   54 | typedef __ino64_t ino64_t;
      |         ^~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:59:9: error: ‘__dev_t’ does not name a type
   59 | typedef __dev_t dev_t;
      |         ^~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:64:9: error: ‘__gid_t’ does not name a type
   64 | typedef __gid_t gid_t;
      |         ^~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:69:9: error: ‘__mode_t’ does not name a type; did you mean ‘__locale_t’?
   69 | typedef __mode_t mode_t;
      |         ^~~~~~~~
      |         __locale_t
/usr/include/x86_64-linux-gnu/sys/types.h:74:9: error: ‘__nlink_t’ does not name a type
   74 | typedef __nlink_t nlink_t;
      |         ^~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:79:9: error: ‘__uid_t’ does not name a type
   79 | typedef __uid_t uid_t;
      |         ^~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:97:9: error: ‘__pid_t’ does not name a type
   97 | typedef __pid_t pid_t;
      |         ^~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:103:9: error: ‘__id_t’ does not name a type
  103 | typedef __id_t id_t;
      |         ^~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:114:9: error: ‘__daddr_t’ does not name a type
  114 | typedef __daddr_t daddr_t;
      |         ^~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:115:9: error: ‘__caddr_t’ does not name a type
  115 | typedef __caddr_t caddr_t;
      |         ^~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:121:9: error: ‘__key_t’ does not name a type
  121 | typedef __key_t key_t;
      |         ^~~~~~~
In file included from /usr/include/x86_64-linux-gnu/sys/types.h:126,
                 from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/bits/types/clock_t.h:7:9: error: ‘__clock_t’ does not name a type
    7 | typedef __clock_t clock_t;
      |         ^~~~~~~~~
In file included from /usr/include/x86_64-linux-gnu/sys/types.h:128,
                 from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h:7:9: error: ‘__clockid_t’ does not name a type
    7 | typedef __clockid_t clockid_t;
      |         ^~~~~~~~~~~
In file included from /usr/include/x86_64-linux-gnu/sys/types.h:129,
                 from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/bits/types/time_t.h:7:9: error: ‘__time_t’ does not name a type
    7 | typedef __time_t time_t;
      |         ^~~~~~~~
In file included from /usr/include/x86_64-linux-gnu/sys/types.h:130,
                 from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/bits/types/timer_t.h:7:9: error: ‘__timer_t’ does not name a type
    7 | typedef __timer_t timer_t;
      |         ^~~~~~~~~
In file included from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/sys/types.h:134:9: error: ‘__useconds_t’ does not name a type
  134 | typedef __useconds_t useconds_t;
      |         ^~~~~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:138:9: error: ‘__suseconds_t’ does not name a type
  138 | typedef __suseconds_t suseconds_t;
      |         ^~~~~~~~~~~~~
In file included from /usr/include/x86_64-linux-gnu/sys/types.h:155,
                 from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/bits/stdint-intn.h:24:9: error: ‘__int8_t’ does not name a type; did you mean ‘__int128_t’?
   24 | typedef __int8_t int8_t;
      |         ^~~~~~~~
      |         __int128_t
/usr/include/x86_64-linux-gnu/bits/stdint-intn.h:25:9: error: ‘__int16_t’ does not name a type; did you mean ‘__int128_t’?
   25 | typedef __int16_t int16_t;
      |         ^~~~~~~~~
      |         __int128_t
/usr/include/x86_64-linux-gnu/bits/stdint-intn.h:26:9: error: ‘__int32_t’ does not name a type; did you mean ‘__int128_t’?
   26 | typedef __int32_t int32_t;
      |         ^~~~~~~~~
      |         __int128_t
/usr/include/x86_64-linux-gnu/bits/stdint-intn.h:27:9: error: ‘__int64_t’ does not name a type; did you mean ‘__int128_t’?
   27 | typedef __int64_t int64_t;
      |         ^~~~~~~~~
      |         __int128_t
In file included from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/sys/types.h:158:9: error: ‘__uint8_t’ does not name a type; did you mean ‘__uint128_t’?
  158 | typedef __uint8_t u_int8_t;
      |         ^~~~~~~~~
      |         __uint128_t
/usr/include/x86_64-linux-gnu/sys/types.h:159:9: error: ‘__uint16_t’ does not name a type; did you mean ‘__uint128_t’?
  159 | typedef __uint16_t u_int16_t;
      |         ^~~~~~~~~~
      |         __uint128_t
/usr/include/x86_64-linux-gnu/sys/types.h:160:9: error: ‘__uint32_t’ does not name a type; did you mean ‘__uint128_t’?
  160 | typedef __uint32_t u_int32_t;
      |         ^~~~~~~~~~
      |         __uint128_t
/usr/include/x86_64-linux-gnu/sys/types.h:161:9: error: ‘__uint64_t’ does not name a type; did you mean ‘__uint128_t’?
  161 | typedef __uint64_t u_int64_t;
      |         ^~~~~~~~~~
      |         __uint128_t
In file included from /usr/include/endian.h:35,
                 from /usr/include/x86_64-linux-gnu/sys/types.h:176,
                 from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/bits/byteswap.h:33:17: error: ‘__uint16_t’ does not name a type; did you mean ‘__uint128_t’?
   33 | static __inline __uint16_t
      |                 ^~~~~~~~~~
      |                 __uint128_t
/usr/include/x86_64-linux-gnu/bits/byteswap.h:48:17: error: ‘__uint32_t’ does not name a type; did you mean ‘__uint128_t’?
   48 | static __inline __uint32_t
      |                 ^~~~~~~~~~
      |                 __uint128_t
/usr/include/x86_64-linux-gnu/bits/byteswap.h:69:31: error: ‘__uint64_t’ does not name a type; did you mean ‘__uint128_t’?
   69 | __extension__ static __inline __uint64_t
      |                               ^~~~~~~~~~
      |                               __uint128_t
In file included from /usr/include/endian.h:36,
                 from /usr/include/x86_64-linux-gnu/sys/types.h:176,
                 from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/bits/uintn-identity.h:32:17: error: ‘__uint16_t’ does not name a type; did you mean ‘__uint128_t’?
   32 | static __inline __uint16_t
      |                 ^~~~~~~~~~
      |                 __uint128_t
/usr/include/x86_64-linux-gnu/bits/uintn-identity.h:38:17: error: ‘__uint32_t’ does not name a type; did you mean ‘__uint128_t’?
   38 | static __inline __uint32_t
      |                 ^~~~~~~~~~
      |                 __uint128_t
/usr/include/x86_64-linux-gnu/bits/uintn-identity.h:44:17: error: ‘__uint64_t’ does not name a type; did you mean ‘__uint128_t’?
   44 | static __inline __uint64_t
      |                 ^~~~~~~~~~
      |                 __uint128_t
In file included from /usr/include/x86_64-linux-gnu/sys/select.h:37,
                 from /usr/include/x86_64-linux-gnu/sys/types.h:179,
                 from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h:10:3: error: ‘__time_t’ does not name a type; did you mean ‘__sigset_t’?
   10 |   __time_t tv_sec;  /* Seconds.  */
      |   ^~~~~~~~
      |   __sigset_t
/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h:11:3: error: ‘__suseconds_t’ does not name a type
   11 |   __suseconds_t tv_usec; /* Microseconds.  */
      |   ^~~~~~~~~~~~~
In file included from /usr/include/x86_64-linux-gnu/sys/select.h:39,
                 from /usr/include/x86_64-linux-gnu/sys/types.h:179,
                 from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h:12:3: error: ‘__time_t’ does not name a type; did you mean ‘__sigset_t’?
   12 |   __time_t tv_sec;  /* Seconds.  */
      |   ^~~~~~~~
      |   __sigset_t
/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h:16:3: error: ‘__syscall_slong_t’ does not name a type
   16 |   __syscall_slong_t tv_nsec; /* Nanoseconds.  */
      |   ^~~~~~~~~~~~~~~~~
In file included from /usr/include/stdlib.h:394,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/sys/types.h:185:9: error: ‘__blksize_t’ does not name a type
  185 | typedef __blksize_t blksize_t;
      |         ^~~~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:192:9: error: ‘__blkcnt_t’ does not name a type
  192 | typedef __blkcnt_t blkcnt_t;  /* Type to count number of disk blocks.  */
      |         ^~~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:196:9: error: ‘__fsblkcnt_t’ does not name a type
  196 | typedef __fsblkcnt_t fsblkcnt_t; /* Type to count file system blocks.  */
      |         ^~~~~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:200:9: error: ‘__fsfilcnt_t’ does not name a type
  200 | typedef __fsfilcnt_t fsfilcnt_t; /* Type to count file system inodes.  */
      |         ^~~~~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:219:9: error: ‘__blkcnt64_t’ does not name a type
  219 | typedef __blkcnt64_t blkcnt64_t;     /* Type to count number of disk blocks. */
      |         ^~~~~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:220:9: error: ‘__fsblkcnt64_t’ does not name a type
  220 | typedef __fsblkcnt64_t fsblkcnt64_t; /* Type to count file system blocks.  */
      |         ^~~~~~~~~~~~~~
/usr/include/x86_64-linux-gnu/sys/types.h:221:9: error: ‘__fsfilcnt64_t’ does not name a type
  221 | typedef __fsfilcnt64_t fsfilcnt64_t; /* Type to count file system inodes.  */
      |         ^~~~~~~~~~~~~~
In file included from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/stdlib.h:411:4: error: ‘size_t’ has not been declared
  411 |    size_t __statelen) __THROW __nonnull ((2));
      |    ^~~~~~
/usr/include/stdlib.h:425:5: error: ‘int32_t’ does not name a type
  425 |     int32_t *fptr;  /* Front pointer.  */
      |     ^~~~~~~
/usr/include/stdlib.h:426:5: error: ‘int32_t’ does not name a type
  426 |     int32_t *rptr;  /* Rear pointer.  */
      |     ^~~~~~~
/usr/include/stdlib.h:427:5: error: ‘int32_t’ does not name a type
  427 |     int32_t *state;  /* Array of state values.  */
      |     ^~~~~~~
/usr/include/stdlib.h:431:5: error: ‘int32_t’ does not name a type
  431 |     int32_t *end_ptr;  /* Pointer behind state table.  */
      |     ^~~~~~~
/usr/include/stdlib.h:435:8: error: ‘int32_t’ has not been declared
  435 |        int32_t *__restrict __result) __THROW __nonnull ((1, 2));
      |        ^~~~~~~
/usr/include/stdlib.h:441:4: error: ‘size_t’ has not been declared
  441 |    size_t __statelen,
      |    ^~~~~~
/usr/include/stdlib.h:539:22: error: ‘size_t’ was not declared in this scope; did you mean ‘std::size_t’?
  539 | extern void *malloc (size_t __size) __THROW __attribute_malloc__
      |                      ^~~~~~
      |                      std::size_t
In file included from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:258:26: note: ‘std::size_t’ declared here
  258 |   typedef __SIZE_TYPE__  size_t;
      |                          ^~~~~~
In file included from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/stdlib.h:542:22: error: ‘size_t’ was not declared in this scope; did you mean ‘std::size_t’?
  542 | extern void *calloc (size_t __nmemb, size_t __size)
      |                      ^~~~~~
      |                      std::size_t
In file included from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:258:26: note: ‘std::size_t’ declared here
  258 |   typedef __SIZE_TYPE__  size_t;
      |                          ^~~~~~
In file included from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/stdlib.h:542:38: error: ‘size_t’ was not declared in this scope; did you mean ‘std::size_t’?
  542 | extern void *calloc (size_t __nmemb, size_t __size)
      |                                      ^~~~~~
      |                                      std::size_t
In file included from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:258:26: note: ‘std::size_t’ declared here
  258 |   typedef __SIZE_TYPE__  size_t;
      |                          ^~~~~~
In file included from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/stdlib.h:542:51: error: expression list treated as compound expression in initializer [-fpermissive]
  542 | extern void *calloc (size_t __nmemb, size_t __size)
      |                                                   ^
/usr/include/stdlib.h:550:36: error: ‘size_t’ has not been declared
  550 | extern void *realloc (void *__ptr, size_t __size)
      |                                    ^~~~~~
/usr/include/stdlib.h:559:41: error: ‘size_t’ has not been declared
  559 | extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
      |                                         ^~~~~~
/usr/include/stdlib.h:559:57: error: ‘size_t’ has not been declared
  559 | extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
      |                                                         ^~~~~~
In file included from /usr/include/stdlib.h:568,
                 from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/alloca.h:32:22: error: ‘size_t’ was not declared in this scope; did you mean ‘std::size_t’?
   32 | extern void *alloca (size_t __size) __THROW;
      |                      ^~~~~~
      |                      std::size_t
In file included from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:258:26: note: ‘std::size_t’ declared here
  258 |   typedef __SIZE_TYPE__  size_t;
      |                          ^~~~~~
In file included from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/stdlib.h:574:22: error: ‘size_t’ was not declared in this scope; did you mean ‘std::size_t’?
  574 | extern void *valloc (size_t __size) __THROW __attribute_malloc__
      |                      ^~~~~~
      |                      std::size_t
In file included from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:258:26: note: ‘std::size_t’ declared here
  258 |   typedef __SIZE_TYPE__  size_t;
      |                          ^~~~~~
In file included from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/stdlib.h:580:45: error: ‘size_t’ has not been declared
  580 | extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
      |                                             ^~~~~~
/usr/include/stdlib.h:580:65: error: ‘size_t’ has not been declared
  580 | extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
      |                                                                 ^~~~~~
/usr/include/stdlib.h:586:29: error: ‘size_t’ was not declared in this scope; did you mean ‘std::size_t’?
  586 | extern void *aligned_alloc (size_t __alignment, size_t __size)
      |                             ^~~~~~
      |                             std::size_t
In file included from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:258:26: note: ‘std::size_t’ declared here
  258 |   typedef __SIZE_TYPE__  size_t;
      |                          ^~~~~~
In file included from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/stdlib.h:586:49: error: ‘size_t’ was not declared in this scope; did you mean ‘std::size_t’?
  586 | extern void *aligned_alloc (size_t __alignment, size_t __size)
      |                                                 ^~~~~~
      |                                                 std::size_t
In file included from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:258:26: note: ‘std::size_t’ declared here
  258 |   typedef __SIZE_TYPE__  size_t;
      |                          ^~~~~~
In file included from /usr/include/c++/9/cstdlib:75,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/stdlib.h:586:62: error: expression list treated as compound expression in initializer [-fpermissive]
  586 | extern void *aligned_alloc (size_t __alignment, size_t __size)
      |                                                              ^
/usr/include/stdlib.h:821:9: error: ‘size_t’ has not been declared
  821 |         size_t __nmemb, size_t __size, __compar_fn_t __compar)
      |         ^~~~~~
/usr/include/stdlib.h:821:25: error: ‘size_t’ has not been declared
  821 |         size_t __nmemb, size_t __size, __compar_fn_t __compar)
      |                         ^~~~~~
/usr/include/stdlib.h:830:34: error: ‘size_t’ has not been declared
  830 | extern void qsort (void *__base, size_t __nmemb, size_t __size,
      |                                  ^~~~~~
/usr/include/stdlib.h:830:50: error: ‘size_t’ has not been declared
  830 | extern void qsort (void *__base, size_t __nmemb, size_t __size,
      |                                                  ^~~~~~
/usr/include/stdlib.h:833:36: error: ‘size_t’ has not been declared
  833 | extern void qsort_r (void *__base, size_t __nmemb, size_t __size,
      |                                    ^~~~~~
/usr/include/stdlib.h:833:52: error: ‘size_t’ has not been declared
  833 | extern void qsort_r (void *__base, size_t __nmemb, size_t __size,
      |                                                    ^~~~~~
/usr/include/stdlib.h:904:6: error: ‘size_t’ has not been declared
  904 |      size_t __len) __THROW __nonnull ((3, 4, 5));
      |      ^~~~~~
/usr/include/stdlib.h:907:6: error: ‘size_t’ has not been declared
  907 |      size_t __len) __THROW __nonnull ((3, 4, 5));
      |      ^~~~~~
/usr/include/stdlib.h:911:31: error: ‘size_t’ has not been declared
  911 |       char *__restrict __buf, size_t __len)
      |                               ^~~~~~
/usr/include/stdlib.h:915:31: error: ‘size_t’ has not been declared
  915 |       char *__restrict __buf, size_t __len)
      |                               ^~~~~~
/usr/include/stdlib.h:922:36: error: ‘size_t’ has not been declared
  922 | extern int mblen (const char *__s, size_t __n) __THROW;
      |                                    ^~~~~~
/usr/include/stdlib.h:926:34: error: ‘size_t’ has not been declared
  926 |      const char *__restrict __s, size_t __n) __THROW;
      |                                  ^~~~~~
/usr/include/stdlib.h:933:8: error: ‘size_t’ does not name a type
  933 | extern size_t mbstowcs (wchar_t *__restrict  __pwcs,
      |        ^~~~~~
/usr/include/stdlib.h:933:8: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
/usr/include/stdlib.h:936:8: error: ‘size_t’ does not name a type
  936 | extern size_t wcstombs (char *__restrict __s,
      |        ^~~~~~
/usr/include/stdlib.h:936:8: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
/usr/include/stdlib.h:992:46: error: ‘size_t’ has not been declared
  992 | extern int ptsname_r (int __fd, char *__buf, size_t __buflen)
      |                                              ^~~~~~
In file included from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_68.cpp:6:
/usr/include/c++/9/cstdlib:154:11: error: ‘::mbstowcs’ has not been declared
  154 |   using ::mbstowcs;
      |           ^~~~~~~~
/usr/include/c++/9/cstdlib:171:11: error: ‘::wcstombs’ has not been declared
  171 |   using ::wcstombs;
      |           ^~~~~~~~
In file included from ./CPP_68.cpp:6:
/usr/include/c++/9/stdlib.h:68:12: error: ‘std::mbstowcs’ has not been declared
   68 | using std::mbstowcs;
      |            ^~~~~~~~
/usr/include/c++/9/stdlib.h:80:12: error: ‘std::wcstombs’ has not been declared
   80 | using std::wcstombs;
      |            ^~~~~~~~
In file included from ./CPP_68.cpp:7:
/usr/include/string.h:44:8: error: ‘size_t’ has not been declared
   44 |        size_t __n) __THROW __nonnull ((1, 2));
      |        ^~~~~~
/usr/include/string.h:47:56: error: ‘size_t’ has not been declared
   47 | extern void *memmove (void *__dest, const void *__src, size_t __n)
      |                                                        ^~~~~~
/usr/include/string.h:55:18: error: ‘size_t’ has not been declared
   55 |         int __c, size_t __n)
      |                  ^~~~~~
/usr/include/string.h:61:42: error: ‘size_t’ has not been declared
   61 | extern void *memset (void *__s, int __c, size_t __n) __THROW __nonnull ((1));
      |                                          ^~~~~~
/usr/include/string.h:64:56: error: ‘size_t’ has not been declared
   64 | extern int memcmp (const void *__s1, const void *__s2, size_t __n)
      |                                                        ^~~~~~
/usr/include/string.h:71:42: error: ‘size_t’ has not been declared
   71 | extern void *memchr (void *__s, int __c, size_t __n)
      |                                          ^~~~~~
/usr/include/string.h:73:54: error: ‘size_t’ has not been declared
   73 | extern const void *memchr (const void *__s, int __c, size_t __n)
      |                                                      ^~~~~~
/usr/include/string.h:110:49: error: ‘size_t’ has not been declared
  110 | extern "C++" void *memrchr (void *__s, int __c, size_t __n)
      |                                                 ^~~~~~
/usr/include/string.h:112:61: error: ‘size_t’ has not been declared
  112 | extern "C++" const void *memrchr (const void *__s, int __c, size_t __n)
      |                                                             ^~~~~~
/usr/include/string.h:126:39: error: ‘size_t’ has not been declared
  126 |         const char *__restrict __src, size_t __n)
      |                                       ^~~~~~
/usr/include/string.h:134:9: error: ‘size_t’ has not been declared
  134 |         size_t __n) __THROW __nonnull ((1, 2));
      |         ^~~~~~
/usr/include/string.h:140:57: error: ‘size_t’ has not been declared
  140 | extern int strncmp (const char *__s1, const char *__s2, size_t __n)
      |                                                         ^~~~~~
/usr/include/string.h:147:8: error: ‘size_t’ does not name a type
  147 | extern size_t strxfrm (char *__restrict __dest,
      |        ^~~~~~
/usr/include/string.h:34:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
   33 | #include <stddef.h>
  +++ |+#include <cstddef>
   34 | 
/usr/include/string.h:160:8: error: ‘size_t’ does not name a type
  160 | extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
      |        ^~~~~~
/usr/include/string.h:160:8: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
/usr/include/string.h:175:45: error: ‘size_t’ has not been declared
  175 | extern char *strndup (const char *__string, size_t __n)
      |                                             ^~~~~~
/usr/include/string.h:273:8: error: ‘size_t’ does not name a type
  273 | extern size_t strcspn (const char *__s, const char *__reject)
      |        ^~~~~~
/usr/include/string.h:273:8: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
/usr/include/string.h:277:8: error: ‘size_t’ does not name a type
  277 | extern size_t strspn (const char *__s, const char *__accept)
      |        ^~~~~~
/usr/include/string.h:277:8: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
/usr/include/string.h:369:46: error: ‘size_t’ has not been declared
  369 | extern void *memmem (const void *__haystack, size_t __haystacklen,
      |                                              ^~~~~~
/usr/include/string.h:370:30: error: ‘size_t’ has not been declared
  370 |        const void *__needle, size_t __needlelen)
      |                              ^~~~~~
/usr/include/string.h:376:34: error: ‘size_t’ has not been declared
  376 |    const void *__restrict __src, size_t __n)
      |                                  ^~~~~~
/usr/include/string.h:379:39: error: ‘size_t’ has not been declared
  379 |         const void *__restrict __src, size_t __n)
      |                                       ^~~~~~
/usr/include/string.h:385:8: error: ‘size_t’ does not name a type
  385 | extern size_t strlen (const char *__s)
      |        ^~~~~~
/usr/include/string.h:385:8: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
/usr/include/string.h:391:8: error: ‘size_t’ does not name a type
  391 | extern size_t strnlen (const char *__string, size_t __maxlen)
      |        ^~~~~~
/usr/include/string.h:391:8: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
/usr/include/string.h:421:53: error: ‘size_t’ has not been declared
  421 | extern char *strerror_r (int __errnum, char *__buf, size_t __buflen)
      |                                                     ^~~~~~
In file included from /usr/include/string.h:432,
                 from ./CPP_68.cpp:7:
/usr/include/strings.h:34:54: error: ‘size_t’ has not been declared
   34 | extern int bcmp (const void *__s1, const void *__s2, size_t __n)
      |                                                      ^~~~~~
/usr/include/strings.h:38:53: error: ‘size_t’ has not been declared
   38 | extern void bcopy (const void *__src, void *__dest, size_t __n)
      |                                                     ^~~~~~
/usr/include/strings.h:42:31: error: ‘size_t’ has not been declared
   42 | extern void bzero (void *__s, size_t __n) __THROW __nonnull ((1));
      |                               ^~~~~~
/usr/include/strings.h:120:61: error: ‘size_t’ has not been declared
  120 | extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
      |                                                             ^~~~~~
/usr/include/strings.h:134:6: error: ‘size_t’ has not been declared
  134 |      size_t __n, locale_t __loc)
      |      ^~~~~~
In file included from ./CPP_68.cpp:7:
/usr/include/string.h:436:40: error: ‘size_t’ has not been declared
  436 | extern void explicit_bzero (void *__s, size_t __n) __THROW __nonnull ((1));
      |                                        ^~~~~~
/usr/include/string.h:458:34: error: ‘size_t’ has not been declared
  458 |    const char *__restrict __src, size_t __n)
      |                                  ^~~~~~
/usr/include/string.h:461:39: error: ‘size_t’ has not been declared
  461 |         const char *__restrict __src, size_t __n)
      |                                       ^~~~~~
/usr/include/string.h:474:34: error: ‘size_t’ has not been declared
  474 | extern void *memfrob (void *__s, size_t __n) __THROW __nonnull ((1));
      |                                  ^~~~~~
./CPP_68.cpp: In function ‘void pluck(vector*, vector*)’:
./CPP_68.cpp:30:65: error: ‘malloc’ cannot be used as a function
   30 |         int *new_data = (int *)malloc(new_capacity * sizeof(int));
      |                                                                 ^
./CPP_68.cpp: In function ‘int main()’:
./CPP_68.cpp:50:44: error: ‘malloc’ cannot be used as a function
   50 |   src.data = (int *)malloc(10 * sizeof(int));
      |                                            ^
./CPP_68.cpp:54:44: error: ‘malloc’ cannot be used as a function
   54 |   dst.data = (int *)malloc(10 * sizeof(int));
      |                                            ^
./CPP_68.cpp:67:5: error: ‘printf’ was not declared in this scope
   67 |     printf("%d ", dst.data[i]);
      |     ^~~~~~
./CPP_68.cpp:8:1: note: ‘printf’ is defined in header ‘<cstdio>’; did you forget to ‘#include <cstdio>’?
    7 | #include <string.h>
  +++ |+#include <cstdio>
    8 | 
./CPP_68.cpp:69:3: error: ‘printf’ was not declared in this scope
   69 |   printf("\n");
      |   ^~~~~~
./CPP_68.cpp:69:3: note: ‘printf’ is defined in header ‘<cstdio>’; did you forget to ‘#include <cstdio>’?
./CPP_68.cpp: At global scope:
./CPP_68.cpp:74:1: error: ‘Please’ does not name a type
   74 | Please note that this code is not exactly equivalent to the original IR code, as some details may have been lost during the translation process. Additionally, I had to add some boilerplate code to make the example compilable.
      | ^~~~~~
./CPP_68.cpp:79:13: error: ‘vector’ is not a template
   79 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_68.cpp:79:27: error: ‘vector’ is not a template
   79 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_68.cpp: In function ‘bool issame(vector, vector)’:
./CPP_68.cpp:80:11: error: ‘struct vector’ has no member named ‘size’
   80 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_68.cpp:80:21: error: ‘struct vector’ has no member named ‘size’
   80 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_68.cpp:81:22: error: ‘struct vector’ has no member named ‘size’
   81 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_68.cpp:83:14: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   83 |         if (a[i]!=b[i]) return false;
      |              ^
./CPP_68.cpp:83:20: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   83 |         if (a[i]!=b[i]) return false;
      |                    ^
./CPP_68.cpp: At global scope:
./CPP_68.cpp:87:5: error: redefinition of ‘int main()’
   87 | int main(){
      |     ^~~~
./CPP_68.cpp:45:5: note: ‘int main()’ previously defined here
   45 | int main() {
      |     ^~~~
In file included from ./CPP_68.cpp:78:
./CPP_68.cpp: In function ‘int main()’:
./CPP_68.cpp:88:33: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   88 |     assert (issame(pluck({4,2,3}) , {2, 1}));
      |                                 ^
      |                                 |
      |                                 <brace-enclosed initializer list>
./CPP_68.cpp:15:20: note:   initializing argument 1 of ‘void pluck(vector*, vector*)’
   15 | void pluck(vector *dst, vector *src) {
      |            ~~~~~~~~^~~
In file included from ./CPP_68.cpp:78:
./CPP_68.cpp:88:5: error: ‘__assert_fail’ was not declared in this scope
   88 |     assert (issame(pluck({4,2,3}) , {2, 1}));
      |     ^~~~~~
./CPP_68.cpp:89:33: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   89 |     assert (issame(pluck({1,2,3}) , {2, 1}));
      |                                 ^
      |                                 |
      |                                 <brace-enclosed initializer list>
./CPP_68.cpp:15:20: note:   initializing argument 1 of ‘void pluck(vector*, vector*)’
   15 | void pluck(vector *dst, vector *src) {
      |            ~~~~~~~~^~~
In file included from ./CPP_68.cpp:78:
./CPP_68.cpp:90:28: error: too few arguments to function ‘void pluck(vector*, vector*)’
   90 |     assert (issame(pluck({}) , {}));
      |                            ^
./CPP_68.cpp:15:6: note: declared here
   15 | void pluck(vector *dst, vector *src) {
      |      ^~~~~
In file included from ./CPP_68.cpp:78:
./CPP_68.cpp:91:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   91 |     assert (issame(pluck({5, 0, 3, 0, 4, 2}) , {0, 1}));
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_68.cpp:15:20: note:   initializing argument 1 of ‘void pluck(vector*, vector*)’
   15 | void pluck(vector *dst, vector *src) {
      |            ~~~~~~~~^~~
In file included from ./CPP_68.cpp:78:
./CPP_68.cpp:92:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   92 |     assert (issame(pluck({1, 2, 3, 0, 5, 3}) , {0, 3}));
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_68.cpp:15:20: note:   initializing argument 1 of ‘void pluck(vector*, vector*)’
   15 | void pluck(vector *dst, vector *src) {
      |            ~~~~~~~~^~~
In file included from ./CPP_68.cpp:78:
./CPP_68.cpp:93:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   93 |     assert (issame(pluck({5, 4, 8, 4 ,8}) , {4, 1}));
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_68.cpp:15:20: note:   initializing argument 1 of ‘void pluck(vector*, vector*)’
   15 | void pluck(vector *dst, vector *src) {
      |            ~~~~~~~~^~~
In file included from ./CPP_68.cpp:78:
./CPP_68.cpp:94:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   94 |     assert (issame(pluck({7, 6, 7, 1}) , {6, 1}));
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_68.cpp:15:20: note:   initializing argument 1 of ‘void pluck(vector*, vector*)’
   15 | void pluck(vector *dst, vector *src) {
      |            ~~~~~~~~^~~
In file included from ./CPP_68.cpp:78:
./CPP_68.cpp:95:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   95 |     assert (issame(pluck({7, 9, 7, 1}) , {}));
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_68.cpp:15:20: note:   initializing argument 1 of ‘void pluck(vector*, vector*)’
   15 | void pluck(vector *dst, vector *src) {
      |            ~~~~~~~~^~~


CPP_163.cpp: Compilation Failed
Error: ./CPP_163.cpp:68:13: error: ‘vector’ was not declared in this scope
   68 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_163.cpp:68:20: error: expected primary-expression before ‘int’
   68 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_163.cpp:68:27: error: ‘vector’ was not declared in this scope
   68 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_163.cpp:68:34: error: expected primary-expression before ‘int’
   68 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_163.cpp:68:39: error: expression list treated as compound expression in initializer [-fpermissive]
   68 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
./CPP_163.cpp:76:5: error: redefinition of ‘int main()’
   76 | int main(){
      |     ^~~~
./CPP_163.cpp:60:5: note: ‘int main()’ previously defined here
   60 | int main() {
      |     ^~~~
In file included from ./CPP_163.cpp:67:
./CPP_163.cpp: In function ‘int main()’:
./CPP_163.cpp:77:38: error: invalid conversion from ‘int’ to ‘std_vector*’ [-fpermissive]
   77 |     assert (issame(generate_integers(2, 10) , {2, 4, 6, 8}));
      |                                      ^
      |                                      |
      |                                      int
./CPP_163.cpp:77:43: error: too few arguments to function ‘void generate_integers(std_vector*, int, int)’
   77 |     assert (issame(generate_integers(2, 10) , {2, 4, 6, 8}));
      |                                           ^
./CPP_163.cpp:19:6: note: declared here
   19 | void generate_integers(std_vector* vector, int n, int m) {
      |      ^~~~~~~~~~~~~~~~~
In file included from ./CPP_163.cpp:67:
./CPP_163.cpp:77:59: error: ‘issame’ cannot be used as a function
   77 |     assert (issame(generate_integers(2, 10) , {2, 4, 6, 8}));
      |                                                           ^
./CPP_163.cpp:78:38: error: invalid conversion from ‘int’ to ‘std_vector*’ [-fpermissive]
   78 |     assert (issame(generate_integers(10, 2) , {2, 4, 6, 8}));
      |                                      ^~
      |                                      |
      |                                      int
./CPP_163.cpp:78:43: error: too few arguments to function ‘void generate_integers(std_vector*, int, int)’
   78 |     assert (issame(generate_integers(10, 2) , {2, 4, 6, 8}));
      |                                           ^
./CPP_163.cpp:19:6: note: declared here
   19 | void generate_integers(std_vector* vector, int n, int m) {
      |      ^~~~~~~~~~~~~~~~~
In file included from ./CPP_163.cpp:67:
./CPP_163.cpp:78:59: error: ‘issame’ cannot be used as a function
   78 |     assert (issame(generate_integers(10, 2) , {2, 4, 6, 8}));
      |                                                           ^
./CPP_163.cpp:79:38: error: invalid conversion from ‘int’ to ‘std_vector*’ [-fpermissive]
   79 |     assert (issame(generate_integers(132, 2) , {2, 4, 6, 8}));
      |                                      ^~~
      |                                      |
      |                                      int
./CPP_163.cpp:79:44: error: too few arguments to function ‘void generate_integers(std_vector*, int, int)’
   79 |     assert (issame(generate_integers(132, 2) , {2, 4, 6, 8}));
      |                                            ^
./CPP_163.cpp:19:6: note: declared here
   19 | void generate_integers(std_vector* vector, int n, int m) {
      |      ^~~~~~~~~~~~~~~~~
In file included from ./CPP_163.cpp:67:
./CPP_163.cpp:79:60: error: ‘issame’ cannot be used as a function
   79 |     assert (issame(generate_integers(132, 2) , {2, 4, 6, 8}));
      |                                                            ^
./CPP_163.cpp:80:38: error: invalid conversion from ‘int’ to ‘std_vector*’ [-fpermissive]
   80 |     assert (issame(generate_integers(17,89) , {}));
      |                                      ^~
      |                                      |
      |                                      int
./CPP_163.cpp:80:43: error: too few arguments to function ‘void generate_integers(std_vector*, int, int)’
   80 |     assert (issame(generate_integers(17,89) , {}));
      |                                           ^
./CPP_163.cpp:19:6: note: declared here
   19 | void generate_integers(std_vector* vector, int n, int m) {
      |      ^~~~~~~~~~~~~~~~~
In file included from ./CPP_163.cpp:67:
./CPP_163.cpp:80:49: error: ‘issame’ cannot be used as a function
   80 |     assert (issame(generate_integers(17,89) , {}));
      |                                                 ^


CPP_74.cpp: Compilation Failed
Error: ./CPP_74.cpp:3:23: error: variable or field ‘total_match’ declared void
    3 | void total_match(std::vector<std::string>& result, std::vector<std::string>& vec1, std::vector<std::string>& vec2) {
      |                       ^~~~~~
./CPP_74.cpp:3:23: error: ‘vector’ is not a member of ‘std’
./CPP_74.cpp:2:1: note: ‘std::vector’ is defined in header ‘<vector>’; did you forget to ‘#include <vector>’?
    1 | #include <string.h>
  +++ |+#include <vector>
    2 | 
./CPP_74.cpp:3:35: error: ‘string’ is not a member of ‘std’
    3 | void total_match(std::vector<std::string>& result, std::vector<std::string>& vec1, std::vector<std::string>& vec2) {
      |                                   ^~~~~~
./CPP_74.cpp:2:1: note: ‘std::string’ is defined in header ‘<string>’; did you forget to ‘#include <string>’?
    1 | #include <string.h>
  +++ |+#include <string>
    2 | 
./CPP_74.cpp:3:44: error: ‘result’ was not declared in this scope
    3 | void total_match(std::vector<std::string>& result, std::vector<std::string>& vec1, std::vector<std::string>& vec2) {
      |                                            ^~~~~~
./CPP_74.cpp:3:57: error: ‘vector’ is not a member of ‘std’
    3 | void total_match(std::vector<std::string>& result, std::vector<std::string>& vec1, std::vector<std::string>& vec2) {
      |                                                         ^~~~~~
./CPP_74.cpp:3:57: note: ‘std::vector’ is defined in header ‘<vector>’; did you forget to ‘#include <vector>’?
./CPP_74.cpp:3:69: error: ‘string’ is not a member of ‘std’
    3 | void total_match(std::vector<std::string>& result, std::vector<std::string>& vec1, std::vector<std::string>& vec2) {
      |                                                                     ^~~~~~
./CPP_74.cpp:3:69: note: ‘std::string’ is defined in header ‘<string>’; did you forget to ‘#include <string>’?
./CPP_74.cpp:3:78: error: ‘vec1’ was not declared in this scope
    3 | void total_match(std::vector<std::string>& result, std::vector<std::string>& vec1, std::vector<std::string>& vec2) {
      |                                                                              ^~~~
./CPP_74.cpp:3:89: error: ‘vector’ is not a member of ‘std’
    3 | void total_match(std::vector<std::string>& result, std::vector<std::string>& vec1, std::vector<std::string>& vec2) {
      |                                                                                         ^~~~~~
./CPP_74.cpp:3:89: note: ‘std::vector’ is defined in header ‘<vector>’; did you forget to ‘#include <vector>’?
./CPP_74.cpp:3:101: error: ‘string’ is not a member of ‘std’
    3 | void total_match(std::vector<std::string>& result, std::vector<std::string>& vec1, std::vector<std::string>& vec2) {
      |                                                                                                     ^~~~~~
./CPP_74.cpp:3:101: note: ‘std::string’ is defined in header ‘<string>’; did you forget to ‘#include <string>’?
./CPP_74.cpp:3:110: error: ‘vec2’ was not declared in this scope
    3 | void total_match(std::vector<std::string>& result, std::vector<std::string>& vec1, std::vector<std::string>& vec2) {
      |                                                                                                              ^~~~
./CPP_74.cpp:36:13: error: ‘vector’ was not declared in this scope
   36 | bool issame(vector<string> a,vector<string>b){
      |             ^~~~~~
./CPP_74.cpp:36:20: error: ‘string’ was not declared in this scope
   36 | bool issame(vector<string> a,vector<string>b){
      |                    ^~~~~~
./CPP_74.cpp:36:28: error: ‘a’ was not declared in this scope
   36 | bool issame(vector<string> a,vector<string>b){
      |                            ^
./CPP_74.cpp:36:30: error: ‘vector’ was not declared in this scope
   36 | bool issame(vector<string> a,vector<string>b){
      |                              ^~~~~~
./CPP_74.cpp:36:37: error: ‘string’ was not declared in this scope
   36 | bool issame(vector<string> a,vector<string>b){
      |                                     ^~~~~~
./CPP_74.cpp:36:44: error: ‘b’ was not declared in this scope
   36 | bool issame(vector<string> a,vector<string>b){
      |                                            ^
./CPP_74.cpp:36:45: error: expression list treated as compound expression in initializer [-fpermissive]
   36 | bool issame(vector<string> a,vector<string>b){
      |                                             ^
In file included from ./CPP_74.cpp:35:
./CPP_74.cpp: In function ‘int main()’:
./CPP_74.cpp:45:20: error: ‘total_match’ was not declared in this scope
   45 |     assert (issame(total_match({}, {}) , {}));
      |                    ^~~~~~~~~~~
./CPP_74.cpp:45:44: error: ‘issame’ cannot be used as a function
   45 |     assert (issame(total_match({}, {}) , {}));
      |                                            ^
./CPP_74.cpp:46:77: error: ‘issame’ cannot be used as a function
   46 |     assert (issame(total_match({"hi", "admin"}, {"hi", "hi"}) , {"hi", "hi"}));
      |                                                                             ^
./CPP_74.cpp:47:100: error: ‘issame’ cannot be used as a function
   47 |     assert (issame(total_match({"hi", "admin"}, {"hi", "hi", "admin", "project"}) , {"hi", "admin"}));
      |                                                                                                    ^
./CPP_74.cpp:48:73: error: ‘issame’ cannot be used as a function
   48 |     assert (issame(total_match({"4"}, {"1", "2", "3", "4", "5"}) , {"4"}));
      |                                                                         ^
./CPP_74.cpp:49:77: error: ‘issame’ cannot be used as a function
   49 |     assert (issame(total_match({"hi", "admin"}, {"hI", "Hi"}) , {"hI", "Hi"}));
      |                                                                             ^
./CPP_74.cpp:50:89: error: ‘issame’ cannot be used as a function
   50 |     assert (issame(total_match({"hi", "admin"}, {"hI", "hi", "hi"}) , {"hI", "hi", "hi"}));
      |                                                                                         ^
./CPP_74.cpp:51:87: error: ‘issame’ cannot be used as a function
   51 |     assert (issame(total_match({"hi", "admin"}, {"hI", "hi", "hii"}) , {"hi", "admin"}));
      |                                                                                       ^
./CPP_74.cpp:52:50: error: ‘issame’ cannot be used as a function
   52 |     assert (issame(total_match({}, {"this"}) , {}));
      |                                                  ^
./CPP_74.cpp:53:50: error: ‘issame’ cannot be used as a function
   53 |     assert (issame(total_match({"this"}, {}) , {}));
      |                                                  ^


CPP_54.cpp: Compilation Failed
Error: In file included from ./CPP_54.cpp:42:
./CPP_54.cpp: In function ‘int main()’:
./CPP_54.cpp:44:57: error: too few arguments to function ‘bool same_chars(const char*, const char*, size_t, size_t)’
   44 |     assert (same_chars("eabcdzzzz", "dddzzzzzzzddeddabc") == true);
      |                                                         ^
./CPP_54.cpp:4:6: note: declared here
    4 | bool same_chars(const char* s1, const char* s2, size_t len1, size_t len2) {
      |      ^~~~~~~~~~
In file included from ./CPP_54.cpp:42:
./CPP_54.cpp:45:44: error: too few arguments to function ‘bool same_chars(const char*, const char*, size_t, size_t)’
   45 |     assert (same_chars("abcd", "dddddddabc") == true);
      |                                            ^
./CPP_54.cpp:4:6: note: declared here
    4 | bool same_chars(const char* s1, const char* s2, size_t len1, size_t len2) {
      |      ^~~~~~~~~~
In file included from ./CPP_54.cpp:42:
./CPP_54.cpp:46:44: error: too few arguments to function ‘bool same_chars(const char*, const char*, size_t, size_t)’
   46 |     assert (same_chars("dddddddabc", "abcd") == true);
      |                                            ^
./CPP_54.cpp:4:6: note: declared here
    4 | bool same_chars(const char* s1, const char* s2, size_t len1, size_t len2) {
      |      ^~~~~~~~~~
In file included from ./CPP_54.cpp:42:
./CPP_54.cpp:47:45: error: too few arguments to function ‘bool same_chars(const char*, const char*, size_t, size_t)’
   47 |     assert (same_chars("eabcd", "dddddddabc") == false);
      |                                             ^
./CPP_54.cpp:4:6: note: declared here
    4 | bool same_chars(const char* s1, const char* s2, size_t len1, size_t len2) {
      |      ^~~~~~~~~~
In file included from ./CPP_54.cpp:42:
./CPP_54.cpp:48:45: error: too few arguments to function ‘bool same_chars(const char*, const char*, size_t, size_t)’
   48 |     assert (same_chars("abcd", "dddddddabcf") == false);
      |                                             ^
./CPP_54.cpp:4:6: note: declared here
    4 | bool same_chars(const char* s1, const char* s2, size_t len1, size_t len2) {
      |      ^~~~~~~~~~
In file included from ./CPP_54.cpp:42:
./CPP_54.cpp:49:56: error: too few arguments to function ‘bool same_chars(const char*, const char*, size_t, size_t)’
   49 |     assert (same_chars("eabcdzzzz", "dddzzzzzzzddddabc") == false);
      |                                                        ^
./CPP_54.cpp:4:6: note: declared here
    4 | bool same_chars(const char* s1, const char* s2, size_t len1, size_t len2) {
      |      ^~~~~~~~~~
In file included from ./CPP_54.cpp:42:
./CPP_54.cpp:50:39: error: too few arguments to function ‘bool same_chars(const char*, const char*, size_t, size_t)’
   50 |     assert (same_chars("aabb", "aaccc") == false);
      |                                       ^
./CPP_54.cpp:4:6: note: declared here
    4 | bool same_chars(const char* s1, const char* s2, size_t len1, size_t len2) {
      |      ^~~~~~~~~~


CPP_135.cpp: Compilation Failed
Error: In file included from ./CPP_135.cpp:55:
./CPP_135.cpp: In function ‘int main()’:
./CPP_135.cpp:57:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   57 |     assert (can_arrange({1,2,4,3,5})==3);
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_135.cpp:3:22: note:   initializing argument 1 of ‘int can_arrange(int*, int)’
    3 | int can_arrange(int* data, int size) {
      |                 ~~~~~^~~~
In file included from ./CPP_135.cpp:55:
./CPP_135.cpp:58:34: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   58 |     assert (can_arrange({1,2,4,5})==-1);
      |                                  ^
      |                                  |
      |                                  <brace-enclosed initializer list>
./CPP_135.cpp:3:22: note:   initializing argument 1 of ‘int can_arrange(int*, int)’
    3 | int can_arrange(int* data, int size) {
      |                 ~~~~~^~~~
In file included from ./CPP_135.cpp:55:
./CPP_135.cpp:59:45: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   59 |     assert (can_arrange({1,4,2,5,6,7,8,9,10})==2);
      |                                             ^
      |                                             |
      |                                             <brace-enclosed initializer list>
./CPP_135.cpp:3:22: note:   initializing argument 1 of ‘int can_arrange(int*, int)’
    3 | int can_arrange(int* data, int size) {
      |                 ~~~~~^~~~
In file included from ./CPP_135.cpp:55:
./CPP_135.cpp:60:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   60 |     assert (can_arrange({4,8,5,7,3})==4);
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_135.cpp:3:22: note:   initializing argument 1 of ‘int can_arrange(int*, int)’
    3 | int can_arrange(int* data, int size) {
      |                 ~~~~~^~~~
In file included from ./CPP_135.cpp:55:
./CPP_135.cpp:61:27: error: too few arguments to function ‘int can_arrange(int*, int)’
   61 |     assert (can_arrange({})==-1);
      |                           ^
./CPP_135.cpp:3:5: note: declared here
    3 | int can_arrange(int* data, int size) {
      |     ^~~~~~~~~~~


CPP_8.cpp: Compilation Failed
Error: ./CPP_8.cpp:67:13: error: ‘vector’ was not declared in this scope; did you mean ‘Vector’?
   67 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
      |             Vector
./CPP_8.cpp:67:20: error: expected primary-expression before ‘int’
   67 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_8.cpp:67:27: error: ‘vector’ was not declared in this scope; did you mean ‘Vector’?
   67 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
      |                           Vector
./CPP_8.cpp:67:34: error: expected primary-expression before ‘int’
   67 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_8.cpp:67:39: error: expression list treated as compound expression in initializer [-fpermissive]
   67 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_8.cpp:66:
./CPP_8.cpp: In function ‘int main()’:
./CPP_8.cpp:76:34: error: too few arguments to function ‘void sum_product(Vector*, Vector*)’
   76 |     assert (issame(sum_product({}) ,{0, 1}));
      |                                  ^
./CPP_8.cpp:11:6: note: declared here
   11 | void sum_product(Vector* result, Vector* input) {
      |      ^~~~~~~~~~~
In file included from ./CPP_8.cpp:66:
./CPP_8.cpp:76:43: error: ‘issame’ cannot be used as a function
   76 |     assert (issame(sum_product({}) ,{0, 1}));
      |                                           ^
./CPP_8.cpp:77:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   77 |     assert (issame(sum_product({1, 1, 1}), {3, 1}));
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_8.cpp:11:26: note:   initializing argument 1 of ‘void sum_product(Vector*, Vector*)’
   11 | void sum_product(Vector* result, Vector* input) {
      |                  ~~~~~~~~^~~~~~
In file included from ./CPP_8.cpp:66:
./CPP_8.cpp:77:50: error: ‘issame’ cannot be used as a function
   77 |     assert (issame(sum_product({1, 1, 1}), {3, 1}));
      |                                                  ^
./CPP_8.cpp:78:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   78 |     assert (issame(sum_product({100, 0}),{100, 0}));
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_8.cpp:11:26: note:   initializing argument 1 of ‘void sum_product(Vector*, Vector*)’
   11 | void sum_product(Vector* result, Vector* input) {
      |                  ~~~~~~~~^~~~~~
In file included from ./CPP_8.cpp:66:
./CPP_8.cpp:78:50: error: ‘issame’ cannot be used as a function
   78 |     assert (issame(sum_product({100, 0}),{100, 0}));
      |                                                  ^
./CPP_8.cpp:79:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘Vector*’
   79 |      assert (issame(sum_product({3, 5, 7}) , {3 + 5 + 7, 3 * 5 * 7}));
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_8.cpp:11:26: note:   initializing argument 1 of ‘void sum_product(Vector*, Vector*)’
   11 | void sum_product(Vector* result, Vector* input) {
      |                  ~~~~~~~~^~~~~~
In file included from ./CPP_8.cpp:66:
./CPP_8.cpp:79:68: error: ‘issame’ cannot be used as a function
   79 |      assert (issame(sum_product({3, 5, 7}) , {3 + 5 + 7, 3 * 5 * 7}));
      |                                                                    ^
./CPP_8.cpp:80:38: error: invalid conversion from ‘int’ to ‘Vector*’ [-fpermissive]
   80 |       assert (issame(sum_product({10}) ,{10, 10}));
      |                                      ^
      |                                      |
      |                                      int
./CPP_8.cpp:80:38: error: too few arguments to function ‘void sum_product(Vector*, Vector*)’
./CPP_8.cpp:11:6: note: declared here
   11 | void sum_product(Vector* result, Vector* input) {
      |      ^~~~~~~~~~~
In file included from ./CPP_8.cpp:66:
./CPP_8.cpp:80:49: error: ‘issame’ cannot be used as a function
   80 |       assert (issame(sum_product({10}) ,{10, 10}));
      |                                                 ^


CPP_42.cpp: Compilation Failed
Error: ./CPP_42.cpp:62:13: error: ‘vector’ is not a template
   62 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_42.cpp:62:27: error: ‘vector’ is not a template
   62 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_42.cpp: In function ‘bool issame(vector, vector)’:
./CPP_42.cpp:63:11: error: ‘struct vector’ has no member named ‘size’
   63 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_42.cpp:63:21: error: ‘struct vector’ has no member named ‘size’
   63 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_42.cpp:64:22: error: ‘struct vector’ has no member named ‘size’
   64 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_42.cpp:66:14: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   66 |         if (a[i]!=b[i]) return false;
      |              ^
./CPP_42.cpp:66:20: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   66 |         if (a[i]!=b[i]) return false;
      |                    ^
In file included from ./CPP_42.cpp:61:
./CPP_42.cpp: In function ‘int main()’:
./CPP_42.cpp:71:32: error: too few arguments to function ‘void incr_list(vector*, vector*)’
   71 |     assert (issame(incr_list({}) , {}));
      |                                ^
./CPP_42.cpp:14:6: note: declared here
   14 | void incr_list(vector* res, vector* input) {
      |      ^~~~~~~~~
In file included from ./CPP_42.cpp:61:
./CPP_42.cpp:72:39: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   72 |     assert (issame(incr_list({3, 2, 1}) , {4, 3, 2}));
      |                                       ^
      |                                       |
      |                                       <brace-enclosed initializer list>
./CPP_42.cpp:14:24: note:   initializing argument 1 of ‘void incr_list(vector*, vector*)’
   14 | void incr_list(vector* res, vector* input) {
      |                ~~~~~~~~^~~
In file included from ./CPP_42.cpp:61:
./CPP_42.cpp:73:59: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   73 |     assert (issame(incr_list({5, 2, 5, 2, 3, 3, 9, 0, 123}) , {6, 3, 6, 3, 4, 4, 10, 1, 124}));
      |                                                           ^
      |                                                           |
      |                                                           <brace-enclosed initializer list>
./CPP_42.cpp:14:24: note:   initializing argument 1 of ‘void incr_list(vector*, vector*)’
   14 | void incr_list(vector* res, vector* input) {
      |                ~~~~~~~~^~~


CPP_133.cpp: Compilation Failed
Error: In file included from ./CPP_133.cpp:58:
./CPP_133.cpp: In function ‘int main()’:
./CPP_133.cpp:60:32: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   60 |     assert (sum_squares({1,2,3})==14);
      |                                ^
      |                                |
      |                                <brace-enclosed initializer list>
./CPP_133.cpp:19:25: note:   initializing argument 1 of ‘int sum_squares(vector*)’
   19 | int sum_squares(vector *v) {
      |                 ~~~~~~~~^
In file included from ./CPP_133.cpp:58:
./CPP_133.cpp:61:34: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   61 |     assert (sum_squares({1.0,2,3})==14);
      |                                  ^
      |                                  |
      |                                  <brace-enclosed initializer list>
./CPP_133.cpp:19:25: note:   initializing argument 1 of ‘int sum_squares(vector*)’
   19 | int sum_squares(vector *v) {
      |                 ~~~~~~~~^
In file included from ./CPP_133.cpp:58:
./CPP_133.cpp:62:34: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   62 |     assert (sum_squares({1,3,5,7})==84);
      |                                  ^
      |                                  |
      |                                  <brace-enclosed initializer list>
./CPP_133.cpp:19:25: note:   initializing argument 1 of ‘int sum_squares(vector*)’
   19 | int sum_squares(vector *v) {
      |                 ~~~~~~~~^
In file included from ./CPP_133.cpp:58:
./CPP_133.cpp:63:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   63 |     assert (sum_squares({1.4,4.2,0})==29);
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_133.cpp:19:25: note:   initializing argument 1 of ‘int sum_squares(vector*)’
   19 | int sum_squares(vector *v) {
      |                 ~~~~~~~~^
In file included from ./CPP_133.cpp:58:
./CPP_133.cpp:64:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   64 |     assert (sum_squares({-2.4,1,1})==6);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_133.cpp:19:25: note:   initializing argument 1 of ‘int sum_squares(vector*)’
   19 | int sum_squares(vector *v) {
      |                 ~~~~~~~~^
In file included from ./CPP_133.cpp:58:
./CPP_133.cpp:65:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   65 |     assert (sum_squares({100,1,15,2})==10230);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_133.cpp:19:25: note:   initializing argument 1 of ‘int sum_squares(vector*)’
   19 | int sum_squares(vector *v) {
      |                 ~~~~~~~~^
In file included from ./CPP_133.cpp:58:
./CPP_133.cpp:66:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   66 |     assert (sum_squares({10000,10000})==200000000);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_133.cpp:19:25: note:   initializing argument 1 of ‘int sum_squares(vector*)’
   19 | int sum_squares(vector *v) {
      |                 ~~~~~~~~^
In file included from ./CPP_133.cpp:58:
./CPP_133.cpp:67:39: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   67 |     assert (sum_squares({-1.4,4.6,6.3})==75);
      |                                       ^
      |                                       |
      |                                       <brace-enclosed initializer list>
./CPP_133.cpp:19:25: note:   initializing argument 1 of ‘int sum_squares(vector*)’
   19 | int sum_squares(vector *v) {
      |                 ~~~~~~~~^
In file included from ./CPP_133.cpp:58:
./CPP_133.cpp:68:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   68 |     assert (sum_squares({-1.4,17.9,18.9,19.9})==1086);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_133.cpp:19:25: note:   initializing argument 1 of ‘int sum_squares(vector*)’
   19 | int sum_squares(vector *v) {
      |                 ~~~~~~~~^
In file included from ./CPP_133.cpp:58:
./CPP_133.cpp:70:29: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
   70 |     assert (sum_squares({-1})==1);
      |                             ^
      |                             |
      |                             int
./CPP_133.cpp:19:25: note:   initializing argument 1 of ‘int sum_squares(vector*)’
   19 | int sum_squares(vector *v) {
      |                 ~~~~~~~~^
In file included from ./CPP_133.cpp:58:
./CPP_133.cpp:71:33: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   71 |     assert (sum_squares({-1,1,0})==2);
      |                                 ^
      |                                 |
      |                                 <brace-enclosed initializer list>
./CPP_133.cpp:19:25: note:   initializing argument 1 of ‘int sum_squares(vector*)’
   19 | int sum_squares(vector *v) {
      |                 ~~~~~~~~^


CPP_121.cpp: Compilation Failed
Error: In file included from ./CPP_121.cpp:15:
./CPP_121.cpp: In function ‘int main()’:
./CPP_121.cpp:17:13: error: ‘solutions’ was not declared in this scope; did you mean ‘solution’?
   17 |     assert (solutions({5, 8, 7, 1})    == 12);
      |             ^~~~~~~~~


CPP_109.cpp: Compilation Failed
Error: In file included from ./CPP_109.cpp:69:
./CPP_109.cpp: In function ‘int main()’:
./CPP_109.cpp:71:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   71 |     assert (move_one_ball({3, 4, 5, 1, 2})==true);
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_109.cpp:19:31: note:   initializing argument 1 of ‘int move_one_ball(std_vector*)’
   19 | int move_one_ball(std_vector* v) {
      |                   ~~~~~~~~~~~~^
In file included from ./CPP_109.cpp:69:
./CPP_109.cpp:72:43: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   72 |     assert (move_one_ball({3, 5, 10, 1, 2})==true);
      |                                           ^
      |                                           |
      |                                           <brace-enclosed initializer list>
./CPP_109.cpp:19:31: note:   initializing argument 1 of ‘int move_one_ball(std_vector*)’
   19 | int move_one_ball(std_vector* v) {
      |                   ~~~~~~~~~~~~^
In file included from ./CPP_109.cpp:69:
./CPP_109.cpp:73:39: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   73 |     assert (move_one_ball({4, 3, 1, 2})==false);
      |                                       ^
      |                                       |
      |                                       <brace-enclosed initializer list>
./CPP_109.cpp:19:31: note:   initializing argument 1 of ‘int move_one_ball(std_vector*)’
   19 | int move_one_ball(std_vector* v) {
      |                   ~~~~~~~~~~~~^
In file included from ./CPP_109.cpp:69:
./CPP_109.cpp:74:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   74 |     assert (move_one_ball({3, 5, 4, 1, 2})==false);
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_109.cpp:19:31: note:   initializing argument 1 of ‘int move_one_ball(std_vector*)’
   19 | int move_one_ball(std_vector* v) {
      |                   ~~~~~~~~~~~~^


CPP_5.cpp: Compilation Failed
Error: ./CPP_5.cpp:22:106: error: expected ‘,’ or ‘...’ before ‘this’
   22 | void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(vector* this, int* __position, int* __x) {
      |                                                                                                          ^~~~
./CPP_5.cpp: In function ‘void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(vector*)’:
./CPP_5.cpp:23:24: error: invalid use of ‘this’ in non-member function
   23 |     int* __old_start = this->_M_base._M_impl._M_start;
      |                        ^~~~
./CPP_5.cpp:24:25: error: invalid use of ‘this’ in non-member function
   24 |     int* __old_finish = this->_M_base._M_impl._M_finish;
      |                         ^~~~
./CPP_5.cpp:32:9: error: ‘__position’ was not declared in this scope
   32 |     if (__position != __old_finish) {
      |         ^~~~~~~~~~
./CPP_5.cpp:35:22: error: ‘__position’ was not declared in this scope
   35 |     *(__new_start + (__position - __old_start)) = *__x;
      |                      ^~~~~~~~~~
./CPP_5.cpp:35:52: error: ‘__x’ was not declared in this scope
   35 |     *(__new_start + (__position - __old_start)) = *__x;
      |                                                    ^~~
./CPP_5.cpp:39:5: error: invalid use of ‘this’ in non-member function
   39 |     this->_M_base._M_impl._M_start = __new_start;
      |     ^~~~
./CPP_5.cpp:40:5: error: invalid use of ‘this’ in non-member function
   40 |     this->_M_base._M_impl._M_finish = __new_finish;
      |     ^~~~
./CPP_5.cpp:41:5: error: invalid use of ‘this’ in non-member function
   41 |     this->_M_base._M_impl._M_end_of_storage = __new_finish;
      |     ^~~~
./CPP_5.cpp: In function ‘void _Z11intersperseSt6vectorIiSaIiEEi(vector*, vector*, int)’:
./CPP_5.cpp:45:31: error: request for member ‘_M_start’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   45 |     __result->_M_base._M_impl._M_start = NULL;
      |                               ^~~~~~~~
./CPP_5.cpp:46:31: error: request for member ‘_M_finish’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   46 |     __result->_M_base._M_impl._M_finish = NULL;
      |                               ^~~~~~~~~
./CPP_5.cpp:47:31: error: request for member ‘_M_end_of_storage’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   47 |     __result->_M_base._M_impl._M_end_of_storage = NULL;
      |                               ^~~~~~~~~~~~~~~~~
./CPP_5.cpp:48:51: error: request for member ‘_M_start’ in ‘__input->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   48 |     int* __input_start = __input->_M_base._M_impl._M_start;
      |                                                   ^~~~~~~~
./CPP_5.cpp:49:52: error: request for member ‘_M_finish’ in ‘__input->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   49 |     int* __input_finish = __input->_M_base._M_impl._M_finish;
      |                                                    ^~~~~~~~~
./CPP_5.cpp:53:126: error: too many arguments to function ‘void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(vector*)’
   53 |     _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(__result, NULL, __input_start);
      |                                                                                                                              ^
./CPP_5.cpp:22:6: note: declared here
   22 | void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(vector* this, int* __position, int* __x) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_5.cpp:54:53: error: request for member ‘_M_start’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   54 |     int* __result_start = __result->_M_base._M_impl._M_start;
      |                                                     ^~~~~~~~
./CPP_5.cpp:55:54: error: request for member ‘_M_finish’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   55 |     int* __result_finish = __result->_M_base._M_impl._M_finish;
      |                                                      ^~~~~~~~~
./CPP_5.cpp:58:139: error: too many arguments to function ‘void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(vector*)’
   58 |         _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(__result, __result_finish, __input_ptr);
      |                                                                                                                                           ^
./CPP_5.cpp:22:6: note: declared here
   22 | void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(vector* this, int* __position, int* __x) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_5.cpp:59:53: error: request for member ‘_M_finish’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   59 |         __result_finish = __result->_M_base._M_impl._M_finish;
      |                                                     ^~~~~~~~~
./CPP_5.cpp:80:35: error: request for member ‘_M_start’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   80 |         __result->_M_base._M_impl._M_start = __new_start;
      |                                   ^~~~~~~~
./CPP_5.cpp:81:35: error: request for member ‘_M_finish’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   81 |         __result->_M_base._M_impl._M_finish = __new_finish;
      |                                   ^~~~~~~~~
./CPP_5.cpp:82:35: error: request for member ‘_M_end_of_storage’ in ‘__result->vector::_M_base._Vector_base::_M_impl’, which is of non-class type ‘int*’
   82 |         __result->_M_base._M_impl._M_end_of_storage = __new_finish;
      |                                   ^~~~~~~~~~~~~~~~~
./CPP_5.cpp: At global scope:
./CPP_5.cpp:88:13: error: ‘vector’ is not a template
   88 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_5.cpp:88:27: error: ‘vector’ is not a template
   88 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_5.cpp: In function ‘bool issame(vector, vector)’:
./CPP_5.cpp:89:11: error: ‘struct vector’ has no member named ‘size’
   89 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_5.cpp:89:21: error: ‘struct vector’ has no member named ‘size’
   89 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_5.cpp:90:22: error: ‘struct vector’ has no member named ‘size’
   90 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_5.cpp:92:14: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   92 |         if (a[i]!=b[i]) return false;
      |              ^
./CPP_5.cpp:92:20: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   92 |         if (a[i]!=b[i]) return false;
      |                    ^
In file included from ./CPP_5.cpp:87:
./CPP_5.cpp: In function ‘int main()’:
./CPP_5.cpp:97:20: error: ‘intersperse’ was not declared in this scope
   97 |     assert (issame(intersperse({}, 7), {}));
      |                    ^~~~~~~~~~~


CPP_12.cpp: Compilation Failed
Error: ./CPP_12.cpp:5:19: error: variable or field ‘longest’ declared void
    5 | void longest(std::string* result, std::vector<std::string>* vec) {
      |                   ^~~~~~
./CPP_12.cpp:5:19: error: ‘string’ is not a member of ‘std’
./CPP_12.cpp:4:1: note: ‘std::string’ is defined in header ‘<string>’; did you forget to ‘#include <string>’?
    3 | #include <string.h>
  +++ |+#include <string>
    4 | 
./CPP_12.cpp:5:27: error: ‘result’ was not declared in this scope
    5 | void longest(std::string* result, std::vector<std::string>* vec) {
      |                           ^~~~~~
./CPP_12.cpp:5:40: error: ‘vector’ is not a member of ‘std’
    5 | void longest(std::string* result, std::vector<std::string>* vec) {
      |                                        ^~~~~~
./CPP_12.cpp:4:1: note: ‘std::vector’ is defined in header ‘<vector>’; did you forget to ‘#include <vector>’?
    3 | #include <string.h>
  +++ |+#include <vector>
    4 | 
./CPP_12.cpp:5:52: error: ‘string’ is not a member of ‘std’
    5 | void longest(std::string* result, std::vector<std::string>* vec) {
      |                                                    ^~~~~~
./CPP_12.cpp:5:52: note: ‘std::string’ is defined in header ‘<string>’; did you forget to ‘#include <string>’?
./CPP_12.cpp:5:61: error: ‘vec’ was not declared in this scope
    5 | void longest(std::string* result, std::vector<std::string>* vec) {
      |                                                             ^~~
In file included from ./CPP_12.cpp:23:
./CPP_12.cpp: In function ‘int main()’:
./CPP_12.cpp:25:13: error: ‘longest’ was not declared in this scope; did you mean ‘long’?
   25 |     assert (longest({}) == "");
      |             ^~~~~~~


CPP_150.cpp: Execution Failed
Error: CPP_150: ./CPP_150.cpp:42: int main(): Assertion `x_or_y(1, 2, 0) == 0' failed.
Aborted (core dumped)


CPP_25.cpp: Compilation Failed
Error: ./CPP_25.cpp:27:6: error: ambiguating new declaration of ‘void memset(void*, int, size_t)’
   27 | void memset(void* dest, int value, size_t len);
      |      ^~~~~~
In file included from ./CPP_25.cpp:3:
/usr/include/string.h:61:14: note: old declaration ‘void* memset(void*, int, size_t)’
   61 | extern void *memset (void *__s, int __c, size_t __n) __THROW __nonnull ((1));
      |              ^~~~~~
./CPP_25.cpp:119:13: error: ‘vector’ was not declared in this scope; did you mean ‘Vector’?
  119 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
      |             Vector
./CPP_25.cpp:119:20: error: expected primary-expression before ‘int’
  119 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_25.cpp:119:27: error: ‘vector’ was not declared in this scope; did you mean ‘Vector’?
  119 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
      |                           Vector
./CPP_25.cpp:119:34: error: expected primary-expression before ‘int’
  119 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_25.cpp:119:39: error: expression list treated as compound expression in initializer [-fpermissive]
  119 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
./CPP_25.cpp:127:5: error: redefinition of ‘int main()’
  127 | int main(){
      |     ^~~~
./CPP_25.cpp:110:5: note: ‘int main()’ previously defined here
  110 | int main() {
      |     ^~~~
In file included from ./CPP_25.cpp:118:
./CPP_25.cpp: In function ‘int main()’:
./CPP_25.cpp:128:30: error: invalid conversion from ‘int’ to ‘Vector*’ [-fpermissive]
  128 |     assert (issame(factorize(2) , {2}));
      |                              ^
      |                              |
      |                              int
./CPP_25.cpp:128:31: error: too few arguments to function ‘void factorize(Vector*, int)’
  128 |     assert (issame(factorize(2) , {2}));
      |                               ^
./CPP_25.cpp:29:6: note: declared here
   29 | void factorize(Vector* v, int n) {
      |      ^~~~~~~~~
In file included from ./CPP_25.cpp:118:
./CPP_25.cpp:128:38: error: ‘issame’ cannot be used as a function
  128 |     assert (issame(factorize(2) , {2}));
      |                                      ^
./CPP_25.cpp:129:30: error: invalid conversion from ‘int’ to ‘Vector*’ [-fpermissive]
  129 |     assert (issame(factorize(4) , {2, 2}));
      |                              ^
      |                              |
      |                              int
./CPP_25.cpp:129:31: error: too few arguments to function ‘void factorize(Vector*, int)’
  129 |     assert (issame(factorize(4) , {2, 2}));
      |                               ^
./CPP_25.cpp:29:6: note: declared here
   29 | void factorize(Vector* v, int n) {
      |      ^~~~~~~~~
In file included from ./CPP_25.cpp:118:
./CPP_25.cpp:129:41: error: ‘issame’ cannot be used as a function
  129 |     assert (issame(factorize(4) , {2, 2}));
      |                                         ^
./CPP_25.cpp:130:30: error: invalid conversion from ‘int’ to ‘Vector*’ [-fpermissive]
  130 |     assert (issame(factorize(8) , {2, 2, 2}));
      |                              ^
      |                              |
      |                              int
./CPP_25.cpp:130:31: error: too few arguments to function ‘void factorize(Vector*, int)’
  130 |     assert (issame(factorize(8) , {2, 2, 2}));
      |                               ^
./CPP_25.cpp:29:6: note: declared here
   29 | void factorize(Vector* v, int n) {
      |      ^~~~~~~~~
In file included from ./CPP_25.cpp:118:
./CPP_25.cpp:130:44: error: ‘issame’ cannot be used as a function
  130 |     assert (issame(factorize(8) , {2, 2, 2}));
      |                                            ^
./CPP_25.cpp:131:33: error: invalid conversion from ‘int’ to ‘Vector*’ [-fpermissive]
  131 |      assert (issame(factorize(3 * 19) , {3, 19}));
      |                               ~~^~~~
      |                                 |
      |                                 int
./CPP_25.cpp:131:37: error: too few arguments to function ‘void factorize(Vector*, int)’
  131 |      assert (issame(factorize(3 * 19) , {3, 19}));
      |                                     ^
./CPP_25.cpp:29:6: note: declared here
   29 | void factorize(Vector* v, int n) {
      |      ^~~~~~~~~
In file included from ./CPP_25.cpp:118:
./CPP_25.cpp:131:48: error: ‘issame’ cannot be used as a function
  131 |      assert (issame(factorize(3 * 19) , {3, 19}));
      |                                                ^
./CPP_25.cpp:132:41: error: invalid conversion from ‘int’ to ‘Vector*’ [-fpermissive]
  132 |     assert (issame(factorize(3 * 19 * 3 * 19) , {3, 3, 19, 19}));
      |                              ~~~~~~~~~~~^~~~
      |                                         |
      |                                         int
./CPP_25.cpp:132:45: error: too few arguments to function ‘void factorize(Vector*, int)’
  132 |     assert (issame(factorize(3 * 19 * 3 * 19) , {3, 3, 19, 19}));
      |                                             ^
./CPP_25.cpp:29:6: note: declared here
   29 | void factorize(Vector* v, int n) {
      |      ^~~~~~~~~
In file included from ./CPP_25.cpp:118:
./CPP_25.cpp:132:63: error: ‘issame’ cannot be used as a function
  132 |     assert (issame(factorize(3 * 19 * 3 * 19) , {3, 3, 19, 19}));
      |                                                               ^
./CPP_25.cpp:133:50: error: invalid conversion from ‘int’ to ‘Vector*’ [-fpermissive]
  133 |     assert (issame(factorize(3 * 19 * 3 * 19 * 3 * 19) , {3, 3, 3, 19, 19, 19}));
      |                              ~~~~~~~~~~~~~~~~~~~~^~~~
      |                                                  |
      |                                                  int
./CPP_25.cpp:133:54: error: too few arguments to function ‘void factorize(Vector*, int)’
  133 |     assert (issame(factorize(3 * 19 * 3 * 19 * 3 * 19) , {3, 3, 3, 19, 19, 19}));
      |                                                      ^
./CPP_25.cpp:29:6: note: declared here
   29 | void factorize(Vector* v, int n) {
      |      ^~~~~~~~~
In file included from ./CPP_25.cpp:118:
./CPP_25.cpp:133:79: error: ‘issame’ cannot be used as a function
  133 |     assert (issame(factorize(3 * 19 * 3 * 19 * 3 * 19) , {3, 3, 3, 19, 19, 19}));
      |                                                                               ^
./CPP_25.cpp:134:42: error: invalid conversion from ‘int’ to ‘Vector*’ [-fpermissive]
  134 |     assert (issame(factorize(3 * 19 * 19 * 19) , {3, 19, 19, 19}));
      |                              ~~~~~~~~~~~~^~~~
      |                                          |
      |                                          int
./CPP_25.cpp:134:46: error: too few arguments to function ‘void factorize(Vector*, int)’
  134 |     assert (issame(factorize(3 * 19 * 19 * 19) , {3, 19, 19, 19}));
      |                                              ^
./CPP_25.cpp:29:6: note: declared here
   29 | void factorize(Vector* v, int n) {
      |      ^~~~~~~~~
In file included from ./CPP_25.cpp:118:
./CPP_25.cpp:134:65: error: ‘issame’ cannot be used as a function
  134 |     assert (issame(factorize(3 * 19 * 19 * 19) , {3, 19, 19, 19}));
      |                                                                 ^
./CPP_25.cpp:135:36: error: invalid conversion from ‘int’ to ‘Vector*’ [-fpermissive]
  135 |     assert (issame(factorize(3 * 2 * 3) , {2, 3, 3}));
      |                              ~~~~~~^~~
      |                                    |
      |                                    int
./CPP_25.cpp:135:39: error: too few arguments to function ‘void factorize(Vector*, int)’
  135 |     assert (issame(factorize(3 * 2 * 3) , {2, 3, 3}));
      |                                       ^
./CPP_25.cpp:29:6: note: declared here
   29 | void factorize(Vector* v, int n) {
      |      ^~~~~~~~~
In file included from ./CPP_25.cpp:118:
./CPP_25.cpp:135:52: error: ‘issame’ cannot be used as a function
  135 |     assert (issame(factorize(3 * 2 * 3) , {2, 3, 3}));
      |                                                    ^


CPP_89.cpp: Compilation Failed
Error: In file included from ./CPP_89.cpp:34:
./CPP_89.cpp: In function ‘int main()’:
./CPP_89.cpp:36:21: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   36 |     assert (encrypt("hi") == "lm");
      |                     ^~~~
./CPP_89.cpp:36:25: error: too few arguments to function ‘void encrypt(char*, const char*)’
   36 |     assert (encrypt("hi") == "lm");
      |                         ^
./CPP_89.cpp:5:6: note: declared here
    5 | void encrypt(char *output, const char *input) {
      |      ^~~~~~~
In file included from ./CPP_89.cpp:34:
./CPP_89.cpp:37:21: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   37 |     assert (encrypt("asdfghjkl") == "ewhjklnop");
      |                     ^~~~~~~~~~~
./CPP_89.cpp:37:32: error: too few arguments to function ‘void encrypt(char*, const char*)’
   37 |     assert (encrypt("asdfghjkl") == "ewhjklnop");
      |                                ^
./CPP_89.cpp:5:6: note: declared here
    5 | void encrypt(char *output, const char *input) {
      |      ^~~~~~~
In file included from ./CPP_89.cpp:34:
./CPP_89.cpp:38:21: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   38 |     assert (encrypt("gf") == "kj");
      |                     ^~~~
./CPP_89.cpp:38:25: error: too few arguments to function ‘void encrypt(char*, const char*)’
   38 |     assert (encrypt("gf") == "kj");
      |                         ^
./CPP_89.cpp:5:6: note: declared here
    5 | void encrypt(char *output, const char *input) {
      |      ^~~~~~~
In file included from ./CPP_89.cpp:34:
./CPP_89.cpp:39:21: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   39 |     assert (encrypt("et") == "ix");
      |                     ^~~~
./CPP_89.cpp:39:25: error: too few arguments to function ‘void encrypt(char*, const char*)’
   39 |     assert (encrypt("et") == "ix");
      |                         ^
./CPP_89.cpp:5:6: note: declared here
    5 | void encrypt(char *output, const char *input) {
      |      ^~~~~~~
In file included from ./CPP_89.cpp:34:
./CPP_89.cpp:40:21: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   40 |     assert (encrypt("faewfawefaewg")=="jeiajeaijeiak");
      |                     ^~~~~~~~~~~~~~~
./CPP_89.cpp:40:36: error: too few arguments to function ‘void encrypt(char*, const char*)’
   40 |     assert (encrypt("faewfawefaewg")=="jeiajeaijeiak");
      |                                    ^
./CPP_89.cpp:5:6: note: declared here
    5 | void encrypt(char *output, const char *input) {
      |      ^~~~~~~
In file included from ./CPP_89.cpp:34:
./CPP_89.cpp:41:21: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   41 |     assert (encrypt("hellomyfriend")=="lippsqcjvmirh");
      |                     ^~~~~~~~~~~~~~~
./CPP_89.cpp:41:36: error: too few arguments to function ‘void encrypt(char*, const char*)’
   41 |     assert (encrypt("hellomyfriend")=="lippsqcjvmirh");
      |                                    ^
./CPP_89.cpp:5:6: note: declared here
    5 | void encrypt(char *output, const char *input) {
      |      ^~~~~~~
In file included from ./CPP_89.cpp:34:
./CPP_89.cpp:42:21: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   42 |     assert (encrypt("dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh")=="hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl");
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_89.cpp:42:68: error: too few arguments to function ‘void encrypt(char*, const char*)’
   42 |     assert (encrypt("dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh")=="hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl");
      |                                                                    ^
./CPP_89.cpp:5:6: note: declared here
    5 | void encrypt(char *output, const char *input) {
      |      ^~~~~~~
In file included from ./CPP_89.cpp:34:
./CPP_89.cpp:43:21: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   43 |     assert (encrypt("a")=="e");
      |                     ^~~
./CPP_89.cpp:43:24: error: too few arguments to function ‘void encrypt(char*, const char*)’
   43 |     assert (encrypt("a")=="e");
      |                        ^
./CPP_89.cpp:5:6: note: declared here
    5 | void encrypt(char *output, const char *input) {
      |      ^~~~~~~


CPP_64.cpp: Execution Failed
Error: CPP_64: ./CPP_64.cpp:24: int main(): Assertion `vowels_count("key") == 2' failed.
Aborted (core dumped)


CPP_128.cpp: Compilation Failed
Error: ./CPP_128.cpp: In function ‘int prod_signs(int*, int)’:
./CPP_128.cpp:13:16: error: ‘abs’ was not declared in this scope
   13 |         sum += abs(a);
      |                ^~~
./CPP_128.cpp:28:16: error: ‘abs’ was not declared in this scope
   28 |         sum += abs(a);
      |                ^~~
In file included from ./CPP_128.cpp:39:
./CPP_128.cpp: In function ‘int main()’:
./CPP_128.cpp:41:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   41 |     assert (prod_signs({1, 2, 2, -4}) == -9);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_128.cpp:3:21: note:   initializing argument 1 of ‘int prod_signs(int*, int)’
    3 | int prod_signs(int* data, int size) {
      |                ~~~~~^~~~
In file included from ./CPP_128.cpp:39:
./CPP_128.cpp:42:30: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   42 |     assert (prod_signs({0, 1}) == 0);
      |                              ^
      |                              |
      |                              <brace-enclosed initializer list>
./CPP_128.cpp:3:21: note:   initializing argument 1 of ‘int prod_signs(int*, int)’
    3 | int prod_signs(int* data, int size) {
      |                ~~~~~^~~~
In file included from ./CPP_128.cpp:39:
./CPP_128.cpp:43:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   43 |     assert (prod_signs({1, 1, 1, 2, 3, -1, 1}) == -10);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_128.cpp:3:21: note:   initializing argument 1 of ‘int prod_signs(int*, int)’
    3 | int prod_signs(int* data, int size) {
      |                ~~~~~^~~~
In file included from ./CPP_128.cpp:39:
./CPP_128.cpp:44:26: error: too few arguments to function ‘int prod_signs(int*, int)’
   44 |     assert (prod_signs({}) == -32768);
      |                          ^
./CPP_128.cpp:3:5: note: declared here
    3 | int prod_signs(int* data, int size) {
      |     ^~~~~~~~~~
In file included from ./CPP_128.cpp:39:
./CPP_128.cpp:45:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   45 |     assert (prod_signs({2, 4,1, 2, -1, -1, 9}) == 20);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_128.cpp:3:21: note:   initializing argument 1 of ‘int prod_signs(int*, int)’
    3 | int prod_signs(int* data, int size) {
      |                ~~~~~^~~~
In file included from ./CPP_128.cpp:39:
./CPP_128.cpp:46:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   46 |     assert (prod_signs({-1, 1, -1, 1}) == 4);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_128.cpp:3:21: note:   initializing argument 1 of ‘int prod_signs(int*, int)’
    3 | int prod_signs(int* data, int size) {
      |                ~~~~~^~~~
In file included from ./CPP_128.cpp:39:
./CPP_128.cpp:47:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   47 |     assert (prod_signs({-1, 1, 1, 1}) == -4);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_128.cpp:3:21: note:   initializing argument 1 of ‘int prod_signs(int*, int)’
    3 | int prod_signs(int* data, int size) {
      |                ~~~~~^~~~
In file included from ./CPP_128.cpp:39:
./CPP_128.cpp:48:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   48 |     assert (prod_signs({-1, 1, 1, 0}) == 0);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_128.cpp:3:21: note:   initializing argument 1 of ‘int prod_signs(int*, int)’
    3 | int prod_signs(int* data, int size) {
      |                ~~~~~^~~~


CPP_91.cpp: Compilation Failed
Error: In file included from ./CPP_91.cpp:61:
./CPP_91.cpp: In function ‘int main()’:
./CPP_91.cpp:63:22: error: cannot convert ‘const char*’ to ‘string_t*’
   63 |     assert (is_bored("Hello world") == 0);
      |                      ^~~~~~~~~~~~~
      |                      |
      |                      const char*
./CPP_91.cpp:8:28: note:   initializing argument 1 of ‘int32_t is_bored(string_t*)’
    8 | int32_t is_bored(string_t* s) {
      |                  ~~~~~~~~~~^
In file included from ./CPP_91.cpp:61:
./CPP_91.cpp:64:22: error: cannot convert ‘const char*’ to ‘string_t*’
   64 |     assert (is_bored("Is the sky blue?") == 0);
      |                      ^~~~~~~~~~~~~~~~~~
      |                      |
      |                      const char*
./CPP_91.cpp:8:28: note:   initializing argument 1 of ‘int32_t is_bored(string_t*)’
    8 | int32_t is_bored(string_t* s) {
      |                  ~~~~~~~~~~^
In file included from ./CPP_91.cpp:61:
./CPP_91.cpp:65:22: error: cannot convert ‘const char*’ to ‘string_t*’
   65 |     assert (is_bored("I love It !") == 1);
      |                      ^~~~~~~~~~~~~
      |                      |
      |                      const char*
./CPP_91.cpp:8:28: note:   initializing argument 1 of ‘int32_t is_bored(string_t*)’
    8 | int32_t is_bored(string_t* s) {
      |                  ~~~~~~~~~~^
In file included from ./CPP_91.cpp:61:
./CPP_91.cpp:66:22: error: cannot convert ‘const char*’ to ‘string_t*’
   66 |     assert (is_bored("bIt") == 0);
      |                      ^~~~~
      |                      |
      |                      const char*
./CPP_91.cpp:8:28: note:   initializing argument 1 of ‘int32_t is_bored(string_t*)’
    8 | int32_t is_bored(string_t* s) {
      |                  ~~~~~~~~~~^
In file included from ./CPP_91.cpp:61:
./CPP_91.cpp:67:22: error: cannot convert ‘const char*’ to ‘string_t*’
   67 |     assert (is_bored("I feel good today. I will be productive. will kill It") == 2);
      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                      |
      |                      const char*
./CPP_91.cpp:8:28: note:   initializing argument 1 of ‘int32_t is_bored(string_t*)’
    8 | int32_t is_bored(string_t* s) {
      |                  ~~~~~~~~~~^
In file included from ./CPP_91.cpp:61:
./CPP_91.cpp:68:22: error: cannot convert ‘const char*’ to ‘string_t*’
   68 |     assert (is_bored("You and I are going for a walk") == 0);
      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                      |
      |                      const char*
./CPP_91.cpp:8:28: note:   initializing argument 1 of ‘int32_t is_bored(string_t*)’
    8 | int32_t is_bored(string_t* s) {
      |                  ~~~~~~~~~~^


CPP_73.cpp: Compilation Failed
Error: In file included from ./CPP_73.cpp:14:
./CPP_73.cpp: In function ‘int main()’:
./CPP_73.cpp:16:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   16 |     assert (smallest_change({1,2,3,5,4,7,9,6}) == 4);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_73.cpp:3:26: note:   initializing argument 1 of ‘int smallest_change(int*, int)’
    3 | int smallest_change(int* data, int size) {
      |                     ~~~~~^~~~
In file included from ./CPP_73.cpp:14:
./CPP_73.cpp:17:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   17 |     assert (smallest_change({1, 2, 3, 4, 3, 2, 2}) == 1);
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_73.cpp:3:26: note:   initializing argument 1 of ‘int smallest_change(int*, int)’
    3 | int smallest_change(int* data, int size) {
      |                     ~~~~~^~~~
In file included from ./CPP_73.cpp:14:
./CPP_73.cpp:18:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   18 |     assert (smallest_change({1, 4, 2}) == 1);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_73.cpp:3:26: note:   initializing argument 1 of ‘int smallest_change(int*, int)’
    3 | int smallest_change(int* data, int size) {
      |                     ~~~~~^~~~
In file included from ./CPP_73.cpp:14:
./CPP_73.cpp:19:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   19 |     assert (smallest_change({1, 4, 4, 2}) == 1);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_73.cpp:3:26: note:   initializing argument 1 of ‘int smallest_change(int*, int)’
    3 | int smallest_change(int* data, int size) {
      |                     ~~~~~^~~~
In file included from ./CPP_73.cpp:14:
./CPP_73.cpp:20:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   20 |     assert (smallest_change({1, 2, 3, 2, 1}) == 0);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_73.cpp:3:26: note:   initializing argument 1 of ‘int smallest_change(int*, int)’
    3 | int smallest_change(int* data, int size) {
      |                     ~~~~~^~~~
In file included from ./CPP_73.cpp:14:
./CPP_73.cpp:21:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   21 |     assert (smallest_change({3, 1, 1, 3}) == 0);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_73.cpp:3:26: note:   initializing argument 1 of ‘int smallest_change(int*, int)’
    3 | int smallest_change(int* data, int size) {
      |                     ~~~~~^~~~
In file included from ./CPP_73.cpp:14:
./CPP_73.cpp:22:32: error: invalid conversion from ‘int’ to ‘int*’ [-fpermissive]
   22 |     assert (smallest_change({1}) == 0);
      |                                ^
      |                                |
      |                                int
./CPP_73.cpp:22:32: error: too few arguments to function ‘int smallest_change(int*, int)’
./CPP_73.cpp:3:5: note: declared here
    3 | int smallest_change(int* data, int size) {
      |     ^~~~~~~~~~~~~~~
In file included from ./CPP_73.cpp:14:
./CPP_73.cpp:23:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   23 |     assert (smallest_change({0, 1}) == 1);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_73.cpp:3:26: note:   initializing argument 1 of ‘int smallest_change(int*, int)’
    3 | int smallest_change(int* data, int size) {
      |                     ~~~~~^~~~


CPP_151.cpp: Compilation Failed
Error: In file included from ./CPP_151.cpp:22:
./CPP_151.cpp: In function ‘int main()’:
./CPP_151.cpp:24:37: error: too few arguments to function ‘long int double_the_difference(float*, long int)’
   24 |     assert (double_the_difference({}) == 0);
      |                                     ^
./CPP_151.cpp:5:6: note: declared here
    5 | long double_the_difference(float* data, long size) {
      |      ^~~~~~~~~~~~~~~~~~~~~
In file included from ./CPP_151.cpp:22:
./CPP_151.cpp:25:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   25 |     assert (double_the_difference({5, 4}) == 25);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_151.cpp:5:35: note:   initializing argument 1 of ‘long int double_the_difference(float*, long int)’
    5 | long double_the_difference(float* data, long size) {
      |                            ~~~~~~~^~~~
In file included from ./CPP_151.cpp:22:
./CPP_151.cpp:26:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   26 |     assert (double_the_difference({0.1, 0.2, 0.3}) == 0 );
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_151.cpp:5:35: note:   initializing argument 1 of ‘long int double_the_difference(float*, long int)’
    5 | long double_the_difference(float* data, long size) {
      |                            ~~~~~~~^~~~
In file included from ./CPP_151.cpp:22:
./CPP_151.cpp:27:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   27 |     assert (double_the_difference({-10, -20, -30}) == 0 );
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_151.cpp:5:35: note:   initializing argument 1 of ‘long int double_the_difference(float*, long int)’
    5 | long double_the_difference(float* data, long size) {
      |                            ~~~~~~~^~~~
In file included from ./CPP_151.cpp:22:
./CPP_151.cpp:28:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   28 |     assert (double_the_difference({-1, -2, 8}) == 0);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_151.cpp:5:35: note:   initializing argument 1 of ‘long int double_the_difference(float*, long int)’
    5 | long double_the_difference(float* data, long size) {
      |                            ~~~~~~~^~~~
In file included from ./CPP_151.cpp:22:
./CPP_151.cpp:29:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   29 |     assert (double_the_difference({0.2, 3, 5}) == 34);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_151.cpp:5:35: note:   initializing argument 1 of ‘long int double_the_difference(float*, long int)’
    5 | long double_the_difference(float* data, long size) {
      |                            ~~~~~~~^~~~
./CPP_151.cpp:33:5: error: ‘vector’ was not declared in this scope
   33 |     vector<float> lst={};
      |     ^~~~~~
./CPP_151.cpp:33:12: error: expected primary-expression before ‘float’
   33 |     vector<float> lst={};
      |            ^~~~~
./CPP_151.cpp:37:9: error: ‘lst’ was not declared in this scope
   37 |         lst.push_back(i+0.0);
      |         ^~~
In file included from ./CPP_151.cpp:22:
./CPP_151.cpp:41:35: error: ‘lst’ was not declared in this scope
   41 |     assert (double_the_difference(lst) == odd_sum );
      |                                   ^~~


CPP_95.cpp: Compilation Failed
Error: ./CPP_95.cpp: In function ‘int check_dict_case(void*)’:
./CPP_95.cpp:27:56: error: cannot convert ‘_Rb_tree_node_base*’ to ‘_Rb_tree_header*’ in initialization
   27 |     _Rb_tree_header* header = ((_Rb_tree_header*)map)->_M_header;
      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
      |                                                        |
      |                                                        _Rb_tree_node_base*
./CPP_95.cpp:44:34: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
   44 |                 str_data = malloc(str_capacity);
      |                            ~~~~~~^~~~~~~~~~~~~~
      |                                  |
      |                                  void*
./CPP_95.cpp:45:35: error: cannot convert ‘char*’ to ‘_Alloc_hider*’ in assignment
   45 |                 str._M_dataplus = str_data;
      |                                   ^~~~~~~~
      |                                   |
      |                                   char*
./CPP_95.cpp: In function ‘int main()’:
./CPP_95.cpp:76:34: error: invalid conversion from ‘void*’ to ‘_Rb_tree_header*’ [-fpermissive]
   76 |     _Rb_tree_header* map = malloc(sizeof(_Rb_tree_header));
      |                            ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
      |                                  |
      |                                  void*
./CPP_95.cpp: At global scope:
./CPP_95.cpp:92:5: error: redefinition of ‘int main()’
   92 | int main(){
      |     ^~~~
./CPP_95.cpp:74:5: note: ‘int main()’ previously defined here
   74 | int main() {
      |     ^~~~
In file included from ./CPP_95.cpp:91:
./CPP_95.cpp: In function ‘int main()’:
./CPP_95.cpp:93:64: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   93 |     assert (check_dict_case({{"p","pineapple"}, {"b","banana"}}) == true);
      |                                                                ^
      |                                                                |
      |                                                                <brace-enclosed initializer list>
./CPP_95.cpp:26:27: note:   initializing argument 1 of ‘int check_dict_case(void*)’
   26 | int check_dict_case(void* map) {
      |                     ~~~~~~^~~
In file included from ./CPP_95.cpp:91:
./CPP_95.cpp:94:80: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   94 |     assert (check_dict_case({{"p","pineapple"}, {"A","banana"}, {"B","banana"}}) == false);
      |                                                                                ^
      |                                                                                |
      |                                                                                <brace-enclosed initializer list>
./CPP_95.cpp:26:27: note:   initializing argument 1 of ‘int check_dict_case(void*)’
   26 | int check_dict_case(void* map) {
      |                     ~~~~~~^~~
In file included from ./CPP_95.cpp:91:
./CPP_95.cpp:95:79: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   95 |     assert (check_dict_case({{"p","pineapple"}, {"5","banana"}, {"a","apple"}}) == false);
      |                                                                               ^
      |                                                                               |
      |                                                                               <brace-enclosed initializer list>
./CPP_95.cpp:26:27: note:   initializing argument 1 of ‘int check_dict_case(void*)’
   26 | int check_dict_case(void* map) {
      |                     ~~~~~~^~~
In file included from ./CPP_95.cpp:91:
./CPP_95.cpp:96:80: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   96 |     assert (check_dict_case({{"Name","John"}, {"Age","36"}, {"City","Houston"}}) == false);
      |                                                                                ^
      |                                                                                |
      |                                                                                <brace-enclosed initializer list>
./CPP_95.cpp:26:27: note:   initializing argument 1 of ‘int check_dict_case(void*)’
   26 | int check_dict_case(void* map) {
      |                     ~~~~~~^~~
In file included from ./CPP_95.cpp:91:
./CPP_95.cpp:97:63: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   97 |     assert (check_dict_case({{"STATE","NC"}, {"ZIP","12345"} }) == true  );
      |                                                               ^
      |                                                               |
      |                                                               <brace-enclosed initializer list>
./CPP_95.cpp:26:27: note:   initializing argument 1 of ‘int check_dict_case(void*)’
   26 | int check_dict_case(void* map) {
      |                     ~~~~~~^~~
In file included from ./CPP_95.cpp:91:
./CPP_95.cpp:98:69: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   98 |     assert (check_dict_case({{"fruit","Orange"}, {"taste","Sweet"} }) == true  );
      |                                                                     ^
      |                                                                     |
      |                                                                     <brace-enclosed initializer list>
./CPP_95.cpp:26:27: note:   initializing argument 1 of ‘int check_dict_case(void*)’
   26 | int check_dict_case(void* map) {
      |                     ~~~~~~^~~


Summary
=======
Total files processed: 96
Compilation failures: 70
Execution failures: 11
Assertion failures: 0

Detailed Results
===============
CPP_30.cpp Compilation Failed
CPP_9.cpp Compilation Failed
CPP_35.cpp Compilation Failed
CPP_138.cpp Passed
CPP_134.cpp Compilation Failed
CPP_102.cpp Execution Failed
CPP_18.cpp Passed
CPP_45.cpp Compilation Failed
CPP_21.cpp Compilation Failed
CPP_78.cpp Execution Failed
CPP_63.cpp Compilation Failed
CPP_100.cpp Compilation Failed
CPP_106.cpp Compilation Failed
CPP_83.cpp Execution Failed
CPP_116.cpp Compilation Failed
CPP_71.cpp Passed
CPP_99.cpp Compilation Failed
CPP_82.cpp Compilation Failed
CPP_39.cpp Execution Failed
CPP_56.cpp Compilation Failed
CPP_11.cpp Compilation Failed
CPP_146.cpp Compilation Failed
CPP_59.cpp Execution Failed
CPP_77.cpp Compilation Failed
CPP_98.cpp Passed
CPP_41.cpp Passed
CPP_0.cpp Compilation Failed
CPP_157.cpp Passed
CPP_127.cpp Compilation Failed
CPP_31.cpp Passed
CPP_122.cpp Compilation Failed
CPP_49.cpp Execution Failed
CPP_55.cpp Compilation Failed
CPP_115.cpp Compilation Failed
CPP_40.cpp Compilation Failed
CPP_130.cpp Compilation Failed
CPP_48.cpp Compilation Failed
CPP_96.cpp Compilation Failed
CPP_3.cpp Compilation Failed
CPP_97.cpp Passed
CPP_4.cpp Compilation Failed
CPP_60.cpp Passed
CPP_76.cpp Passed
CPP_80.cpp Execution Failed
CPP_23.cpp Compilation Failed
CPP_136.cpp Compilation Failed
CPP_27.cpp Compilation Failed
CPP_16.cpp Compilation Failed
CPP_72.cpp Compilation Failed
CPP_24.cpp Passed
CPP_92.cpp Passed
CPP_43.cpp Compilation Failed
CPP_53.cpp Compilation Failed
CPP_126.cpp Compilation Failed
CPP_52.cpp Compilation Failed
CPP_2.cpp Compilation Failed
CPP_139.cpp Passed
CPP_57.cpp Compilation Failed
CPP_159.cpp Compilation Failed
CPP_108.cpp Compilation Failed
CPP_61.cpp Compilation Failed
CPP_13.cpp Passed
CPP_124.cpp Compilation Failed
CPP_75.cpp Passed
CPP_142.cpp Compilation Failed
CPP_66.cpp Compilation Failed
CPP_114.cpp Compilation Failed
CPP_85.cpp Compilation Failed
CPP_46.cpp Execution Failed
CPP_28.cpp Compilation Failed
CPP_62.cpp Compilation Failed
CPP_36.cpp Execution Failed
CPP_131.cpp Compilation Failed
CPP_152.cpp Compilation Failed
CPP_132.cpp Compilation Failed
CPP_68.cpp Compilation Failed
CPP_163.cpp Compilation Failed
CPP_74.cpp Compilation Failed
CPP_54.cpp Compilation Failed
CPP_135.cpp Compilation Failed
CPP_8.cpp Compilation Failed
CPP_42.cpp Compilation Failed
CPP_133.cpp Compilation Failed
CPP_121.cpp Compilation Failed
CPP_109.cpp Compilation Failed
CPP_5.cpp Compilation Failed
CPP_12.cpp Compilation Failed
CPP_150.cpp Execution Failed
CPP_25.cpp Compilation Failed
CPP_89.cpp Compilation Failed
CPP_64.cpp Execution Failed
CPP_128.cpp Compilation Failed
CPP_91.cpp Compilation Failed
CPP_73.cpp Compilation Failed
CPP_151.cpp Compilation Failed
CPP_95.cpp Compilation Failed
