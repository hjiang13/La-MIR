Compilation and Execution Results
=================================

CPP_30.cpp: Compilation Failed
Error: ./CPP_30.cpp:57:13: error: ‘vector’ was not declared in this scope
   57 | bool issame(vector<float> a,vector<float>b){
      |             ^~~~~~
./CPP_30.cpp:57:20: error: expected primary-expression before ‘float’
   57 | bool issame(vector<float> a,vector<float>b){
      |                    ^~~~~
./CPP_30.cpp:57:29: error: ‘vector’ was not declared in this scope
   57 | bool issame(vector<float> a,vector<float>b){
      |                             ^~~~~~
./CPP_30.cpp:57:36: error: expected primary-expression before ‘float’
   57 | bool issame(vector<float> a,vector<float>b){
      |                                    ^~~~~
./CPP_30.cpp:57:43: error: expression list treated as compound expression in initializer [-fpermissive]
   57 | bool issame(vector<float> a,vector<float>b){
      |                                           ^
./CPP_30.cpp:65:5: error: redefinition of ‘int main()’
   65 | int main(){
      |     ^~~~
./CPP_30.cpp:41:5: note: ‘int main()’ previously defined here
   41 | int main() {
      |     ^~~~
In file included from ./CPP_30.cpp:56:
./CPP_30.cpp: In function ‘int main()’:
./CPP_30.cpp:66:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector_float*’
   66 |     assert (issame(get_positive({-1, -2, 4, 5, 6}) , {4, 5, 6} ));
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_30.cpp:30:33: note:   initializing argument 1 of ‘void get_positive(vector_float*, vector_float*)’
   30 | void get_positive(vector_float *result, vector_float *input) {
      |                   ~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_30.cpp:56:
./CPP_30.cpp:66:64: error: ‘issame’ cannot be used as a function
   66 |     assert (issame(get_positive({-1, -2, 4, 5, 6}) , {4, 5, 6} ));
      |                                                                ^
./CPP_30.cpp:67:71: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector_float*’
   67 |     assert (issame(get_positive({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}) , {5, 3, 2, 3, 3, 9, 123, 1}));
      |                                                                       ^
      |                                                                       |
      |                                                                       <brace-enclosed initializer list>
./CPP_30.cpp:30:33: note:   initializing argument 1 of ‘void get_positive(vector_float*, vector_float*)’
   30 | void get_positive(vector_float *result, vector_float *input) {
      |                   ~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_30.cpp:56:
./CPP_30.cpp:67:101: error: ‘issame’ cannot be used as a function
   67 |     assert (issame(get_positive({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}) , {5, 3, 2, 3, 3, 9, 123, 1}));
      |                                                                                                     ^
./CPP_30.cpp:68:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector_float*’
   68 |      assert (issame(get_positive({-1, -2}) , {} ));
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_30.cpp:30:33: note:   initializing argument 1 of ‘void get_positive(vector_float*, vector_float*)’
   30 | void get_positive(vector_float *result, vector_float *input) {
      |                   ~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_30.cpp:56:
./CPP_30.cpp:68:49: error: ‘issame’ cannot be used as a function
   68 |      assert (issame(get_positive({-1, -2}) , {} ));
      |                                                 ^
./CPP_30.cpp:69:36: error: too few arguments to function ‘void get_positive(vector_float*, vector_float*)’
   69 |      assert (issame(get_positive({}) , {}));
      |                                    ^
./CPP_30.cpp:30:6: note: declared here
   30 | void get_positive(vector_float *result, vector_float *input) {
      |      ^~~~~~~~~~~~
In file included from ./CPP_30.cpp:56:
./CPP_30.cpp:69:42: error: ‘issame’ cannot be used as a function
   69 |      assert (issame(get_positive({}) , {}));
      |                                          ^


CPP_9.cpp: Compilation Failed
Error: ./CPP_9.cpp:51:13: error: ‘vector’ is not a template
   51 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_9.cpp:51:27: error: ‘vector’ is not a template
   51 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_9.cpp: In function ‘bool issame(vector, vector)’:
./CPP_9.cpp:52:11: error: ‘struct vector’ has no member named ‘size’
   52 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_9.cpp:52:21: error: ‘struct vector’ has no member named ‘size’
   52 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_9.cpp:53:22: error: ‘struct vector’ has no member named ‘size’
   53 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_9.cpp:55:14: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   55 |         if (a[i]!=b[i]) return false;
      |              ^
./CPP_9.cpp:55:20: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   55 |         if (a[i]!=b[i]) return false;
      |                    ^
In file included from ./CPP_9.cpp:50:
./CPP_9.cpp: In function ‘int main()’:
./CPP_9.cpp:60:35: error: too few arguments to function ‘void rolling_max(vector*, const vector*)’
   60 |      assert (issame(rolling_max({}),{}));
      |                                   ^
./CPP_9.cpp:10:6: note: declared here
   10 | void rolling_max(vector *result, const vector *input) {
      |      ^~~~~~~~~~~
In file included from ./CPP_9.cpp:50:
./CPP_9.cpp:61:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   61 |     assert (issame(rolling_max({1, 2, 3, 4}) , {1, 2, 3, 4}));
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_9.cpp:10:26: note:   initializing argument 1 of ‘void rolling_max(vector*, const vector*)’
   10 | void rolling_max(vector *result, const vector *input) {
      |                  ~~~~~~~~^~~~~~
In file included from ./CPP_9.cpp:50:
./CPP_9.cpp:62:45: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   62 |      assert (issame(rolling_max({4, 3, 2, 1}),{4, 4, 4, 4}));
      |                                             ^
      |                                             |
      |                                             <brace-enclosed initializer list>
./CPP_9.cpp:10:26: note:   initializing argument 1 of ‘void rolling_max(vector*, const vector*)’
   10 | void rolling_max(vector *result, const vector *input) {
      |                  ~~~~~~~~^~~~~~
In file included from ./CPP_9.cpp:50:
./CPP_9.cpp:63:51: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   63 |       assert (issame(rolling_max({3, 2, 3, 100, 3}) ,{3, 3, 3, 100, 100}));
      |                                                   ^
      |                                                   |
      |                                                   <brace-enclosed initializer list>
./CPP_9.cpp:10:26: note:   initializing argument 1 of ‘void rolling_max(vector*, const vector*)’
   10 | void rolling_max(vector *result, const vector *input) {
      |                  ~~~~~~~~^~~~~~


CPP_35.cpp: Compilation Failed
Error: In file included from ./CPP_35.cpp:14:
./CPP_35.cpp: In function ‘int main()’:
./CPP_35.cpp:16:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   16 |     assert (abs(max_element({1, 2, 3})- 3)<1e-4);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_35.cpp:2:26: note:   initializing argument 1 of ‘float max_element(float*, float*)’
    2 | float max_element(float* begin, float* end) {
      |                   ~~~~~~~^~~~~
In file included from ./CPP_35.cpp:14:
./CPP_35.cpp:16:13: error: ‘abs’ was not declared in this scope
   16 |     assert (abs(max_element({1, 2, 3})- 3)<1e-4);
      |             ^~~
./CPP_35.cpp:17:68: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   17 |     assert (abs(max_element({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10})- 124)<1e-4);
      |                                                                    ^
      |                                                                    |
      |                                                                    <brace-enclosed initializer list>
./CPP_35.cpp:2:26: note:   initializing argument 1 of ‘float max_element(float*, float*)’
    2 | float max_element(float* begin, float* end) {
      |                   ~~~~~~~^~~~~


CPP_138.cpp: Compilation Failed
Error: In file included from ./CPP_138.cpp:10:
./CPP_138.cpp: In function ‘int main()’:
./CPP_138.cpp:12:13: error: ‘is_equal_to_sum_even’ was not declared in this scope
   12 |     assert (is_equal_to_sum_even(4) == false);
      |             ^~~~~~~~~~~~~~~~~~~~


CPP_134.cpp: Execution Failed
Error: CPP_134: ./CPP_134.cpp:19: int main(): Assertion `check_if_last_char_is_a_letter("apple pi e") == true' failed.
Aborted (core dumped)


CPP_102.cpp: Execution Failed
Error: CPP_102: ./CPP_102.cpp:19: int main(): Assertion `choose_num(12, 15) == 14' failed.
Aborted (core dumped)


CPP_18.cpp: Compilation Failed
Error: In file included from ./CPP_18.cpp:46:
./CPP_18.cpp: In function ‘int main()’:
./CPP_18.cpp:48:13: error: ‘how_many_times’ was not declared in this scope
   48 |     assert (how_many_times("", "x") == 0);
      |             ^~~~~~~~~~~~~~


CPP_45.cpp: Compilation Failed
Error: In file included from ./CPP_45.cpp:7:
./CPP_45.cpp: In function ‘int main()’:
./CPP_45.cpp:9:13: error: ‘abs’ was not declared in this scope
    9 |     assert (abs(triangle_area(5, 3) - 7.5)<1e-4);
      |             ^~~


CPP_21.cpp: Compilation Failed
Error: ./CPP_21.cpp:30:13: error: ‘vector’ was not declared in this scope
   30 | bool issame(vector<float> a,vector<float>b){
      |             ^~~~~~
./CPP_21.cpp:30:20: error: expected primary-expression before ‘float’
   30 | bool issame(vector<float> a,vector<float>b){
      |                    ^~~~~
./CPP_21.cpp:30:29: error: ‘vector’ was not declared in this scope
   30 | bool issame(vector<float> a,vector<float>b){
      |                             ^~~~~~
./CPP_21.cpp:30:36: error: expected primary-expression before ‘float’
   30 | bool issame(vector<float> a,vector<float>b){
      |                                    ^~~~~
./CPP_21.cpp:30:43: error: expression list treated as compound expression in initializer [-fpermissive]
   30 | bool issame(vector<float> a,vector<float>b){
      |                                           ^
./CPP_21.cpp:38:5: error: redefinition of ‘int main()’
   38 | int main(){
      |     ^~~~
./CPP_21.cpp:20:5: note: ‘int main()’ previously defined here
   20 | int main() {
      |     ^~~~
In file included from ./CPP_21.cpp:29:
./CPP_21.cpp: In function ‘int main()’:
./CPP_21.cpp:39:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   39 |     assert (issame(rescale_to_unit({2.0, 49.9}) , {0.0, 1.0}));
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_21.cpp:3:29: note:   initializing argument 1 of ‘void rescale_to_unit(float*, float*, int)’
    3 | void rescale_to_unit(float* dst, float* src, int len) {
      |                      ~~~~~~~^~~
In file included from ./CPP_21.cpp:29:
./CPP_21.cpp:39:61: error: ‘issame’ cannot be used as a function
   39 |     assert (issame(rescale_to_unit({2.0, 49.9}) , {0.0, 1.0}));
      |                                                             ^
./CPP_21.cpp:40:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   40 |      assert (issame(rescale_to_unit({100.0, 49.9}) ,{1.0, 0.0}));
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_21.cpp:3:29: note:   initializing argument 1 of ‘void rescale_to_unit(float*, float*, int)’
    3 | void rescale_to_unit(float* dst, float* src, int len) {
      |                      ~~~~~~~^~~
In file included from ./CPP_21.cpp:29:
./CPP_21.cpp:40:63: error: ‘issame’ cannot be used as a function
   40 |      assert (issame(rescale_to_unit({100.0, 49.9}) ,{1.0, 0.0}));
      |                                                               ^
./CPP_21.cpp:41:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   41 |      assert (issame(rescale_to_unit({1.0, 2.0, 3.0, 4.0, 5.0}) , {0.0, 0.25, 0.5, 0.75, 1.0}));
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_21.cpp:3:29: note:   initializing argument 1 of ‘void rescale_to_unit(float*, float*, int)’
    3 | void rescale_to_unit(float* dst, float* src, int len) {
      |                      ~~~~~~~^~~
In file included from ./CPP_21.cpp:29:
./CPP_21.cpp:41:93: error: ‘issame’ cannot be used as a function
   41 |      assert (issame(rescale_to_unit({1.0, 2.0, 3.0, 4.0, 5.0}) , {0.0, 0.25, 0.5, 0.75, 1.0}));
      |                                                                                             ^
./CPP_21.cpp:42:61: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   42 |     assert (issame(rescale_to_unit({2.0, 1.0, 5.0, 3.0, 4.0}) , {0.25, 0.0, 1.0, 0.5, 0.75}));
      |                                                             ^
      |                                                             |
      |                                                             <brace-enclosed initializer list>
./CPP_21.cpp:3:29: note:   initializing argument 1 of ‘void rescale_to_unit(float*, float*, int)’
    3 | void rescale_to_unit(float* dst, float* src, int len) {
      |                      ~~~~~~~^~~
In file included from ./CPP_21.cpp:29:
./CPP_21.cpp:42:92: error: ‘issame’ cannot be used as a function
   42 |     assert (issame(rescale_to_unit({2.0, 1.0, 5.0, 3.0, 4.0}) , {0.25, 0.0, 1.0, 0.5, 0.75}));
      |                                                                                            ^
./CPP_21.cpp:43:67: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   43 |      assert (issame(rescale_to_unit({12.0, 11.0, 15.0, 13.0, 14.0}) ,{0.25, 0.0, 1.0, 0.5, 0.75}));
      |                                                                   ^
      |                                                                   |
      |                                                                   <brace-enclosed initializer list>
./CPP_21.cpp:3:29: note:   initializing argument 1 of ‘void rescale_to_unit(float*, float*, int)’
    3 | void rescale_to_unit(float* dst, float* src, int len) {
      |                      ~~~~~~~^~~
In file included from ./CPP_21.cpp:29:
./CPP_21.cpp:43:97: error: ‘issame’ cannot be used as a function
   43 |      assert (issame(rescale_to_unit({12.0, 11.0, 15.0, 13.0, 14.0}) ,{0.25, 0.0, 1.0, 0.5, 0.75}));
      |                                                                                                 ^


CPP_78.cpp: Compilation Failed
Error: ./CPP_78.cpp: In function ‘int hex_key(const char*)’:
./CPP_78.cpp:9:7: error: ‘strlen’ was not declared in this scope
    9 |   if (strlen(str) == 0) {
      |       ^~~~~~
./CPP_78.cpp:2:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    1 | #include <stdint.h>
  +++ |+#include <cstring>
    2 | 


CPP_63.cpp: Compilation Failed
Error: In file included from ./CPP_63.cpp:14:
./CPP_63.cpp: In function ‘int main()’:
./CPP_63.cpp:16:13: error: ‘fibfib’ was not declared in this scope
   16 |     assert (fibfib(2) == 1);
      |             ^~~~~~


CPP_100.cpp: Compilation Failed
Error: ./CPP_100.cpp:29:1: error: stray ‘`’ in program
   29 | ```
      | ^
./CPP_100.cpp:29:2: error: stray ‘`’ in program
   29 | ```
      |  ^
./CPP_100.cpp:29:3: error: stray ‘`’ in program
   29 | ```
      |   ^
./CPP_100.cpp:31:1: error: expected unqualified-id before ‘<’ token
   31 | <|im_end|>
      | ^
./CPP_100.cpp:34:13: error: ‘vector’ is not a template
   34 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_100.cpp:34:27: error: ‘vector’ is not a template
   34 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_100.cpp: In function ‘bool issame(vector, vector)’:
./CPP_100.cpp:35:11: error: ‘vector’ {aka ‘struct vector’} has no member named ‘size’
   35 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_100.cpp:35:21: error: ‘vector’ {aka ‘struct vector’} has no member named ‘size’
   35 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_100.cpp:36:22: error: ‘vector’ {aka ‘struct vector’} has no member named ‘size’
   36 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_100.cpp:38:10: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   38 |     if (a[i]!=b[i]) return false;
      |          ^
./CPP_100.cpp:38:16: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   38 |     if (a[i]!=b[i]) return false;
      |                ^
In file included from ./CPP_100.cpp:33:
./CPP_100.cpp: In function ‘int main()’:
./CPP_100.cpp:43:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
   43 |     assert (issame(make_a_pile(3) , {3, 5, 7}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:43:33: error: too few arguments to function ‘void make_a_pile(vector*, int)’
   43 |     assert (issame(make_a_pile(3) , {3, 5, 7}));
      |                                 ^
./CPP_100.cpp:9:6: note: declared here
    9 | void make_a_pile(vector* v, int size) {
      |      ^~~~~~~~~~~
In file included from ./CPP_100.cpp:33:
./CPP_100.cpp:43:5: error: ‘__assert_fail’ was not declared in this scope
   43 |     assert (issame(make_a_pile(3) , {3, 5, 7}));
      |     ^~~~~~
./CPP_100.cpp:44:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
   44 |     assert (issame(make_a_pile(4) , {4,6,8,10}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:44:33: error: too few arguments to function ‘void make_a_pile(vector*, int)’
   44 |     assert (issame(make_a_pile(4) , {4,6,8,10}));
      |                                 ^
./CPP_100.cpp:9:6: note: declared here
    9 | void make_a_pile(vector* v, int size) {
      |      ^~~~~~~~~~~
In file included from ./CPP_100.cpp:33:
./CPP_100.cpp:45:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
   45 |     assert (issame(make_a_pile(5) , {5, 7, 9, 11, 13}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:45:33: error: too few arguments to function ‘void make_a_pile(vector*, int)’
   45 |     assert (issame(make_a_pile(5) , {5, 7, 9, 11, 13}));
      |                                 ^
./CPP_100.cpp:9:6: note: declared here
    9 | void make_a_pile(vector* v, int size) {
      |      ^~~~~~~~~~~
In file included from ./CPP_100.cpp:33:
./CPP_100.cpp:46:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
   46 |     assert (issame(make_a_pile(6) , {6, 8, 10, 12, 14, 16}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:46:33: error: too few arguments to function ‘void make_a_pile(vector*, int)’
   46 |     assert (issame(make_a_pile(6) , {6, 8, 10, 12, 14, 16}));
      |                                 ^
./CPP_100.cpp:9:6: note: declared here
    9 | void make_a_pile(vector* v, int size) {
      |      ^~~~~~~~~~~
In file included from ./CPP_100.cpp:33:
./CPP_100.cpp:47:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
   47 |     assert (issame(make_a_pile(8) , {8, 10, 12, 14, 16, 18, 20, 22}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:47:33: error: too few arguments to function ‘void make_a_pile(vector*, int)’
   47 |     assert (issame(make_a_pile(8) , {8, 10, 12, 14, 16, 18, 20, 22}));
      |                                 ^
./CPP_100.cpp:9:6: note: declared here
    9 | void make_a_pile(vector* v, int size) {
      |      ^~~~~~~~~~~


CPP_106.cpp: Compilation Failed
Error: ./CPP_106.cpp:5:25: error: field ‘base’ has incomplete type ‘_Vector_base’
    5 |     struct _Vector_base base;
      |                         ^~~~
./CPP_106.cpp:5:12: note: forward declaration of ‘struct _Vector_base’
    5 |     struct _Vector_base base;
      |            ^~~~~~~~~~~~
./CPP_106.cpp:9:35: error: field ‘_M_impl’ has incomplete type ‘_Vector_base_impl_data’
    9 |     struct _Vector_base_impl_data _M_impl;
      |                                   ^~~~~~~
./CPP_106.cpp:9:12: note: forward declaration of ‘struct _Vector_base_impl_data’
    9 |     struct _Vector_base_impl_data _M_impl;
      |            ^~~~~~~~~~~~~~~~~~~~~~
./CPP_106.cpp:81:13: error: ‘vector’ was not declared in this scope
   81 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_106.cpp:81:20: error: expected primary-expression before ‘int’
   81 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_106.cpp:81:27: error: ‘vector’ was not declared in this scope
   81 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_106.cpp:81:34: error: expected primary-expression before ‘int’
   81 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_106.cpp:81:39: error: expression list treated as compound expression in initializer [-fpermissive]
   81 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
./CPP_106.cpp:89:5: error: redefinition of ‘int main()’
   89 | int main(){
      |     ^~~~
./CPP_106.cpp:73:5: note: ‘int main()’ previously defined here
   73 | int main() {
      |     ^~~~
In file included from ./CPP_106.cpp:80:
./CPP_106.cpp: In function ‘int main()’:
./CPP_106.cpp:90:20: error: ‘f’ was not declared in this scope
   90 |     assert (issame(f(5) , {1, 2, 6, 24, 15}));
      |                    ^
./CPP_106.cpp:90:44: error: ‘issame’ cannot be used as a function
   90 |     assert (issame(f(5) , {1, 2, 6, 24, 15}));
      |                                            ^
./CPP_106.cpp:91:53: error: ‘issame’ cannot be used as a function
   91 |     assert (issame(f(7) , {1, 2, 6, 24, 15, 720, 28}));
      |                                                     ^
./CPP_106.cpp:92:30: error: ‘issame’ cannot be used as a function
   92 |     assert (issame(f(1) , {1}));
      |                              ^
./CPP_106.cpp:93:36: error: ‘issame’ cannot be used as a function
   93 |     assert (issame(f(3) , {1, 2, 6}));
      |                                    ^


CPP_83.cpp: Compilation Failed
Error: In file included from ./CPP_83.cpp:51:
./CPP_83.cpp: In function ‘int main()’:
./CPP_83.cpp:53:13: error: ‘starts_one_ends’ was not declared in this scope; did you mean ‘starts_one_end’?
   53 |     assert (starts_one_ends(1) == 1);
      |             ^~~~~~~~~~~~~~~


CPP_6.cpp: Compilation Failed
Error: ./CPP_6.cpp: In function ‘void parse_nested_parens(__cxx11__basic_string*, const __cxx11__basic_string*)’:
./CPP_6.cpp:16:25: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
   16 |   char *cursor = input->__data;
      |                  ~~~~~~~^~~~~~
      |                         |
      |                         void*
./CPP_6.cpp: At global scope:
./CPP_6.cpp:51:13: error: ‘vector’ was not declared in this scope
   51 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_6.cpp:51:20: error: expected primary-expression before ‘int’
   51 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_6.cpp:51:27: error: ‘vector’ was not declared in this scope
   51 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_6.cpp:51:34: error: expected primary-expression before ‘int’
   51 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_6.cpp:51:39: error: expression list treated as compound expression in initializer [-fpermissive]
   51 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_6.cpp:50:
./CPP_6.cpp: In function ‘int main()’:
./CPP_6.cpp:60:40: error: cannot convert ‘const char*’ to ‘__cxx11__basic_string*’
   60 |     assert (issame(parse_nested_parens("(()()) ((())) () ((())()())"),{2, 3, 1, 3}));
      |                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                        |
      |                                        const char*
./CPP_6.cpp:10:56: note:   initializing argument 1 of ‘void parse_nested_parens(__cxx11__basic_string*, const __cxx11__basic_string*)’
   10 | void parse_nested_parens(struct __cxx11__basic_string *result,
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_6.cpp:50:
./CPP_6.cpp:60:83: error: ‘issame’ cannot be used as a function
   60 |     assert (issame(parse_nested_parens("(()()) ((())) () ((())()())"),{2, 3, 1, 3}));
      |                                                                                   ^
./CPP_6.cpp:61:41: error: cannot convert ‘const char*’ to ‘__cxx11__basic_string*’
   61 |      assert (issame(parse_nested_parens("() (()) ((())) (((())))") , {1, 2, 3, 4}));
      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~
      |                                         |
      |                                         const char*
./CPP_6.cpp:10:56: note:   initializing argument 1 of ‘void parse_nested_parens(__cxx11__basic_string*, const __cxx11__basic_string*)’
   10 | void parse_nested_parens(struct __cxx11__basic_string *result,
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_6.cpp:50:
./CPP_6.cpp:61:82: error: ‘issame’ cannot be used as a function
   61 |      assert (issame(parse_nested_parens("() (()) ((())) (((())))") , {1, 2, 3, 4}));
      |                                                                                  ^
./CPP_6.cpp:62:40: error: cannot convert ‘const char*’ to ‘__cxx11__basic_string*’
   62 |     assert (issame(parse_nested_parens("(()(())((())))") ,{4}));
      |                                        ^~~~~~~~~~~~~~~~
      |                                        |
      |                                        const char*
./CPP_6.cpp:10:56: note:   initializing argument 1 of ‘void parse_nested_parens(__cxx11__basic_string*, const __cxx11__basic_string*)’
   10 | void parse_nested_parens(struct __cxx11__basic_string *result,
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_6.cpp:50:
./CPP_6.cpp:62:62: error: ‘issame’ cannot be used as a function
   62 |     assert (issame(parse_nested_parens("(()(())((())))") ,{4}));
      |                                                              ^


CPP_116.cpp: Compilation Failed
Error: ./CPP_116.cpp:67:13: error: ‘vector’ is not a template
   67 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_116.cpp:67:27: error: ‘vector’ is not a template
   67 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_116.cpp: In function ‘bool issame(vector, vector)’:
./CPP_116.cpp:68:11: error: ‘struct vector’ has no member named ‘size’
   68 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_116.cpp:68:21: error: ‘struct vector’ has no member named ‘size’
   68 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_116.cpp:69:22: error: ‘struct vector’ has no member named ‘size’
   69 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_116.cpp:71:10: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   71 |     if (a[i]!=b[i]) return false;
      |          ^
./CPP_116.cpp:71:16: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   71 |     if (a[i]!=b[i]) return false;
      |                ^
In file included from ./CPP_116.cpp:66:
./CPP_116.cpp: In function ‘int main()’:
./CPP_116.cpp:76:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   76 |     assert (issame(sort_array({1,5,2,3,4}) , {1, 2, 4, 3, 5}));
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_116.cpp:14:26: note:   initializing argument 1 of ‘void sort_array(vector*, vector*)’
   14 | void sort_array(vector * dest, vector * src) {
      |                 ~~~~~~~~~^~~~
In file included from ./CPP_116.cpp:66:
./CPP_116.cpp:77:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   77 |     assert (issame(sort_array({-2,-3,-4,-5,-6}) , {-4, -2, -6, -5, -3}));
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_116.cpp:14:26: note:   initializing argument 1 of ‘void sort_array(vector*, vector*)’
   14 | void sort_array(vector * dest, vector * src) {
      |                 ~~~~~~~~~^~~~
In file included from ./CPP_116.cpp:66:
./CPP_116.cpp:78:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   78 |     assert (issame(sort_array({1,0,2,3,4}) , {0, 1, 2, 4, 3}));
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_116.cpp:14:26: note:   initializing argument 1 of ‘void sort_array(vector*, vector*)’
   14 | void sort_array(vector * dest, vector * src) {
      |                 ~~~~~~~~~^~~~
In file included from ./CPP_116.cpp:66:
./CPP_116.cpp:79:33: error: too few arguments to function ‘void sort_array(vector*, vector*)’
   79 |     assert (issame(sort_array({}) , {}));
      |                                 ^
./CPP_116.cpp:14:6: note: declared here
   14 | void sort_array(vector * dest, vector * src) {
      |      ^~~~~~~~~~
In file included from ./CPP_116.cpp:66:
./CPP_116.cpp:80:55: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   80 |     assert (issame(sort_array({2,5,77,4,5,3,5,7,2,3,4}) , {2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77}));
      |                                                       ^
      |                                                       |
      |                                                       <brace-enclosed initializer list>
./CPP_116.cpp:14:26: note:   initializing argument 1 of ‘void sort_array(vector*, vector*)’
   14 | void sort_array(vector * dest, vector * src) {
      |                 ~~~~~~~~~^~~~
In file included from ./CPP_116.cpp:66:
./CPP_116.cpp:81:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   81 |     assert (issame(sort_array({3,6,44,12,32,5}) , {32, 3, 5, 6, 12, 44}));
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_116.cpp:14:26: note:   initializing argument 1 of ‘void sort_array(vector*, vector*)’
   14 | void sort_array(vector * dest, vector * src) {
      |                 ~~~~~~~~~^~~~
In file included from ./CPP_116.cpp:66:
./CPP_116.cpp:82:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   82 |     assert (issame(sort_array({2,4,8,16,32}) , {2, 4, 8, 16, 32}));
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_116.cpp:14:26: note:   initializing argument 1 of ‘void sort_array(vector*, vector*)’
   14 | void sort_array(vector * dest, vector * src) {
      |                 ~~~~~~~~~^~~~
In file included from ./CPP_116.cpp:66:
./CPP_116.cpp:83:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   83 |     assert (issame(sort_array({2,4,8,16,32}) , {2, 4, 8, 16, 32}));
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_116.cpp:14:26: note:   initializing argument 1 of ‘void sort_array(vector*, vector*)’
   14 | void sort_array(vector * dest, vector * src) {
      |                 ~~~~~~~~~^~~~


CPP_71.cpp: Compilation Failed
Error: ./CPP_71.cpp: In function ‘float triangle_area(float, float, float)’:
./CPP_71.cpp:4:18: error: ‘sqrt’ was not declared in this scope
    4 |     float area = sqrt(s * (s - a) * (s - b) * (s - c));
      |                  ^~~~
In file included from ./CPP_71.cpp:11:
./CPP_71.cpp: In function ‘int main()’:
./CPP_71.cpp:13:13: error: ‘abs’ was not declared in this scope
   13 |     assert (abs(triangle_area(3, 4, 5)-6.00)<0.01);
      |             ^~~


CPP_99.cpp: Compilation Failed
Error: ./CPP_99.cpp:5:32: error: ‘string’ in namespace ‘std’ does not name a type
    5 | int closest_integer(const std::string& str) {
      |                                ^~~~~~
./CPP_99.cpp:2:1: note: ‘std::string’ is defined in header ‘<string>’; did you forget to ‘#include <string>’?
    1 | #include <stdio.h>
  +++ |+#include <string>
    2 | 
./CPP_99.cpp: In function ‘int closest_integer(const int&)’:
./CPP_99.cpp:6:26: error: request for member ‘c_str’ in ‘str’, which is of non-class type ‘const int’
    6 |   const char* cstr = str.c_str();
      |                          ^~~~~
./CPP_99.cpp:8:20: error: ‘round’ was not declared in this scope; did you mean ‘rounded’?
    8 |   double rounded = round(d);
      |                    ^~~~~
      |                    rounded
In file included from ./CPP_99.cpp:13:
./CPP_99.cpp: In function ‘int main()’:
./CPP_99.cpp:15:29: error: invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]
   15 |     assert (closest_integer("10") == 10);
      |                             ^~~~
      |                             |
      |                             const char*
./CPP_99.cpp:5:40: note:   initializing argument 1 of ‘int closest_integer(const int&)’
    5 | int closest_integer(const std::string& str) {
      |                     ~~~~~~~~~~~~~~~~~~~^~~
In file included from ./CPP_99.cpp:13:
./CPP_99.cpp:16:29: error: invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]
   16 |     assert (closest_integer("14.5") == 15);
      |                             ^~~~~~
      |                             |
      |                             const char*
./CPP_99.cpp:5:40: note:   initializing argument 1 of ‘int closest_integer(const int&)’
    5 | int closest_integer(const std::string& str) {
      |                     ~~~~~~~~~~~~~~~~~~~^~~
In file included from ./CPP_99.cpp:13:
./CPP_99.cpp:17:29: error: invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]
   17 |     assert (closest_integer("-15.5") == -16);
      |                             ^~~~~~~
      |                             |
      |                             const char*
./CPP_99.cpp:5:40: note:   initializing argument 1 of ‘int closest_integer(const int&)’
    5 | int closest_integer(const std::string& str) {
      |                     ~~~~~~~~~~~~~~~~~~~^~~
In file included from ./CPP_99.cpp:13:
./CPP_99.cpp:18:29: error: invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]
   18 |     assert (closest_integer("15.3") == 15);
      |                             ^~~~~~
      |                             |
      |                             const char*
./CPP_99.cpp:5:40: note:   initializing argument 1 of ‘int closest_integer(const int&)’
    5 | int closest_integer(const std::string& str) {
      |                     ~~~~~~~~~~~~~~~~~~~^~~
In file included from ./CPP_99.cpp:13:
./CPP_99.cpp:19:29: error: invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]
   19 |     assert (closest_integer("0") == 0);
      |                             ^~~
      |                             |
      |                             const char*
./CPP_99.cpp:5:40: note:   initializing argument 1 of ‘int closest_integer(const int&)’
    5 | int closest_integer(const std::string& str) {
      |                     ~~~~~~~~~~~~~~~~~~~^~~


CPP_82.cpp: Compilation Failed
Error: ./CPP_82.cpp: In function ‘int prime_length(const char*)’:
./CPP_82.cpp:4:17: error: ‘strlen’ was not declared in this scope
    4 |   int64_t len = strlen(s);
      |                 ^~~~~~
./CPP_82.cpp:2:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    1 | #include <stdint.h>
  +++ |+#include <cstring>
    2 | 


CPP_39.cpp: Compilation Failed
Error: ./CPP_39.cpp:26:1: error: stray ‘`’ in program
   26 | ```
      | ^
./CPP_39.cpp:26:2: error: stray ‘`’ in program
   26 | ```
      |  ^
./CPP_39.cpp:26:3: error: stray ‘`’ in program
   26 | ```
      |   ^
./CPP_39.cpp:27:1: error: expected unqualified-id before ‘<’ token
   27 | <|im_end|>
      | ^
In file included from ./CPP_39.cpp:29:
./CPP_39.cpp: In function ‘int main()’:
./CPP_39.cpp:31:5: error: ‘__assert_fail’ was not declared in this scope
   31 |     assert (prime_fib(1) == 2);
      |     ^~~~~~


CPP_56.cpp: Compilation Failed
Error: ./CPP_56.cpp:30:1: error: stray ‘`’ in program
   30 | ```
      | ^
./CPP_56.cpp:30:2: error: stray ‘`’ in program
   30 | ```
      |  ^
./CPP_56.cpp:30:3: error: stray ‘`’ in program
   30 | ```
      |   ^
./CPP_56.cpp: In function ‘int main()’:
./CPP_56.cpp:23:15: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   23 |   char* str = "()(())";
      |               ^~~~~~~~
./CPP_56.cpp:24:16: error: ‘strlen’ was not declared in this scope
   24 |   size_t len = strlen(str);
      |                ^~~~~~
./CPP_56.cpp:3:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    2 | #include <stdio.h>
  +++ |+#include <cstring>
    3 | 
./CPP_56.cpp: At global scope:
./CPP_56.cpp:32:1: error: expected unqualified-id before ‘<’ token
   32 | <|im_end|>
      | ^
./CPP_56.cpp:35:5: error: redefinition of ‘int main()’
   35 | int main(){
      |     ^~~~
./CPP_56.cpp:22:5: note: ‘int main()’ previously defined here
   22 | int main() {
      |     ^~~~
In file included from ./CPP_56.cpp:34:
./CPP_56.cpp: In function ‘int main()’:
./CPP_56.cpp:36:36: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   36 |     assert (correct_bracketing("<>"));
      |                                    ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:34:
./CPP_56.cpp:36:5: error: ‘__assert_fail’ was not declared in this scope
   36 |     assert (correct_bracketing("<>"));
      |     ^~~~~~
./CPP_56.cpp:37:40: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   37 |     assert (correct_bracketing("<<><>>"));
      |                                        ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:34:
./CPP_56.cpp:38:46: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   38 |     assert (correct_bracketing("<><><<><>><>"));
      |                                              ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:34:
./CPP_56.cpp:39:60: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   39 |     assert (correct_bracketing("<><><<<><><>><>><<><><<>>>"));
      |                                                            ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:34:
./CPP_56.cpp:40:48: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   40 |     assert (not (correct_bracketing("<<<><>>>>")));
      |                                                ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:34:
./CPP_56.cpp:41:43: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   41 |     assert (not (correct_bracketing("><<>")));
      |                                           ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:34:
./CPP_56.cpp:42:40: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   42 |     assert (not (correct_bracketing("<")));
      |                                        ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:34:
./CPP_56.cpp:43:43: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   43 |     assert (not (correct_bracketing("<<<<")));
      |                                           ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:34:
./CPP_56.cpp:44:40: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   44 |     assert (not (correct_bracketing(">")));
      |                                        ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:34:
./CPP_56.cpp:45:42: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   45 |     assert (not (correct_bracketing("<<>")));
      |                                          ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:34:
./CPP_56.cpp:46:55: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   46 |     assert (not (correct_bracketing("<><><<><>><>><<>")));
      |                                                       ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:34:
./CPP_56.cpp:47:55: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   47 |     assert (not (correct_bracketing("<><><<><>><>>><>")));
      |                                                       ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~


CPP_11.cpp: Compilation Failed
Error: ./CPP_11.cpp: In function ‘void string_xor(char**, const char*, const char*)’:
./CPP_11.cpp:6:15: error: ‘strlen’ was not declared in this scope
    6 |   long len1 = strlen(str1);
      |               ^~~~~~
./CPP_11.cpp:2:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    1 | #include <stdlib.h>
  +++ |+#include <cstring>
    2 | 
In file included from ./CPP_11.cpp:31:
./CPP_11.cpp: In function ‘int main()’:
./CPP_11.cpp:33:24: error: cannot convert ‘const char*’ to ‘char**’
   33 |     assert (string_xor("111000", "101010") == "010010");
      |                        ^~~~~~~~
      |                        |
      |                        const char*
./CPP_11.cpp:3:24: note:   initializing argument 1 of ‘void string_xor(char**, const char*, const char*)’
    3 | void string_xor(char **dest, const char *str1, const char *str2) {
      |                 ~~~~~~~^~~~
In file included from ./CPP_11.cpp:31:
./CPP_11.cpp:34:25: error: cannot convert ‘const char*’ to ‘char**’
   34 |      assert (string_xor("1", "1") == "0");
      |                         ^~~
      |                         |
      |                         const char*
./CPP_11.cpp:3:24: note:   initializing argument 1 of ‘void string_xor(char**, const char*, const char*)’
    3 | void string_xor(char **dest, const char *str1, const char *str2) {
      |                 ~~~~~~~^~~~
In file included from ./CPP_11.cpp:31:
./CPP_11.cpp:35:24: error: cannot convert ‘const char*’ to ‘char**’
   35 |     assert (string_xor("0101", "0000") == "0101");
      |                        ^~~~~~
      |                        |
      |                        const char*
./CPP_11.cpp:3:24: note:   initializing argument 1 of ‘void string_xor(char**, const char*, const char*)’
    3 | void string_xor(char **dest, const char *str1, const char *str2) {
      |                 ~~~~~~~^~~~


CPP_146.cpp: Compilation Failed
Error: ./CPP_146.cpp:46:5: error: redefinition of ‘int main()’
   46 | int main(){
      |     ^~~~
./CPP_146.cpp:30:5: note: ‘int main()’ previously defined here
   30 | int main() {
      |     ^~~~
In file included from ./CPP_146.cpp:45:
./CPP_146.cpp: In function ‘int main()’:
./CPP_146.cpp:47:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   47 |     assert (specialFilter({5, -2, 1, -5}) == 0  );
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_146.cpp:11:27: note:   initializing argument 1 of ‘int specialFilter(vector*)’
   11 | int specialFilter(vector *v) {
      |                   ~~~~~~~~^
In file included from ./CPP_146.cpp:45:
./CPP_146.cpp:48:45: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   48 |     assert (specialFilter({15, -73, 14, -15}) == 1);
      |                                             ^
      |                                             |
      |                                             <brace-enclosed initializer list>
./CPP_146.cpp:11:27: note:   initializing argument 1 of ‘int specialFilter(vector*)’
   11 | int specialFilter(vector *v) {
      |                   ~~~~~~~~^
In file included from ./CPP_146.cpp:45:
./CPP_146.cpp:49:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   49 |     assert (specialFilter({33, -2, -3, 45, 21, 109}) == 2);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_146.cpp:11:27: note:   initializing argument 1 of ‘int specialFilter(vector*)’
   11 | int specialFilter(vector *v) {
      |                   ~~~~~~~~^
In file included from ./CPP_146.cpp:45:
./CPP_146.cpp:50:55: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   50 |     assert (specialFilter({43, -12, 93, 125, 121, 109}) == 4);
      |                                                       ^
      |                                                       |
      |                                                       <brace-enclosed initializer list>
./CPP_146.cpp:11:27: note:   initializing argument 1 of ‘int specialFilter(vector*)’
   11 | int specialFilter(vector *v) {
      |                   ~~~~~~~~^
In file included from ./CPP_146.cpp:45:
./CPP_146.cpp:51:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   51 |     assert (specialFilter({71, -2, -33, 75, 21, 19}) == 3);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_146.cpp:11:27: note:   initializing argument 1 of ‘int specialFilter(vector*)’
   11 | int specialFilter(vector *v) {
      |                   ~~~~~~~~^
In file included from ./CPP_146.cpp:45:
./CPP_146.cpp:52:30: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
   52 |     assert (specialFilter({1}) == 0              );
      |                              ^
      |                              |
      |                              int
./CPP_146.cpp:11:27: note:   initializing argument 1 of ‘int specialFilter(vector*)’
   11 | int specialFilter(vector *v) {
      |                   ~~~~~~~~^


CPP_59.cpp: Compilation Failed
Error: ./CPP_59.cpp:24:1: error: stray ‘`’ in program
   24 | ```
      | ^
./CPP_59.cpp:24:2: error: stray ‘`’ in program
   24 | ```
      |  ^
./CPP_59.cpp:24:3: error: stray ‘`’ in program
   24 | ```
      |   ^
./CPP_59.cpp:25:1: error: expected unqualified-id before ‘<’ token
   25 | <|im_end|>
      | ^
In file included from ./CPP_59.cpp:27:
./CPP_59.cpp: In function ‘int main()’:
./CPP_59.cpp:29:5: error: ‘__assert_fail’ was not declared in this scope
   29 |     assert (largest_prime_factor(15) == 5);
      |     ^~~~~~


CPP_77.cpp: Compilation Failed
Error: ./CPP_77.cpp: In function ‘int _Z7iscuberi(int)’:
./CPP_77.cpp:2:12: error: ‘llvm_abs’ was not declared in this scope
    2 |   int i2 = llvm_abs(a0, 1);
      |            ^~~~~~~~
In file included from ./CPP_77.cpp:15:
./CPP_77.cpp: In function ‘int main()’:
./CPP_77.cpp:17:13: error: ‘iscuber’ was not declared in this scope
   17 |     assert (iscuber(1) == true);
      |             ^~~~~~~


CPP_98.cpp: Execution Failed
Error: CPP_98: ./CPP_98.cpp:20: int main(): Assertion `count_upper("aBCdEf") == 1' failed.
Aborted (core dumped)


CPP_0.cpp: Compilation Failed
Error: ./CPP_0.cpp: In function ‘bool has_close_elements(const std::vector<float>&, float)’:
./CPP_0.cpp:5:27: error: invalid conversion from ‘const float*’ to ‘float*’ [-fpermissive]
    5 |   float* end = vec.data() + vec.size();
      |                ~~~~~~~~~~~^~~~~~~~~~~~
      |                           |
      |                           const float*
./CPP_0.cpp:6:26: error: invalid conversion from ‘const float*’ to ‘float*’ [-fpermissive]
    6 |   float* it = vec.data() + 1;
      |               ~~~~~~~~~~~^~~
      |                          |
      |                          const float*
./CPP_0.cpp: In function ‘int main()’:
./CPP_0.cpp:26:5: error: ‘vector’ was not declared in this scope; did you mean ‘std::vector’?
   26 |     vector<float> a={1.0, 2.0, 3.9, 4.0, 5.0, 2.2};
      |     ^~~~~~
      |     std::vector
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_0.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:386:11: note: ‘std::vector’ declared here
  386 |     class vector : protected _Vector_base<_Tp, _Alloc>
      |           ^~~~~~
./CPP_0.cpp:26:12: error: expected primary-expression before ‘float’
   26 |     vector<float> a={1.0, 2.0, 3.9, 4.0, 5.0, 2.2};
      |            ^~~~~
In file included from ./CPP_0.cpp:24:
./CPP_0.cpp:27:32: error: ‘a’ was not declared in this scope
   27 |     assert (has_close_elements(a, 0.3)==true);
      |                                ^


CPP_157.cpp: Compilation Failed
Error: ./CPP_157.cpp: In function ‘float _Z20right_angle_trianglefff(float, float, float)’:
./CPP_157.cpp:7:25: error: ‘fabsf’ was not declared in this scope
    7 |   double tmp5 = (double)fabsf(tmp4);
      |                         ^~~~~
In file included from ./CPP_157.cpp:28:
./CPP_157.cpp: In function ‘int main()’:
./CPP_157.cpp:30:13: error: ‘right_angle_triangle’ was not declared in this scope
   30 |     assert (right_angle_triangle(3, 4, 5) == true);
      |             ^~~~~~~~~~~~~~~~~~~~


CPP_141.cpp: Compilation Failed
Error: ./CPP_141.cpp: In function ‘void file_name_check(string*, string*)’:
./CPP_141.cpp:36:57: error: expected ‘)’ before ‘extern’
   36 |   if (name->size >= 5 && !strcmp(name->data + name->size
      |                                 ~                       ^
      |                                                         )
./CPP_141.cpp:66:2: error: expected ‘)’ at end of input
   66 | }
      | ~^
      |  )
./CPP_141.cpp:36:6: note: to match this ‘(’
   36 |   if (name->size >= 5 && !strcmp(name->data + name->size
      |      ^
./CPP_141.cpp:66:1: error: expected statement at end of input
   66 | }
      | ^
./CPP_141.cpp:66:1: error: expected ‘}’ at end of input
./CPP_141.cpp:9:52: note: to match this ‘{’
    9 | void file_name_check(string *result, string *name) {
      |                                                    ^


CPP_127.cpp: Compilation Failed
Error: In file included from ./CPP_127.cpp:76:
./CPP_127.cpp: In function ‘int main()’:
./CPP_127.cpp:78:13: error: ‘intersection’ was not declared in this scope
   78 |     assert (intersection({1, 2}, {2, 3}) == "NO");
      |             ^~~~~~~~~~~~


CPP_122.cpp: Compilation Failed
Error: In file included from ./CPP_122.cpp:18:
./CPP_122.cpp: In function ‘int main()’:
./CPP_122.cpp:20:56: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   20 |     assert (add_elements({1,-2,-3,41,57,76,87,88,99}, 3) == -4);
      |                                                        ^
      |                                                        |
      |                                                        <brace-enclosed initializer list>
./CPP_122.cpp:1:23: note:   initializing argument 1 of ‘int add_elements(int*, int)’
    1 | int add_elements(int *a, int n) {
      |                  ~~~~~^
In file included from ./CPP_122.cpp:18:
./CPP_122.cpp:21:49: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   21 |     assert (add_elements({111,121,3,4000,5,6}, 2) == 0);
      |                                                 ^
      |                                                 |
      |                                                 <brace-enclosed initializer list>
./CPP_122.cpp:1:23: note:   initializing argument 1 of ‘int add_elements(int*, int)’
    1 | int add_elements(int *a, int n) {
      |                  ~~~~~^
In file included from ./CPP_122.cpp:18:
./CPP_122.cpp:22:51: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   22 |     assert (add_elements({11,21,3,90,5,6,7,8,9}, 4) == 125);
      |                                                   ^
      |                                                   |
      |                                                   <brace-enclosed initializer list>
./CPP_122.cpp:1:23: note:   initializing argument 1 of ‘int add_elements(int*, int)’
    1 | int add_elements(int *a, int n) {
      |                  ~~~~~^
In file included from ./CPP_122.cpp:18:
./CPP_122.cpp:23:54: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   23 |     assert (add_elements({111,21,3,4000,5,6,7,8,9}, 4) == 24);
      |                                                      ^
      |                                                      |
      |                                                      <brace-enclosed initializer list>
./CPP_122.cpp:1:23: note:   initializing argument 1 of ‘int add_elements(int*, int)’
    1 | int add_elements(int *a, int n) {
      |                  ~~~~~^
In file included from ./CPP_122.cpp:18:
./CPP_122.cpp:24:32: error: invalid conversion from ‘int’ to ‘int*’ [-fpermissive]
   24 |     assert (add_elements({1}, 1) == 1);
      |                                ^
      |                                |
      |                                int
./CPP_122.cpp:1:23: note:   initializing argument 1 of ‘int add_elements(int*, int)’
    1 | int add_elements(int *a, int n) {
      |                  ~~~~~^


CPP_49.cpp: Compilation Failed
Error: In file included from ./CPP_49.cpp:53:
./CPP_49.cpp: In function ‘int main()’:
./CPP_49.cpp:55:13: error: ‘modp’ was not declared in this scope
   55 |     assert (modp(3, 5) == 3);
      |             ^~~~


CPP_55.cpp: Execution Failed
Error: CPP_55: ./CPP_55.cpp:22: int main(): Assertion `fib(10) == 55' failed.
Aborted (core dumped)


CPP_115.cpp: Compilation Failed
Error: ./CPP_115.cpp: In function ‘int32_t _Z8max_fillSt6vectorIS_IiSaIiEESaIS1_EEi(void*, int32_t)’:
./CPP_115.cpp:18:41: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   18 |     int64_t _13 = *(int64_t *)(((char *)_4) + (_11 * 24));
      |                                         ^~
./CPP_115.cpp:19:41: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   19 |     int64_t _14 = *(int64_t *)(((char *)_4) + (_11 * 24) + 8);
      |                                         ^~
In file included from ./CPP_115.cpp:46:
./CPP_115.cpp: In function ‘int main()’:
./CPP_115.cpp:48:13: error: ‘max_fill’ was not declared in this scope
   48 |     assert (max_fill({{0,0,1,0}, {0,1,0,0}, {1,1,1,1}}, 1) == 6);
      |             ^~~~~~~~


CPP_40.cpp: Compilation Failed
Error: ./CPP_40.cpp: In function ‘bool triples_sum_to_zero(const std::vector<int>&)’:
./CPP_40.cpp:4:23: error: invalid conversion from ‘const int*’ to ‘int*’ [-fpermissive]
    4 |   int* end = v.data() + v.size();
      |              ~~~~~~~~~^~~~~~~~~~
      |                       |
      |                       const int*
./CPP_40.cpp:5:22: error: invalid conversion from ‘const int*’ to ‘int*’ [-fpermissive]
    5 |   int* start = v.data();
      |                ~~~~~~^~
      |                      |
      |                      const int*


CPP_130.cpp: Compilation Failed
Error: ./CPP_130.cpp: In function ‘void trii(vector*, int)’:
./CPP_130.cpp:23:20: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
   23 |   int *tmp = malloc(sizeof(int) * (n + 1));
      |              ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
      |                    |
      |                    void*
./CPP_130.cpp: At global scope:
./CPP_130.cpp:38:13: error: ‘vector’ is not a template
   38 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_130.cpp:38:27: error: ‘vector’ is not a template
   38 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_130.cpp: In function ‘bool issame(vector, vector)’:
./CPP_130.cpp:39:16: error: expression cannot be used as a function
   39 |     if (a.size()!=b.size()) return false;
      |                ^
./CPP_130.cpp:39:26: error: expression cannot be used as a function
   39 |     if (a.size()!=b.size()) return false;
      |                          ^
./CPP_130.cpp:40:27: error: expression cannot be used as a function
   40 |     for (int i=0;i<a.size();i++)
      |                           ^
./CPP_130.cpp:42:10: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   42 |     if (a[i]!=b[i]) return false;
      |          ^
./CPP_130.cpp:42:16: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   42 |     if (a[i]!=b[i]) return false;
      |                ^
In file included from ./CPP_130.cpp:37:
./CPP_130.cpp: In function ‘int main()’:
./CPP_130.cpp:47:20: error: ‘tri’ was not declared in this scope; did you mean ‘trii’?
   47 |     assert (issame(tri(3) , {1, 3, 2, 8}));
      |                    ^~~


CPP_48.cpp: Compilation Failed
Error: ./CPP_48.cpp:41:1: error: stray ‘`’ in program
   41 | ```
      | ^
./CPP_48.cpp:41:2: error: stray ‘`’ in program
   41 | ```
      |  ^
./CPP_48.cpp:41:3: error: stray ‘`’ in program
   41 | ```
      |   ^
./CPP_48.cpp:43:1: error: expected unqualified-id before ‘<’ token
   43 | <|im_end|>
      | ^
In file included from ./CPP_48.cpp:45:
./CPP_48.cpp: In function ‘int main()’:
./CPP_48.cpp:47:13: error: ‘is_palindrome’ was not declared in this scope
   47 |     assert (is_palindrome("") == true);
      |             ^~~~~~~~~~~~~
./CPP_48.cpp:47:5: error: ‘__assert_fail’ was not declared in this scope
   47 |     assert (is_palindrome("") == true);
      |     ^~~~~~


CPP_155.cpp: Compilation Failed
Error: ./CPP_155.cpp:43:16: error: macro "va_start" requires 2 arguments, but only 1 given
   43 |   va_start(args);
      |                ^
In file included from ./CPP_155.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47: note: macro "va_start" defined here
   47 | #define va_start(v,l) __builtin_va_start(v,l)
      | 
./CPP_155.cpp:7:48: error: field ‘_M_dataplus’ has incomplete type ‘std__cxx11__basic_string__Alloc_hider’
    7 |   struct std__cxx11__basic_string__Alloc_hider _M_dataplus;
      |                                                ^~~~~~~~~~~
./CPP_155.cpp:7:10: note: forward declaration of ‘struct std__cxx11__basic_string__Alloc_hider’
    7 |   struct std__cxx11__basic_string__Alloc_hider _M_dataplus;
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_155.cpp:13:41: error: field ‘_M_impl’ has incomplete type ‘_Vector_base__Vector_impl_data’
   13 |   struct _Vector_base__Vector_impl_data _M_impl;
      |                                         ^~~~~~~
./CPP_155.cpp:13:10: note: forward declaration of ‘struct _Vector_base__Vector_impl_data’
   13 |   struct _Vector_base__Vector_impl_data _M_impl;
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_155.cpp:37:34: error: ‘__m128i’ was not declared in this scope
   37 | int llvm_vector_reduce_add_v4i32(__m128i x) {
      |                                  ^~~~~~~
./CPP_155.cpp: In function ‘void _ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(std__cxx11__basic_string*, int (*)(char*, size_t, char*, __va_list_tag*), size_t, char*, ...)’:
./CPP_155.cpp:43:3: error: ‘va_start’ was not declared in this scope
   43 |   va_start(args);
      |   ^~~~~~~~
./CPP_155.cpp:44:49: error: cannot convert ‘__va_list_tag (*)[1]’ to ‘__va_list_tag*’ in argument passing
   44 |   int len = func(output->_M_data, size, format, &args);
      |                                                 ^~~~~
      |                                                 |
      |                                                 __va_list_tag (*)[1]
./CPP_155.cpp: In function ‘void _Z14even_odd_counti(std__cxx11__basic_string*, int)’:
./CPP_155.cpp:54:3: error: ‘_ZN9__gnu_cxx12__to_xstringINSt7__’ was not declared in this scope
   54 |   _ZN9__gnu_cxx12__to_xstringINSt7__
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_155.cpp:57:13: error: ‘vector’ was not declared in this scope
   57 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_155.cpp:57:20: error: expected primary-expression before ‘int’
   57 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_155.cpp:57:34: error: expected primary-expression before ‘int’
   57 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_155.cpp:57:39: error: expression list treated as compound expression in initializer [-fpermissive]
   57 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
./CPP_155.cpp:65:11: error: a function-definition is not allowed here before ‘{’ token
   65 | int main(){
      |           ^
./CPP_155.cpp:74:1: error: expected ‘}’ at end of input
   74 | }
      | ^
./CPP_155.cpp:50:71: note: to match this ‘{’
   50 | void _Z14even_odd_counti(std__cxx11__basic_string *output, int input) {
      |                                                                       ^


CPP_96.cpp: Compilation Failed
Error: ./CPP_96.cpp:5:22: error: field ‘_M_impl’ has incomplete type ‘_Vector_base’
    5 |  struct _Vector_base _M_impl;
      |                      ^~~~~~~
./CPP_96.cpp:5:9: note: forward declaration of ‘struct _Vector_base’
    5 |  struct _Vector_base _M_impl;
      |         ^~~~~~~~~~~~
./CPP_96.cpp:9:32: error: field ‘_M_impl_data’ has incomplete type ‘_Vector_base_impl_data’
    9 |  struct _Vector_base_impl_data _M_impl_data;
      |                                ^~~~~~~~~~~~
./CPP_96.cpp:9:9: note: forward declaration of ‘struct _Vector_base_impl_data’
    9 |  struct _Vector_base_impl_data _M_impl_data;
      |         ^~~~~~~~~~~~~~~~~~~~~~
./CPP_96.cpp:18:60: error: expected ‘,’ or ‘...’ before ‘this’
   18 | extern "C" void __real__Z11count_up_toi(struct std_vector *this, int n);
      |                                                            ^~~~
./CPP_96.cpp:20:38: error: expected ‘,’ or ‘...’ before ‘this’
   20 | void count_up_toi(struct std_vector *this, int n) {
      |                                      ^~~~
./CPP_96.cpp: In function ‘void count_up_toi(std_vector*)’:
./CPP_96.cpp:21:15: error: invalid use of ‘this’ in non-member function
   21 |  int *start = this->_M_impl._M_impl_data._M_start;
      |               ^~~~
./CPP_96.cpp:22:16: error: invalid use of ‘this’ in non-member function
   22 |  int *finish = this->_M_impl._M_impl_data._M_finish;
      |                ^~~~
./CPP_96.cpp:23:24: error: invalid use of ‘this’ in non-member function
   23 |  int *end_of_storage = this->_M_impl._M_impl_data._M_end_of_storage;
      |                        ^~~~
./CPP_96.cpp:24:6: error: ‘n’ was not declared in this scope
   24 |  if (n > 2) {
      |      ^
./CPP_96.cpp:44:2: error: invalid use of ‘this’ in non-member function
   44 |  this->_M_impl._M_impl_data._M_start = start;
      |  ^~~~
./CPP_96.cpp:45:2: error: invalid use of ‘this’ in non-member function
   45 |  this->_M_impl._M_impl_data._M_finish = finish;
      |  ^~~~
./CPP_96.cpp:46:2: error: invalid use of ‘this’ in non-member function
   46 |  this->_M_impl._M_impl_data._M_end_of_storage = end_of_storage;
      |  ^~~~
./CPP_96.cpp: In function ‘int main()’:
./CPP_96.cpp:51:21: error: too many arguments to function ‘void count_up_toi(std_vector*)’
   51 |  count_up_toi(&v, 10);
      |                     ^
./CPP_96.cpp:20:6: note: declared here
   20 | void count_up_toi(struct std_vector *this, int n) {
      |      ^~~~~~~~~~~~
./CPP_96.cpp: At global scope:
./CPP_96.cpp:58:13: error: ‘vector’ was not declared in this scope
   58 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_96.cpp:58:20: error: expected primary-expression before ‘int’
   58 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_96.cpp:58:27: error: ‘vector’ was not declared in this scope
   58 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_96.cpp:58:34: error: expected primary-expression before ‘int’
   58 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_96.cpp:58:39: error: expression list treated as compound expression in initializer [-fpermissive]
   58 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
./CPP_96.cpp:66:5: error: redefinition of ‘int main()’
   66 | int main(){
      |     ^~~~
./CPP_96.cpp:49:5: note: ‘int main()’ previously defined here
   49 | int main() {
      |     ^~~~
In file included from ./CPP_96.cpp:57:
./CPP_96.cpp: In function ‘int main()’:
./CPP_96.cpp:67:20: error: ‘count_up_to’ was not declared in this scope; did you mean ‘count_up_toi’?
   67 |     assert (issame(count_up_to(5) , {2,3}));
      |                    ^~~~~~~~~~~
./CPP_96.cpp:67:42: error: ‘issame’ cannot be used as a function
   67 |     assert (issame(count_up_to(5) , {2,3}));
      |                                          ^
./CPP_96.cpp:68:44: error: ‘issame’ cannot be used as a function
   68 |     assert (issame(count_up_to(6) , {2,3,5}));
      |                                            ^
./CPP_96.cpp:69:44: error: ‘issame’ cannot be used as a function
   69 |     assert (issame(count_up_to(7) , {2,3,5}));
      |                                            ^
./CPP_96.cpp:70:47: error: ‘issame’ cannot be used as a function
   70 |     assert (issame(count_up_to(10) , {2,3,5,7}));
      |                                               ^
./CPP_96.cpp:71:39: error: ‘issame’ cannot be used as a function
   71 |     assert (issame(count_up_to(0) , {}));
      |                                       ^
./CPP_96.cpp:72:59: error: ‘issame’ cannot be used as a function
   72 |     assert (issame(count_up_to(22) , {2,3,5,7,11,13,17,19}));
      |                                                           ^
./CPP_96.cpp:73:39: error: ‘issame’ cannot be used as a function
   73 |     assert (issame(count_up_to(1) , {}));
      |                                       ^
./CPP_96.cpp:74:56: error: ‘issame’ cannot be used as a function
   74 |     assert (issame(count_up_to(18) , {2,3,5,7,11,13,17}));
      |                                                        ^
./CPP_96.cpp:75:90: error: ‘issame’ cannot be used as a function
   75 |     assert (issame(count_up_to(47) , {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43}));
      |                                                                                          ^
./CPP_96.cpp:76:135: error: ‘issame’ cannot be used as a function
   76 |     assert (issame(count_up_to(101) , {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}));
      |                                                                                                                                       ^


CPP_3.cpp: Compilation Failed
Error: In file included from ./CPP_3.cpp:19:
./CPP_3.cpp: In function ‘int main()’:
./CPP_3.cpp:21:26: error: too few arguments to function ‘int below_zero(int*, int)’
   21 |     assert (below_zero({}) == false);
      |                          ^
./CPP_3.cpp:3:5: note: declared here
    3 | int below_zero(int* vector, int size) {
      |     ^~~~~~~~~~
In file included from ./CPP_3.cpp:19:
./CPP_3.cpp:22:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   22 |     assert (below_zero({1, 2, -3, 1, 2, -3}) == false);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_3.cpp:3:21: note:   initializing argument 1 of ‘int below_zero(int*, int)’
    3 | int below_zero(int* vector, int size) {
      |                ~~~~~^~~~~~
In file included from ./CPP_3.cpp:19:
./CPP_3.cpp:23:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   23 |     assert (below_zero({1, 2, -4, 5, 6}) == true);
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_3.cpp:3:21: note:   initializing argument 1 of ‘int below_zero(int*, int)’
    3 | int below_zero(int* vector, int size) {
      |                ~~~~~^~~~~~
In file included from ./CPP_3.cpp:19:
./CPP_3.cpp:24:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   24 |     assert (below_zero({1, -1, 2, -2, 5, -5, 4, -4}) == false);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_3.cpp:3:21: note:   initializing argument 1 of ‘int below_zero(int*, int)’
    3 | int below_zero(int* vector, int size) {
      |                ~~~~~^~~~~~
In file included from ./CPP_3.cpp:19:
./CPP_3.cpp:25:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   25 |     assert (below_zero({1, -1, 2, -2, 5, -5, 4, -5}) == true);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_3.cpp:3:21: note:   initializing argument 1 of ‘int below_zero(int*, int)’
    3 | int below_zero(int* vector, int size) {
      |                ~~~~~^~~~~~
In file included from ./CPP_3.cpp:19:
./CPP_3.cpp:26:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   26 |     assert (below_zero({1, -2, 2, -2, 5, -5, 4, -4}) == true);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_3.cpp:3:21: note:   initializing argument 1 of ‘int below_zero(int*, int)’
    3 | int below_zero(int* vector, int size) {
      |                ~~~~~^~~~~~


CPP_97.cpp: Compilation Failed
Error: ./CPP_97.cpp: In function ‘int _Z8multiplyii(int, int)’:
./CPP_97.cpp:2:12: error: ‘abs’ was not declared in this scope
    2 |   int a1 = abs(a);
      |            ^~~
In file included from ./CPP_97.cpp:12:
./CPP_97.cpp: In function ‘int main()’:
./CPP_97.cpp:14:13: error: ‘multiply’ was not declared in this scope
   14 |     assert (multiply(148, 412) == 16                   );
      |             ^~~~~~~~


CPP_4.cpp: Compilation Failed
Error: In file included from ./CPP_4.cpp:18:
./CPP_4.cpp: In function ‘int main()’:
./CPP_4.cpp:20:56: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   20 |     assert (abs(mean_absolute_deviation({1.0, 2.0, 3.0}) - 2.0/3.0) < 1e-4);
      |                                                        ^
      |                                                        |
      |                                                        <brace-enclosed initializer list>
./CPP_4.cpp:3:38: note:   initializing argument 1 of ‘float mean_absolute_deviation(float*, size_t)’
    3 | float mean_absolute_deviation(float *arr, size_t n) {
      |                               ~~~~~~~^~~
In file included from ./CPP_4.cpp:18:
./CPP_4.cpp:21:61: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   21 |     assert (abs(mean_absolute_deviation({1.0, 2.0, 3.0, 4.0}) - 1.0) < 1e-4);
      |                                                             ^
      |                                                             |
      |                                                             <brace-enclosed initializer list>
./CPP_4.cpp:3:38: note:   initializing argument 1 of ‘float mean_absolute_deviation(float*, size_t)’
    3 | float mean_absolute_deviation(float *arr, size_t n) {
      |                               ~~~~~~~^~~
In file included from ./CPP_4.cpp:18:
./CPP_4.cpp:22:66: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   22 |     assert (abs(mean_absolute_deviation({1.0, 2.0, 3.0, 4.0, 5.0}) - 6.0/5.0) < 1e-4);
      |                                                                  ^
      |                                                                  |
      |                                                                  <brace-enclosed initializer list>
./CPP_4.cpp:3:38: note:   initializing argument 1 of ‘float mean_absolute_deviation(float*, size_t)’
    3 | float mean_absolute_deviation(float *arr, size_t n) {
      |                               ~~~~~~~^~~


CPP_76.cpp: Execution Failed
Error: CPP_76: ./CPP_76.cpp:20: int main(): Assertion `is_simple_power(1, 4)== true' failed.
Aborted (core dumped)


CPP_80.cpp: Compilation Failed
Error: ./CPP_80.cpp:3:32: error: ‘size_t’ has not been declared
    3 | bool is_happy(const char* str, size_t len) {
      |                                ^~~~~~
./CPP_80.cpp: In function ‘bool is_happy(const char*, int)’:
./CPP_80.cpp:14:8: error: ‘size_t’ was not declared in this scope
   14 |   for (size_t i = 2; i < len; ++i) {
      |        ^~~~~~
./CPP_80.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_80.cpp:14:22: error: ‘i’ was not declared in this scope
   14 |   for (size_t i = 2; i < len; ++i) {
      |                      ^
In file included from ./CPP_80.cpp:26:
./CPP_80.cpp: In function ‘int main()’:
./CPP_80.cpp:28:25: error: too few arguments to function ‘bool is_happy(const char*, int)’
   28 |     assert (is_happy("a") == false );
      |                         ^
./CPP_80.cpp:3:6: note: declared here
    3 | bool is_happy(const char* str, size_t len) {
      |      ^~~~~~~~
In file included from ./CPP_80.cpp:26:
./CPP_80.cpp:29:26: error: too few arguments to function ‘bool is_happy(const char*, int)’
   29 |     assert (is_happy("aa") == false );
      |                          ^
./CPP_80.cpp:3:6: note: declared here
    3 | bool is_happy(const char* str, size_t len) {
      |      ^~~~~~~~
In file included from ./CPP_80.cpp:26:
./CPP_80.cpp:30:28: error: too few arguments to function ‘bool is_happy(const char*, int)’
   30 |     assert (is_happy("abcd") == true );
      |                            ^
./CPP_80.cpp:3:6: note: declared here
    3 | bool is_happy(const char* str, size_t len) {
      |      ^~~~~~~~
In file included from ./CPP_80.cpp:26:
./CPP_80.cpp:31:28: error: too few arguments to function ‘bool is_happy(const char*, int)’
   31 |     assert (is_happy("aabb") == false );
      |                            ^
./CPP_80.cpp:3:6: note: declared here
    3 | bool is_happy(const char* str, size_t len) {
      |      ^~~~~~~~
In file included from ./CPP_80.cpp:26:
./CPP_80.cpp:32:27: error: too few arguments to function ‘bool is_happy(const char*, int)’
   32 |     assert (is_happy("adb") == true );
      |                           ^
./CPP_80.cpp:3:6: note: declared here
    3 | bool is_happy(const char* str, size_t len) {
      |      ^~~~~~~~
In file included from ./CPP_80.cpp:26:
./CPP_80.cpp:33:27: error: too few arguments to function ‘bool is_happy(const char*, int)’
   33 |     assert (is_happy("xyy") == false );
      |                           ^
./CPP_80.cpp:3:6: note: declared here
    3 | bool is_happy(const char* str, size_t len) {
      |      ^~~~~~~~
In file included from ./CPP_80.cpp:26:
./CPP_80.cpp:34:32: error: too few arguments to function ‘bool is_happy(const char*, int)’
   34 |     assert (is_happy("iopaxpoi") == true );
      |                                ^
./CPP_80.cpp:3:6: note: declared here
    3 | bool is_happy(const char* str, size_t len) {
      |      ^~~~~~~~
In file included from ./CPP_80.cpp:26:
./CPP_80.cpp:35:32: error: too few arguments to function ‘bool is_happy(const char*, int)’
   35 |     assert (is_happy("iopaxioi") == false );
      |                                ^
./CPP_80.cpp:3:6: note: declared here
    3 | bool is_happy(const char* str, size_t len) {
      |      ^~~~~~~~


CPP_136.cpp: Compilation Failed
Error: ./CPP_136.cpp:24:13: error: ‘vector’ was not declared in this scope
   24 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_136.cpp:24:20: error: expected primary-expression before ‘int’
   24 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_136.cpp:24:27: error: ‘vector’ was not declared in this scope
   24 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_136.cpp:24:34: error: expected primary-expression before ‘int’
   24 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_136.cpp:24:39: error: expression list treated as compound expression in initializer [-fpermissive]
   24 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_136.cpp:23:
./CPP_136.cpp: In function ‘int main()’:
./CPP_136.cpp:33:64: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   33 |     assert (issame(largest_smallest_integers({2, 4, 1, 3, 5, 7}) , {0, 1}));
      |                                                                ^
      |                                                                |
      |                                                                <brace-enclosed initializer list>
./CPP_136.cpp:3:37: note:   initializing argument 1 of ‘void largest_smallest_integers(int*, int*, size_t)’
    3 | void largest_smallest_integers(int* result, int* input, size_t input_size) {
      |                                ~~~~~^~~~~~
In file included from ./CPP_136.cpp:23:
./CPP_136.cpp:33:74: error: ‘issame’ cannot be used as a function
   33 |     assert (issame(largest_smallest_integers({2, 4, 1, 3, 5, 7}) , {0, 1}));
      |                                                                          ^
./CPP_136.cpp:34:67: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   34 |     assert (issame(largest_smallest_integers({2, 4, 1, 3, 5, 7, 0}) , {0, 1}));
      |                                                                   ^
      |                                                                   |
      |                                                                   <brace-enclosed initializer list>
./CPP_136.cpp:3:37: note:   initializing argument 1 of ‘void largest_smallest_integers(int*, int*, size_t)’
    3 | void largest_smallest_integers(int* result, int* input, size_t input_size) {
      |                                ~~~~~^~~~~~
In file included from ./CPP_136.cpp:23:
./CPP_136.cpp:34:77: error: ‘issame’ cannot be used as a function
   34 |     assert (issame(largest_smallest_integers({2, 4, 1, 3, 5, 7, 0}) , {0, 1}));
      |                                                                             ^
./CPP_136.cpp:35:68: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   35 |     assert (issame(largest_smallest_integers({1, 3, 2, 4, 5, 6, -2}) , {-2, 1}));
      |                                                                    ^
      |                                                                    |
      |                                                                    <brace-enclosed initializer list>
./CPP_136.cpp:3:37: note:   initializing argument 1 of ‘void largest_smallest_integers(int*, int*, size_t)’
    3 | void largest_smallest_integers(int* result, int* input, size_t input_size) {
      |                                ~~~~~^~~~~~
In file included from ./CPP_136.cpp:23:
./CPP_136.cpp:35:79: error: ‘issame’ cannot be used as a function
   35 |     assert (issame(largest_smallest_integers({1, 3, 2, 4, 5, 6, -2}) , {-2, 1}));
      |                                                                               ^
./CPP_136.cpp:36:68: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   36 |     assert (issame(largest_smallest_integers({4, 5, 3, 6, 2, 7, -7}) , {-7, 2}));
      |                                                                    ^
      |                                                                    |
      |                                                                    <brace-enclosed initializer list>
./CPP_136.cpp:3:37: note:   initializing argument 1 of ‘void largest_smallest_integers(int*, int*, size_t)’
    3 | void largest_smallest_integers(int* result, int* input, size_t input_size) {
      |                                ~~~~~^~~~~~
In file included from ./CPP_136.cpp:23:
./CPP_136.cpp:36:79: error: ‘issame’ cannot be used as a function
   36 |     assert (issame(largest_smallest_integers({4, 5, 3, 6, 2, 7, -7}) , {-7, 2}));
      |                                                                               ^
./CPP_136.cpp:37:71: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   37 |     assert (issame(largest_smallest_integers({7, 3, 8, 4, 9, 2, 5, -9}) , {-9, 2}));
      |                                                                       ^
      |                                                                       |
      |                                                                       <brace-enclosed initializer list>
./CPP_136.cpp:3:37: note:   initializing argument 1 of ‘void largest_smallest_integers(int*, int*, size_t)’
    3 | void largest_smallest_integers(int* result, int* input, size_t input_size) {
      |                                ~~~~~^~~~~~
In file included from ./CPP_136.cpp:23:
./CPP_136.cpp:37:82: error: ‘issame’ cannot be used as a function
   37 |     assert (issame(largest_smallest_integers({7, 3, 8, 4, 9, 2, 5, -9}) , {-9, 2}));
      |                                                                                  ^
./CPP_136.cpp:38:48: error: too few arguments to function ‘void largest_smallest_integers(int*, int*, size_t)’
   38 |     assert (issame(largest_smallest_integers({}) , {0, 0}));
      |                                                ^
./CPP_136.cpp:3:6: note: declared here
    3 | void largest_smallest_integers(int* result, int* input, size_t input_size) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./CPP_136.cpp:23:
./CPP_136.cpp:38:58: error: ‘issame’ cannot be used as a function
   38 |     assert (issame(largest_smallest_integers({}) , {0, 0}));
      |                                                          ^
./CPP_136.cpp:39:49: error: too few arguments to function ‘void largest_smallest_integers(int*, int*, size_t)’
   39 |     assert (issame(largest_smallest_integers({0}) , {0, 0}));
      |                                                 ^
./CPP_136.cpp:3:6: note: declared here
    3 | void largest_smallest_integers(int* result, int* input, size_t input_size) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./CPP_136.cpp:23:
./CPP_136.cpp:39:59: error: ‘issame’ cannot be used as a function
   39 |     assert (issame(largest_smallest_integers({0}) , {0, 0}));
      |                                                           ^
./CPP_136.cpp:40:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   40 |     assert (issame(largest_smallest_integers({-1, -3, -5, -6}) , {-1, 0}));
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_136.cpp:3:37: note:   initializing argument 1 of ‘void largest_smallest_integers(int*, int*, size_t)’
    3 | void largest_smallest_integers(int* result, int* input, size_t input_size) {
      |                                ~~~~~^~~~~~
In file included from ./CPP_136.cpp:23:
./CPP_136.cpp:40:73: error: ‘issame’ cannot be used as a function
   40 |     assert (issame(largest_smallest_integers({-1, -3, -5, -6}) , {-1, 0}));
      |                                                                         ^
./CPP_136.cpp:41:65: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   41 |     assert (issame(largest_smallest_integers({-1, -3, -5, -6, 0}) , {-1, 0}));
      |                                                                 ^
      |                                                                 |
      |                                                                 <brace-enclosed initializer list>
./CPP_136.cpp:3:37: note:   initializing argument 1 of ‘void largest_smallest_integers(int*, int*, size_t)’
    3 | void largest_smallest_integers(int* result, int* input, size_t input_size) {
      |                                ~~~~~^~~~~~
In file included from ./CPP_136.cpp:23:
./CPP_136.cpp:41:76: error: ‘issame’ cannot be used as a function
   41 |     assert (issame(largest_smallest_integers({-1, -3, -5, -6, 0}) , {-1, 0}));
      |                                                                            ^
./CPP_136.cpp:42:65: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   42 |     assert (issame(largest_smallest_integers({-6, -4, -4, -3, 1}) , {-3, 1}));
      |                                                                 ^
      |                                                                 |
      |                                                                 <brace-enclosed initializer list>
./CPP_136.cpp:3:37: note:   initializing argument 1 of ‘void largest_smallest_integers(int*, int*, size_t)’
    3 | void largest_smallest_integers(int* result, int* input, size_t input_size) {
      |                                ~~~~~^~~~~~
In file included from ./CPP_136.cpp:23:
./CPP_136.cpp:42:76: error: ‘issame’ cannot be used as a function
   42 |     assert (issame(largest_smallest_integers({-6, -4, -4, -3, 1}) , {-3, 1}));
      |                                                                            ^
./CPP_136.cpp:43:71: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   43 |     assert (issame(largest_smallest_integers({-6, -4, -4, -3, -100, 1}) , {-3, 1}));
      |                                                                       ^
      |                                                                       |
      |                                                                       <brace-enclosed initializer list>
./CPP_136.cpp:3:37: note:   initializing argument 1 of ‘void largest_smallest_integers(int*, int*, size_t)’
    3 | void largest_smallest_integers(int* result, int* input, size_t input_size) {
      |                                ~~~~~^~~~~~
In file included from ./CPP_136.cpp:23:
./CPP_136.cpp:43:82: error: ‘issame’ cannot be used as a function
   43 |     assert (issame(largest_smallest_integers({-6, -4, -4, -3, -100, 1}) , {-3, 1}));
      |                                                                                  ^


CPP_27.cpp: Compilation Failed
Error: ./CPP_27.cpp:31:1: error: stray ‘`’ in program
   31 | ```
      | ^
./CPP_27.cpp:31:2: error: stray ‘`’ in program
   31 | ```
      |  ^
./CPP_27.cpp:31:3: error: stray ‘`’ in program
   31 | ```
      |   ^
./CPP_27.cpp:32:1: error: expected unqualified-id before ‘<’ token
   32 | <|im_end|>
      | ^
In file included from ./CPP_27.cpp:34:
./CPP_27.cpp: In function ‘int main()’:
./CPP_27.cpp:36:23: error: cannot convert ‘const char*’ to ‘basic_string*’
   36 |     assert (filp_case("") == "");
      |                       ^~
      |                       |
      |                       const char*
./CPP_27.cpp:17:30: note:   initializing argument 1 of ‘void filp_case(basic_string*, const basic_string*)’
   17 | void filp_case(basic_string *result, const basic_string *s) {
      |                ~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_27.cpp:34:
./CPP_27.cpp:36:5: error: ‘__assert_fail’ was not declared in this scope
   36 |     assert (filp_case("") == "");
      |     ^~~~~~
./CPP_27.cpp:37:23: error: cannot convert ‘const char*’ to ‘basic_string*’
   37 |     assert (filp_case("Hello!") == "hELLO!");
      |                       ^~~~~~~~
      |                       |
      |                       const char*
./CPP_27.cpp:17:30: note:   initializing argument 1 of ‘void filp_case(basic_string*, const basic_string*)’
   17 | void filp_case(basic_string *result, const basic_string *s) {
      |                ~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_27.cpp:34:
./CPP_27.cpp:38:23: error: cannot convert ‘const char*’ to ‘basic_string*’
   38 |     assert (filp_case("These violent delights have violent ends") == "tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS");
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                       |
      |                       const char*
./CPP_27.cpp:17:30: note:   initializing argument 1 of ‘void filp_case(basic_string*, const basic_string*)’
   17 | void filp_case(basic_string *result, const basic_string *s) {
      |                ~~~~~~~~~~~~~~^~~~~~


CPP_16.cpp: Compilation Failed
Error: /usr/bin/ld: /tmp/ccxsn6kE.o: in function `count_distinct_characters(char const*)':
CPP_16.cpp:(.text+0x71): undefined reference to `tolower(int)'
collect2: error: ld returned 1 exit status


CPP_72.cpp: Execution Failed
Error: CPP_72: ./CPP_72.cpp:30: int main(): Assertion `will_it_fly({3, 2, 3}, 1) == false' failed.
Aborted (core dumped)


CPP_24.cpp: Compilation Failed
Error: In file included from ./CPP_24.cpp:20:
./CPP_24.cpp: In function ‘int main()’:
./CPP_24.cpp:22:13: error: ‘largest_divisor’ was not declared in this scope; did you mean ‘largest_divisori’?
   22 |     assert (largest_divisor(3) == 1);
      |             ^~~~~~~~~~~~~~~


CPP_92.cpp: Compilation Failed
Error: ./CPP_92.cpp: In function ‘float _Z7any_intfff(float, float, float)’:
./CPP_92.cpp:2:13: error: ‘llvm’ was not declared in this scope
    2 |   float d = llvm.round.f32(a);
      |             ^~~~
In file included from ./CPP_92.cpp:30:
./CPP_92.cpp: In function ‘int main()’:
./CPP_92.cpp:32:13: error: ‘any_int’ was not declared in this scope
   32 |     assert (any_int(2, 3, 1)==true);
      |             ^~~~~~~


CPP_53.cpp: Compilation Failed
Error: In file included from ./CPP_53.cpp:6:
./CPP_53.cpp: In function ‘int main()’:
./CPP_53.cpp:8:13: error: ‘add’ was not declared in this scope
    8 |     assert (add(0, 1) == 1);
      |             ^~~
./CPP_53.cpp:15:15: error: ‘rand’ was not declared in this scope
   15 |         int x=rand()%1000;
      |               ^~~~


CPP_126.cpp: Compilation Failed
Error: ./CPP_126.cpp:3:25: error: ‘size_t’ has not been declared
    3 | int is_sorted(int* arr, size_t size) {
      |                         ^~~~~~
./CPP_126.cpp: In function ‘int is_sorted(int*, int)’:
./CPP_126.cpp:9:8: error: ‘size_t’ was not declared in this scope
    9 |   for (size_t i = 1; i < size; ++i) {
      |        ^~~~~~
./CPP_126.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_126.cpp:9:22: error: ‘i’ was not declared in this scope
    9 |   for (size_t i = 1; i < size; ++i) {
      |                      ^
In file included from ./CPP_126.cpp:28:
./CPP_126.cpp: In function ‘int main()’:
./CPP_126.cpp:30:26: error: invalid conversion from ‘int’ to ‘int*’ [-fpermissive]
   30 |     assert (is_sorted({5}) == true);
      |                          ^
      |                          |
      |                          int
./CPP_126.cpp:30:26: error: too few arguments to function ‘int is_sorted(int*, int)’
./CPP_126.cpp:3:5: note: declared here
    3 | int is_sorted(int* arr, size_t size) {
      |     ^~~~~~~~~
In file included from ./CPP_126.cpp:28:
./CPP_126.cpp:31:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   31 |     assert (is_sorted({1, 2, 3, 4, 5}) == true);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_126.cpp:3:20: note:   initializing argument 1 of ‘int is_sorted(int*, int)’
    3 | int is_sorted(int* arr, size_t size) {
      |               ~~~~~^~~
In file included from ./CPP_126.cpp:28:
./CPP_126.cpp:32:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   32 |     assert (is_sorted({1, 3, 2, 4, 5}) == false);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_126.cpp:3:20: note:   initializing argument 1 of ‘int is_sorted(int*, int)’
    3 | int is_sorted(int* arr, size_t size) {
      |               ~~~~~^~~
In file included from ./CPP_126.cpp:28:
./CPP_126.cpp:33:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   33 |     assert (is_sorted({1, 2, 3, 4, 5, 6}) == true);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_126.cpp:3:20: note:   initializing argument 1 of ‘int is_sorted(int*, int)’
    3 | int is_sorted(int* arr, size_t size) {
      |               ~~~~~^~~
In file included from ./CPP_126.cpp:28:
./CPP_126.cpp:34:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   34 |     assert (is_sorted({1, 2, 3, 4, 5, 6, 7}) == true);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_126.cpp:3:20: note:   initializing argument 1 of ‘int is_sorted(int*, int)’
    3 | int is_sorted(int* arr, size_t size) {
      |               ~~~~~^~~
In file included from ./CPP_126.cpp:28:
./CPP_126.cpp:35:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   35 |     assert (is_sorted({1, 3, 2, 4, 5, 6, 7}) == false);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_126.cpp:3:20: note:   initializing argument 1 of ‘int is_sorted(int*, int)’
    3 | int is_sorted(int* arr, size_t size) {
      |               ~~~~~^~~
In file included from ./CPP_126.cpp:28:
./CPP_126.cpp:36:25: error: too few arguments to function ‘int is_sorted(int*, int)’
   36 |     assert (is_sorted({}) == true);
      |                         ^
./CPP_126.cpp:3:5: note: declared here
    3 | int is_sorted(int* arr, size_t size) {
      |     ^~~~~~~~~
In file included from ./CPP_126.cpp:28:
./CPP_126.cpp:37:26: error: invalid conversion from ‘int’ to ‘int*’ [-fpermissive]
   37 |     assert (is_sorted({1}) == true);
      |                          ^
      |                          |
      |                          int
./CPP_126.cpp:37:26: error: too few arguments to function ‘int is_sorted(int*, int)’
./CPP_126.cpp:3:5: note: declared here
    3 | int is_sorted(int* arr, size_t size) {
      |     ^~~~~~~~~
In file included from ./CPP_126.cpp:28:
./CPP_126.cpp:38:32: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   38 |     assert (is_sorted({3, 2, 1}) == false);
      |                                ^
      |                                |
      |                                <brace-enclosed initializer list>
./CPP_126.cpp:3:20: note:   initializing argument 1 of ‘int is_sorted(int*, int)’
    3 | int is_sorted(int* arr, size_t size) {
      |               ~~~~~^~~
In file included from ./CPP_126.cpp:28:
./CPP_126.cpp:39:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   39 |     assert (is_sorted({1, 2, 2, 2, 3, 4}) == false);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_126.cpp:3:20: note:   initializing argument 1 of ‘int is_sorted(int*, int)’
    3 | int is_sorted(int* arr, size_t size) {
      |               ~~~~~^~~
In file included from ./CPP_126.cpp:28:
./CPP_126.cpp:40:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   40 |     assert (is_sorted({1, 2, 3, 3, 3, 4}) == false);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_126.cpp:3:20: note:   initializing argument 1 of ‘int is_sorted(int*, int)’
    3 | int is_sorted(int* arr, size_t size) {
      |               ~~~~~^~~
In file included from ./CPP_126.cpp:28:
./CPP_126.cpp:41:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   41 |     assert (is_sorted({1, 2, 2, 3, 3, 4}) == true);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_126.cpp:3:20: note:   initializing argument 1 of ‘int is_sorted(int*, int)’
    3 | int is_sorted(int* arr, size_t size) {
      |               ~~~~~^~~
In file included from ./CPP_126.cpp:28:
./CPP_126.cpp:42:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   42 |     assert (is_sorted({1, 2, 3, 4}) == true);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_126.cpp:3:20: note:   initializing argument 1 of ‘int is_sorted(int*, int)’
    3 | int is_sorted(int* arr, size_t size) {
      |               ~~~~~^~~


CPP_52.cpp: Compilation Failed
Error: ./CPP_52.cpp:3:64: error: ‘size_t’ has not been declared
    3 | int32_t below_threshold(const int32_t *vec, int32_t threshold, size_t size) {
      |                                                                ^~~~~~
./CPP_52.cpp: In function ‘int32_t below_threshold(const int32_t*, int32_t, int)’:
./CPP_52.cpp:8:3: error: ‘size_t’ was not declared in this scope
    8 |   size_t i = 1;
      |   ^~~~~~
./CPP_52.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_52.cpp:9:9: error: expected ‘;’ before ‘max_index’
    9 |   size_t max_index = size > 1 ? size : 1;
      |         ^~~~~~~~~~
      |         ;
./CPP_52.cpp:12:12: error: ‘i’ was not declared in this scope
   12 |     for (; i < max_index; ++i) {
      |            ^
./CPP_52.cpp:12:16: error: ‘max_index’ was not declared in this scope
   12 |     for (; i < max_index; ++i) {
      |                ^~~~~~~~~
./CPP_52.cpp:19:10: error: ‘i’ was not declared in this scope
   19 |   return i >= max_index;
      |          ^
./CPP_52.cpp:19:15: error: ‘max_index’ was not declared in this scope
   19 |   return i >= max_index;
      |               ^~~~~~~~~
In file included from ./CPP_52.cpp:23:
./CPP_52.cpp: In function ‘int main()’:
./CPP_52.cpp:25:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int32_t*’ {aka ‘const int*’}
   25 |     assert (below_threshold({1, 2, 4, 10}, 100));
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_52.cpp:3:40: note:   initializing argument 1 of ‘int32_t below_threshold(const int32_t*, int32_t, int)’
    3 | int32_t below_threshold(const int32_t *vec, int32_t threshold, size_t size) {
      |                         ~~~~~~~~~~~~~~~^~~
In file included from ./CPP_52.cpp:23:
./CPP_52.cpp:26:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int32_t*’ {aka ‘const int*’}
   26 |     assert (not(below_threshold({1, 20, 4, 10}, 5)));
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_52.cpp:3:40: note:   initializing argument 1 of ‘int32_t below_threshold(const int32_t*, int32_t, int)’
    3 | int32_t below_threshold(const int32_t *vec, int32_t threshold, size_t size) {
      |                         ~~~~~~~~~~~~~~~^~~
In file included from ./CPP_52.cpp:23:
./CPP_52.cpp:27:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int32_t*’ {aka ‘const int*’}
   27 |     assert (below_threshold({1, 20, 4, 10}, 21));
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_52.cpp:3:40: note:   initializing argument 1 of ‘int32_t below_threshold(const int32_t*, int32_t, int)’
    3 | int32_t below_threshold(const int32_t *vec, int32_t threshold, size_t size) {
      |                         ~~~~~~~~~~~~~~~^~~
In file included from ./CPP_52.cpp:23:
./CPP_52.cpp:28:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int32_t*’ {aka ‘const int*’}
   28 |     assert (below_threshold({1, 20, 4, 10}, 22));
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_52.cpp:3:40: note:   initializing argument 1 of ‘int32_t below_threshold(const int32_t*, int32_t, int)’
    3 | int32_t below_threshold(const int32_t *vec, int32_t threshold, size_t size) {
      |                         ~~~~~~~~~~~~~~~^~~
In file included from ./CPP_52.cpp:23:
./CPP_52.cpp:29:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int32_t*’ {aka ‘const int*’}
   29 |     assert (below_threshold({1, 8, 4, 10}, 11));
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_52.cpp:3:40: note:   initializing argument 1 of ‘int32_t below_threshold(const int32_t*, int32_t, int)’
    3 | int32_t below_threshold(const int32_t *vec, int32_t threshold, size_t size) {
      |                         ~~~~~~~~~~~~~~~^~~
In file included from ./CPP_52.cpp:23:
./CPP_52.cpp:30:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int32_t*’ {aka ‘const int*’}
   30 |     assert (not(below_threshold({1, 8, 4, 10}, 10)));
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_52.cpp:3:40: note:   initializing argument 1 of ‘int32_t below_threshold(const int32_t*, int32_t, int)’
    3 | int32_t below_threshold(const int32_t *vec, int32_t threshold, size_t size) {
      |                         ~~~~~~~~~~~~~~~^~~


CPP_2.cpp: Compilation Failed
Error: In file included from ./CPP_2.cpp:7:
./CPP_2.cpp: In function ‘int main()’:
./CPP_2.cpp:10:10: error: ‘abs’ was not declared in this scope
   10 |  assert (abs(truncate_number(1.33) - 0.33) < 1e-4);
      |          ^~~


CPP_139.cpp: Compilation Failed
Error: In file included from ./CPP_139.cpp:56:
./CPP_139.cpp: In function ‘int main()’:
./CPP_139.cpp:58:13: error: ‘special_factorial’ was not declared in this scope; did you mean ‘special_factorial_i’?
   58 |     assert (special_factorial(4) == 288);
      |             ^~~~~~~~~~~~~~~~~


CPP_57.cpp: Compilation Failed
Error: In file included from ./CPP_57.cpp:19:
./CPP_57.cpp: In function ‘int main()’:
./CPP_57.cpp:21:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   21 |     assert (monotonic({1, 2, 4, 10}) == true);
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_57.cpp:3:22: note:   initializing argument 1 of ‘int monotonic(float*, size_t)’
    3 | int monotonic(float* data, size_t size) {
      |               ~~~~~~~^~~~
In file included from ./CPP_57.cpp:19:
./CPP_57.cpp:22:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   22 |     assert (monotonic({1, 2, 4, 20}) == true);
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_57.cpp:3:22: note:   initializing argument 1 of ‘int monotonic(float*, size_t)’
    3 | int monotonic(float* data, size_t size) {
      |               ~~~~~~~^~~~
In file included from ./CPP_57.cpp:19:
./CPP_57.cpp:23:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   23 |     assert (monotonic({1, 20, 4, 10}) == false);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_57.cpp:3:22: note:   initializing argument 1 of ‘int monotonic(float*, size_t)’
    3 | int monotonic(float* data, size_t size) {
      |               ~~~~~~~^~~~
In file included from ./CPP_57.cpp:19:
./CPP_57.cpp:24:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   24 |     assert (monotonic({4, 1, 0, -10}) == true);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_57.cpp:3:22: note:   initializing argument 1 of ‘int monotonic(float*, size_t)’
    3 | int monotonic(float* data, size_t size) {
      |               ~~~~~~~^~~~
In file included from ./CPP_57.cpp:19:
./CPP_57.cpp:25:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   25 |     assert (monotonic({4, 1, 1, 0}) == true);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_57.cpp:3:22: note:   initializing argument 1 of ‘int monotonic(float*, size_t)’
    3 | int monotonic(float* data, size_t size) {
      |               ~~~~~~~^~~~
In file included from ./CPP_57.cpp:19:
./CPP_57.cpp:26:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   26 |     assert (monotonic({1, 2, 3, 2, 5, 60}) == false);
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_57.cpp:3:22: note:   initializing argument 1 of ‘int monotonic(float*, size_t)’
    3 | int monotonic(float* data, size_t size) {
      |               ~~~~~~~^~~~
In file included from ./CPP_57.cpp:19:
./CPP_57.cpp:27:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   27 |     assert (monotonic({1, 2, 3, 4, 5, 60}) == true);
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_57.cpp:3:22: note:   initializing argument 1 of ‘int monotonic(float*, size_t)’
    3 | int monotonic(float* data, size_t size) {
      |               ~~~~~~~^~~~
In file included from ./CPP_57.cpp:19:
./CPP_57.cpp:28:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   28 |     assert (monotonic({9, 9, 9, 9}) == true);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_57.cpp:3:22: note:   initializing argument 1 of ‘int monotonic(float*, size_t)’
    3 | int monotonic(float* data, size_t size) {
      |               ~~~~~~~^~~~


CPP_159.cpp: Compilation Failed
Error: ./CPP_159.cpp:36:13: error: ‘vector’ is not a template
   36 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_159.cpp:36:27: error: ‘vector’ is not a template
   36 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_159.cpp: In function ‘bool issame(vector, vector)’:
./CPP_159.cpp:37:11: error: ‘struct vector’ has no member named ‘size’
   37 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_159.cpp:37:21: error: ‘struct vector’ has no member named ‘size’
   37 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_159.cpp:38:22: error: ‘struct vector’ has no member named ‘size’
   38 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_159.cpp:40:10: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   40 |     if (a[i]!=b[i]) return false;
      |          ^
./CPP_159.cpp:40:16: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   40 |     if (a[i]!=b[i]) return false;
      |                ^
In file included from ./CPP_159.cpp:35:
./CPP_159.cpp: In function ‘int main()’:
./CPP_159.cpp:45:20: error: ‘eat’ was not declared in this scope; did you mean ‘eati’?
   45 |     assert (issame(eat(5, 6, 10) , {11, 4}));
      |                    ^~~


CPP_108.cpp: Execution Failed
Error: CPP_108: ./CPP_108.cpp:26: int main(): Assertion `count_nums({1, 1, 2, -2, 3, 4, 5}) == 6' failed.
Aborted (core dumped)


CPP_61.cpp: Compilation Failed
Error: ./CPP_61.cpp:3:41: error: ‘size_t’ has not been declared
    3 | int correct_bracketing(const char* str, size_t len) {
      |                                         ^~~~~~
./CPP_61.cpp: In function ‘int correct_bracketing(const char*, int)’:
./CPP_61.cpp:8:8: error: ‘size_t’ was not declared in this scope
    8 |   for (size_t i = 0; i < len; ++i) {
      |        ^~~~~~
./CPP_61.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_61.cpp:8:22: error: ‘i’ was not declared in this scope
    8 |   for (size_t i = 0; i < len; ++i) {
      |                      ^
In file included from ./CPP_61.cpp:22:
./CPP_61.cpp: In function ‘int main()’:
./CPP_61.cpp:24:36: error: too few arguments to function ‘int correct_bracketing(const char*, int)’
   24 |     assert (correct_bracketing("()"));
      |                                    ^
./CPP_61.cpp:3:5: note: declared here
    3 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:22:
./CPP_61.cpp:25:40: error: too few arguments to function ‘int correct_bracketing(const char*, int)’
   25 |     assert (correct_bracketing("(()())"));
      |                                        ^
./CPP_61.cpp:3:5: note: declared here
    3 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:22:
./CPP_61.cpp:26:46: error: too few arguments to function ‘int correct_bracketing(const char*, int)’
   26 |     assert (correct_bracketing("()()(()())()"));
      |                                              ^
./CPP_61.cpp:3:5: note: declared here
    3 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:22:
./CPP_61.cpp:27:60: error: too few arguments to function ‘int correct_bracketing(const char*, int)’
   27 |     assert (correct_bracketing("()()((()()())())(()()(()))"));
      |                                                            ^
./CPP_61.cpp:3:5: note: declared here
    3 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:22:
./CPP_61.cpp:28:48: error: too few arguments to function ‘int correct_bracketing(const char*, int)’
   28 |     assert (not (correct_bracketing("((()())))")));
      |                                                ^
./CPP_61.cpp:3:5: note: declared here
    3 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:22:
./CPP_61.cpp:29:43: error: too few arguments to function ‘int correct_bracketing(const char*, int)’
   29 |     assert (not (correct_bracketing(")(()")));
      |                                           ^
./CPP_61.cpp:3:5: note: declared here
    3 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:22:
./CPP_61.cpp:30:40: error: too few arguments to function ‘int correct_bracketing(const char*, int)’
   30 |     assert (not (correct_bracketing("(")));
      |                                        ^
./CPP_61.cpp:3:5: note: declared here
    3 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:22:
./CPP_61.cpp:31:43: error: too few arguments to function ‘int correct_bracketing(const char*, int)’
   31 |     assert (not (correct_bracketing("((((")));
      |                                           ^
./CPP_61.cpp:3:5: note: declared here
    3 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:22:
./CPP_61.cpp:32:40: error: too few arguments to function ‘int correct_bracketing(const char*, int)’
   32 |     assert (not (correct_bracketing(")")));
      |                                        ^
./CPP_61.cpp:3:5: note: declared here
    3 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:22:
./CPP_61.cpp:33:42: error: too few arguments to function ‘int correct_bracketing(const char*, int)’
   33 |     assert (not (correct_bracketing("(()")));
      |                                          ^
./CPP_61.cpp:3:5: note: declared here
    3 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:22:
./CPP_61.cpp:34:55: error: too few arguments to function ‘int correct_bracketing(const char*, int)’
   34 |     assert (not (correct_bracketing("()()(()())())(()")));
      |                                                       ^
./CPP_61.cpp:3:5: note: declared here
    3 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_61.cpp:22:
./CPP_61.cpp:35:55: error: too few arguments to function ‘int correct_bracketing(const char*, int)’
   35 |     assert (not (correct_bracketing("()()(()())()))()")));
      |                                                       ^
./CPP_61.cpp:3:5: note: declared here
    3 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~


CPP_20.cpp: Compilation Failed
Error: ./CPP_20.cpp:9:91: error: expected ‘,’ or ‘...’ before ‘this’
    9 | void _ZNSt6vectorIfSaIfEE13_M_assign_auxIPKfEEvT_S5_St20forward_iterator_tag(std__vector* this, float* first, float* last) {
      |                                                                                           ^~~~
./CPP_20.cpp: In function ‘void _ZNSt6vectorIfSaIfEE13_M_assign_auxIPKfEEvT_S5_St20forward_iterator_tag(std__vector*)’:
./CPP_20.cpp:10:39: error: invalid use of ‘this’ in non-member function
   10 |   long long _M_capacity = (long long)(this->_M_end_of_storage - this->_M_start);
      |                                       ^~~~
./CPP_20.cpp:10:65: error: invalid use of ‘this’ in non-member function
   10 |   long long _M_capacity = (long long)(this->_M_end_of_storage - this->_M_start);
      |                                                                 ^~~~
./CPP_20.cpp:11:35: error: invalid use of ‘this’ in non-member function
   11 |   long long _M_size = (long long)(this->_M_finish - this->_M_start);
      |                                   ^~~~
./CPP_20.cpp:11:53: error: invalid use of ‘this’ in non-member function
   11 |   long long _M_size = (long long)(this->_M_finish - this->_M_start);
      |                                                     ^~~~
./CPP_20.cpp:12:30: error: ‘last’ was not declared in this scope
   12 |   long long _N = (long long)(last - first);
      |                              ^~~~
./CPP_20.cpp:12:37: error: ‘first’ was not declared in this scope
   12 |   long long _N = (long long)(last - first);
      |                                     ^~~~~
./CPP_20.cpp:21:10: error: invalid use of ‘this’ in non-member function
   21 |     free(this->_M_start);
      |          ^~~~
./CPP_20.cpp:22:5: error: invalid use of ‘this’ in non-member function
   22 |     this->_M_start = __new_start;
      |     ^~~~
./CPP_20.cpp:23:5: error: invalid use of ‘this’ in non-member function
   23 |     this->_M_finish = __new_start + _N;
      |     ^~~~
./CPP_20.cpp:24:5: error: invalid use of ‘this’ in non-member function
   24 |     this->_M_end_of_storage = __new_start + _N;
      |     ^~~~
./CPP_20.cpp:28:9: error: invalid use of ‘this’ in non-member function
   28 |         this->_M_start[i] = first[i];
      |         ^~~~
./CPP_20.cpp:30:7: error: invalid use of ‘this’ in non-member function
   30 |       this->_M_finish = this->_M_start + _N;
      |       ^~~~
./CPP_20.cpp:30:25: error: invalid use of ‘this’ in non-member function
   30 |       this->_M_finish = this->_M_start + _N;
      |                         ^~~~
./CPP_20.cpp:34:9: error: invalid use of ‘this’ in non-member function
   34 |         this->_M_start[i] = first[i];
      |         ^~~~
./CPP_20.cpp:37:9: error: invalid use of ‘this’ in non-member function
   37 |         this->_M_start[i] = first[i];
      |         ^~~~
./CPP_20.cpp:39:7: error: invalid use of ‘this’ in non-member function
   39 |       this->_M_finish = this->_M_start + _M_src_size;
      |       ^~~~
./CPP_20.cpp:39:25: error: invalid use of ‘this’ in non-member function
   39 |       this->_M_finish = this->_M_start + _M_src_size;
      |                         ^~~~
In file included from /usr/include/features.h:461,
                 from /usr/include/x86_64-linux-gnu/c++/9/bits/os_defines.h:39,
                 from /usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:528,
                 from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_20.cpp:1:
/usr/include/assert.h: In function ‘void find_closest_elements(std__vector*, const std__vector*)’:
/usr/include/assert.h:66:1: error: expected unqualified-id before ‘extern’
   66 | __BEGIN_DECLS
      | ^~~~~~~~~~~~~
./CPP_20.cpp:48:13: error: ‘vector’ was not declared in this scope
   48 | bool issame(vector<float> a,vector<float>b){
      |             ^~~~~~
./CPP_20.cpp:48:20: error: expected primary-expression before ‘float’
   48 | bool issame(vector<float> a,vector<float>b){
      |                    ^~~~~
./CPP_20.cpp:48:36: error: expected primary-expression before ‘float’
   48 | bool issame(vector<float> a,vector<float>b){
      |                                    ^~~~~
./CPP_20.cpp:48:43: error: expression list treated as compound expression in initializer [-fpermissive]
   48 | bool issame(vector<float> a,vector<float>b){
      |                                           ^
./CPP_20.cpp:56:11: error: a function-definition is not allowed here before ‘{’ token
   56 | int main(){
      |           ^
./CPP_20.cpp:62:1: error: expected ‘}’ at end of input
   62 | }
      | ^
./CPP_20.cpp:44:75: note: to match this ‘{’
   44 | void find_closest_elements(std__vector* result, const std__vector* input) {
      |                                                                           ^


CPP_124.cpp: Compilation Failed
Error: ./CPP_124.cpp:39:5: error: redefinition of ‘int main()’
   39 | int main(){
      |     ^~~~
./CPP_124.cpp:29:5: note: ‘int main()’ previously defined here
   29 | int main() {
      |     ^~~~
In file included from ./CPP_124.cpp:38:
./CPP_124.cpp: In function ‘int main()’:
./CPP_124.cpp:40:24: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   40 |     assert (valid_date("03-11-2000") == true);
      |                        ^~~~~~~~~~~~
./CPP_124.cpp:41:24: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   41 |     assert (valid_date("15-01-2012") == false);
      |                        ^~~~~~~~~~~~
./CPP_124.cpp:42:24: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   42 |     assert (valid_date("04-0-2040") == false);
      |                        ^~~~~~~~~~~
./CPP_124.cpp:43:24: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   43 |     assert (valid_date("06-04-2020") == true);
      |                        ^~~~~~~~~~~~
./CPP_124.cpp:44:24: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   44 |     assert (valid_date("01-01-2007") == true);
      |                        ^~~~~~~~~~~~
./CPP_124.cpp:45:24: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   45 |     assert (valid_date("03-32-2011") == false);
      |                        ^~~~~~~~~~~~
./CPP_124.cpp:46:24: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   46 |     assert (valid_date("") == false);
      |                        ^~
./CPP_124.cpp:47:24: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   47 |     assert (valid_date("04-31-3000") == false);
      |                        ^~~~~~~~~~~~
./CPP_124.cpp:48:24: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   48 |     assert (valid_date("06-06-2005") == true);
      |                        ^~~~~~~~~~~~
./CPP_124.cpp:49:24: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   49 |     assert (valid_date("21-31-2000") == false);
      |                        ^~~~~~~~~~~~
./CPP_124.cpp:50:24: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   50 |     assert (valid_date("04-12-2003") == true);
      |                        ^~~~~~~~~~~~
./CPP_124.cpp:51:24: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   51 |     assert (valid_date("04122003") == false);
      |                        ^~~~~~~~~~
./CPP_124.cpp:52:24: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   52 |     assert (valid_date("20030412") == false);
      |                        ^~~~~~~~~~
./CPP_124.cpp:53:24: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   53 |     assert (valid_date("2003-04") == false);
      |                        ^~~~~~~~~
./CPP_124.cpp:54:24: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   54 |     assert (valid_date("2003-04-12") == false);
      |                        ^~~~~~~~~~~~
./CPP_124.cpp:55:24: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   55 |     assert (valid_date("04-2003") == false);
      |                        ^~~~~~~~~


CPP_75.cpp: Compilation Failed
Error: In file included from ./CPP_75.cpp:30:
./CPP_75.cpp: In function ‘int main()’:
./CPP_75.cpp:32:13: error: ‘is_multiply_prime’ was not declared in this scope
   32 |     assert (is_multiply_prime(5) == false);
      |             ^~~~~~~~~~~~~~~~~


CPP_142.cpp: Compilation Failed
Error: ./CPP_142.cpp: In function ‘int sum_squares(const int*, const int*)’:
./CPP_142.cpp:8:3: error: ‘size_t’ was not declared in this scope
    8 |   size_t count = (end - begin) / 3;
      |   ^~~~~~
./CPP_142.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_142.cpp:9:9: error: expected ‘;’ before ‘i’
    9 |   size_t i;
      |         ^~
      |         ;
./CPP_142.cpp:12:8: error: ‘i’ was not declared in this scope
   12 |   for (i = 0; i < count; ++i) {
      |        ^
./CPP_142.cpp:12:19: error: ‘count’ was not declared in this scope
   12 |   for (i = 0; i < count; ++i) {
      |                   ^~~~~
./CPP_142.cpp:21:8: error: ‘i’ was not declared in this scope
   21 |   for (i = count * 3; i < (end - begin); ++i) {
      |        ^
./CPP_142.cpp:21:12: error: ‘count’ was not declared in this scope
   21 |   for (i = count * 3; i < (end - begin); ++i) {
      |            ^~~~~
In file included from ./CPP_142.cpp:30:
./CPP_142.cpp: In function ‘int main()’:
./CPP_142.cpp:32:32: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   32 |     assert (sum_squares({1,2,3}) == 6);
      |                                ^
      |                                |
      |                                <brace-enclosed initializer list>
./CPP_142.cpp:3:28: note:   initializing argument 1 of ‘int sum_squares(const int*, const int*)’
    3 | int sum_squares(const int *begin, const int *end) {
      |                 ~~~~~~~~~~~^~~~~
In file included from ./CPP_142.cpp:30:
./CPP_142.cpp:33:32: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   33 |     assert (sum_squares({1,4,9}) == 14);
      |                                ^
      |                                |
      |                                <brace-enclosed initializer list>
./CPP_142.cpp:3:28: note:   initializing argument 1 of ‘int sum_squares(const int*, const int*)’
    3 | int sum_squares(const int *begin, const int *end) {
      |                 ~~~~~~~~~~~^~~~~
In file included from ./CPP_142.cpp:30:
./CPP_142.cpp:34:27: error: too few arguments to function ‘int sum_squares(const int*, const int*)’
   34 |     assert (sum_squares({}) == 0);
      |                           ^
./CPP_142.cpp:3:5: note: declared here
    3 | int sum_squares(const int *begin, const int *end) {
      |     ^~~~~~~~~~~
In file included from ./CPP_142.cpp:30:
./CPP_142.cpp:35:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   35 |     assert (sum_squares({1,1,1,1,1,1,1,1,1}) == 9);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_142.cpp:3:28: note:   initializing argument 1 of ‘int sum_squares(const int*, const int*)’
    3 | int sum_squares(const int *begin, const int *end) {
      |                 ~~~~~~~~~~~^~~~~
In file included from ./CPP_142.cpp:30:
./CPP_142.cpp:36:53: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   36 |     assert (sum_squares({-1,-1,-1,-1,-1,-1,-1,-1,-1}) == -3);
      |                                                     ^
      |                                                     |
      |                                                     <brace-enclosed initializer list>
./CPP_142.cpp:3:28: note:   initializing argument 1 of ‘int sum_squares(const int*, const int*)’
    3 | int sum_squares(const int *begin, const int *end) {
      |                 ~~~~~~~~~~~^~~~~
In file included from ./CPP_142.cpp:30:
./CPP_142.cpp:37:28: error: too few arguments to function ‘int sum_squares(const int*, const int*)’
   37 |     assert (sum_squares({0}) == 0);
      |                            ^
./CPP_142.cpp:3:5: note: declared here
    3 | int sum_squares(const int *begin, const int *end) {
      |     ^~~~~~~~~~~
In file included from ./CPP_142.cpp:30:
./CPP_142.cpp:38:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   38 |     assert (sum_squares({-1,-5,2,-1,-5}) == -126);
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_142.cpp:3:28: note:   initializing argument 1 of ‘int sum_squares(const int*, const int*)’
    3 | int sum_squares(const int *begin, const int *end) {
      |                 ~~~~~~~~~~~^~~~~
In file included from ./CPP_142.cpp:30:
./CPP_142.cpp:39:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   39 |     assert (sum_squares({-56,-99,1,0,-2}) == 3030);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_142.cpp:3:28: note:   initializing argument 1 of ‘int sum_squares(const int*, const int*)’
    3 | int sum_squares(const int *begin, const int *end) {
      |                 ~~~~~~~~~~~^~~~~
In file included from ./CPP_142.cpp:30:
./CPP_142.cpp:40:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   40 |     assert (sum_squares({-1,0,0,0,0,0,0,0,-1}) == 0);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_142.cpp:3:28: note:   initializing argument 1 of ‘int sum_squares(const int*, const int*)’
    3 | int sum_squares(const int *begin, const int *end) {
      |                 ~~~~~~~~~~~^~~~~
In file included from ./CPP_142.cpp:30:
./CPP_142.cpp:41:89: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   41 |     assert (sum_squares({-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37}) == -14196);
      |                                                                                         ^
      |                                                                                         |
      |                                                                                         <brace-enclosed initializer list>
./CPP_142.cpp:3:28: note:   initializing argument 1 of ‘int sum_squares(const int*, const int*)’
    3 | int sum_squares(const int *begin, const int *end) {
      |                 ~~~~~~~~~~~^~~~~
In file included from ./CPP_142.cpp:30:
./CPP_142.cpp:42:107: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   42 |     assert (sum_squares({-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10}) == -1448);
      |                                                                                                           ^
      |                                                                                                           |
      |                                                                                                           <brace-enclosed initializer list>
./CPP_142.cpp:3:28: note:   initializing argument 1 of ‘int sum_squares(const int*, const int*)’
    3 | int sum_squares(const int *begin, const int *end) {
      |                 ~~~~~~~~~~~^~~~~


CPP_66.cpp: Compilation Failed
Error: ./CPP_66.cpp: In function ‘int digitSum(const char*)’:
./CPP_66.cpp:5:3: error: ‘size_t’ was not declared in this scope
    5 |   size_t len = strlen(str);
      |   ^~~~~~
./CPP_66.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_66.cpp:6:14: error: expected ‘;’ before ‘i’
    6 |   for (size_t i = 0; i < len; ++i) {
      |              ^~
      |              ;
./CPP_66.cpp:6:22: error: ‘i’ was not declared in this scope
    6 |   for (size_t i = 0; i < len; ++i) {
      |                      ^
./CPP_66.cpp:6:26: error: ‘len’ was not declared in this scope
    6 |   for (size_t i = 0; i < len; ++i) {
      |                          ^~~


CPP_114.cpp: Compilation Failed
Error: In file included from ./CPP_114.cpp:20:
./CPP_114.cpp: In function ‘int main()’:
./CPP_114.cpp:22:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   22 |     assert (minSubArraySum({2, 3, 4, 1, 2, 4}) == 1);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_114.cpp:3:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, size_t)’
    3 | long long minSubArraySum(long long* arr, size_t n) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:23:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   23 |     assert (minSubArraySum({-1, -2, -3}) == -6);
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_114.cpp:3:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, size_t)’
    3 | long long minSubArraySum(long long* arr, size_t n) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:24:48: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   24 |     assert (minSubArraySum({-1, -2, -3, 2, -10}) == -14);
      |                                                ^
      |                                                |
      |                                                <brace-enclosed initializer list>
./CPP_114.cpp:3:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, size_t)’
    3 | long long minSubArraySum(long long* arr, size_t n) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:25:47: error: invalid conversion from ‘long int’ to ‘long long int*’ [-fpermissive]
   25 |     assert (minSubArraySum({-9999999999999999}) == -9999999999999999);
      |                                               ^
      |                                               |
      |                                               long int
./CPP_114.cpp:25:47: error: too few arguments to function ‘long long int minSubArraySum(long long int*, size_t)’
./CPP_114.cpp:3:11: note: declared here
    3 | long long minSubArraySum(long long* arr, size_t n) {
      |           ^~~~~~~~~~~~~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:26:48: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   26 |     assert (minSubArraySum({0, 10, 20, 1000000}) == 0);
      |                                                ^
      |                                                |
      |                                                <brace-enclosed initializer list>
./CPP_114.cpp:3:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, size_t)’
    3 | long long minSubArraySum(long long* arr, size_t n) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:27:48: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   27 |     assert (minSubArraySum({-1, -2, -3, 10, -5}) == -6);
      |                                                ^
      |                                                |
      |                                                <brace-enclosed initializer list>
./CPP_114.cpp:3:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, size_t)’
    3 | long long minSubArraySum(long long* arr, size_t n) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:28:53: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   28 |     assert (minSubArraySum({100, -1, -2, -3, 10, -5}) == -6);
      |                                                     ^
      |                                                     |
      |                                                     <brace-enclosed initializer list>
./CPP_114.cpp:3:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, size_t)’
    3 | long long minSubArraySum(long long* arr, size_t n) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:29:49: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   29 |     assert (minSubArraySum({10, 11, 13, 8, 3, 4}) == 3);
      |                                                 ^
      |                                                 |
      |                                                 <brace-enclosed initializer list>
./CPP_114.cpp:3:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, size_t)’
    3 | long long minSubArraySum(long long* arr, size_t n) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:30:53: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   30 |     assert (minSubArraySum({100, -33, 32, -1, 0, -2}) == -33);
      |                                                     ^
      |                                                     |
      |                                                     <brace-enclosed initializer list>
./CPP_114.cpp:3:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, size_t)’
    3 | long long minSubArraySum(long long* arr, size_t n) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:31:33: error: invalid conversion from ‘int’ to ‘long long int*’ [-fpermissive]
   31 |     assert (minSubArraySum({-10}) == -10);
      |                                 ^
      |                                 |
      |                                 int
./CPP_114.cpp:31:33: error: too few arguments to function ‘long long int minSubArraySum(long long int*, size_t)’
./CPP_114.cpp:3:11: note: declared here
    3 | long long minSubArraySum(long long* arr, size_t n) {
      |           ^~~~~~~~~~~~~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:32:31: error: invalid conversion from ‘int’ to ‘long long int*’ [-fpermissive]
   32 |     assert (minSubArraySum({7}) == 7);
      |                               ^
      |                               |
      |                               int
./CPP_114.cpp:32:31: error: too few arguments to function ‘long long int minSubArraySum(long long int*, size_t)’
./CPP_114.cpp:3:11: note: declared here
    3 | long long minSubArraySum(long long* arr, size_t n) {
      |           ^~~~~~~~~~~~~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:33:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   33 |     assert (minSubArraySum({1, -1}) == -1);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_114.cpp:3:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, size_t)’
    3 | long long minSubArraySum(long long* arr, size_t n) {
      |                          ~~~~~~~~~~~^~~


CPP_85.cpp: Compilation Failed
Error: In file included from ./CPP_85.cpp:14:
./CPP_85.cpp: In function ‘int main()’:
./CPP_85.cpp:16:24: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   16 |     assert (add({4, 88}) == 88);
      |                        ^
      |                        |
      |                        <brace-enclosed initializer list>
./CPP_85.cpp:3:20: note:   initializing argument 1 of ‘int add(const int*, const int*)’
    3 | int add(const int* begin, const int* end) {
      |         ~~~~~~~~~~~^~~~~
In file included from ./CPP_85.cpp:14:
./CPP_85.cpp:17:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   17 |     assert (add({4, 5, 6, 7, 2, 122}) == 122);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_85.cpp:3:20: note:   initializing argument 1 of ‘int add(const int*, const int*)’
    3 | int add(const int* begin, const int* end) {
      |         ~~~~~~~~~~~^~~~~
In file included from ./CPP_85.cpp:14:
./CPP_85.cpp:18:29: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   18 |     assert (add({4, 0, 6, 7}) == 0);
      |                             ^
      |                             |
      |                             <brace-enclosed initializer list>
./CPP_85.cpp:3:20: note:   initializing argument 1 of ‘int add(const int*, const int*)’
    3 | int add(const int* begin, const int* end) {
      |         ~~~~~~~~~~~^~~~~
In file included from ./CPP_85.cpp:14:
./CPP_85.cpp:19:29: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   19 |     assert (add({4, 4, 6, 8}) == 12);
      |                             ^
      |                             |
      |                             <brace-enclosed initializer list>
./CPP_85.cpp:3:20: note:   initializing argument 1 of ‘int add(const int*, const int*)’
    3 | int add(const int* begin, const int* end) {
      |         ~~~~~~~~~~~^~~~~


CPP_46.cpp: Compilation Failed
Error: ./CPP_46.cpp:31:5: error: redefinition of ‘int main()’
   31 | int main(){
      |     ^~~~
./CPP_46.cpp:22:5: note: ‘int main()’ previously defined here
   22 | int main() {
      |     ^~~~


CPP_28.cpp: Compilation Failed
Error: ./CPP_28.cpp: In function ‘void concatenate(std__cxx11__basic_string*, std__vector*)’:
./CPP_28.cpp:21:45: error: cannot convert ‘std__cxx11__basic_string**’ to ‘std__cxx11__basic_string*’ in initialization
   21 |     std__cxx11__basic_string* end = vector->_M_finish;
      |                                     ~~~~~~~~^~~~~~~~~
      |                                             |
      |                                             std__cxx11__basic_string**
./CPP_28.cpp:22:47: error: cannot convert ‘std__cxx11__basic_string**’ to ‘std__cxx11__basic_string*’ in initialization
   22 |     std__cxx11__basic_string* begin = vector->_M_impl;
      |                                       ~~~~~~~~^~~~~~~
      |                                               |
      |                                               std__cxx11__basic_string**
./CPP_28.cpp:28:45: error: cannot convert ‘std__cxx11__basic_string’ to ‘std__cxx11__basic_string*’ in initialization
   28 |         std__cxx11__basic_string* current = *begin;
      |                                             ^~~~~~
      |                                             |
      |                                             std__cxx11__basic_string
./CPP_28.cpp:29:31: error: invalid conversion from ‘char*’ to ‘size_t’ {aka ‘long unsigned int’} [-fpermissive]
   29 |         size_t len = current->_M_string_length;
      |                      ~~~~~~~~~^~~~~~~~~~~~~~~~
      |                               |
      |                               char*
./CPP_28.cpp:33:51: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
   33 |             temp._Alloc_hider._M_dataplus = malloc(len + 1);
      |                                             ~~~~~~^~~~~~~~~
      |                                                   |
      |                                                   void*
./CPP_28.cpp:36:37: error: invalid conversion from ‘size_t’ {aka ‘long unsigned int’} to ‘char*’ [-fpermissive]
   36 |             temp._M_string_length = len;
      |                                     ^~~
      |                                     |
      |                                     size_t {aka long unsigned int}
./CPP_28.cpp:38:35: error: invalid conversion from ‘char*’ to ‘size_t’ {aka ‘long unsigned int’} [-fpermissive]
   38 |             size_t old_len = temp._M_string_length;
      |                              ~~~~~^~~~~~~~~~~~~~~~
      |                                   |
      |                                   char*
./CPP_28.cpp:39:52: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
   39 |             temp._Alloc_hider._M_dataplus = realloc(temp._Alloc_hider._M_dataplus, old_len + len + 1);
      |                                             ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                    |
      |                                                    void*
./CPP_28.cpp:48:50: error: invalid conversion from ‘char*’ to ‘long int’ [-fpermissive]
   48 |     string->_Alloc_hider._M_string_length = temp._M_string_length;
      |                                             ~~~~~^~~~~~~~~~~~~~~~
      |                                                  |
      |                                                  char*
./CPP_28.cpp: At global scope:
./CPP_28.cpp:55:1: error: ‘::main’ must return ‘int’
   55 | void main() {
      | ^~~~
./CPP_28.cpp: In function ‘int main()’:
./CPP_28.cpp:58:25: error: invalid conversion from ‘void*’ to ‘std__cxx11__basic_string**’ [-fpermissive]
   58 |     vec._M_impl = malloc(sizeof(std__cxx11__basic_string*) * 10);
      |                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                         |
      |                         void*
./CPP_28.cpp: At global scope:
./CPP_28.cpp:79:5: error: redefinition of ‘int main()’
   79 | int main(){
      |     ^~~~
./CPP_28.cpp:55:6: note: ‘int main()’ previously defined here
   55 | void main() {
      |      ^~~~
In file included from ./CPP_28.cpp:78:
./CPP_28.cpp: In function ‘int main()’:
./CPP_28.cpp:80:27: error: too few arguments to function ‘void concatenate(std__cxx11__basic_string*, std__vector*)’
   80 |     assert (concatenate({}) == "");
      |                           ^
./CPP_28.cpp:19:6: note: declared here
   19 | void concatenate(std__cxx11__basic_string* string, std__vector* vector) {
      |      ^~~~~~~~~~~
In file included from ./CPP_28.cpp:78:
./CPP_28.cpp:81:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std__cxx11__basic_string*’
   81 |      assert (concatenate({"x", "y", "z"}) == "xyz");
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_28.cpp:19:44: note:   initializing argument 1 of ‘void concatenate(std__cxx11__basic_string*, std__vector*)’
   19 | void concatenate(std__cxx11__basic_string* string, std__vector* vector) {
      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_28.cpp:78:
./CPP_28.cpp:82:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std__cxx11__basic_string*’
   82 |     assert (concatenate({"x", "y", "z", "w", "k"}) == "xyzwk");
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_28.cpp:19:44: note:   initializing argument 1 of ‘void concatenate(std__cxx11__basic_string*, std__vector*)’
   19 | void concatenate(std__cxx11__basic_string* string, std__vector* vector) {
      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~


CPP_62.cpp: Compilation Failed
Error: ./CPP_62.cpp: In function ‘void _Z10derivativeSt6vectorIfSaIfEE(float*, const float*)’:
./CPP_62.cpp:6:30: error: invalid operands of types ‘float*’ and ‘float’ to binary ‘operator+’
    6 |   float* src_end = src_begin + ((src_begin[1] - src_begin[0]) / 4);
      |                    ~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                    |                                          |
      |                    float*                                     float
./CPP_62.cpp: At global scope:
./CPP_62.cpp:81:13: error: ‘vector’ was not declared in this scope
   81 | bool issame(vector<float> a,vector<float>b){
      |             ^~~~~~
./CPP_62.cpp:81:20: error: expected primary-expression before ‘float’
   81 | bool issame(vector<float> a,vector<float>b){
      |                    ^~~~~
./CPP_62.cpp:81:29: error: ‘vector’ was not declared in this scope
   81 | bool issame(vector<float> a,vector<float>b){
      |                             ^~~~~~
./CPP_62.cpp:81:36: error: expected primary-expression before ‘float’
   81 | bool issame(vector<float> a,vector<float>b){
      |                                    ^~~~~
./CPP_62.cpp:81:43: error: expression list treated as compound expression in initializer [-fpermissive]
   81 | bool issame(vector<float> a,vector<float>b){
      |                                           ^
In file included from ./CPP_62.cpp:80:
./CPP_62.cpp: In function ‘int main()’:
./CPP_62.cpp:90:20: error: ‘derivative’ was not declared in this scope
   90 |     assert (issame(derivative({3, 1, 2, 4, 5}) , {1, 4, 12, 20}));
      |                    ^~~~~~~~~~
./CPP_62.cpp:90:64: error: ‘issame’ cannot be used as a function
   90 |     assert (issame(derivative({3, 1, 2, 4, 5}) , {1, 4, 12, 20}));
      |                                                                ^
./CPP_62.cpp:91:50: error: ‘issame’ cannot be used as a function
   91 |     assert (issame(derivative({1, 2, 3}) , {2, 6}));
      |                                                  ^
./CPP_62.cpp:92:50: error: ‘issame’ cannot be used as a function
   92 |     assert (issame(derivative({3, 2, 1}) , {2, 2}));
      |                                                  ^
./CPP_62.cpp:93:63: error: ‘issame’ cannot be used as a function
   93 |     assert (issame(derivative({3, 2, 1, 0, 4}) , {2, 2, 0, 16}));
      |                                                               ^
./CPP_62.cpp:94:40: error: ‘issame’ cannot be used as a function
   94 |     assert (issame(derivative({1}) , {}));
      |                                        ^


CPP_36.cpp: Compilation Failed
Error: ./CPP_36.cpp: In function ‘int fizz_buzzi(int)’:
./CPP_36.cpp:31:15: error: ‘arg_21’ was not declared in this scope; did you mean ‘arg_12’?
   31 |       arg_7 = arg_21;
      |               ^~~~~~
      |               arg_12
In file included from ./CPP_36.cpp:42:
./CPP_36.cpp: In function ‘int main()’:
./CPP_36.cpp:44:13: error: ‘fizz_buzz’ was not declared in this scope; did you mean ‘fizz_buzzi’?
   44 |     assert (fizz_buzz(50) == 0);
      |             ^~~~~~~~~


CPP_131.cpp: Compilation Failed
Error: ./CPP_131.cpp:66:5: error: redefinition of ‘int main()’
   66 | int main(){
      |     ^~~~
./CPP_131.cpp:57:5: note: ‘int main()’ previously defined here
   57 | int main() {
      |     ^~~~
In file included from ./CPP_131.cpp:65:
./CPP_131.cpp: In function ‘int main()’:
./CPP_131.cpp:67:13: error: ‘digits’ was not declared in this scope; did you mean ‘digitsi’?
   67 |     assert (digits(5) == 5);
      |             ^~~~~~


CPP_152.cpp: Compilation Failed
Error: ./CPP_152.cpp:56:13: error: ‘vector’ is not a template
   56 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_152.cpp:56:27: error: ‘vector’ is not a template
   56 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_152.cpp: In function ‘bool issame(vector, vector)’:
./CPP_152.cpp:57:11: error: ‘vector’ {aka ‘struct vector’} has no member named ‘size’
   57 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_152.cpp:57:21: error: ‘vector’ {aka ‘struct vector’} has no member named ‘size’
   57 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_152.cpp:58:22: error: ‘vector’ {aka ‘struct vector’} has no member named ‘size’
   58 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_152.cpp:60:10: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   60 |     if (a[i]!=b[i]) return false;
      |          ^
./CPP_152.cpp:60:16: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   60 |     if (a[i]!=b[i]) return false;
      |                ^
In file included from ./CPP_152.cpp:55:
./CPP_152.cpp: In function ‘int main()’:
./CPP_152.cpp:65:56: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   65 |     assert (issame(compare({1,2,3,4,5,1},{1,2,3,4,2,-2}),{0,0,0,0,3,3}));
      |                                                        ^
      |                                                        |
      |                                                        <brace-enclosed initializer list>
./CPP_152.cpp:15:22: note:   initializing argument 1 of ‘void compare(vector*, const vector*, const vector*)’
   15 | void compare(vector *result, const vector *lhs, const vector *rhs) {
      |              ~~~~~~~~^~~~~~
In file included from ./CPP_152.cpp:55:
./CPP_152.cpp:66:56: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   66 |     assert (issame(compare({0,5,0,0,0,4},{4,1,1,0,0,-2}),{4,4,1,0,0,6}));
      |                                                        ^
      |                                                        |
      |                                                        <brace-enclosed initializer list>
./CPP_152.cpp:15:22: note:   initializing argument 1 of ‘void compare(vector*, const vector*, const vector*)’
   15 | void compare(vector *result, const vector *lhs, const vector *rhs) {
      |              ~~~~~~~~^~~~~~
In file included from ./CPP_152.cpp:55:
./CPP_152.cpp:67:56: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   67 |     assert (issame(compare({1,2,3,4,5,1},{1,2,3,4,2,-2}),{0,0,0,0,3,3}));
      |                                                        ^
      |                                                        |
      |                                                        <brace-enclosed initializer list>
./CPP_152.cpp:15:22: note:   initializing argument 1 of ‘void compare(vector*, const vector*, const vector*)’
   15 | void compare(vector *result, const vector *lhs, const vector *rhs) {
      |              ~~~~~~~~^~~~~~
In file included from ./CPP_152.cpp:55:
./CPP_152.cpp:68:55: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   68 |     assert (issame(compare({0,0,0,0,0,0},{0,0,0,0,0,0}),{0,0,0,0,0,0}));
      |                                                       ^
      |                                                       |
      |                                                       <brace-enclosed initializer list>
./CPP_152.cpp:15:22: note:   initializing argument 1 of ‘void compare(vector*, const vector*, const vector*)’
   15 | void compare(vector *result, const vector *lhs, const vector *rhs) {
      |              ~~~~~~~~^~~~~~
In file included from ./CPP_152.cpp:55:
./CPP_152.cpp:69:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   69 |     assert (issame(compare({1,2,3},{-1,-2,-3}),{2,4,6}));
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_152.cpp:15:22: note:   initializing argument 1 of ‘void compare(vector*, const vector*, const vector*)’
   15 | void compare(vector *result, const vector *lhs, const vector *rhs) {
      |              ~~~~~~~~^~~~~~
In file included from ./CPP_152.cpp:55:
./CPP_152.cpp:70:48: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   70 |     assert (issame(compare({1,2,3,5},{-1,2,3,4}),{2,0,0,1}));
      |                                                ^
      |                                                |
      |                                                <brace-enclosed initializer list>
./CPP_152.cpp:15:22: note:   initializing argument 1 of ‘void compare(vector*, const vector*, const vector*)’
   15 | void compare(vector *result, const vector *lhs, const vector *rhs) {
      |              ~~~~~~~~^~~~~~


CPP_132.cpp: Execution Failed
Error: CPP_132: ./CPP_132.cpp:34: int main(): Assertion `is_nested("[][]") == false' failed.
Aborted (core dumped)


CPP_68.cpp: Compilation Failed
Error: ./CPP_68.cpp:10:88: error: expected ‘,’ or ‘...’ before ‘this’
   10 | void _ZNSt6vectorIiSaIiEE13_M_assign_auxIPKiEEvT_S5_St20forward_iterator_tag(vector_t *this, int *first, int *last) {
      |                                                                                        ^~~~
./CPP_68.cpp: In function ‘void _ZNSt6vectorIiSaIiEE13_M_assign_auxIPKiEEvT_S5_St20forward_iterator_tag(vector_t*)’:
./CPP_68.cpp:11:21: error: ‘last’ was not declared in this scope
   11 |     size_t count = (last - first) * sizeof(int);
      |                     ^~~~
./CPP_68.cpp:11:28: error: ‘first’ was not declared in this scope
   11 |     size_t count = (last - first) * sizeof(int);
      |                            ^~~~~
./CPP_68.cpp:12:9: error: invalid use of ‘this’ in non-member function
   12 |     if (this->end - this->data > count) {
      |         ^~~~
./CPP_68.cpp:12:21: error: invalid use of ‘this’ in non-member function
   12 |     if (this->end - this->data > count) {
      |                     ^~~~
./CPP_68.cpp:13:15: error: invalid use of ‘this’ in non-member function
   13 |       memmove(this->data, first, count);
      |               ^~~~
./CPP_68.cpp:14:7: error: invalid use of ‘this’ in non-member function
   14 |       this->end = this->data + count / sizeof(int);
      |       ^~~~
./CPP_68.cpp:14:19: error: invalid use of ‘this’ in non-member function
   14 |       this->end = this->data + count / sizeof(int);
      |                   ^~~~
./CPP_68.cpp:18:5: error: invalid use of ‘this’ in non-member function
   18 |     this->data = realloc(this->data, count);
      |     ^~~~
./CPP_68.cpp:18:26: error: invalid use of ‘this’ in non-member function
   18 |     this->data = realloc(this->data, count);
      |                          ^~~~
./CPP_68.cpp:19:9: error: invalid use of ‘this’ in non-member function
   19 |     if (this->data == NULL) {
      |         ^~~~
./CPP_68.cpp:22:5: error: invalid use of ‘this’ in non-member function
   22 |     this->end = this->data + count / sizeof(int);
      |     ^~~~
./CPP_68.cpp:22:17: error: invalid use of ‘this’ in non-member function
   22 |     this->end = this->data + count / sizeof(int);
      |                 ^~~~
./CPP_68.cpp:23:5: error: invalid use of ‘this’ in non-member function
   23 |     this->capacity = this->end;
      |     ^~~~
./CPP_68.cpp:23:22: error: invalid use of ‘this’ in non-member function
   23 |     this->capacity = this->end;
      |                      ^~~~
./CPP_68.cpp:24:12: error: invalid use of ‘this’ in non-member function
   24 |     memcpy(this->data, first, count);
      |            ^~~~
./CPP_68.cpp: At global scope:
./CPP_68.cpp:27:42: error: expected ‘,’ or ‘...’ before ‘this’
   27 | void _Z5pluckSt6vectorIiSaIiEE(vector_t *this, const vector_t *other) {
      |                                          ^~~~
./CPP_68.cpp: In function ‘void _Z5pluckSt6vectorIiSaIiEE(vector_t*)’:
./CPP_68.cpp:28:16: error: ‘other’ was not declared in this scope
   28 |   int *first = other->data;
      |                ^~~~~
./CPP_68.cpp:30:3: error: invalid use of ‘this’ in non-member function
   30 |   this->data = NULL;
      |   ^~~~
./CPP_68.cpp:31:3: error: invalid use of ‘this’ in non-member function
   31 |   this->end = NULL;
      |   ^~~~
./CPP_68.cpp:32:3: error: invalid use of ‘this’ in non-member function
   32 |   this->capacity = NULL;
      |   ^~~~
./CPP_68.cpp:33:75: error: invalid use of ‘this’ in non-member function
   33 |   _ZNSt6vectorIiSaIiEE13_M_assign_auxIPKiEEvT_S5_St20forward_iterator_tag(this, first, last);
      |                                                                           ^~~~
./CPP_68.cpp: At global scope:
./CPP_68.cpp:43:13: error: ‘vector’ was not declared in this scope; did you mean ‘vector_t’?
   43 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
      |             vector_t
./CPP_68.cpp:43:20: error: expected primary-expression before ‘int’
   43 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_68.cpp:43:27: error: ‘vector’ was not declared in this scope; did you mean ‘vector_t’?
   43 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
      |                           vector_t
./CPP_68.cpp:43:34: error: expected primary-expression before ‘int’
   43 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_68.cpp:43:39: error: expression list treated as compound expression in initializer [-fpermissive]
   43 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
./CPP_68.cpp:51:5: error: redefinition of ‘int main()’
   51 | int main(){
      |     ^~~~
./CPP_68.cpp:36:5: note: ‘int main()’ previously defined here
   36 | int main() {
      |     ^~~~
In file included from ./CPP_68.cpp:42:
./CPP_68.cpp: In function ‘int main()’:
./CPP_68.cpp:52:20: error: ‘pluck’ was not declared in this scope
   52 |     assert (issame(pluck({4,2,3}) , {2, 1}));
      |                    ^~~~~
./CPP_68.cpp:52:43: error: ‘issame’ cannot be used as a function
   52 |     assert (issame(pluck({4,2,3}) , {2, 1}));
      |                                           ^
./CPP_68.cpp:53:43: error: ‘issame’ cannot be used as a function
   53 |     assert (issame(pluck({1,2,3}) , {2, 1}));
      |                                           ^
./CPP_68.cpp:54:34: error: ‘issame’ cannot be used as a function
   54 |     assert (issame(pluck({}) , {}));
      |                                  ^
./CPP_68.cpp:55:54: error: ‘issame’ cannot be used as a function
   55 |     assert (issame(pluck({5, 0, 3, 0, 4, 2}) , {0, 1}));
      |                                                      ^
./CPP_68.cpp:56:54: error: ‘issame’ cannot be used as a function
   56 |     assert (issame(pluck({1, 2, 3, 0, 5, 3}) , {0, 3}));
      |                                                      ^
./CPP_68.cpp:57:51: error: ‘issame’ cannot be used as a function
   57 |     assert (issame(pluck({5, 4, 8, 4 ,8}) , {4, 1}));
      |                                                   ^
./CPP_68.cpp:58:48: error: ‘issame’ cannot be used as a function
   58 |     assert (issame(pluck({7, 6, 7, 1}) , {6, 1}));
      |                                                ^
./CPP_68.cpp:59:44: error: ‘issame’ cannot be used as a function
   59 |     assert (issame(pluck({7, 9, 7, 1}) , {}));
      |                                            ^


CPP_163.cpp: Compilation Failed
Error: ./CPP_163.cpp:37:1: error: stray ‘`’ in program
   37 | ```
      | ^
./CPP_163.cpp:37:2: error: stray ‘`’ in program
   37 | ```
      |  ^
./CPP_163.cpp:37:3: error: stray ‘`’ in program
   37 | ```
      |   ^
./CPP_163.cpp:38:1: error: expected unqualified-id before ‘<’ token
   38 | <|im_end|>
      | ^
./CPP_163.cpp:41:13: error: ‘vector’ was not declared in this scope
   41 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_163.cpp:41:20: error: expected primary-expression before ‘int’
   41 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_163.cpp:41:27: error: ‘vector’ was not declared in this scope
   41 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_163.cpp:41:34: error: expected primary-expression before ‘int’
   41 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_163.cpp:41:39: error: expression list treated as compound expression in initializer [-fpermissive]
   41 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_163.cpp:40:
./CPP_163.cpp: In function ‘int main()’:
./CPP_163.cpp:50:20: error: ‘generate_integers’ was not declared in this scope; did you mean ‘generate_integersii’?
   50 |     assert (issame(generate_integers(2, 10) , {2, 4, 6, 8}));
      |                    ^~~~~~~~~~~~~~~~~
./CPP_163.cpp:50:59: error: ‘issame’ cannot be used as a function
   50 |     assert (issame(generate_integers(2, 10) , {2, 4, 6, 8}));
      |                                                           ^
./CPP_163.cpp:50:5: error: ‘__assert_fail’ was not declared in this scope
   50 |     assert (issame(generate_integers(2, 10) , {2, 4, 6, 8}));
      |     ^~~~~~
./CPP_163.cpp:51:59: error: ‘issame’ cannot be used as a function
   51 |     assert (issame(generate_integers(10, 2) , {2, 4, 6, 8}));
      |                                                           ^
./CPP_163.cpp:52:60: error: ‘issame’ cannot be used as a function
   52 |     assert (issame(generate_integers(132, 2) , {2, 4, 6, 8}));
      |                                                            ^
./CPP_163.cpp:53:49: error: ‘issame’ cannot be used as a function
   53 |     assert (issame(generate_integers(17,89) , {}));
      |                                                 ^


CPP_74.cpp: Compilation Failed
Error: ./CPP_74.cpp:10:3: error: ‘size_t’ does not name a type
   10 |   size_t _M_len;
      |   ^~~~~~
./CPP_74.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_74.cpp:11:3: error: ‘size_t’ does not name a type
   11 |   size_t _M_cap;
      |   ^~~~~~
./CPP_74.cpp:11:3: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
./CPP_74.cpp: In function ‘void total_match(std_vector*, const std_vector*, const std_vector*)’:
./CPP_74.cpp:38:25: error: invalid conversion from ‘const std_string*’ to ‘std_string*’ [-fpermissive]
   38 |   *(std_string **)res = winner_beg;
      |                         ^~~~~~~~~~
      |                         |
      |                         const std_string*
./CPP_74.cpp:39:31: error: invalid conversion from ‘const std_string*’ to ‘std_string*’ [-fpermissive]
   39 |   *((std_string **)res + 1) = winner_end;
      |                               ^~~~~~~~~~
      |                               |
      |                               const std_string*
./CPP_74.cpp: At global scope:
./CPP_74.cpp:46:13: error: ‘vector’ was not declared in this scope; did you mean ‘std_vector’?
   46 | bool issame(vector<string> a,vector<string>b){
      |             ^~~~~~
      |             std_vector
./CPP_74.cpp:46:20: error: ‘string’ was not declared in this scope
   46 | bool issame(vector<string> a,vector<string>b){
      |                    ^~~~~~
./CPP_74.cpp:46:28: error: ‘a’ was not declared in this scope
   46 | bool issame(vector<string> a,vector<string>b){
      |                            ^
./CPP_74.cpp:46:30: error: ‘vector’ was not declared in this scope; did you mean ‘std_vector’?
   46 | bool issame(vector<string> a,vector<string>b){
      |                              ^~~~~~
      |                              std_vector
./CPP_74.cpp:46:37: error: ‘string’ was not declared in this scope
   46 | bool issame(vector<string> a,vector<string>b){
      |                                     ^~~~~~
./CPP_74.cpp:46:44: error: ‘b’ was not declared in this scope
   46 | bool issame(vector<string> a,vector<string>b){
      |                                            ^
./CPP_74.cpp:46:45: error: expression list treated as compound expression in initializer [-fpermissive]
   46 | bool issame(vector<string> a,vector<string>b){
      |                                             ^
In file included from ./CPP_74.cpp:45:
./CPP_74.cpp: In function ‘int main()’:
./CPP_74.cpp:55:38: error: too few arguments to function ‘void total_match(std_vector*, const std_vector*, const std_vector*)’
   55 |     assert (issame(total_match({}, {}) , {}));
      |                                      ^
./CPP_74.cpp:14:6: note: declared here
   14 | void total_match(std_vector *res, const std_vector *v1, const std_vector *v2) {
      |      ^~~~~~~~~~~
In file included from ./CPP_74.cpp:45:
./CPP_74.cpp:55:44: error: ‘issame’ cannot be used as a function
   55 |     assert (issame(total_match({}, {}) , {}));
      |                                            ^
./CPP_74.cpp:56:61: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   56 |     assert (issame(total_match({"hi", "admin"}, {"hi", "hi"}) , {"hi", "hi"}));
      |                                                             ^
      |                                                             |
      |                                                             <brace-enclosed initializer list>
./CPP_74.cpp:14:30: note:   initializing argument 1 of ‘void total_match(std_vector*, const std_vector*, const std_vector*)’
   14 | void total_match(std_vector *res, const std_vector *v1, const std_vector *v2) {
      |                  ~~~~~~~~~~~~^~~
In file included from ./CPP_74.cpp:45:
./CPP_74.cpp:56:77: error: ‘issame’ cannot be used as a function
   56 |     assert (issame(total_match({"hi", "admin"}, {"hi", "hi"}) , {"hi", "hi"}));
      |                                                                             ^
./CPP_74.cpp:57:81: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   57 |     assert (issame(total_match({"hi", "admin"}, {"hi", "hi", "admin", "project"}) , {"hi", "admin"}));
      |                                                                                 ^
      |                                                                                 |
      |                                                                                 <brace-enclosed initializer list>
./CPP_74.cpp:14:30: note:   initializing argument 1 of ‘void total_match(std_vector*, const std_vector*, const std_vector*)’
   14 | void total_match(std_vector *res, const std_vector *v1, const std_vector *v2) {
      |                  ~~~~~~~~~~~~^~~
In file included from ./CPP_74.cpp:45:
./CPP_74.cpp:57:100: error: ‘issame’ cannot be used as a function
   57 |     assert (issame(total_match({"hi", "admin"}, {"hi", "hi", "admin", "project"}) , {"hi", "admin"}));
      |                                                                                                    ^
./CPP_74.cpp:58:64: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   58 |     assert (issame(total_match({"4"}, {"1", "2", "3", "4", "5"}) , {"4"}));
      |                                                                ^
      |                                                                |
      |                                                                <brace-enclosed initializer list>
./CPP_74.cpp:14:30: note:   initializing argument 1 of ‘void total_match(std_vector*, const std_vector*, const std_vector*)’
   14 | void total_match(std_vector *res, const std_vector *v1, const std_vector *v2) {
      |                  ~~~~~~~~~~~~^~~
In file included from ./CPP_74.cpp:45:
./CPP_74.cpp:58:73: error: ‘issame’ cannot be used as a function
   58 |     assert (issame(total_match({"4"}, {"1", "2", "3", "4", "5"}) , {"4"}));
      |                                                                         ^
./CPP_74.cpp:59:61: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   59 |     assert (issame(total_match({"hi", "admin"}, {"hI", "Hi"}) , {"hI", "Hi"}));
      |                                                             ^
      |                                                             |
      |                                                             <brace-enclosed initializer list>
./CPP_74.cpp:14:30: note:   initializing argument 1 of ‘void total_match(std_vector*, const std_vector*, const std_vector*)’
   14 | void total_match(std_vector *res, const std_vector *v1, const std_vector *v2) {
      |                  ~~~~~~~~~~~~^~~
In file included from ./CPP_74.cpp:45:
./CPP_74.cpp:59:77: error: ‘issame’ cannot be used as a function
   59 |     assert (issame(total_match({"hi", "admin"}, {"hI", "Hi"}) , {"hI", "Hi"}));
      |                                                                             ^
./CPP_74.cpp:60:67: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   60 |     assert (issame(total_match({"hi", "admin"}, {"hI", "hi", "hi"}) , {"hI", "hi", "hi"}));
      |                                                                   ^
      |                                                                   |
      |                                                                   <brace-enclosed initializer list>
./CPP_74.cpp:14:30: note:   initializing argument 1 of ‘void total_match(std_vector*, const std_vector*, const std_vector*)’
   14 | void total_match(std_vector *res, const std_vector *v1, const std_vector *v2) {
      |                  ~~~~~~~~~~~~^~~
In file included from ./CPP_74.cpp:45:
./CPP_74.cpp:60:89: error: ‘issame’ cannot be used as a function
   60 |     assert (issame(total_match({"hi", "admin"}, {"hI", "hi", "hi"}) , {"hI", "hi", "hi"}));
      |                                                                                         ^
./CPP_74.cpp:61:68: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   61 |     assert (issame(total_match({"hi", "admin"}, {"hI", "hi", "hii"}) , {"hi", "admin"}));
      |                                                                    ^
      |                                                                    |
      |                                                                    <brace-enclosed initializer list>
./CPP_74.cpp:14:30: note:   initializing argument 1 of ‘void total_match(std_vector*, const std_vector*, const std_vector*)’
   14 | void total_match(std_vector *res, const std_vector *v1, const std_vector *v2) {
      |                  ~~~~~~~~~~~~^~~
In file included from ./CPP_74.cpp:45:
./CPP_74.cpp:61:87: error: ‘issame’ cannot be used as a function
   61 |     assert (issame(total_match({"hi", "admin"}, {"hI", "hi", "hii"}) , {"hi", "admin"}));
      |                                                                                       ^
./CPP_74.cpp:62:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const std_vector*’
   62 |     assert (issame(total_match({}, {"this"}) , {}));
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_74.cpp:14:53: note:   initializing argument 2 of ‘void total_match(std_vector*, const std_vector*, const std_vector*)’
   14 | void total_match(std_vector *res, const std_vector *v1, const std_vector *v2) {
      |                                   ~~~~~~~~~~~~~~~~~~^~
In file included from ./CPP_74.cpp:45:
./CPP_74.cpp:62:50: error: ‘issame’ cannot be used as a function
   62 |     assert (issame(total_match({}, {"this"}) , {}));
      |                                                  ^
./CPP_74.cpp:63:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   63 |     assert (issame(total_match({"this"}, {}) , {}));
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_74.cpp:14:30: note:   initializing argument 1 of ‘void total_match(std_vector*, const std_vector*, const std_vector*)’
   14 | void total_match(std_vector *res, const std_vector *v1, const std_vector *v2) {
      |                  ~~~~~~~~~~~~^~~
In file included from ./CPP_74.cpp:45:
./CPP_74.cpp:63:50: error: ‘issame’ cannot be used as a function
   63 |     assert (issame(total_match({"this"}, {}) , {}));
      |                                                  ^


CPP_54.cpp: Compilation Failed
Error: ./CPP_54.cpp: In function ‘int same_chars(const char*, const char*)’:
./CPP_54.cpp:8:19: error: ‘strlen’ was not declared in this scope
    8 |   size_t s1_len = strlen(s1);
      |                   ^~~~~~
./CPP_54.cpp:3:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    2 | #include <stddef.h>
  +++ |+#include <cstring>
    3 | 


CPP_135.cpp: Compilation Failed
Error: In file included from ./CPP_135.cpp:31:
./CPP_135.cpp: In function ‘int main()’:
./CPP_135.cpp:33:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   33 |     assert (can_arrange({1,2,4,3,5})==3);
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_135.cpp:1:22: note:   initializing argument 1 of ‘int can_arrange(int*, int)’
    1 | int can_arrange(int* arr, int n) {
      |                 ~~~~~^~~
In file included from ./CPP_135.cpp:31:
./CPP_135.cpp:34:34: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   34 |     assert (can_arrange({1,2,4,5})==-1);
      |                                  ^
      |                                  |
      |                                  <brace-enclosed initializer list>
./CPP_135.cpp:1:22: note:   initializing argument 1 of ‘int can_arrange(int*, int)’
    1 | int can_arrange(int* arr, int n) {
      |                 ~~~~~^~~
In file included from ./CPP_135.cpp:31:
./CPP_135.cpp:35:45: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   35 |     assert (can_arrange({1,4,2,5,6,7,8,9,10})==2);
      |                                             ^
      |                                             |
      |                                             <brace-enclosed initializer list>
./CPP_135.cpp:1:22: note:   initializing argument 1 of ‘int can_arrange(int*, int)’
    1 | int can_arrange(int* arr, int n) {
      |                 ~~~~~^~~
In file included from ./CPP_135.cpp:31:
./CPP_135.cpp:36:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   36 |     assert (can_arrange({4,8,5,7,3})==4);
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_135.cpp:1:22: note:   initializing argument 1 of ‘int can_arrange(int*, int)’
    1 | int can_arrange(int* arr, int n) {
      |                 ~~~~~^~~
In file included from ./CPP_135.cpp:31:
./CPP_135.cpp:37:27: error: too few arguments to function ‘int can_arrange(int*, int)’
   37 |     assert (can_arrange({})==-1);
      |                           ^
./CPP_135.cpp:1:5: note: declared here
    1 | int can_arrange(int* arr, int n) {
      |     ^~~~~~~~~~~


CPP_8.cpp: Compilation Failed
Error: ./CPP_8.cpp: In function ‘void sum_product(std_vector*, const std_vector*)’:
./CPP_8.cpp:49:26: error: ‘malloc’ was not declared in this scope
   49 |   result->begin = (int *)malloc(8);
      |                          ^~~~~~
./CPP_8.cpp:2:1: note: ‘malloc’ is defined in header ‘<cstdlib>’; did you forget to ‘#include <cstdlib>’?
    1 | #include <stdint.h>
  +++ |+#include <cstdlib>
    2 | 
./CPP_8.cpp: At global scope:
./CPP_8.cpp:58:13: error: ‘vector’ was not declared in this scope; did you mean ‘std_vector’?
   58 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
      |             std_vector
./CPP_8.cpp:58:20: error: expected primary-expression before ‘int’
   58 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_8.cpp:58:27: error: ‘vector’ was not declared in this scope; did you mean ‘std_vector’?
   58 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
      |                           std_vector
./CPP_8.cpp:58:34: error: expected primary-expression before ‘int’
   58 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_8.cpp:58:39: error: expression list treated as compound expression in initializer [-fpermissive]
   58 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_8.cpp:57:
./CPP_8.cpp: In function ‘int main()’:
./CPP_8.cpp:67:34: error: too few arguments to function ‘void sum_product(std_vector*, const std_vector*)’
   67 |     assert (issame(sum_product({}) ,{0, 1}));
      |                                  ^
./CPP_8.cpp:9:6: note: declared here
    9 | void sum_product(std_vector *result, const std_vector *v) {
      |      ^~~~~~~~~~~
In file included from ./CPP_8.cpp:57:
./CPP_8.cpp:67:43: error: ‘issame’ cannot be used as a function
   67 |     assert (issame(sum_product({}) ,{0, 1}));
      |                                           ^
./CPP_8.cpp:68:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   68 |     assert (issame(sum_product({1, 1, 1}), {3, 1}));
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_8.cpp:9:30: note:   initializing argument 1 of ‘void sum_product(std_vector*, const std_vector*)’
    9 | void sum_product(std_vector *result, const std_vector *v) {
      |                  ~~~~~~~~~~~~^~~~~~
In file included from ./CPP_8.cpp:57:
./CPP_8.cpp:68:50: error: ‘issame’ cannot be used as a function
   68 |     assert (issame(sum_product({1, 1, 1}), {3, 1}));
      |                                                  ^
./CPP_8.cpp:69:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   69 |     assert (issame(sum_product({100, 0}),{100, 0}));
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_8.cpp:9:30: note:   initializing argument 1 of ‘void sum_product(std_vector*, const std_vector*)’
    9 | void sum_product(std_vector *result, const std_vector *v) {
      |                  ~~~~~~~~~~~~^~~~~~
In file included from ./CPP_8.cpp:57:
./CPP_8.cpp:69:50: error: ‘issame’ cannot be used as a function
   69 |     assert (issame(sum_product({100, 0}),{100, 0}));
      |                                                  ^
./CPP_8.cpp:70:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   70 |      assert (issame(sum_product({3, 5, 7}) , {3 + 5 + 7, 3 * 5 * 7}));
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_8.cpp:9:30: note:   initializing argument 1 of ‘void sum_product(std_vector*, const std_vector*)’
    9 | void sum_product(std_vector *result, const std_vector *v) {
      |                  ~~~~~~~~~~~~^~~~~~
In file included from ./CPP_8.cpp:57:
./CPP_8.cpp:70:68: error: ‘issame’ cannot be used as a function
   70 |      assert (issame(sum_product({3, 5, 7}) , {3 + 5 + 7, 3 * 5 * 7}));
      |                                                                    ^
./CPP_8.cpp:71:38: error: invalid conversion from ‘int’ to ‘std_vector*’ [-fpermissive]
   71 |       assert (issame(sum_product({10}) ,{10, 10}));
      |                                      ^
      |                                      |
      |                                      int
./CPP_8.cpp:71:38: error: too few arguments to function ‘void sum_product(std_vector*, const std_vector*)’
./CPP_8.cpp:9:6: note: declared here
    9 | void sum_product(std_vector *result, const std_vector *v) {
      |      ^~~~~~~~~~~
In file included from ./CPP_8.cpp:57:
./CPP_8.cpp:71:49: error: ‘issame’ cannot be used as a function
   71 |       assert (issame(sum_product({10}) ,{10, 10}));
      |                                                 ^


CPP_42.cpp: Compilation Failed
Error: ./CPP_42.cpp:26:13: error: ‘vector’ was not declared in this scope
   26 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_42.cpp:26:20: error: expected primary-expression before ‘int’
   26 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_42.cpp:26:27: error: ‘vector’ was not declared in this scope
   26 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_42.cpp:26:34: error: expected primary-expression before ‘int’
   26 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_42.cpp:26:39: error: expression list treated as compound expression in initializer [-fpermissive]
   26 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
./CPP_42.cpp:34:5: error: redefinition of ‘int main()’
   34 | int main(){
      |     ^~~~
./CPP_42.cpp:19:5: note: ‘int main()’ previously defined here
   19 | int main() {
      |     ^~~~
In file included from ./CPP_42.cpp:25:
./CPP_42.cpp: In function ‘int main()’:
./CPP_42.cpp:35:32: error: too few arguments to function ‘void incr_list(int*, int*)’
   35 |     assert (issame(incr_list({}) , {}));
      |                                ^
./CPP_42.cpp:3:6: note: declared here
    3 | void incr_list(int* sret, int* arg) {
      |      ^~~~~~~~~
In file included from ./CPP_42.cpp:25:
./CPP_42.cpp:35:38: error: ‘issame’ cannot be used as a function
   35 |     assert (issame(incr_list({}) , {}));
      |                                      ^
./CPP_42.cpp:36:39: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   36 |     assert (issame(incr_list({3, 2, 1}) , {4, 3, 2}));
      |                                       ^
      |                                       |
      |                                       <brace-enclosed initializer list>
./CPP_42.cpp:3:21: note:   initializing argument 1 of ‘void incr_list(int*, int*)’
    3 | void incr_list(int* sret, int* arg) {
      |                ~~~~~^~~~
In file included from ./CPP_42.cpp:25:
./CPP_42.cpp:36:52: error: ‘issame’ cannot be used as a function
   36 |     assert (issame(incr_list({3, 2, 1}) , {4, 3, 2}));
      |                                                    ^
./CPP_42.cpp:37:59: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   37 |     assert (issame(incr_list({5, 2, 5, 2, 3, 3, 9, 0, 123}) , {6, 3, 6, 3, 4, 4, 10, 1, 124}));
      |                                                           ^
      |                                                           |
      |                                                           <brace-enclosed initializer list>
./CPP_42.cpp:3:21: note:   initializing argument 1 of ‘void incr_list(int*, int*)’
    3 | void incr_list(int* sret, int* arg) {
      |                ~~~~~^~~~
In file included from ./CPP_42.cpp:25:
./CPP_42.cpp:37:93: error: ‘issame’ cannot be used as a function
   37 |     assert (issame(incr_list({5, 2, 5, 2, 3, 3, 9, 0, 123}) , {6, 3, 6, 3, 4, 4, 10, 1, 124}));
      |                                                                                             ^


CPP_133.cpp: Compilation Failed
Error: ./CPP_133.cpp: In function ‘int sum_squares(const std::vector<float>&)’:
./CPP_133.cpp:11:45: error: no matching function for call to ‘max(size_t, unsigned int)’
   11 |   size_t unroll_size = std::max(size / 2, 1u);
      |                                             ^
In file included from /usr/include/c++/9/vector:60,
                 from ./CPP_133.cpp:1:
/usr/include/c++/9/bits/stl_algobase.h:222:5: note: candidate: ‘template<class _Tp> constexpr const _Tp& std::max(const _Tp&, const _Tp&)’
  222 |     max(const _Tp& __a, const _Tp& __b)
      |     ^~~
/usr/include/c++/9/bits/stl_algobase.h:222:5: note:   template argument deduction/substitution failed:
./CPP_133.cpp:11:45: note:   deduced conflicting types for parameter ‘const _Tp’ (‘long unsigned int’ and ‘unsigned int’)
   11 |   size_t unroll_size = std::max(size / 2, 1u);
      |                                             ^
In file included from /usr/include/c++/9/vector:60,
                 from ./CPP_133.cpp:1:
/usr/include/c++/9/bits/stl_algobase.h:268:5: note: candidate: ‘template<class _Tp, class _Compare> constexpr const _Tp& std::max(const _Tp&, const _Tp&, _Compare)’
  268 |     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
      |     ^~~
/usr/include/c++/9/bits/stl_algobase.h:268:5: note:   template argument deduction/substitution failed:
./CPP_133.cpp:11:45: note:   deduced conflicting types for parameter ‘const _Tp’ (‘long unsigned int’ and ‘unsigned int’)
   11 |   size_t unroll_size = std::max(size / 2, 1u);
      |                                             ^


CPP_121.cpp: Compilation Failed
Error: ./CPP_121.cpp:3:29: error: ‘size_t’ has not been declared
    3 | int solutions(int32_t* arr, size_t size) {
      |                             ^~~~~~
./CPP_121.cpp: In function ‘int solutions(int32_t*, int)’:
./CPP_121.cpp:8:3: error: ‘size_t’ was not declared in this scope
    8 |   size_t n = size / 2;
      |   ^~~~~~
./CPP_121.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_121.cpp:9:7: error: ‘n’ was not declared in this scope
    9 |   if (n < 2) {
      |       ^
./CPP_121.cpp:14:14: error: expected ‘;’ before ‘i’
   14 |   for (size_t i = 0; i < n; i += 4) {
      |              ^~
      |              ;
./CPP_121.cpp:14:22: error: ‘i’ was not declared in this scope
   14 |   for (size_t i = 0; i < n; i += 4) {
      |                      ^
./CPP_121.cpp:14:26: error: ‘n’ was not declared in this scope
   14 |   for (size_t i = 0; i < n; i += 4) {
      |                          ^
./CPP_121.cpp:26:14: error: expected ‘;’ before ‘i’
   26 |   for (size_t i = 2*n; i < size; ++i) {
      |              ^~
      |              ;
./CPP_121.cpp:26:24: error: ‘i’ was not declared in this scope
   26 |   for (size_t i = 2*n; i < size; ++i) {
      |                        ^
In file included from ./CPP_121.cpp:34:
./CPP_121.cpp: In function ‘int main()’:
./CPP_121.cpp:36:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   36 |     assert (solutions({5, 8, 7, 1})    == 12);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_121.cpp:3:24: note:   initializing argument 1 of ‘int solutions(int32_t*, int)’
    3 | int solutions(int32_t* arr, size_t size) {
      |               ~~~~~~~~~^~~
In file included from ./CPP_121.cpp:34:
./CPP_121.cpp:37:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   37 |     assert (solutions({3, 3, 3, 3, 3}) == 9);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_121.cpp:3:24: note:   initializing argument 1 of ‘int solutions(int32_t*, int)’
    3 | int solutions(int32_t* arr, size_t size) {
      |               ~~~~~~~~~^~~
In file included from ./CPP_121.cpp:34:
./CPP_121.cpp:38:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   38 |     assert (solutions({30, 13, 24, 321}) == 0);
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_121.cpp:3:24: note:   initializing argument 1 of ‘int solutions(int32_t*, int)’
    3 | int solutions(int32_t* arr, size_t size) {
      |               ~~~~~~~~~^~~
In file included from ./CPP_121.cpp:34:
./CPP_121.cpp:39:29: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   39 |     assert (solutions({5, 9}) == 5);
      |                             ^
      |                             |
      |                             <brace-enclosed initializer list>
./CPP_121.cpp:3:24: note:   initializing argument 1 of ‘int solutions(int32_t*, int)’
    3 | int solutions(int32_t* arr, size_t size) {
      |               ~~~~~~~~~^~~
In file included from ./CPP_121.cpp:34:
./CPP_121.cpp:40:32: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   40 |     assert (solutions({2, 4, 8}) == 0);
      |                                ^
      |                                |
      |                                <brace-enclosed initializer list>
./CPP_121.cpp:3:24: note:   initializing argument 1 of ‘int solutions(int32_t*, int)’
    3 | int solutions(int32_t* arr, size_t size) {
      |               ~~~~~~~~~^~~
In file included from ./CPP_121.cpp:34:
./CPP_121.cpp:41:39: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   41 |     assert (solutions({30, 13, 23, 32}) == 23);
      |                                       ^
      |                                       |
      |                                       <brace-enclosed initializer list>
./CPP_121.cpp:3:24: note:   initializing argument 1 of ‘int solutions(int32_t*, int)’
    3 | int solutions(int32_t* arr, size_t size) {
      |               ~~~~~~~~~^~~
In file included from ./CPP_121.cpp:34:
./CPP_121.cpp:42:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   42 |     assert (solutions({3, 13, 2, 9}) == 3);
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_121.cpp:3:24: note:   initializing argument 1 of ‘int solutions(int32_t*, int)’
    3 | int solutions(int32_t* arr, size_t size) {
      |               ~~~~~~~~~^~~


CPP_109.cpp: Compilation Failed
Error: In file included from ./CPP_109.cpp:19:
./CPP_109.cpp: In function ‘int main()’:
./CPP_109.cpp:21:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   21 |     assert (move_one_ball({3, 4, 5, 1, 2})==true);
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_109.cpp:2:32: note:   initializing argument 1 of ‘int32_t move_one_ball(int32_t*)’
    2 | int32_t move_one_ball(int32_t* v) {
      |                       ~~~~~~~~~^
In file included from ./CPP_109.cpp:19:
./CPP_109.cpp:22:43: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   22 |     assert (move_one_ball({3, 5, 10, 1, 2})==true);
      |                                           ^
      |                                           |
      |                                           <brace-enclosed initializer list>
./CPP_109.cpp:2:32: note:   initializing argument 1 of ‘int32_t move_one_ball(int32_t*)’
    2 | int32_t move_one_ball(int32_t* v) {
      |                       ~~~~~~~~~^
In file included from ./CPP_109.cpp:19:
./CPP_109.cpp:23:39: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   23 |     assert (move_one_ball({4, 3, 1, 2})==false);
      |                                       ^
      |                                       |
      |                                       <brace-enclosed initializer list>
./CPP_109.cpp:2:32: note:   initializing argument 1 of ‘int32_t move_one_ball(int32_t*)’
    2 | int32_t move_one_ball(int32_t* v) {
      |                       ~~~~~~~~~^
In file included from ./CPP_109.cpp:19:
./CPP_109.cpp:24:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   24 |     assert (move_one_ball({3, 5, 4, 1, 2})==false);
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_109.cpp:2:32: note:   initializing argument 1 of ‘int32_t move_one_ball(int32_t*)’
    2 | int32_t move_one_ball(int32_t* v) {
      |                       ~~~~~~~~~^


CPP_5.cpp: Compilation Failed
Error: ./CPP_5.cpp:17:117: error: expected ‘,’ or ‘...’ before ‘this’
   17 | void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(struct std_vector* this, int* __pos, int* __v) {
      |                                                                                                                     ^~~~
./CPP_5.cpp: In function ‘void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(std_vector*)’:
./CPP_5.cpp:18:64: error: invalid use of ‘this’ in non-member function
   18 |     struct std_vector_impl* __impl = (struct std_vector_impl*)(this + 1);
      |                                                                ^~~~
./CPP_5.cpp:60:45: error: ‘__pos’ was not declared in this scope
   60 |     int* __insert_pos = __impl->_M_start + (__pos - __old_start);
      |                                             ^~~~~
./CPP_5.cpp:64:22: error: ‘__v’ was not declared in this scope
   64 |     *__insert_pos = *__v;
      |                      ^~~
./CPP_5.cpp: In function ‘void _Z11intersperseSt6vectorIiSaIiEEi(std_vector*, std_vector*, int)’:
./CPP_5.cpp:82:126: error: too many arguments to function ‘void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(std_vector*)’
   82 |     _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(__ret, (int*)NULL, (int*)NULL);
      |                                                                                                                              ^
./CPP_5.cpp:17:6: note: declared here
   17 | void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(struct std_vector* this, int* __pos, int* __v) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_5.cpp:88:126: error: too many arguments to function ‘void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(std_vector*)’
   88 |         _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(__ret, __ret_finish, __it);
      |                                                                                                                              ^
./CPP_5.cpp:17:6: note: declared here
   17 | void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(struct std_vector* this, int* __pos, int* __v) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_5.cpp:89:130: error: too many arguments to function ‘void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(std_vector*)’
   89 |         _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(__ret, __ret_finish, &__value);
      |                                                                                                                                  ^
./CPP_5.cpp:17:6: note: declared here
   17 | void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(struct std_vector* this, int* __pos, int* __v) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_5.cpp: At global scope:
./CPP_5.cpp:96:13: error: ‘vector’ was not declared in this scope
   96 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_5.cpp:96:20: error: expected primary-expression before ‘int’
   96 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_5.cpp:96:27: error: ‘vector’ was not declared in this scope
   96 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_5.cpp:96:34: error: expected primary-expression before ‘int’
   96 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_5.cpp:96:39: error: expression list treated as compound expression in initializer [-fpermissive]
   96 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_5.cpp:95:
./CPP_5.cpp: In function ‘int main()’:
./CPP_5.cpp:105:20: error: ‘intersperse’ was not declared in this scope
  105 |     assert (issame(intersperse({}, 7), {}));
      |                    ^~~~~~~~~~~
./CPP_5.cpp:105:42: error: ‘issame’ cannot be used as a function
  105 |     assert (issame(intersperse({}, 7), {}));
      |                                          ^
./CPP_5.cpp:107:70: error: ‘issame’ cannot be used as a function
  107 |     assert (issame(intersperse({5, 6, 3, 2}, 8),{5, 8, 6, 8, 3, 8, 2}));
      |                                                                      ^
./CPP_5.cpp:108:61: error: ‘issame’ cannot be used as a function
  108 |     assert (issame(intersperse({2, 2, 2}, 2),{2, 2, 2, 2, 2}));
      |                                                             ^


CPP_12.cpp: Compilation Failed
Error: In file included from ./CPP_12.cpp:59:
./CPP_12.cpp: In function ‘int main()’:
./CPP_12.cpp:61:23: error: too few arguments to function ‘void longest(BasicString*, Vector*)’
   61 |     assert (longest({}) == "");
      |                       ^
./CPP_12.cpp:32:6: note: declared here
   32 | void longest(struct BasicString* result, struct Vector* vec) {
      |      ^~~~~~~
In file included from ./CPP_12.cpp:59:
./CPP_12.cpp:62:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘BasicString*’
   62 |     assert (longest({"x", "y", "z"}) == "x");
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_12.cpp:32:34: note:   initializing argument 1 of ‘void longest(BasicString*, Vector*)’
   32 | void longest(struct BasicString* result, struct Vector* vec) {
      |              ~~~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_12.cpp:59:
./CPP_12.cpp:63:63: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘BasicString*’
   63 |     assert (longest({"x", "yyy", "zzzz", "www", "kkkk", "abc"}) == "zzzz");
      |                                                               ^
      |                                                               |
      |                                                               <brace-enclosed initializer list>
./CPP_12.cpp:32:34: note:   initializing argument 1 of ‘void longest(BasicString*, Vector*)’
   32 | void longest(struct BasicString* result, struct Vector* vec) {
      |              ~~~~~~~~~~~~~~~~~~~~^~~~~~


CPP_150.cpp: Execution Failed
Error: CPP_150: ./CPP_150.cpp:46: int main(): Assertion `x_or_y(1, 2, 0) == 0' failed.
Aborted (core dumped)


CPP_25.cpp: Compilation Failed
Error: ./CPP_25.cpp:81:13: error: ‘vector’ was not declared in this scope
   81 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_25.cpp:81:20: error: expected primary-expression before ‘int’
   81 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_25.cpp:81:27: error: ‘vector’ was not declared in this scope
   81 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_25.cpp:81:34: error: expected primary-expression before ‘int’
   81 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_25.cpp:81:39: error: expression list treated as compound expression in initializer [-fpermissive]
   81 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_25.cpp:80:
./CPP_25.cpp: In function ‘int main()’:
./CPP_25.cpp:90:20: error: ‘factorize’ was not declared in this scope; did you mean ‘factorizei’?
   90 |     assert (issame(factorize(2) , {2}));
      |                    ^~~~~~~~~
./CPP_25.cpp:90:38: error: ‘issame’ cannot be used as a function
   90 |     assert (issame(factorize(2) , {2}));
      |                                      ^
./CPP_25.cpp:91:41: error: ‘issame’ cannot be used as a function
   91 |     assert (issame(factorize(4) , {2, 2}));
      |                                         ^
./CPP_25.cpp:92:44: error: ‘issame’ cannot be used as a function
   92 |     assert (issame(factorize(8) , {2, 2, 2}));
      |                                            ^
./CPP_25.cpp:93:48: error: ‘issame’ cannot be used as a function
   93 |      assert (issame(factorize(3 * 19) , {3, 19}));
      |                                                ^
./CPP_25.cpp:94:63: error: ‘issame’ cannot be used as a function
   94 |     assert (issame(factorize(3 * 19 * 3 * 19) , {3, 3, 19, 19}));
      |                                                               ^
./CPP_25.cpp:95:79: error: ‘issame’ cannot be used as a function
   95 |     assert (issame(factorize(3 * 19 * 3 * 19 * 3 * 19) , {3, 3, 3, 19, 19, 19}));
      |                                                                               ^
./CPP_25.cpp:96:65: error: ‘issame’ cannot be used as a function
   96 |     assert (issame(factorize(3 * 19 * 19 * 19) , {3, 19, 19, 19}));
      |                                                                 ^
./CPP_25.cpp:97:52: error: ‘issame’ cannot be used as a function
   97 |     assert (issame(factorize(3 * 2 * 3) , {2, 3, 3}));
      |                                                    ^


CPP_89.cpp: Compilation Failed
Error: ./CPP_89.cpp:48:5: error: redefinition of ‘int main()’
   48 | int main(){
      |     ^~~~
./CPP_89.cpp:36:5: note: ‘int main()’ previously defined here
   36 | int main() {
      |     ^~~~
In file included from ./CPP_89.cpp:47:
./CPP_89.cpp: In function ‘int main()’:
./CPP_89.cpp:49:21: error: cannot convert ‘const char*’ to ‘basic_string*’
   49 |     assert (encrypt("hi") == "lm");
      |                     ^~~~
      |                     |
      |                     const char*
./CPP_89.cpp:18:28: note:   initializing argument 1 of ‘void encrypt(basic_string*, const basic_string*)’
   18 | void encrypt(basic_string* s, const basic_string* key) {
      |              ~~~~~~~~~~~~~~^
In file included from ./CPP_89.cpp:47:
./CPP_89.cpp:50:21: error: cannot convert ‘const char*’ to ‘basic_string*’
   50 |     assert (encrypt("asdfghjkl") == "ewhjklnop");
      |                     ^~~~~~~~~~~
      |                     |
      |                     const char*
./CPP_89.cpp:18:28: note:   initializing argument 1 of ‘void encrypt(basic_string*, const basic_string*)’
   18 | void encrypt(basic_string* s, const basic_string* key) {
      |              ~~~~~~~~~~~~~~^
In file included from ./CPP_89.cpp:47:
./CPP_89.cpp:51:21: error: cannot convert ‘const char*’ to ‘basic_string*’
   51 |     assert (encrypt("gf") == "kj");
      |                     ^~~~
      |                     |
      |                     const char*
./CPP_89.cpp:18:28: note:   initializing argument 1 of ‘void encrypt(basic_string*, const basic_string*)’
   18 | void encrypt(basic_string* s, const basic_string* key) {
      |              ~~~~~~~~~~~~~~^
In file included from ./CPP_89.cpp:47:
./CPP_89.cpp:52:21: error: cannot convert ‘const char*’ to ‘basic_string*’
   52 |     assert (encrypt("et") == "ix");
      |                     ^~~~
      |                     |
      |                     const char*
./CPP_89.cpp:18:28: note:   initializing argument 1 of ‘void encrypt(basic_string*, const basic_string*)’
   18 | void encrypt(basic_string* s, const basic_string* key) {
      |              ~~~~~~~~~~~~~~^
In file included from ./CPP_89.cpp:47:
./CPP_89.cpp:53:21: error: cannot convert ‘const char*’ to ‘basic_string*’
   53 |     assert (encrypt("faewfawefaewg")=="jeiajeaijeiak");
      |                     ^~~~~~~~~~~~~~~
      |                     |
      |                     const char*
./CPP_89.cpp:18:28: note:   initializing argument 1 of ‘void encrypt(basic_string*, const basic_string*)’
   18 | void encrypt(basic_string* s, const basic_string* key) {
      |              ~~~~~~~~~~~~~~^
In file included from ./CPP_89.cpp:47:
./CPP_89.cpp:54:21: error: cannot convert ‘const char*’ to ‘basic_string*’
   54 |     assert (encrypt("hellomyfriend")=="lippsqcjvmirh");
      |                     ^~~~~~~~~~~~~~~
      |                     |
      |                     const char*
./CPP_89.cpp:18:28: note:   initializing argument 1 of ‘void encrypt(basic_string*, const basic_string*)’
   18 | void encrypt(basic_string* s, const basic_string* key) {
      |              ~~~~~~~~~~~~~~^
In file included from ./CPP_89.cpp:47:
./CPP_89.cpp:55:21: error: cannot convert ‘const char*’ to ‘basic_string*’
   55 |     assert (encrypt("dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh")=="hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl");
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                     |
      |                     const char*
./CPP_89.cpp:18:28: note:   initializing argument 1 of ‘void encrypt(basic_string*, const basic_string*)’
   18 | void encrypt(basic_string* s, const basic_string* key) {
      |              ~~~~~~~~~~~~~~^
In file included from ./CPP_89.cpp:47:
./CPP_89.cpp:56:21: error: cannot convert ‘const char*’ to ‘basic_string*’
   56 |     assert (encrypt("a")=="e");
      |                     ^~~
      |                     |
      |                     const char*
./CPP_89.cpp:18:28: note:   initializing argument 1 of ‘void encrypt(basic_string*, const basic_string*)’
   18 | void encrypt(basic_string* s, const basic_string* key) {
      |              ~~~~~~~~~~~~~~^


CPP_64.cpp: Compilation Failed
Error: ./CPP_64.cpp: In function ‘int vowels_count(const char*)’:
./CPP_64.cpp:4:21: error: initializer-string for array of chars is too long [-fpermissive]
    4 |   char vowels[10] = "aeiouAEIOU";
      |                     ^~~~~~~~~~~~


CPP_128.cpp: Compilation Failed
Error: ./CPP_128.cpp:1:21: error: ‘vector’ is not a member of ‘std’
    1 | int prod_signs(std::vector<int> const& v) {
      |                     ^~~~~~
./CPP_128.cpp:1:1: note: ‘std::vector’ is defined in header ‘<vector>’; did you forget to ‘#include <vector>’?
  +++ |+#include <vector>
    1 | int prod_signs(std::vector<int> const& v) {
./CPP_128.cpp:1:28: error: expected primary-expression before ‘int’
    1 | int prod_signs(std::vector<int> const& v) {
      |                            ^~~
In file included from ./CPP_128.cpp:26:
./CPP_128.cpp: In function ‘int main()’:
./CPP_128.cpp:28:37: error: ‘prod_signs’ cannot be used as a function
   28 |     assert (prod_signs({1, 2, 2, -4}) == -9);
      |                                     ^
./CPP_128.cpp:29:30: error: ‘prod_signs’ cannot be used as a function
   29 |     assert (prod_signs({0, 1}) == 0);
      |                              ^
./CPP_128.cpp:30:46: error: ‘prod_signs’ cannot be used as a function
   30 |     assert (prod_signs({1, 1, 1, 2, 3, -1, 1}) == -10);
      |                                              ^
./CPP_128.cpp:31:26: error: ‘prod_signs’ cannot be used as a function
   31 |     assert (prod_signs({}) == -32768);
      |                          ^
./CPP_128.cpp:32:46: error: ‘prod_signs’ cannot be used as a function
   32 |     assert (prod_signs({2, 4,1, 2, -1, -1, 9}) == 20);
      |                                              ^
./CPP_128.cpp:33:38: error: ‘prod_signs’ cannot be used as a function
   33 |     assert (prod_signs({-1, 1, -1, 1}) == 4);
      |                                      ^
./CPP_128.cpp:34:37: error: ‘prod_signs’ cannot be used as a function
   34 |     assert (prod_signs({-1, 1, 1, 1}) == -4);
      |                                     ^
./CPP_128.cpp:35:37: error: ‘prod_signs’ cannot be used as a function
   35 |     assert (prod_signs({-1, 1, 1, 0}) == 0);
      |                                     ^


CPP_91.cpp: Compilation Failed
Error: ./CPP_91.cpp: In function ‘int is_bored(const char*)’:
./CPP_91.cpp:2:13: error: ‘strlen’ was not declared in this scope
    2 |   int len = strlen(str);
      |             ^~~~~~
./CPP_91.cpp:1:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
  +++ |+#include <cstring>
    1 | int is_bored(const char* str) {


CPP_73.cpp: Execution Failed
Error: CPP_73: ./CPP_73.cpp:23: int main(): Assertion `smallest_change({1,2,3,5,4,7,9,6}) == 4' failed.
Aborted (core dumped)


CPP_151.cpp: Compilation Failed
Error: ./CPP_151.cpp: In function ‘long long int double_the_difference(const std::vector<float>&)’:
./CPP_151.cpp:11:21: error: ‘roundf’ was not declared in this scope; did you mean ‘rounded’?
   11 |     float rounded = roundf(val);
      |                     ^~~~~~
      |                     rounded
./CPP_151.cpp: In function ‘int main()’:
./CPP_151.cpp:35:5: error: ‘vector’ was not declared in this scope; did you mean ‘std::vector’?
   35 |     vector<float> lst={};
      |     ^~~~~~
      |     std::vector
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_151.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:386:11: note: ‘std::vector’ declared here
  386 |     class vector : protected _Vector_base<_Tp, _Alloc>
      |           ^~~~~~
./CPP_151.cpp:35:12: error: expected primary-expression before ‘float’
   35 |     vector<float> lst={};
      |            ^~~~~
./CPP_151.cpp:39:9: error: ‘lst’ was not declared in this scope
   39 |         lst.push_back(i+0.0);
      |         ^~~
In file included from ./CPP_151.cpp:24:
./CPP_151.cpp:43:35: error: ‘lst’ was not declared in this scope
   43 |     assert (double_the_difference(lst) == odd_sum );
      |                                   ^~~


CPP_95.cpp: Compilation Failed
Error: ./CPP_95.cpp:4:48: error: field ‘_Alloc_hider’ has incomplete type ‘std__cxx11__basic_string__Alloc_hider’
    4 |   struct std__cxx11__basic_string__Alloc_hider _Alloc_hider;
      |                                                ^~~~~~~~~~~~
./CPP_95.cpp:4:10: note: forward declaration of ‘struct std__cxx11__basic_string__Alloc_hider’
    4 |   struct std__cxx11__basic_string__Alloc_hider _Alloc_hider;
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_95.cpp:25:20: error: field ‘_M_key_compare’ has incomplete type ‘std__less’
   25 |   struct std__less _M_key_compare;
      |                    ^~~~~~~~~~~~~~
./CPP_95.cpp:25:10: note: forward declaration of ‘struct std__less’
   25 |   struct std__less _M_key_compare;
      |          ^~~~~~~~~
./CPP_95.cpp:33:23: error: field ‘_M_t’ has incomplete type ‘std__Rb_tree’
   33 |   struct std__Rb_tree _M_t;
      |                       ^~~~
./CPP_95.cpp:33:10: note: forward declaration of ‘struct std__Rb_tree’
   33 |   struct std__Rb_tree _M_t;
      |          ^~~~~~~~~~~~
./CPP_95.cpp: In function ‘int check_dict_case(std__map*)’:
./CPP_95.cpp:60:8: error: ‘struct std__cxx11__basic_string’ has no member named ‘_M_capacity’
   60 |     _3._M_capacity = *(int64_t*)(((char*)_11) + 8);
      |        ^~~~~~~~~~~
./CPP_95.cpp:63:10: error: ‘struct std__cxx11__basic_string’ has no member named ‘_M_ptr’
   63 |       _3._M_ptr = (char*)malloc(_3._M_length + 1);
      |          ^~~~~~
./CPP_95.cpp:63:26: error: ‘malloc’ was not declared in this scope
   63 |       _3._M_ptr = (char*)malloc(_3._M_length + 1);
      |                          ^~~~~~
./CPP_95.cpp:2:1: note: ‘malloc’ is defined in header ‘<cstdlib>’; did you forget to ‘#include <cstdlib>’?
    1 | #include <stdint.h>
  +++ |+#include <cstdlib>
    2 | 
./CPP_95.cpp:65:10: error: ‘struct std__cxx11__basic_string’ has no member named ‘_M_capacity’
   65 |       _3._M_capacity = _3._M_length;
      |          ^~~~~~~~~~~
./CPP_95.cpp:68:27: error: ‘struct std__cxx11__basic_string’ has no member named ‘_M_ptr’
   68 |     char* _12 = (char*)_3._M_ptr;
      |                           ^~~~~~
./CPP_95.cpp:78:9: error: ‘memcpy’ was not declared in this scope
   78 |         memcpy(_12, ((char*)_11) + 0, _3._M_length);
      |         ^~~~~~
./CPP_95.cpp:2:1: note: ‘memcpy’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    1 | #include <stdint.h>
  +++ |+#include <cstring>
    2 | 
./CPP_95.cpp:83:24: error: ‘struct std__cxx11__basic_string’ has no member named ‘_M_ptr’
   83 |     if (_13 == 0 || _3._M_ptr == (char*)(((char*)_11) + 0)) {
      |                        ^~~~~~
In file included from ./CPP_95.cpp:137:
./CPP_95.cpp: In function ‘int main()’:
./CPP_95.cpp:139:64: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std__map*’
  139 |     assert (check_dict_case({{"p","pineapple"}, {"b","banana"}}) == true);
      |                                                                ^
      |                                                                |
      |                                                                <brace-enclosed initializer list>
./CPP_95.cpp:41:38: note:   initializing argument 1 of ‘int check_dict_case(std__map*)’
   41 | int check_dict_case(struct std__map* arg_0) {
      |                     ~~~~~~~~~~~~~~~~~^~~~~
In file included from ./CPP_95.cpp:137:
./CPP_95.cpp:140:80: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std__map*’
  140 |     assert (check_dict_case({{"p","pineapple"}, {"A","banana"}, {"B","banana"}}) == false);
      |                                                                                ^
      |                                                                                |
      |                                                                                <brace-enclosed initializer list>
./CPP_95.cpp:41:38: note:   initializing argument 1 of ‘int check_dict_case(std__map*)’
   41 | int check_dict_case(struct std__map* arg_0) {
      |                     ~~~~~~~~~~~~~~~~~^~~~~
In file included from ./CPP_95.cpp:137:
./CPP_95.cpp:141:79: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std__map*’
  141 |     assert (check_dict_case({{"p","pineapple"}, {"5","banana"}, {"a","apple"}}) == false);
      |                                                                               ^
      |                                                                               |
      |                                                                               <brace-enclosed initializer list>
./CPP_95.cpp:41:38: note:   initializing argument 1 of ‘int check_dict_case(std__map*)’
   41 | int check_dict_case(struct std__map* arg_0) {
      |                     ~~~~~~~~~~~~~~~~~^~~~~
In file included from ./CPP_95.cpp:137:
./CPP_95.cpp:142:80: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std__map*’
  142 |     assert (check_dict_case({{"Name","John"}, {"Age","36"}, {"City","Houston"}}) == false);
      |                                                                                ^
      |                                                                                |
      |                                                                                <brace-enclosed initializer list>
./CPP_95.cpp:41:38: note:   initializing argument 1 of ‘int check_dict_case(std__map*)’
   41 | int check_dict_case(struct std__map* arg_0) {
      |                     ~~~~~~~~~~~~~~~~~^~~~~
In file included from ./CPP_95.cpp:137:
./CPP_95.cpp:143:63: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std__map*’
  143 |     assert (check_dict_case({{"STATE","NC"}, {"ZIP","12345"} }) == true  );
      |                                                               ^
      |                                                               |
      |                                                               <brace-enclosed initializer list>
./CPP_95.cpp:41:38: note:   initializing argument 1 of ‘int check_dict_case(std__map*)’
   41 | int check_dict_case(struct std__map* arg_0) {
      |                     ~~~~~~~~~~~~~~~~~^~~~~
In file included from ./CPP_95.cpp:137:
./CPP_95.cpp:144:69: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std__map*’
  144 |     assert (check_dict_case({{"fruit","Orange"}, {"taste","Sweet"} }) == true  );
      |                                                                     ^
      |                                                                     |
      |                                                                     <brace-enclosed initializer list>
./CPP_95.cpp:41:38: note:   initializing argument 1 of ‘int check_dict_case(std__map*)’
   41 | int check_dict_case(struct std__map* arg_0) {
      |                     ~~~~~~~~~~~~~~~~~^~~~~


Summary
=======
Total files processed: 100
Compilation failures: 84
Execution failures: 10
Assertion failures: 0

Detailed Results
===============
CPP_30.cpp Compilation Failed
CPP_9.cpp Compilation Failed
CPP_35.cpp Compilation Failed
CPP_138.cpp Compilation Failed
CPP_134.cpp Execution Failed
CPP_102.cpp Execution Failed
CPP_18.cpp Compilation Failed
CPP_45.cpp Compilation Failed
CPP_21.cpp Compilation Failed
CPP_78.cpp Compilation Failed
CPP_63.cpp Compilation Failed
CPP_100.cpp Compilation Failed
CPP_106.cpp Compilation Failed
CPP_83.cpp Compilation Failed
CPP_6.cpp Compilation Failed
CPP_116.cpp Compilation Failed
CPP_71.cpp Compilation Failed
CPP_99.cpp Compilation Failed
CPP_82.cpp Compilation Failed
CPP_39.cpp Compilation Failed
CPP_56.cpp Compilation Failed
CPP_11.cpp Compilation Failed
CPP_146.cpp Compilation Failed
CPP_59.cpp Compilation Failed
CPP_77.cpp Compilation Failed
CPP_98.cpp Execution Failed
CPP_41.cpp Passed
CPP_0.cpp Compilation Failed
CPP_157.cpp Compilation Failed
CPP_141.cpp Compilation Failed
CPP_127.cpp Compilation Failed
CPP_31.cpp Passed
CPP_122.cpp Compilation Failed
CPP_49.cpp Compilation Failed
CPP_55.cpp Execution Failed
CPP_115.cpp Compilation Failed
CPP_40.cpp Compilation Failed
CPP_130.cpp Compilation Failed
CPP_48.cpp Compilation Failed
CPP_155.cpp Compilation Failed
CPP_96.cpp Compilation Failed
CPP_3.cpp Compilation Failed
CPP_97.cpp Compilation Failed
CPP_4.cpp Compilation Failed
CPP_60.cpp Passed
CPP_76.cpp Execution Failed
CPP_80.cpp Compilation Failed
CPP_23.cpp Passed
CPP_136.cpp Compilation Failed
CPP_27.cpp Compilation Failed
CPP_16.cpp Compilation Failed
CPP_72.cpp Execution Failed
CPP_24.cpp Compilation Failed
CPP_92.cpp Compilation Failed
CPP_43.cpp Passed
CPP_53.cpp Compilation Failed
CPP_126.cpp Compilation Failed
CPP_52.cpp Compilation Failed
CPP_2.cpp Compilation Failed
CPP_139.cpp Compilation Failed
CPP_57.cpp Compilation Failed
CPP_159.cpp Compilation Failed
CPP_108.cpp Execution Failed
CPP_61.cpp Compilation Failed
CPP_20.cpp Compilation Failed
CPP_13.cpp Passed
CPP_124.cpp Compilation Failed
CPP_75.cpp Compilation Failed
CPP_142.cpp Compilation Failed
CPP_66.cpp Compilation Failed
CPP_114.cpp Compilation Failed
CPP_85.cpp Compilation Failed
CPP_46.cpp Compilation Failed
CPP_28.cpp Compilation Failed
CPP_62.cpp Compilation Failed
CPP_36.cpp Compilation Failed
CPP_131.cpp Compilation Failed
CPP_152.cpp Compilation Failed
CPP_132.cpp Execution Failed
CPP_68.cpp Compilation Failed
CPP_163.cpp Compilation Failed
CPP_74.cpp Compilation Failed
CPP_54.cpp Compilation Failed
CPP_135.cpp Compilation Failed
CPP_8.cpp Compilation Failed
CPP_42.cpp Compilation Failed
CPP_133.cpp Compilation Failed
CPP_121.cpp Compilation Failed
CPP_109.cpp Compilation Failed
CPP_5.cpp Compilation Failed
CPP_12.cpp Compilation Failed
CPP_150.cpp Execution Failed
CPP_25.cpp Compilation Failed
CPP_89.cpp Compilation Failed
CPP_64.cpp Compilation Failed
CPP_128.cpp Compilation Failed
CPP_91.cpp Compilation Failed
CPP_73.cpp Execution Failed
CPP_151.cpp Compilation Failed
CPP_95.cpp Compilation Failed
