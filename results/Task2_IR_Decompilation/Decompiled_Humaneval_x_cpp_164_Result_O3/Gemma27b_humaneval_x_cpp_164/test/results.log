Compilation and Execution Results
=================================

CPP_30.cpp: Compilation Failed
Error: ./CPP_30.cpp:54:13: error: ‘vector’ was not declared in this scope
   54 | bool issame(vector<float> a,vector<float>b){
      |             ^~~~~~
./CPP_30.cpp:54:20: error: expected primary-expression before ‘float’
   54 | bool issame(vector<float> a,vector<float>b){
      |                    ^~~~~
./CPP_30.cpp:54:29: error: ‘vector’ was not declared in this scope
   54 | bool issame(vector<float> a,vector<float>b){
      |                             ^~~~~~
./CPP_30.cpp:54:36: error: expected primary-expression before ‘float’
   54 | bool issame(vector<float> a,vector<float>b){
      |                                    ^~~~~
./CPP_30.cpp:54:43: error: expression list treated as compound expression in initializer [-fpermissive]
   54 | bool issame(vector<float> a,vector<float>b){
      |                                           ^
In file included from ./CPP_30.cpp:53:
./CPP_30.cpp: In function ‘int main()’:
./CPP_30.cpp:63:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   63 |     assert (issame(get_positive({-1, -2, 4, 5, 6}) , {4, 5, 6} ));
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_30.cpp:9:31: note:   initializing argument 1 of ‘void get_positive(std_vector*, const std_vector*)’
    9 | void get_positive(std_vector *dest, const std_vector *src) {
      |                   ~~~~~~~~~~~~^~~~
In file included from ./CPP_30.cpp:53:
./CPP_30.cpp:63:64: error: ‘issame’ cannot be used as a function
   63 |     assert (issame(get_positive({-1, -2, 4, 5, 6}) , {4, 5, 6} ));
      |                                                                ^
./CPP_30.cpp:64:71: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   64 |     assert (issame(get_positive({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}) , {5, 3, 2, 3, 3, 9, 123, 1}));
      |                                                                       ^
      |                                                                       |
      |                                                                       <brace-enclosed initializer list>
./CPP_30.cpp:9:31: note:   initializing argument 1 of ‘void get_positive(std_vector*, const std_vector*)’
    9 | void get_positive(std_vector *dest, const std_vector *src) {
      |                   ~~~~~~~~~~~~^~~~
In file included from ./CPP_30.cpp:53:
./CPP_30.cpp:64:101: error: ‘issame’ cannot be used as a function
   64 |     assert (issame(get_positive({5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}) , {5, 3, 2, 3, 3, 9, 123, 1}));
      |                                                                                                     ^
./CPP_30.cpp:65:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   65 |      assert (issame(get_positive({-1, -2}) , {} ));
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_30.cpp:9:31: note:   initializing argument 1 of ‘void get_positive(std_vector*, const std_vector*)’
    9 | void get_positive(std_vector *dest, const std_vector *src) {
      |                   ~~~~~~~~~~~~^~~~
In file included from ./CPP_30.cpp:53:
./CPP_30.cpp:65:49: error: ‘issame’ cannot be used as a function
   65 |      assert (issame(get_positive({-1, -2}) , {} ));
      |                                                 ^
./CPP_30.cpp:66:36: error: too few arguments to function ‘void get_positive(std_vector*, const std_vector*)’
   66 |      assert (issame(get_positive({}) , {}));
      |                                    ^
./CPP_30.cpp:9:6: note: declared here
    9 | void get_positive(std_vector *dest, const std_vector *src) {
      |      ^~~~~~~~~~~~
In file included from ./CPP_30.cpp:53:
./CPP_30.cpp:66:42: error: ‘issame’ cannot be used as a function
   66 |      assert (issame(get_positive({}) , {}));
      |                                          ^


CPP_9.cpp: Compilation Failed
Error: ./CPP_9.cpp: In function ‘void rolling_maxSt6vectorIiSaIiEE(void*, void*)’:
./CPP_9.cpp:4:3: error: ‘memset’ was not declared in this scope
    4 |   memset(__return_buffer, 0, 24);
      |   ^~~~~~
./CPP_9.cpp:2:1: note: ‘memset’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    1 | #include <stdlib.h>
  +++ |+#include <cstring>
    2 | 
./CPP_9.cpp:14:16: error: invalid conversion from ‘int*’ to ‘int’ [-fpermissive]
   14 |   *ret_begin = i;
      |                ^
      |                |
      |                int*
./CPP_9.cpp: At global scope:
./CPP_9.cpp:26:13: error: ‘vector’ was not declared in this scope
   26 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_9.cpp:26:20: error: expected primary-expression before ‘int’
   26 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_9.cpp:26:27: error: ‘vector’ was not declared in this scope
   26 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_9.cpp:26:34: error: expected primary-expression before ‘int’
   26 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_9.cpp:26:39: error: expression list treated as compound expression in initializer [-fpermissive]
   26 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_9.cpp:25:
./CPP_9.cpp: In function ‘int main()’:
./CPP_9.cpp:35:21: error: ‘rolling_max’ was not declared in this scope
   35 |      assert (issame(rolling_max({}),{}));
      |                     ^~~~~~~~~~~
./CPP_9.cpp:35:39: error: ‘issame’ cannot be used as a function
   35 |      assert (issame(rolling_max({}),{}));
      |                                       ^
./CPP_9.cpp:36:60: error: ‘issame’ cannot be used as a function
   36 |     assert (issame(rolling_max({1, 2, 3, 4}) , {1, 2, 3, 4}));
      |                                                            ^
./CPP_9.cpp:37:59: error: ‘issame’ cannot be used as a function
   37 |      assert (issame(rolling_max({4, 3, 2, 1}),{4, 4, 4, 4}));
      |                                                           ^
./CPP_9.cpp:38:73: error: ‘issame’ cannot be used as a function
   38 |       assert (issame(rolling_max({3, 2, 3, 100, 3}) ,{3, 3, 3, 100, 100}));
      |                                                                         ^


CPP_35.cpp: Compilation Failed
Error: ./CPP_35.cpp: In function ‘float max_element(const std::vector<float>&)’:
./CPP_35.cpp:4:25: error: invalid conversion from ‘const float*’ to ‘float*’ [-fpermissive]
    4 |   float* end = v.data() + v.size();
      |                ~~~~~~~~~^~~~~~~~~~
      |                         |
      |                         const float*
./CPP_35.cpp:5:24: error: invalid conversion from ‘const float*’ to ‘float*’ [-fpermissive]
    5 |   float* begin = v.data();
      |                  ~~~~~~^~
      |                        |
      |                        const float*
In file included from ./CPP_35.cpp:19:
./CPP_35.cpp: In function ‘int main()’:
./CPP_35.cpp:21:13: error: ‘abs’ was not declared in this scope
   21 |     assert (abs(max_element({1, 2, 3})- 3)<1e-4);
      |             ^~~


CPP_138.cpp: Compilation Failed
Error: ./CPP_138.cpp:6:1: error: stray ‘`’ in program
    6 | ```
      | ^
./CPP_138.cpp:6:2: error: stray ‘`’ in program
    6 | ```
      |  ^
./CPP_138.cpp:6:3: error: stray ‘`’ in program
    6 | ```
      |   ^
./CPP_138.cpp:8:1: error: expected unqualified-id before ‘<’ token
    8 | <|im_end|>
      | ^
In file included from ./CPP_138.cpp:10:
./CPP_138.cpp: In function ‘int main()’:
./CPP_138.cpp:12:5: error: ‘__assert_fail’ was not declared in this scope
   12 |     assert (is_equal_to_sum_even(4) == false);
      |     ^~~~~~


CPP_134.cpp: Compilation Failed
Error: ./CPP_134.cpp: In function ‘int check_if_last_char_is_a_letter(const char*)’:
./CPP_134.cpp:4:15: error: ‘strlen’ was not declared in this scope
    4 |     int len = strlen(str);
      |               ^~~~~~
./CPP_134.cpp:2:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    1 | #include <stdint.h>
  +++ |+#include <cstring>
    2 | 


CPP_102.cpp: Execution Failed
Error: CPP_102: ./CPP_102.cpp:22: int main(): Assertion `choose_num(12, 15) == 14' failed.
Aborted (core dumped)


CPP_45.cpp: Compilation Failed
Error: In file included from ./CPP_45.cpp:8:
./CPP_45.cpp: In function ‘int main()’:
./CPP_45.cpp:10:13: error: ‘abs’ was not declared in this scope
   10 |     assert (abs(triangle_area(5, 3) - 7.5)<1e-4);
      |             ^~~


CPP_21.cpp: Compilation Failed
Error: ./CPP_21.cpp:37:13: error: ‘vector’ was not declared in this scope
   37 | bool issame(vector<float> a,vector<float>b){
      |             ^~~~~~
./CPP_21.cpp:37:20: error: expected primary-expression before ‘float’
   37 | bool issame(vector<float> a,vector<float>b){
      |                    ^~~~~
./CPP_21.cpp:37:29: error: ‘vector’ was not declared in this scope
   37 | bool issame(vector<float> a,vector<float>b){
      |                             ^~~~~~
./CPP_21.cpp:37:36: error: expected primary-expression before ‘float’
   37 | bool issame(vector<float> a,vector<float>b){
      |                                    ^~~~~
./CPP_21.cpp:37:43: error: expression list treated as compound expression in initializer [-fpermissive]
   37 | bool issame(vector<float> a,vector<float>b){
      |                                           ^
./CPP_21.cpp:45:5: error: redefinition of ‘int main()’
   45 | int main(){
      |     ^~~~
./CPP_21.cpp:21:5: note: ‘int main()’ previously defined here
   21 | int main() {
      |     ^~~~
In file included from ./CPP_21.cpp:36:
./CPP_21.cpp: In function ‘int main()’:
./CPP_21.cpp:46:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   46 |     assert (issame(rescale_to_unit({2.0, 49.9}) , {0.0, 1.0}));
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_21.cpp:3:29: note:   initializing argument 1 of ‘void rescale_to_unit(float*, float*, int)’
    3 | void rescale_to_unit(float* dst, float* src, int n) {
      |                      ~~~~~~~^~~
In file included from ./CPP_21.cpp:36:
./CPP_21.cpp:46:61: error: ‘issame’ cannot be used as a function
   46 |     assert (issame(rescale_to_unit({2.0, 49.9}) , {0.0, 1.0}));
      |                                                             ^
./CPP_21.cpp:47:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   47 |      assert (issame(rescale_to_unit({100.0, 49.9}) ,{1.0, 0.0}));
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_21.cpp:3:29: note:   initializing argument 1 of ‘void rescale_to_unit(float*, float*, int)’
    3 | void rescale_to_unit(float* dst, float* src, int n) {
      |                      ~~~~~~~^~~
In file included from ./CPP_21.cpp:36:
./CPP_21.cpp:47:63: error: ‘issame’ cannot be used as a function
   47 |      assert (issame(rescale_to_unit({100.0, 49.9}) ,{1.0, 0.0}));
      |                                                               ^
./CPP_21.cpp:48:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   48 |      assert (issame(rescale_to_unit({1.0, 2.0, 3.0, 4.0, 5.0}) , {0.0, 0.25, 0.5, 0.75, 1.0}));
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_21.cpp:3:29: note:   initializing argument 1 of ‘void rescale_to_unit(float*, float*, int)’
    3 | void rescale_to_unit(float* dst, float* src, int n) {
      |                      ~~~~~~~^~~
In file included from ./CPP_21.cpp:36:
./CPP_21.cpp:48:93: error: ‘issame’ cannot be used as a function
   48 |      assert (issame(rescale_to_unit({1.0, 2.0, 3.0, 4.0, 5.0}) , {0.0, 0.25, 0.5, 0.75, 1.0}));
      |                                                                                             ^
./CPP_21.cpp:49:61: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   49 |     assert (issame(rescale_to_unit({2.0, 1.0, 5.0, 3.0, 4.0}) , {0.25, 0.0, 1.0, 0.5, 0.75}));
      |                                                             ^
      |                                                             |
      |                                                             <brace-enclosed initializer list>
./CPP_21.cpp:3:29: note:   initializing argument 1 of ‘void rescale_to_unit(float*, float*, int)’
    3 | void rescale_to_unit(float* dst, float* src, int n) {
      |                      ~~~~~~~^~~
In file included from ./CPP_21.cpp:36:
./CPP_21.cpp:49:92: error: ‘issame’ cannot be used as a function
   49 |     assert (issame(rescale_to_unit({2.0, 1.0, 5.0, 3.0, 4.0}) , {0.25, 0.0, 1.0, 0.5, 0.75}));
      |                                                                                            ^
./CPP_21.cpp:50:67: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   50 |      assert (issame(rescale_to_unit({12.0, 11.0, 15.0, 13.0, 14.0}) ,{0.25, 0.0, 1.0, 0.5, 0.75}));
      |                                                                   ^
      |                                                                   |
      |                                                                   <brace-enclosed initializer list>
./CPP_21.cpp:3:29: note:   initializing argument 1 of ‘void rescale_to_unit(float*, float*, int)’
    3 | void rescale_to_unit(float* dst, float* src, int n) {
      |                      ~~~~~~~^~~
In file included from ./CPP_21.cpp:36:
./CPP_21.cpp:50:97: error: ‘issame’ cannot be used as a function
   50 |      assert (issame(rescale_to_unit({12.0, 11.0, 15.0, 13.0, 14.0}) ,{0.25, 0.0, 1.0, 0.5, 0.75}));
      |                                                                                                 ^


CPP_63.cpp: Compilation Failed
Error: In file included from ./CPP_63.cpp:22:
./CPP_63.cpp: In function ‘int main()’:
./CPP_63.cpp:24:13: error: ‘fibfib’ was not declared in this scope
   24 |     assert (fibfib(2) == 1);
      |             ^~~~~~


CPP_100.cpp: Compilation Failed
Error: ./CPP_100.cpp:37:13: error: ‘vector’ is not a template
   37 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_100.cpp:37:27: error: ‘vector’ is not a template
   37 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_100.cpp: In function ‘bool issame(vector, vector)’:
./CPP_100.cpp:38:11: error: ‘struct vector’ has no member named ‘size’
   38 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_100.cpp:38:21: error: ‘struct vector’ has no member named ‘size’
   38 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_100.cpp:39:22: error: ‘struct vector’ has no member named ‘size’
   39 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_100.cpp:41:10: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   41 |     if (a[i]!=b[i]) return false;
      |          ^
./CPP_100.cpp:41:16: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   41 |     if (a[i]!=b[i]) return false;
      |                ^
In file included from ./CPP_100.cpp:36:
./CPP_100.cpp: In function ‘int main()’:
./CPP_100.cpp:46:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
   46 |     assert (issame(make_a_pile(3) , {3, 5, 7}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:46:33: error: too few arguments to function ‘void make_a_pile(vector*, int)’
   46 |     assert (issame(make_a_pile(3) , {3, 5, 7}));
      |                                 ^
./CPP_100.cpp:13:6: note: declared here
   13 | void make_a_pile(vector * v, int n) {
      |      ^~~~~~~~~~~
In file included from ./CPP_100.cpp:36:
./CPP_100.cpp:47:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
   47 |     assert (issame(make_a_pile(4) , {4,6,8,10}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:47:33: error: too few arguments to function ‘void make_a_pile(vector*, int)’
   47 |     assert (issame(make_a_pile(4) , {4,6,8,10}));
      |                                 ^
./CPP_100.cpp:13:6: note: declared here
   13 | void make_a_pile(vector * v, int n) {
      |      ^~~~~~~~~~~
In file included from ./CPP_100.cpp:36:
./CPP_100.cpp:48:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
   48 |     assert (issame(make_a_pile(5) , {5, 7, 9, 11, 13}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:48:33: error: too few arguments to function ‘void make_a_pile(vector*, int)’
   48 |     assert (issame(make_a_pile(5) , {5, 7, 9, 11, 13}));
      |                                 ^
./CPP_100.cpp:13:6: note: declared here
   13 | void make_a_pile(vector * v, int n) {
      |      ^~~~~~~~~~~
In file included from ./CPP_100.cpp:36:
./CPP_100.cpp:49:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
   49 |     assert (issame(make_a_pile(6) , {6, 8, 10, 12, 14, 16}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:49:33: error: too few arguments to function ‘void make_a_pile(vector*, int)’
   49 |     assert (issame(make_a_pile(6) , {6, 8, 10, 12, 14, 16}));
      |                                 ^
./CPP_100.cpp:13:6: note: declared here
   13 | void make_a_pile(vector * v, int n) {
      |      ^~~~~~~~~~~
In file included from ./CPP_100.cpp:36:
./CPP_100.cpp:50:32: error: invalid conversion from ‘int’ to ‘vector*’ [-fpermissive]
   50 |     assert (issame(make_a_pile(8) , {8, 10, 12, 14, 16, 18, 20, 22}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:50:33: error: too few arguments to function ‘void make_a_pile(vector*, int)’
   50 |     assert (issame(make_a_pile(8) , {8, 10, 12, 14, 16, 18, 20, 22}));
      |                                 ^
./CPP_100.cpp:13:6: note: declared here
   13 | void make_a_pile(vector * v, int n) {
      |      ^~~~~~~~~~~


CPP_106.cpp: Compilation Failed
Error: ./CPP_106.cpp:4:23: error: field ‘base’ has incomplete type ‘_Vector_base’
    4 |   struct _Vector_base base;
      |                       ^~~~
./CPP_106.cpp:4:10: note: forward declaration of ‘struct _Vector_base’
    4 |   struct _Vector_base base;
      |          ^~~~~~~~~~~~
./CPP_106.cpp:8:33: error: field ‘impl’ has incomplete type ‘_Vector_base_impl_data’
    8 |   struct _Vector_base_impl_data impl;
      |                                 ^~~~
./CPP_106.cpp:8:10: note: forward declaration of ‘struct _Vector_base_impl_data’
    8 |   struct _Vector_base_impl_data impl;
      |          ^~~~~~~~~~~~~~~~~~~~~~
./CPP_106.cpp:17:31: error: expected ‘,’ or ‘...’ before ‘this’
   17 | void _Z1fi(struct std_vector *this, int count) {
      |                               ^~~~
./CPP_106.cpp: In function ‘void _Z1fi(std_vector*)’:
./CPP_106.cpp:18:16: error: invalid use of ‘this’ in non-member function
   18 |   int *begin = this->base.impl.data;
      |                ^~~~
./CPP_106.cpp:19:14: error: invalid use of ‘this’ in non-member function
   19 |   int *end = this->base.impl.data_end;
      |              ^~~~
./CPP_106.cpp:20:19: error: invalid use of ‘this’ in non-member function
   20 |   int *capacity = this->base.impl.capacity;
      |                   ^~~~
./CPP_106.cpp:22:7: error: ‘count’ was not declared in this scope
   22 |   if (count < 1) {
      |       ^~~~~
./CPP_106.cpp:27:19: error: ‘count’ was not declared in this scope
   27 |   for (i = 0; i < count; i++) {
      |                   ^~~~~
./CPP_106.cpp:30:29: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
   30 |       int *new_data = malloc(sizeof(int) * new_capacity);
      |                       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                             |
      |                             void*
./CPP_106.cpp:41:7: error: invalid use of ‘this’ in non-member function
   41 |       this->base.impl.data = new_data;
      |       ^~~~
./CPP_106.cpp:42:7: error: invalid use of ‘this’ in non-member function
   42 |       this->base.impl.data_end = new_end;
      |       ^~~~
./CPP_106.cpp:43:7: error: invalid use of ‘this’ in non-member function
   43 |       this->base.impl.capacity = new_data + new_capacity;
      |       ^~~~
./CPP_106.cpp:52:3: error: invalid use of ‘this’ in non-member function
   52 |   this->base.impl.data_end = begin;
      |   ^~~~
./CPP_106.cpp: At global scope:
./CPP_106.cpp:57:13: error: ‘vector’ was not declared in this scope
   57 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_106.cpp:57:20: error: expected primary-expression before ‘int’
   57 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_106.cpp:57:27: error: ‘vector’ was not declared in this scope
   57 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_106.cpp:57:34: error: expected primary-expression before ‘int’
   57 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_106.cpp:57:39: error: expression list treated as compound expression in initializer [-fpermissive]
   57 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_106.cpp:56:
./CPP_106.cpp: In function ‘int main()’:
./CPP_106.cpp:66:20: error: ‘f’ was not declared in this scope
   66 |     assert (issame(f(5) , {1, 2, 6, 24, 15}));
      |                    ^
./CPP_106.cpp:66:44: error: ‘issame’ cannot be used as a function
   66 |     assert (issame(f(5) , {1, 2, 6, 24, 15}));
      |                                            ^
./CPP_106.cpp:67:53: error: ‘issame’ cannot be used as a function
   67 |     assert (issame(f(7) , {1, 2, 6, 24, 15, 720, 28}));
      |                                                     ^
./CPP_106.cpp:68:30: error: ‘issame’ cannot be used as a function
   68 |     assert (issame(f(1) , {1}));
      |                              ^
./CPP_106.cpp:69:36: error: ‘issame’ cannot be used as a function
   69 |     assert (issame(f(3) , {1, 2, 6}));
      |                                    ^


CPP_83.cpp: Compilation Failed
Error: ./CPP_83.cpp: In function ‘int _Z15starts_one_endsi(int)’:
./CPP_83.cpp:31:15: error: invalid array assignment
   31 |       arg10 = arg13;
      |               ^~~~~
./CPP_83.cpp:32:15: error: invalid array assignment
   32 |       arg11 = arg14;
      |               ^~~~~
./CPP_83.cpp:41:15: error: invalid array assignment
   41 |       arg16 = arg18;
      |               ^~~~~
./CPP_83.cpp:42:15: error: invalid array assignment
   42 |       arg17 = arg19;
      |               ^~~~~
In file included from ./CPP_83.cpp:66:
./CPP_83.cpp: In function ‘int main()’:
./CPP_83.cpp:68:13: error: ‘starts_one_ends’ was not declared in this scope
   68 |     assert (starts_one_ends(1) == 1);
      |             ^~~~~~~~~~~~~~~


CPP_6.cpp: Compilation Failed
Error: ./CPP_6.cpp:14:30: error: field ‘_M_alloc’ has incomplete type ‘_String_alloc_hider’
   14 |   struct _String_alloc_hider _M_alloc;
      |                              ^~~~~~~~
./CPP_6.cpp:14:10: note: forward declaration of ‘struct _String_alloc_hider’
   14 |   struct _String_alloc_hider _M_alloc;
      |          ^~~~~~~~~~~~~~~~~~~
./CPP_6.cpp: In function ‘void parse_nested_parens(Vector_base*, String*)’:
./CPP_6.cpp:29:31: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
   29 |       current._M_data = malloc(1);
      |                         ~~~~~~^~~
      |                               |
      |                               void*
./CPP_6.cpp:35:34: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
   35 |         current._M_data = realloc(current._M_data, current._M_length + 1);
      |                           ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                  |
      |                                  void*
./CPP_6.cpp:44:67: error: expected ‘)’ before ‘extern’
   44 |         if (tmp._M_impl._M_finish == tmp._M_impl._M_end_of_storage
      |            ~                                                      ^
      |                                                                   )
./CPP_6.cpp:59:1: error: expected statement at end of input
   59 | }
      | ^
./CPP_6.cpp:59:1: error: expected ‘}’ at end of input
./CPP_6.cpp:41:37: note: to match this ‘{’
   41 |       if (input->_M_data[i] == ')') {
      |                                     ^
./CPP_6.cpp:59:1: error: expected ‘}’ at end of input
   59 | }
      | ^
./CPP_6.cpp:27:35: note: to match this ‘{’
   27 |     if (input->_M_data[i] == '(') {
      |                                   ^
./CPP_6.cpp:59:1: error: expected ‘}’ at end of input
   59 | }
      | ^
./CPP_6.cpp:26:28: note: to match this ‘{’
   26 |   while (i < input_length) {
      |                            ^
./CPP_6.cpp:59:1: error: expected ‘}’ at end of input
   59 | }
      | ^
./CPP_6.cpp:19:62: note: to match this ‘{’
   19 | void parse_nested_parens(Vector_base* result, String* input) {
      |                                                              ^


CPP_116.cpp: Compilation Failed
Error: ./CPP_116.cpp:34:13: error: ‘vector’ was not declared in this scope
   34 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_116.cpp:34:20: error: expected primary-expression before ‘int’
   34 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_116.cpp:34:27: error: ‘vector’ was not declared in this scope
   34 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_116.cpp:34:34: error: expected primary-expression before ‘int’
   34 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_116.cpp:34:39: error: expression list treated as compound expression in initializer [-fpermissive]
   34 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_116.cpp:33:
./CPP_116.cpp: In function ‘int main()’:
./CPP_116.cpp:43:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   43 |     assert (issame(sort_array({1,5,2,3,4}) , {1, 2, 4, 3, 5}));
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_116.cpp:4:23: note:   initializing argument 1 of ‘void sort_array(void*, void*)’
    4 | void sort_array(void* obj, void* other) {
      |                 ~~~~~~^~~
In file included from ./CPP_116.cpp:33:
./CPP_116.cpp:43:61: error: ‘issame’ cannot be used as a function
   43 |     assert (issame(sort_array({1,5,2,3,4}) , {1, 2, 4, 3, 5}));
      |                                                             ^
./CPP_116.cpp:44:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   44 |     assert (issame(sort_array({-2,-3,-4,-5,-6}) , {-4, -2, -6, -5, -3}));
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_116.cpp:4:23: note:   initializing argument 1 of ‘void sort_array(void*, void*)’
    4 | void sort_array(void* obj, void* other) {
      |                 ~~~~~~^~~
In file included from ./CPP_116.cpp:33:
./CPP_116.cpp:44:71: error: ‘issame’ cannot be used as a function
   44 |     assert (issame(sort_array({-2,-3,-4,-5,-6}) , {-4, -2, -6, -5, -3}));
      |                                                                       ^
./CPP_116.cpp:45:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   45 |     assert (issame(sort_array({1,0,2,3,4}) , {0, 1, 2, 4, 3}));
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_116.cpp:4:23: note:   initializing argument 1 of ‘void sort_array(void*, void*)’
    4 | void sort_array(void* obj, void* other) {
      |                 ~~~~~~^~~
In file included from ./CPP_116.cpp:33:
./CPP_116.cpp:45:61: error: ‘issame’ cannot be used as a function
   45 |     assert (issame(sort_array({1,0,2,3,4}) , {0, 1, 2, 4, 3}));
      |                                                             ^
./CPP_116.cpp:46:33: error: too few arguments to function ‘void sort_array(void*, void*)’
   46 |     assert (issame(sort_array({}) , {}));
      |                                 ^
./CPP_116.cpp:4:6: note: declared here
    4 | void sort_array(void* obj, void* other) {
      |      ^~~~~~~~~~
In file included from ./CPP_116.cpp:33:
./CPP_116.cpp:46:39: error: ‘issame’ cannot be used as a function
   46 |     assert (issame(sort_array({}) , {}));
      |                                       ^
./CPP_116.cpp:47:55: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   47 |     assert (issame(sort_array({2,5,77,4,5,3,5,7,2,3,4}) , {2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77}));
      |                                                       ^
      |                                                       |
      |                                                       <brace-enclosed initializer list>
./CPP_116.cpp:4:23: note:   initializing argument 1 of ‘void sort_array(void*, void*)’
    4 | void sort_array(void* obj, void* other) {
      |                 ~~~~~~^~~
In file included from ./CPP_116.cpp:33:
./CPP_116.cpp:47:93: error: ‘issame’ cannot be used as a function
   47 |     assert (issame(sort_array({2,5,77,4,5,3,5,7,2,3,4}) , {2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77}));
      |                                                                                             ^
./CPP_116.cpp:48:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   48 |     assert (issame(sort_array({3,6,44,12,32,5}) , {32, 3, 5, 6, 12, 44}));
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_116.cpp:4:23: note:   initializing argument 1 of ‘void sort_array(void*, void*)’
    4 | void sort_array(void* obj, void* other) {
      |                 ~~~~~~^~~
In file included from ./CPP_116.cpp:33:
./CPP_116.cpp:48:72: error: ‘issame’ cannot be used as a function
   48 |     assert (issame(sort_array({3,6,44,12,32,5}) , {32, 3, 5, 6, 12, 44}));
      |                                                                        ^
./CPP_116.cpp:49:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   49 |     assert (issame(sort_array({2,4,8,16,32}) , {2, 4, 8, 16, 32}));
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_116.cpp:4:23: note:   initializing argument 1 of ‘void sort_array(void*, void*)’
    4 | void sort_array(void* obj, void* other) {
      |                 ~~~~~~^~~
In file included from ./CPP_116.cpp:33:
./CPP_116.cpp:49:65: error: ‘issame’ cannot be used as a function
   49 |     assert (issame(sort_array({2,4,8,16,32}) , {2, 4, 8, 16, 32}));
      |                                                                 ^
./CPP_116.cpp:50:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   50 |     assert (issame(sort_array({2,4,8,16,32}) , {2, 4, 8, 16, 32}));
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_116.cpp:4:23: note:   initializing argument 1 of ‘void sort_array(void*, void*)’
    4 | void sort_array(void* obj, void* other) {
      |                 ~~~~~~^~~
In file included from ./CPP_116.cpp:33:
./CPP_116.cpp:50:65: error: ‘issame’ cannot be used as a function
   50 |     assert (issame(sort_array({2,4,8,16,32}) , {2, 4, 8, 16, 32}));
      |                                                                 ^


CPP_71.cpp: Compilation Failed
Error: ./CPP_71.cpp: In function ‘float triangle_area(float, float, float)’:
./CPP_71.cpp:4:18: error: ‘sqrt’ was not declared in this scope
    4 |     float area = sqrt(s * (s - a) * (s - b) * (s - c));
      |                  ^~~~
In file included from ./CPP_71.cpp:13:
./CPP_71.cpp: In function ‘int main()’:
./CPP_71.cpp:15:13: error: ‘abs’ was not declared in this scope
   15 |     assert (abs(triangle_area(3, 4, 5)-6.00)<0.01);
      |             ^~~


CPP_99.cpp: Compilation Failed
Error: ./CPP_99.cpp: In function ‘int closest_integer(const char*)’:
./CPP_99.cpp:5:15: error: ‘round’ was not declared in this scope
    5 |   return (int)round(d);
      |               ^~~~~


CPP_82.cpp: Compilation Failed
Error: ./CPP_82.cpp:24:1: error: stray ‘`’ in program
   24 | ```
      | ^
./CPP_82.cpp:24:2: error: stray ‘`’ in program
   24 | ```
      |  ^
./CPP_82.cpp:24:3: error: stray ‘`’ in program
   24 | ```
      |   ^
./CPP_82.cpp: In function ‘int32_t prime_length(const char*)’:
./CPP_82.cpp:4:17: error: ‘strlen’ was not declared in this scope
    4 |   int32_t len = strlen(str);
      |                 ^~~~~~
./CPP_82.cpp:2:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    1 | #include <stdint.h>
  +++ |+#include <cstring>
    2 | 
./CPP_82.cpp: At global scope:
./CPP_82.cpp:25:1: error: expected unqualified-id before ‘<’ token
   25 | <|im_end|>
      | ^
In file included from ./CPP_82.cpp:27:
./CPP_82.cpp: In function ‘int main()’:
./CPP_82.cpp:29:5: error: ‘__assert_fail’ was not declared in this scope
   29 |     assert (prime_length("Hello") == true);
      |     ^~~~~~


CPP_56.cpp: Compilation Failed
Error: In file included from ./CPP_56.cpp:26:
./CPP_56.cpp: In function ‘int main()’:
./CPP_56.cpp:28:36: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   28 |     assert (correct_bracketing("<>"));
      |                                    ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:29:40: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   29 |     assert (correct_bracketing("<<><>>"));
      |                                        ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:30:46: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   30 |     assert (correct_bracketing("<><><<><>><>"));
      |                                              ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:31:60: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   31 |     assert (correct_bracketing("<><><<<><><>><>><<><><<>>>"));
      |                                                            ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:32:48: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   32 |     assert (not (correct_bracketing("<<<><>>>>")));
      |                                                ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:33:43: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   33 |     assert (not (correct_bracketing("><<>")));
      |                                           ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:34:40: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   34 |     assert (not (correct_bracketing("<")));
      |                                        ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:35:43: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   35 |     assert (not (correct_bracketing("<<<<")));
      |                                           ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:36:40: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   36 |     assert (not (correct_bracketing(">")));
      |                                        ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:37:42: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   37 |     assert (not (correct_bracketing("<<>")));
      |                                          ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:38:55: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   38 |     assert (not (correct_bracketing("<><><<><>><>><<>")));
      |                                                       ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~
In file included from ./CPP_56.cpp:26:
./CPP_56.cpp:39:55: error: too few arguments to function ‘int correct_bracketing(const char*, size_t)’
   39 |     assert (not (correct_bracketing("<><><<><>><>>><>")));
      |                                                       ^
./CPP_56.cpp:4:5: note: declared here
    4 | int correct_bracketing(const char* str, size_t len) {
      |     ^~~~~~~~~~~~~~~~~~


CPP_11.cpp: Compilation Failed
Error: ./CPP_11.cpp: In function ‘void string_xor(basic_string*, const basic_string*, const basic_string*)’:
./CPP_11.cpp:15:28: error: invalid conversion from ‘char*’ to ‘uint64_t’ {aka ‘long unsigned int’} [-fpermissive]
   15 |   __temp->_M_rep = __temp->_M_buffer;
      |                    ~~~~~~~~^~~~~~~~~
      |                            |
      |                            char*
In file included from ./CPP_11.cpp:48:
./CPP_11.cpp: In function ‘int main()’:
./CPP_11.cpp:50:24: error: cannot convert ‘const char*’ to ‘basic_string*’
   50 |     assert (string_xor("111000", "101010") == "010010");
      |                        ^~~~~~~~
      |                        |
      |                        const char*
./CPP_11.cpp:13:31: note:   initializing argument 1 of ‘void string_xor(basic_string*, const basic_string*, const basic_string*)’
   13 | void string_xor(basic_string* __dest, const basic_string* __lhs, const basic_string* __rhs) {
      |                 ~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_11.cpp:48:
./CPP_11.cpp:51:25: error: cannot convert ‘const char*’ to ‘basic_string*’
   51 |      assert (string_xor("1", "1") == "0");
      |                         ^~~
      |                         |
      |                         const char*
./CPP_11.cpp:13:31: note:   initializing argument 1 of ‘void string_xor(basic_string*, const basic_string*, const basic_string*)’
   13 | void string_xor(basic_string* __dest, const basic_string* __lhs, const basic_string* __rhs) {
      |                 ~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_11.cpp:48:
./CPP_11.cpp:52:24: error: cannot convert ‘const char*’ to ‘basic_string*’
   52 |     assert (string_xor("0101", "0000") == "0101");
      |                        ^~~~~~
      |                        |
      |                        const char*
./CPP_11.cpp:13:31: note:   initializing argument 1 of ‘void string_xor(basic_string*, const basic_string*, const basic_string*)’
   13 | void string_xor(basic_string* __dest, const basic_string* __lhs, const basic_string* __rhs) {
      |                 ~~~~~~~~~~~~~~^~~~~~


CPP_146.cpp: Compilation Failed
Error: ./CPP_146.cpp: In function ‘int specialFilter(int*, int*)’:
./CPP_146.cpp:12:32: error: ‘strlen’ was not declared in this scope
   12 |         count += ((int)(buffer[strlen(buffer) - 1] % 2) == 1) ;
      |                                ^~~~~~
./CPP_146.cpp:4:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    3 | #include <stdlib.h>
  +++ |+#include <cstring>
    4 | 
In file included from ./CPP_146.cpp:20:
./CPP_146.cpp: In function ‘int main()’:
./CPP_146.cpp:22:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   22 |     assert (specialFilter({5, -2, 1, -5}) == 0  );
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_146.cpp:5:24: note:   initializing argument 1 of ‘int specialFilter(int*, int*)’
    5 | int specialFilter(int *a, int *b) {
      |                   ~~~~~^
In file included from ./CPP_146.cpp:20:
./CPP_146.cpp:23:45: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   23 |     assert (specialFilter({15, -73, 14, -15}) == 1);
      |                                             ^
      |                                             |
      |                                             <brace-enclosed initializer list>
./CPP_146.cpp:5:24: note:   initializing argument 1 of ‘int specialFilter(int*, int*)’
    5 | int specialFilter(int *a, int *b) {
      |                   ~~~~~^
In file included from ./CPP_146.cpp:20:
./CPP_146.cpp:24:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   24 |     assert (specialFilter({33, -2, -3, 45, 21, 109}) == 2);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_146.cpp:5:24: note:   initializing argument 1 of ‘int specialFilter(int*, int*)’
    5 | int specialFilter(int *a, int *b) {
      |                   ~~~~~^
In file included from ./CPP_146.cpp:20:
./CPP_146.cpp:25:55: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   25 |     assert (specialFilter({43, -12, 93, 125, 121, 109}) == 4);
      |                                                       ^
      |                                                       |
      |                                                       <brace-enclosed initializer list>
./CPP_146.cpp:5:24: note:   initializing argument 1 of ‘int specialFilter(int*, int*)’
    5 | int specialFilter(int *a, int *b) {
      |                   ~~~~~^
In file included from ./CPP_146.cpp:20:
./CPP_146.cpp:26:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   26 |     assert (specialFilter({71, -2, -33, 75, 21, 19}) == 3);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_146.cpp:5:24: note:   initializing argument 1 of ‘int specialFilter(int*, int*)’
    5 | int specialFilter(int *a, int *b) {
      |                   ~~~~~^
In file included from ./CPP_146.cpp:20:
./CPP_146.cpp:27:30: error: invalid conversion from ‘int’ to ‘int*’ [-fpermissive]
   27 |     assert (specialFilter({1}) == 0              );
      |                              ^
      |                              |
      |                              int
./CPP_146.cpp:27:30: error: too few arguments to function ‘int specialFilter(int*, int*)’
./CPP_146.cpp:5:5: note: declared here
    5 | int specialFilter(int *a, int *b) {
      |     ^~~~~~~~~~~~~
In file included from ./CPP_146.cpp:20:
./CPP_146.cpp:28:29: error: too few arguments to function ‘int specialFilter(int*, int*)’
   28 |     assert (specialFilter({}) == 0                   );
      |                             ^
./CPP_146.cpp:5:5: note: declared here
    5 | int specialFilter(int *a, int *b) {
      |     ^~~~~~~~~~~~~


CPP_59.cpp: Compilation Failed
Error: In file included from ./CPP_59.cpp:31:
./CPP_59.cpp: In function ‘int main()’:
./CPP_59.cpp:33:13: error: ‘largest_prime_factor’ was not declared in this scope
   33 |     assert (largest_prime_factor(15) == 5);
      |             ^~~~~~~~~~~~~~~~~~~~


CPP_77.cpp: Compilation Failed
Error: ./CPP_77.cpp: In function ‘int _Z7iscuberi(int)’:
./CPP_77.cpp:2:12: error: ‘abs’ was not declared in this scope
    2 |   int b2 = abs(a0);
      |            ^~~
In file included from ./CPP_77.cpp:11:
./CPP_77.cpp: In function ‘int main()’:
./CPP_77.cpp:13:13: error: ‘iscuber’ was not declared in this scope
   13 |     assert (iscuber(1) == true);
      |             ^~~~~~~


CPP_98.cpp: Compilation Failed
Error: ./CPP_98.cpp:25:1: error: stray ‘`’ in program
   25 | ```
      | ^
./CPP_98.cpp:25:2: error: stray ‘`’ in program
   25 | ```
      |  ^
./CPP_98.cpp:25:3: error: stray ‘`’ in program
   25 | ```
      |   ^
./CPP_98.cpp: In function ‘int count_upper(const char*)’:
./CPP_98.cpp:7:16: error: ‘strlen’ was not declared in this scope
    7 |   size_t len = strlen(str);
      |                ^~~~~~
./CPP_98.cpp:3:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    2 | #include <stddef.h>
  +++ |+#include <cstring>
    3 | 
./CPP_98.cpp: At global scope:
./CPP_98.cpp:26:1: error: expected unqualified-id before ‘<’ token
   26 | <|im_end|>
      | ^
In file included from ./CPP_98.cpp:28:
./CPP_98.cpp: In function ‘int main()’:
./CPP_98.cpp:30:5: error: ‘__assert_fail’ was not declared in this scope
   30 |     assert (count_upper("aBCdEf")  == 1);
      |     ^~~~~~


CPP_0.cpp: Compilation Failed
Error: ./CPP_0.cpp: In function ‘int main()’:
./CPP_0.cpp:23:5: error: ‘vector’ was not declared in this scope
   23 |     vector<float> a={1.0, 2.0, 3.9, 4.0, 5.0, 2.2};
      |     ^~~~~~
./CPP_0.cpp:23:12: error: expected primary-expression before ‘float’
   23 |     vector<float> a={1.0, 2.0, 3.9, 4.0, 5.0, 2.2};
      |            ^~~~~
In file included from ./CPP_0.cpp:21:
./CPP_0.cpp:24:32: error: ‘a’ was not declared in this scope
   24 |     assert (has_close_elements(a, 0.3)==true);
      |                                ^
./CPP_0.cpp:27:63: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   27 |     assert (has_close_elements({1.0, 2.0, 5.9, 4.0, 5.0}, 0.95) == true);
      |                                                               ^
      |                                                               |
      |                                                               <brace-enclosed initializer list>
./CPP_0.cpp:4:31: note:   initializing argument 1 of ‘int has_close_elements(float*, size_t, float)’
    4 | int has_close_elements(float* arr, size_t size, float threshold) {
      |                        ~~~~~~~^~~
In file included from ./CPP_0.cpp:21:
./CPP_0.cpp:28:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   28 |     assert (has_close_elements({1.0, 2.0, 5.9, 4.0, 5.0}, 0.8) ==false);
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_0.cpp:4:31: note:   initializing argument 1 of ‘int has_close_elements(float*, size_t, float)’
    4 | int has_close_elements(float* arr, size_t size, float threshold) {
      |                        ~~~~~~~^~~
In file included from ./CPP_0.cpp:21:
./CPP_0.cpp:29:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   29 |     assert (has_close_elements({1.0, 2.0, 3.0, 4.0, 5.0}, 2.0) == true);
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_0.cpp:4:31: note:   initializing argument 1 of ‘int has_close_elements(float*, size_t, float)’
    4 | int has_close_elements(float* arr, size_t size, float threshold) {
      |                        ~~~~~~~^~~
In file included from ./CPP_0.cpp:21:
./CPP_0.cpp:30:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   30 |     assert (has_close_elements({1.1, 2.2, 3.1, 4.1, 5.1}, 1.0) == true);
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_0.cpp:4:31: note:   initializing argument 1 of ‘int has_close_elements(float*, size_t, float)’
    4 | int has_close_elements(float* arr, size_t size, float threshold) {
      |                        ~~~~~~~^~~
In file included from ./CPP_0.cpp:21:
./CPP_0.cpp:31:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   31 |     assert (has_close_elements({1.1, 2.2, 3.1, 4.1, 5.1}, 0.5) == false);
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_0.cpp:4:31: note:   initializing argument 1 of ‘int has_close_elements(float*, size_t, float)’
    4 | int has_close_elements(float* arr, size_t size, float threshold) {
      |                        ~~~~~~~^~~


CPP_157.cpp: Compilation Failed
Error: ./CPP_157.cpp: In function ‘float _Z20right_angle_trianglefff(float, float, float)’:
./CPP_157.cpp:9:17: error: ‘fabs’ was not declared in this scope
    9 |   double var9 = fabs(var8);
      |                 ^~~~
In file included from ./CPP_157.cpp:29:
./CPP_157.cpp: In function ‘int main()’:
./CPP_157.cpp:31:13: error: ‘right_angle_triangle’ was not declared in this scope
   31 |     assert (right_angle_triangle(3, 4, 5) == true);
      |             ^~~~~~~~~~~~~~~~~~~~


CPP_141.cpp: Compilation Failed
Error: In file included from /usr/include/features.h:461,
                 from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33,
                 from /usr/include/stdint.h:26,
                 from /usr/lib/gcc/x86_64-linux-gnu/9/include/stdint.h:9,
                 from ./CPP_141.cpp:1:
/usr/include/assert.h: In function ‘void file_name_check(basic_string*, const basic_string*)’:
/usr/include/assert.h:66:1: error: expected unqualified-id before string constant
   66 | __BEGIN_DECLS
      | ^~~~~~~~~~~~~
./CPP_141.cpp:36:11: error: a function-definition is not allowed here before ‘{’ token
   36 | int main(){
      |           ^
./CPP_141.cpp:63:1: error: expected ‘}’ at end of input
   63 | }
      | ^
./CPP_141.cpp:27:29: note: to match this ‘{’
   27 |         switch (first_char) {
      |                             ^
./CPP_141.cpp:63:1: error: expected ‘}’ at end of input
   63 | }
      | ^
./CPP_141.cpp:26:26: note: to match this ‘{’
   26 |     if (first_char < 65) {
      |                          ^
./CPP_141.cpp:63:1: error: expected ‘}’ at end of input
   63 | }
      | ^
./CPP_141.cpp:15:89: note: to match this ‘{’
   15 | void file_name_check(struct basic_string *result, const struct basic_string *file_name) {
      |                                                                                         ^


CPP_127.cpp: Compilation Failed
Error: ./CPP_127.cpp:4:48: error: field ‘_Alloc_hider’ has incomplete type ‘std__cxx11__basic_string__Alloc_hider’
    4 |   struct std__cxx11__basic_string__Alloc_hider _Alloc_hider;
      |                                                ^~~~~~~~~~~~
./CPP_127.cpp:4:10: note: forward declaration of ‘struct std__cxx11__basic_string__Alloc_hider’
    4 |   struct std__cxx11__basic_string__Alloc_hider _Alloc_hider;
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_127.cpp:6:14: error: field ‘_M_data’ has incomplete type ‘anon’
    6 |   union anon _M_data;
      |              ^~~~~~~
./CPP_127.cpp:6:9: note: forward declaration of ‘union anon’
    6 |   union anon _M_data;
      |         ^~~~
./CPP_127.cpp:19:35: error: field ‘_M_impl’ has incomplete type ‘std__vector__Vector_base’
   19 |   struct std__vector__Vector_base _M_impl;
      |                                   ^~~~~~~
./CPP_127.cpp:19:10: note: forward declaration of ‘struct std__vector__Vector_base’
   19 |   struct std__vector__Vector_base _M_impl;
      |          ^~~~~~~~~~~~~~~~~~~~~~~~
./CPP_127.cpp:23:48: error: field ‘_M_impl’ has incomplete type ‘std__vector__Vector_base__Vector_impl’
   23 |   struct std__vector__Vector_base__Vector_impl _M_impl;
      |                                                ^~~~~~~
./CPP_127.cpp:23:10: note: forward declaration of ‘struct std__vector__Vector_base__Vector_impl’
   23 |   struct std__vector__Vector_base__Vector_impl _M_impl;
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_127.cpp:27:53: error: field ‘_M_data’ has incomplete type ‘std__vector__Vector_base__Vector_impl_data’
   27 |   struct std__vector__Vector_base__Vector_impl_data _M_data;
      |                                                     ^~~~~~~
./CPP_127.cpp:27:10: note: forward declaration of ‘struct std__vector__Vector_base__Vector_impl_data’
   27 |   struct std__vector__Vector_base__Vector_impl_data _M_data;
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_127.cpp:36:19: error: expected unqualified-id before ‘.’ token
   36 | extern const char .str.1[4];
      |                   ^
./CPP_127.cpp: In function ‘void intersectionB5cxx11St6vectorIiSaIiEES1_(std__cxx11__basic_string*, std__vector*, std__vector*)’:
./CPP_127.cpp:51:17: error: ‘struct std__cxx11__basic_string’ has no member named ‘_M_Alloc_hider’; did you mean ‘_Alloc_hider’?
   51 |     (*__result)._M_Alloc_hider._M_p = (char*) &(*__result)._M_data;
      |                 ^~~~~~~~~~~~~~
      |                 _Alloc_hider
./CPP_127.cpp:52:30: error: ‘struct std__cxx11__basic_string’ has no member named ‘_M_Alloc_hider’; did you mean ‘_Alloc_hider’?
   52 |     *((int16_t*) (*__result)._M_Alloc_hider._M_p) = 20302;
      |                              ^~~~~~~~~~~~~~
      |                              _Alloc_hider
./CPP_127.cpp:54:17: error: ‘struct std__cxx11__basic_string’ has no member named ‘_M_Alloc_hider’; did you mean ‘_Alloc_hider’?
   54 |     (*__result)._M_Alloc_hider._M_p[2] = 0;
      |                 ^~~~~~~~~~~~~~
      |                 _Alloc_hider
./CPP_127.cpp:58:17: error: ‘struct std__cxx11__basic_string’ has no member named ‘_M_Alloc_hider’; did you mean ‘_Alloc_hider’?
   58 |     (*__result)._M_Alloc_hider._M_p = (char*) &(*__result)._M_data;
      |                 ^~~~~~~~~~~~~~
      |                 _Alloc_hider
./CPP_127.cpp:60:24: error: ‘struct std__cxx11__basic_string’ has no member named ‘_M_Alloc_hider’; did you mean ‘_Alloc_hider’?
   60 |     memcpy((*__result)._M_Alloc_hider._M_p, "YES", 3);
      |                        ^~~~~~~~~~~~~~
      |                        _Alloc_hider
./CPP_127.cpp:60:5: error: ‘memcpy’ was not declared in this scope
   60 |     memcpy((*__result)._M_Alloc_hider._M_p, "YES", 3);
      |     ^~~~~~
./CPP_127.cpp:2:1: note: ‘memcpy’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    1 | #include <stdint.h>
  +++ |+#include <cstring>
    2 | 
./CPP_127.cpp:62:17: error: ‘struct std__cxx11__basic_string’ has no member named ‘_M_Alloc_hider’; did you mean ‘_Alloc_hider’?
   62 |     (*__result)._M_Alloc_hider._M_p[3] = 0;
      |                 ^~~~~~~~~~~~~~
      |                 _Alloc_hider
./CPP_127.cpp:67:17: error: ‘struct std__cxx11__basic_string’ has no member named ‘_M_Alloc_hider’; did you mean ‘_Alloc_hider’?
   67 |     (*__result)._M_Alloc_hider._M_p = (char*) &(*__result)._M_data;
      |                 ^~~~~~~~~~~~~~
      |                 _Alloc_hider
./CPP_127.cpp:69:24: error: ‘struct std__cxx11__basic_string’ has no member named ‘_M_Alloc_hider’; did you mean ‘_Alloc_hider’?
   69 |     memcpy((*__result)._M_Alloc_hider._M_p, "YES", 3);
      |                        ^~~~~~~~~~~~~~
      |                        _Alloc_hider
./CPP_127.cpp:69:5: error: ‘memcpy’ was not declared in this scope
   69 |     memcpy((*__result)._M_Alloc_hider._M_p, "YES", 3);
      |     ^~~~~~
./CPP_127.cpp:69:5: note: ‘memcpy’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
./CPP_127.cpp:71:17: error: ‘struct std__cxx11__basic_string’ has no member named ‘_M_Alloc_hider’; did you mean ‘_Alloc_hider’?
   71 |     (*__result)._M_Alloc_hider._M_p[3] = 0;
      |                 ^~~~~~~~~~~~~~
      |                 _Alloc_hider
./CPP_127.cpp:77:15: error: ‘struct std__cxx11__basic_string’ has no member named ‘_M_Alloc_hider’; did you mean ‘_Alloc_hider’?
   77 |   (*__result)._M_Alloc_hider._M_p = (char*) &(*__result)._M_data;
      |               ^~~~~~~~~~~~~~
      |               _Alloc_hider
./CPP_127.cpp:79:22: error: ‘struct std__cxx11__basic_string’ has no member named ‘_M_Alloc_hider’; did you mean ‘_Alloc_hider’?
   79 |   memcpy((*__result)._M_Alloc_hider._M_p, "YES", 3);
      |                      ^~~~~~~~~~~~~~
      |                      _Alloc_hider
./CPP_127.cpp:79:3: error: ‘memcpy’ was not declared in this scope
   79 |   memcpy((*__result)._M_Alloc_hider._M_p, "YES", 3);
      |   ^~~~~~
./CPP_127.cpp:79:3: note: ‘memcpy’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
./CPP_127.cpp:81:15: error: ‘struct std__cxx11__basic_string’ has no member named ‘_M_Alloc_hider’; did you mean ‘_Alloc_hider’?
   81 |   (*__result)._M_Alloc_hider._M_p[3] = 0;
      |               ^~~~~~~~~~~~~~
      |               _Alloc_hider
In file included from ./CPP_127.cpp:86:
./CPP_127.cpp: In function ‘int main()’:
./CPP_127.cpp:88:13: error: ‘intersection’ was not declared in this scope
   88 |     assert (intersection({1, 2}, {2, 3}) == "NO");
      |             ^~~~~~~~~~~~


CPP_31.cpp: Compilation Failed
Error: ./CPP_31.cpp:22:1: error: stray ‘`’ in program
   22 | ```
      | ^
./CPP_31.cpp:22:2: error: stray ‘`’ in program
   22 | ```
      |  ^
./CPP_31.cpp:22:3: error: stray ‘`’ in program
   22 | ```
      |   ^
./CPP_31.cpp:23:1: error: expected unqualified-id before ‘<’ token
   23 | <|im_end|>
      | ^
In file included from ./CPP_31.cpp:25:
./CPP_31.cpp: In function ‘int main()’:
./CPP_31.cpp:27:13: error: ‘is_prime’ was not declared in this scope
   27 |     assert (is_prime(6) == false);
      |             ^~~~~~~~
./CPP_31.cpp:27:5: error: ‘__assert_fail’ was not declared in this scope
   27 |     assert (is_prime(6) == false);
      |     ^~~~~~


CPP_122.cpp: Compilation Failed
Error: ./CPP_122.cpp:1:29: error: ‘vector’ in namespace ‘std’ does not name a template type
    1 | int add_elements(const std::vector<int>& v, int n) {
      |                             ^~~~~~
./CPP_122.cpp:1:1: note: ‘std::vector’ is defined in header ‘<vector>’; did you forget to ‘#include <vector>’?
  +++ |+#include <vector>
    1 | int add_elements(const std::vector<int>& v, int n) {
./CPP_122.cpp:1:35: error: expected ‘,’ or ‘...’ before ‘<’ token
    1 | int add_elements(const std::vector<int>& v, int n) {
      |                                   ^
./CPP_122.cpp: In function ‘int add_elements(int)’:
./CPP_122.cpp:2:7: error: ‘n’ was not declared in this scope
    2 |   if (n <= 0) {
      |       ^
./CPP_122.cpp:5:20: error: ‘v’ was not declared in this scope
    5 |   const int* ptr = v.data();
      |                    ^
./CPP_122.cpp:6:7: error: ‘n’ was not declared in this scope
    6 |   if (n <= 8) {
      |       ^
In file included from ./CPP_122.cpp:64:
./CPP_122.cpp: In function ‘int main()’:
./CPP_122.cpp:66:56: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int’
   66 |     assert (add_elements({1,-2,-3,41,57,76,87,88,99}, 3) == -4);
      |                                                        ^
      |                                                        |
      |                                                        <brace-enclosed initializer list>
./CPP_122.cpp:1:18: note:   initializing argument 1 of ‘int add_elements(int)’
    1 | int add_elements(const std::vector<int>& v, int n) {
      |                  ^~~~~~~~~~~~~~~~~
In file included from ./CPP_122.cpp:64:
./CPP_122.cpp:67:49: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int’
   67 |     assert (add_elements({111,121,3,4000,5,6}, 2) == 0);
      |                                                 ^
      |                                                 |
      |                                                 <brace-enclosed initializer list>
./CPP_122.cpp:1:18: note:   initializing argument 1 of ‘int add_elements(int)’
    1 | int add_elements(const std::vector<int>& v, int n) {
      |                  ^~~~~~~~~~~~~~~~~
In file included from ./CPP_122.cpp:64:
./CPP_122.cpp:68:51: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int’
   68 |     assert (add_elements({11,21,3,90,5,6,7,8,9}, 4) == 125);
      |                                                   ^
      |                                                   |
      |                                                   <brace-enclosed initializer list>
./CPP_122.cpp:1:18: note:   initializing argument 1 of ‘int add_elements(int)’
    1 | int add_elements(const std::vector<int>& v, int n) {
      |                  ^~~~~~~~~~~~~~~~~
In file included from ./CPP_122.cpp:64:
./CPP_122.cpp:69:54: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int’
   69 |     assert (add_elements({111,21,3,4000,5,6,7,8,9}, 4) == 24);
      |                                                      ^
      |                                                      |
      |                                                      <brace-enclosed initializer list>
./CPP_122.cpp:1:18: note:   initializing argument 1 of ‘int add_elements(int)’
    1 | int add_elements(const std::vector<int>& v, int n) {
      |                  ^~~~~~~~~~~~~~~~~
In file included from ./CPP_122.cpp:64:
./CPP_122.cpp:70:32: error: too many arguments to function ‘int add_elements(int)’
   70 |     assert (add_elements({1}, 1) == 1);
      |                                ^
./CPP_122.cpp:1:5: note: declared here
    1 | int add_elements(const std::vector<int>& v, int n) {
      |     ^~~~~~~~~~~~
./CPP_122.cpp: In function ‘int add_elements(int)’:
./CPP_122.cpp:61:1: warning: control reaches end of non-void function [-Wreturn-type]
   61 | }
      | ^


CPP_49.cpp: Compilation Failed
Error: In file included from ./CPP_49.cpp:55:
./CPP_49.cpp: In function ‘int main()’:
./CPP_49.cpp:57:13: error: ‘modp’ was not declared in this scope
   57 |     assert (modp(3, 5) == 3);
      |             ^~~~


CPP_55.cpp: Execution Failed
Error: CPP_55: ./CPP_55.cpp:22: int main(): Assertion `fib(10) == 55' failed.
Aborted (core dumped)


CPP_115.cpp: Compilation Failed
Error: In file included from ./CPP_115.cpp:38:
./CPP_115.cpp: In function ‘int main()’:
./CPP_115.cpp:40:13: error: ‘max_fill’ was not declared in this scope
   40 |     assert (max_fill({{0,0,1,0}, {0,1,0,0}, {1,1,1,1}}, 1) == 6);
      |             ^~~~~~~~


CPP_40.cpp: Execution Failed
Error: CPP_40: ./CPP_40.cpp:29: int main(): Assertion `triples_sum_to_zero({2, 4, -5, 3, 9, 7}) == true' failed.
Aborted (core dumped)


CPP_130.cpp: Compilation Failed
Error: ./CPP_130.cpp: In function ‘void _Z3trii(void*, int)’:
./CPP_130.cpp:6:23: warning: pointer of type ‘void *’ used in arithmetic [-Wpointer-arith]
    6 |   int* _5 = (int*)(_3 + 8);
      |                    ~~~^~~
./CPP_130.cpp:8:23: warning: pointer of type ‘void *’ used in arithmetic [-Wpointer-arith]
    8 |   int* _7 = (int*)(_3 + 4);
      |                    ~~~^~~
./CPP_130.cpp:30:1: error: jump to label ‘_20’
   30 | _20:
      | ^~~
./CPP_130.cpp:17:10: note:   from here
   17 |     goto _20;
      |          ^~~
./CPP_130.cpp:24:9: note:   crosses initialization of ‘void* _17’
   24 |   void* _17 = malloc(4);
      |         ^~~
./CPP_130.cpp:20:13: note:   crosses initialization of ‘long long int _14’
   20 |   long long _14 = (long long)_13;
      |             ^~~
./CPP_130.cpp:19:7: note:   crosses initialization of ‘int _13’
   19 |   int _13 = _1 + 1;
      |       ^~~
./CPP_130.cpp:30:1: error: jump to label ‘_20’
   30 | _20:
      | ^~~
./CPP_130.cpp:14:10: note:   from here
   14 |     goto _20;
      |          ^~~
./CPP_130.cpp:24:9: note:   crosses initialization of ‘void* _17’
   24 |   void* _17 = malloc(4);
      |         ^~~
./CPP_130.cpp:20:13: note:   crosses initialization of ‘long long int _14’
   20 |   long long _14 = (long long)_13;
      |             ^~~
./CPP_130.cpp:19:7: note:   crosses initialization of ‘int _13’
   19 |   int _13 = _1 + 1;
      |       ^~~
./CPP_130.cpp:37:1: error: jump to label ‘_27’
   37 | _27:
      | ^~~
./CPP_130.cpp:21:8: note:   from here
   21 |   goto _27;
      |        ^~~
./CPP_130.cpp:33:8: note:   crosses initialization of ‘int* _23’
   33 |   int* _23 = _4;
      |        ^~~
./CPP_130.cpp:32:8: note:   crosses initialization of ‘int* _22’
   32 |   int* _22 = _5;
      |        ^~~
./CPP_130.cpp:31:8: note:   crosses initialization of ‘int* _21’
   31 |   int* _21 = _5;
      |        ^~~
./CPP_130.cpp:24:9: note:   crosses initialization of ‘void* _17’
   24 |   void* _17 = malloc(4);
      |         ^~~
./CPP_130.cpp:63:1: error: duplicate label ‘_20’
   63 | _20:
      | ^~~
./CPP_130.cpp:64:8: error: redeclaration of ‘int* _21’
   64 |   int* _21 = _5;
      |        ^~~
./CPP_130.cpp:31:8: note: ‘int* _21’ previously declared here
   31 |   int* _21 = _5;
      |        ^~~
./CPP_130.cpp:65:8: error: redeclaration of ‘int* _22’
   65 |   int* _22 = _5;
      |        ^~~
./CPP_130.cpp:32:8: note: ‘int* _22’ previously declared here
   32 |   int* _22 = _5;
      |        ^~~
./CPP_130.cpp:66:8: error: redeclaration of ‘int* _23’
   66 |   int* _23 = _4;
      |        ^~~
./CPP_130.cpp:33:8: note: ‘int* _23’ previously declared here
   33 |   int* _23 = _4;
      |        ^~~
./CPP_130.cpp:70:1: error: duplicate label ‘_27’
   70 | _27:
      | ^~~
./CPP_130.cpp:71:13: error: redeclaration of ‘long long int _28’
   71 |   long long _28 = _14;
      |             ^~~
./CPP_130.cpp:38:13: note: ‘long long int _28’ previously declared here
   38 |   long long _28 = _14;
      |             ^~~
./CPP_130.cpp:72:8: error: redeclaration of ‘int* _29’
   72 |   int* _29 = _4;
      |        ^~~
./CPP_130.cpp:39:8: note: ‘int* _29’ previously declared here
   39 |   int* _29 = _4;
      |        ^~~
./CPP_130.cpp:73:8: error: redeclaration of ‘int* _30’
   73 |   int* _30 = _5;
      |        ^~~
./CPP_130.cpp:40:8: note: ‘int* _30’ previously declared here
   40 |   int* _30 = _5;
      |        ^~~
./CPP_130.cpp:74:8: error: redeclaration of ‘int* _31’
   74 |   int* _31 = _5;
      |        ^~~
./CPP_130.cpp:41:8: note: ‘int* _31’ previously declared here
   41 |   int* _31 = _5;
      |        ^~~
./CPP_130.cpp:75:7: error: redeclaration of ‘int _32’
   75 |   int _32 = (int)_28;
      |       ^~~
./CPP_130.cpp:42:7: note: ‘int _32’ previously declared here
   42 |   int _32 = (int)_28;
      |       ^~~
./CPP_130.cpp:76:7: error: redeclaration of ‘int _33’
   76 |   int _33 = _32 & 1;
      |       ^~~
./CPP_130.cpp:43:7: note: ‘int _33’ previously declared here
   43 |   int _33 = _32 & 1;
      |       ^~~
./CPP_130.cpp:80:1: error: duplicate label ‘_37’
   80 | _37:
      | ^~~
./CPP_130.cpp:81:7: error: redeclaration of ‘int _36’
   81 |   int _36 = _32 >> 1;
      |       ^~~
./CPP_130.cpp:48:7: note: ‘int _36’ previously declared here
   48 |   int _36 = _32 >> 1;
      |       ^~~
./CPP_130.cpp:82:7: error: redeclaration of ‘int _37’
   82 |   int _37 = _36 + 1;
      |       ^~~
./CPP_130.cpp:49:7: note: ‘int _37’ previously declared here
   49 |   int _37 = _36 + 1;
      |       ^~~
./CPP_130.cpp:86:1: error: duplicate label ‘_39’
   86 | _39:
      | ^~~
./CPP_130.cpp:90:1: error: duplicate label ‘_41’
   90 | _41:
      | ^~~
./CPP_130.cpp:91:13: error: redeclaration of ‘long long int _42’
   91 |   long long _42 = (long long)(_30 - _29);
      |             ^~~
./CPP_130.cpp:58:13: note: ‘long long int _42’ previously declared here
   58 |   long long _42 = (long long)(_30 - _29);
      |             ^~~
./CPP_130.cpp:92:7: error: redeclaration of ‘int _43’
   92 |   int _43 = (int)(_42 >> 2);
      |       ^~~
./CPP_130.cpp:59:7: note: ‘int _43’ previously declared here
   59 |   int _43 = (int)(_42 >> 2);
      |       ^~~
./CPP_130.cpp:107:1: error: jump to label ‘_47’
  107 | _47:
      | ^~~
./CPP_130.cpp:94:10: note:   from here
   94 |     goto _47;
      |          ^~~
./CPP_130.cpp:104:8: note:   crosses initialization of ‘int* _51’
  104 |   int* _51 = _29;
      |        ^~~
./CPP_130.cpp:103:7: note:   crosses initialization of ‘int _50’
  103 |   int _50 = _43;
      |       ^~~
./CPP_130.cpp:102:8: note:   crosses initialization of ‘int* _49’
  102 |   int* _49 = _47;
      |        ^~~
./CPP_130.cpp:98:8: note:   crosses initialization of ‘int* _47’
   98 |   int* _47 = (int*)malloc(_46);
      |        ^~~
./CPP_130.cpp:97:7: note:   crosses initialization of ‘int _46’
   97 |   int _46 = _45 << 2;
      |       ^~~
./CPP_130.cpp:96:7: note:   crosses initialization of ‘int _45’
   96 |   int _45 = _43 + 1;
      |       ^~~
./CPP_130.cpp:109:1: error: ‘P’ was not declared in this scope
  109 | P
      | ^
./CPP_130.cpp:116:8: error: redeclaration of ‘int* _22’
  116 |   int* _22 = _5;
      |        ^~~
./CPP_130.cpp:32:8: note: ‘int* _22’ previously declared here
   32 |   int* _22 = _5;
      |        ^~~
./CPP_130.cpp:117:8: error: redeclaration of ‘int* _23’
  117 |   int* _23 = _4;
      |        ^~~
./CPP_130.cpp:33:8: note: ‘int* _23’ previously declared here
   33 |   int* _23 = _4;
      |        ^~~
./CPP_130.cpp:121:1: error: duplicate label ‘_27’
  121 | _27:
      | ^~~
./CPP_130.cpp:122:13: error: redeclaration of ‘long long int _28’
  122 |   long long _28 = _14;
      |             ^~~
./CPP_130.cpp:38:13: note: ‘long long int _28’ previously declared here
   38 |   long long _28 = _14;
      |             ^~~
./CPP_130.cpp:123:8: error: redeclaration of ‘int* _29’
  123 |   int* _29 = _4;
      |        ^~~
./CPP_130.cpp:39:8: note: ‘int* _29’ previously declared here
   39 |   int* _29 = _4;
      |        ^~~
./CPP_130.cpp:124:8: error: redeclaration of ‘int* _30’
  124 |   int* _30 = _5;
      |        ^~~
./CPP_130.cpp:40:8: note: ‘int* _30’ previously declared here
   40 |   int* _30 = _5;
      |        ^~~
./CPP_130.cpp:125:8: error: redeclaration of ‘int* _31’
  125 |   int* _31 = _5;
      |        ^~~
./CPP_130.cpp:41:8: note: ‘int* _31’ previously declared here
   41 |   int* _31 = _5;
      |        ^~~
./CPP_130.cpp:126:7: error: redeclaration of ‘int _32’
  126 |   int _32 = (int)_28;
      |       ^~~
./CPP_130.cpp:42:7: note: ‘int _32’ previously declared here
   42 |   int _32 = (int)_28;
      |       ^~~
./CPP_130.cpp:127:7: error: redeclaration of ‘int _33’
  127 |   int _33 = _32 & 1;
      |       ^~~
./CPP_130.cpp:43:7: note: ‘int _33’ previously declared here
   43 |   int _33 = _32 & 1;
      |       ^~~
./CPP_130.cpp:131:1: error: duplicate label ‘_37’
  131 | _37:
      | ^~~
./CPP_130.cpp:132:7: error: redeclaration of ‘int _36’
  132 |   int _36 = _32 >> 1;
      |       ^~~
./CPP_130.cpp:48:7: note: ‘int _36’ previously declared here
   48 |   int _36 = _32 >> 1;
      |       ^~~
./CPP_130.cpp:133:7: error: redeclaration of ‘int _37’
  133 |   int _37 = _36 + 1;
      |       ^~~
./CPP_130.cpp:49:7: note: ‘int _37’ previously declared here
   49 |   int _37 = _36 + 1;
      |       ^~~
./CPP_130.cpp:137:1: error: duplicate label ‘_39’
  137 | _39:
      | ^~~
./CPP_130.cpp:141:1: error: duplicate label ‘_41’
  141 | _41:
      | ^~~
./CPP_130.cpp:142:13: error: redeclaration of ‘long long int _42’
  142 |   long long _42 = (long long)(_30 - _29);
      |             ^~~
./CPP_130.cpp:58:13: note: ‘long long int _42’ previously declared here
   58 |   long long _42 = (long long)(_30 - _29);
      |             ^~~
./CPP_130.cpp:143:7: error: redeclaration of ‘int _43’
  143 |   int _43 = (int)(_42 >> 2);
      |       ^~~
./CPP_130.cpp:59:7: note: ‘int _43’ previously declared here
   59 |   int _43 = (int)(_42 >> 2);
      |       ^~~
./CPP_130.cpp:147:7: error: redeclaration of ‘int _45’
  147 |   int _45 = _43 + 1;
      |       ^~~
./CPP_130.cpp:96:7: note: ‘int _45’ previously declared here
   96 |   int _45 = _43 + 1;
      |       ^~~
./CPP_130.cpp:148:7: error: redeclaration of ‘int _46’
  148 |   int _46 = _45 << 2;
      |       ^~~
./CPP_130.cpp:97:7: note: ‘int _46’ previously declared here
   97 |   int _46 = _45 << 2;
      |       ^~~
./CPP_130.cpp:149:8: error: redeclaration of ‘int* _47’
  149 |   int* _47 = (int*)malloc(_46);
      |        ^~~
./CPP_130.cpp:98:8: note: ‘int* _47’ previously declared here
   98 |   int* _47 = (int*)malloc(_46);
      |        ^~~
In file included from /usr/include/features.h:461,
                 from /usr/include/x86_64-linux-gnu/c++/9/bits/os_defines.h:39,
                 from /usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:528,
                 from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_130.cpp:1:
/usr/include/assert.h:66:1: error: expected unqualified-id before string constant
   66 | __BEGIN_DECLS
      | ^~~~~~~~~~~~~
./CPP_130.cpp:153:13: error: ‘vector’ was not declared in this scope
  153 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_130.cpp:153:20: error: expected primary-expression before ‘int’
  153 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_130.cpp:153:34: error: expected primary-expression before ‘int’
  153 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_130.cpp:153:39: error: expression list treated as compound expression in initializer [-fpermissive]
  153 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
./CPP_130.cpp:161:11: error: a function-definition is not allowed here before ‘{’ token
  161 | int main(){
      |           ^
./CPP_130.cpp:172:1: error: expected ‘}’ at end of input
  172 | }
      | ^
./CPP_130.cpp:3:32: note: to match this ‘{’
    3 | void _Z3trii(void* _0, int _1) {
      |                                ^
./CPP_130.cpp:26:10: error: label ‘_18’ used but not defined
   26 |     goto _18;
      |          ^~~
./CPP_130.cpp:45:10: error: label ‘_35’ used but not defined
   45 |     goto _35;
      |          ^~~
./CPP_130.cpp:56:8: error: label ‘_130’ used but not defined
   56 |   goto _130;
      |        ^~~~
./CPP_130.cpp:100:10: error: label ‘_48’ used but not defined
  100 |     goto _48;
      |          ^~~


CPP_48.cpp: Compilation Failed
Error: ./CPP_48.cpp: In function ‘int is_palindrome(const char*)’:
./CPP_48.cpp:7:21: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
    7 |   char* rev = malloc(len + 1);
      |               ~~~~~~^~~~~~~~~
      |                     |
      |                     void*


CPP_155.cpp: Compilation Failed
Error: ./CPP_155.cpp:13:13: error: ‘vector’ was not declared in this scope
   13 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_155.cpp:13:20: error: expected primary-expression before ‘int’
   13 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_155.cpp:13:27: error: ‘vector’ was not declared in this scope
   13 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_155.cpp:13:34: error: expected primary-expression before ‘int’
   13 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_155.cpp:13:39: error: expression list treated as compound expression in initializer [-fpermissive]
   13 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
./CPP_155.cpp:21:5: error: conflicting declaration of C function ‘int main()’
   21 | int main(){
      |     ^~~~
./CPP_155.cpp:4:5: note: previous declaration ‘int main(int, char**)’
    4 | int main(int argc, char **argv) {
      |     ^~~~
In file included from ./CPP_155.cpp:12:
./CPP_155.cpp: In function ‘int main()’:
./CPP_155.cpp:22:20: error: ‘even_odd_count’ was not declared in this scope
   22 |     assert (issame(even_odd_count(7) , {0, 1}));
      |                    ^~~~~~~~~~~~~~
./CPP_155.cpp:22:46: error: ‘issame’ cannot be used as a function
   22 |     assert (issame(even_odd_count(7) , {0, 1}));
      |                                              ^
./CPP_155.cpp:23:48: error: ‘issame’ cannot be used as a function
   23 |     assert (issame(even_odd_count(-78) , {1, 1}));
      |                                                ^
./CPP_155.cpp:24:49: error: ‘issame’ cannot be used as a function
   24 |     assert (issame(even_odd_count(3452) , {2, 2}));
      |                                                 ^
./CPP_155.cpp:25:51: error: ‘issame’ cannot be used as a function
   25 |     assert (issame(even_odd_count(346211) , {3, 3}));
      |                                                   ^
./CPP_155.cpp:26:52: error: ‘issame’ cannot be used as a function
   26 |     assert (issame(even_odd_count(-345821) , {3, 3}));
      |                                                    ^
./CPP_155.cpp:27:47: error: ‘issame’ cannot be used as a function
   27 |     assert (issame(even_odd_count(-2) , {1, 0}));
      |                                               ^
./CPP_155.cpp:28:51: error: ‘issame’ cannot be used as a function
   28 |     assert (issame(even_odd_count(-45347) , {2, 3}));
      |                                                   ^
./CPP_155.cpp:29:46: error: ‘issame’ cannot be used as a function
   29 |     assert (issame(even_odd_count(0) , {1, 0}));
      |                                              ^


CPP_96.cpp: Compilation Failed
Error: ./CPP_96.cpp:45:13: error: ‘vector’ was not declared in this scope
   45 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_96.cpp:45:20: error: expected primary-expression before ‘int’
   45 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_96.cpp:45:27: error: ‘vector’ was not declared in this scope
   45 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_96.cpp:45:34: error: expected primary-expression before ‘int’
   45 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_96.cpp:45:39: error: expression list treated as compound expression in initializer [-fpermissive]
   45 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_96.cpp:44:
./CPP_96.cpp: In function ‘int main()’:
./CPP_96.cpp:54:20: error: ‘count_up_to’ was not declared in this scope; did you mean ‘count_up_to_i’?
   54 |     assert (issame(count_up_to(5) , {2,3}));
      |                    ^~~~~~~~~~~
./CPP_96.cpp:54:42: error: ‘issame’ cannot be used as a function
   54 |     assert (issame(count_up_to(5) , {2,3}));
      |                                          ^
./CPP_96.cpp:55:44: error: ‘issame’ cannot be used as a function
   55 |     assert (issame(count_up_to(6) , {2,3,5}));
      |                                            ^
./CPP_96.cpp:56:44: error: ‘issame’ cannot be used as a function
   56 |     assert (issame(count_up_to(7) , {2,3,5}));
      |                                            ^
./CPP_96.cpp:57:47: error: ‘issame’ cannot be used as a function
   57 |     assert (issame(count_up_to(10) , {2,3,5,7}));
      |                                               ^
./CPP_96.cpp:58:39: error: ‘issame’ cannot be used as a function
   58 |     assert (issame(count_up_to(0) , {}));
      |                                       ^
./CPP_96.cpp:59:59: error: ‘issame’ cannot be used as a function
   59 |     assert (issame(count_up_to(22) , {2,3,5,7,11,13,17,19}));
      |                                                           ^
./CPP_96.cpp:60:39: error: ‘issame’ cannot be used as a function
   60 |     assert (issame(count_up_to(1) , {}));
      |                                       ^
./CPP_96.cpp:61:56: error: ‘issame’ cannot be used as a function
   61 |     assert (issame(count_up_to(18) , {2,3,5,7,11,13,17}));
      |                                                        ^
./CPP_96.cpp:62:90: error: ‘issame’ cannot be used as a function
   62 |     assert (issame(count_up_to(47) , {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43}));
      |                                                                                          ^
./CPP_96.cpp:63:135: error: ‘issame’ cannot be used as a function
   63 |     assert (issame(count_up_to(101) , {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}));
      |                                                                                                                                       ^


CPP_3.cpp: Compilation Failed
Error: In file included from ./CPP_3.cpp:20:
./CPP_3.cpp: In function ‘int main()’:
./CPP_3.cpp:22:26: error: too few arguments to function ‘int below_zero(int*, int)’
   22 |     assert (below_zero({}) == false);
      |                          ^
./CPP_3.cpp:3:5: note: declared here
    3 | int below_zero(int* arr, int size) {
      |     ^~~~~~~~~~
In file included from ./CPP_3.cpp:20:
./CPP_3.cpp:23:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   23 |     assert (below_zero({1, 2, -3, 1, 2, -3}) == false);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_3.cpp:3:21: note:   initializing argument 1 of ‘int below_zero(int*, int)’
    3 | int below_zero(int* arr, int size) {
      |                ~~~~~^~~
In file included from ./CPP_3.cpp:20:
./CPP_3.cpp:24:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   24 |     assert (below_zero({1, 2, -4, 5, 6}) == true);
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_3.cpp:3:21: note:   initializing argument 1 of ‘int below_zero(int*, int)’
    3 | int below_zero(int* arr, int size) {
      |                ~~~~~^~~
In file included from ./CPP_3.cpp:20:
./CPP_3.cpp:25:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   25 |     assert (below_zero({1, -1, 2, -2, 5, -5, 4, -4}) == false);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_3.cpp:3:21: note:   initializing argument 1 of ‘int below_zero(int*, int)’
    3 | int below_zero(int* arr, int size) {
      |                ~~~~~^~~
In file included from ./CPP_3.cpp:20:
./CPP_3.cpp:26:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   26 |     assert (below_zero({1, -1, 2, -2, 5, -5, 4, -5}) == true);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_3.cpp:3:21: note:   initializing argument 1 of ‘int below_zero(int*, int)’
    3 | int below_zero(int* arr, int size) {
      |                ~~~~~^~~
In file included from ./CPP_3.cpp:20:
./CPP_3.cpp:27:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   27 |     assert (below_zero({1, -2, 2, -2, 5, -5, 4, -4}) == true);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_3.cpp:3:21: note:   initializing argument 1 of ‘int below_zero(int*, int)’
    3 | int below_zero(int* arr, int size) {
      |                ~~~~~^~~


CPP_97.cpp: Compilation Failed
Error: ./CPP_97.cpp:9:1: error: stray ‘`’ in program
    9 | ```<|im_end|>
      | ^
./CPP_97.cpp:9:2: error: stray ‘`’ in program
    9 | ```<|im_end|>
      |  ^
./CPP_97.cpp:9:3: error: stray ‘`’ in program
    9 | ```<|im_end|>
      |   ^
./CPP_97.cpp: In function ‘int _Z8multiplyii(int, int)’:
./CPP_97.cpp:2:12: error: ‘abs’ was not declared in this scope
    2 |   int a1 = abs(a);
      |            ^~~
./CPP_97.cpp: At global scope:
./CPP_97.cpp:9:4: error: expected unqualified-id before ‘<’ token
    9 | ```<|im_end|>
      |    ^
In file included from ./CPP_97.cpp:11:
./CPP_97.cpp: In function ‘int main()’:
./CPP_97.cpp:13:13: error: ‘multiply’ was not declared in this scope
   13 |     assert (multiply(148, 412) == 16                   );
      |             ^~~~~~~~
./CPP_97.cpp:13:5: error: ‘__assert_fail’ was not declared in this scope
   13 |     assert (multiply(148, 412) == 16                   );
      |     ^~~~~~


CPP_4.cpp: Compilation Failed
Error: In file included from ./CPP_4.cpp:24:
./CPP_4.cpp: In function ‘int main()’:
./CPP_4.cpp:26:56: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   26 |     assert (abs(mean_absolute_deviation({1.0, 2.0, 3.0}) - 2.0/3.0) < 1e-4);
      |                                                        ^
      |                                                        |
      |                                                        <brace-enclosed initializer list>
./CPP_4.cpp:3:38: note:   initializing argument 1 of ‘float mean_absolute_deviation(float*, size_t)’
    3 | float mean_absolute_deviation(float* data, size_t size) {
      |                               ~~~~~~~^~~~
In file included from ./CPP_4.cpp:24:
./CPP_4.cpp:27:61: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   27 |     assert (abs(mean_absolute_deviation({1.0, 2.0, 3.0, 4.0}) - 1.0) < 1e-4);
      |                                                             ^
      |                                                             |
      |                                                             <brace-enclosed initializer list>
./CPP_4.cpp:3:38: note:   initializing argument 1 of ‘float mean_absolute_deviation(float*, size_t)’
    3 | float mean_absolute_deviation(float* data, size_t size) {
      |                               ~~~~~~~^~~~
In file included from ./CPP_4.cpp:24:
./CPP_4.cpp:28:66: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   28 |     assert (abs(mean_absolute_deviation({1.0, 2.0, 3.0, 4.0, 5.0}) - 6.0/5.0) < 1e-4);
      |                                                                  ^
      |                                                                  |
      |                                                                  <brace-enclosed initializer list>
./CPP_4.cpp:3:38: note:   initializing argument 1 of ‘float mean_absolute_deviation(float*, size_t)’
    3 | float mean_absolute_deviation(float* data, size_t size) {
      |                               ~~~~~~~^~~~


CPP_76.cpp: Execution Failed
Error: CPP_76: ./CPP_76.cpp:26: int main(): Assertion `is_simple_power(3, 2)==false' failed.
Aborted (core dumped)


CPP_80.cpp: Execution Failed
Error: CPP_80: ./CPP_80.cpp:23: int main(): Assertion `is_happy("abcd") == true' failed.
Aborted (core dumped)


CPP_23.cpp: Execution Failed
Error: Segmentation fault (core dumped)


CPP_136.cpp: Compilation Failed
Error: ./CPP_136.cpp:25:13: error: ‘vector’ was not declared in this scope; did you mean ‘std::vector’?
   25 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
      |             std::vector
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_136.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:386:11: note: ‘std::vector’ declared here
  386 |     class vector : protected _Vector_base<_Tp, _Alloc>
      |           ^~~~~~
./CPP_136.cpp:25:20: error: expected primary-expression before ‘int’
   25 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_136.cpp:25:27: error: ‘vector’ was not declared in this scope; did you mean ‘std::vector’?
   25 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
      |                           std::vector
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_136.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:386:11: note: ‘std::vector’ declared here
  386 |     class vector : protected _Vector_base<_Tp, _Alloc>
      |           ^~~~~~
./CPP_136.cpp:25:34: error: expected primary-expression before ‘int’
   25 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_136.cpp:25:39: error: expression list treated as compound expression in initializer [-fpermissive]
   25 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_136.cpp:24:
./CPP_136.cpp: In function ‘int main()’:
./CPP_136.cpp:34:64: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   34 |     assert (issame(largest_smallest_integers({2, 4, 1, 3, 5, 7}) , {0, 1}));
      |                                                                ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_136.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_136.cpp:3:50: note: in passing argument 1 of ‘void largest_smallest_integers(std::vector<int>&, const std::vector<int>&)’
    3 | void largest_smallest_integers(std::vector<int>& result, const std::vector<int>& input) {
      |                                ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_136.cpp:24:
./CPP_136.cpp:34:74: error: ‘issame’ cannot be used as a function
   34 |     assert (issame(largest_smallest_integers({2, 4, 1, 3, 5, 7}) , {0, 1}));
      |                                                                          ^
./CPP_136.cpp:35:67: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   35 |     assert (issame(largest_smallest_integers({2, 4, 1, 3, 5, 7, 0}) , {0, 1}));
      |                                                                   ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_136.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_136.cpp:3:50: note: in passing argument 1 of ‘void largest_smallest_integers(std::vector<int>&, const std::vector<int>&)’
    3 | void largest_smallest_integers(std::vector<int>& result, const std::vector<int>& input) {
      |                                ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_136.cpp:24:
./CPP_136.cpp:35:77: error: ‘issame’ cannot be used as a function
   35 |     assert (issame(largest_smallest_integers({2, 4, 1, 3, 5, 7, 0}) , {0, 1}));
      |                                                                             ^
./CPP_136.cpp:36:68: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   36 |     assert (issame(largest_smallest_integers({1, 3, 2, 4, 5, 6, -2}) , {-2, 1}));
      |                                                                    ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_136.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_136.cpp:3:50: note: in passing argument 1 of ‘void largest_smallest_integers(std::vector<int>&, const std::vector<int>&)’
    3 | void largest_smallest_integers(std::vector<int>& result, const std::vector<int>& input) {
      |                                ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_136.cpp:24:
./CPP_136.cpp:36:79: error: ‘issame’ cannot be used as a function
   36 |     assert (issame(largest_smallest_integers({1, 3, 2, 4, 5, 6, -2}) , {-2, 1}));
      |                                                                               ^
./CPP_136.cpp:37:68: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   37 |     assert (issame(largest_smallest_integers({4, 5, 3, 6, 2, 7, -7}) , {-7, 2}));
      |                                                                    ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_136.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_136.cpp:3:50: note: in passing argument 1 of ‘void largest_smallest_integers(std::vector<int>&, const std::vector<int>&)’
    3 | void largest_smallest_integers(std::vector<int>& result, const std::vector<int>& input) {
      |                                ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_136.cpp:24:
./CPP_136.cpp:37:79: error: ‘issame’ cannot be used as a function
   37 |     assert (issame(largest_smallest_integers({4, 5, 3, 6, 2, 7, -7}) , {-7, 2}));
      |                                                                               ^
./CPP_136.cpp:38:71: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   38 |     assert (issame(largest_smallest_integers({7, 3, 8, 4, 9, 2, 5, -9}) , {-9, 2}));
      |                                                                       ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_136.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_136.cpp:3:50: note: in passing argument 1 of ‘void largest_smallest_integers(std::vector<int>&, const std::vector<int>&)’
    3 | void largest_smallest_integers(std::vector<int>& result, const std::vector<int>& input) {
      |                                ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_136.cpp:24:
./CPP_136.cpp:38:82: error: ‘issame’ cannot be used as a function
   38 |     assert (issame(largest_smallest_integers({7, 3, 8, 4, 9, 2, 5, -9}) , {-9, 2}));
      |                                                                                  ^
./CPP_136.cpp:39:48: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   39 |     assert (issame(largest_smallest_integers({}) , {0, 0}));
      |                                                ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_136.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:484:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector() [with _Tp = int; _Alloc = std::allocator<int>]’
  484 |       vector() = default;
      |       ^~~~~~
./CPP_136.cpp:3:50: note: in passing argument 1 of ‘void largest_smallest_integers(std::vector<int>&, const std::vector<int>&)’
    3 | void largest_smallest_integers(std::vector<int>& result, const std::vector<int>& input) {
      |                                ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_136.cpp:24:
./CPP_136.cpp:39:58: error: ‘issame’ cannot be used as a function
   39 |     assert (issame(largest_smallest_integers({}) , {0, 0}));
      |                                                          ^
./CPP_136.cpp:40:49: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   40 |     assert (issame(largest_smallest_integers({0}) , {0, 0}));
      |                                                 ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_136.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_136.cpp:3:50: note: in passing argument 1 of ‘void largest_smallest_integers(std::vector<int>&, const std::vector<int>&)’
    3 | void largest_smallest_integers(std::vector<int>& result, const std::vector<int>& input) {
      |                                ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_136.cpp:24:
./CPP_136.cpp:40:59: error: ‘issame’ cannot be used as a function
   40 |     assert (issame(largest_smallest_integers({0}) , {0, 0}));
      |                                                           ^
./CPP_136.cpp:41:62: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   41 |     assert (issame(largest_smallest_integers({-1, -3, -5, -6}) , {-1, 0}));
      |                                                              ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_136.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_136.cpp:3:50: note: in passing argument 1 of ‘void largest_smallest_integers(std::vector<int>&, const std::vector<int>&)’
    3 | void largest_smallest_integers(std::vector<int>& result, const std::vector<int>& input) {
      |                                ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_136.cpp:24:
./CPP_136.cpp:41:73: error: ‘issame’ cannot be used as a function
   41 |     assert (issame(largest_smallest_integers({-1, -3, -5, -6}) , {-1, 0}));
      |                                                                         ^
./CPP_136.cpp:42:65: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   42 |     assert (issame(largest_smallest_integers({-1, -3, -5, -6, 0}) , {-1, 0}));
      |                                                                 ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_136.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_136.cpp:3:50: note: in passing argument 1 of ‘void largest_smallest_integers(std::vector<int>&, const std::vector<int>&)’
    3 | void largest_smallest_integers(std::vector<int>& result, const std::vector<int>& input) {
      |                                ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_136.cpp:24:
./CPP_136.cpp:42:76: error: ‘issame’ cannot be used as a function
   42 |     assert (issame(largest_smallest_integers({-1, -3, -5, -6, 0}) , {-1, 0}));
      |                                                                            ^
./CPP_136.cpp:43:65: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   43 |     assert (issame(largest_smallest_integers({-6, -4, -4, -3, 1}) , {-3, 1}));
      |                                                                 ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_136.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_136.cpp:3:50: note: in passing argument 1 of ‘void largest_smallest_integers(std::vector<int>&, const std::vector<int>&)’
    3 | void largest_smallest_integers(std::vector<int>& result, const std::vector<int>& input) {
      |                                ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_136.cpp:24:
./CPP_136.cpp:43:76: error: ‘issame’ cannot be used as a function
   43 |     assert (issame(largest_smallest_integers({-6, -4, -4, -3, 1}) , {-3, 1}));
      |                                                                            ^
./CPP_136.cpp:44:71: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   44 |     assert (issame(largest_smallest_integers({-6, -4, -4, -3, -100, 1}) , {-3, 1}));
      |                                                                       ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_136.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_136.cpp:3:50: note: in passing argument 1 of ‘void largest_smallest_integers(std::vector<int>&, const std::vector<int>&)’
    3 | void largest_smallest_integers(std::vector<int>& result, const std::vector<int>& input) {
      |                                ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_136.cpp:24:
./CPP_136.cpp:44:82: error: ‘issame’ cannot be used as a function
   44 |     assert (issame(largest_smallest_integers({-6, -4, -4, -3, -100, 1}) , {-3, 1}));
      |                                                                                  ^


CPP_27.cpp: Compilation Failed
Error: ./CPP_27.cpp:61:5: error: redefinition of ‘int main()’
   61 | int main(){
      |     ^~~~
./CPP_27.cpp:54:5: note: ‘int main()’ previously defined here
   54 | int main() {
      |     ^~~~
In file included from ./CPP_27.cpp:60:
./CPP_27.cpp: In function ‘int main()’:
./CPP_27.cpp:62:23: error: cannot convert ‘const char*’ to ‘basic_string*’
   62 |     assert (filp_case("") == "");
      |                       ^~
      |                       |
      |                       const char*
./CPP_27.cpp:18:30: note:   initializing argument 1 of ‘void filp_case(basic_string*, basic_string*)’
   18 | void filp_case(basic_string* s0, basic_string* s1) {
      |                ~~~~~~~~~~~~~~^~
In file included from ./CPP_27.cpp:60:
./CPP_27.cpp:63:23: error: cannot convert ‘const char*’ to ‘basic_string*’
   63 |     assert (filp_case("Hello!") == "hELLO!");
      |                       ^~~~~~~~
      |                       |
      |                       const char*
./CPP_27.cpp:18:30: note:   initializing argument 1 of ‘void filp_case(basic_string*, basic_string*)’
   18 | void filp_case(basic_string* s0, basic_string* s1) {
      |                ~~~~~~~~~~~~~~^~
In file included from ./CPP_27.cpp:60:
./CPP_27.cpp:64:23: error: cannot convert ‘const char*’ to ‘basic_string*’
   64 |     assert (filp_case("These violent delights have violent ends") == "tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS");
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                       |
      |                       const char*
./CPP_27.cpp:18:30: note:   initializing argument 1 of ‘void filp_case(basic_string*, basic_string*)’
   18 | void filp_case(basic_string* s0, basic_string* s1) {
      |                ~~~~~~~~~~~~~~^~


CPP_16.cpp: Compilation Failed
Error: ./CPP_16.cpp: In function ‘int count_distinct_characters(const char*)’:
./CPP_16.cpp:13:14: error: ‘tolower’ was not declared in this scope
   13 |     str[i] = tolower(str[i]);
      |              ^~~~~~~
./CPP_16.cpp:36:20: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
   36 |       seen = malloc(sizeof(char));
      |              ~~~~~~^~~~~~~~~~~~~~
      |                    |
      |                    void*
./CPP_16.cpp:44:25: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
   44 |       new_seen = realloc(seen, (i + 1) * sizeof(char));
      |                  ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                         |
      |                         void*


CPP_72.cpp: Compilation Failed
Error: In file included from ./CPP_72.cpp:29:
./CPP_72.cpp: In function ‘int main()’:
./CPP_72.cpp:31:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   31 |     assert (will_it_fly({3, 2, 3}, 9)==true);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_72.cpp:1:22: note:   initializing argument 1 of ‘int will_it_fly(int*, int, int)’
    1 | int will_it_fly(int* arr, int size, int target) {
      |                 ~~~~~^~~
In file included from ./CPP_72.cpp:29:
./CPP_72.cpp:32:34: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   32 |     assert (will_it_fly({1, 2}, 5) == false);
      |                                  ^
      |                                  |
      |                                  <brace-enclosed initializer list>
./CPP_72.cpp:1:22: note:   initializing argument 1 of ‘int will_it_fly(int*, int, int)’
    1 | int will_it_fly(int* arr, int size, int target) {
      |                 ~~~~~^~~
In file included from ./CPP_72.cpp:29:
./CPP_72.cpp:33:31: error: invalid conversion from ‘int’ to ‘int*’ [-fpermissive]
   33 |     assert (will_it_fly({3}, 5) == true);
      |                               ^
      |                               |
      |                               int
./CPP_72.cpp:33:31: error: too few arguments to function ‘int will_it_fly(int*, int, int)’
./CPP_72.cpp:1:5: note: declared here
    1 | int will_it_fly(int* arr, int size, int target) {
      |     ^~~~~~~~~~~
In file included from ./CPP_72.cpp:29:
./CPP_72.cpp:34:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   34 |     assert (will_it_fly({3, 2, 3}, 1) == false);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_72.cpp:1:22: note:   initializing argument 1 of ‘int will_it_fly(int*, int, int)’
    1 | int will_it_fly(int* arr, int size, int target) {
      |                 ~~~~~^~~
In file included from ./CPP_72.cpp:29:
./CPP_72.cpp:35:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   35 |     assert (will_it_fly({1, 2, 3}, 6) ==false);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_72.cpp:1:22: note:   initializing argument 1 of ‘int will_it_fly(int*, int, int)’
    1 | int will_it_fly(int* arr, int size, int target) {
      |                 ~~~~~^~~
In file included from ./CPP_72.cpp:29:
./CPP_72.cpp:36:31: error: invalid conversion from ‘int’ to ‘int*’ [-fpermissive]
   36 |     assert (will_it_fly({5}, 5) == true);
      |                               ^
      |                               |
      |                               int
./CPP_72.cpp:36:31: error: too few arguments to function ‘int will_it_fly(int*, int, int)’
./CPP_72.cpp:1:5: note: declared here
    1 | int will_it_fly(int* arr, int size, int target) {
      |     ^~~~~~~~~~~


CPP_24.cpp: Compilation Failed
Error: In file included from ./CPP_24.cpp:27:
./CPP_24.cpp: In function ‘int main()’:
./CPP_24.cpp:29:13: error: ‘largest_divisor’ was not declared in this scope; did you mean ‘largest_divisori’?
   29 |     assert (largest_divisor(3) == 1);
      |             ^~~~~~~~~~~~~~~


CPP_92.cpp: Execution Failed
Error: CPP_92: ./CPP_92.cpp:16: int main(): Assertion `any_int(2.5, 2, 3)==false' failed.
Aborted (core dumped)


CPP_43.cpp: Compilation Failed
Error: ./CPP_43.cpp: In function ‘int32_t* pairs_sum_to_zero(int32_t*, int32_t)’:
./CPP_43.cpp:10:16: error: invalid conversion from ‘int’ to ‘int32_t*’ {aka ‘int*’} [-fpermissive]
   10 |         return 1;
      |                ^
      |                |
      |                int
In file included from ./CPP_43.cpp:18:
./CPP_43.cpp: In function ‘int main()’:
./CPP_43.cpp:20:43: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   20 |     assert (pairs_sum_to_zero({1, 3, 5, 0}) == false);
      |                                           ^
      |                                           |
      |                                           <brace-enclosed initializer list>
./CPP_43.cpp:3:37: note:   initializing argument 1 of ‘int32_t* pairs_sum_to_zero(int32_t*, int32_t)’
    3 | int32_t* pairs_sum_to_zero(int32_t* vec, int32_t len) {
      |                            ~~~~~~~~~^~~
In file included from ./CPP_43.cpp:18:
./CPP_43.cpp:21:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   21 |     assert (pairs_sum_to_zero({1, 3, -2, 1}) == false);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_43.cpp:3:37: note:   initializing argument 1 of ‘int32_t* pairs_sum_to_zero(int32_t*, int32_t)’
    3 | int32_t* pairs_sum_to_zero(int32_t* vec, int32_t len) {
      |                            ~~~~~~~~~^~~
In file included from ./CPP_43.cpp:18:
./CPP_43.cpp:22:43: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   22 |     assert (pairs_sum_to_zero({1, 2, 3, 7}) == false);
      |                                           ^
      |                                           |
      |                                           <brace-enclosed initializer list>
./CPP_43.cpp:3:37: note:   initializing argument 1 of ‘int32_t* pairs_sum_to_zero(int32_t*, int32_t)’
    3 | int32_t* pairs_sum_to_zero(int32_t* vec, int32_t len) {
      |                            ~~~~~~~~~^~~
In file included from ./CPP_43.cpp:18:
./CPP_43.cpp:23:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   23 |     assert (pairs_sum_to_zero({2, 4, -5, 3, 5, 7}) == true);
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_43.cpp:3:37: note:   initializing argument 1 of ‘int32_t* pairs_sum_to_zero(int32_t*, int32_t)’
    3 | int32_t* pairs_sum_to_zero(int32_t* vec, int32_t len) {
      |                            ~~~~~~~~~^~~
In file included from ./CPP_43.cpp:18:
./CPP_43.cpp:24:34: error: invalid conversion from ‘int’ to ‘int32_t*’ {aka ‘int*’} [-fpermissive]
   24 |     assert (pairs_sum_to_zero({1}) == false);
      |                                  ^
      |                                  |
      |                                  int
./CPP_43.cpp:24:34: error: too few arguments to function ‘int32_t* pairs_sum_to_zero(int32_t*, int32_t)’
./CPP_43.cpp:3:10: note: declared here
    3 | int32_t* pairs_sum_to_zero(int32_t* vec, int32_t len) {
      |          ^~~~~~~~~~~~~~~~~
In file included from ./CPP_43.cpp:18:
./CPP_43.cpp:25:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   25 |     assert (pairs_sum_to_zero({-3, 9, -1, 3, 2, 30}) == true);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_43.cpp:3:37: note:   initializing argument 1 of ‘int32_t* pairs_sum_to_zero(int32_t*, int32_t)’
    3 | int32_t* pairs_sum_to_zero(int32_t* vec, int32_t len) {
      |                            ~~~~~~~~~^~~
In file included from ./CPP_43.cpp:18:
./CPP_43.cpp:26:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   26 |     assert (pairs_sum_to_zero({-3, 9, -1, 3, 2, 31}) == true);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_43.cpp:3:37: note:   initializing argument 1 of ‘int32_t* pairs_sum_to_zero(int32_t*, int32_t)’
    3 | int32_t* pairs_sum_to_zero(int32_t* vec, int32_t len) {
      |                            ~~~~~~~~~^~~
In file included from ./CPP_43.cpp:18:
./CPP_43.cpp:27:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   27 |     assert (pairs_sum_to_zero({-3, 9, -1, 4, 2, 30}) == false);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_43.cpp:3:37: note:   initializing argument 1 of ‘int32_t* pairs_sum_to_zero(int32_t*, int32_t)’
    3 | int32_t* pairs_sum_to_zero(int32_t* vec, int32_t len) {
      |                            ~~~~~~~~~^~~
In file included from ./CPP_43.cpp:18:
./CPP_43.cpp:28:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   28 |     assert (pairs_sum_to_zero({-3, 9, -1, 4, 2, 31}) == false);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_43.cpp:3:37: note:   initializing argument 1 of ‘int32_t* pairs_sum_to_zero(int32_t*, int32_t)’
    3 | int32_t* pairs_sum_to_zero(int32_t* vec, int32_t len) {
      |                            ~~~~~~~~~^~~


CPP_53.cpp: Compilation Failed
Error: In file included from ./CPP_53.cpp:6:
./CPP_53.cpp: In function ‘int main()’:
./CPP_53.cpp:8:13: error: ‘add’ was not declared in this scope
    8 |     assert (add(0, 1) == 1);
      |             ^~~
./CPP_53.cpp:15:15: error: ‘rand’ was not declared in this scope
   15 |         int x=rand()%1000;
      |               ^~~~


CPP_126.cpp: Compilation Failed
Error: ./CPP_126.cpp:16:1: error: stray ‘`’ in program
   16 | ```
      | ^
./CPP_126.cpp:16:2: error: stray ‘`’ in program
   16 | ```
      |  ^
./CPP_126.cpp:16:3: error: stray ‘`’ in program
   16 | ```
      |   ^
./CPP_126.cpp:3:31: error: ‘size_t’ has not been declared
    3 | int is_sorted(const int* arr, size_t count) {
      |                               ^~~~~~
./CPP_126.cpp: In function ‘int is_sorted(const int*, int)’:
./CPP_126.cpp:8:8: error: ‘size_t’ was not declared in this scope
    8 |   for (size_t i = 1; i < count; ++i) {
      |        ^~~~~~
./CPP_126.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_126.cpp:8:22: error: ‘i’ was not declared in this scope
    8 |   for (size_t i = 1; i < count; ++i) {
      |                      ^
./CPP_126.cpp: At global scope:
./CPP_126.cpp:18:1: error: expected unqualified-id before ‘<’ token
   18 | <|im_end|>
      | ^
In file included from ./CPP_126.cpp:20:
./CPP_126.cpp: In function ‘int main()’:
./CPP_126.cpp:22:26: error: invalid conversion from ‘int’ to ‘const int*’ [-fpermissive]
   22 |     assert (is_sorted({5}) == true);
      |                          ^
      |                          |
      |                          int
./CPP_126.cpp:22:26: error: too few arguments to function ‘int is_sorted(const int*, int)’
./CPP_126.cpp:3:5: note: declared here
    3 | int is_sorted(const int* arr, size_t count) {
      |     ^~~~~~~~~
In file included from ./CPP_126.cpp:20:
./CPP_126.cpp:22:5: error: ‘__assert_fail’ was not declared in this scope
   22 |     assert (is_sorted({5}) == true);
      |     ^~~~~~
./CPP_126.cpp:23:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   23 |     assert (is_sorted({1, 2, 3, 4, 5}) == true);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_126.cpp:3:26: note:   initializing argument 1 of ‘int is_sorted(const int*, int)’
    3 | int is_sorted(const int* arr, size_t count) {
      |               ~~~~~~~~~~~^~~
In file included from ./CPP_126.cpp:20:
./CPP_126.cpp:24:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   24 |     assert (is_sorted({1, 3, 2, 4, 5}) == false);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_126.cpp:3:26: note:   initializing argument 1 of ‘int is_sorted(const int*, int)’
    3 | int is_sorted(const int* arr, size_t count) {
      |               ~~~~~~~~~~~^~~
In file included from ./CPP_126.cpp:20:
./CPP_126.cpp:25:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   25 |     assert (is_sorted({1, 2, 3, 4, 5, 6}) == true);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_126.cpp:3:26: note:   initializing argument 1 of ‘int is_sorted(const int*, int)’
    3 | int is_sorted(const int* arr, size_t count) {
      |               ~~~~~~~~~~~^~~
In file included from ./CPP_126.cpp:20:
./CPP_126.cpp:26:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   26 |     assert (is_sorted({1, 2, 3, 4, 5, 6, 7}) == true);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_126.cpp:3:26: note:   initializing argument 1 of ‘int is_sorted(const int*, int)’
    3 | int is_sorted(const int* arr, size_t count) {
      |               ~~~~~~~~~~~^~~
In file included from ./CPP_126.cpp:20:
./CPP_126.cpp:27:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   27 |     assert (is_sorted({1, 3, 2, 4, 5, 6, 7}) == false);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_126.cpp:3:26: note:   initializing argument 1 of ‘int is_sorted(const int*, int)’
    3 | int is_sorted(const int* arr, size_t count) {
      |               ~~~~~~~~~~~^~~
In file included from ./CPP_126.cpp:20:
./CPP_126.cpp:28:25: error: too few arguments to function ‘int is_sorted(const int*, int)’
   28 |     assert (is_sorted({}) == true);
      |                         ^
./CPP_126.cpp:3:5: note: declared here
    3 | int is_sorted(const int* arr, size_t count) {
      |     ^~~~~~~~~
In file included from ./CPP_126.cpp:20:
./CPP_126.cpp:29:26: error: invalid conversion from ‘int’ to ‘const int*’ [-fpermissive]
   29 |     assert (is_sorted({1}) == true);
      |                          ^
      |                          |
      |                          int
./CPP_126.cpp:29:26: error: too few arguments to function ‘int is_sorted(const int*, int)’
./CPP_126.cpp:3:5: note: declared here
    3 | int is_sorted(const int* arr, size_t count) {
      |     ^~~~~~~~~
In file included from ./CPP_126.cpp:20:
./CPP_126.cpp:30:32: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   30 |     assert (is_sorted({3, 2, 1}) == false);
      |                                ^
      |                                |
      |                                <brace-enclosed initializer list>
./CPP_126.cpp:3:26: note:   initializing argument 1 of ‘int is_sorted(const int*, int)’
    3 | int is_sorted(const int* arr, size_t count) {
      |               ~~~~~~~~~~~^~~
In file included from ./CPP_126.cpp:20:
./CPP_126.cpp:31:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   31 |     assert (is_sorted({1, 2, 2, 2, 3, 4}) == false);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_126.cpp:3:26: note:   initializing argument 1 of ‘int is_sorted(const int*, int)’
    3 | int is_sorted(const int* arr, size_t count) {
      |               ~~~~~~~~~~~^~~
In file included from ./CPP_126.cpp:20:
./CPP_126.cpp:32:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   32 |     assert (is_sorted({1, 2, 3, 3, 3, 4}) == false);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_126.cpp:3:26: note:   initializing argument 1 of ‘int is_sorted(const int*, int)’
    3 | int is_sorted(const int* arr, size_t count) {
      |               ~~~~~~~~~~~^~~
In file included from ./CPP_126.cpp:20:
./CPP_126.cpp:33:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   33 |     assert (is_sorted({1, 2, 2, 3, 3, 4}) == true);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_126.cpp:3:26: note:   initializing argument 1 of ‘int is_sorted(const int*, int)’
    3 | int is_sorted(const int* arr, size_t count) {
      |               ~~~~~~~~~~~^~~
In file included from ./CPP_126.cpp:20:
./CPP_126.cpp:34:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   34 |     assert (is_sorted({1, 2, 3, 4}) == true);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_126.cpp:3:26: note:   initializing argument 1 of ‘int is_sorted(const int*, int)’
    3 | int is_sorted(const int* arr, size_t count) {
      |               ~~~~~~~~~~~^~~


CPP_52.cpp: Compilation Failed
Error: In file included from ./CPP_52.cpp:22:
./CPP_52.cpp: In function ‘int main()’:
./CPP_52.cpp:24:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   24 |     assert (below_threshold({1, 2, 4, 10}, 100));
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_52.cpp:3:34: note:   initializing argument 1 of ‘int32_t below_threshold(int32_t*, int32_t)’
    3 | int32_t below_threshold(int32_t* vec, int32_t threshold) {
      |                         ~~~~~~~~~^~~
In file included from ./CPP_52.cpp:22:
./CPP_52.cpp:25:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   25 |     assert (not(below_threshold({1, 20, 4, 10}, 5)));
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_52.cpp:3:34: note:   initializing argument 1 of ‘int32_t below_threshold(int32_t*, int32_t)’
    3 | int32_t below_threshold(int32_t* vec, int32_t threshold) {
      |                         ~~~~~~~~~^~~
In file included from ./CPP_52.cpp:22:
./CPP_52.cpp:26:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   26 |     assert (below_threshold({1, 20, 4, 10}, 21));
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_52.cpp:3:34: note:   initializing argument 1 of ‘int32_t below_threshold(int32_t*, int32_t)’
    3 | int32_t below_threshold(int32_t* vec, int32_t threshold) {
      |                         ~~~~~~~~~^~~
In file included from ./CPP_52.cpp:22:
./CPP_52.cpp:27:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   27 |     assert (below_threshold({1, 20, 4, 10}, 22));
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_52.cpp:3:34: note:   initializing argument 1 of ‘int32_t below_threshold(int32_t*, int32_t)’
    3 | int32_t below_threshold(int32_t* vec, int32_t threshold) {
      |                         ~~~~~~~~~^~~
In file included from ./CPP_52.cpp:22:
./CPP_52.cpp:28:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   28 |     assert (below_threshold({1, 8, 4, 10}, 11));
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_52.cpp:3:34: note:   initializing argument 1 of ‘int32_t below_threshold(int32_t*, int32_t)’
    3 | int32_t below_threshold(int32_t* vec, int32_t threshold) {
      |                         ~~~~~~~~~^~~
In file included from ./CPP_52.cpp:22:
./CPP_52.cpp:29:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   29 |     assert (not(below_threshold({1, 8, 4, 10}, 10)));
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_52.cpp:3:34: note:   initializing argument 1 of ‘int32_t below_threshold(int32_t*, int32_t)’
    3 | int32_t below_threshold(int32_t* vec, int32_t threshold) {
      |                         ~~~~~~~~~^~~


CPP_2.cpp: Compilation Failed
Error: In file included from ./CPP_2.cpp:8:
./CPP_2.cpp: In function ‘int main()’:
./CPP_2.cpp:11:10: error: ‘abs’ was not declared in this scope
   11 |  assert (abs(truncate_number(1.33) - 0.33) < 1e-4);
      |          ^~~


CPP_139.cpp: Compilation Failed
Error: In file included from ./CPP_139.cpp:87:
./CPP_139.cpp: In function ‘int main()’:
./CPP_139.cpp:89:13: error: ‘special_factorial’ was not declared in this scope; did you mean ‘special_factoriali’?
   89 |     assert (special_factorial(4) == 288);
      |             ^~~~~~~~~~~~~~~~~
./CPP_139.cpp: In function ‘long long int special_factoriali(int)’:
./CPP_139.cpp:84:1: warning: control reaches end of non-void function [-Wreturn-type]
   84 | }
      | ^


CPP_57.cpp: Compilation Failed
Error: ./CPP_57.cpp:3:58: error: ‘size_t’ has not been declared
    3 | int32_t _Z9monotonicSt6vectorIfSaIfEE(const float * vec, size_t size) {
      |                                                          ^~~~~~
./CPP_57.cpp: In function ‘int32_t _Z9monotonicSt6vectorIfSaIfEE(const float*, int)’:
./CPP_57.cpp:10:8: error: ‘size_t’ was not declared in this scope
   10 |   for (size_t i = 1; i < size; ++i) {
      |        ^~~~~~
./CPP_57.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_57.cpp:10:22: error: ‘i’ was not declared in this scope
   10 |   for (size_t i = 1; i < size; ++i) {
      |                      ^
In file included from ./CPP_57.cpp:24:
./CPP_57.cpp: In function ‘int main()’:
./CPP_57.cpp:26:13: error: ‘monotonic’ was not declared in this scope
   26 |     assert (monotonic({1, 2, 4, 10}) == true);
      |             ^~~~~~~~~


CPP_159.cpp: Compilation Failed
Error: ./CPP_159.cpp:3:28: error: typedef name may not be a nested-name-specifier
    3 | typedef struct vector std::vector;
      |                            ^~~~~~
./CPP_159.cpp:4:34: error: typedef name may not be a nested-name-specifier
    4 | typedef struct _Vector_base std::_Vector_base;
      |                                  ^~~~~~~~~~~~
./CPP_159.cpp:5:46: error: expected initializer before ‘<’ token
    5 | typedef struct _Vector_impl std::_Vector_base<int, std::allocator<int>>::_Vector_impl;
      |                                              ^
./CPP_159.cpp:6:51: error: expected initializer before ‘<’ token
    6 | typedef struct _Vector_impl_data std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data;
      |                                                   ^
./CPP_159.cpp:9:23: error: field ‘_Vector_impl’ has incomplete type ‘_Vector_impl’
    9 |   struct _Vector_impl _Vector_impl;
      |                       ^~~~~~~~~~~~
./CPP_159.cpp:5:16: note: forward declaration of ‘struct _Vector_impl’
    5 | typedef struct _Vector_impl std::_Vector_base<int, std::allocator<int>>::_Vector_impl;
      |                ^~~~~~~~~~~~
./CPP_159.cpp:13:28: error: field ‘_Vector_impl_data’ has incomplete type ‘_Vector_impl_data’
   13 |   struct _Vector_impl_data _Vector_impl_data;
      |                            ^~~~~~~~~~~~~~~~~
./CPP_159.cpp:6:16: note: forward declaration of ‘struct _Vector_impl_data’
    6 | typedef struct _Vector_impl_data std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data;
      |                ^~~~~~~~~~~~~~~~~
./CPP_159.cpp:22:16: error: variable or field ‘eati’ declared void
   22 | void eati(std::vector* ret, int a, int b, int c) {
      |                ^~~~~~
./CPP_159.cpp:22:16: error: ‘vector’ is not a member of ‘std’
./CPP_159.cpp:2:1: note: ‘std::vector’ is defined in header ‘<vector>’; did you forget to ‘#include <vector>’?
    1 | #include <stdlib.h>
  +++ |+#include <vector>
    2 | 
./CPP_159.cpp:22:24: error: ‘ret’ was not declared in this scope
   22 | void eati(std::vector* ret, int a, int b, int c) {
      |                        ^~~
./CPP_159.cpp:22:29: error: expected primary-expression before ‘int’
   22 | void eati(std::vector* ret, int a, int b, int c) {
      |                             ^~~
./CPP_159.cpp:22:36: error: expected primary-expression before ‘int’
   22 | void eati(std::vector* ret, int a, int b, int c) {
      |                                    ^~~
./CPP_159.cpp:22:43: error: expected primary-expression before ‘int’
   22 | void eati(std::vector* ret, int a, int b, int c) {
      |                                           ^~~
./CPP_159.cpp:40:13: error: ‘vector’ is not a template
   40 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_159.cpp:40:27: error: ‘vector’ is not a template
   40 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_159.cpp:40:25: error: ‘a’ has incomplete type
   40 | bool issame(vector<int> a,vector<int>b){
      |             ~~~~~~~~~~~~^
./CPP_159.cpp:3:16: note: forward declaration of ‘struct vector’
    3 | typedef struct vector std::vector;
      |                ^~~~~~
./CPP_159.cpp:40:38: error: ‘b’ has incomplete type
   40 | bool issame(vector<int> a,vector<int>b){
      |                           ~~~~~~~~~~~^
./CPP_159.cpp:3:16: note: forward declaration of ‘struct vector’
    3 | typedef struct vector std::vector;
      |                ^~~~~~
In file included from ./CPP_159.cpp:39:
./CPP_159.cpp: In function ‘int main()’:
./CPP_159.cpp:49:20: error: ‘eat’ was not declared in this scope
   49 |     assert (issame(eat(5, 6, 10) , {11, 4}));
      |                    ^~~


CPP_108.cpp: Compilation Failed
Error: In file included from ./CPP_108.cpp:25:
./CPP_108.cpp: In function ‘int main()’:
./CPP_108.cpp:27:26: error: too few arguments to function ‘int count_nums(int*, int)’
   27 |     assert (count_nums({}) == 0);
      |                          ^
./CPP_108.cpp:1:5: note: declared here
    1 | int count_nums(int* arr, int size) {
      |     ^~~~~~~~~~
In file included from ./CPP_108.cpp:25:
./CPP_108.cpp:28:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   28 |     assert (count_nums({-1, -2, 0}) == 0);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_108.cpp:1:21: note:   initializing argument 1 of ‘int count_nums(int*, int)’
    1 | int count_nums(int* arr, int size) {
      |                ~~~~~^~~
In file included from ./CPP_108.cpp:25:
./CPP_108.cpp:29:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   29 |     assert (count_nums({1, 1, 2, -2, 3, 4, 5}) == 6);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_108.cpp:1:21: note:   initializing argument 1 of ‘int count_nums(int*, int)’
    1 | int count_nums(int* arr, int size) {
      |                ~~~~~^~~
In file included from ./CPP_108.cpp:25:
./CPP_108.cpp:30:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   30 |     assert (count_nums({1, 6, 9, -6, 0, 1, 5}) == 5);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_108.cpp:1:21: note:   initializing argument 1 of ‘int count_nums(int*, int)’
    1 | int count_nums(int* arr, int size) {
      |                ~~~~~^~~
In file included from ./CPP_108.cpp:25:
./CPP_108.cpp:31:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   31 |     assert (count_nums({1, 100, 98, -7, 1, -1}) == 4);
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_108.cpp:1:21: note:   initializing argument 1 of ‘int count_nums(int*, int)’
    1 | int count_nums(int* arr, int size) {
      |                ~~~~~^~~
In file included from ./CPP_108.cpp:25:
./CPP_108.cpp:32:49: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   32 |     assert (count_nums({12, 23, 34, -45, -56, 0}) == 5);
      |                                                 ^
      |                                                 |
      |                                                 <brace-enclosed initializer list>
./CPP_108.cpp:1:21: note:   initializing argument 1 of ‘int count_nums(int*, int)’
    1 | int count_nums(int* arr, int size) {
      |                ~~~~~^~~
In file included from ./CPP_108.cpp:25:
./CPP_108.cpp:33:31: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   33 |     assert (count_nums({-0, 1}) == 1);
      |                               ^
      |                               |
      |                               <brace-enclosed initializer list>
./CPP_108.cpp:1:21: note:   initializing argument 1 of ‘int count_nums(int*, int)’
    1 | int count_nums(int* arr, int size) {
      |                ~~~~~^~~
In file included from ./CPP_108.cpp:25:
./CPP_108.cpp:34:27: error: invalid conversion from ‘int’ to ‘int*’ [-fpermissive]
   34 |     assert (count_nums({1}) == 1);
      |                           ^
      |                           |
      |                           int
./CPP_108.cpp:34:27: error: too few arguments to function ‘int count_nums(int*, int)’
./CPP_108.cpp:1:5: note: declared here
    1 | int count_nums(int* arr, int size) {
      |     ^~~~~~~~~~


CPP_61.cpp: Compilation Failed
Error: /usr/bin/ld: /tmp/ccNOwi7n.o: in function `correct_bracketing(char const*)':
CPP_61.cpp:(.text+0x18): undefined reference to `strlen(char const*)'
collect2: error: ld returned 1 exit status


CPP_124.cpp: Execution Failed
Error: CPP_124: ./CPP_124.cpp:66: int main(): Assertion `valid_date("03-11-2000") == true' failed.
Aborted (core dumped)


CPP_75.cpp: Compilation Failed
Error: In file included from ./CPP_75.cpp:30:
./CPP_75.cpp: In function ‘int main()’:
./CPP_75.cpp:32:13: error: ‘is_multiply_prime’ was not declared in this scope
   32 |     assert (is_multiply_prime(5) == false);
      |             ^~~~~~~~~~~~~~~~~


CPP_142.cpp: Compilation Failed
Error: In file included from ./CPP_142.cpp:18:
./CPP_142.cpp: In function ‘int main()’:
./CPP_142.cpp:20:32: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   20 |     assert (sum_squares({1,2,3}) == 6);
      |                                ^
      |                                |
      |                                <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_142.cpp:18:
./CPP_142.cpp:21:32: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   21 |     assert (sum_squares({1,4,9}) == 14);
      |                                ^
      |                                |
      |                                <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_142.cpp:18:
./CPP_142.cpp:22:27: error: too few arguments to function ‘int sum_squares(int*, int)’
   22 |     assert (sum_squares({}) == 0);
      |                           ^
./CPP_142.cpp:3:5: note: declared here
    3 | int sum_squares(int* arr, int size) {
      |     ^~~~~~~~~~~
In file included from ./CPP_142.cpp:18:
./CPP_142.cpp:23:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   23 |     assert (sum_squares({1,1,1,1,1,1,1,1,1}) == 9);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_142.cpp:18:
./CPP_142.cpp:24:53: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   24 |     assert (sum_squares({-1,-1,-1,-1,-1,-1,-1,-1,-1}) == -3);
      |                                                     ^
      |                                                     |
      |                                                     <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_142.cpp:18:
./CPP_142.cpp:25:28: error: too few arguments to function ‘int sum_squares(int*, int)’
   25 |     assert (sum_squares({0}) == 0);
      |                            ^
./CPP_142.cpp:3:5: note: declared here
    3 | int sum_squares(int* arr, int size) {
      |     ^~~~~~~~~~~
In file included from ./CPP_142.cpp:18:
./CPP_142.cpp:26:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   26 |     assert (sum_squares({-1,-5,2,-1,-5}) == -126);
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_142.cpp:18:
./CPP_142.cpp:27:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   27 |     assert (sum_squares({-56,-99,1,0,-2}) == 3030);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_142.cpp:18:
./CPP_142.cpp:28:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   28 |     assert (sum_squares({-1,0,0,0,0,0,0,0,-1}) == 0);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_142.cpp:18:
./CPP_142.cpp:29:89: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   29 |     assert (sum_squares({-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37}) == -14196);
      |                                                                                         ^
      |                                                                                         |
      |                                                                                         <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_142.cpp:18:
./CPP_142.cpp:30:107: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   30 |     assert (sum_squares({-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10}) == -1448);
      |                                                                                                           ^
      |                                                                                                           |
      |                                                                                                           <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* arr, int size) {
      |                 ~~~~~^~~


CPP_66.cpp: Compilation Failed
Error: ./CPP_66.cpp: In function ‘int digitSum(const char*)’:
./CPP_66.cpp:2:13: error: ‘strlen’ was not declared in this scope
    2 |   int len = strlen(str);
      |             ^~~~~~
./CPP_66.cpp:1:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
  +++ |+#include <cstring>
    1 | int digitSum(const char* str) {


CPP_114.cpp: Compilation Failed
Error: In file included from ./CPP_114.cpp:19:
./CPP_114.cpp: In function ‘int main()’:
./CPP_114.cpp:21:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   21 |     assert (minSubArraySum({2, 3, 4, 1, 2, 4}) == 1);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_114.cpp:1:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, long long int)’
    1 | long long minSubArraySum(long long* arr, long long len) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:19:
./CPP_114.cpp:22:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   22 |     assert (minSubArraySum({-1, -2, -3}) == -6);
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_114.cpp:1:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, long long int)’
    1 | long long minSubArraySum(long long* arr, long long len) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:19:
./CPP_114.cpp:23:48: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   23 |     assert (minSubArraySum({-1, -2, -3, 2, -10}) == -14);
      |                                                ^
      |                                                |
      |                                                <brace-enclosed initializer list>
./CPP_114.cpp:1:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, long long int)’
    1 | long long minSubArraySum(long long* arr, long long len) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:19:
./CPP_114.cpp:24:47: error: invalid conversion from ‘long int’ to ‘long long int*’ [-fpermissive]
   24 |     assert (minSubArraySum({-9999999999999999}) == -9999999999999999);
      |                                               ^
      |                                               |
      |                                               long int
./CPP_114.cpp:24:47: error: too few arguments to function ‘long long int minSubArraySum(long long int*, long long int)’
./CPP_114.cpp:1:11: note: declared here
    1 | long long minSubArraySum(long long* arr, long long len) {
      |           ^~~~~~~~~~~~~~
In file included from ./CPP_114.cpp:19:
./CPP_114.cpp:25:48: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   25 |     assert (minSubArraySum({0, 10, 20, 1000000}) == 0);
      |                                                ^
      |                                                |
      |                                                <brace-enclosed initializer list>
./CPP_114.cpp:1:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, long long int)’
    1 | long long minSubArraySum(long long* arr, long long len) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:19:
./CPP_114.cpp:26:48: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   26 |     assert (minSubArraySum({-1, -2, -3, 10, -5}) == -6);
      |                                                ^
      |                                                |
      |                                                <brace-enclosed initializer list>
./CPP_114.cpp:1:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, long long int)’
    1 | long long minSubArraySum(long long* arr, long long len) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:19:
./CPP_114.cpp:27:53: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   27 |     assert (minSubArraySum({100, -1, -2, -3, 10, -5}) == -6);
      |                                                     ^
      |                                                     |
      |                                                     <brace-enclosed initializer list>
./CPP_114.cpp:1:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, long long int)’
    1 | long long minSubArraySum(long long* arr, long long len) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:19:
./CPP_114.cpp:28:49: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   28 |     assert (minSubArraySum({10, 11, 13, 8, 3, 4}) == 3);
      |                                                 ^
      |                                                 |
      |                                                 <brace-enclosed initializer list>
./CPP_114.cpp:1:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, long long int)’
    1 | long long minSubArraySum(long long* arr, long long len) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:19:
./CPP_114.cpp:29:53: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   29 |     assert (minSubArraySum({100, -33, 32, -1, 0, -2}) == -33);
      |                                                     ^
      |                                                     |
      |                                                     <brace-enclosed initializer list>
./CPP_114.cpp:1:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, long long int)’
    1 | long long minSubArraySum(long long* arr, long long len) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:19:
./CPP_114.cpp:30:33: error: invalid conversion from ‘int’ to ‘long long int*’ [-fpermissive]
   30 |     assert (minSubArraySum({-10}) == -10);
      |                                 ^
      |                                 |
      |                                 int
./CPP_114.cpp:30:33: error: too few arguments to function ‘long long int minSubArraySum(long long int*, long long int)’
./CPP_114.cpp:1:11: note: declared here
    1 | long long minSubArraySum(long long* arr, long long len) {
      |           ^~~~~~~~~~~~~~
In file included from ./CPP_114.cpp:19:
./CPP_114.cpp:31:31: error: invalid conversion from ‘int’ to ‘long long int*’ [-fpermissive]
   31 |     assert (minSubArraySum({7}) == 7);
      |                               ^
      |                               |
      |                               int
./CPP_114.cpp:31:31: error: too few arguments to function ‘long long int minSubArraySum(long long int*, long long int)’
./CPP_114.cpp:1:11: note: declared here
    1 | long long minSubArraySum(long long* arr, long long len) {
      |           ^~~~~~~~~~~~~~
In file included from ./CPP_114.cpp:19:
./CPP_114.cpp:32:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   32 |     assert (minSubArraySum({1, -1}) == -1);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_114.cpp:1:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, long long int)’
    1 | long long minSubArraySum(long long* arr, long long len) {
      |                          ~~~~~~~~~~~^~~


CPP_85.cpp: Compilation Failed
Error: ./CPP_85.cpp:22:5: error: redefinition of ‘int main()’
   22 | int main(){
      |     ^~~~
./CPP_85.cpp:12:5: note: ‘int main()’ previously defined here
   12 | int main() {
      |     ^~~~
In file included from ./CPP_85.cpp:21:
./CPP_85.cpp: In function ‘int main()’:
./CPP_85.cpp:23:24: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   23 |     assert (add({4, 88}) == 88);
      |                        ^
      |                        |
      |                        <brace-enclosed initializer list>
./CPP_85.cpp:3:14: note:   initializing argument 1 of ‘int add(int*, int*)’
    3 | int add(int *begin, int *end) {
      |         ~~~~~^~~~~
In file included from ./CPP_85.cpp:21:
./CPP_85.cpp:24:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   24 |     assert (add({4, 5, 6, 7, 2, 122}) == 122);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_85.cpp:3:14: note:   initializing argument 1 of ‘int add(int*, int*)’
    3 | int add(int *begin, int *end) {
      |         ~~~~~^~~~~
In file included from ./CPP_85.cpp:21:
./CPP_85.cpp:25:29: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   25 |     assert (add({4, 0, 6, 7}) == 0);
      |                             ^
      |                             |
      |                             <brace-enclosed initializer list>
./CPP_85.cpp:3:14: note:   initializing argument 1 of ‘int add(int*, int*)’
    3 | int add(int *begin, int *end) {
      |         ~~~~~^~~~~
In file included from ./CPP_85.cpp:21:
./CPP_85.cpp:26:29: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   26 |     assert (add({4, 4, 6, 8}) == 12);
      |                             ^
      |                             |
      |                             <brace-enclosed initializer list>
./CPP_85.cpp:3:14: note:   initializing argument 1 of ‘int add(int*, int*)’
    3 | int add(int *begin, int *end) {
      |         ~~~~~^~~~~


CPP_46.cpp: Execution Failed
Error: CPP_46: ./CPP_46.cpp:30: int main(): Assertion `fib4(5) == 4' failed.
Aborted (core dumped)


CPP_28.cpp: Compilation Failed
Error: In file included from ./CPP_28.cpp:70:
./CPP_28.cpp: In function ‘int main()’:
./CPP_28.cpp:72:27: error: too few arguments to function ‘void concatenate(class_std___cxx11_basic_string_char_std___cxx11___char_traits_char___std___allocator_char_*, class_std_vector*)’
   72 |     assert (concatenate({}) == "");
      |                           ^
./CPP_28.cpp:40:6: note: declared here
   40 | void concatenate(class_std___cxx11_basic_string_char_std___cxx11___char_traits_char___std___allocator_char_* str, class_std_vector* vec)
      |      ^~~~~~~~~~~
In file included from ./CPP_28.cpp:70:
./CPP_28.cpp:73:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘class_std___cxx11_basic_string_char_std___cxx11___char_traits_char___std___allocator_char_*’ {aka ‘_class_std___cxx11_basic_string_char_std___cxx11___char_traits_char___std___allocator_char_*’}
   73 |      assert (concatenate({"x", "y", "z"}) == "xyz");
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_28.cpp:40:110: note:   initializing argument 1 of ‘void concatenate(class_std___cxx11_basic_string_char_std___cxx11___char_traits_char___std___allocator_char_*, class_std_vector*)’
   40 | void concatenate(class_std___cxx11_basic_string_char_std___cxx11___char_traits_char___std___allocator_char_* str, class_std_vector* vec)
      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
In file included from ./CPP_28.cpp:70:
./CPP_28.cpp:74:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘class_std___cxx11_basic_string_char_std___cxx11___char_traits_char___std___allocator_char_*’ {aka ‘_class_std___cxx11_basic_string_char_std___cxx11___char_traits_char___std___allocator_char_*’}
   74 |     assert (concatenate({"x", "y", "z", "w", "k"}) == "xyzwk");
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_28.cpp:40:110: note:   initializing argument 1 of ‘void concatenate(class_std___cxx11_basic_string_char_std___cxx11___char_traits_char___std___allocator_char_*, class_std_vector*)’
   40 | void concatenate(class_std___cxx11_basic_string_char_std___cxx11___char_traits_char___std___allocator_char_* str, class_std_vector* vec)
      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~


CPP_62.cpp: Compilation Failed
Error: ./CPP_62.cpp:14:13: error: ‘vector’ was not declared in this scope
   14 | bool issame(vector<float> a,vector<float>b){
      |             ^~~~~~
./CPP_62.cpp:14:20: error: expected primary-expression before ‘float’
   14 | bool issame(vector<float> a,vector<float>b){
      |                    ^~~~~
./CPP_62.cpp:14:29: error: ‘vector’ was not declared in this scope
   14 | bool issame(vector<float> a,vector<float>b){
      |                             ^~~~~~
./CPP_62.cpp:14:36: error: expected primary-expression before ‘float’
   14 | bool issame(vector<float> a,vector<float>b){
      |                                    ^~~~~
./CPP_62.cpp:14:43: error: expression list treated as compound expression in initializer [-fpermissive]
   14 | bool issame(vector<float> a,vector<float>b){
      |                                           ^
In file included from ./CPP_62.cpp:13:
./CPP_62.cpp: In function ‘int main()’:
./CPP_62.cpp:23:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   23 |     assert (issame(derivative({3, 1, 2, 4, 5}) , {1, 4, 12, 20}));
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_62.cpp:2:26: note:   initializing argument 1 of ‘float* derivative(float*, size_t)’
    2 | float* derivative(float* x, size_t n) {
      |                   ~~~~~~~^
In file included from ./CPP_62.cpp:13:
./CPP_62.cpp:23:64: error: ‘issame’ cannot be used as a function
   23 |     assert (issame(derivative({3, 1, 2, 4, 5}) , {1, 4, 12, 20}));
      |                                                                ^
./CPP_62.cpp:24:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   24 |     assert (issame(derivative({1, 2, 3}) , {2, 6}));
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_62.cpp:2:26: note:   initializing argument 1 of ‘float* derivative(float*, size_t)’
    2 | float* derivative(float* x, size_t n) {
      |                   ~~~~~~~^
In file included from ./CPP_62.cpp:13:
./CPP_62.cpp:24:50: error: ‘issame’ cannot be used as a function
   24 |     assert (issame(derivative({1, 2, 3}) , {2, 6}));
      |                                                  ^
./CPP_62.cpp:25:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   25 |     assert (issame(derivative({3, 2, 1}) , {2, 2}));
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_62.cpp:2:26: note:   initializing argument 1 of ‘float* derivative(float*, size_t)’
    2 | float* derivative(float* x, size_t n) {
      |                   ~~~~~~~^
In file included from ./CPP_62.cpp:13:
./CPP_62.cpp:25:50: error: ‘issame’ cannot be used as a function
   25 |     assert (issame(derivative({3, 2, 1}) , {2, 2}));
      |                                                  ^
./CPP_62.cpp:26:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   26 |     assert (issame(derivative({3, 2, 1, 0, 4}) , {2, 2, 0, 16}));
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_62.cpp:2:26: note:   initializing argument 1 of ‘float* derivative(float*, size_t)’
    2 | float* derivative(float* x, size_t n) {
      |                   ~~~~~~~^
In file included from ./CPP_62.cpp:13:
./CPP_62.cpp:26:63: error: ‘issame’ cannot be used as a function
   26 |     assert (issame(derivative({3, 2, 1, 0, 4}) , {2, 2, 0, 16}));
      |                                                               ^
./CPP_62.cpp:27:34: error: invalid conversion from ‘int’ to ‘float*’ [-fpermissive]
   27 |     assert (issame(derivative({1}) , {}));
      |                                  ^
      |                                  |
      |                                  int
./CPP_62.cpp:27:34: error: too few arguments to function ‘float* derivative(float*, size_t)’
./CPP_62.cpp:2:8: note: declared here
    2 | float* derivative(float* x, size_t n) {
      |        ^~~~~~~~~~
In file included from ./CPP_62.cpp:13:
./CPP_62.cpp:27:40: error: ‘issame’ cannot be used as a function
   27 |     assert (issame(derivative({1}) , {}));
      |                                        ^


CPP_36.cpp: Compilation Failed
Error: In file included from ./CPP_36.cpp:33:
./CPP_36.cpp: In function ‘int main()’:
./CPP_36.cpp:35:13: error: ‘fizz_buzz’ was not declared in this scope; did you mean ‘fizz_buzzi’?
   35 |     assert (fizz_buzz(50) == 0);
      |             ^~~~~~~~~


CPP_131.cpp: Compilation Failed
Error: ./CPP_131.cpp:28:5: error: redefinition of ‘int main()’
   28 | int main(){
      |     ^~~~
./CPP_131.cpp:19:5: note: ‘int main()’ previously defined here
   19 | int main() {
      |     ^~~~
In file included from ./CPP_131.cpp:27:
./CPP_131.cpp: In function ‘int main()’:
./CPP_131.cpp:29:13: error: ‘digits’ was not declared in this scope; did you mean ‘digitsi’?
   29 |     assert (digits(5) == 5);
      |             ^~~~~~


CPP_152.cpp: Compilation Failed
Error: ./CPP_152.cpp: In function ‘void _Z7compareSt6vectorIiSaIiEES1_(std_vector*, const std_vector*, const std_vector*)’:
./CPP_152.cpp:35:39: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
   35 |                 int* new_data = malloc(new_size);
      |                                 ~~~~~~^~~~~~~~~~
      |                                       |
      |                                       void*
./CPP_152.cpp: At global scope:
./CPP_152.cpp:57:13: error: ‘vector’ was not declared in this scope
   57 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_152.cpp:57:20: error: expected primary-expression before ‘int’
   57 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_152.cpp:57:27: error: ‘vector’ was not declared in this scope
   57 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_152.cpp:57:34: error: expected primary-expression before ‘int’
   57 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_152.cpp:57:39: error: expression list treated as compound expression in initializer [-fpermissive]
   57 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_152.cpp:56:
./CPP_152.cpp: In function ‘int main()’:
./CPP_152.cpp:66:20: error: ‘compare’ was not declared in this scope
   66 |     assert (issame(compare({1,2,3,4,5,1},{1,2,3,4,2,-2}),{0,0,0,0,3,3}));
      |                    ^~~~~~~
./CPP_152.cpp:66:71: error: ‘issame’ cannot be used as a function
   66 |     assert (issame(compare({1,2,3,4,5,1},{1,2,3,4,2,-2}),{0,0,0,0,3,3}));
      |                                                                       ^
./CPP_152.cpp:67:71: error: ‘issame’ cannot be used as a function
   67 |     assert (issame(compare({0,5,0,0,0,4},{4,1,1,0,0,-2}),{4,4,1,0,0,6}));
      |                                                                       ^
./CPP_152.cpp:68:71: error: ‘issame’ cannot be used as a function
   68 |     assert (issame(compare({1,2,3,4,5,1},{1,2,3,4,2,-2}),{0,0,0,0,3,3}));
      |                                                                       ^
./CPP_152.cpp:69:70: error: ‘issame’ cannot be used as a function
   69 |     assert (issame(compare({0,0,0,0,0,0},{0,0,0,0,0,0}),{0,0,0,0,0,0}));
      |                                                                      ^
./CPP_152.cpp:70:55: error: ‘issame’ cannot be used as a function
   70 |     assert (issame(compare({1,2,3},{-1,-2,-3}),{2,4,6}));
      |                                                       ^
./CPP_152.cpp:71:59: error: ‘issame’ cannot be used as a function
   71 |     assert (issame(compare({1,2,3,5},{-1,2,3,4}),{2,0,0,1}));
      |                                                           ^


CPP_132.cpp: Compilation Failed
Error: ./CPP_132.cpp:1:10: fatal error: stdc++.h: No such file or directory
    1 | #include "stdc++.h"
      |          ^~~~~~~~~~
compilation terminated.


CPP_68.cpp: Compilation Failed
Error: ./CPP_68.cpp:52:13: error: ‘vector’ was not declared in this scope
   52 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_68.cpp:52:20: error: expected primary-expression before ‘int’
   52 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_68.cpp:52:27: error: ‘vector’ was not declared in this scope
   52 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_68.cpp:52:34: error: expected primary-expression before ‘int’
   52 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_68.cpp:52:39: error: expression list treated as compound expression in initializer [-fpermissive]
   52 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_68.cpp:51:
./CPP_68.cpp: In function ‘int main()’:
./CPP_68.cpp:61:20: error: ‘pluck’ was not declared in this scope
   61 |     assert (issame(pluck({4,2,3}) , {2, 1}));
      |                    ^~~~~
./CPP_68.cpp:61:43: error: ‘issame’ cannot be used as a function
   61 |     assert (issame(pluck({4,2,3}) , {2, 1}));
      |                                           ^
./CPP_68.cpp:62:43: error: ‘issame’ cannot be used as a function
   62 |     assert (issame(pluck({1,2,3}) , {2, 1}));
      |                                           ^
./CPP_68.cpp:63:34: error: ‘issame’ cannot be used as a function
   63 |     assert (issame(pluck({}) , {}));
      |                                  ^
./CPP_68.cpp:64:54: error: ‘issame’ cannot be used as a function
   64 |     assert (issame(pluck({5, 0, 3, 0, 4, 2}) , {0, 1}));
      |                                                      ^
./CPP_68.cpp:65:54: error: ‘issame’ cannot be used as a function
   65 |     assert (issame(pluck({1, 2, 3, 0, 5, 3}) , {0, 3}));
      |                                                      ^
./CPP_68.cpp:66:51: error: ‘issame’ cannot be used as a function
   66 |     assert (issame(pluck({5, 4, 8, 4 ,8}) , {4, 1}));
      |                                                   ^
./CPP_68.cpp:67:48: error: ‘issame’ cannot be used as a function
   67 |     assert (issame(pluck({7, 6, 7, 1}) , {6, 1}));
      |                                                ^
./CPP_68.cpp:68:44: error: ‘issame’ cannot be used as a function
   68 |     assert (issame(pluck({7, 9, 7, 1}) , {}));
      |                                            ^


CPP_163.cpp: Compilation Failed
Error: ./CPP_163.cpp: In function ‘void generate_integer(vector_t*, int, int)’:
./CPP_163.cpp:18:23: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
   18 |       v->data = malloc(sizeof(int));
      |                 ~~~~~~^~~~~~~~~~~~~
      |                       |
      |                       void*
./CPP_163.cpp:21:24: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
   21 |       v->data = realloc(v->data, sizeof(int) * 2);
      |                 ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
      |                        |
      |                        void*
./CPP_163.cpp:25:24: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
   25 |       v->data = realloc(v->data, sizeof(int) * new_size);
      |                 ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                        |
      |                        void*
./CPP_163.cpp: At global scope:
./CPP_163.cpp:36:13: error: ‘vector’ was not declared in this scope; did you mean ‘vector_t’?
   36 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
      |             vector_t
./CPP_163.cpp:36:20: error: expected primary-expression before ‘int’
   36 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_163.cpp:36:27: error: ‘vector’ was not declared in this scope; did you mean ‘vector_t’?
   36 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
      |                           vector_t
./CPP_163.cpp:36:34: error: expected primary-expression before ‘int’
   36 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_163.cpp:36:39: error: expression list treated as compound expression in initializer [-fpermissive]
   36 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_163.cpp:35:
./CPP_163.cpp: In function ‘int main()’:
./CPP_163.cpp:45:20: error: ‘generate_integers’ was not declared in this scope; did you mean ‘generate_integer’?
   45 |     assert (issame(generate_integers(2, 10) , {2, 4, 6, 8}));
      |                    ^~~~~~~~~~~~~~~~~
./CPP_163.cpp:45:59: error: ‘issame’ cannot be used as a function
   45 |     assert (issame(generate_integers(2, 10) , {2, 4, 6, 8}));
      |                                                           ^
./CPP_163.cpp:46:59: error: ‘issame’ cannot be used as a function
   46 |     assert (issame(generate_integers(10, 2) , {2, 4, 6, 8}));
      |                                                           ^
./CPP_163.cpp:47:60: error: ‘issame’ cannot be used as a function
   47 |     assert (issame(generate_integers(132, 2) , {2, 4, 6, 8}));
      |                                                            ^
./CPP_163.cpp:48:49: error: ‘issame’ cannot be used as a function
   48 |     assert (issame(generate_integers(17,89) , {}));
      |                                                 ^


CPP_74.cpp: Compilation Failed
Error: ./CPP_74.cpp:83:13: error: ‘vector’ is not a template
   83 | bool issame(vector<string> a,vector<string>b){
      |             ^~~~~~
./CPP_74.cpp:83:20: error: ‘string’ was not declared in this scope
   83 | bool issame(vector<string> a,vector<string>b){
      |                    ^~~~~~
./CPP_74.cpp:83:30: error: ‘vector’ is not a template
   83 | bool issame(vector<string> a,vector<string>b){
      |                              ^~~~~~
./CPP_74.cpp:83:37: error: ‘string’ was not declared in this scope
   83 | bool issame(vector<string> a,vector<string>b){
      |                                     ^~~~~~
./CPP_74.cpp: In function ‘bool issame(vector, vector)’:
./CPP_74.cpp:84:11: error: ‘struct vector’ has no member named ‘size’
   84 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_74.cpp:84:21: error: ‘struct vector’ has no member named ‘size’
   84 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_74.cpp:85:22: error: ‘struct vector’ has no member named ‘size’
   85 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_74.cpp:87:10: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   87 |     if (a[i]!=b[i]) return false;
      |          ^
./CPP_74.cpp:87:16: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   87 |     if (a[i]!=b[i]) return false;
      |                ^
In file included from ./CPP_74.cpp:82:
./CPP_74.cpp: In function ‘int main()’:
./CPP_74.cpp:92:38: error: too few arguments to function ‘void total_match(vector*, vector*, vector*)’
   92 |     assert (issame(total_match({}, {}) , {}));
      |                                      ^
./CPP_74.cpp:26:6: note: declared here
   26 | void total_match(struct vector* __result, struct vector* __v1, struct vector* __v2) {
      |      ^~~~~~~~~~~
In file included from ./CPP_74.cpp:82:
./CPP_74.cpp:93:61: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   93 |     assert (issame(total_match({"hi", "admin"}, {"hi", "hi"}) , {"hi", "hi"}));
      |                                                             ^
      |                                                             |
      |                                                             <brace-enclosed initializer list>
./CPP_74.cpp:26:33: note:   initializing argument 1 of ‘void total_match(vector*, vector*, vector*)’
   26 | void total_match(struct vector* __result, struct vector* __v1, struct vector* __v2) {
      |                  ~~~~~~~~~~~~~~~^~~~~~~~
In file included from ./CPP_74.cpp:82:
./CPP_74.cpp:94:81: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   94 |     assert (issame(total_match({"hi", "admin"}, {"hi", "hi", "admin", "project"}) , {"hi", "admin"}));
      |                                                                                 ^
      |                                                                                 |
      |                                                                                 <brace-enclosed initializer list>
./CPP_74.cpp:26:33: note:   initializing argument 1 of ‘void total_match(vector*, vector*, vector*)’
   26 | void total_match(struct vector* __result, struct vector* __v1, struct vector* __v2) {
      |                  ~~~~~~~~~~~~~~~^~~~~~~~
In file included from ./CPP_74.cpp:82:
./CPP_74.cpp:95:64: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   95 |     assert (issame(total_match({"4"}, {"1", "2", "3", "4", "5"}) , {"4"}));
      |                                                                ^
      |                                                                |
      |                                                                <brace-enclosed initializer list>
./CPP_74.cpp:26:33: note:   initializing argument 1 of ‘void total_match(vector*, vector*, vector*)’
   26 | void total_match(struct vector* __result, struct vector* __v1, struct vector* __v2) {
      |                  ~~~~~~~~~~~~~~~^~~~~~~~
In file included from ./CPP_74.cpp:82:
./CPP_74.cpp:96:61: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   96 |     assert (issame(total_match({"hi", "admin"}, {"hI", "Hi"}) , {"hI", "Hi"}));
      |                                                             ^
      |                                                             |
      |                                                             <brace-enclosed initializer list>
./CPP_74.cpp:26:33: note:   initializing argument 1 of ‘void total_match(vector*, vector*, vector*)’
   26 | void total_match(struct vector* __result, struct vector* __v1, struct vector* __v2) {
      |                  ~~~~~~~~~~~~~~~^~~~~~~~
In file included from ./CPP_74.cpp:82:
./CPP_74.cpp:97:67: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   97 |     assert (issame(total_match({"hi", "admin"}, {"hI", "hi", "hi"}) , {"hI", "hi", "hi"}));
      |                                                                   ^
      |                                                                   |
      |                                                                   <brace-enclosed initializer list>
./CPP_74.cpp:26:33: note:   initializing argument 1 of ‘void total_match(vector*, vector*, vector*)’
   26 | void total_match(struct vector* __result, struct vector* __v1, struct vector* __v2) {
      |                  ~~~~~~~~~~~~~~~^~~~~~~~
In file included from ./CPP_74.cpp:82:
./CPP_74.cpp:98:68: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   98 |     assert (issame(total_match({"hi", "admin"}, {"hI", "hi", "hii"}) , {"hi", "admin"}));
      |                                                                    ^
      |                                                                    |
      |                                                                    <brace-enclosed initializer list>
./CPP_74.cpp:26:33: note:   initializing argument 1 of ‘void total_match(vector*, vector*, vector*)’
   26 | void total_match(struct vector* __result, struct vector* __v1, struct vector* __v2) {
      |                  ~~~~~~~~~~~~~~~^~~~~~~~
In file included from ./CPP_74.cpp:82:
./CPP_74.cpp:99:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   99 |     assert (issame(total_match({}, {"this"}) , {}));
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_74.cpp:26:58: note:   initializing argument 2 of ‘void total_match(vector*, vector*, vector*)’
   26 | void total_match(struct vector* __result, struct vector* __v1, struct vector* __v2) {
      |                                           ~~~~~~~~~~~~~~~^~~~
In file included from ./CPP_74.cpp:82:
./CPP_74.cpp:100:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
  100 |     assert (issame(total_match({"this"}, {}) , {}));
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_74.cpp:26:33: note:   initializing argument 1 of ‘void total_match(vector*, vector*, vector*)’
   26 | void total_match(struct vector* __result, struct vector* __v1, struct vector* __v2) {
      |                  ~~~~~~~~~~~~~~~^~~~~~~~


CPP_135.cpp: Compilation Failed
Error: In file included from ./CPP_135.cpp:22:
./CPP_135.cpp: In function ‘int main()’:
./CPP_135.cpp:24:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   24 |     assert (can_arrange({1,2,4,3,5})==3);
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_135.cpp:2:22: note:   initializing argument 1 of ‘int can_arrange(int*, int)’
    2 | int can_arrange(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_135.cpp:22:
./CPP_135.cpp:25:34: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   25 |     assert (can_arrange({1,2,4,5})==-1);
      |                                  ^
      |                                  |
      |                                  <brace-enclosed initializer list>
./CPP_135.cpp:2:22: note:   initializing argument 1 of ‘int can_arrange(int*, int)’
    2 | int can_arrange(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_135.cpp:22:
./CPP_135.cpp:26:45: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   26 |     assert (can_arrange({1,4,2,5,6,7,8,9,10})==2);
      |                                             ^
      |                                             |
      |                                             <brace-enclosed initializer list>
./CPP_135.cpp:2:22: note:   initializing argument 1 of ‘int can_arrange(int*, int)’
    2 | int can_arrange(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_135.cpp:22:
./CPP_135.cpp:27:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   27 |     assert (can_arrange({4,8,5,7,3})==4);
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_135.cpp:2:22: note:   initializing argument 1 of ‘int can_arrange(int*, int)’
    2 | int can_arrange(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_135.cpp:22:
./CPP_135.cpp:28:27: error: too few arguments to function ‘int can_arrange(int*, int)’
   28 |     assert (can_arrange({})==-1);
      |                           ^
./CPP_135.cpp:2:5: note: declared here
    2 | int can_arrange(int* arr, int size) {
      |     ^~~~~~~~~~~


CPP_8.cpp: Compilation Failed
Error: ./CPP_8.cpp: In function ‘void _Z11sum_productSt6vectorIiSaIiEE(void*, void*)’:
./CPP_8.cpp:96:1: error: jump to label ‘_77’
   96 | _77:
      | ^~~
./CPP_8.cpp:67:10: note:   from here
   67 |     goto _77;
      |          ^~~
./CPP_8.cpp:76:11: note:   crosses initialization of ‘int32_t _73 [4]’
   76 |   int32_t _73[4] = {_72[0] * _28[0], _72[1] * _28[1], _72[2] * _28[2], _72[3] * _28[3]};
      |           ^~~
./CPP_8.cpp:75:11: note:   crosses initialization of ‘int32_t _74 [4]’
   75 |   int32_t _74[4] = {_72[0] * _29[0], _72[1] * _29[1], _72[2] * _29[2], _72[3] * _29[3]};
      |           ^~~
./CPP_8.cpp:73:11: note:   crosses initialization of ‘int32_t _72 [4]’
   73 |   int32_t _72[4] = {*_70, *(_70 + 1), *(_70 + 2), *(_70 + 3)};
      |           ^~~
./CPP_8.cpp:72:12: note:   crosses initialization of ‘int32_t* _70’
   72 |   int32_t* _70 = _67 + 4;
      |            ^~~
./CPP_8.cpp:71:11: note:   crosses initialization of ‘int32_t _69 [4]’
   71 |   int32_t _69[4] = {*_67, *(_67 + 1), *(_67 + 2), *(_67 + 3)};
      |           ^~~
./CPP_8.cpp:70:12: note:   crosses initialization of ‘int32_t* _67’
   70 |   int32_t* _67 = _3 + _60;
      |            ^~~
./CPP_8.cpp:107:1: error: jump to label ‘_87’
  107 | _87:
      | ^~~
./CPP_8.cpp:15:10: note:   from here
   15 |     goto _87;
      |          ^~~
./CPP_8.cpp:101:11: note:   crosses initialization of ‘int32_t _85’
  101 |   int32_t _85 = _56[0] + _56[1] + _56[2] + _56[3];
      |           ^~~
./CPP_8.cpp:100:11: note:   crosses initialization of ‘int32_t _84’
  100 |   int32_t _84 = _57[0] + _57[1] + _57[2] + _57[3];
      |           ^~~
./CPP_8.cpp:98:11: note:   crosses initialization of ‘int32_t _83’
   98 |   int32_t _83 = _82[0] + _82[1] + _82[2] + _82[3];
      |           ^~~
./CPP_8.cpp:97:11: note:   crosses initialization of ‘int32_t _82 [4]’
   97 |   int32_t _82[4] = {_59[0] * _58[0], _59[1] * _58[1], _59[2] * _58[2], _59[3] * _58[3]};
      |           ^~~
./CPP_8.cpp:76:11: note:   crosses initialization of ‘int32_t _73 [4]’
   76 |   int32_t _73[4] = {_72[0] * _28[0], _72[1] * _28[1], _72[2] * _28[2], _72[3] * _28[3]};
      |           ^~~
./CPP_8.cpp:75:11: note:   crosses initialization of ‘int32_t _74 [4]’
   75 |   int32_t _74[4] = {_72[0] * _29[0], _72[1] * _29[1], _72[2] * _29[2], _72[3] * _29[3]};
      |           ^~~
./CPP_8.cpp:73:11: note:   crosses initialization of ‘int32_t _72 [4]’
   73 |   int32_t _72[4] = {*_70, *(_70 + 1), *(_70 + 2), *(_70 + 3)};
      |           ^~~
./CPP_8.cpp:72:12: note:   crosses initialization of ‘int32_t* _70’
   72 |   int32_t* _70 = _67 + 4;
      |            ^~~
./CPP_8.cpp:71:11: note:   crosses initialization of ‘int32_t _69 [4]’
   71 |   int32_t _69[4] = {*_67, *(_67 + 1), *(_67 + 2), *(_67 + 3)};
      |           ^~~
./CPP_8.cpp:70:12: note:   crosses initialization of ‘int32_t* _67’
   70 |   int32_t* _67 = _3 + _60;
      |            ^~~
./CPP_8.cpp:64:11: note:   crosses initialization of ‘int64_t _60’
   64 |   int64_t _60 = _18 * 4;
      |           ^~~
./CPP_8.cpp:63:11: note:   crosses initialization of ‘int32_t _59 [4]’
   63 |   int32_t _59[4] = {0};
      |           ^~~
./CPP_8.cpp:62:11: note:   crosses initialization of ‘int32_t _58 [4]’
   62 |   int32_t _58[4] = {0};
      |           ^~~
./CPP_8.cpp:61:11: note:   crosses initialization of ‘int32_t _57 [4]’
   61 |   int32_t _57[4] = {0};
      |           ^~~
./CPP_8.cpp:60:11: note:   crosses initialization of ‘int32_t _56 [4]’
   60 |   int32_t _56[4] = {0};
      |           ^~~
./CPP_8.cpp:32:11: note:   crosses initialization of ‘int64_t _30’
   32 |   int64_t _30 = _23;
      |           ^~~
./CPP_8.cpp:31:11: note:   crosses initialization of ‘int32_t _29 [4]’
   31 |   int32_t _29[4] = {1, 1, 1, 1};
      |           ^~~
./CPP_8.cpp:30:11: note:   crosses initialization of ‘int32_t _28 [4]’
   30 |   int32_t _28[4] = {1, 1, 1, 1};
      |           ^~~
./CPP_8.cpp:29:11: note:   crosses initialization of ‘int32_t _27 [4]’
   29 |   int32_t _27[4] = {0};
      |           ^~~
./CPP_8.cpp:28:11: note:   crosses initialization of ‘int32_t _26 [4]’
   28 |   int32_t _26[4] = {0};
      |           ^~~
./CPP_8.cpp:27:11: note:   crosses initialization of ‘int64_t _23’
   27 |   int64_t _23 = _19 & -2;
      |           ^~~
./CPP_8.cpp:22:11: note:   crosses initialization of ‘int64_t _20’
   22 |   int64_t _20 = _19 & 1;
      |           ^~~
./CPP_8.cpp:21:11: note:   crosses initialization of ‘int64_t _19’
   21 |   int64_t _19 = _18 + 1;
      |           ^~~
./CPP_8.cpp:20:11: note:   crosses initialization of ‘int64_t _18’
   20 |   int64_t _18 = _17 / 8;
      |           ^~~
./CPP_8.cpp:19:11: note:   crosses initialization of ‘int64_t _17’
   19 |   int64_t _17 = _16 - 8;
      |           ^~~
./CPP_8.cpp:18:11: note:   crosses initialization of ‘int64_t _16’
   18 |   int64_t _16 = _13 & -8;
      |           ^~~
./CPP_8.cpp:118:1: error: jump to label ‘_91’
  118 | _91:
      | ^~~
./CPP_8.cpp:104:10: note:   from here
  104 |     goto _91;
      |          ^~~
./CPP_8.cpp:110:11: note:   crosses initialization of ‘int32_t _90’
  110 |   int32_t _90 = 1;
      |           ^~~
./CPP_8.cpp:109:11: note:   crosses initialization of ‘int32_t _89’
  109 |   int32_t _89 = 0;
      |           ^~~
./CPP_8.cpp:108:11: note:   crosses initialization of ‘int64_t _88’
  108 |   int64_t _88 = 0;
      |           ^~~
./CPP_8.cpp:118:1: error: jump to label ‘_91’
  118 | _91:
      | ^~~
./CPP_8.cpp:9:10: note:   from here
    9 |     goto _91;
      |          ^~~
./CPP_8.cpp:110:11: note:   crosses initialization of ‘int32_t _90’
  110 |   int32_t _90 = 1;
      |           ^~~
./CPP_8.cpp:109:11: note:   crosses initialization of ‘int32_t _89’
  109 |   int32_t _89 = 0;
      |           ^~~
./CPP_8.cpp:108:11: note:   crosses initialization of ‘int64_t _88’
  108 |   int64_t _88 = 0;
      |           ^~~
./CPP_8.cpp:101:11: note:   crosses initialization of ‘int32_t _85’
  101 |   int32_t _85 = _56[0] + _56[1] + _56[2] + _56[3];
      |           ^~~
./CPP_8.cpp:100:11: note:   crosses initialization of ‘int32_t _84’
  100 |   int32_t _84 = _57[0] + _57[1] + _57[2] + _57[3];
      |           ^~~
./CPP_8.cpp:98:11: note:   crosses initialization of ‘int32_t _83’
   98 |   int32_t _83 = _82[0] + _82[1] + _82[2] + _82[3];
      |           ^~~
./CPP_8.cpp:97:11: note:   crosses initialization of ‘int32_t _82 [4]’
   97 |   int32_t _82[4] = {_59[0] * _58[0], _59[1] * _58[1], _59[2] * _58[2], _59[3] * _58[3]};
      |           ^~~
./CPP_8.cpp:76:11: note:   crosses initialization of ‘int32_t _73 [4]’
   76 |   int32_t _73[4] = {_72[0] * _28[0], _72[1] * _28[1], _72[2] * _28[2], _72[3] * _28[3]};
      |           ^~~
./CPP_8.cpp:75:11: note:   crosses initialization of ‘int32_t _74 [4]’
   75 |   int32_t _74[4] = {_72[0] * _29[0], _72[1] * _29[1], _72[2] * _29[2], _72[3] * _29[3]};
      |           ^~~
./CPP_8.cpp:73:11: note:   crosses initialization of ‘int32_t _72 [4]’
   73 |   int32_t _72[4] = {*_70, *(_70 + 1), *(_70 + 2), *(_70 + 3)};
      |           ^~~
./CPP_8.cpp:72:12: note:   crosses initialization of ‘int32_t* _70’
   72 |   int32_t* _70 = _67 + 4;
      |            ^~~
./CPP_8.cpp:71:11: note:   crosses initialization of ‘int32_t _69 [4]’
   71 |   int32_t _69[4] = {*_67, *(_67 + 1), *(_67 + 2), *(_67 + 3)};
      |           ^~~
./CPP_8.cpp:70:12: note:   crosses initialization of ‘int32_t* _67’
   70 |   int32_t* _67 = _3 + _60;
      |            ^~~
./CPP_8.cpp:64:11: note:   crosses initialization of ‘int64_t _60’
   64 |   int64_t _60 = _18 * 4;
      |           ^~~
./CPP_8.cpp:63:11: note:   crosses initialization of ‘int32_t _59 [4]’
   63 |   int32_t _59[4] = {0};
      |           ^~~
./CPP_8.cpp:62:11: note:   crosses initialization of ‘int32_t _58 [4]’
   62 |   int32_t _58[4] = {0};
      |           ^~~
./CPP_8.cpp:61:11: note:   crosses initialization of ‘int32_t _57 [4]’
   61 |   int32_t _57[4] = {0};
      |           ^~~
./CPP_8.cpp:60:11: note:   crosses initialization of ‘int32_t _56 [4]’
   60 |   int32_t _56[4] = {0};
      |           ^~~
./CPP_8.cpp:32:11: note:   crosses initialization of ‘int64_t _30’
   32 |   int64_t _30 = _23;
      |           ^~~
./CPP_8.cpp:31:11: note:   crosses initialization of ‘int32_t _29 [4]’
   31 |   int32_t _29[4] = {1, 1, 1, 1};
      |           ^~~
./CPP_8.cpp:30:11: note:   crosses initialization of ‘int32_t _28 [4]’
   30 |   int32_t _28[4] = {1, 1, 1, 1};
      |           ^~~
./CPP_8.cpp:29:11: note:   crosses initialization of ‘int32_t _27 [4]’
   29 |   int32_t _27[4] = {0};
      |           ^~~
./CPP_8.cpp:28:11: note:   crosses initialization of ‘int32_t _26 [4]’
   28 |   int32_t _26[4] = {0};
      |           ^~~
./CPP_8.cpp:27:11: note:   crosses initialization of ‘int64_t _23’
   27 |   int64_t _23 = _19 & -2;
      |           ^~~
./CPP_8.cpp:22:11: note:   crosses initialization of ‘int64_t _20’
   22 |   int64_t _20 = _19 & 1;
      |           ^~~
./CPP_8.cpp:21:11: note:   crosses initialization of ‘int64_t _19’
   21 |   int64_t _19 = _18 + 1;
      |           ^~~
./CPP_8.cpp:20:11: note:   crosses initialization of ‘int64_t _18’
   20 |   int64_t _18 = _17 / 8;
      |           ^~~
./CPP_8.cpp:19:11: note:   crosses initialization of ‘int64_t _17’
   19 |   int64_t _17 = _16 - 8;
      |           ^~~
./CPP_8.cpp:18:11: note:   crosses initialization of ‘int64_t _16’
   18 |   int64_t _16 = _13 & -8;
      |           ^~~
./CPP_8.cpp:13:11: note:   crosses initialization of ‘int64_t _13’
   13 |   int64_t _13 = _12 > 1 ? _12 : 1;
      |           ^~~
./CPP_8.cpp:12:11: note:   crosses initialization of ‘int64_t _12’
   12 |   int64_t _12 = _5 / 4;
      |           ^~~
./CPP_8.cpp:122:3: error: ‘memset’ was not declared in this scope
  122 |   memset(_0, 0, 24);
      |   ^~~~~~
./CPP_8.cpp:3:1: note: ‘memset’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    2 | #include <stddef.h>
  +++ |+#include <cstring>
    3 | 
./CPP_8.cpp:124:28: error: ‘malloc’ was not declared in this scope
  124 |   int32_t* _96 = (int32_t*)malloc(8);
      |                            ^~~~~~
./CPP_8.cpp:3:1: note: ‘malloc’ is defined in header ‘<cstdlib>’; did you forget to ‘#include <cstdlib>’?
    2 | #include <stddef.h>
  +++ |+#include <cstdlib>
    3 | 
./CPP_8.cpp:129:32: error: invalid conversion from ‘int32_t*’ {aka ‘int*’} to ‘int32_t’ {aka ‘int’} [-fpermissive]
  129 |   *((int32_t*)(_96 + 2)) = _96 + 8;
      |                            ~~~~^~~
      |                                |
      |                                int32_t* {aka int*}
./CPP_8.cpp:24:10: error: label ‘_55’ used but not defined
   24 |     goto _55;
      |          ^~~
./CPP_8.cpp: At global scope:
./CPP_8.cpp:133:13: error: ‘vector’ was not declared in this scope
  133 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_8.cpp:133:20: error: expected primary-expression before ‘int’
  133 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_8.cpp:133:27: error: ‘vector’ was not declared in this scope
  133 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_8.cpp:133:34: error: expected primary-expression before ‘int’
  133 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_8.cpp:133:39: error: expression list treated as compound expression in initializer [-fpermissive]
  133 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_8.cpp:132:
./CPP_8.cpp: In function ‘int main()’:
./CPP_8.cpp:142:20: error: ‘sum_product’ was not declared in this scope
  142 |     assert (issame(sum_product({}) ,{0, 1}));
      |                    ^~~~~~~~~~~
./CPP_8.cpp:142:43: error: ‘issame’ cannot be used as a function
  142 |     assert (issame(sum_product({}) ,{0, 1}));
      |                                           ^
./CPP_8.cpp:143:50: error: ‘issame’ cannot be used as a function
  143 |     assert (issame(sum_product({1, 1, 1}), {3, 1}));
      |                                                  ^
./CPP_8.cpp:144:50: error: ‘issame’ cannot be used as a function
  144 |     assert (issame(sum_product({100, 0}),{100, 0}));
      |                                                  ^
./CPP_8.cpp:145:68: error: ‘issame’ cannot be used as a function
  145 |      assert (issame(sum_product({3, 5, 7}) , {3 + 5 + 7, 3 * 5 * 7}));
      |                                                                    ^
./CPP_8.cpp:146:49: error: ‘issame’ cannot be used as a function
  146 |       assert (issame(sum_product({10}) ,{10, 10}));
      |                                                 ^


CPP_42.cpp: Compilation Failed
Error: ./CPP_42.cpp: In function ‘void _Z9incr_listSt6vectorIiSaIiEE(int*, int*)’:
./CPP_42.cpp:17:12: error: invalid conversion from ‘int*’ to ‘int’ [-fpermissive]
   17 |   out[1] = end;
      |            ^~~
      |            |
      |            int*
./CPP_42.cpp:18:12: error: invalid conversion from ‘int*’ to ‘int’ [-fpermissive]
   18 |   out[2] = end;
      |            ^~~
      |            |
      |            int*
./CPP_42.cpp: At global scope:
./CPP_42.cpp:27:13: error: ‘vector’ was not declared in this scope
   27 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_42.cpp:27:20: error: expected primary-expression before ‘int’
   27 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_42.cpp:27:27: error: ‘vector’ was not declared in this scope
   27 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_42.cpp:27:34: error: expected primary-expression before ‘int’
   27 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_42.cpp:27:39: error: expression list treated as compound expression in initializer [-fpermissive]
   27 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_42.cpp:26:
./CPP_42.cpp: In function ‘int main()’:
./CPP_42.cpp:36:20: error: ‘incr_list’ was not declared in this scope
   36 |     assert (issame(incr_list({}) , {}));
      |                    ^~~~~~~~~
./CPP_42.cpp:36:38: error: ‘issame’ cannot be used as a function
   36 |     assert (issame(incr_list({}) , {}));
      |                                      ^
./CPP_42.cpp:37:52: error: ‘issame’ cannot be used as a function
   37 |     assert (issame(incr_list({3, 2, 1}) , {4, 3, 2}));
      |                                                    ^
./CPP_42.cpp:38:93: error: ‘issame’ cannot be used as a function
   38 |     assert (issame(incr_list({5, 2, 5, 2, 3, 3, 9, 0, 123}) , {6, 3, 6, 3, 4, 4, 10, 1, 124}));
      |                                                                                             ^


CPP_133.cpp: Compilation Failed
Error: ./CPP_133.cpp:3:30: error: ‘size_t’ has not been declared
    3 | int sum_squares(float* data, size_t size) {
      |                              ^~~~~~
./CPP_133.cpp: In function ‘int sum_squares(float*, int)’:
./CPP_133.cpp:8:3: error: ‘size_t’ was not declared in this scope
    8 |   size_t i;
      |   ^~~~~~
./CPP_133.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_133.cpp:11:8: error: ‘i’ was not declared in this scope
   11 |   for (i = 0; i < size; i++) {
      |        ^
In file included from ./CPP_133.cpp:20:
./CPP_133.cpp: In function ‘int main()’:
./CPP_133.cpp:22:32: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   22 |     assert (sum_squares({1,2,3})==14);
      |                                ^
      |                                |
      |                                <brace-enclosed initializer list>
./CPP_133.cpp:3:24: note:   initializing argument 1 of ‘int sum_squares(float*, int)’
    3 | int sum_squares(float* data, size_t size) {
      |                 ~~~~~~~^~~~
In file included from ./CPP_133.cpp:20:
./CPP_133.cpp:23:34: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   23 |     assert (sum_squares({1.0,2,3})==14);
      |                                  ^
      |                                  |
      |                                  <brace-enclosed initializer list>
./CPP_133.cpp:3:24: note:   initializing argument 1 of ‘int sum_squares(float*, int)’
    3 | int sum_squares(float* data, size_t size) {
      |                 ~~~~~~~^~~~
In file included from ./CPP_133.cpp:20:
./CPP_133.cpp:24:34: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   24 |     assert (sum_squares({1,3,5,7})==84);
      |                                  ^
      |                                  |
      |                                  <brace-enclosed initializer list>
./CPP_133.cpp:3:24: note:   initializing argument 1 of ‘int sum_squares(float*, int)’
    3 | int sum_squares(float* data, size_t size) {
      |                 ~~~~~~~^~~~
In file included from ./CPP_133.cpp:20:
./CPP_133.cpp:25:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   25 |     assert (sum_squares({1.4,4.2,0})==29);
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_133.cpp:3:24: note:   initializing argument 1 of ‘int sum_squares(float*, int)’
    3 | int sum_squares(float* data, size_t size) {
      |                 ~~~~~~~^~~~
In file included from ./CPP_133.cpp:20:
./CPP_133.cpp:26:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   26 |     assert (sum_squares({-2.4,1,1})==6);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_133.cpp:3:24: note:   initializing argument 1 of ‘int sum_squares(float*, int)’
    3 | int sum_squares(float* data, size_t size) {
      |                 ~~~~~~~^~~~
In file included from ./CPP_133.cpp:20:
./CPP_133.cpp:27:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   27 |     assert (sum_squares({100,1,15,2})==10230);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_133.cpp:3:24: note:   initializing argument 1 of ‘int sum_squares(float*, int)’
    3 | int sum_squares(float* data, size_t size) {
      |                 ~~~~~~~^~~~
In file included from ./CPP_133.cpp:20:
./CPP_133.cpp:28:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   28 |     assert (sum_squares({10000,10000})==200000000);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_133.cpp:3:24: note:   initializing argument 1 of ‘int sum_squares(float*, int)’
    3 | int sum_squares(float* data, size_t size) {
      |                 ~~~~~~~^~~~
In file included from ./CPP_133.cpp:20:
./CPP_133.cpp:29:39: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   29 |     assert (sum_squares({-1.4,4.6,6.3})==75);
      |                                       ^
      |                                       |
      |                                       <brace-enclosed initializer list>
./CPP_133.cpp:3:24: note:   initializing argument 1 of ‘int sum_squares(float*, int)’
    3 | int sum_squares(float* data, size_t size) {
      |                 ~~~~~~~^~~~
In file included from ./CPP_133.cpp:20:
./CPP_133.cpp:30:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   30 |     assert (sum_squares({-1.4,17.9,18.9,19.9})==1086);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_133.cpp:3:24: note:   initializing argument 1 of ‘int sum_squares(float*, int)’
    3 | int sum_squares(float* data, size_t size) {
      |                 ~~~~~~~^~~~
In file included from ./CPP_133.cpp:20:
./CPP_133.cpp:31:28: error: too few arguments to function ‘int sum_squares(float*, int)’
   31 |     assert (sum_squares({0})==0);
      |                            ^
./CPP_133.cpp:3:5: note: declared here
    3 | int sum_squares(float* data, size_t size) {
      |     ^~~~~~~~~~~
In file included from ./CPP_133.cpp:20:
./CPP_133.cpp:32:29: error: invalid conversion from ‘int’ to ‘float*’ [-fpermissive]
   32 |     assert (sum_squares({-1})==1);
      |                             ^
      |                             |
      |                             int
./CPP_133.cpp:32:29: error: too few arguments to function ‘int sum_squares(float*, int)’
./CPP_133.cpp:3:5: note: declared here
    3 | int sum_squares(float* data, size_t size) {
      |     ^~~~~~~~~~~
In file included from ./CPP_133.cpp:20:
./CPP_133.cpp:33:33: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   33 |     assert (sum_squares({-1,1,0})==2);
      |                                 ^
      |                                 |
      |                                 <brace-enclosed initializer list>
./CPP_133.cpp:3:24: note:   initializing argument 1 of ‘int sum_squares(float*, int)’
    3 | int sum_squares(float* data, size_t size) {
      |                 ~~~~~~~^~~~


CPP_121.cpp: Compilation Failed
Error: In file included from ./CPP_121.cpp:15:
./CPP_121.cpp: In function ‘int main()’:
./CPP_121.cpp:17:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   17 |     assert (solutions({5, 8, 7, 1})    == 12);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_121.cpp:1:20: note:   initializing argument 1 of ‘int solutions(int*, int)’
    1 | int solutions(int* a, int len) {
      |               ~~~~~^
In file included from ./CPP_121.cpp:15:
./CPP_121.cpp:18:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   18 |     assert (solutions({3, 3, 3, 3, 3}) == 9);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_121.cpp:1:20: note:   initializing argument 1 of ‘int solutions(int*, int)’
    1 | int solutions(int* a, int len) {
      |               ~~~~~^
In file included from ./CPP_121.cpp:15:
./CPP_121.cpp:19:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   19 |     assert (solutions({30, 13, 24, 321}) == 0);
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_121.cpp:1:20: note:   initializing argument 1 of ‘int solutions(int*, int)’
    1 | int solutions(int* a, int len) {
      |               ~~~~~^
In file included from ./CPP_121.cpp:15:
./CPP_121.cpp:20:29: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   20 |     assert (solutions({5, 9}) == 5);
      |                             ^
      |                             |
      |                             <brace-enclosed initializer list>
./CPP_121.cpp:1:20: note:   initializing argument 1 of ‘int solutions(int*, int)’
    1 | int solutions(int* a, int len) {
      |               ~~~~~^
In file included from ./CPP_121.cpp:15:
./CPP_121.cpp:21:32: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   21 |     assert (solutions({2, 4, 8}) == 0);
      |                                ^
      |                                |
      |                                <brace-enclosed initializer list>
./CPP_121.cpp:1:20: note:   initializing argument 1 of ‘int solutions(int*, int)’
    1 | int solutions(int* a, int len) {
      |               ~~~~~^
In file included from ./CPP_121.cpp:15:
./CPP_121.cpp:22:39: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   22 |     assert (solutions({30, 13, 23, 32}) == 23);
      |                                       ^
      |                                       |
      |                                       <brace-enclosed initializer list>
./CPP_121.cpp:1:20: note:   initializing argument 1 of ‘int solutions(int*, int)’
    1 | int solutions(int* a, int len) {
      |               ~~~~~^
In file included from ./CPP_121.cpp:15:
./CPP_121.cpp:23:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   23 |     assert (solutions({3, 13, 2, 9}) == 3);
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_121.cpp:1:20: note:   initializing argument 1 of ‘int solutions(int*, int)’
    1 | int solutions(int* a, int len) {
      |               ~~~~~^


CPP_109.cpp: Compilation Failed
Error: In file included from ./CPP_109.cpp:18:
./CPP_109.cpp: In function ‘int main()’:
./CPP_109.cpp:20:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   20 |     assert (move_one_ball({3, 4, 5, 1, 2})==true);
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_109.cpp:1:24: note:   initializing argument 1 of ‘int move_one_ball(int*, int)’
    1 | int move_one_ball(int *arr, int len) {
      |                   ~~~~~^~~
In file included from ./CPP_109.cpp:18:
./CPP_109.cpp:21:43: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   21 |     assert (move_one_ball({3, 5, 10, 1, 2})==true);
      |                                           ^
      |                                           |
      |                                           <brace-enclosed initializer list>
./CPP_109.cpp:1:24: note:   initializing argument 1 of ‘int move_one_ball(int*, int)’
    1 | int move_one_ball(int *arr, int len) {
      |                   ~~~~~^~~
In file included from ./CPP_109.cpp:18:
./CPP_109.cpp:22:39: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   22 |     assert (move_one_ball({4, 3, 1, 2})==false);
      |                                       ^
      |                                       |
      |                                       <brace-enclosed initializer list>
./CPP_109.cpp:1:24: note:   initializing argument 1 of ‘int move_one_ball(int*, int)’
    1 | int move_one_ball(int *arr, int len) {
      |                   ~~~~~^~~
In file included from ./CPP_109.cpp:18:
./CPP_109.cpp:23:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   23 |     assert (move_one_ball({3, 5, 4, 1, 2})==false);
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_109.cpp:1:24: note:   initializing argument 1 of ‘int move_one_ball(int*, int)’
    1 | int move_one_ball(int *arr, int len) {
      |                   ~~~~~^~~
In file included from ./CPP_109.cpp:18:
./CPP_109.cpp:24:29: error: too few arguments to function ‘int move_one_ball(int*, int)’
   24 |     assert (move_one_ball({})==true);
      |                             ^
./CPP_109.cpp:1:5: note: declared here
    1 | int move_one_ball(int *arr, int len) {
      |     ^~~~~~~~~~~~~


CPP_5.cpp: Compilation Failed
Error: ./CPP_5.cpp:57:1: error: stray ‘`’ in program
   57 | ```
      | ^
./CPP_5.cpp:57:2: error: stray ‘`’ in program
   57 | ```
      |  ^
./CPP_5.cpp:57:3: error: stray ‘`’ in program
   57 | ```
      |   ^
./CPP_5.cpp: In function ‘void intersperse(vector*, const vector*, int)’:
./CPP_5.cpp:29:46: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
   29 |     result->_M_data._M_impl._M_start = malloc(4);
      |                                        ~~~~~~^~~
      |                                              |
      |                                              void*
./CPP_5.cpp:38:33: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
   38 |         int *new_start = realloc(result->_M_data._M_impl._M_start,
      |                          ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                 |
      |                                 void*
   39 |                                 (result->_M_data._M_impl._M_finish - result->_M_data._M_impl._M_start + 2) * sizeof(int));
      |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_5.cpp: At global scope:
./CPP_5.cpp:58:1: error: expected unqualified-id before ‘<’ token
   58 | <|im_end|>
      | ^
./CPP_5.cpp:61:13: error: ‘vector’ is not a template
   61 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_5.cpp:61:27: error: ‘vector’ is not a template
   61 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_5.cpp: In function ‘bool issame(vector, vector)’:
./CPP_5.cpp:62:11: error: ‘struct vector’ has no member named ‘size’
   62 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_5.cpp:62:21: error: ‘struct vector’ has no member named ‘size’
   62 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_5.cpp:63:22: error: ‘struct vector’ has no member named ‘size’
   63 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_5.cpp:65:14: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   65 |         if (a[i]!=b[i]) return false;
      |              ^
./CPP_5.cpp:65:20: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   65 |         if (a[i]!=b[i]) return false;
      |                    ^
In file included from ./CPP_5.cpp:60:
./CPP_5.cpp: In function ‘int main()’:
./CPP_5.cpp:70:36: error: invalid conversion from ‘int’ to ‘const vector*’ [-fpermissive]
   70 |     assert (issame(intersperse({}, 7), {}));
      |                                    ^
      |                                    |
      |                                    int
./CPP_5.cpp:70:37: error: too few arguments to function ‘void intersperse(vector*, const vector*, int)’
   70 |     assert (issame(intersperse({}, 7), {}));
      |                                     ^
./CPP_5.cpp:20:6: note: declared here
   20 | void intersperse(vector *result, const vector *v, int value) {
      |      ^~~~~~~~~~~
In file included from ./CPP_5.cpp:60:
./CPP_5.cpp:70:5: error: ‘__assert_fail’ was not declared in this scope
   70 |     assert (issame(intersperse({}, 7), {}));
      |     ^~~~~~
./CPP_5.cpp:72:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   72 |     assert (issame(intersperse({5, 6, 3, 2}, 8),{5, 8, 6, 8, 3, 8, 2}));
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_5.cpp:20:26: note:   initializing argument 1 of ‘void intersperse(vector*, const vector*, int)’
   20 | void intersperse(vector *result, const vector *v, int value) {
      |                  ~~~~~~~~^~~~~~
In file included from ./CPP_5.cpp:60:
./CPP_5.cpp:73:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   73 |     assert (issame(intersperse({2, 2, 2}, 2),{2, 2, 2, 2, 2}));
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_5.cpp:20:26: note:   initializing argument 1 of ‘void intersperse(vector*, const vector*, int)’
   20 | void intersperse(vector *result, const vector *v, int value) {
      |                  ~~~~~~~~^~~~~~


CPP_12.cpp: Compilation Failed
Error: ./CPP_12.cpp:13:18: error: declaration of ‘_Alloc_hider basic_string::_Alloc_hider’ changes meaning of ‘_Alloc_hider’ [-fpermissive]
   13 |     _Alloc_hider _Alloc_hider;
      |                  ^~~~~~~~~~~~
./CPP_12.cpp:5:3: note: ‘_Alloc_hider’ declared here as ‘typedef struct _Alloc_hider _Alloc_hider’
    5 | } _Alloc_hider;
      |   ^~~~~~~~~~~~
./CPP_12.cpp:15:10: error: declaration of ‘anon basic_string::anon’ changes meaning of ‘anon’ [-fpermissive]
   15 |     anon anon;
      |          ^~~~
./CPP_12.cpp:10:3: note: ‘anon’ declared here as ‘typedef union anon anon’
   10 | } anon;
      |   ^~~~
./CPP_12.cpp: In function ‘void longest(basic_string*, vector*)’:
./CPP_12.cpp:37:13: error: ‘anon’ {aka ‘union anon’} has no member named ‘ptr’
   37 |     s->anon.ptr = (char*)s + 16;
      |             ^~~
./CPP_12.cpp:39:21: error: ‘anon’ {aka ‘union anon’} has no member named ‘ptr’
   39 |     *(char*)s->anon.ptr = 0;
      |                     ^~~
In file included from ./CPP_12.cpp:71:
./CPP_12.cpp: In function ‘int main()’:
./CPP_12.cpp:73:23: error: too few arguments to function ‘void longest(basic_string*, vector*)’
   73 |     assert (longest({}) == "");
      |                       ^
./CPP_12.cpp:36:6: note: declared here
   36 | void longest(basic_string* s, vector* v) {
      |      ^~~~~~~
In file included from ./CPP_12.cpp:71:
./CPP_12.cpp:74:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘basic_string*’
   74 |     assert (longest({"x", "y", "z"}) == "x");
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_12.cpp:36:28: note:   initializing argument 1 of ‘void longest(basic_string*, vector*)’
   36 | void longest(basic_string* s, vector* v) {
      |              ~~~~~~~~~~~~~~^
In file included from ./CPP_12.cpp:71:
./CPP_12.cpp:75:63: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘basic_string*’
   75 |     assert (longest({"x", "yyy", "zzzz", "www", "kkkk", "abc"}) == "zzzz");
      |                                                               ^
      |                                                               |
      |                                                               <brace-enclosed initializer list>
./CPP_12.cpp:36:28: note:   initializing argument 1 of ‘void longest(basic_string*, vector*)’
   36 | void longest(basic_string* s, vector* v) {
      |              ~~~~~~~~~~~~~~^


CPP_150.cpp: Compilation Failed
Error: ./CPP_150.cpp:32:1: error: stray ‘`’ in program
   32 | ```<|im_end|>
      | ^
./CPP_150.cpp:32:2: error: stray ‘`’ in program
   32 | ```<|im_end|>
      |  ^
./CPP_150.cpp:32:3: error: stray ‘`’ in program
   32 | ```<|im_end|>
      |   ^
./CPP_150.cpp:32:4: error: expected unqualified-id before ‘<’ token
   32 | ```<|im_end|>
      |    ^
In file included from ./CPP_150.cpp:34:
./CPP_150.cpp: In function ‘int main()’:
./CPP_150.cpp:36:13: error: ‘x_or_y’ was not declared in this scope
   36 |     assert (x_or_y(7, 34, 12) == 34);
      |             ^~~~~~
./CPP_150.cpp:36:5: error: ‘__assert_fail’ was not declared in this scope
   36 |     assert (x_or_y(7, 34, 12) == 34);
      |     ^~~~~~


CPP_25.cpp: Compilation Failed
Error: ./CPP_25.cpp:56:13: error: ‘vector’ was not declared in this scope
   56 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_25.cpp:56:20: error: expected primary-expression before ‘int’
   56 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_25.cpp:56:27: error: ‘vector’ was not declared in this scope
   56 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_25.cpp:56:34: error: expected primary-expression before ‘int’
   56 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_25.cpp:56:39: error: expression list treated as compound expression in initializer [-fpermissive]
   56 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_25.cpp:55:
./CPP_25.cpp: In function ‘int main()’:
./CPP_25.cpp:65:20: error: ‘factorize’ was not declared in this scope; did you mean ‘factorizei’?
   65 |     assert (issame(factorize(2) , {2}));
      |                    ^~~~~~~~~
./CPP_25.cpp:65:38: error: ‘issame’ cannot be used as a function
   65 |     assert (issame(factorize(2) , {2}));
      |                                      ^
./CPP_25.cpp:66:41: error: ‘issame’ cannot be used as a function
   66 |     assert (issame(factorize(4) , {2, 2}));
      |                                         ^
./CPP_25.cpp:67:44: error: ‘issame’ cannot be used as a function
   67 |     assert (issame(factorize(8) , {2, 2, 2}));
      |                                            ^
./CPP_25.cpp:68:48: error: ‘issame’ cannot be used as a function
   68 |      assert (issame(factorize(3 * 19) , {3, 19}));
      |                                                ^
./CPP_25.cpp:69:63: error: ‘issame’ cannot be used as a function
   69 |     assert (issame(factorize(3 * 19 * 3 * 19) , {3, 3, 19, 19}));
      |                                                               ^
./CPP_25.cpp:70:79: error: ‘issame’ cannot be used as a function
   70 |     assert (issame(factorize(3 * 19 * 3 * 19 * 3 * 19) , {3, 3, 3, 19, 19, 19}));
      |                                                                               ^
./CPP_25.cpp:71:65: error: ‘issame’ cannot be used as a function
   71 |     assert (issame(factorize(3 * 19 * 19 * 19) , {3, 19, 19, 19}));
      |                                                                 ^
./CPP_25.cpp:72:52: error: ‘issame’ cannot be used as a function
   72 |     assert (issame(factorize(3 * 2 * 3) , {2, 3, 3}));
      |                                                    ^


CPP_89.cpp: Compilation Failed
Error: In file included from ./CPP_89.cpp:38:
./CPP_89.cpp: In function ‘int main()’:
./CPP_89.cpp:40:21: error: cannot convert ‘const char*’ to ‘basic_string*’
   40 |     assert (encrypt("hi") == "lm");
      |                     ^~~~
      |                     |
      |                     const char*
./CPP_89.cpp:16:28: note:   initializing argument 1 of ‘void encrypt(basic_string*, const basic_string*)’
   16 | void encrypt(basic_string* dst, const basic_string* src) {
      |              ~~~~~~~~~~~~~~^~~
In file included from ./CPP_89.cpp:38:
./CPP_89.cpp:41:21: error: cannot convert ‘const char*’ to ‘basic_string*’
   41 |     assert (encrypt("asdfghjkl") == "ewhjklnop");
      |                     ^~~~~~~~~~~
      |                     |
      |                     const char*
./CPP_89.cpp:16:28: note:   initializing argument 1 of ‘void encrypt(basic_string*, const basic_string*)’
   16 | void encrypt(basic_string* dst, const basic_string* src) {
      |              ~~~~~~~~~~~~~~^~~
In file included from ./CPP_89.cpp:38:
./CPP_89.cpp:42:21: error: cannot convert ‘const char*’ to ‘basic_string*’
   42 |     assert (encrypt("gf") == "kj");
      |                     ^~~~
      |                     |
      |                     const char*
./CPP_89.cpp:16:28: note:   initializing argument 1 of ‘void encrypt(basic_string*, const basic_string*)’
   16 | void encrypt(basic_string* dst, const basic_string* src) {
      |              ~~~~~~~~~~~~~~^~~
In file included from ./CPP_89.cpp:38:
./CPP_89.cpp:43:21: error: cannot convert ‘const char*’ to ‘basic_string*’
   43 |     assert (encrypt("et") == "ix");
      |                     ^~~~
      |                     |
      |                     const char*
./CPP_89.cpp:16:28: note:   initializing argument 1 of ‘void encrypt(basic_string*, const basic_string*)’
   16 | void encrypt(basic_string* dst, const basic_string* src) {
      |              ~~~~~~~~~~~~~~^~~
In file included from ./CPP_89.cpp:38:
./CPP_89.cpp:44:21: error: cannot convert ‘const char*’ to ‘basic_string*’
   44 |     assert (encrypt("faewfawefaewg")=="jeiajeaijeiak");
      |                     ^~~~~~~~~~~~~~~
      |                     |
      |                     const char*
./CPP_89.cpp:16:28: note:   initializing argument 1 of ‘void encrypt(basic_string*, const basic_string*)’
   16 | void encrypt(basic_string* dst, const basic_string* src) {
      |              ~~~~~~~~~~~~~~^~~
In file included from ./CPP_89.cpp:38:
./CPP_89.cpp:45:21: error: cannot convert ‘const char*’ to ‘basic_string*’
   45 |     assert (encrypt("hellomyfriend")=="lippsqcjvmirh");
      |                     ^~~~~~~~~~~~~~~
      |                     |
      |                     const char*
./CPP_89.cpp:16:28: note:   initializing argument 1 of ‘void encrypt(basic_string*, const basic_string*)’
   16 | void encrypt(basic_string* dst, const basic_string* src) {
      |              ~~~~~~~~~~~~~~^~~
In file included from ./CPP_89.cpp:38:
./CPP_89.cpp:46:21: error: cannot convert ‘const char*’ to ‘basic_string*’
   46 |     assert (encrypt("dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh")=="hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl");
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                     |
      |                     const char*
./CPP_89.cpp:16:28: note:   initializing argument 1 of ‘void encrypt(basic_string*, const basic_string*)’
   16 | void encrypt(basic_string* dst, const basic_string* src) {
      |              ~~~~~~~~~~~~~~^~~
In file included from ./CPP_89.cpp:38:
./CPP_89.cpp:47:21: error: cannot convert ‘const char*’ to ‘basic_string*’
   47 |     assert (encrypt("a")=="e");
      |                     ^~~
      |                     |
      |                     const char*
./CPP_89.cpp:16:28: note:   initializing argument 1 of ‘void encrypt(basic_string*, const basic_string*)’
   16 | void encrypt(basic_string* dst, const basic_string* src) {
      |              ~~~~~~~~~~~~~~^~~


CPP_64.cpp: Compilation Failed
Error: ./CPP_64.cpp:3:29: error: ‘string’ in namespace ‘std’ does not name a type
    3 | int vowels_count(const std::string &s) {
      |                             ^~~~~~
./CPP_64.cpp:2:1: note: ‘std::string’ is defined in header ‘<string>’; did you forget to ‘#include <string>’?
    1 | #include <string.h>
  +++ |+#include <string>
    2 | 
./CPP_64.cpp: In function ‘int vowels_count(const int&)’:
./CPP_64.cpp:4:8: error: ‘string’ is not a member of ‘std’
    4 |   std::string vowels = "aeiouAEIOU";
      |        ^~~~~~
./CPP_64.cpp:4:8: note: ‘std::string’ is defined in header ‘<string>’; did you forget to ‘#include <string>’?
./CPP_64.cpp:6:28: error: request for member ‘length’ in ‘s’, which is of non-class type ‘const int’
    6 |   for (size_t i = 0; i < s.length(); ++i) {
      |                            ^~~~~~
./CPP_64.cpp:7:28: error: ‘vowels’ was not declared in this scope
    7 |     for (size_t j = 0; j < vowels.length(); ++j) {
      |                            ^~~~~~
./CPP_64.cpp:8:14: error: invalid types ‘const int[size_t {aka long unsigned int}]’ for array subscript
    8 |       if (s[i] == vowels[j]) {
      |              ^
./CPP_64.cpp:14:9: error: request for member ‘length’ in ‘s’, which is of non-class type ‘const int’
   14 |   if (s.length() > 0 && (s[s.length() - 1] == 'y' || s[s.length() - 1] == 'Y')) {
      |         ^~~~~~
./CPP_64.cpp:14:30: error: request for member ‘length’ in ‘s’, which is of non-class type ‘const int’
   14 |   if (s.length() > 0 && (s[s.length() - 1] == 'y' || s[s.length() - 1] == 'Y')) {
      |                              ^~~~~~
./CPP_64.cpp:14:58: error: request for member ‘length’ in ‘s’, which is of non-class type ‘const int’
   14 |   if (s.length() > 0 && (s[s.length() - 1] == 'y' || s[s.length() - 1] == 'Y')) {
      |                                                          ^~~~~~
In file included from ./CPP_64.cpp:21:
./CPP_64.cpp: In function ‘int main()’:
./CPP_64.cpp:23:26: error: invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]
   23 |     assert (vowels_count("abcde") == 2);
      |                          ^~~~~~~
      |                          |
      |                          const char*
./CPP_64.cpp:3:37: note:   initializing argument 1 of ‘int vowels_count(const int&)’
    3 | int vowels_count(const std::string &s) {
      |                  ~~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_64.cpp:21:
./CPP_64.cpp:24:26: error: invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]
   24 |     assert (vowels_count("Alone") == 3);
      |                          ^~~~~~~
      |                          |
      |                          const char*
./CPP_64.cpp:3:37: note:   initializing argument 1 of ‘int vowels_count(const int&)’
    3 | int vowels_count(const std::string &s) {
      |                  ~~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_64.cpp:21:
./CPP_64.cpp:25:26: error: invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]
   25 |     assert (vowels_count("key") == 2);
      |                          ^~~~~
      |                          |
      |                          const char*
./CPP_64.cpp:3:37: note:   initializing argument 1 of ‘int vowels_count(const int&)’
    3 | int vowels_count(const std::string &s) {
      |                  ~~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_64.cpp:21:
./CPP_64.cpp:26:26: error: invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]
   26 |     assert (vowels_count("bye") == 1);
      |                          ^~~~~
      |                          |
      |                          const char*
./CPP_64.cpp:3:37: note:   initializing argument 1 of ‘int vowels_count(const int&)’
    3 | int vowels_count(const std::string &s) {
      |                  ~~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_64.cpp:21:
./CPP_64.cpp:27:26: error: invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]
   27 |     assert (vowels_count("keY") == 2);
      |                          ^~~~~
      |                          |
      |                          const char*
./CPP_64.cpp:3:37: note:   initializing argument 1 of ‘int vowels_count(const int&)’
    3 | int vowels_count(const std::string &s) {
      |                  ~~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_64.cpp:21:
./CPP_64.cpp:28:26: error: invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]
   28 |     assert (vowels_count("bYe") == 1);
      |                          ^~~~~
      |                          |
      |                          const char*
./CPP_64.cpp:3:37: note:   initializing argument 1 of ‘int vowels_count(const int&)’
    3 | int vowels_count(const std::string &s) {
      |                  ~~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_64.cpp:21:
./CPP_64.cpp:29:26: error: invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]
   29 |     assert (vowels_count("ACEDY") == 3);
      |                          ^~~~~~~
      |                          |
      |                          const char*
./CPP_64.cpp:3:37: note:   initializing argument 1 of ‘int vowels_count(const int&)’
    3 | int vowels_count(const std::string &s) {
      |                  ~~~~~~~~~~~~~~~~~~~^


CPP_128.cpp: Compilation Failed
Error: ./CPP_128.cpp:3:30: error: ‘size_t’ has not been declared
    3 | int prod_signs(int32_t* arr, size_t size) {
      |                              ^~~~~~
./CPP_128.cpp: In function ‘int prod_signs(int32_t*, int)’:
./CPP_128.cpp:10:8: error: ‘size_t’ was not declared in this scope
   10 |   for (size_t i = 0; i < size - (size % 2); i += 2) {
      |        ^~~~~~
./CPP_128.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_128.cpp:10:22: error: ‘i’ was not declared in this scope
   10 |   for (size_t i = 0; i < size - (size % 2); i += 2) {
      |                      ^
./CPP_128.cpp:13:13: error: ‘abs’ was not declared in this scope
   13 |     prod += abs(a) + abs(b);
      |             ^~~
./CPP_128.cpp:18:13: error: ‘abs’ was not declared in this scope
   18 |     prod += abs(arr[size - 1]);
      |             ^~~
In file included from ./CPP_128.cpp:26:
./CPP_128.cpp: In function ‘int main()’:
./CPP_128.cpp:28:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   28 |     assert (prod_signs({1, 2, 2, -4}) == -9);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_128.cpp:3:25: note:   initializing argument 1 of ‘int prod_signs(int32_t*, int)’
    3 | int prod_signs(int32_t* arr, size_t size) {
      |                ~~~~~~~~~^~~
In file included from ./CPP_128.cpp:26:
./CPP_128.cpp:29:30: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   29 |     assert (prod_signs({0, 1}) == 0);
      |                              ^
      |                              |
      |                              <brace-enclosed initializer list>
./CPP_128.cpp:3:25: note:   initializing argument 1 of ‘int prod_signs(int32_t*, int)’
    3 | int prod_signs(int32_t* arr, size_t size) {
      |                ~~~~~~~~~^~~
In file included from ./CPP_128.cpp:26:
./CPP_128.cpp:30:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   30 |     assert (prod_signs({1, 1, 1, 2, 3, -1, 1}) == -10);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_128.cpp:3:25: note:   initializing argument 1 of ‘int prod_signs(int32_t*, int)’
    3 | int prod_signs(int32_t* arr, size_t size) {
      |                ~~~~~~~~~^~~
In file included from ./CPP_128.cpp:26:
./CPP_128.cpp:31:26: error: too few arguments to function ‘int prod_signs(int32_t*, int)’
   31 |     assert (prod_signs({}) == -32768);
      |                          ^
./CPP_128.cpp:3:5: note: declared here
    3 | int prod_signs(int32_t* arr, size_t size) {
      |     ^~~~~~~~~~
In file included from ./CPP_128.cpp:26:
./CPP_128.cpp:32:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   32 |     assert (prod_signs({2, 4,1, 2, -1, -1, 9}) == 20);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_128.cpp:3:25: note:   initializing argument 1 of ‘int prod_signs(int32_t*, int)’
    3 | int prod_signs(int32_t* arr, size_t size) {
      |                ~~~~~~~~~^~~
In file included from ./CPP_128.cpp:26:
./CPP_128.cpp:33:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   33 |     assert (prod_signs({-1, 1, -1, 1}) == 4);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_128.cpp:3:25: note:   initializing argument 1 of ‘int prod_signs(int32_t*, int)’
    3 | int prod_signs(int32_t* arr, size_t size) {
      |                ~~~~~~~~~^~~
In file included from ./CPP_128.cpp:26:
./CPP_128.cpp:34:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   34 |     assert (prod_signs({-1, 1, 1, 1}) == -4);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_128.cpp:3:25: note:   initializing argument 1 of ‘int prod_signs(int32_t*, int)’
    3 | int prod_signs(int32_t* arr, size_t size) {
      |                ~~~~~~~~~^~~
In file included from ./CPP_128.cpp:26:
./CPP_128.cpp:35:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   35 |     assert (prod_signs({-1, 1, 1, 0}) == 0);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_128.cpp:3:25: note:   initializing argument 1 of ‘int prod_signs(int32_t*, int)’
    3 | int prod_signs(int32_t* arr, size_t size) {
      |                ~~~~~~~~~^~~


CPP_91.cpp: Compilation Failed
Error: ./CPP_91.cpp: In function ‘int is_bored(char*)’:
./CPP_91.cpp:2:14: error: ‘strlen’ was not declared in this scope
    2 |   long len = strlen(str);
      |              ^~~~~~
./CPP_91.cpp:1:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
  +++ |+#include <cstring>
    1 | int is_bored(char* str) {
In file included from ./CPP_91.cpp:30:
./CPP_91.cpp: In function ‘int main()’:
./CPP_91.cpp:32:22: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   32 |     assert (is_bored("Hello world") == 0);
      |                      ^~~~~~~~~~~~~
./CPP_91.cpp:33:22: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   33 |     assert (is_bored("Is the sky blue?") == 0);
      |                      ^~~~~~~~~~~~~~~~~~
./CPP_91.cpp:34:22: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   34 |     assert (is_bored("I love It !") == 1);
      |                      ^~~~~~~~~~~~~
./CPP_91.cpp:35:22: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   35 |     assert (is_bored("bIt") == 0);
      |                      ^~~~~
./CPP_91.cpp:36:22: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   36 |     assert (is_bored("I feel good today. I will be productive. will kill It") == 2);
      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_91.cpp:37:22: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   37 |     assert (is_bored("You and I are going for a walk") == 0);
      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


CPP_73.cpp: Compilation Failed
Error: ./CPP_73.cpp:1:32: error: ‘vector’ in namespace ‘std’ does not name a template type
    1 | int smallest_change(const std::vector<int>& vec) {
      |                                ^~~~~~
./CPP_73.cpp:1:1: note: ‘std::vector’ is defined in header ‘<vector>’; did you forget to ‘#include <vector>’?
  +++ |+#include <vector>
    1 | int smallest_change(const std::vector<int>& vec) {
./CPP_73.cpp:1:38: error: expected ‘,’ or ‘...’ before ‘<’ token
    1 | int smallest_change(const std::vector<int>& vec) {
      |                                      ^
./CPP_73.cpp: In function ‘int smallest_change(int)’:
./CPP_73.cpp:2:14: error: ‘vec’ was not declared in this scope
    2 |   int *end = vec._M_impl._M_data + vec.size();
      |              ^~~
In file included from ./CPP_73.cpp:18:
./CPP_73.cpp: In function ‘int main()’:
./CPP_73.cpp:20:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int’
   20 |     assert (smallest_change({1,2,3,5,4,7,9,6}) == 4);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_73.cpp:1:21: note:   initializing argument 1 of ‘int smallest_change(int)’
    1 | int smallest_change(const std::vector<int>& vec) {
      |                     ^~~~~~~~~~~~~~~~~
In file included from ./CPP_73.cpp:18:
./CPP_73.cpp:21:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int’
   21 |     assert (smallest_change({1, 2, 3, 4, 3, 2, 2}) == 1);
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_73.cpp:1:21: note:   initializing argument 1 of ‘int smallest_change(int)’
    1 | int smallest_change(const std::vector<int>& vec) {
      |                     ^~~~~~~~~~~~~~~~~
In file included from ./CPP_73.cpp:18:
./CPP_73.cpp:22:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int’
   22 |     assert (smallest_change({1, 4, 2}) == 1);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_73.cpp:1:21: note:   initializing argument 1 of ‘int smallest_change(int)’
    1 | int smallest_change(const std::vector<int>& vec) {
      |                     ^~~~~~~~~~~~~~~~~
In file included from ./CPP_73.cpp:18:
./CPP_73.cpp:23:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int’
   23 |     assert (smallest_change({1, 4, 4, 2}) == 1);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_73.cpp:1:21: note:   initializing argument 1 of ‘int smallest_change(int)’
    1 | int smallest_change(const std::vector<int>& vec) {
      |                     ^~~~~~~~~~~~~~~~~
In file included from ./CPP_73.cpp:18:
./CPP_73.cpp:24:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int’
   24 |     assert (smallest_change({1, 2, 3, 2, 1}) == 0);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_73.cpp:1:21: note:   initializing argument 1 of ‘int smallest_change(int)’
    1 | int smallest_change(const std::vector<int>& vec) {
      |                     ^~~~~~~~~~~~~~~~~
In file included from ./CPP_73.cpp:18:
./CPP_73.cpp:25:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int’
   25 |     assert (smallest_change({3, 1, 1, 3}) == 0);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_73.cpp:1:21: note:   initializing argument 1 of ‘int smallest_change(int)’
    1 | int smallest_change(const std::vector<int>& vec) {
      |                     ^~~~~~~~~~~~~~~~~
In file included from ./CPP_73.cpp:18:
./CPP_73.cpp:27:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int’
   27 |     assert (smallest_change({0, 1}) == 1);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_73.cpp:1:21: note:   initializing argument 1 of ‘int smallest_change(int)’
    1 | int smallest_change(const std::vector<int>& vec) {
      |                     ^~~~~~~~~~~~~~~~~


CPP_151.cpp: Compilation Failed
Error: ./CPP_151.cpp: In function ‘long long int double_the_difference(float*, long long int)’:
./CPP_151.cpp:15:25: error: ‘roundf’ was not declared in this scope
   15 |     float rounded_val = roundf(val);
      |                         ^~~~~~
In file included from ./CPP_151.cpp:28:
./CPP_151.cpp: In function ‘int main()’:
./CPP_151.cpp:30:37: error: too few arguments to function ‘long long int double_the_difference(float*, long long int)’
   30 |     assert (double_the_difference({}) == 0);
      |                                     ^
./CPP_151.cpp:3:15: note: declared here
    3 | long long int double_the_difference(float *arr, long long int size) {
      |               ^~~~~~~~~~~~~~~~~~~~~
In file included from ./CPP_151.cpp:28:
./CPP_151.cpp:31:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   31 |     assert (double_the_difference({5, 4}) == 25);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_151.cpp:3:44: note:   initializing argument 1 of ‘long long int double_the_difference(float*, long long int)’
    3 | long long int double_the_difference(float *arr, long long int size) {
      |                                     ~~~~~~~^~~
In file included from ./CPP_151.cpp:28:
./CPP_151.cpp:32:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   32 |     assert (double_the_difference({0.1, 0.2, 0.3}) == 0 );
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_151.cpp:3:44: note:   initializing argument 1 of ‘long long int double_the_difference(float*, long long int)’
    3 | long long int double_the_difference(float *arr, long long int size) {
      |                                     ~~~~~~~^~~
In file included from ./CPP_151.cpp:28:
./CPP_151.cpp:33:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   33 |     assert (double_the_difference({-10, -20, -30}) == 0 );
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_151.cpp:3:44: note:   initializing argument 1 of ‘long long int double_the_difference(float*, long long int)’
    3 | long long int double_the_difference(float *arr, long long int size) {
      |                                     ~~~~~~~^~~
In file included from ./CPP_151.cpp:28:
./CPP_151.cpp:34:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   34 |     assert (double_the_difference({-1, -2, 8}) == 0);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_151.cpp:3:44: note:   initializing argument 1 of ‘long long int double_the_difference(float*, long long int)’
    3 | long long int double_the_difference(float *arr, long long int size) {
      |                                     ~~~~~~~^~~
In file included from ./CPP_151.cpp:28:
./CPP_151.cpp:35:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   35 |     assert (double_the_difference({0.2, 3, 5}) == 34);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_151.cpp:3:44: note:   initializing argument 1 of ‘long long int double_the_difference(float*, long long int)’
    3 | long long int double_the_difference(float *arr, long long int size) {
      |                                     ~~~~~~~^~~
./CPP_151.cpp:39:5: error: ‘vector’ was not declared in this scope
   39 |     vector<float> lst={};
      |     ^~~~~~
./CPP_151.cpp:39:12: error: expected primary-expression before ‘float’
   39 |     vector<float> lst={};
      |            ^~~~~
./CPP_151.cpp:43:9: error: ‘lst’ was not declared in this scope
   43 |         lst.push_back(i+0.0);
      |         ^~~
In file included from ./CPP_151.cpp:28:
./CPP_151.cpp:47:35: error: ‘lst’ was not declared in this scope
   47 |     assert (double_the_difference(lst) == odd_sum );
      |                                   ^~~


CPP_95.cpp: Compilation Failed
Error: ./CPP_95.cpp: In function ‘int check_dict_case(void*)’:
./CPP_95.cpp:15:25: error: expected ‘;’ before ‘if’
   15 |   *((int64_t *)arg0 + 5)
      |                         ^
      |                         ;
   16 | 
   17 |   if (*((int64_t *)arg0 + 5) > 0) {
      |   ~~                     
In file included from ./CPP_95.cpp:55:
./CPP_95.cpp: In function ‘int main()’:
./CPP_95.cpp:57:64: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   57 |     assert (check_dict_case({{"p","pineapple"}, {"b","banana"}}) == true);
      |                                                                ^
      |                                                                |
      |                                                                <brace-enclosed initializer list>
./CPP_95.cpp:6:27: note:   initializing argument 1 of ‘int check_dict_case(void*)’
    6 | int check_dict_case(void *arg0) {
      |                     ~~~~~~^~~~
In file included from ./CPP_95.cpp:55:
./CPP_95.cpp:58:80: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   58 |     assert (check_dict_case({{"p","pineapple"}, {"A","banana"}, {"B","banana"}}) == false);
      |                                                                                ^
      |                                                                                |
      |                                                                                <brace-enclosed initializer list>
./CPP_95.cpp:6:27: note:   initializing argument 1 of ‘int check_dict_case(void*)’
    6 | int check_dict_case(void *arg0) {
      |                     ~~~~~~^~~~
In file included from ./CPP_95.cpp:55:
./CPP_95.cpp:59:79: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   59 |     assert (check_dict_case({{"p","pineapple"}, {"5","banana"}, {"a","apple"}}) == false);
      |                                                                               ^
      |                                                                               |
      |                                                                               <brace-enclosed initializer list>
./CPP_95.cpp:6:27: note:   initializing argument 1 of ‘int check_dict_case(void*)’
    6 | int check_dict_case(void *arg0) {
      |                     ~~~~~~^~~~
In file included from ./CPP_95.cpp:55:
./CPP_95.cpp:60:80: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   60 |     assert (check_dict_case({{"Name","John"}, {"Age","36"}, {"City","Houston"}}) == false);
      |                                                                                ^
      |                                                                                |
      |                                                                                <brace-enclosed initializer list>
./CPP_95.cpp:6:27: note:   initializing argument 1 of ‘int check_dict_case(void*)’
    6 | int check_dict_case(void *arg0) {
      |                     ~~~~~~^~~~
In file included from ./CPP_95.cpp:55:
./CPP_95.cpp:61:63: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   61 |     assert (check_dict_case({{"STATE","NC"}, {"ZIP","12345"} }) == true  );
      |                                                               ^
      |                                                               |
      |                                                               <brace-enclosed initializer list>
./CPP_95.cpp:6:27: note:   initializing argument 1 of ‘int check_dict_case(void*)’
    6 | int check_dict_case(void *arg0) {
      |                     ~~~~~~^~~~
In file included from ./CPP_95.cpp:55:
./CPP_95.cpp:62:69: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘void*’
   62 |     assert (check_dict_case({{"fruit","Orange"}, {"taste","Sweet"} }) == true  );
      |                                                                     ^
      |                                                                     |
      |                                                                     <brace-enclosed initializer list>
./CPP_95.cpp:6:27: note:   initializing argument 1 of ‘int check_dict_case(void*)’
    6 | int check_dict_case(void *arg0) {
      |                     ~~~~~~^~~~


Summary
=======
Total files processed: 98
Compilation failures: 83
Execution failures: 9
Assertion failures: 0

Detailed Results
===============
CPP_30.cpp Compilation Failed
CPP_9.cpp Compilation Failed
CPP_35.cpp Compilation Failed
CPP_138.cpp Compilation Failed
CPP_134.cpp Compilation Failed
CPP_102.cpp Execution Failed
CPP_18.cpp Passed
CPP_45.cpp Compilation Failed
CPP_21.cpp Compilation Failed
CPP_78.cpp Passed
CPP_63.cpp Compilation Failed
CPP_100.cpp Compilation Failed
CPP_106.cpp Compilation Failed
CPP_83.cpp Compilation Failed
CPP_6.cpp Compilation Failed
CPP_116.cpp Compilation Failed
CPP_71.cpp Compilation Failed
CPP_99.cpp Compilation Failed
CPP_82.cpp Compilation Failed
CPP_39.cpp Passed
CPP_56.cpp Compilation Failed
CPP_11.cpp Compilation Failed
CPP_146.cpp Compilation Failed
CPP_59.cpp Compilation Failed
CPP_77.cpp Compilation Failed
CPP_98.cpp Compilation Failed
CPP_41.cpp Passed
CPP_0.cpp Compilation Failed
CPP_157.cpp Compilation Failed
CPP_141.cpp Compilation Failed
CPP_127.cpp Compilation Failed
CPP_31.cpp Compilation Failed
CPP_122.cpp Compilation Failed
CPP_49.cpp Compilation Failed
CPP_55.cpp Execution Failed
CPP_115.cpp Compilation Failed
CPP_40.cpp Execution Failed
CPP_130.cpp Compilation Failed
CPP_48.cpp Compilation Failed
CPP_155.cpp Compilation Failed
CPP_96.cpp Compilation Failed
CPP_3.cpp Compilation Failed
CPP_97.cpp Compilation Failed
CPP_4.cpp Compilation Failed
CPP_60.cpp Passed
CPP_76.cpp Execution Failed
CPP_80.cpp Execution Failed
CPP_23.cpp Execution Failed
CPP_136.cpp Compilation Failed
CPP_27.cpp Compilation Failed
CPP_16.cpp Compilation Failed
CPP_72.cpp Compilation Failed
CPP_24.cpp Compilation Failed
CPP_92.cpp Execution Failed
CPP_43.cpp Compilation Failed
CPP_53.cpp Compilation Failed
CPP_126.cpp Compilation Failed
CPP_52.cpp Compilation Failed
CPP_2.cpp Compilation Failed
CPP_139.cpp Compilation Failed
CPP_57.cpp Compilation Failed
CPP_159.cpp Compilation Failed
CPP_108.cpp Compilation Failed
CPP_61.cpp Compilation Failed
CPP_13.cpp Passed
CPP_124.cpp Execution Failed
CPP_75.cpp Compilation Failed
CPP_142.cpp Compilation Failed
CPP_66.cpp Compilation Failed
CPP_114.cpp Compilation Failed
CPP_85.cpp Compilation Failed
CPP_46.cpp Execution Failed
CPP_28.cpp Compilation Failed
CPP_62.cpp Compilation Failed
CPP_36.cpp Compilation Failed
CPP_131.cpp Compilation Failed
CPP_152.cpp Compilation Failed
CPP_132.cpp Compilation Failed
CPP_68.cpp Compilation Failed
CPP_163.cpp Compilation Failed
CPP_74.cpp Compilation Failed
CPP_135.cpp Compilation Failed
CPP_8.cpp Compilation Failed
CPP_42.cpp Compilation Failed
CPP_133.cpp Compilation Failed
CPP_121.cpp Compilation Failed
CPP_109.cpp Compilation Failed
CPP_5.cpp Compilation Failed
CPP_12.cpp Compilation Failed
CPP_150.cpp Compilation Failed
CPP_25.cpp Compilation Failed
CPP_89.cpp Compilation Failed
CPP_64.cpp Compilation Failed
CPP_128.cpp Compilation Failed
CPP_91.cpp Compilation Failed
CPP_73.cpp Compilation Failed
CPP_151.cpp Compilation Failed
CPP_95.cpp Compilation Failed
