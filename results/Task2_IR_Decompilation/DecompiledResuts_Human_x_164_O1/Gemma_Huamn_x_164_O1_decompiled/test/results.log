Compilation and Execution Results
=================================

CPP_30.cpp: Compilation Failed
Error: ./CPP_30.cpp:8:6: error: ambiguating new declaration of ‘void _ZSt20__throw_length_errorPKc(char*)’
    8 | void _ZSt20__throw_length_errorPKc(char* msg);
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_30.cpp:4:8: note: old declaration ‘float* _ZSt20__throw_length_errorPKc(char*)’
    4 | float* _ZSt20__throw_length_errorPKc(char* msg);
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_30.cpp:55:13: error: ‘vector’ is not a template
   55 | bool issame(vector<float> a,vector<float>b){
      |             ^~~~~~
./CPP_30.cpp:55:29: error: ‘vector’ is not a template
   55 | bool issame(vector<float> a,vector<float>b){
      |                             ^~~~~~
./CPP_30.cpp: In function ‘bool issame(vector, vector)’:
./CPP_30.cpp:56:11: error: ‘vector’ {aka ‘struct vector’} has no member named ‘size’
   56 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_30.cpp:56:21: error: ‘vector’ {aka ‘struct vector’} has no member named ‘size’
   56 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_30.cpp:57:22: error: ‘vector’ {aka ‘struct vector’} has no member named ‘size’
   57 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_30.cpp:59:18: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   59 |         if (abs(a[i]-b[i])>1e-4) return false;
      |                  ^
./CPP_30.cpp:59:23: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   59 |         if (abs(a[i]-b[i])>1e-4) return false;
      |                       ^
In file included from ./CPP_30.cpp:54:
./CPP_30.cpp: In function ‘int main()’:
./CPP_30.cpp:64:20: error: ‘get_positive’ was not declared in this scope
   64 |     assert (issame(get_positive({-1, -2, 4, 5, 6}) , {4, 5, 6} ));
      |                    ^~~~~~~~~~~~


CPP_110.cpp: Compilation Failed
Error: ./CPP_110.cpp:13:28: error: field ‘__0’ has incomplete type ‘std___Vector_base’
   13 |   struct std___Vector_base __0;
      |                            ^~~
./CPP_110.cpp:13:10: note: forward declaration of ‘struct std___Vector_base’
   13 |   struct std___Vector_base __0;
      |          ^~~~~~~~~~~~~~~~~
./CPP_110.cpp:17:65: error: field ‘__0’ has incomplete type ‘std___Vector_base_int_std__allocator_int___Vector_impl’
   17 |   struct std___Vector_base_int_std__allocator_int___Vector_impl __0;
      |                                                                 ^~~
./CPP_110.cpp:17:10: note: forward declaration of ‘struct std___Vector_base_int_std__allocator_int___Vector_impl’
   17 |   struct std___Vector_base_int_std__allocator_int___Vector_impl __0;
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_110.cpp:21:70: error: field ‘__0’ has incomplete type ‘std___Vector_base_int_std__allocator_int___Vector_impl_data’
   21 |   struct std___Vector_base_int_std__allocator_int___Vector_impl_data __0;
      |                                                                      ^~~
./CPP_110.cpp:21:10: note: forward declaration of ‘struct std___Vector_base_int_std__allocator_int___Vector_impl_data’
   21 |   struct std___Vector_base_int_std__allocator_int___Vector_impl_data __0;
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_110.cpp:30:19: error: expected unqualified-id before ‘.’ token
   30 | char const* const .str = "YES";
      |                   ^
./CPP_110.cpp: In function ‘void _Z8exchangeB5cxx11St6vectorIiSaIiEES1_(std___cxx11__basic_string_char__Alloc_hider*, const std__vector*, const std__vector*)’:
./CPP_110.cpp:49:1: error: jump to label ‘L15’
   49 | L15:
      | ^~~
./CPP_110.cpp:44:10: note:   from here
   44 |     goto L15;
      |          ^~~
./CPP_110.cpp:46:11: note:   crosses initialization of ‘int64_t __10’
   46 |   int64_t __10 = __9 > 1 ? __9 : 1;
      |           ^~~~
./CPP_110.cpp:64:1: error: jump to label ‘L28’
   64 | L28:
      | ^~~
./CPP_110.cpp:47:8: note:   from here
   47 |   goto L28;
      |        ^~~
./CPP_110.cpp:62:11: note:   crosses initialization of ‘int64_t __18’
   62 |   int64_t __18 = __17 > 1 ? __17 : 1;
      |           ^~~~
./CPP_110.cpp:61:11: note:   crosses initialization of ‘int64_t __17’
   61 |   int64_t __17 = __16 >> 2;
      |           ^~~~
./CPP_110.cpp:57:11: note:   crosses initialization of ‘int64_t __16’
   57 |   int64_t __16 = __14 - __15;
      |           ^~~~
./CPP_110.cpp:56:11: note:   crosses initialization of ‘int64_t __15’
   56 |   int64_t __15 = (int64_t)__13;
      |           ^~~~
./CPP_110.cpp:55:11: note:   crosses initialization of ‘int64_t __14’
   55 |   int64_t __14 = (int64_t)__12;
      |           ^~~~
./CPP_110.cpp:53:12: note:   crosses initialization of ‘int32_t* __13’
   53 |   int32_t* __13 =
      |            ^~~~
./CPP_110.cpp:51:12: note:   crosses initialization of ‘int32_t* __12’
   51 |   int32_t* __12 =
      |            ^~~~
./CPP_110.cpp:50:11: note:   crosses initialization of ‘int32_t __11’
   50 |   int32_t __11 = 0;
      |           ^~~~
./CPP_110.cpp:78:1: error: jump to label ‘L38’
   78 | L38:
      | ^~~
./CPP_110.cpp:59:10: note:   from here
   59 |     goto L38;
      |          ^~~
./CPP_110.cpp:66:11: note:   crosses initialization of ‘int32_t __20’
   66 |   int32_t __20 = 0;
      |           ^~~~
./CPP_110.cpp:65:11: note:   crosses initialization of ‘int64_t __19’
   65 |   int64_t __19 = 0;
      |           ^~~~
./CPP_110.cpp:62:11: note:   crosses initialization of ‘int64_t __18’
   62 |   int64_t __18 = __17 > 1 ? __17 : 1;
      |           ^~~~
./CPP_110.cpp:61:11: note:   crosses initialization of ‘int64_t __17’
   61 |   int64_t __17 = __16 >> 2;
      |           ^~~~
./CPP_110.cpp:90:3: error: ‘memcpy’ was not declared in this scope
   90 |   memcpy(__29, "YES", 3);
      |   ^~~~~~
./CPP_110.cpp:2:1: note: ‘memcpy’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    1 | #include <stdint.h>
  +++ |+#include <cstring>
    2 | 
./CPP_110.cpp:91:12: error: request for member ‘data’ in ‘__0->std___cxx11__basic_string_char__Alloc_hider::__0’, which is of non-class type ‘char*’
   91 |   __0->__0.data.size = 3;
      |            ^~~~
./CPP_110.cpp:95:1: error: jump to label ‘L59’
   95 | L59:
      | ^~~
./CPP_110.cpp:86:10: note:   from here
   86 |     goto L59;
      |          ^~~
./CPP_110.cpp:89:9: note:   crosses initialization of ‘char* __29’
   89 |   char* __29 = (char*)__28;
      |         ^~~~
./CPP_110.cpp:100:12: error: request for member ‘data’ in ‘__0->std___cxx11__basic_string_char__Alloc_hider::__0’, which is of non-class type ‘char*’
  100 |   __0->__0.data.size = 2;
      |            ^~~~
./CPP_110.cpp:105:1: error: jump to label ‘L64’
  105 | L64:
      | ^~~
./CPP_110.cpp:93:8: note:   from here
   93 |   goto L64;
      |        ^~~
./CPP_110.cpp:101:9: note:   crosses initialization of ‘char* __31’
  101 |   char* __31 = (char*)__30;
      |         ^~~~
./CPP_110.cpp:97:15: note:   crosses initialization of ‘anon* __30’
   97 |   union anon* __30 =
      |               ^~~~
./CPP_110.cpp:63:8: error: label ‘L44’ used but not defined
   63 |   goto L44;
      |        ^~~
In file included from ./CPP_110.cpp:110:
./CPP_110.cpp: In function ‘int main()’:
./CPP_110.cpp:112:13: error: ‘exchange’ was not declared in this scope
  112 |     assert (exchange({1, 2, 3, 4}, {1, 2, 3, 4}) == "YES");
      |             ^~~~~~~~


CPP_9.cpp: Compilation Failed
Error: ./CPP_9.cpp: In function ‘void rolling_max(std__vector*, const std__vector*)’:
./CPP_9.cpp:34:43: error: ‘const struct std__vector::std____Vector_base::std____Vector_base___Vector_impl::std____Vector_base___Vector_impl___Vector_impl_data’ has no member named ‘_M_begin_’; did you mean ‘__begin_’?
   34 |   __tmp4 = __arg->_M_impl._M_impl._M_impl._M_begin_;
      |                                           ^~~~~~~~~
      |                                           __begin_
./CPP_9.cpp:35:43: error: ‘const struct std__vector::std____Vector_base::std____Vector_base___Vector_impl::std____Vector_base___Vector_impl___Vector_impl_data’ has no member named ‘_M_end_’; did you mean ‘__end_’?
   35 |   __tmp5 = __arg->_M_impl._M_impl._M_impl._M_end_;
      |                                           ^~~~~~~
      |                                           __end_
./CPP_9.cpp:36:46: error: ‘struct std__vector::std____Vector_base::std____Vector_base___Vector_impl::std____Vector_base___Vector_impl___Vector_impl_data’ has no member named ‘_M_begin_’; did you mean ‘__begin_’?
   36 |   __tmp6 = __result->_M_impl._M_impl._M_impl._M_begin_;
      |                                              ^~~~~~~~~
      |                                              __begin_
./CPP_9.cpp:37:46: error: ‘struct std__vector::std____Vector_base::std____Vector_base___Vector_impl::std____Vector_base___Vector_impl___Vector_impl_data’ has no member named ‘_M_end_’; did you mean ‘__end_’?
   37 |   __tmp7 = __result->_M_impl._M_impl._M_impl._M_end_;
      |                                              ^~~~~~~
      |                                              __end_
./CPP_9.cpp:38:46: error: ‘struct std__vector::std____Vector_base::std____Vector_base___Vector_impl::std____Vector_base___Vector_impl___Vector_impl_data’ has no member named ‘_M_end_cap_’; did you mean ‘__end_cap_’?
   38 |   __tmp8 = __result->_M_impl._M_impl._M_impl._M_end_cap_;
      |                                              ^~~~~~~~~~~
      |                                              __end_cap_
./CPP_9.cpp: In function ‘void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(std__vector*, int*, int*)’:
./CPP_9.cpp:88:45: error: ‘struct std__vector::std____Vector_base::std____Vector_base___Vector_impl::std____Vector_base___Vector_impl___Vector_impl_data’ has no member named ‘_M_end_’; did you mean ‘__end_’?
   88 |   __tmp12 = __this->_M_impl._M_impl._M_impl._M_end_;
      |                                             ^~~~~~~
      |                                             __end_
./CPP_9.cpp:89:45: error: ‘struct std__vector::std____Vector_base::std____Vector_base___Vector_impl::std____Vector_base___Vector_impl___Vector_impl_data’ has no member named ‘_M_begin_’; did you mean ‘__begin_’?
   89 |   __tmp13 = __this->_M_impl._M_impl._M_impl._M_begin_;
      |                                             ^~~~~~~~~
      |                                             __begin_
./CPP_9.cpp:90:45: error: ‘struct std__vector::std____Vector_base::std____Vector_base___Vector_impl::std____Vector_base___Vector_impl___Vector_impl_data’ has no member named ‘_M_end_cap_’; did you mean ‘__end_cap_’?
   90 |   __tmp14 = __this->_M_impl._M_impl._M_impl._M_end_cap_;
      |                                             ^~~~~~~~~~~
      |                                             __end_cap_
./CPP_9.cpp:107:45: error: ‘struct std__vector::std____Vector_base::std____Vector_base___Vector_impl::std____Vector_base___Vector_impl___Vector_impl_data’ has no member named ‘_M_begin_’; did you mean ‘__begin_’?
  107 |   __tmp22 = __this->_M_impl._M_impl._M_impl._M_begin_;
      |                                             ^~~~~~~~~
      |                                             __begin_
./CPP_9.cpp:109:45: error: ‘struct std__vector::std____Vector_base::std____Vector_base___Vector_impl::std____Vector_base___Vector_impl___Vector_impl_data’ has no member named ‘_M_begin_’; did you mean ‘__begin_’?
  109 |   __tmp24 = __this->_M_impl._M_impl._M_impl._M_begin_;
      |                                             ^~~~~~~~~
      |                                             __begin_
./CPP_9.cpp:110:45: error: ‘struct std__vector::std____Vector_base::std____Vector_base___Vector_impl::std____Vector_base___Vector_impl___Vector_impl_data’ has no member named ‘_M_end_’; did you mean ‘__end_’?
  110 |   __tmp25 = __this->_M_impl._M_impl._M_impl._M_end_;
      |                                             ^~~~~~~
      |                                             __end_
./CPP_9.cpp:128:5: error: ‘memcpy’ was not declared in this scope
  128 |     memcpy(__tmp26, __tmp24, __tmp23 * 4);
      |     ^~~~~~
./CPP_9.cpp:2:1: note: ‘memcpy’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    1 | #include <stdlib.h>
  +++ |+#include <cstring>
    2 | 
./CPP_9.cpp:133:5: error: ‘memcpy’ was not declared in this scope
  133 |     memcpy(__tmp26 + __tmp29 + 1, __tmp21, __tmp30 * 4);
      |     ^~~~~~
./CPP_9.cpp:133:5: note: ‘memcpy’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
./CPP_9.cpp:140:35: error: ‘struct std__vector::std____Vector_base::std____Vector_base___Vector_impl::std____Vector_base___Vector_impl___Vector_impl_data’ has no member named ‘_M_begin_’; did you mean ‘__begin_’?
  140 |   __this->_M_impl._M_impl._M_impl._M_begin_ = __tmp26;
      |                                   ^~~~~~~~~
      |                                   __begin_
./CPP_9.cpp:141:35: error: ‘struct std__vector::std____Vector_base::std____Vector_base___Vector_impl::std____Vector_base___Vector_impl___Vector_impl_data’ has no member named ‘_M_end_’; did you mean ‘__end_’?
  141 |   __this->_M_impl._M_impl._M_impl._M_end_ = __tmp26 + __tmp29 + 1;
      |                                   ^~~~~~~
      |                                   __end_
./CPP_9.cpp:142:35: error: ‘struct std__vector::std____Vector_base::std____Vector_base___Vector_impl::std____Vector_base___Vector_impl___Vector_impl_data’ has no member named ‘_M_end_cap_’; did you mean ‘__end_cap_’?
  142 |   __this->_M_impl._M_impl._M_impl._M_end_cap_ = __tmp26 + __tmp20;
      |                                   ^~~~~~~~~~~
      |                                   __end_cap_
./CPP_9.cpp: At global scope:
./CPP_9.cpp:147:13: error: ‘vector’ was not declared in this scope
  147 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_9.cpp:147:20: error: expected primary-expression before ‘int’
  147 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_9.cpp:147:27: error: ‘vector’ was not declared in this scope
  147 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_9.cpp:147:34: error: expected primary-expression before ‘int’
  147 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_9.cpp:147:39: error: expression list treated as compound expression in initializer [-fpermissive]
  147 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_9.cpp:146:
./CPP_9.cpp: In function ‘int main()’:
./CPP_9.cpp:156:35: error: too few arguments to function ‘void rolling_max(std__vector*, const std__vector*)’
  156 |      assert (issame(rolling_max({}),{}));
      |                                   ^
./CPP_9.cpp:18:6: note: declared here
   18 | void rolling_max(struct std__vector * __result, const struct std__vector * __arg) {
      |      ^~~~~~~~~~~
In file included from ./CPP_9.cpp:146:
./CPP_9.cpp:156:39: error: ‘issame’ cannot be used as a function
  156 |      assert (issame(rolling_max({}),{}));
      |                                       ^
./CPP_9.cpp:157:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std__vector*’
  157 |     assert (issame(rolling_max({1, 2, 3, 4}) , {1, 2, 3, 4}));
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_9.cpp:18:39: note:   initializing argument 1 of ‘void rolling_max(std__vector*, const std__vector*)’
   18 | void rolling_max(struct std__vector * __result, const struct std__vector * __arg) {
      |                  ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from ./CPP_9.cpp:146:
./CPP_9.cpp:157:60: error: ‘issame’ cannot be used as a function
  157 |     assert (issame(rolling_max({1, 2, 3, 4}) , {1, 2, 3, 4}));
      |                                                            ^
./CPP_9.cpp:158:45: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std__vector*’
  158 |      assert (issame(rolling_max({4, 3, 2, 1}),{4, 4, 4, 4}));
      |                                             ^
      |                                             |
      |                                             <brace-enclosed initializer list>
./CPP_9.cpp:18:39: note:   initializing argument 1 of ‘void rolling_max(std__vector*, const std__vector*)’
   18 | void rolling_max(struct std__vector * __result, const struct std__vector * __arg) {
      |                  ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from ./CPP_9.cpp:146:
./CPP_9.cpp:158:59: error: ‘issame’ cannot be used as a function
  158 |      assert (issame(rolling_max({4, 3, 2, 1}),{4, 4, 4, 4}));
      |                                                           ^
./CPP_9.cpp:159:51: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std__vector*’
  159 |       assert (issame(rolling_max({3, 2, 3, 100, 3}) ,{3, 3, 3, 100, 100}));
      |                                                   ^
      |                                                   |
      |                                                   <brace-enclosed initializer list>
./CPP_9.cpp:18:39: note:   initializing argument 1 of ‘void rolling_max(std__vector*, const std__vector*)’
   18 | void rolling_max(struct std__vector * __result, const struct std__vector * __arg) {
      |                  ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from ./CPP_9.cpp:146:
./CPP_9.cpp:159:73: error: ‘issame’ cannot be used as a function
  159 |       assert (issame(rolling_max({3, 2, 3, 100, 3}) ,{3, 3, 3, 100, 100}));
      |                                                                         ^


CPP_35.cpp: Compilation Failed
Error: In file included from ./CPP_35.cpp:18:
./CPP_35.cpp: In function ‘int main()’:
./CPP_35.cpp:20:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   20 |     assert (abs(max_element({1, 2, 3})- 3)<1e-4);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_35.cpp:3:26: note:   initializing argument 1 of ‘float max_element(float*, float*)’
    3 | float max_element(float* begin, float* end) {
      |                   ~~~~~~~^~~~~
In file included from ./CPP_35.cpp:18:
./CPP_35.cpp:21:68: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   21 |     assert (abs(max_element({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10})- 124)<1e-4);
      |                                                                    ^
      |                                                                    |
      |                                                                    <brace-enclosed initializer list>
./CPP_35.cpp:3:26: note:   initializing argument 1 of ‘float max_element(float*, float*)’
    3 | float max_element(float* begin, float* end) {
      |                   ~~~~~~~^~~~~


CPP_138.cpp: Compilation Failed
Error: In file included from ./CPP_138.cpp:10:
./CPP_138.cpp: In function ‘int main()’:
./CPP_138.cpp:12:13: error: ‘is_equal_to_sum_even’ was not declared in this scope
   12 |     assert (is_equal_to_sum_even(4) == false);
      |             ^~~~~~~~~~~~~~~~~~~~


CPP_134.cpp: Compilation Failed
Error: ./CPP_134.cpp: In function ‘int check_if_last_char_is_a_letter(const char*)’:
./CPP_134.cpp:4:16: error: ‘strlen’ was not declared in this scope
    4 |   size_t len = strlen(s);
      |                ^~~~~~
./CPP_134.cpp:2:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    1 | #include <stddef.h>
  +++ |+#include <cstring>
    2 | 


CPP_102.cpp: Execution Failed
Error: CPP_102: ./CPP_102.cpp:19: int main(): Assertion `choose_num(12, 15) == 14' failed.
Aborted (core dumped)


CPP_45.cpp: Compilation Failed
Error: In file included from ./CPP_45.cpp:7:
./CPP_45.cpp: In function ‘int main()’:
./CPP_45.cpp:9:13: error: ‘abs’ was not declared in this scope
    9 |     assert (abs(triangle_area(5, 3) - 7.5)<1e-4);
      |             ^~~


CPP_21.cpp: Compilation Failed
Error: ./CPP_21.cpp:22:13: error: ‘vector’ was not declared in this scope
   22 | bool issame(vector<float> a,vector<float>b){
      |             ^~~~~~
./CPP_21.cpp:22:20: error: expected primary-expression before ‘float’
   22 | bool issame(vector<float> a,vector<float>b){
      |                    ^~~~~
./CPP_21.cpp:22:29: error: ‘vector’ was not declared in this scope
   22 | bool issame(vector<float> a,vector<float>b){
      |                             ^~~~~~
./CPP_21.cpp:22:36: error: expected primary-expression before ‘float’
   22 | bool issame(vector<float> a,vector<float>b){
      |                                    ^~~~~
./CPP_21.cpp:22:43: error: expression list treated as compound expression in initializer [-fpermissive]
   22 | bool issame(vector<float> a,vector<float>b){
      |                                           ^
In file included from ./CPP_21.cpp:21:
./CPP_21.cpp: In function ‘int main()’:
./CPP_21.cpp:31:47: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   31 |     assert (issame(rescale_to_unit({2.0, 49.9}) , {0.0, 1.0}));
      |                                               ^
      |                                               |
      |                                               <brace-enclosed initializer list>
./CPP_21.cpp:3:29: note:   initializing argument 1 of ‘void rescale_to_unit(float*, float*, size_t)’
    3 | void rescale_to_unit(float *res, float *data, size_t n) {
      |                      ~~~~~~~^~~
In file included from ./CPP_21.cpp:21:
./CPP_21.cpp:31:61: error: ‘issame’ cannot be used as a function
   31 |     assert (issame(rescale_to_unit({2.0, 49.9}) , {0.0, 1.0}));
      |                                                             ^
./CPP_21.cpp:32:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   32 |      assert (issame(rescale_to_unit({100.0, 49.9}) ,{1.0, 0.0}));
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_21.cpp:3:29: note:   initializing argument 1 of ‘void rescale_to_unit(float*, float*, size_t)’
    3 | void rescale_to_unit(float *res, float *data, size_t n) {
      |                      ~~~~~~~^~~
In file included from ./CPP_21.cpp:21:
./CPP_21.cpp:32:63: error: ‘issame’ cannot be used as a function
   32 |      assert (issame(rescale_to_unit({100.0, 49.9}) ,{1.0, 0.0}));
      |                                                               ^
./CPP_21.cpp:33:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   33 |      assert (issame(rescale_to_unit({1.0, 2.0, 3.0, 4.0, 5.0}) , {0.0, 0.25, 0.5, 0.75, 1.0}));
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_21.cpp:3:29: note:   initializing argument 1 of ‘void rescale_to_unit(float*, float*, size_t)’
    3 | void rescale_to_unit(float *res, float *data, size_t n) {
      |                      ~~~~~~~^~~
In file included from ./CPP_21.cpp:21:
./CPP_21.cpp:33:93: error: ‘issame’ cannot be used as a function
   33 |      assert (issame(rescale_to_unit({1.0, 2.0, 3.0, 4.0, 5.0}) , {0.0, 0.25, 0.5, 0.75, 1.0}));
      |                                                                                             ^
./CPP_21.cpp:34:61: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   34 |     assert (issame(rescale_to_unit({2.0, 1.0, 5.0, 3.0, 4.0}) , {0.25, 0.0, 1.0, 0.5, 0.75}));
      |                                                             ^
      |                                                             |
      |                                                             <brace-enclosed initializer list>
./CPP_21.cpp:3:29: note:   initializing argument 1 of ‘void rescale_to_unit(float*, float*, size_t)’
    3 | void rescale_to_unit(float *res, float *data, size_t n) {
      |                      ~~~~~~~^~~
In file included from ./CPP_21.cpp:21:
./CPP_21.cpp:34:92: error: ‘issame’ cannot be used as a function
   34 |     assert (issame(rescale_to_unit({2.0, 1.0, 5.0, 3.0, 4.0}) , {0.25, 0.0, 1.0, 0.5, 0.75}));
      |                                                                                            ^
./CPP_21.cpp:35:67: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   35 |      assert (issame(rescale_to_unit({12.0, 11.0, 15.0, 13.0, 14.0}) ,{0.25, 0.0, 1.0, 0.5, 0.75}));
      |                                                                   ^
      |                                                                   |
      |                                                                   <brace-enclosed initializer list>
./CPP_21.cpp:3:29: note:   initializing argument 1 of ‘void rescale_to_unit(float*, float*, size_t)’
    3 | void rescale_to_unit(float *res, float *data, size_t n) {
      |                      ~~~~~~~^~~
In file included from ./CPP_21.cpp:21:
./CPP_21.cpp:35:97: error: ‘issame’ cannot be used as a function
   35 |      assert (issame(rescale_to_unit({12.0, 11.0, 15.0, 13.0, 14.0}) ,{0.25, 0.0, 1.0, 0.5, 0.75}));
      |                                                                                                 ^


CPP_78.cpp: Compilation Failed
Error: ./CPP_78.cpp: In function ‘int hex_key(const char*)’:
./CPP_78.cpp:5:3: error: ‘size_t’ was not declared in this scope
    5 |   size_t l = 6;
      |   ^~~~~~
./CPP_78.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_78.cpp:7:14: error: ‘l’ was not declared in this scope
    7 |   while (i < l) {
      |              ^


CPP_63.cpp: Compilation Failed
Error: In file included from ./CPP_63.cpp:16:
./CPP_63.cpp: In function ‘int main()’:
./CPP_63.cpp:18:13: error: ‘fibfib’ was not declared in this scope
   18 |     assert (fibfib(2) == 1);
      |             ^~~~~~


CPP_100.cpp: Compilation Failed
Error: ./CPP_100.cpp: In function ‘void make_a_pile(void*, int)’:
./CPP_100.cpp:6:3: error: ‘memset’ was not declared in this scope
    6 |   memset(var4, 0, 24);
      |   ^~~~~~
./CPP_100.cpp:2:1: note: ‘memset’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    1 | #include <stdlib.h>
  +++ |+#include <cstring>
    2 | 
./CPP_100.cpp:11:15: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
   11 |   int *var7 = var5;
      |               ^~~~
      |               |
      |               void*
./CPP_100.cpp:12:30: warning: pointer of type ‘void *’ used in arithmetic [-Wpointer-arith]
   12 |   int *var8 = *(int **)(var4 + 0);
      |                         ~~~~~^~~
./CPP_100.cpp:17:18: warning: pointer of type ‘void *’ used in arithmetic [-Wpointer-arith]
   17 |   *(int **)(var4 + 0) = var7;
      |             ~~~~~^~~
./CPP_100.cpp:18:18: warning: pointer of type ‘void *’ used in arithmetic [-Wpointer-arith]
   18 |   *(int **)(var4 + 8) = var7 + 1;
      |             ~~~~~^~~
./CPP_100.cpp:20:18: warning: pointer of type ‘void *’ used in arithmetic [-Wpointer-arith]
   20 |   *(int **)(var4 + 16) = var7 + 1;
      |             ~~~~~^~~~
./CPP_100.cpp:24:14: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
   24 |       var3 = arg0;
      |              ^~~~
      |              |
      |              void*
./CPP_100.cpp:25:35: warning: pointer of type ‘void *’ used in arithmetic [-Wpointer-arith]
   25 |       int *var11 = *(int **)(var4 + 16);
      |                              ~~~~~^~~~
./CPP_100.cpp:26:35: warning: pointer of type ‘void *’ used in arithmetic [-Wpointer-arith]
   26 |       int *var12 = *(int **)(var4 + 0);
      |                              ~~~~~^~~
./CPP_100.cpp:33:35: warning: pointer of type ‘void *’ used in arithmetic [-Wpointer-arith]
   33 |       int *var19 = *(int **)(var4 + 16);
      |                              ~~~~~^~~~
./CPP_100.cpp:35:22: warning: pointer of type ‘void *’ used in arithmetic [-Wpointer-arith]
   35 |       *(int **)(var4 + 16) = var19 + 1;
      |                 ~~~~~^~~~
./CPP_100.cpp:40:1: error: jump to label ‘var6’
   40 | var6:
      | ^~~~
./CPP_100.cpp:9:10: note:   from here
    9 |     goto var6;
      |          ^~~~
./CPP_100.cpp:13:7: note:   crosses initialization of ‘int var9’
   13 |   int var9 = var8 == NULL;
      |       ^~~~
./CPP_100.cpp:12:8: note:   crosses initialization of ‘int* var8’
   12 |   int *var8 = *(int **)(var4 + 0);
      |        ^~~~
./CPP_100.cpp:11:8: note:   crosses initialization of ‘int* var7’
   11 |   int *var7 = var5;
      |        ^~~~
./CPP_100.cpp:41:10: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
   41 |   var3 = arg0;
      |          ^~~~
      |          |
      |          void*
./CPP_100.cpp:42:25: warning: pointer of type ‘void *’ used in arithmetic [-Wpointer-arith]
   42 |   var8 = *(int **)(var4 + 0);
      |                    ~~~~~^~~
./CPP_100.cpp:50:1: error: jump to label ‘var52’
   50 | var52:
      | ^~~~~
./CPP_100.cpp:15:10: note:   from here
   15 |     goto var52;
      |          ^~~~~
./CPP_100.cpp:43:7: note:   crosses initialization of ‘int var20’
   43 |   int var20 = var8 == NULL;
      |       ^~~~~
./CPP_100.cpp: At global scope:
./CPP_100.cpp:76:13: error: ‘vector’ was not declared in this scope
   76 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_100.cpp:76:20: error: expected primary-expression before ‘int’
   76 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_100.cpp:76:27: error: ‘vector’ was not declared in this scope
   76 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_100.cpp:76:34: error: expected primary-expression before ‘int’
   76 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_100.cpp:76:39: error: expression list treated as compound expression in initializer [-fpermissive]
   76 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_100.cpp:75:
./CPP_100.cpp: In function ‘int main()’:
./CPP_100.cpp:85:32: error: invalid conversion from ‘int’ to ‘void*’ [-fpermissive]
   85 |     assert (issame(make_a_pile(3) , {3, 5, 7}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:85:33: error: too few arguments to function ‘void make_a_pile(void*, int)’
   85 |     assert (issame(make_a_pile(3) , {3, 5, 7}));
      |                                 ^
./CPP_100.cpp:3:6: note: declared here
    3 | void make_a_pile(void * arg0, int arg1) {
      |      ^~~~~~~~~~~
In file included from ./CPP_100.cpp:75:
./CPP_100.cpp:85:46: error: ‘issame’ cannot be used as a function
   85 |     assert (issame(make_a_pile(3) , {3, 5, 7}));
      |                                              ^
./CPP_100.cpp:86:32: error: invalid conversion from ‘int’ to ‘void*’ [-fpermissive]
   86 |     assert (issame(make_a_pile(4) , {4,6,8,10}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:86:33: error: too few arguments to function ‘void make_a_pile(void*, int)’
   86 |     assert (issame(make_a_pile(4) , {4,6,8,10}));
      |                                 ^
./CPP_100.cpp:3:6: note: declared here
    3 | void make_a_pile(void * arg0, int arg1) {
      |      ^~~~~~~~~~~
In file included from ./CPP_100.cpp:75:
./CPP_100.cpp:86:47: error: ‘issame’ cannot be used as a function
   86 |     assert (issame(make_a_pile(4) , {4,6,8,10}));
      |                                               ^
./CPP_100.cpp:87:32: error: invalid conversion from ‘int’ to ‘void*’ [-fpermissive]
   87 |     assert (issame(make_a_pile(5) , {5, 7, 9, 11, 13}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:87:33: error: too few arguments to function ‘void make_a_pile(void*, int)’
   87 |     assert (issame(make_a_pile(5) , {5, 7, 9, 11, 13}));
      |                                 ^
./CPP_100.cpp:3:6: note: declared here
    3 | void make_a_pile(void * arg0, int arg1) {
      |      ^~~~~~~~~~~
In file included from ./CPP_100.cpp:75:
./CPP_100.cpp:87:54: error: ‘issame’ cannot be used as a function
   87 |     assert (issame(make_a_pile(5) , {5, 7, 9, 11, 13}));
      |                                                      ^
./CPP_100.cpp:88:32: error: invalid conversion from ‘int’ to ‘void*’ [-fpermissive]
   88 |     assert (issame(make_a_pile(6) , {6, 8, 10, 12, 14, 16}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:88:33: error: too few arguments to function ‘void make_a_pile(void*, int)’
   88 |     assert (issame(make_a_pile(6) , {6, 8, 10, 12, 14, 16}));
      |                                 ^
./CPP_100.cpp:3:6: note: declared here
    3 | void make_a_pile(void * arg0, int arg1) {
      |      ^~~~~~~~~~~
In file included from ./CPP_100.cpp:75:
./CPP_100.cpp:88:59: error: ‘issame’ cannot be used as a function
   88 |     assert (issame(make_a_pile(6) , {6, 8, 10, 12, 14, 16}));
      |                                                           ^
./CPP_100.cpp:89:32: error: invalid conversion from ‘int’ to ‘void*’ [-fpermissive]
   89 |     assert (issame(make_a_pile(8) , {8, 10, 12, 14, 16, 18, 20, 22}));
      |                                ^
      |                                |
      |                                int
./CPP_100.cpp:89:33: error: too few arguments to function ‘void make_a_pile(void*, int)’
   89 |     assert (issame(make_a_pile(8) , {8, 10, 12, 14, 16, 18, 20, 22}));
      |                                 ^
./CPP_100.cpp:3:6: note: declared here
    3 | void make_a_pile(void * arg0, int arg1) {
      |      ^~~~~~~~~~~
In file included from ./CPP_100.cpp:75:
./CPP_100.cpp:89:68: error: ‘issame’ cannot be used as a function
   89 |     assert (issame(make_a_pile(8) , {8, 10, 12, 14, 16, 18, 20, 22}));
      |                                                                    ^


CPP_106.cpp: Compilation Failed
Error: ./CPP_106.cpp:18:24: error: expected ‘,’ or ‘...’ before ‘this’
   18 |     struct std_vector *this,
      |                        ^~~~
./CPP_106.cpp: In function ‘void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(std_vector*)’:
./CPP_106.cpp:21:16: error: invalid use of ‘this’ in non-member function
   21 |   int *begin = this->data->impl->begin;
      |                ^~~~
./CPP_106.cpp:22:14: error: invalid use of ‘this’ in non-member function
   22 |   int *end = this->data->impl->end;
      |              ^~~~
./CPP_106.cpp:23:19: error: invalid use of ‘this’ in non-member function
   23 |   int *capacity = this->data->impl->capacity;
      |                   ^~~~
./CPP_106.cpp:24:3: error: ‘ptrdiff_t’ was not declared in this scope; did you mean ‘std::ptrdiff_t’?
   24 |   ptrdiff_t size = end - begin;
      |   ^~~~~~~~~
      |   std::ptrdiff_t
In file included from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_106.cpp:1:
/usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:259:28: note: ‘std::ptrdiff_t’ declared here
  259 |   typedef __PTRDIFF_TYPE__ ptrdiff_t;
      |                            ^~~~~~~~~
./CPP_106.cpp:25:12: error: expected ‘;’ before ‘new_size’
   25 |   ptrdiff_t new_size = (size == 9223372036854775804) ? 0 : size;
      |            ^~~~~~~~~
      |            ;
./CPP_106.cpp:26:7: error: ‘size’ was not declared in this scope; did you mean ‘size_t’?
   26 |   if (size == 0) {
      |       ^~~~
      |       size_t
./CPP_106.cpp:27:5: error: ‘new_size’ was not declared in this scope
   27 |     new_size = 1;
      |     ^~~~~~~~
./CPP_106.cpp:29:5: error: ‘new_size’ was not declared in this scope
   29 |     new_size += size;
      |     ^~~~~~~~
./CPP_106.cpp:31:7: error: ‘new_size’ was not declared in this scope
   31 |   if (new_size > 2305843009213693951) {
      |       ^~~~~~~~
./CPP_106.cpp:34:27: error: ‘new_size’ was not declared in this scope
   34 |   int *new_begin = malloc(new_size * sizeof(int));
      |                           ^~~~~~~~
./CPP_106.cpp:38:31: error: ‘position’ was not declared in this scope
   38 |   int *new_end = new_begin + (position - begin);
      |                               ^~~~~~~~
./CPP_106.cpp:39:15: error: ‘value’ was not declared in this scope
   39 |   *new_end = *value;
      |               ^~~~~
./CPP_106.cpp:40:7: error: ‘size’ was not declared in this scope; did you mean ‘size_t’?
   40 |   if (size > 0) {
      |       ^~~~
      |       size_t
./CPP_106.cpp:41:5: error: ‘memcpy’ was not declared in this scope
   41 |     memcpy(new_begin, begin, size * sizeof(int));
      |     ^~~~~~
./CPP_106.cpp:2:1: note: ‘memcpy’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    1 | #include <stdlib.h>
  +++ |+#include <cstring>
    2 | 
./CPP_106.cpp:45:3: error: invalid use of ‘this’ in non-member function
   45 |   this->data->impl->begin = new_begin;
      |   ^~~~
./CPP_106.cpp:46:3: error: invalid use of ‘this’ in non-member function
   46 |   this->data->impl->end = new_end + 1;
      |   ^~~~
./CPP_106.cpp:47:3: error: invalid use of ‘this’ in non-member function
   47 |   this->data->impl->capacity = new_capacity;
      |   ^~~~
./CPP_106.cpp: At global scope:
./CPP_106.cpp:50:31: error: expected ‘,’ or ‘...’ before ‘this’
   50 | void _Z1fi(struct std_vector *this, int n) {
      |                               ^~~~
./CPP_106.cpp: In function ‘void _Z1fi(std_vector*)’:
./CPP_106.cpp:52:19: error: ‘n’ was not declared in this scope
   52 |   for (i = 0; i < n; i++) {
      |                   ^
./CPP_106.cpp:53:97: error: invalid use of ‘this’ in non-member function
   53 |     _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(this, this->data->impl->end, &i);
      |                                                                                                 ^~~~
./CPP_106.cpp:53:103: error: invalid use of ‘this’ in non-member function
   53 |     _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(this, this->data->impl->end, &i);
      |                                                                                                       ^~~~
./CPP_106.cpp: At global scope:
./CPP_106.cpp:61:13: error: ‘vector’ was not declared in this scope
   61 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_106.cpp:61:20: error: expected primary-expression before ‘int’
   61 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_106.cpp:61:27: error: ‘vector’ was not declared in this scope
   61 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_106.cpp:61:34: error: expected primary-expression before ‘int’
   61 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_106.cpp:61:39: error: expression list treated as compound expression in initializer [-fpermissive]
   61 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_106.cpp:60:
./CPP_106.cpp: In function ‘int main()’:
./CPP_106.cpp:70:20: error: ‘f’ was not declared in this scope
   70 |     assert (issame(f(5) , {1, 2, 6, 24, 15}));
      |                    ^
./CPP_106.cpp:70:44: error: ‘issame’ cannot be used as a function
   70 |     assert (issame(f(5) , {1, 2, 6, 24, 15}));
      |                                            ^
./CPP_106.cpp:71:53: error: ‘issame’ cannot be used as a function
   71 |     assert (issame(f(7) , {1, 2, 6, 24, 15, 720, 28}));
      |                                                     ^
./CPP_106.cpp:72:30: error: ‘issame’ cannot be used as a function
   72 |     assert (issame(f(1) , {1}));
      |                              ^
./CPP_106.cpp:73:36: error: ‘issame’ cannot be used as a function
   73 |     assert (issame(f(3) , {1, 2, 6}));
      |                                    ^


CPP_83.cpp: Compilation Failed
Error: In file included from ./CPP_83.cpp:22:
./CPP_83.cpp: In function ‘int main()’:
./CPP_83.cpp:24:13: error: ‘starts_one_ends’ was not declared in this scope; did you mean ‘starts_one_endsi’?
   24 |     assert (starts_one_ends(1) == 1);
      |             ^~~~~~~~~~~~~~~


CPP_116.cpp: Compilation Failed
Error: In file included from /usr/include/features.h:461,
                 from /usr/include/x86_64-linux-gnu/c++/9/bits/os_defines.h:39,
                 from /usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:528,
                 from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_116.cpp:1:
/usr/include/assert.h: In function ‘void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(std_vector*, int*, int*)’:
/usr/include/assert.h:66:1: error: expected primary-expression before ‘extern’
   66 | __BEGIN_DECLS
      | ^~~~~~~~~~~~~
./CPP_116.cpp:25:11: error: a function-definition is not allowed here before ‘{’ token
   25 | int main(){
      |           ^
./CPP_116.cpp:34:1: error: expected ‘}’ at end of input
   34 | }
      | ^
./CPP_116.cpp:10:139: note: to match this ‘{’
   10 | void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(std_vector *this_, int *pos, int *value) {
      |                                                                                                                                           ^


CPP_71.cpp: Compilation Failed
Error: ./CPP_71.cpp: In function ‘float triangle_area(float, float, float)’:
./CPP_71.cpp:12:16: error: ‘pow’ was not declared in this scope
   12 |     double m = pow((double)l, 0.5);
      |                ^~~
In file included from ./CPP_71.cpp:19:
./CPP_71.cpp: In function ‘int main()’:
./CPP_71.cpp:21:13: error: ‘abs’ was not declared in this scope
   21 |     assert (abs(triangle_area(3, 4, 5)-6.00)<0.01);
      |             ^~~


CPP_99.cpp: Compilation Failed
Error: ./CPP_99.cpp: In function ‘int closest_integer(const char*)’:
./CPP_99.cpp:6:15: error: ‘round’ was not declared in this scope
    6 |   return (int)round(d);
      |               ^~~~~


CPP_82.cpp: Compilation Failed
Error: ./CPP_82.cpp: In function ‘int32_t prime_length(const char*)’:
./CPP_82.cpp:4:17: error: ‘strlen’ was not declared in this scope
    4 |   int32_t len = strlen(str);
      |                 ^~~~~~
./CPP_82.cpp:2:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    1 | #include <stdint.h>
  +++ |+#include <cstring>
    2 | 


CPP_39.cpp: Compilation Failed
Error: In file included from ./CPP_39.cpp:40:
./CPP_39.cpp: In function ‘int main()’:
./CPP_39.cpp:42:13: error: ‘prime_fib’ was not declared in this scope
   42 |     assert (prime_fib(1) == 2);
      |             ^~~~~~~~~


CPP_56.cpp: Compilation Failed
Error: ./CPP_56.cpp: In function ‘int correct_bracketing(const char*)’:
./CPP_56.cpp:4:3: error: ‘size_t’ was not declared in this scope
    4 |   size_t len = strlen(str);
      |   ^~~~~~
./CPP_56.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_56.cpp:5:7: error: ‘len’ was not declared in this scope
    5 |   if (len == 0) {
      |       ^~~
./CPP_56.cpp:21:14: error: expected ‘;’ before ‘i’
   21 |   for (size_t i = 1; i < len; i++) {
      |              ^~
      |              ;
./CPP_56.cpp:21:22: error: ‘i’ was not declared in this scope
   21 |   for (size_t i = 1; i < len; i++) {
      |                      ^
./CPP_56.cpp:21:26: error: ‘len’ was not declared in this scope
   21 |   for (size_t i = 1; i < len; i++) {
      |                          ^~~


CPP_11.cpp: Compilation Failed
Error: ./CPP_11.cpp:4:49: error: field ‘_Alloc_hider’ has incomplete type ‘std__cxx11__basic_string___Alloc_hider’
    4 |   struct std__cxx11__basic_string___Alloc_hider _Alloc_hider;
      |                                                 ^~~~~~~~~~~~
./CPP_11.cpp:4:10: note: forward declaration of ‘struct std__cxx11__basic_string___Alloc_hider’
    4 |   struct std__cxx11__basic_string___Alloc_hider _Alloc_hider;
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_11.cpp:6:14: error: field ‘_M_dataplus’ has incomplete type ‘anon’
    6 |   union anon _M_dataplus;
      |              ^~~~~~~~~~~
./CPP_11.cpp:6:9: note: forward declaration of ‘union anon’
    6 |   union anon _M_dataplus;
      |         ^~~~
./CPP_11.cpp: In function ‘void string_xor(std__cxx11__basic_string*, const std__cxx11__basic_string*, const std__cxx11__basic_string*)’:
./CPP_11.cpp:40:43: error: ‘realloc’ was not declared in this scope
   40 |           __s->_M_dataplus = (union anon*)realloc(__s->_M_dataplus, sizeof(union anon) + 16);
      |                                           ^~~~~~~
./CPP_11.cpp:2:1: note: ‘realloc’ is defined in header ‘<cstdlib>’; did you forget to ‘#include <cstdlib>’?
    1 | #include <string.h>
  +++ |+#include <cstdlib>
    2 | 
./CPP_11.cpp:53:43: error: ‘realloc’ was not declared in this scope
   53 |           __s->_M_dataplus = (union anon*)realloc(__s->_M_dataplus, sizeof(union anon) + 16);
      |                                           ^~~~~~~
./CPP_11.cpp:53:43: note: ‘realloc’ is defined in header ‘<cstdlib>’; did you forget to ‘#include <cstdlib>’?
In file included from ./CPP_11.cpp:64:
./CPP_11.cpp: In function ‘int main()’:
./CPP_11.cpp:66:24: error: cannot convert ‘const char*’ to ‘std__cxx11__basic_string*’
   66 |     assert (string_xor("111000", "101010") == "010010");
      |                        ^~~~~~~~
      |                        |
      |                        const char*
./CPP_11.cpp:18:50: note:   initializing argument 1 of ‘void string_xor(std__cxx11__basic_string*, const std__cxx11__basic_string*, const std__cxx11__basic_string*)’
   18 | void string_xor(struct std__cxx11__basic_string* __dest, const struct std__cxx11__basic_string* __s1, const struct std__cxx11__basic_string* __s2) {
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_11.cpp:64:
./CPP_11.cpp:67:25: error: cannot convert ‘const char*’ to ‘std__cxx11__basic_string*’
   67 |      assert (string_xor("1", "1") == "0");
      |                         ^~~
      |                         |
      |                         const char*
./CPP_11.cpp:18:50: note:   initializing argument 1 of ‘void string_xor(std__cxx11__basic_string*, const std__cxx11__basic_string*, const std__cxx11__basic_string*)’
   18 | void string_xor(struct std__cxx11__basic_string* __dest, const struct std__cxx11__basic_string* __s1, const struct std__cxx11__basic_string* __s2) {
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ./CPP_11.cpp:64:
./CPP_11.cpp:68:24: error: cannot convert ‘const char*’ to ‘std__cxx11__basic_string*’
   68 |     assert (string_xor("0101", "0000") == "0101");
      |                        ^~~~~~
      |                        |
      |                        const char*
./CPP_11.cpp:18:50: note:   initializing argument 1 of ‘void string_xor(std__cxx11__basic_string*, const std__cxx11__basic_string*, const std__cxx11__basic_string*)’
   18 | void string_xor(struct std__cxx11__basic_string* __dest, const struct std__cxx11__basic_string* __s1, const struct std__cxx11__basic_string* __s2) {
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~


CPP_146.cpp: Compilation Failed
Error: ./CPP_146.cpp: In function ‘int specialFilter(std_vector*)’:
./CPP_146.cpp:30:7: error: ‘snprintf’ was not declared in this scope
   30 |       snprintf(buf, 3, "%d", *begin);
      |       ^~~~~~~~
./CPP_146.cpp:3:1: note: ‘snprintf’ is defined in header ‘<cstdio>’; did you forget to ‘#include <cstdio>’?
    2 | #include <string.h>
  +++ |+#include <cstdio>
    3 | 
./CPP_146.cpp: At global scope:
./CPP_146.cpp:57:5: error: redefinition of ‘int main()’
   57 | int main(){
      |     ^~~~
./CPP_146.cpp:48:5: note: ‘int main()’ previously defined here
   48 | int main() {
      |     ^~~~
In file included from ./CPP_146.cpp:56:
./CPP_146.cpp: In function ‘int main()’:
./CPP_146.cpp:58:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   58 |     assert (specialFilter({5, -2, 1, -5}) == 0  );
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_146.cpp:23:32: note:   initializing argument 1 of ‘int specialFilter(std_vector*)’
   23 | int specialFilter(std_vector * v) {
      |                   ~~~~~~~~~~~~~^
In file included from ./CPP_146.cpp:56:
./CPP_146.cpp:59:45: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   59 |     assert (specialFilter({15, -73, 14, -15}) == 1);
      |                                             ^
      |                                             |
      |                                             <brace-enclosed initializer list>
./CPP_146.cpp:23:32: note:   initializing argument 1 of ‘int specialFilter(std_vector*)’
   23 | int specialFilter(std_vector * v) {
      |                   ~~~~~~~~~~~~~^
In file included from ./CPP_146.cpp:56:
./CPP_146.cpp:60:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   60 |     assert (specialFilter({33, -2, -3, 45, 21, 109}) == 2);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_146.cpp:23:32: note:   initializing argument 1 of ‘int specialFilter(std_vector*)’
   23 | int specialFilter(std_vector * v) {
      |                   ~~~~~~~~~~~~~^
In file included from ./CPP_146.cpp:56:
./CPP_146.cpp:61:55: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   61 |     assert (specialFilter({43, -12, 93, 125, 121, 109}) == 4);
      |                                                       ^
      |                                                       |
      |                                                       <brace-enclosed initializer list>
./CPP_146.cpp:23:32: note:   initializing argument 1 of ‘int specialFilter(std_vector*)’
   23 | int specialFilter(std_vector * v) {
      |                   ~~~~~~~~~~~~~^
In file included from ./CPP_146.cpp:56:
./CPP_146.cpp:62:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   62 |     assert (specialFilter({71, -2, -33, 75, 21, 19}) == 3);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_146.cpp:23:32: note:   initializing argument 1 of ‘int specialFilter(std_vector*)’
   23 | int specialFilter(std_vector * v) {
      |                   ~~~~~~~~~~~~~^
In file included from ./CPP_146.cpp:56:
./CPP_146.cpp:63:30: error: invalid conversion from ‘int’ to ‘std_vector*’ [-fpermissive]
   63 |     assert (specialFilter({1}) == 0              );
      |                              ^
      |                              |
      |                              int
./CPP_146.cpp:23:32: note:   initializing argument 1 of ‘int specialFilter(std_vector*)’
   23 | int specialFilter(std_vector * v) {
      |                   ~~~~~~~~~~~~~^


CPP_59.cpp: Compilation Failed
Error: ./CPP_59.cpp:3:36: error: expected ‘,’ or ‘...’ before ‘%’ token
    3 | int _Z20largest_prime_factori(int  %0) {
      |                                    ^
./CPP_59.cpp: In function ‘int _Z20largest_prime_factori(int)’:
./CPP_59.cpp:4:7: error: expected primary-expression before ‘%’ token
    4 |   if (%0 < 4) {
      |       ^
./CPP_59.cpp:5:12: error: expected primary-expression before ‘%’ token
    5 |     return %0;
      |            ^
./CPP_59.cpp:7:7: error: expected unqualified-id before ‘%’ token
    7 |   int %4 = 2;
      |       ^
./CPP_59.cpp:8:7: error: expected unqualified-id before ‘%’ token
    8 |   int %5 = %0;
      |       ^
./CPP_59.cpp:10:9: error: expected primary-expression before ‘%’ token
   10 |     if (%5 % %4 == 0 && %5 > %4) {
      |         ^
./CPP_59.cpp:10:14: error: expected primary-expression before ‘%’ token
   10 |     if (%5 % %4 == 0 && %5 > %4) {
      |              ^
./CPP_59.cpp:10:25: error: expected primary-expression before ‘%’ token
   10 |     if (%5 % %4 == 0 && %5 > %4) {
      |                         ^
./CPP_59.cpp:10:30: error: expected primary-expression before ‘%’ token
   10 |     if (%5 % %4 == 0 && %5 > %4) {
      |                              ^
./CPP_59.cpp:11:11: error: expected unqualified-id before ‘%’ token
   11 |       int %13 = %5;
      |           ^
./CPP_59.cpp:13:13: error: expected unqualified-id before ‘%’ token
   13 |         int %14 = %13 / %4;
      |             ^
./CPP_59.cpp:14:13: error: expected primary-expression before ‘%’ token
   14 |         if (%14 % %4 == 0 && %14 > %4) {
      |             ^
./CPP_59.cpp:14:19: error: expected primary-expression before ‘%’ token
   14 |         if (%14 % %4 == 0 && %14 > %4) {
      |                   ^
./CPP_59.cpp:14:30: error: expected primary-expression before ‘%’ token
   14 |         if (%14 % %4 == 0 && %14 > %4) {
      |                              ^
./CPP_59.cpp:14:36: error: expected primary-expression before ‘%’ token
   14 |         if (%14 % %4 == 0 && %14 > %4) {
      |                                    ^
./CPP_59.cpp:15:11: error: expected primary-expression before ‘%’ token
   15 |           %13 = %14;
      |           ^
./CPP_59.cpp:15:17: error: expected primary-expression before ‘%’ token
   15 |           %13 = %14;
      |                 ^
./CPP_59.cpp:20:7: error: expected primary-expression before ‘%’ token
   20 |       %5 = %14;
      |       ^
./CPP_59.cpp:20:12: error: expected primary-expression before ‘%’ token
   20 |       %5 = %14;
      |            ^
./CPP_59.cpp:22:5: error: expected primary-expression before ‘%’ token
   22 |     %4 += 1;
      |     ^
./CPP_59.cpp:23:9: error: expected primary-expression before ‘%’ token
   23 |     if (%4 * %4 > %5) {
      |         ^
./CPP_59.cpp:23:14: error: expected primary-expression before ‘%’ token
   23 |     if (%4 * %4 > %5) {
      |              ^
./CPP_59.cpp:23:19: error: expected primary-expression before ‘%’ token
   23 |     if (%4 * %4 > %5) {
      |                   ^
./CPP_59.cpp:27:10: error: expected primary-expression before ‘%’ token
   27 |   return %5;
      |          ^
In file included from ./CPP_59.cpp:31:
./CPP_59.cpp: In function ‘int main()’:
./CPP_59.cpp:33:13: error: ‘largest_prime_factor’ was not declared in this scope
   33 |     assert (largest_prime_factor(15) == 5);
      |             ^~~~~~~~~~~~~~~~~~~~


CPP_32.cpp: Compilation Failed
Error: ./CPP_32.cpp:49:2: error: stray ‘`’ in program
   49 | }```
      |  ^
./CPP_32.cpp:49:3: error: stray ‘`’ in program
   49 | }```
      |   ^
./CPP_32.cpp:49:4: error: stray ‘`’ in program
   49 | }```
      |    ^
./CPP_32.cpp:52:5: error: redefinition of ‘int main()’
   52 | int main(){
      |     ^~~~
./CPP_32.cpp:40:5: note: ‘int main()’ previously defined here
   40 | int main() {
      |     ^~~~
./CPP_32.cpp: In function ‘int main()’:
./CPP_32.cpp:59:9: error: ‘vector’ was not declared in this scope
   59 |         vector<double> coeffs = {};
      |         ^~~~~~
./CPP_32.cpp:59:16: error: expected primary-expression before ‘double’
   59 |         vector<double> coeffs = {};
      |                ^~~~~~
./CPP_32.cpp:64:13: error: ‘coeffs’ was not declared in this scope; did you mean ‘coeff’?
   64 |             coeffs.push_back(coeff);
      |             ^~~~~~
      |             coeff
./CPP_32.cpp:67:30: error: ‘coeffs’ was not declared in this scope; did you mean ‘ncoeff’?
   67 |         solution = find_zero(coeffs);
      |                              ^~~~~~
      |                              ncoeff
./CPP_32.cpp:67:20: error: ‘find_zero’ was not declared in this scope
   67 |         solution = find_zero(coeffs);
      |                    ^~~~~~~~~
In file included from ./CPP_32.cpp:51:
./CPP_32.cpp:68:21: error: ‘poly’ was not declared in this scope
   68 |         assert (abs(poly(coeffs, solution))< 1e-3);
      |                     ^~~~


CPP_77.cpp: Compilation Failed
Error: ./CPP_77.cpp: In function ‘int _Z7iscuberi(int)’:
./CPP_77.cpp:4:12: error: ‘abs’ was not declared in this scope
    4 |   int x1 = abs(x);
      |            ^~~
In file included from ./CPP_77.cpp:13:
./CPP_77.cpp: In function ‘int main()’:
./CPP_77.cpp:15:13: error: ‘iscuber’ was not declared in this scope
   15 |     assert (iscuber(1) == true);
      |             ^~~~~~~


CPP_98.cpp: Execution Failed
Error: CPP_98: ./CPP_98.cpp:20: int main(): Assertion `count_upper("dBBE") == 0' failed.
Aborted (core dumped)


CPP_0.cpp: Compilation Failed
Error: ./CPP_0.cpp: In function ‘int main()’:
./CPP_0.cpp:23:5: error: ‘vector’ was not declared in this scope
   23 |     vector<float> a={1.0, 2.0, 3.9, 4.0, 5.0, 2.2};
      |     ^~~~~~
./CPP_0.cpp:23:12: error: expected primary-expression before ‘float’
   23 |     vector<float> a={1.0, 2.0, 3.9, 4.0, 5.0, 2.2};
      |            ^~~~~
In file included from ./CPP_0.cpp:21:
./CPP_0.cpp:24:32: error: ‘a’ was not declared in this scope
   24 |     assert (has_close_elements(a, 0.3)==true);
      |                                ^
./CPP_0.cpp:27:63: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   27 |     assert (has_close_elements({1.0, 2.0, 5.9, 4.0, 5.0}, 0.95) == true);
      |                                                               ^
      |                                                               |
      |                                                               <brace-enclosed initializer list>
./CPP_0.cpp:6:31: note:   initializing argument 1 of ‘int has_close_elements(float*, long long unsigned int, float)’
    6 | int has_close_elements(float *v, unsigned long long n, float epsilon) {
      |                        ~~~~~~~^
In file included from ./CPP_0.cpp:21:
./CPP_0.cpp:28:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   28 |     assert (has_close_elements({1.0, 2.0, 5.9, 4.0, 5.0}, 0.8) ==false);
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_0.cpp:6:31: note:   initializing argument 1 of ‘int has_close_elements(float*, long long unsigned int, float)’
    6 | int has_close_elements(float *v, unsigned long long n, float epsilon) {
      |                        ~~~~~~~^
In file included from ./CPP_0.cpp:21:
./CPP_0.cpp:29:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   29 |     assert (has_close_elements({1.0, 2.0, 3.0, 4.0, 5.0}, 2.0) == true);
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_0.cpp:6:31: note:   initializing argument 1 of ‘int has_close_elements(float*, long long unsigned int, float)’
    6 | int has_close_elements(float *v, unsigned long long n, float epsilon) {
      |                        ~~~~~~~^
In file included from ./CPP_0.cpp:21:
./CPP_0.cpp:30:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   30 |     assert (has_close_elements({1.1, 2.2, 3.1, 4.1, 5.1}, 1.0) == true);
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_0.cpp:6:31: note:   initializing argument 1 of ‘int has_close_elements(float*, long long unsigned int, float)’
    6 | int has_close_elements(float *v, unsigned long long n, float epsilon) {
      |                        ~~~~~~~^
In file included from ./CPP_0.cpp:21:
./CPP_0.cpp:31:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   31 |     assert (has_close_elements({1.1, 2.2, 3.1, 4.1, 5.1}, 0.5) == false);
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_0.cpp:6:31: note:   initializing argument 1 of ‘int has_close_elements(float*, long long unsigned int, float)’
    6 | int has_close_elements(float *v, unsigned long long n, float epsilon) {
      |                        ~~~~~~~^


CPP_141.cpp: Compilation Failed
Error: ./CPP_141.cpp: In function ‘void _Z15file_name_checkNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(basic_string*, basic_string*)’:
./CPP_141.cpp:23:45: warning: overflow in conversion from ‘int’ to ‘char’ changes value from ‘28494’ to ‘'N'’ [-Woverflow]
   23 |     ((char*)(__ret->_M_dataplus._M_p))[0] = 28494;
      |                                             ^~~~~
./CPP_141.cpp:24:45: warning: overflow in conversion from ‘int’ to ‘char’ changes value from ‘28494’ to ‘'N'’ [-Woverflow]
   24 |     ((char*)(__ret->_M_dataplus._M_p))[1] = 28494;
      |                                             ^~~~~
./CPP_141.cpp:32:45: warning: overflow in conversion from ‘int’ to ‘char’ changes value from ‘28494’ to ‘'N'’ [-Woverflow]
   32 |     ((char*)(__ret->_M_dataplus._M_p))[0] = 28494;
      |                                             ^~~~~
./CPP_141.cpp:33:45: warning: overflow in conversion from ‘int’ to ‘char’ changes value from ‘28494’ to ‘'N'’ [-Woverflow]
   33 |     ((char*)(__ret->_M_dataplus._M_p))[1] = 28494;
      |                                             ^~~~~
./CPP_141.cpp:47:45: warning: overflow in conversion from ‘int’ to ‘char’ changes value from ‘28494’ to ‘'N'’ [-Woverflow]
   47 |     ((char*)(__ret->_M_dataplus._M_p))[0] = 28494;
      |                                             ^~~~~
./CPP_141.cpp:48:45: warning: overflow in conversion from ‘int’ to ‘char’ changes value from ‘28494’ to ‘'N'’ [-Woverflow]
   48 |     ((char*)(__ret->_M_dataplus._M_p))[1] = 28494;
      |                                             ^~~~~
./CPP_141.cpp:53:45: warning: overflow in conversion from ‘int’ to ‘char’ changes value from ‘28494’ to ‘'N'’ [-Woverflow]
   53 |     ((char*)(__ret->_M_dataplus._M_p))[0] = 28494;
      |                                             ^~~~~
./CPP_141.cpp:54:45: warning: overflow in conversion from ‘int’ to ‘char’ changes value from ‘28494’ to ‘'N'’ [-Woverflow]
   54 |     ((char*)(__ret->_M_dataplus._M_p))[1] = 28494;
      |                                             ^~~~~
./CPP_141.cpp:59:45: warning: overflow in conversion from ‘int’ to ‘char’ changes value from ‘28494’ to ‘'N'’ [-Woverflow]
   59 |     ((char*)(__ret->_M_dataplus._M_p))[0] = 28494;
      |                                             ^~~~~
./CPP_141.cpp:60:45: warning: overflow in conversion from ‘int’ to ‘char’ changes value from ‘28494’ to ‘'N'’ [-Woverflow]
   60 |     ((char*)(__ret->_M_dataplus._M_p))[1] = 28494;
      |                                             ^~~~~
./CPP_141.cpp:65:45: warning: overflow in conversion from ‘int’ to ‘char’ changes value from ‘28494’ to ‘'N'’ [-Woverflow]
   65 |     ((char*)(__ret->_M_dataplus._M_p))[0] = 28494;
      |                                             ^~~~~
./CPP_141.cpp:66:45: warning: overflow in conversion from ‘int’ to ‘char’ changes value from ‘28494’ to ‘'N'’ [-Woverflow]
   66 |     ((char*)(__ret->_M_dataplus._M_p))[1] = 28494;
      |                                             ^~~~~
./CPP_141.cpp:67:45: warning: overflow in conversion from ‘int’ to ‘char’ changes value from ‘28494’ to ‘'N'’ [-Woverflow]
   67 |     ((char*)(__ret->_M_dataplus._M_p))[2] = 28494;
      |                                             ^~~~~
In file included from ./CPP_141.cpp:76:
./CPP_141.cpp: In function ‘int main()’:
./CPP_141.cpp:78:13: error: ‘file_name_check’ was not declared in this scope
   78 |     assert (file_name_check("example.txt") == "Yes");
      |             ^~~~~~~~~~~~~~~


CPP_127.cpp: Compilation Failed
Error: In file included from ./CPP_127.cpp:32:
./CPP_127.cpp: In function ‘int main()’:
./CPP_127.cpp:34:13: error: ‘intersection’ was not declared in this scope
   34 |     assert (intersection({1, 2}, {2, 3}) == "NO");
      |             ^~~~~~~~~~~~


CPP_31.cpp: Compilation Failed
Error: In file included from ./CPP_31.cpp:19:
./CPP_31.cpp: In function ‘int main()’:
./CPP_31.cpp:21:13: error: ‘is_prime’ was not declared in this scope
   21 |     assert (is_prime(6) == false);
      |             ^~~~~~~~


CPP_122.cpp: Compilation Failed
Error: In file included from ./CPP_122.cpp:15:
./CPP_122.cpp: In function ‘int main()’:
./CPP_122.cpp:17:56: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   17 |     assert (add_elements({1,-2,-3,41,57,76,87,88,99}, 3) == -4);
      |                                                        ^
      |                                                        |
      |                                                        <brace-enclosed initializer list>
./CPP_122.cpp:1:23: note:   initializing argument 1 of ‘int add_elements(int*, int)’
    1 | int add_elements(int* x, int size) {
      |                  ~~~~~^
In file included from ./CPP_122.cpp:15:
./CPP_122.cpp:18:49: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   18 |     assert (add_elements({111,121,3,4000,5,6}, 2) == 0);
      |                                                 ^
      |                                                 |
      |                                                 <brace-enclosed initializer list>
./CPP_122.cpp:1:23: note:   initializing argument 1 of ‘int add_elements(int*, int)’
    1 | int add_elements(int* x, int size) {
      |                  ~~~~~^
In file included from ./CPP_122.cpp:15:
./CPP_122.cpp:19:51: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   19 |     assert (add_elements({11,21,3,90,5,6,7,8,9}, 4) == 125);
      |                                                   ^
      |                                                   |
      |                                                   <brace-enclosed initializer list>
./CPP_122.cpp:1:23: note:   initializing argument 1 of ‘int add_elements(int*, int)’
    1 | int add_elements(int* x, int size) {
      |                  ~~~~~^
In file included from ./CPP_122.cpp:15:
./CPP_122.cpp:20:54: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   20 |     assert (add_elements({111,21,3,4000,5,6,7,8,9}, 4) == 24);
      |                                                      ^
      |                                                      |
      |                                                      <brace-enclosed initializer list>
./CPP_122.cpp:1:23: note:   initializing argument 1 of ‘int add_elements(int*, int)’
    1 | int add_elements(int* x, int size) {
      |                  ~~~~~^
In file included from ./CPP_122.cpp:15:
./CPP_122.cpp:21:32: error: invalid conversion from ‘int’ to ‘int*’ [-fpermissive]
   21 |     assert (add_elements({1}, 1) == 1);
      |                                ^
      |                                |
      |                                int
./CPP_122.cpp:1:23: note:   initializing argument 1 of ‘int add_elements(int*, int)’
    1 | int add_elements(int* x, int size) {
      |                  ~~~~~^


CPP_49.cpp: Compilation Failed
Error: In file included from ./CPP_49.cpp:15:
./CPP_49.cpp: In function ‘int main()’:
./CPP_49.cpp:17:13: error: ‘modp’ was not declared in this scope; did you mean ‘mod’?
   17 |     assert (modp(3, 5) == 3);
      |             ^~~~


CPP_55.cpp: Compilation Failed
Error: ./CPP_55.cpp:13:1: error: stray ‘`’ in program
   13 | ```
      | ^
./CPP_55.cpp:13:2: error: stray ‘`’ in program
   13 | ```
      |  ^
./CPP_55.cpp:13:3: error: stray ‘`’ in program
   13 | ```
      |   ^
./CPP_55.cpp:15:1: error: expected unqualified-id before ‘<’ token
   15 | <|im_end|>
      | ^
In file included from ./CPP_55.cpp:17:
./CPP_55.cpp: In function ‘int main()’:
./CPP_55.cpp:19:13: error: ‘fib’ was not declared in this scope
   19 |     assert (fib(10) == 55);
      |             ^~~
./CPP_55.cpp:19:5: error: ‘__assert_fail’ was not declared in this scope
   19 |     assert (fib(10) == 55);
      |     ^~~~~~


CPP_115.cpp: Compilation Failed
Error: In file included from ./CPP_115.cpp:20:
./CPP_115.cpp: In function ‘int main()’:
./CPP_115.cpp:22:58: error: cannot bind non-const lvalue reference of type ‘std::vector<std::vector<int> >&’ to an rvalue of type ‘std::vector<std::vector<int> >’
   22 |     assert (max_fill({{0,0,1,0}, {0,1,0,0}, {1,1,1,1}}, 1) == 6);
      |                                                          ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_115.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<int> >]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_115.cpp:3:45: note:   initializing argument 1 of ‘int max_fill(std::vector<std::vector<int> >&, int)’
    3 | int max_fill(std::vector<std::vector<int>>& a, int b) {
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_115.cpp:20:
./CPP_115.cpp:23:69: error: cannot bind non-const lvalue reference of type ‘std::vector<std::vector<int> >&’ to an rvalue of type ‘std::vector<std::vector<int> >’
   23 |     assert (max_fill({{0,0,1,1}, {0,0,0,0}, {1,1,1,1}, {0,1,1,1}}, 2) == 5);
      |                                                                     ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_115.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<int> >]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_115.cpp:3:45: note:   initializing argument 1 of ‘int max_fill(std::vector<std::vector<int> >&, int)’
    3 | int max_fill(std::vector<std::vector<int>>& a, int b) {
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_115.cpp:20:
./CPP_115.cpp:24:43: error: cannot bind non-const lvalue reference of type ‘std::vector<std::vector<int> >&’ to an rvalue of type ‘std::vector<std::vector<int> >’
   24 |     assert (max_fill({{0,0,0}, {0,0,0}}, 5) == 0);
      |                                           ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_115.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<int> >]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_115.cpp:3:45: note:   initializing argument 1 of ‘int max_fill(std::vector<std::vector<int> >&, int)’
    3 | int max_fill(std::vector<std::vector<int>>& a, int b) {
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_115.cpp:20:
./CPP_115.cpp:25:47: error: cannot bind non-const lvalue reference of type ‘std::vector<std::vector<int> >&’ to an rvalue of type ‘std::vector<std::vector<int> >’
   25 |     assert (max_fill({{1,1,1,1}, {1,1,1,1}}, 2) == 4);
      |                                               ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_115.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<int> >]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_115.cpp:3:45: note:   initializing argument 1 of ‘int max_fill(std::vector<std::vector<int> >&, int)’
    3 | int max_fill(std::vector<std::vector<int>>& a, int b) {
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_115.cpp:20:
./CPP_115.cpp:26:47: error: cannot bind non-const lvalue reference of type ‘std::vector<std::vector<int> >&’ to an rvalue of type ‘std::vector<std::vector<int> >’
   26 |     assert (max_fill({{1,1,1,1}, {1,1,1,1}}, 9) == 2);
      |                                               ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_115.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<int> >]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_115.cpp:3:45: note:   initializing argument 1 of ‘int max_fill(std::vector<std::vector<int> >&, int)’
    3 | int max_fill(std::vector<std::vector<int>>& a, int b) {
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^


CPP_48.cpp: Compilation Failed
Error: ./CPP_48.cpp:5:1: error: ‘_Bool’ does not name a type
    5 | _Bool is_palindrome(const char* str) {
      | ^~~~~
In file included from ./CPP_48.cpp:23:
./CPP_48.cpp: In function ‘int main()’:
./CPP_48.cpp:25:13: error: ‘is_palindrome’ was not declared in this scope
   25 |     assert (is_palindrome("") == true);
      |             ^~~~~~~~~~~~~


CPP_155.cpp: Compilation Failed
Error: ./CPP_155.cpp: In function ‘std__string* even_odd_counti(std_vector*, int)’:
./CPP_155.cpp:28:40: error: cannot convert ‘char*’ to ‘__va_list_tag*’
   28 |   vsnprintf(__s._M_dataplus, 32, "%s", __buf);
      |                                        ^~~~~
      |                                        |
      |                                        char*
In file included from ./CPP_155.cpp:1:
/usr/include/stdio.h:359:57: note:   initializing argument 4 of ‘int vsnprintf(char*, size_t, const char*, __va_list_tag*)’
  359 |         const char *__restrict __format, __gnuc_va_list __arg)
      |                                          ~~~~~~~~~~~~~~~^~~~~
./CPP_155.cpp:45:26: error: invalid conversion from ‘void*’ to ‘void**’ [-fpermissive]
   45 |   __ret->_M_impl = malloc(sizeof(int)*2);
      |                    ~~~~~~^~~~~~~~~~~~~~~
      |                          |
      |                          void*
./CPP_155.cpp:46:23: error: invalid conversion from ‘int’ to ‘void*’ [-fpermissive]
   46 |   __ret->_M_impl[0] = __count_even;
      |                       ^~~~~~~~~~~~
      |                       |
      |                       int
./CPP_155.cpp:47:23: error: invalid conversion from ‘int’ to ‘void*’ [-fpermissive]
   47 |   __ret->_M_impl[1] = __count_odd;
      |                       ^~~~~~~~~~~
      |                       |
      |                       int
./CPP_155.cpp:49:10: warning: address of local variable ‘__s’ returned [-Wreturn-local-addr]
   49 |   return &__s;
      |          ^~~~
./CPP_155.cpp:21:15: note: declared here
   21 |   std__string __s;
      |               ^~~
In file included from ./CPP_155.cpp:65:
/usr/include/assert.h: At global scope:
/usr/include/assert.h:69:13: error: conflicting declaration of ‘void __assert_fail(const char*, const char*, unsigned int, const char*)’ with ‘C’ linkage
   69 | extern void __assert_fail (const char *__assertion, const char *__file,
      |             ^~~~~~~~~~~~~
./CPP_155.cpp:15:13: note: previous declaration with ‘C++’ linkage
   15 | extern void __assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function) __attribute__((noreturn));
      |             ^~~~~~~~~~~~~
In file included from ./CPP_155.cpp:65:
/usr/include/assert.h:69:13: error: declaration of ‘void __assert_fail(const char*, const char*, unsigned int, const char*) throw ()’ has a different exception specifier
   69 | extern void __assert_fail (const char *__assertion, const char *__file,
      |             ^~~~~~~~~~~~~
./CPP_155.cpp:15:13: note: from previous declaration ‘void __assert_fail(const char*, const char*, unsigned int, const char*)’
   15 | extern void __assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function) __attribute__((noreturn));
      |             ^~~~~~~~~~~~~
./CPP_155.cpp:66:13: error: ‘vector’ was not declared in this scope
   66 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_155.cpp:66:20: error: expected primary-expression before ‘int’
   66 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_155.cpp:66:27: error: ‘vector’ was not declared in this scope
   66 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_155.cpp:66:34: error: expected primary-expression before ‘int’
   66 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_155.cpp:66:39: error: expression list treated as compound expression in initializer [-fpermissive]
   66 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
./CPP_155.cpp:74:5: error: redefinition of ‘int main()’
   74 | int main(){
      |     ^~~~
./CPP_155.cpp:53:5: note: ‘int main()’ previously defined here
   53 | int main() {
      |     ^~~~
In file included from ./CPP_155.cpp:65:
./CPP_155.cpp: In function ‘int main()’:
./CPP_155.cpp:75:20: error: ‘even_odd_count’ was not declared in this scope; did you mean ‘even_odd_counti’?
   75 |     assert (issame(even_odd_count(7) , {0, 1}));
      |                    ^~~~~~~~~~~~~~
./CPP_155.cpp:75:46: error: ‘issame’ cannot be used as a function
   75 |     assert (issame(even_odd_count(7) , {0, 1}));
      |                                              ^
./CPP_155.cpp:76:48: error: ‘issame’ cannot be used as a function
   76 |     assert (issame(even_odd_count(-78) , {1, 1}));
      |                                                ^
./CPP_155.cpp:77:49: error: ‘issame’ cannot be used as a function
   77 |     assert (issame(even_odd_count(3452) , {2, 2}));
      |                                                 ^
./CPP_155.cpp:78:51: error: ‘issame’ cannot be used as a function
   78 |     assert (issame(even_odd_count(346211) , {3, 3}));
      |                                                   ^
./CPP_155.cpp:79:52: error: ‘issame’ cannot be used as a function
   79 |     assert (issame(even_odd_count(-345821) , {3, 3}));
      |                                                    ^
./CPP_155.cpp:80:47: error: ‘issame’ cannot be used as a function
   80 |     assert (issame(even_odd_count(-2) , {1, 0}));
      |                                               ^
./CPP_155.cpp:81:51: error: ‘issame’ cannot be used as a function
   81 |     assert (issame(even_odd_count(-45347) , {2, 3}));
      |                                                   ^
./CPP_155.cpp:82:46: error: ‘issame’ cannot be used as a function
   82 |     assert (issame(even_odd_count(0) , {1, 0}));
      |                                              ^


CPP_96.cpp: Compilation Failed
Error: ./CPP_96.cpp:60:13: error: ‘vector’ was not declared in this scope
   60 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_96.cpp:60:20: error: expected primary-expression before ‘int’
   60 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_96.cpp:60:27: error: ‘vector’ was not declared in this scope
   60 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_96.cpp:60:34: error: expected primary-expression before ‘int’
   60 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_96.cpp:60:39: error: expression list treated as compound expression in initializer [-fpermissive]
   60 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_96.cpp:59:
./CPP_96.cpp: In function ‘int main()’:
./CPP_96.cpp:69:20: error: ‘count_up_to’ was not declared in this scope
   69 |     assert (issame(count_up_to(5) , {2,3}));
      |                    ^~~~~~~~~~~
./CPP_96.cpp:69:42: error: ‘issame’ cannot be used as a function
   69 |     assert (issame(count_up_to(5) , {2,3}));
      |                                          ^
./CPP_96.cpp:70:44: error: ‘issame’ cannot be used as a function
   70 |     assert (issame(count_up_to(6) , {2,3,5}));
      |                                            ^
./CPP_96.cpp:71:44: error: ‘issame’ cannot be used as a function
   71 |     assert (issame(count_up_to(7) , {2,3,5}));
      |                                            ^
./CPP_96.cpp:72:47: error: ‘issame’ cannot be used as a function
   72 |     assert (issame(count_up_to(10) , {2,3,5,7}));
      |                                               ^
./CPP_96.cpp:73:39: error: ‘issame’ cannot be used as a function
   73 |     assert (issame(count_up_to(0) , {}));
      |                                       ^
./CPP_96.cpp:74:59: error: ‘issame’ cannot be used as a function
   74 |     assert (issame(count_up_to(22) , {2,3,5,7,11,13,17,19}));
      |                                                           ^
./CPP_96.cpp:75:39: error: ‘issame’ cannot be used as a function
   75 |     assert (issame(count_up_to(1) , {}));
      |                                       ^
./CPP_96.cpp:76:56: error: ‘issame’ cannot be used as a function
   76 |     assert (issame(count_up_to(18) , {2,3,5,7,11,13,17}));
      |                                                        ^
./CPP_96.cpp:77:90: error: ‘issame’ cannot be used as a function
   77 |     assert (issame(count_up_to(47) , {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43}));
      |                                                                                          ^
./CPP_96.cpp:78:135: error: ‘issame’ cannot be used as a function
   78 |     assert (issame(count_up_to(101) , {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}));
      |                                                                                                                                       ^


CPP_3.cpp: Compilation Failed
Error: ./CPP_3.cpp:5:35: error: ‘size_t’ has not been declared
    5 | int below_zero(const int* vector, size_t size) {
      |                                   ^~~~~~
In file included from ./CPP_3.cpp:28:
./CPP_3.cpp: In function ‘int main()’:
./CPP_3.cpp:30:26: error: too few arguments to function ‘int below_zero(const int*, int)’
   30 |     assert (below_zero({}) == false);
      |                          ^
./CPP_3.cpp:5:5: note: declared here
    5 | int below_zero(const int* vector, size_t size) {
      |     ^~~~~~~~~~
In file included from ./CPP_3.cpp:28:
./CPP_3.cpp:31:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   31 |     assert (below_zero({1, 2, -3, 1, 2, -3}) == false);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_3.cpp:5:27: note:   initializing argument 1 of ‘int below_zero(const int*, int)’
    5 | int below_zero(const int* vector, size_t size) {
      |                ~~~~~~~~~~~^~~~~~
In file included from ./CPP_3.cpp:28:
./CPP_3.cpp:32:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   32 |     assert (below_zero({1, 2, -4, 5, 6}) == true);
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_3.cpp:5:27: note:   initializing argument 1 of ‘int below_zero(const int*, int)’
    5 | int below_zero(const int* vector, size_t size) {
      |                ~~~~~~~~~~~^~~~~~
In file included from ./CPP_3.cpp:28:
./CPP_3.cpp:33:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   33 |     assert (below_zero({1, -1, 2, -2, 5, -5, 4, -4}) == false);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_3.cpp:5:27: note:   initializing argument 1 of ‘int below_zero(const int*, int)’
    5 | int below_zero(const int* vector, size_t size) {
      |                ~~~~~~~~~~~^~~~~~
In file included from ./CPP_3.cpp:28:
./CPP_3.cpp:34:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   34 |     assert (below_zero({1, -1, 2, -2, 5, -5, 4, -5}) == true);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_3.cpp:5:27: note:   initializing argument 1 of ‘int below_zero(const int*, int)’
    5 | int below_zero(const int* vector, size_t size) {
      |                ~~~~~~~~~~~^~~~~~
In file included from ./CPP_3.cpp:28:
./CPP_3.cpp:35:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘const int*’
   35 |     assert (below_zero({1, -2, 2, -2, 5, -5, 4, -4}) == true);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_3.cpp:5:27: note:   initializing argument 1 of ‘int below_zero(const int*, int)’
    5 | int below_zero(const int* vector, size_t size) {
      |                ~~~~~~~~~~~^~~~~~


CPP_97.cpp: Compilation Failed
Error: ./CPP_97.cpp: In function ‘int _Z8multiplyii(int, int)’:
./CPP_97.cpp:2:12: error: ‘abs’ was not declared in this scope
    2 |   int a1 = abs(a);
      |            ^~~
In file included from ./CPP_97.cpp:11:
./CPP_97.cpp: In function ‘int main()’:
./CPP_97.cpp:13:13: error: ‘multiply’ was not declared in this scope
   13 |     assert (multiply(148, 412) == 16                   );
      |             ^~~~~~~~


CPP_4.cpp: Compilation Failed
Error: ./CPP_4.cpp:1:44: error: ‘size_t’ has not been declared
    1 | float mean_absolute_deviation(float* data, size_t size) {
      |                                            ^~~~~~
./CPP_4.cpp: In function ‘float mean_absolute_deviation(float*, int)’:
./CPP_4.cpp:3:8: error: ‘size_t’ was not declared in this scope
    3 |   for (size_t i = 0; i < size; ++i) {
      |        ^~~~~~
./CPP_4.cpp:1:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
  +++ |+#include <cstddef>
    1 | float mean_absolute_deviation(float* data, size_t size) {
./CPP_4.cpp:3:22: error: ‘i’ was not declared in this scope
    3 |   for (size_t i = 0; i < size; ++i) {
      |                      ^
./CPP_4.cpp:9:8: error: ‘size_t’ was not declared in this scope
    9 |   for (size_t i = 0; i < size; ++i) {
      |        ^~~~~~
./CPP_4.cpp:9:8: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
./CPP_4.cpp:9:22: error: ‘i’ was not declared in this scope
    9 |   for (size_t i = 0; i < size; ++i) {
      |                      ^
./CPP_4.cpp:10:21: error: ‘fabsf’ was not declared in this scope
   10 |     absolute_sum += fabsf(data[i] - mean);
      |                     ^~~~~
In file included from ./CPP_4.cpp:16:
./CPP_4.cpp: In function ‘int main()’:
./CPP_4.cpp:18:56: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   18 |     assert (abs(mean_absolute_deviation({1.0, 2.0, 3.0}) - 2.0/3.0) < 1e-4);
      |                                                        ^
      |                                                        |
      |                                                        <brace-enclosed initializer list>
./CPP_4.cpp:1:38: note:   initializing argument 1 of ‘float mean_absolute_deviation(float*, int)’
    1 | float mean_absolute_deviation(float* data, size_t size) {
      |                               ~~~~~~~^~~~
In file included from ./CPP_4.cpp:16:
./CPP_4.cpp:18:13: error: ‘abs’ was not declared in this scope
   18 |     assert (abs(mean_absolute_deviation({1.0, 2.0, 3.0}) - 2.0/3.0) < 1e-4);
      |             ^~~
./CPP_4.cpp:19:61: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   19 |     assert (abs(mean_absolute_deviation({1.0, 2.0, 3.0, 4.0}) - 1.0) < 1e-4);
      |                                                             ^
      |                                                             |
      |                                                             <brace-enclosed initializer list>
./CPP_4.cpp:1:38: note:   initializing argument 1 of ‘float mean_absolute_deviation(float*, int)’
    1 | float mean_absolute_deviation(float* data, size_t size) {
      |                               ~~~~~~~^~~~
In file included from ./CPP_4.cpp:16:
./CPP_4.cpp:20:66: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   20 |     assert (abs(mean_absolute_deviation({1.0, 2.0, 3.0, 4.0, 5.0}) - 6.0/5.0) < 1e-4);
      |                                                                  ^
      |                                                                  |
      |                                                                  <brace-enclosed initializer list>
./CPP_4.cpp:1:38: note:   initializing argument 1 of ‘float mean_absolute_deviation(float*, int)’
    1 | float mean_absolute_deviation(float* data, size_t size) {
      |                               ~~~~~~~^~~~


CPP_76.cpp: Compilation Failed
Error: ./CPP_76.cpp:13:1: error: stray ‘`’ in program
   13 | ```
      | ^
./CPP_76.cpp:13:2: error: stray ‘`’ in program
   13 | ```
      |  ^
./CPP_76.cpp:13:3: error: stray ‘`’ in program
   13 | ```
      |   ^
./CPP_76.cpp:14:1: error: expected unqualified-id before ‘<’ token
   14 | <|im_end|>
      | ^
In file included from ./CPP_76.cpp:16:
./CPP_76.cpp: In function ‘int main()’:
./CPP_76.cpp:18:13: error: ‘is_simple_power’ was not declared in this scope
   18 |     assert (is_simple_power(1, 4)== true);
      |             ^~~~~~~~~~~~~~~
./CPP_76.cpp:18:5: error: ‘__assert_fail’ was not declared in this scope
   18 |     assert (is_simple_power(1, 4)== true);
      |     ^~~~~~


CPP_80.cpp: Compilation Failed
Error: ./CPP_80.cpp: In function ‘int is_happy(const char*)’:
./CPP_80.cpp:4:7: error: ‘strlen’ was not declared in this scope
    4 |   if (strlen(s) < 3) {
      |       ^~~~~~
./CPP_80.cpp:2:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    1 | #include <stdint.h>
  +++ |+#include <cstring>
    2 | 
./CPP_80.cpp:10:8: error: ‘size_t’ was not declared in this scope
   10 |   for (size_t i = 2; i < strlen(s); i++) {
      |        ^~~~~~
./CPP_80.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_80.cpp:10:22: error: ‘i’ was not declared in this scope
   10 |   for (size_t i = 2; i < strlen(s); i++) {
      |                      ^
./CPP_80.cpp:10:26: error: ‘strlen’ was not declared in this scope
   10 |   for (size_t i = 2; i < strlen(s); i++) {
      |                          ^~~~~~
./CPP_80.cpp:10:26: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?


CPP_136.cpp: Compilation Failed
Error: ./CPP_136.cpp: In function ‘void largest_smallest_integers(vector*, const vector*)’:
./CPP_136.cpp:17:3: error: ‘ptrdiff_t’ was not declared in this scope; did you mean ‘std::ptrdiff_t’?
   17 |   ptrdiff_t size = start - finish;
      |   ^~~~~~~~~
      |   std::ptrdiff_t
In file included from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_136.cpp:1:
/usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:259:28: note: ‘std::ptrdiff_t’ declared here
  259 |   typedef __PTRDIFF_TYPE__ ptrdiff_t;
      |                            ^~~~~~~~~
./CPP_136.cpp:18:7: error: ‘size’ was not declared in this scope; did you mean ‘size_t’?
   18 |   if (size == 0) {
      |       ^~~~
      |       size_t
./CPP_136.cpp:24:19: error: ‘size’ was not declared in this scope; did you mean ‘size_t’?
   24 |   size_t count = (size >> 2) > 0 ? (size >> 2) : 1;
      |                   ^~~~
      |                   size_t
./CPP_136.cpp: At global scope:
./CPP_136.cpp:48:13: error: ‘vector’ is not a template
   48 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_136.cpp:48:27: error: ‘vector’ is not a template
   48 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_136.cpp: In function ‘bool issame(vector, vector)’:
./CPP_136.cpp:49:11: error: ‘struct vector’ has no member named ‘size’
   49 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_136.cpp:49:21: error: ‘struct vector’ has no member named ‘size’
   49 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_136.cpp:50:22: error: ‘struct vector’ has no member named ‘size’
   50 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_136.cpp:52:10: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   52 |     if (a[i]!=b[i]) return false;
      |          ^
./CPP_136.cpp:52:16: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   52 |     if (a[i]!=b[i]) return false;
      |                ^
In file included from ./CPP_136.cpp:47:
./CPP_136.cpp: In function ‘int main()’:
./CPP_136.cpp:57:64: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   57 |     assert (issame(largest_smallest_integers({2, 4, 1, 3, 5, 7}) , {0, 1}));
      |                                                                ^
      |                                                                |
      |                                                                <brace-enclosed initializer list>
./CPP_136.cpp:14:40: note:   initializing argument 1 of ‘void largest_smallest_integers(vector*, const vector*)’
   14 | void largest_smallest_integers(vector* largest_smallest, const vector* data) {
      |                                ~~~~~~~~^~~~~~~~~~~~~~~~
In file included from ./CPP_136.cpp:47:
./CPP_136.cpp:58:67: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   58 |     assert (issame(largest_smallest_integers({2, 4, 1, 3, 5, 7, 0}) , {0, 1}));
      |                                                                   ^
      |                                                                   |
      |                                                                   <brace-enclosed initializer list>
./CPP_136.cpp:14:40: note:   initializing argument 1 of ‘void largest_smallest_integers(vector*, const vector*)’
   14 | void largest_smallest_integers(vector* largest_smallest, const vector* data) {
      |                                ~~~~~~~~^~~~~~~~~~~~~~~~
In file included from ./CPP_136.cpp:47:
./CPP_136.cpp:59:68: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   59 |     assert (issame(largest_smallest_integers({1, 3, 2, 4, 5, 6, -2}) , {-2, 1}));
      |                                                                    ^
      |                                                                    |
      |                                                                    <brace-enclosed initializer list>
./CPP_136.cpp:14:40: note:   initializing argument 1 of ‘void largest_smallest_integers(vector*, const vector*)’
   14 | void largest_smallest_integers(vector* largest_smallest, const vector* data) {
      |                                ~~~~~~~~^~~~~~~~~~~~~~~~
In file included from ./CPP_136.cpp:47:
./CPP_136.cpp:60:68: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   60 |     assert (issame(largest_smallest_integers({4, 5, 3, 6, 2, 7, -7}) , {-7, 2}));
      |                                                                    ^
      |                                                                    |
      |                                                                    <brace-enclosed initializer list>
./CPP_136.cpp:14:40: note:   initializing argument 1 of ‘void largest_smallest_integers(vector*, const vector*)’
   14 | void largest_smallest_integers(vector* largest_smallest, const vector* data) {
      |                                ~~~~~~~~^~~~~~~~~~~~~~~~
In file included from ./CPP_136.cpp:47:
./CPP_136.cpp:61:71: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   61 |     assert (issame(largest_smallest_integers({7, 3, 8, 4, 9, 2, 5, -9}) , {-9, 2}));
      |                                                                       ^
      |                                                                       |
      |                                                                       <brace-enclosed initializer list>
./CPP_136.cpp:14:40: note:   initializing argument 1 of ‘void largest_smallest_integers(vector*, const vector*)’
   14 | void largest_smallest_integers(vector* largest_smallest, const vector* data) {
      |                                ~~~~~~~~^~~~~~~~~~~~~~~~
In file included from ./CPP_136.cpp:47:
./CPP_136.cpp:62:48: error: too few arguments to function ‘void largest_smallest_integers(vector*, const vector*)’
   62 |     assert (issame(largest_smallest_integers({}) , {0, 0}));
      |                                                ^
./CPP_136.cpp:14:6: note: declared here
   14 | void largest_smallest_integers(vector* largest_smallest, const vector* data) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./CPP_136.cpp:47:
./CPP_136.cpp:63:49: error: too few arguments to function ‘void largest_smallest_integers(vector*, const vector*)’
   63 |     assert (issame(largest_smallest_integers({0}) , {0, 0}));
      |                                                 ^
./CPP_136.cpp:14:6: note: declared here
   14 | void largest_smallest_integers(vector* largest_smallest, const vector* data) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./CPP_136.cpp:47:
./CPP_136.cpp:64:62: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   64 |     assert (issame(largest_smallest_integers({-1, -3, -5, -6}) , {-1, 0}));
      |                                                              ^
      |                                                              |
      |                                                              <brace-enclosed initializer list>
./CPP_136.cpp:14:40: note:   initializing argument 1 of ‘void largest_smallest_integers(vector*, const vector*)’
   14 | void largest_smallest_integers(vector* largest_smallest, const vector* data) {
      |                                ~~~~~~~~^~~~~~~~~~~~~~~~
In file included from ./CPP_136.cpp:47:
./CPP_136.cpp:65:65: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   65 |     assert (issame(largest_smallest_integers({-1, -3, -5, -6, 0}) , {-1, 0}));
      |                                                                 ^
      |                                                                 |
      |                                                                 <brace-enclosed initializer list>
./CPP_136.cpp:14:40: note:   initializing argument 1 of ‘void largest_smallest_integers(vector*, const vector*)’
   14 | void largest_smallest_integers(vector* largest_smallest, const vector* data) {
      |                                ~~~~~~~~^~~~~~~~~~~~~~~~
In file included from ./CPP_136.cpp:47:
./CPP_136.cpp:66:65: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   66 |     assert (issame(largest_smallest_integers({-6, -4, -4, -3, 1}) , {-3, 1}));
      |                                                                 ^
      |                                                                 |
      |                                                                 <brace-enclosed initializer list>
./CPP_136.cpp:14:40: note:   initializing argument 1 of ‘void largest_smallest_integers(vector*, const vector*)’
   14 | void largest_smallest_integers(vector* largest_smallest, const vector* data) {
      |                                ~~~~~~~~^~~~~~~~~~~~~~~~
In file included from ./CPP_136.cpp:47:
./CPP_136.cpp:67:71: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘vector*’
   67 |     assert (issame(largest_smallest_integers({-6, -4, -4, -3, -100, 1}) , {-3, 1}));
      |                                                                       ^
      |                                                                       |
      |                                                                       <brace-enclosed initializer list>
./CPP_136.cpp:14:40: note:   initializing argument 1 of ‘void largest_smallest_integers(vector*, const vector*)’
   14 | void largest_smallest_integers(vector* largest_smallest, const vector* data) {
      |                                ~~~~~~~~^~~~~~~~~~~~~~~~


CPP_27.cpp: Compilation Failed
Error: ./CPP_27.cpp: In function ‘void filp_case(char*, const char*)’:
./CPP_27.cpp:4:25: error: ‘malloc’ was not declared in this scope
    4 |   char* output = (char*)malloc(strlen(str) + 1);
      |                         ^~~~~~
./CPP_27.cpp:2:1: note: ‘malloc’ is defined in header ‘<cstdlib>’; did you forget to ‘#include <cstdlib>’?
    1 | #include <string.h>
  +++ |+#include <cstdlib>
    2 | 
./CPP_27.cpp:17:3: error: ‘free’ was not declared in this scope
   17 |   free(output);
      |   ^~~~
./CPP_27.cpp:17:3: note: ‘free’ is defined in header ‘<cstdlib>’; did you forget to ‘#include <cstdlib>’?
In file included from ./CPP_27.cpp:21:
./CPP_27.cpp: In function ‘int main()’:
./CPP_27.cpp:23:23: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   23 |     assert (filp_case("") == "");
      |                       ^~
./CPP_27.cpp:23:25: error: too few arguments to function ‘void filp_case(char*, const char*)’
   23 |     assert (filp_case("") == "");
      |                         ^
./CPP_27.cpp:3:6: note: declared here
    3 | void filp_case(char* s, const char* str) {
      |      ^~~~~~~~~
In file included from ./CPP_27.cpp:21:
./CPP_27.cpp:24:23: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   24 |     assert (filp_case("Hello!") == "hELLO!");
      |                       ^~~~~~~~
./CPP_27.cpp:24:31: error: too few arguments to function ‘void filp_case(char*, const char*)’
   24 |     assert (filp_case("Hello!") == "hELLO!");
      |                               ^
./CPP_27.cpp:3:6: note: declared here
    3 | void filp_case(char* s, const char* str) {
      |      ^~~~~~~~~
In file included from ./CPP_27.cpp:21:
./CPP_27.cpp:25:23: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   25 |     assert (filp_case("These violent delights have violent ends") == "tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS");
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_27.cpp:25:65: error: too few arguments to function ‘void filp_case(char*, const char*)’
   25 |     assert (filp_case("These violent delights have violent ends") == "tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS");
      |                                                                 ^
./CPP_27.cpp:3:6: note: declared here
    3 | void filp_case(char* s, const char* str) {
      |      ^~~~~~~~~


CPP_16.cpp: Compilation Failed
Error: ./CPP_16.cpp: In function ‘int count_distinct_characters(const char*)’:
./CPP_16.cpp:37:22: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
   37 |         seen = malloc(1);
      |                ~~~~~~^~~
      |                      |
      |                      void*
./CPP_16.cpp:42:23: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
   42 |         seen = realloc(seen, new_size);
      |                ~~~~~~~^~~~~~~~~~~~~~~~
      |                       |
      |                       void*


CPP_72.cpp: Execution Failed
Error: CPP_72: ./CPP_72.cpp:25: int main(): Assertion `will_it_fly({3, 2, 3}, 1) == false' failed.
Aborted (core dumped)


CPP_24.cpp: Compilation Failed
Error: In file included from ./CPP_24.cpp:23:
./CPP_24.cpp: In function ‘int main()’:
./CPP_24.cpp:25:13: error: ‘largest_divisor’ was not declared in this scope; did you mean ‘largest_divisori’?
   25 |     assert (largest_divisor(3) == 1);
      |             ^~~~~~~~~~~~~~~


CPP_92.cpp: Compilation Failed
Error: ./CPP_92.cpp: In function ‘float any_int(float, float, float)’:
./CPP_92.cpp:2:7: error: ‘llvm’ was not declared in this scope
    2 |   if (llvm.round.f32(a) != a || llvm.round.f32(b) != b || llvm.round.f32(c) != c) {
      |       ^~~~


CPP_43.cpp: Compilation Failed
Error: In file included from ./CPP_43.cpp:21:
./CPP_43.cpp: In function ‘int main()’:
./CPP_43.cpp:23:43: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   23 |     assert (pairs_sum_to_zero({1, 3, 5, 0}) == false);
      |                                           ^
      |                                           |
      |                                           <brace-enclosed initializer list>
./CPP_43.cpp:3:36: note:   initializing argument 1 of ‘int32_t pairs_sum_to_zero(int32_t*, int32_t)’
    3 | int32_t pairs_sum_to_zero(int32_t* arr, int32_t size) {
      |                           ~~~~~~~~~^~~
In file included from ./CPP_43.cpp:21:
./CPP_43.cpp:24:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   24 |     assert (pairs_sum_to_zero({1, 3, -2, 1}) == false);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_43.cpp:3:36: note:   initializing argument 1 of ‘int32_t pairs_sum_to_zero(int32_t*, int32_t)’
    3 | int32_t pairs_sum_to_zero(int32_t* arr, int32_t size) {
      |                           ~~~~~~~~~^~~
In file included from ./CPP_43.cpp:21:
./CPP_43.cpp:25:43: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   25 |     assert (pairs_sum_to_zero({1, 2, 3, 7}) == false);
      |                                           ^
      |                                           |
      |                                           <brace-enclosed initializer list>
./CPP_43.cpp:3:36: note:   initializing argument 1 of ‘int32_t pairs_sum_to_zero(int32_t*, int32_t)’
    3 | int32_t pairs_sum_to_zero(int32_t* arr, int32_t size) {
      |                           ~~~~~~~~~^~~
In file included from ./CPP_43.cpp:21:
./CPP_43.cpp:26:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   26 |     assert (pairs_sum_to_zero({2, 4, -5, 3, 5, 7}) == true);
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_43.cpp:3:36: note:   initializing argument 1 of ‘int32_t pairs_sum_to_zero(int32_t*, int32_t)’
    3 | int32_t pairs_sum_to_zero(int32_t* arr, int32_t size) {
      |                           ~~~~~~~~~^~~
In file included from ./CPP_43.cpp:21:
./CPP_43.cpp:27:34: error: invalid conversion from ‘int’ to ‘int32_t*’ {aka ‘int*’} [-fpermissive]
   27 |     assert (pairs_sum_to_zero({1}) == false);
      |                                  ^
      |                                  |
      |                                  int
./CPP_43.cpp:27:34: error: too few arguments to function ‘int32_t pairs_sum_to_zero(int32_t*, int32_t)’
./CPP_43.cpp:3:9: note: declared here
    3 | int32_t pairs_sum_to_zero(int32_t* arr, int32_t size) {
      |         ^~~~~~~~~~~~~~~~~
In file included from ./CPP_43.cpp:21:
./CPP_43.cpp:28:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   28 |     assert (pairs_sum_to_zero({-3, 9, -1, 3, 2, 30}) == true);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_43.cpp:3:36: note:   initializing argument 1 of ‘int32_t pairs_sum_to_zero(int32_t*, int32_t)’
    3 | int32_t pairs_sum_to_zero(int32_t* arr, int32_t size) {
      |                           ~~~~~~~~~^~~
In file included from ./CPP_43.cpp:21:
./CPP_43.cpp:29:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   29 |     assert (pairs_sum_to_zero({-3, 9, -1, 3, 2, 31}) == true);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_43.cpp:3:36: note:   initializing argument 1 of ‘int32_t pairs_sum_to_zero(int32_t*, int32_t)’
    3 | int32_t pairs_sum_to_zero(int32_t* arr, int32_t size) {
      |                           ~~~~~~~~~^~~
In file included from ./CPP_43.cpp:21:
./CPP_43.cpp:30:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   30 |     assert (pairs_sum_to_zero({-3, 9, -1, 4, 2, 30}) == false);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_43.cpp:3:36: note:   initializing argument 1 of ‘int32_t pairs_sum_to_zero(int32_t*, int32_t)’
    3 | int32_t pairs_sum_to_zero(int32_t* arr, int32_t size) {
      |                           ~~~~~~~~~^~~
In file included from ./CPP_43.cpp:21:
./CPP_43.cpp:31:52: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int32_t*’ {aka ‘int*’}
   31 |     assert (pairs_sum_to_zero({-3, 9, -1, 4, 2, 31}) == false);
      |                                                    ^
      |                                                    |
      |                                                    <brace-enclosed initializer list>
./CPP_43.cpp:3:36: note:   initializing argument 1 of ‘int32_t pairs_sum_to_zero(int32_t*, int32_t)’
    3 | int32_t pairs_sum_to_zero(int32_t* arr, int32_t size) {
      |                           ~~~~~~~~~^~~


CPP_53.cpp: Compilation Failed
Error: In file included from ./CPP_53.cpp:6:
./CPP_53.cpp: In function ‘int main()’:
./CPP_53.cpp:8:13: error: ‘add’ was not declared in this scope
    8 |     assert (add(0, 1) == 1);
      |             ^~~
./CPP_53.cpp:15:15: error: ‘rand’ was not declared in this scope
   15 |         int x=rand()%1000;
      |               ^~~~


CPP_126.cpp: Compilation Failed
Error: ./CPP_126.cpp:3:49: error: ‘size_t’ has not been declared
    3 | int _Z9is_sortedSt6vectorIiSaIiEE(const int* v, size_t size) {
      |                                                 ^~~~~~
./CPP_126.cpp: In function ‘int _Z9is_sortedSt6vectorIiSaIiEE(const int*, int)’:
./CPP_126.cpp:7:8: error: ‘size_t’ was not declared in this scope
    7 |   for (size_t i = 1; i < size; ++i) {
      |        ^~~~~~
./CPP_126.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_126.cpp:7:22: error: ‘i’ was not declared in this scope
    7 |   for (size_t i = 1; i < size; ++i) {
      |                      ^
In file included from ./CPP_126.cpp:16:
./CPP_126.cpp: In function ‘int main()’:
./CPP_126.cpp:18:13: error: ‘is_sorted’ was not declared in this scope
   18 |     assert (is_sorted({5}) == true);
      |             ^~~~~~~~~


CPP_52.cpp: Compilation Failed
Error: ./CPP_52.cpp:18:1: error: stray ‘`’ in program
   18 | ```
      | ^
./CPP_52.cpp:18:2: error: stray ‘`’ in program
   18 | ```
      |  ^
./CPP_52.cpp:18:3: error: stray ‘`’ in program
   18 | ```
      |   ^
./CPP_52.cpp:19:1: error: expected unqualified-id before ‘<’ token
   19 | <|im_end|>
      | ^
In file included from ./CPP_52.cpp:21:
./CPP_52.cpp: In function ‘int main()’:
./CPP_52.cpp:23:5: error: ‘__assert_fail’ was not declared in this scope
   23 |     assert (below_threshold({1, 2, 4, 10}, 100));
      |     ^~~~~~


CPP_2.cpp: Compilation Failed
Error: In file included from ./CPP_2.cpp:7:
./CPP_2.cpp: In function ‘int main()’:
./CPP_2.cpp:10:10: error: ‘abs’ was not declared in this scope
   10 |  assert (abs(truncate_number(1.33) - 0.33) < 1e-4);
      |          ^~~


CPP_139.cpp: Execution Failed
Error: CPP_139: ./CPP_139.cpp:20: int main(): Assertion `special_factorial(4) == 288' failed.
Aborted (core dumped)


CPP_57.cpp: Compilation Failed
Error: ./CPP_57.cpp:21:1: error: stray ‘`’ in program
   21 | ```
      | ^
./CPP_57.cpp:21:2: error: stray ‘`’ in program
   21 | ```
      |  ^
./CPP_57.cpp:21:3: error: stray ‘`’ in program
   21 | ```
      |   ^
./CPP_57.cpp:3:28: error: ‘size_t’ has not been declared
    3 | bool monotonic(float* arr, size_t size) {
      |                            ^~~~~~
./CPP_57.cpp: In function ‘bool monotonic(float*, int)’:
./CPP_57.cpp:11:8: error: ‘size_t’ was not declared in this scope
   11 |   for (size_t i = 1; i < size; i++) {
      |        ^~~~~~
./CPP_57.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdbool.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_57.cpp:11:22: error: ‘i’ was not declared in this scope
   11 |   for (size_t i = 1; i < size; i++) {
      |                      ^
./CPP_57.cpp: At global scope:
./CPP_57.cpp:22:1: error: expected unqualified-id before ‘<’ token
   22 | <|im_end|>
      | ^
In file included from ./CPP_57.cpp:24:
./CPP_57.cpp: In function ‘int main()’:
./CPP_57.cpp:26:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   26 |     assert (monotonic({1, 2, 4, 10}) == true);
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_57.cpp:3:23: note:   initializing argument 1 of ‘bool monotonic(float*, int)’
    3 | bool monotonic(float* arr, size_t size) {
      |                ~~~~~~~^~~
In file included from ./CPP_57.cpp:24:
./CPP_57.cpp:26:5: error: ‘__assert_fail’ was not declared in this scope
   26 |     assert (monotonic({1, 2, 4, 10}) == true);
      |     ^~~~~~
./CPP_57.cpp:27:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   27 |     assert (monotonic({1, 2, 4, 20}) == true);
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_57.cpp:3:23: note:   initializing argument 1 of ‘bool monotonic(float*, int)’
    3 | bool monotonic(float* arr, size_t size) {
      |                ~~~~~~~^~~
In file included from ./CPP_57.cpp:24:
./CPP_57.cpp:28:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   28 |     assert (monotonic({1, 20, 4, 10}) == false);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_57.cpp:3:23: note:   initializing argument 1 of ‘bool monotonic(float*, int)’
    3 | bool monotonic(float* arr, size_t size) {
      |                ~~~~~~~^~~
In file included from ./CPP_57.cpp:24:
./CPP_57.cpp:29:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   29 |     assert (monotonic({4, 1, 0, -10}) == true);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_57.cpp:3:23: note:   initializing argument 1 of ‘bool monotonic(float*, int)’
    3 | bool monotonic(float* arr, size_t size) {
      |                ~~~~~~~^~~
In file included from ./CPP_57.cpp:24:
./CPP_57.cpp:30:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   30 |     assert (monotonic({4, 1, 1, 0}) == true);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_57.cpp:3:23: note:   initializing argument 1 of ‘bool monotonic(float*, int)’
    3 | bool monotonic(float* arr, size_t size) {
      |                ~~~~~~~^~~
In file included from ./CPP_57.cpp:24:
./CPP_57.cpp:31:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   31 |     assert (monotonic({1, 2, 3, 2, 5, 60}) == false);
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_57.cpp:3:23: note:   initializing argument 1 of ‘bool monotonic(float*, int)’
    3 | bool monotonic(float* arr, size_t size) {
      |                ~~~~~~~^~~
In file included from ./CPP_57.cpp:24:
./CPP_57.cpp:32:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   32 |     assert (monotonic({1, 2, 3, 4, 5, 60}) == true);
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_57.cpp:3:23: note:   initializing argument 1 of ‘bool monotonic(float*, int)’
    3 | bool monotonic(float* arr, size_t size) {
      |                ~~~~~~~^~~
In file included from ./CPP_57.cpp:24:
./CPP_57.cpp:33:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   33 |     assert (monotonic({9, 9, 9, 9}) == true);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_57.cpp:3:23: note:   initializing argument 1 of ‘bool monotonic(float*, int)’
    3 | bool monotonic(float* arr, size_t size) {
      |                ~~~~~~~^~~


CPP_159.cpp: Compilation Failed
Error: ./CPP_159.cpp:25:13: error: ‘vector’ was not declared in this scope
   25 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_159.cpp:25:20: error: expected primary-expression before ‘int’
   25 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_159.cpp:25:27: error: ‘vector’ was not declared in this scope
   25 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_159.cpp:25:34: error: expected primary-expression before ‘int’
   25 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_159.cpp:25:39: error: expression list treated as compound expression in initializer [-fpermissive]
   25 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_159.cpp:24:
./CPP_159.cpp: In function ‘int main()’:
./CPP_159.cpp:34:20: error: ‘eat’ was not declared in this scope
   34 |     assert (issame(eat(5, 6, 10) , {11, 4}));
      |                    ^~~
./CPP_159.cpp:34:43: error: ‘issame’ cannot be used as a function
   34 |     assert (issame(eat(5, 6, 10) , {11, 4}));
      |                                           ^
./CPP_159.cpp:35:42: error: ‘issame’ cannot be used as a function
   35 |     assert (issame(eat(4, 8, 9) , {12, 1}));
      |                                          ^
./CPP_159.cpp:36:44: error: ‘issame’ cannot be used as a function
   36 |     assert (issame(eat(1, 10, 10) , {11, 0}));
      |                                            ^
./CPP_159.cpp:37:42: error: ‘issame’ cannot be used as a function
   37 |     assert (issame(eat(2, 11, 5) , {7, 0}));
      |                                          ^
./CPP_159.cpp:39:41: error: ‘issame’ cannot be used as a function
   39 |     assert (issame(eat(4, 5, 7) , {9, 2}));
      |                                         ^
./CPP_159.cpp:40:41: error: ‘issame’ cannot be used as a function
   40 |     assert (issame(eat(4, 5, 1) , {5, 0}));
      |                                         ^


CPP_108.cpp: Compilation Failed
Error: ./CPP_108.cpp: In function ‘int count_nums(std::vector<int>&)’:
./CPP_108.cpp:7:20: error: ‘abs’ is not a member of ‘std’
    7 |       int n = std::abs(nums[i]);
      |                    ^~~
In file included from ./CPP_108.cpp:22:
./CPP_108.cpp: In function ‘int main()’:
./CPP_108.cpp:24:26: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   24 |     assert (count_nums({}) == 0);
      |                          ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_108.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:484:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector() [with _Tp = int; _Alloc = std::allocator<int>]’
  484 |       vector() = default;
      |       ^~~~~~
./CPP_108.cpp:2:34: note:   initializing argument 1 of ‘int count_nums(std::vector<int>&)’
    2 | int count_nums(std::vector<int>& nums) {
      |                ~~~~~~~~~~~~~~~~~~^~~~
In file included from ./CPP_108.cpp:22:
./CPP_108.cpp:25:35: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   25 |     assert (count_nums({-1, -2, 0}) == 0);
      |                                   ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_108.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_108.cpp:2:34: note:   initializing argument 1 of ‘int count_nums(std::vector<int>&)’
    2 | int count_nums(std::vector<int>& nums) {
      |                ~~~~~~~~~~~~~~~~~~^~~~
In file included from ./CPP_108.cpp:22:
./CPP_108.cpp:26:46: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   26 |     assert (count_nums({1, 1, 2, -2, 3, 4, 5}) == 6);
      |                                              ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_108.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_108.cpp:2:34: note:   initializing argument 1 of ‘int count_nums(std::vector<int>&)’
    2 | int count_nums(std::vector<int>& nums) {
      |                ~~~~~~~~~~~~~~~~~~^~~~
In file included from ./CPP_108.cpp:22:
./CPP_108.cpp:27:46: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   27 |     assert (count_nums({1, 6, 9, -6, 0, 1, 5}) == 5);
      |                                              ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_108.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_108.cpp:2:34: note:   initializing argument 1 of ‘int count_nums(std::vector<int>&)’
    2 | int count_nums(std::vector<int>& nums) {
      |                ~~~~~~~~~~~~~~~~~~^~~~
In file included from ./CPP_108.cpp:22:
./CPP_108.cpp:28:47: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   28 |     assert (count_nums({1, 100, 98, -7, 1, -1}) == 4);
      |                                               ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_108.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_108.cpp:2:34: note:   initializing argument 1 of ‘int count_nums(std::vector<int>&)’
    2 | int count_nums(std::vector<int>& nums) {
      |                ~~~~~~~~~~~~~~~~~~^~~~
In file included from ./CPP_108.cpp:22:
./CPP_108.cpp:29:49: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   29 |     assert (count_nums({12, 23, 34, -45, -56, 0}) == 5);
      |                                                 ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_108.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_108.cpp:2:34: note:   initializing argument 1 of ‘int count_nums(std::vector<int>&)’
    2 | int count_nums(std::vector<int>& nums) {
      |                ~~~~~~~~~~~~~~~~~~^~~~
In file included from ./CPP_108.cpp:22:
./CPP_108.cpp:30:31: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   30 |     assert (count_nums({-0, 1}) == 1);
      |                               ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_108.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_108.cpp:2:34: note:   initializing argument 1 of ‘int count_nums(std::vector<int>&)’
    2 | int count_nums(std::vector<int>& nums) {
      |                ~~~~~~~~~~~~~~~~~~^~~~
In file included from ./CPP_108.cpp:22:
./CPP_108.cpp:31:27: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   31 |     assert (count_nums({1}) == 1);
      |                           ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_108.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_108.cpp:2:34: note:   initializing argument 1 of ‘int count_nums(std::vector<int>&)’
    2 | int count_nums(std::vector<int>& nums) {
      |                ~~~~~~~~~~~~~~~~~~^~~~


CPP_61.cpp: Compilation Failed
Error: ./CPP_61.cpp: In function ‘int correct_bracketing(const char*)’:
./CPP_61.cpp:5:18: error: ‘strlen’ was not declared in this scope
    5 |     size_t len = strlen(str);
      |                  ^~~~~~
./CPP_61.cpp:3:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    2 | #include <stdlib.h>
  +++ |+#include <cstring>
    3 | 


CPP_20.cpp: Compilation Failed
Error: ./CPP_20.cpp:44:1: error: stray ‘`’ in program
   44 | ```
      | ^
./CPP_20.cpp:44:2: error: stray ‘`’ in program
   44 | ```
      |  ^
./CPP_20.cpp:44:3: error: stray ‘`’ in program
   44 | ```
      |   ^
./CPP_20.cpp: In function ‘void find_closest_elements(std_vector*, const std_vector*)’:
./CPP_20.cpp:22:20: error: ‘fabsf’ was not declared in this scope
   22 |   float min_diff = fabsf(closest_pair[0][0] - closest_pair[1][0]);
      |                    ^~~~~
./CPP_20.cpp: At global scope:
./CPP_20.cpp:45:1: error: expected unqualified-id before ‘<’ token
   45 | <|im_end|>
      | ^
./CPP_20.cpp:48:13: error: ‘vector’ was not declared in this scope
   48 | bool issame(vector<float> a,vector<float>b){
      |             ^~~~~~
./CPP_20.cpp:48:20: error: expected primary-expression before ‘float’
   48 | bool issame(vector<float> a,vector<float>b){
      |                    ^~~~~
./CPP_20.cpp:48:29: error: ‘vector’ was not declared in this scope
   48 | bool issame(vector<float> a,vector<float>b){
      |                             ^~~~~~
./CPP_20.cpp:48:36: error: expected primary-expression before ‘float’
   48 | bool issame(vector<float> a,vector<float>b){
      |                                    ^~~~~
./CPP_20.cpp:48:43: error: expression list treated as compound expression in initializer [-fpermissive]
   48 | bool issame(vector<float> a,vector<float>b){
      |                                           ^
./CPP_20.cpp:56:5: error: redefinition of ‘int main()’
   56 | int main(){
      |     ^~~~
./CPP_20.cpp:41:5: note: ‘int main()’ previously defined here
   41 | int main() {
      |     ^~~~
In file included from ./CPP_20.cpp:47:
./CPP_20.cpp: In function ‘int main()’:
./CPP_20.cpp:57:72: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   57 |     assert (issame(find_closest_elements({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}) , {3.9, 4.0}));
      |                                                                        ^
      |                                                                        |
      |                                                                        <brace-enclosed initializer list>
./CPP_20.cpp:9:40: note:   initializing argument 1 of ‘void find_closest_elements(std_vector*, const std_vector*)’
    9 | void find_closest_elements(std_vector* result, const std_vector* input) {
      |                            ~~~~~~~~~~~~^~~~~~
In file included from ./CPP_20.cpp:47:
./CPP_20.cpp:57:86: error: ‘issame’ cannot be used as a function
   57 |     assert (issame(find_closest_elements({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}) , {3.9, 4.0}));
      |                                                                                      ^
./CPP_20.cpp:57:5: error: ‘__assert_fail’ was not declared in this scope
   57 |     assert (issame(find_closest_elements({1.0, 2.0, 3.9, 4.0, 5.0, 2.2}) , {3.9, 4.0}));
      |     ^~~~~~
./CPP_20.cpp:58:67: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   58 |     assert (issame(find_closest_elements({1.0, 2.0, 5.9, 4.0, 5.0}) , {5.0, 5.9} ));
      |                                                                   ^
      |                                                                   |
      |                                                                   <brace-enclosed initializer list>
./CPP_20.cpp:9:40: note:   initializing argument 1 of ‘void find_closest_elements(std_vector*, const std_vector*)’
    9 | void find_closest_elements(std_vector* result, const std_vector* input) {
      |                            ~~~~~~~~~~~~^~~~~~
In file included from ./CPP_20.cpp:47:
./CPP_20.cpp:58:82: error: ‘issame’ cannot be used as a function
   58 |     assert (issame(find_closest_elements({1.0, 2.0, 5.9, 4.0, 5.0}) , {5.0, 5.9} ));
      |                                                                                  ^
./CPP_20.cpp:59:72: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   59 |     assert (issame(find_closest_elements({1.0, 2.0, 3.0, 4.0, 5.0, 2.2}) ,{2.0, 2.2}));
      |                                                                        ^
      |                                                                        |
      |                                                                        <brace-enclosed initializer list>
./CPP_20.cpp:9:40: note:   initializing argument 1 of ‘void find_closest_elements(std_vector*, const std_vector*)’
    9 | void find_closest_elements(std_vector* result, const std_vector* input) {
      |                            ~~~~~~~~~~~~^~~~~~
In file included from ./CPP_20.cpp:47:
./CPP_20.cpp:59:85: error: ‘issame’ cannot be used as a function
   59 |     assert (issame(find_closest_elements({1.0, 2.0, 3.0, 4.0, 5.0, 2.2}) ,{2.0, 2.2}));
      |                                                                                     ^
./CPP_20.cpp:60:73: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   60 |      assert (issame(find_closest_elements({1.0, 2.0, 3.0, 4.0, 5.0, 2.0}) ,{2.0, 2.0}));
      |                                                                         ^
      |                                                                         |
      |                                                                         <brace-enclosed initializer list>
./CPP_20.cpp:9:40: note:   initializing argument 1 of ‘void find_closest_elements(std_vector*, const std_vector*)’
    9 | void find_closest_elements(std_vector* result, const std_vector* input) {
      |                            ~~~~~~~~~~~~^~~~~~
In file included from ./CPP_20.cpp:47:
./CPP_20.cpp:60:86: error: ‘issame’ cannot be used as a function
   60 |      assert (issame(find_closest_elements({1.0, 2.0, 3.0, 4.0, 5.0, 2.0}) ,{2.0, 2.0}));
      |                                                                                      ^
./CPP_20.cpp:61:69: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’
   61 |       assert (issame(find_closest_elements({1.1, 2.2, 3.1, 4.1, 5.1}) , {2.2, 3.1}));
      |                                                                     ^
      |                                                                     |
      |                                                                     <brace-enclosed initializer list>
./CPP_20.cpp:9:40: note:   initializing argument 1 of ‘void find_closest_elements(std_vector*, const std_vector*)’
    9 | void find_closest_elements(std_vector* result, const std_vector* input) {
      |                            ~~~~~~~~~~~~^~~~~~
In file included from ./CPP_20.cpp:47:
./CPP_20.cpp:61:83: error: ‘issame’ cannot be used as a function
   61 |       assert (issame(find_closest_elements({1.1, 2.2, 3.1, 4.1, 5.1}) , {2.2, 3.1}));
      |                                                                                   ^


CPP_124.cpp: Compilation Failed
Error: ./CPP_124.cpp:30:1: error: stray ‘`’ in program
   30 | ```<|im_end|>
      | ^
./CPP_124.cpp:30:2: error: stray ‘`’ in program
   30 | ```<|im_end|>
      |  ^
./CPP_124.cpp:30:3: error: stray ‘`’ in program
   30 | ```<|im_end|>
      |   ^
./CPP_124.cpp: In function ‘int valid_date(const char*)’:
./CPP_124.cpp:6:7: error: ‘strlen’ was not declared in this scope
    6 |   if (strlen(s) != 10) {
      |       ^~~~~~
./CPP_124.cpp:2:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    1 | #include <stdint.h>
  +++ |+#include <cstring>
    2 | 
./CPP_124.cpp: At global scope:
./CPP_124.cpp:30:4: error: expected unqualified-id before ‘<’ token
   30 | ```<|im_end|>
      |    ^
In file included from ./CPP_124.cpp:32:
./CPP_124.cpp: In function ‘int main()’:
./CPP_124.cpp:34:5: error: ‘__assert_fail’ was not declared in this scope
   34 |     assert (valid_date("03-11-2000") == true);
      |     ^~~~~~


CPP_75.cpp: Compilation Failed
Error: ./CPP_75.cpp: In function ‘int _Z17is_multiply_primei(int)’:
./CPP_75.cpp:4:9: error: expected primary-expression before ‘<’ token
    4 |   if (  < 4) {
      |         ^
./CPP_75.cpp:5:13: error: expected primary-expression before ‘==’ token
    5 |     return  == 2;
      |             ^~
./CPP_75.cpp:7:8: error: expected unqualified-id before ‘=’ token
    7 |   int  = 2;
      |        ^
./CPP_75.cpp:8:8: error: expected unqualified-id before ‘=’ token
    8 |   int  = 0;
      |        ^
./CPP_75.cpp:9:8: error: expected unqualified-id before ‘=’ token
    9 |   int  = ;
      |        ^
./CPP_75.cpp:11:10: error: expected unqualified-id before ‘=’ token
   11 |     int  =  % ;
      |          ^
./CPP_75.cpp:12:10: error: expected primary-expression before ‘==’ token
   12 |     if ( == 0 &&  > ) {
      |          ^~
./CPP_75.cpp:12:19: error: expected primary-expression before ‘>’ token
   12 |     if ( == 0 &&  > ) {
      |                   ^
./CPP_75.cpp:12:21: error: expected primary-expression before ‘)’ token
   12 |     if ( == 0 &&  > ) {
      |                     ^
./CPP_75.cpp:13:12: error: expected unqualified-id before ‘=’ token
   13 |       int  = 0;
      |            ^
./CPP_75.cpp:14:12: error: expected unqualified-id before ‘=’ token
   14 |       int  = ;
      |            ^
./CPP_75.cpp:16:14: error: expected unqualified-id before ‘=’ token
   16 |         int  =  / ;
      |              ^
./CPP_75.cpp:17:12: error: expected primary-expression before ‘;’ token
   17 |         ++ ;
      |            ^
./CPP_75.cpp:18:14: error: expected unqualified-id before ‘=’ token
   18 |         int  =  % ;
      |              ^
./CPP_75.cpp:19:14: error: expected primary-expression before ‘==’ token
   19 |         if ( == 0 &&  > ) {
      |              ^~
./CPP_75.cpp:19:23: error: expected primary-expression before ‘>’ token
   19 |         if ( == 0 &&  > ) {
      |                       ^
./CPP_75.cpp:19:25: error: expected primary-expression before ‘)’ token
   19 |         if ( == 0 &&  > ) {
      |                         ^
./CPP_75.cpp:25:8: error: expected primary-expression before ‘;’ token
   25 |     ++ ;
      |        ^
./CPP_75.cpp:26:10: error: expected unqualified-id before ‘=’ token
   26 |     int  =  * ;
      |          ^
./CPP_75.cpp:27:10: error: expected primary-expression before ‘>’ token
   27 |     if ( > ) {
      |          ^
./CPP_75.cpp:27:12: error: expected primary-expression before ‘)’ token
   27 |     if ( > ) {
      |            ^
./CPP_75.cpp:31:11: error: expected primary-expression before ‘==’ token
   31 |   return  == 2;
      |           ^~
In file included from ./CPP_75.cpp:35:
./CPP_75.cpp: In function ‘int main()’:
./CPP_75.cpp:37:13: error: ‘is_multiply_prime’ was not declared in this scope
   37 |     assert (is_multiply_prime(5) == false);
      |             ^~~~~~~~~~~~~~~~~


CPP_142.cpp: Compilation Failed
Error: In file included from ./CPP_142.cpp:25:
./CPP_142.cpp: In function ‘int main()’:
./CPP_142.cpp:27:32: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   27 |     assert (sum_squares({1,2,3}) == 6);
      |                                ^
      |                                |
      |                                <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_142.cpp:25:
./CPP_142.cpp:28:32: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   28 |     assert (sum_squares({1,4,9}) == 14);
      |                                ^
      |                                |
      |                                <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_142.cpp:25:
./CPP_142.cpp:29:27: error: too few arguments to function ‘int sum_squares(int*, int)’
   29 |     assert (sum_squares({}) == 0);
      |                           ^
./CPP_142.cpp:3:5: note: declared here
    3 | int sum_squares(int* arr, int size) {
      |     ^~~~~~~~~~~
In file included from ./CPP_142.cpp:25:
./CPP_142.cpp:30:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   30 |     assert (sum_squares({1,1,1,1,1,1,1,1,1}) == 9);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_142.cpp:25:
./CPP_142.cpp:31:53: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   31 |     assert (sum_squares({-1,-1,-1,-1,-1,-1,-1,-1,-1}) == -3);
      |                                                     ^
      |                                                     |
      |                                                     <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_142.cpp:25:
./CPP_142.cpp:32:28: error: too few arguments to function ‘int sum_squares(int*, int)’
   32 |     assert (sum_squares({0}) == 0);
      |                            ^
./CPP_142.cpp:3:5: note: declared here
    3 | int sum_squares(int* arr, int size) {
      |     ^~~~~~~~~~~
In file included from ./CPP_142.cpp:25:
./CPP_142.cpp:33:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   33 |     assert (sum_squares({-1,-5,2,-1,-5}) == -126);
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_142.cpp:25:
./CPP_142.cpp:34:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   34 |     assert (sum_squares({-56,-99,1,0,-2}) == 3030);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_142.cpp:25:
./CPP_142.cpp:35:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   35 |     assert (sum_squares({-1,0,0,0,0,0,0,0,-1}) == 0);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_142.cpp:25:
./CPP_142.cpp:36:89: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   36 |     assert (sum_squares({-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37}) == -14196);
      |                                                                                         ^
      |                                                                                         |
      |                                                                                         <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* arr, int size) {
      |                 ~~~~~^~~
In file included from ./CPP_142.cpp:25:
./CPP_142.cpp:37:107: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   37 |     assert (sum_squares({-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10}) == -1448);
      |                                                                                                           ^
      |                                                                                                           |
      |                                                                                                           <brace-enclosed initializer list>
./CPP_142.cpp:3:22: note:   initializing argument 1 of ‘int sum_squares(int*, int)’
    3 | int sum_squares(int* arr, int size) {
      |                 ~~~~~^~~


CPP_66.cpp: Compilation Failed
Error: ./CPP_66.cpp: In function ‘int digitSum(const char*)’:
./CPP_66.cpp:4:13: error: ‘strlen’ was not declared in this scope
    4 |   int len = strlen(str);
      |             ^~~~~~
./CPP_66.cpp:2:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    1 | #include <stdint.h>
  +++ |+#include <cstring>
    2 | 


CPP_114.cpp: Compilation Failed
Error: In file included from ./CPP_114.cpp:20:
./CPP_114.cpp: In function ‘int main()’:
./CPP_114.cpp:22:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   22 |     assert (minSubArraySum({2, 3, 4, 1, 2, 4}) == 1);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_114.cpp:2:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, long long int)’
    2 | long long minSubArraySum(long long* arr, long long n) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:23:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   23 |     assert (minSubArraySum({-1, -2, -3}) == -6);
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_114.cpp:2:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, long long int)’
    2 | long long minSubArraySum(long long* arr, long long n) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:24:48: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   24 |     assert (minSubArraySum({-1, -2, -3, 2, -10}) == -14);
      |                                                ^
      |                                                |
      |                                                <brace-enclosed initializer list>
./CPP_114.cpp:2:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, long long int)’
    2 | long long minSubArraySum(long long* arr, long long n) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:25:47: error: invalid conversion from ‘long int’ to ‘long long int*’ [-fpermissive]
   25 |     assert (minSubArraySum({-9999999999999999}) == -9999999999999999);
      |                                               ^
      |                                               |
      |                                               long int
./CPP_114.cpp:25:47: error: too few arguments to function ‘long long int minSubArraySum(long long int*, long long int)’
./CPP_114.cpp:2:11: note: declared here
    2 | long long minSubArraySum(long long* arr, long long n) {
      |           ^~~~~~~~~~~~~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:26:48: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   26 |     assert (minSubArraySum({0, 10, 20, 1000000}) == 0);
      |                                                ^
      |                                                |
      |                                                <brace-enclosed initializer list>
./CPP_114.cpp:2:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, long long int)’
    2 | long long minSubArraySum(long long* arr, long long n) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:27:48: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   27 |     assert (minSubArraySum({-1, -2, -3, 10, -5}) == -6);
      |                                                ^
      |                                                |
      |                                                <brace-enclosed initializer list>
./CPP_114.cpp:2:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, long long int)’
    2 | long long minSubArraySum(long long* arr, long long n) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:28:53: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   28 |     assert (minSubArraySum({100, -1, -2, -3, 10, -5}) == -6);
      |                                                     ^
      |                                                     |
      |                                                     <brace-enclosed initializer list>
./CPP_114.cpp:2:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, long long int)’
    2 | long long minSubArraySum(long long* arr, long long n) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:29:49: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   29 |     assert (minSubArraySum({10, 11, 13, 8, 3, 4}) == 3);
      |                                                 ^
      |                                                 |
      |                                                 <brace-enclosed initializer list>
./CPP_114.cpp:2:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, long long int)’
    2 | long long minSubArraySum(long long* arr, long long n) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:30:53: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   30 |     assert (minSubArraySum({100, -33, 32, -1, 0, -2}) == -33);
      |                                                     ^
      |                                                     |
      |                                                     <brace-enclosed initializer list>
./CPP_114.cpp:2:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, long long int)’
    2 | long long minSubArraySum(long long* arr, long long n) {
      |                          ~~~~~~~~~~~^~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:31:33: error: invalid conversion from ‘int’ to ‘long long int*’ [-fpermissive]
   31 |     assert (minSubArraySum({-10}) == -10);
      |                                 ^
      |                                 |
      |                                 int
./CPP_114.cpp:31:33: error: too few arguments to function ‘long long int minSubArraySum(long long int*, long long int)’
./CPP_114.cpp:2:11: note: declared here
    2 | long long minSubArraySum(long long* arr, long long n) {
      |           ^~~~~~~~~~~~~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:32:31: error: invalid conversion from ‘int’ to ‘long long int*’ [-fpermissive]
   32 |     assert (minSubArraySum({7}) == 7);
      |                               ^
      |                               |
      |                               int
./CPP_114.cpp:32:31: error: too few arguments to function ‘long long int minSubArraySum(long long int*, long long int)’
./CPP_114.cpp:2:11: note: declared here
    2 | long long minSubArraySum(long long* arr, long long n) {
      |           ^~~~~~~~~~~~~~
In file included from ./CPP_114.cpp:20:
./CPP_114.cpp:33:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘long long int*’
   33 |     assert (minSubArraySum({1, -1}) == -1);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_114.cpp:2:37: note:   initializing argument 1 of ‘long long int minSubArraySum(long long int*, long long int)’
    2 | long long minSubArraySum(long long* arr, long long n) {
      |                          ~~~~~~~~~~~^~~


CPP_85.cpp: Compilation Failed
Error: ./CPP_85.cpp: In function ‘int _Z3addSt6vectorIiSaIiEE(const std_vector*)’:
./CPP_85.cpp:4:42: error: invalid use of incomplete type ‘const struct std_vector’
    4 |   const int32_t* _2 = (const int32_t*)(_0->impl.data._M_finish);
      |                                          ^~
./CPP_85.cpp:3:42: note: forward declaration of ‘struct std_vector’
    3 | int _Z3addSt6vectorIiSaIiEE(const struct std_vector* _0) {
      |                                          ^~~~~~~~~~
./CPP_85.cpp:5:42: error: invalid use of incomplete type ‘const struct std_vector’
    5 |   const int32_t* _4 = (const int32_t*)(_0->impl.data._M_start);
      |                                          ^~
./CPP_85.cpp:3:42: note: forward declaration of ‘struct std_vector’
    3 | int _Z3addSt6vectorIiSaIiEE(const struct std_vector* _0) {
      |                                          ^~~~~~~~~~
In file included from ./CPP_85.cpp:27:
./CPP_85.cpp: In function ‘int main()’:
./CPP_85.cpp:29:13: error: ‘add’ was not declared in this scope
   29 |     assert (add({4, 88}) == 88);
      |             ^~~


CPP_46.cpp: Compilation Failed
Error: ./CPP_46.cpp:25:1: error: stray ‘`’ in program
   25 | ```
      | ^
./CPP_46.cpp:25:2: error: stray ‘`’ in program
   25 | ```
      |  ^
./CPP_46.cpp:25:3: error: stray ‘`’ in program
   25 | ```
      |   ^
./CPP_46.cpp:27:1: error: expected unqualified-id before ‘<’ token
   27 | <|im_end|>
      | ^
In file included from ./CPP_46.cpp:29:
./CPP_46.cpp: In function ‘int main()’:
./CPP_46.cpp:31:13: error: ‘fib4’ was not declared in this scope; did you mean ‘fib4i’?
   31 |     assert (fib4(5) == 4);
      |             ^~~~
./CPP_46.cpp:31:5: error: ‘__assert_fail’ was not declared in this scope
   31 |     assert (fib4(5) == 4);
      |     ^~~~~~


CPP_28.cpp: Compilation Failed
Error: ./CPP_28.cpp:38:1: error: stray ‘`’ in program
   38 | ```
      | ^
./CPP_28.cpp:38:2: error: stray ‘`’ in program
   38 | ```
      |  ^
./CPP_28.cpp:38:3: error: stray ‘`’ in program
   38 | ```
      |   ^
./CPP_28.cpp: In function ‘void concatenate(char**, _Vector_base*)’:
./CPP_28.cpp:25:22: error: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
   25 |   char * tmp = malloc(32);
      |                ~~~~~~^~~~
      |                      |
      |                      void*
./CPP_28.cpp: At global scope:
./CPP_28.cpp:39:1: error: expected unqualified-id before ‘<’ token
   39 | <|im_end|>
      | ^
In file included from ./CPP_28.cpp:41:
./CPP_28.cpp: In function ‘int main()’:
./CPP_28.cpp:43:27: error: too few arguments to function ‘void concatenate(char**, _Vector_base*)’
   43 |     assert (concatenate({}) == "");
      |                           ^
./CPP_28.cpp:24:6: note: declared here
   24 | void concatenate(char **result, _Vector_base *vec) {
      |      ^~~~~~~~~~~
In file included from ./CPP_28.cpp:41:
./CPP_28.cpp:43:5: error: ‘__assert_fail’ was not declared in this scope
   43 |     assert (concatenate({}) == "");
      |     ^~~~~~
./CPP_28.cpp:44:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘char**’
   44 |      assert (concatenate({"x", "y", "z"}) == "xyz");
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_28.cpp:24:25: note:   initializing argument 1 of ‘void concatenate(char**, _Vector_base*)’
   24 | void concatenate(char **result, _Vector_base *vec) {
      |                  ~~~~~~~^~~~~~
In file included from ./CPP_28.cpp:41:
./CPP_28.cpp:45:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘char**’
   45 |     assert (concatenate({"x", "y", "z", "w", "k"}) == "xyzwk");
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_28.cpp:24:25: note:   initializing argument 1 of ‘void concatenate(char**, _Vector_base*)’
   24 | void concatenate(char **result, _Vector_base *vec) {
      |                  ~~~~~~~^~~~~~


CPP_62.cpp: Compilation Failed
Error: ./CPP_62.cpp:3:33: error: expected ‘,’ or ‘...’ before ‘result’
    3 | void derivative(float* restrict result, const float* restrict input) {
      |                                 ^~~~~~
./CPP_62.cpp: In function ‘void derivative(float*)’:
./CPP_62.cpp:4:23: error: ‘result’ was not declared in this scope; did you mean ‘result_end’?
    4 |   float* result_end = result;
      |                       ^~~~~~
      |                       result_end
./CPP_62.cpp:5:28: error: ‘input’ was not declared in this scope
    5 |   const float* input_end = input;
      |                            ^~~~~
./CPP_62.cpp: At global scope:
./CPP_62.cpp:14:13: error: ‘vector’ was not declared in this scope
   14 | bool issame(vector<float> a,vector<float>b){
      |             ^~~~~~
./CPP_62.cpp:14:20: error: expected primary-expression before ‘float’
   14 | bool issame(vector<float> a,vector<float>b){
      |                    ^~~~~
./CPP_62.cpp:14:29: error: ‘vector’ was not declared in this scope
   14 | bool issame(vector<float> a,vector<float>b){
      |                             ^~~~~~
./CPP_62.cpp:14:36: error: expected primary-expression before ‘float’
   14 | bool issame(vector<float> a,vector<float>b){
      |                                    ^~~~~
./CPP_62.cpp:14:43: error: expression list treated as compound expression in initializer [-fpermissive]
   14 | bool issame(vector<float> a,vector<float>b){
      |                                           ^
In file included from ./CPP_62.cpp:13:
./CPP_62.cpp: In function ‘int main()’:
./CPP_62.cpp:23:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   23 |     assert (issame(derivative({3, 1, 2, 4, 5}) , {1, 4, 12, 20}));
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_62.cpp:3:24: note:   initializing argument 1 of ‘void derivative(float*)’
    3 | void derivative(float* restrict result, const float* restrict input) {
      |                 ~~~~~~~^~~~~~~~
In file included from ./CPP_62.cpp:13:
./CPP_62.cpp:23:64: error: ‘issame’ cannot be used as a function
   23 |     assert (issame(derivative({3, 1, 2, 4, 5}) , {1, 4, 12, 20}));
      |                                                                ^
./CPP_62.cpp:24:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   24 |     assert (issame(derivative({1, 2, 3}) , {2, 6}));
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_62.cpp:3:24: note:   initializing argument 1 of ‘void derivative(float*)’
    3 | void derivative(float* restrict result, const float* restrict input) {
      |                 ~~~~~~~^~~~~~~~
In file included from ./CPP_62.cpp:13:
./CPP_62.cpp:24:50: error: ‘issame’ cannot be used as a function
   24 |     assert (issame(derivative({1, 2, 3}) , {2, 6}));
      |                                                  ^
./CPP_62.cpp:25:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   25 |     assert (issame(derivative({3, 2, 1}) , {2, 2}));
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_62.cpp:3:24: note:   initializing argument 1 of ‘void derivative(float*)’
    3 | void derivative(float* restrict result, const float* restrict input) {
      |                 ~~~~~~~^~~~~~~~
In file included from ./CPP_62.cpp:13:
./CPP_62.cpp:25:50: error: ‘issame’ cannot be used as a function
   25 |     assert (issame(derivative({3, 2, 1}) , {2, 2}));
      |                                                  ^
./CPP_62.cpp:26:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘float*’
   26 |     assert (issame(derivative({3, 2, 1, 0, 4}) , {2, 2, 0, 16}));
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_62.cpp:3:24: note:   initializing argument 1 of ‘void derivative(float*)’
    3 | void derivative(float* restrict result, const float* restrict input) {
      |                 ~~~~~~~^~~~~~~~
In file included from ./CPP_62.cpp:13:
./CPP_62.cpp:26:63: error: ‘issame’ cannot be used as a function
   26 |     assert (issame(derivative({3, 2, 1, 0, 4}) , {2, 2, 0, 16}));
      |                                                               ^
./CPP_62.cpp:27:34: error: invalid conversion from ‘int’ to ‘float*’ [-fpermissive]
   27 |     assert (issame(derivative({1}) , {}));
      |                                  ^
      |                                  |
      |                                  int
./CPP_62.cpp:3:24: note:   initializing argument 1 of ‘void derivative(float*)’
    3 | void derivative(float* restrict result, const float* restrict input) {
      |                 ~~~~~~~^~~~~~~~
In file included from ./CPP_62.cpp:13:
./CPP_62.cpp:27:40: error: ‘issame’ cannot be used as a function
   27 |     assert (issame(derivative({1}) , {}));
      |                                        ^


CPP_36.cpp: Compilation Failed
Error: In file included from ./CPP_36.cpp:42:
./CPP_36.cpp: In function ‘int main()’:
./CPP_36.cpp:44:13: error: ‘fizz_buzz’ was not declared in this scope; did you mean ‘fizz_buzzi’?
   44 |     assert (fizz_buzz(50) == 0);
      |             ^~~~~~~~~


CPP_131.cpp: Compilation Failed
Error: ./CPP_131.cpp: In function ‘int digitsi(int)’:
./CPP_131.cpp:18:16: error: ‘strlen’ was not declared in this scope
   18 |     s.length = strlen(s.data);
      |                ^~~~~~
./CPP_131.cpp:4:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    3 | #include <stdarg.h>
  +++ |+#include <cstring>
    4 | 
./CPP_131.cpp: At global scope:
./CPP_131.cpp:48:5: error: redefinition of ‘int main()’
   48 | int main(){
      |     ^~~~
./CPP_131.cpp:39:5: note: ‘int main()’ previously defined here
   39 | int main() {
      |     ^~~~
In file included from ./CPP_131.cpp:47:
./CPP_131.cpp: In function ‘int main()’:
./CPP_131.cpp:49:13: error: ‘digits’ was not declared in this scope; did you mean ‘digitsi’?
   49 |     assert (digits(5) == 5);
      |             ^~~~~~


CPP_152.cpp: Compilation Failed
Error: ./CPP_152.cpp: In function ‘void _Z7compareSt6vectorIiSaIiEES1_(vector*, const vector*, const vector*)’:
./CPP_152.cpp:25:38: error: invalid conversion from ‘void*’ to ‘int*’ [-fpermissive]
   25 |             int* new_storage = malloc(new_capacity * sizeof(int));
      |                                ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                      |
      |                                      void*
./CPP_152.cpp: In function ‘void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(vector*, int*, int*)’:
./CPP_152.cpp:44:5: error: ‘ptrdiff_t’ was not declared in this scope; did you mean ‘std::ptrdiff_t’?
   44 |     ptrdiff_t __old_size = __old_finish - __old_start;
      |     ^~~~~~~~~
      |     std::ptrdiff_t
In file included from /usr/include/c++/9/cstdlib:41,
                 from /usr/include/c++/9/stdlib.h:36,
                 from ./CPP_152.cpp:1:
/usr/include/x86_64-linux-gnu/c++/9/bits/c++config.h:259:28: note: ‘std::ptrdiff_t’ declared here
  259 |   typedef __PTRDIFF_TYPE__ ptrdiff_t;
      |                            ^~~~~~~~~
./CPP_152.cpp:45:9: error: ‘__old_size’ was not declared in this scope
   45 |     if (__old_size == 9223372036854775804) {
      |         ^~~~~~~~~~
./CPP_152.cpp: At global scope:
./CPP_152.cpp:54:13: error: ‘vector’ is not a template
   54 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_152.cpp:54:27: error: ‘vector’ is not a template
   54 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_152.cpp: In function ‘bool issame(vector, vector)’:
./CPP_152.cpp:55:11: error: ‘struct vector’ has no member named ‘size’
   55 |     if (a.size()!=b.size()) return false;
      |           ^~~~
./CPP_152.cpp:55:21: error: ‘struct vector’ has no member named ‘size’
   55 |     if (a.size()!=b.size()) return false;
      |                     ^~~~
./CPP_152.cpp:56:22: error: ‘struct vector’ has no member named ‘size’
   56 |     for (int i=0;i<a.size();i++)
      |                      ^~~~
./CPP_152.cpp:58:10: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   58 |     if (a[i]!=b[i]) return false;
      |          ^
./CPP_152.cpp:58:16: error: no match for ‘operator[]’ (operand types are ‘vector’ and ‘int’)
   58 |     if (a[i]!=b[i]) return false;
      |                ^
In file included from ./CPP_152.cpp:53:
./CPP_152.cpp: In function ‘int main()’:
./CPP_152.cpp:63:20: error: ‘compare’ was not declared in this scope
   63 |     assert (issame(compare({1,2,3,4,5,1},{1,2,3,4,2,-2}),{0,0,0,0,3,3}));
      |                    ^~~~~~~


CPP_132.cpp: Compilation Failed
Error: ./CPP_132.cpp:3:32: error: ‘size_t’ has not been declared
    3 | int is_nested(const char* str, size_t len) {
      |                                ^~~~~~
./CPP_132.cpp: In function ‘int is_nested(const char*, int)’:
./CPP_132.cpp:10:8: error: ‘size_t’ was not declared in this scope
   10 |   for (size_t i = 0; i < len; ++i) {
      |        ^~~~~~
./CPP_132.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_132.cpp:10:22: error: ‘i’ was not declared in this scope
   10 |   for (size_t i = 0; i < len; ++i) {
      |                      ^
In file included from ./CPP_132.cpp:22:
./CPP_132.cpp: In function ‘int main()’:
./CPP_132.cpp:24:29: error: too few arguments to function ‘int is_nested(const char*, int)’
   24 |     assert (is_nested("[[]]") == true);
      |                             ^
./CPP_132.cpp:3:5: note: declared here
    3 | int is_nested(const char* str, size_t len) {
      |     ^~~~~~~~~
In file included from ./CPP_132.cpp:22:
./CPP_132.cpp:25:39: error: too few arguments to function ‘int is_nested(const char*, int)’
   25 |     assert (is_nested("[]]]]]]][[[[[]") == false);
      |                                       ^
./CPP_132.cpp:3:5: note: declared here
    3 | int is_nested(const char* str, size_t len) {
      |     ^~~~~~~~~
In file included from ./CPP_132.cpp:22:
./CPP_132.cpp:26:29: error: too few arguments to function ‘int is_nested(const char*, int)’
   26 |     assert (is_nested("[][]") == false);
      |                             ^
./CPP_132.cpp:3:5: note: declared here
    3 | int is_nested(const char* str, size_t len) {
      |     ^~~~~~~~~
In file included from ./CPP_132.cpp:22:
./CPP_132.cpp:27:29: error: too few arguments to function ‘int is_nested(const char*, int)’
   27 |     assert (is_nested(("[]")) == false);
      |                             ^
./CPP_132.cpp:3:5: note: declared here
    3 | int is_nested(const char* str, size_t len) {
      |     ^~~~~~~~~
In file included from ./CPP_132.cpp:22:
./CPP_132.cpp:28:33: error: too few arguments to function ‘int is_nested(const char*, int)’
   28 |     assert (is_nested("[[[[]]]]") == true);
      |                                 ^
./CPP_132.cpp:3:5: note: declared here
    3 | int is_nested(const char* str, size_t len) {
      |     ^~~~~~~~~
In file included from ./CPP_132.cpp:22:
./CPP_132.cpp:29:36: error: too few arguments to function ‘int is_nested(const char*, int)’
   29 |     assert (is_nested("[]]]]]]]]]]") == false);
      |                                    ^
./CPP_132.cpp:3:5: note: declared here
    3 | int is_nested(const char* str, size_t len) {
      |     ^~~~~~~~~
In file included from ./CPP_132.cpp:22:
./CPP_132.cpp:30:33: error: too few arguments to function ‘int is_nested(const char*, int)’
   30 |     assert (is_nested("[][][[]]") == true);
      |                                 ^
./CPP_132.cpp:3:5: note: declared here
    3 | int is_nested(const char* str, size_t len) {
      |     ^~~~~~~~~
In file included from ./CPP_132.cpp:22:
./CPP_132.cpp:31:28: error: too few arguments to function ‘int is_nested(const char*, int)’
   31 |     assert (is_nested("[[]") == false);
      |                            ^
./CPP_132.cpp:3:5: note: declared here
    3 | int is_nested(const char* str, size_t len) {
      |     ^~~~~~~~~
In file included from ./CPP_132.cpp:22:
./CPP_132.cpp:32:28: error: too few arguments to function ‘int is_nested(const char*, int)’
   32 |     assert (is_nested("[]]") == false);
      |                            ^
./CPP_132.cpp:3:5: note: declared here
    3 | int is_nested(const char* str, size_t len) {
      |     ^~~~~~~~~
In file included from ./CPP_132.cpp:22:
./CPP_132.cpp:33:31: error: too few arguments to function ‘int is_nested(const char*, int)’
   33 |     assert (is_nested("[[]][[") == true);
      |                               ^
./CPP_132.cpp:3:5: note: declared here
    3 | int is_nested(const char* str, size_t len) {
      |     ^~~~~~~~~
In file included from ./CPP_132.cpp:22:
./CPP_132.cpp:34:31: error: too few arguments to function ‘int is_nested(const char*, int)’
   34 |     assert (is_nested("[[][]]") == true);
      |                               ^
./CPP_132.cpp:3:5: note: declared here
    3 | int is_nested(const char* str, size_t len) {
      |     ^~~~~~~~~
In file included from ./CPP_132.cpp:22:
./CPP_132.cpp:35:25: error: too few arguments to function ‘int is_nested(const char*, int)’
   35 |     assert (is_nested("") == false);
      |                         ^
./CPP_132.cpp:3:5: note: declared here
    3 | int is_nested(const char* str, size_t len) {
      |     ^~~~~~~~~
In file included from ./CPP_132.cpp:22:
./CPP_132.cpp:36:33: error: too few arguments to function ‘int is_nested(const char*, int)’
   36 |     assert (is_nested("[[[[[[[[") == false);
      |                                 ^
./CPP_132.cpp:3:5: note: declared here
    3 | int is_nested(const char* str, size_t len) {
      |     ^~~~~~~~~
In file included from ./CPP_132.cpp:22:
./CPP_132.cpp:37:33: error: too few arguments to function ‘int is_nested(const char*, int)’
   37 |     assert (is_nested("]]]]]]]]") == false);
      |                                 ^
./CPP_132.cpp:3:5: note: declared here
    3 | int is_nested(const char* str, size_t len) {
      |     ^~~~~~~~~


CPP_68.cpp: Compilation Failed
Error: ./CPP_68.cpp: In function ‘void pluck_std_vector(std_vector*, const std_vector*)’:
./CPP_68.cpp:13:24: error: ‘NULL’ was not declared in this scope
   13 |     output->_M_start = NULL;
      |                        ^~~~
./CPP_68.cpp:2:1: note: ‘NULL’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_68.cpp: At global scope:
./CPP_68.cpp:37:13: error: ‘vector’ was not declared in this scope; did you mean ‘std_vector’?
   37 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
      |             std_vector
./CPP_68.cpp:37:20: error: expected primary-expression before ‘int’
   37 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_68.cpp:37:27: error: ‘vector’ was not declared in this scope; did you mean ‘std_vector’?
   37 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
      |                           std_vector
./CPP_68.cpp:37:34: error: expected primary-expression before ‘int’
   37 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_68.cpp:37:39: error: expression list treated as compound expression in initializer [-fpermissive]
   37 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_68.cpp:36:
./CPP_68.cpp: In function ‘int main()’:
./CPP_68.cpp:46:20: error: ‘pluck’ was not declared in this scope
   46 |     assert (issame(pluck({4,2,3}) , {2, 1}));
      |                    ^~~~~
./CPP_68.cpp:46:43: error: ‘issame’ cannot be used as a function
   46 |     assert (issame(pluck({4,2,3}) , {2, 1}));
      |                                           ^
./CPP_68.cpp:47:43: error: ‘issame’ cannot be used as a function
   47 |     assert (issame(pluck({1,2,3}) , {2, 1}));
      |                                           ^
./CPP_68.cpp:48:34: error: ‘issame’ cannot be used as a function
   48 |     assert (issame(pluck({}) , {}));
      |                                  ^
./CPP_68.cpp:49:54: error: ‘issame’ cannot be used as a function
   49 |     assert (issame(pluck({5, 0, 3, 0, 4, 2}) , {0, 1}));
      |                                                      ^
./CPP_68.cpp:50:54: error: ‘issame’ cannot be used as a function
   50 |     assert (issame(pluck({1, 2, 3, 0, 5, 3}) , {0, 3}));
      |                                                      ^
./CPP_68.cpp:51:51: error: ‘issame’ cannot be used as a function
   51 |     assert (issame(pluck({5, 4, 8, 4 ,8}) , {4, 1}));
      |                                                   ^
./CPP_68.cpp:52:48: error: ‘issame’ cannot be used as a function
   52 |     assert (issame(pluck({7, 6, 7, 1}) , {6, 1}));
      |                                                ^
./CPP_68.cpp:53:44: error: ‘issame’ cannot be used as a function
   53 |     assert (issame(pluck({7, 9, 7, 1}) , {}));
      |                                            ^


CPP_163.cpp: Compilation Failed
Error: ./CPP_163.cpp:7:14: error: typedef name may not be a nested-name-specifier
    7 | } __gnu_cxx::_Vector_base;
      |              ^~~~~~~~~~~~
./CPP_163.cpp:10:14: error: ‘_Vector_base’ in namespace ‘__gnu_cxx’ does not name a type
   10 |   __gnu_cxx::_Vector_base _M_impl;
      |              ^~~~~~~~~~~~
./CPP_163.cpp:11:8: error: typedef name may not be a nested-name-specifier
   11 | } std::vector;
      |        ^~~~~~
./CPP_163.cpp:13:31: error: variable or field ‘generate_integersii’ declared void
   13 | void generate_integersii(std::vector* __ret, int __a, int __b) {
      |                               ^~~~~~
./CPP_163.cpp:13:31: error: ‘vector’ is not a member of ‘std’
./CPP_163.cpp:2:1: note: ‘std::vector’ is defined in header ‘<vector>’; did you forget to ‘#include <vector>’?
    1 | #include <stdlib.h>
  +++ |+#include <vector>
    2 | 
./CPP_163.cpp:13:39: error: ‘__ret’ was not declared in this scope
   13 | void generate_integersii(std::vector* __ret, int __a, int __b) {
      |                                       ^~~~~
./CPP_163.cpp:13:46: error: expected primary-expression before ‘int’
   13 | void generate_integersii(std::vector* __ret, int __a, int __b) {
      |                                              ^~~
./CPP_163.cpp:13:55: error: expected primary-expression before ‘int’
   13 | void generate_integersii(std::vector* __ret, int __a, int __b) {
      |                                                       ^~~
./CPP_163.cpp: In function ‘int main()’:
./CPP_163.cpp:90:8: error: ‘vector’ is not a member of ‘std’
   90 |   std::vector __ret;
      |        ^~~~~~
./CPP_163.cpp:90:8: note: ‘std::vector’ is defined in header ‘<vector>’; did you forget to ‘#include <vector>’?
./CPP_163.cpp:91:24: error: ‘__ret’ was not declared in this scope
   91 |   generate_integersii(&__ret, 10, 5);
      |                        ^~~~~
./CPP_163.cpp:91:3: error: ‘generate_integersii’ was not declared in this scope
   91 |   generate_integersii(&__ret, 10, 5);
      |   ^~~~~~~~~~~~~~~~~~~
./CPP_163.cpp: At global scope:
./CPP_163.cpp:97:13: error: invalid template-id
   97 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_163.cpp:97:26: error: expected ‘)’ before ‘,’ token
   97 | bool issame(vector<int> a,vector<int>b){
      |            ~             ^
      |                          )
./CPP_163.cpp:97:33: error: expected initializer before ‘<’ token
   97 | bool issame(vector<int> a,vector<int>b){
      |                                 ^
./CPP_163.cpp:105:5: error: redefinition of ‘int main()’
  105 | int main(){
      |     ^~~~
./CPP_163.cpp:89:5: note: ‘int main()’ previously defined here
   89 | int main() {
      |     ^~~~
In file included from ./CPP_163.cpp:96:
./CPP_163.cpp: In function ‘int main()’:
./CPP_163.cpp:106:20: error: ‘generate_integers’ was not declared in this scope
  106 |     assert (issame(generate_integers(2, 10) , {2, 4, 6, 8}));
      |                    ^~~~~~~~~~~~~~~~~


CPP_74.cpp: Compilation Failed
Error: ./CPP_74.cpp:12:21: error: field ‘base’ has incomplete type ‘std___Vector_base’
   12 |   std___Vector_base base;
      |                     ^~~~
./CPP_74.cpp:4:16: note: forward declaration of ‘std___Vector_base’ {aka ‘struct std___Vector_base’}
    4 | typedef struct std___Vector_base std___Vector_base;
      |                ^~~~~~~~~~~~~~~~~
./CPP_74.cpp:16:34: error: field ‘impl’ has incomplete type ‘std___Vector_base__Vector_impl’
   16 |   std___Vector_base__Vector_impl impl;
      |                                  ^~~~
./CPP_74.cpp:5:16: note: forward declaration of ‘std___Vector_base__Vector_impl’ {aka ‘struct std___Vector_base__Vector_impl’}
    5 | typedef struct std___Vector_base__Vector_impl std___Vector_base__Vector_impl;
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_74.cpp:20:39: error: field ‘data’ has incomplete type ‘std___Vector_base__Vector_impl_data’
   20 |   std___Vector_base__Vector_impl_data data;
      |                                       ^~~~
./CPP_74.cpp:6:16: note: forward declaration of ‘std___Vector_base__Vector_impl_data’ {aka ‘struct std___Vector_base__Vector_impl_data’}
    6 | typedef struct std___Vector_base__Vector_impl_data std___Vector_base__Vector_impl_data;
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_74.cpp:30:42: error: field ‘_Alloc_hider’ has incomplete type ‘std___cxx11__basic_string__Alloc_hider’
   30 |   std___cxx11__basic_string__Alloc_hider _Alloc_hider;
      |                                          ^~~~~~~~~~~~
./CPP_74.cpp:8:16: note: forward declaration of ‘std___cxx11__basic_string__Alloc_hider’ {aka ‘struct std___cxx11__basic_string__Alloc_hider’}
    8 | typedef struct std___cxx11__basic_string__Alloc_hider std___cxx11__basic_string__Alloc_hider;
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_74.cpp:32:34: error: field ‘_anon’ has incomplete type ‘std___cxx11__basic_string_anon’
   32 |   std___cxx11__basic_string_anon _anon;
      |                                  ^~~~~
./CPP_74.cpp:9:15: note: forward declaration of ‘std___cxx11__basic_string_anon’ {aka ‘union std___cxx11__basic_string_anon’}
    9 | typedef union std___cxx11__basic_string_anon std___cxx11__basic_string_anon;
      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_74.cpp: In function ‘void total_match(std_vector*, std_vector*, std_vector*)’:
./CPP_74.cpp:84:1: error: jump to label ‘match_end’
   84 | match_end:
      | ^~~~~~~~~
./CPP_74.cpp:58:10: note:   from here
   58 |     goto match_end;
      |          ^~~~~~~~~
./CPP_74.cpp:68:7: note:   crosses initialization of ‘int v2_total’
   68 |   int v2_total = 0;
      |       ^~~~~~~~
./CPP_74.cpp:63:7: note:   crosses initialization of ‘int v1_total’
   63 |   int v1_total = 0;
      |       ^~~~~~~~
./CPP_74.cpp:61:10: note:   crosses initialization of ‘size_t match_size2’
   61 |   size_t match_size2 = (v2_size > 0) ? v2_size : 1;
      |          ^~~~~~~~~~~
./CPP_74.cpp:60:10: note:   crosses initialization of ‘size_t v2_size’
   60 |   size_t v2_size = v2_len / sizeof(std___cxx11__basic_string);
      |          ^~~~~~~
./CPP_74.cpp:84:1: error: jump to label ‘match_end’
   84 | match_end:
      | ^~~~~~~~~
./CPP_74.cpp:49:10: note:   from here
   49 |     goto match_end;
      |          ^~~~~~~~~
./CPP_74.cpp:68:7: note:   crosses initialization of ‘int v2_total’
   68 |   int v2_total = 0;
      |       ^~~~~~~~
./CPP_74.cpp:63:7: note:   crosses initialization of ‘int v1_total’
   63 |   int v1_total = 0;
      |       ^~~~~~~~
./CPP_74.cpp:61:10: note:   crosses initialization of ‘size_t match_size2’
   61 |   size_t match_size2 = (v2_size > 0) ? v2_size : 1;
      |          ^~~~~~~~~~~
./CPP_74.cpp:60:10: note:   crosses initialization of ‘size_t v2_size’
   60 |   size_t v2_size = v2_len / sizeof(std___cxx11__basic_string);
      |          ^~~~~~~
./CPP_74.cpp:56:13: note:   crosses initialization of ‘ptrdiff_t v2_len’
   56 |   ptrdiff_t v2_len = v2_end - v2_begin;
      |             ^~~~~~
./CPP_74.cpp:55:30: note:   crosses initialization of ‘std___cxx11__basic_string* v2_begin’
   55 |   std___cxx11__basic_string *v2_begin = v2->base.impl.data.begin;
      |                              ^~~~~~~~
./CPP_74.cpp:54:30: note:   crosses initialization of ‘std___cxx11__basic_string* v2_end’
   54 |   std___cxx11__basic_string *v2_end = v2->base.impl.data.end;
      |                              ^~~~~~
./CPP_74.cpp:52:10: note:   crosses initialization of ‘size_t match_size’
   52 |   size_t match_size = (v1_size > 0) ? v1_size : 1;
      |          ^~~~~~~~~~
./CPP_74.cpp:51:10: note:   crosses initialization of ‘size_t v1_size’
   51 |   size_t v1_size = v1_len / sizeof(std___cxx11__basic_string);
      |          ^~~~~~~
./CPP_74.cpp: At global scope:
./CPP_74.cpp:93:13: error: ‘vector’ was not declared in this scope; did you mean ‘std_vector’?
   93 | bool issame(vector<string> a,vector<string>b){
      |             ^~~~~~
      |             std_vector
./CPP_74.cpp:93:20: error: ‘string’ was not declared in this scope
   93 | bool issame(vector<string> a,vector<string>b){
      |                    ^~~~~~
./CPP_74.cpp:93:28: error: ‘a’ was not declared in this scope
   93 | bool issame(vector<string> a,vector<string>b){
      |                            ^
./CPP_74.cpp:93:30: error: ‘vector’ was not declared in this scope; did you mean ‘std_vector’?
   93 | bool issame(vector<string> a,vector<string>b){
      |                              ^~~~~~
      |                              std_vector
./CPP_74.cpp:93:37: error: ‘string’ was not declared in this scope
   93 | bool issame(vector<string> a,vector<string>b){
      |                                     ^~~~~~
./CPP_74.cpp:93:44: error: ‘b’ was not declared in this scope
   93 | bool issame(vector<string> a,vector<string>b){
      |                                            ^
./CPP_74.cpp:93:45: error: expression list treated as compound expression in initializer [-fpermissive]
   93 | bool issame(vector<string> a,vector<string>b){
      |                                             ^
In file included from ./CPP_74.cpp:92:
./CPP_74.cpp: In function ‘int main()’:
./CPP_74.cpp:102:38: error: too few arguments to function ‘void total_match(std_vector*, std_vector*, std_vector*)’
  102 |     assert (issame(total_match({}, {}) , {}));
      |                                      ^
./CPP_74.cpp:44:6: note: declared here
   44 | void total_match(std_vector *result, std_vector *v1, std_vector *v2) {
      |      ^~~~~~~~~~~
In file included from ./CPP_74.cpp:92:
./CPP_74.cpp:102:44: error: ‘issame’ cannot be used as a function
  102 |     assert (issame(total_match({}, {}) , {}));
      |                                            ^
./CPP_74.cpp:103:61: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’ {aka ‘std__vector*’}
  103 |     assert (issame(total_match({"hi", "admin"}, {"hi", "hi"}) , {"hi", "hi"}));
      |                                                             ^
      |                                                             |
      |                                                             <brace-enclosed initializer list>
./CPP_74.cpp:44:30: note:   initializing argument 1 of ‘void total_match(std_vector*, std_vector*, std_vector*)’
   44 | void total_match(std_vector *result, std_vector *v1, std_vector *v2) {
      |                  ~~~~~~~~~~~~^~~~~~
In file included from ./CPP_74.cpp:92:
./CPP_74.cpp:103:77: error: ‘issame’ cannot be used as a function
  103 |     assert (issame(total_match({"hi", "admin"}, {"hi", "hi"}) , {"hi", "hi"}));
      |                                                                             ^
./CPP_74.cpp:104:81: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’ {aka ‘std__vector*’}
  104 |     assert (issame(total_match({"hi", "admin"}, {"hi", "hi", "admin", "project"}) , {"hi", "admin"}));
      |                                                                                 ^
      |                                                                                 |
      |                                                                                 <brace-enclosed initializer list>
./CPP_74.cpp:44:30: note:   initializing argument 1 of ‘void total_match(std_vector*, std_vector*, std_vector*)’
   44 | void total_match(std_vector *result, std_vector *v1, std_vector *v2) {
      |                  ~~~~~~~~~~~~^~~~~~
In file included from ./CPP_74.cpp:92:
./CPP_74.cpp:104:100: error: ‘issame’ cannot be used as a function
  104 |     assert (issame(total_match({"hi", "admin"}, {"hi", "hi", "admin", "project"}) , {"hi", "admin"}));
      |                                                                                                    ^
./CPP_74.cpp:105:64: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’ {aka ‘std__vector*’}
  105 |     assert (issame(total_match({"4"}, {"1", "2", "3", "4", "5"}) , {"4"}));
      |                                                                ^
      |                                                                |
      |                                                                <brace-enclosed initializer list>
./CPP_74.cpp:44:30: note:   initializing argument 1 of ‘void total_match(std_vector*, std_vector*, std_vector*)’
   44 | void total_match(std_vector *result, std_vector *v1, std_vector *v2) {
      |                  ~~~~~~~~~~~~^~~~~~
In file included from ./CPP_74.cpp:92:
./CPP_74.cpp:105:73: error: ‘issame’ cannot be used as a function
  105 |     assert (issame(total_match({"4"}, {"1", "2", "3", "4", "5"}) , {"4"}));
      |                                                                         ^
./CPP_74.cpp:106:61: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’ {aka ‘std__vector*’}
  106 |     assert (issame(total_match({"hi", "admin"}, {"hI", "Hi"}) , {"hI", "Hi"}));
      |                                                             ^
      |                                                             |
      |                                                             <brace-enclosed initializer list>
./CPP_74.cpp:44:30: note:   initializing argument 1 of ‘void total_match(std_vector*, std_vector*, std_vector*)’
   44 | void total_match(std_vector *result, std_vector *v1, std_vector *v2) {
      |                  ~~~~~~~~~~~~^~~~~~
In file included from ./CPP_74.cpp:92:
./CPP_74.cpp:106:77: error: ‘issame’ cannot be used as a function
  106 |     assert (issame(total_match({"hi", "admin"}, {"hI", "Hi"}) , {"hI", "Hi"}));
      |                                                                             ^
./CPP_74.cpp:107:67: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’ {aka ‘std__vector*’}
  107 |     assert (issame(total_match({"hi", "admin"}, {"hI", "hi", "hi"}) , {"hI", "hi", "hi"}));
      |                                                                   ^
      |                                                                   |
      |                                                                   <brace-enclosed initializer list>
./CPP_74.cpp:44:30: note:   initializing argument 1 of ‘void total_match(std_vector*, std_vector*, std_vector*)’
   44 | void total_match(std_vector *result, std_vector *v1, std_vector *v2) {
      |                  ~~~~~~~~~~~~^~~~~~
In file included from ./CPP_74.cpp:92:
./CPP_74.cpp:107:89: error: ‘issame’ cannot be used as a function
  107 |     assert (issame(total_match({"hi", "admin"}, {"hI", "hi", "hi"}) , {"hI", "hi", "hi"}));
      |                                                                                         ^
./CPP_74.cpp:108:68: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’ {aka ‘std__vector*’}
  108 |     assert (issame(total_match({"hi", "admin"}, {"hI", "hi", "hii"}) , {"hi", "admin"}));
      |                                                                    ^
      |                                                                    |
      |                                                                    <brace-enclosed initializer list>
./CPP_74.cpp:44:30: note:   initializing argument 1 of ‘void total_match(std_vector*, std_vector*, std_vector*)’
   44 | void total_match(std_vector *result, std_vector *v1, std_vector *v2) {
      |                  ~~~~~~~~~~~~^~~~~~
In file included from ./CPP_74.cpp:92:
./CPP_74.cpp:108:87: error: ‘issame’ cannot be used as a function
  108 |     assert (issame(total_match({"hi", "admin"}, {"hI", "hi", "hii"}) , {"hi", "admin"}));
      |                                                                                       ^
./CPP_74.cpp:109:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’ {aka ‘std__vector*’}
  109 |     assert (issame(total_match({}, {"this"}) , {}));
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_74.cpp:44:50: note:   initializing argument 2 of ‘void total_match(std_vector*, std_vector*, std_vector*)’
   44 | void total_match(std_vector *result, std_vector *v1, std_vector *v2) {
      |                                      ~~~~~~~~~~~~^~
In file included from ./CPP_74.cpp:92:
./CPP_74.cpp:109:50: error: ‘issame’ cannot be used as a function
  109 |     assert (issame(total_match({}, {"this"}) , {}));
      |                                                  ^
./CPP_74.cpp:110:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘std_vector*’ {aka ‘std__vector*’}
  110 |     assert (issame(total_match({"this"}, {}) , {}));
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_74.cpp:44:30: note:   initializing argument 1 of ‘void total_match(std_vector*, std_vector*, std_vector*)’
   44 | void total_match(std_vector *result, std_vector *v1, std_vector *v2) {
      |                  ~~~~~~~~~~~~^~~~~~
In file included from ./CPP_74.cpp:92:
./CPP_74.cpp:110:50: error: ‘issame’ cannot be used as a function
  110 |     assert (issame(total_match({"this"}, {}) , {}));
      |                                                  ^


CPP_54.cpp: Compilation Failed
Error: ./CPP_54.cpp: In function ‘int same_chars(const char*, const char*)’:
./CPP_54.cpp:10:3: error: ‘size_t’ was not declared in this scope
   10 |   size_t len1 = *((uint64_t*)s1);
      |   ^~~~~~
./CPP_54.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_54.cpp:11:9: error: expected ‘;’ before ‘len2’
   11 |   size_t len2 = *((uint64_t*)s2);
      |         ^~~~~
      |         ;
./CPP_54.cpp:13:7: error: ‘len1’ was not declared in this scope
   13 |   if (len1 > 3) {
      |       ^~~~
./CPP_54.cpp:14:16: error: expected ‘;’ before ‘i’
   14 |     for (size_t i = 0; i < len1 / 4; i++) {
      |                ^~
      |                ;
./CPP_54.cpp:14:24: error: ‘i’ was not declared in this scope
   14 |     for (size_t i = 0; i < len1 / 4; i++) {
      |                        ^
./CPP_54.cpp:24:7: error: ‘len1’ was not declared in this scope
   24 |   if (len1 > 0) {
      |       ^~~~
./CPP_54.cpp:25:16: error: expected ‘;’ before ‘i’
   25 |     for (size_t i = 0; i < len1; i++) {
      |                ^~
      |                ;
./CPP_54.cpp:25:24: error: ‘i’ was not declared in this scope
   25 |     for (size_t i = 0; i < len1; i++) {
      |                        ^


CPP_135.cpp: Compilation Failed
Error: ./CPP_135.cpp: In function ‘int can_arrange(int*, int*)’:
./CPP_135.cpp:8:3: error: ‘size_t’ was not declared in this scope
    8 |   size_t size = (end - begin) / 2;
      |   ^~~~~~
./CPP_135.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_135.cpp:9:7: error: ‘size’ was not declared in this scope
    9 |   if (size == 0) {
      |       ^~~~
./CPP_135.cpp:14:14: error: expected ‘;’ before ‘i’
   14 |   for (size_t i = 0; i < size; ++i) {
      |              ^~
      |              ;
./CPP_135.cpp:14:22: error: ‘i’ was not declared in this scope
   14 |   for (size_t i = 0; i < size; ++i) {
      |                      ^
./CPP_135.cpp:14:26: error: ‘size’ was not declared in this scope
   14 |   for (size_t i = 0; i < size; ++i) {
      |                          ^~~~
In file included from ./CPP_135.cpp:23:
./CPP_135.cpp: In function ‘int main()’:
./CPP_135.cpp:25:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   25 |     assert (can_arrange({1,2,4,3,5})==3);
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_135.cpp:3:22: note:   initializing argument 1 of ‘int can_arrange(int*, int*)’
    3 | int can_arrange(int* begin, int* end) {
      |                 ~~~~~^~~~~
In file included from ./CPP_135.cpp:23:
./CPP_135.cpp:26:34: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   26 |     assert (can_arrange({1,2,4,5})==-1);
      |                                  ^
      |                                  |
      |                                  <brace-enclosed initializer list>
./CPP_135.cpp:3:22: note:   initializing argument 1 of ‘int can_arrange(int*, int*)’
    3 | int can_arrange(int* begin, int* end) {
      |                 ~~~~~^~~~~
In file included from ./CPP_135.cpp:23:
./CPP_135.cpp:27:45: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   27 |     assert (can_arrange({1,4,2,5,6,7,8,9,10})==2);
      |                                             ^
      |                                             |
      |                                             <brace-enclosed initializer list>
./CPP_135.cpp:3:22: note:   initializing argument 1 of ‘int can_arrange(int*, int*)’
    3 | int can_arrange(int* begin, int* end) {
      |                 ~~~~~^~~~~
In file included from ./CPP_135.cpp:23:
./CPP_135.cpp:28:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   28 |     assert (can_arrange({4,8,5,7,3})==4);
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_135.cpp:3:22: note:   initializing argument 1 of ‘int can_arrange(int*, int*)’
    3 | int can_arrange(int* begin, int* end) {
      |                 ~~~~~^~~~~
In file included from ./CPP_135.cpp:23:
./CPP_135.cpp:29:27: error: too few arguments to function ‘int can_arrange(int*, int*)’
   29 |     assert (can_arrange({})==-1);
      |                           ^
./CPP_135.cpp:3:5: note: declared here
    3 | int can_arrange(int* begin, int* end) {
      |     ^~~~~~~~~~~


CPP_8.cpp: Compilation Failed
Error: ./CPP_8.cpp:16:13: error: ‘vector’ was not declared in this scope
   16 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_8.cpp:16:20: error: expected primary-expression before ‘int’
   16 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_8.cpp:16:27: error: ‘vector’ was not declared in this scope
   16 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_8.cpp:16:34: error: expected primary-expression before ‘int’
   16 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_8.cpp:16:39: error: expression list treated as compound expression in initializer [-fpermissive]
   16 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_8.cpp:15:
./CPP_8.cpp: In function ‘int main()’:
./CPP_8.cpp:25:34: error: too few arguments to function ‘void sum_product(int*, int*, int)’
   25 |     assert (issame(sum_product({}) ,{0, 1}));
      |                                  ^
./CPP_8.cpp:3:6: note: declared here
    3 | void sum_product(int *result, int *a, int size) {
      |      ^~~~~~~~~~~
In file included from ./CPP_8.cpp:15:
./CPP_8.cpp:25:43: error: ‘issame’ cannot be used as a function
   25 |     assert (issame(sum_product({}) ,{0, 1}));
      |                                           ^
./CPP_8.cpp:26:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   26 |     assert (issame(sum_product({1, 1, 1}), {3, 1}));
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_8.cpp:3:23: note:   initializing argument 1 of ‘void sum_product(int*, int*, int)’
    3 | void sum_product(int *result, int *a, int size) {
      |                  ~~~~~^~~~~~
In file included from ./CPP_8.cpp:15:
./CPP_8.cpp:26:50: error: ‘issame’ cannot be used as a function
   26 |     assert (issame(sum_product({1, 1, 1}), {3, 1}));
      |                                                  ^
./CPP_8.cpp:27:40: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   27 |     assert (issame(sum_product({100, 0}),{100, 0}));
      |                                        ^
      |                                        |
      |                                        <brace-enclosed initializer list>
./CPP_8.cpp:3:23: note:   initializing argument 1 of ‘void sum_product(int*, int*, int)’
    3 | void sum_product(int *result, int *a, int size) {
      |                  ~~~~~^~~~~~
In file included from ./CPP_8.cpp:15:
./CPP_8.cpp:27:50: error: ‘issame’ cannot be used as a function
   27 |     assert (issame(sum_product({100, 0}),{100, 0}));
      |                                                  ^
./CPP_8.cpp:28:42: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   28 |      assert (issame(sum_product({3, 5, 7}) , {3 + 5 + 7, 3 * 5 * 7}));
      |                                          ^
      |                                          |
      |                                          <brace-enclosed initializer list>
./CPP_8.cpp:3:23: note:   initializing argument 1 of ‘void sum_product(int*, int*, int)’
    3 | void sum_product(int *result, int *a, int size) {
      |                  ~~~~~^~~~~~
In file included from ./CPP_8.cpp:15:
./CPP_8.cpp:28:68: error: ‘issame’ cannot be used as a function
   28 |      assert (issame(sum_product({3, 5, 7}) , {3 + 5 + 7, 3 * 5 * 7}));
      |                                                                    ^
./CPP_8.cpp:29:38: error: invalid conversion from ‘int’ to ‘int*’ [-fpermissive]
   29 |       assert (issame(sum_product({10}) ,{10, 10}));
      |                                      ^
      |                                      |
      |                                      int
./CPP_8.cpp:29:38: error: too few arguments to function ‘void sum_product(int*, int*, int)’
./CPP_8.cpp:3:6: note: declared here
    3 | void sum_product(int *result, int *a, int size) {
      |      ^~~~~~~~~~~
In file included from ./CPP_8.cpp:15:
./CPP_8.cpp:29:49: error: ‘issame’ cannot be used as a function
   29 |       assert (issame(sum_product({10}) ,{10, 10}));
      |                                                 ^


CPP_42.cpp: Compilation Failed
Error: ./CPP_42.cpp:15:13: error: ‘vector’ was not declared in this scope
   15 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_42.cpp:15:20: error: expected primary-expression before ‘int’
   15 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_42.cpp:15:27: error: ‘vector’ was not declared in this scope
   15 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_42.cpp:15:34: error: expected primary-expression before ‘int’
   15 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_42.cpp:15:39: error: expression list treated as compound expression in initializer [-fpermissive]
   15 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_42.cpp:14:
./CPP_42.cpp: In function ‘int main()’:
./CPP_42.cpp:24:32: error: too few arguments to function ‘void incr_list(int*, int*)’
   24 |     assert (issame(incr_list({}) , {}));
      |                                ^
./CPP_42.cpp:4:6: note: declared here
    4 | void incr_list(int *ret_vec, int *vec) {
      |      ^~~~~~~~~
In file included from ./CPP_42.cpp:14:
./CPP_42.cpp:24:38: error: ‘issame’ cannot be used as a function
   24 |     assert (issame(incr_list({}) , {}));
      |                                      ^
./CPP_42.cpp:25:39: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   25 |     assert (issame(incr_list({3, 2, 1}) , {4, 3, 2}));
      |                                       ^
      |                                       |
      |                                       <brace-enclosed initializer list>
./CPP_42.cpp:4:21: note:   initializing argument 1 of ‘void incr_list(int*, int*)’
    4 | void incr_list(int *ret_vec, int *vec) {
      |                ~~~~~^~~~~~~
In file included from ./CPP_42.cpp:14:
./CPP_42.cpp:25:52: error: ‘issame’ cannot be used as a function
   25 |     assert (issame(incr_list({3, 2, 1}) , {4, 3, 2}));
      |                                                    ^
./CPP_42.cpp:26:59: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   26 |     assert (issame(incr_list({5, 2, 5, 2, 3, 3, 9, 0, 123}) , {6, 3, 6, 3, 4, 4, 10, 1, 124}));
      |                                                           ^
      |                                                           |
      |                                                           <brace-enclosed initializer list>
./CPP_42.cpp:4:21: note:   initializing argument 1 of ‘void incr_list(int*, int*)’
    4 | void incr_list(int *ret_vec, int *vec) {
      |                ~~~~~^~~~~~~
In file included from ./CPP_42.cpp:14:
./CPP_42.cpp:26:93: error: ‘issame’ cannot be used as a function
   26 |     assert (issame(incr_list({5, 2, 5, 2, 3, 3, 9, 0, 123}) , {6, 3, 6, 3, 4, 4, 10, 1, 124}));
      |                                                                                             ^


CPP_133.cpp: Compilation Failed
Error: ./CPP_133.cpp: In function ‘int sum_squares(const std::vector<float>&)’:
./CPP_133.cpp:5:25: error: invalid conversion from ‘const float*’ to ‘float*’ [-fpermissive]
    5 |   float* end = v.data() + v.size();
      |                ~~~~~~~~~^~~~~~~~~~
      |                         |
      |                         const float*
./CPP_133.cpp:6:24: error: invalid conversion from ‘const float*’ to ‘float*’ [-fpermissive]
    6 |   float* begin = v.data();
      |                  ~~~~~~^~
      |                        |
      |                        const float*


CPP_121.cpp: Execution Failed
Error: CPP_121: ./CPP_121.cpp:24: int main(): Assertion `solutions({3, 3, 3, 3, 3}) == 9' failed.
Aborted (core dumped)


CPP_109.cpp: Compilation Failed
Error: In file included from ./CPP_109.cpp:24:
./CPP_109.cpp: In function ‘int main()’:
./CPP_109.cpp:26:42: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   26 |     assert (move_one_ball({3, 4, 5, 1, 2})==true);
      |                                          ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_109.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_109.cpp:3:38: note:   initializing argument 1 of ‘bool move_one_ball(std::vector<int>&)’
    3 | bool move_one_ball(std::vector<int>& v) {
      |                    ~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_109.cpp:24:
./CPP_109.cpp:27:43: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   27 |     assert (move_one_ball({3, 5, 10, 1, 2})==true);
      |                                           ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_109.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_109.cpp:3:38: note:   initializing argument 1 of ‘bool move_one_ball(std::vector<int>&)’
    3 | bool move_one_ball(std::vector<int>& v) {
      |                    ~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_109.cpp:24:
./CPP_109.cpp:28:39: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   28 |     assert (move_one_ball({4, 3, 1, 2})==false);
      |                                       ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_109.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_109.cpp:3:38: note:   initializing argument 1 of ‘bool move_one_ball(std::vector<int>&)’
    3 | bool move_one_ball(std::vector<int>& v) {
      |                    ~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_109.cpp:24:
./CPP_109.cpp:29:42: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   29 |     assert (move_one_ball({3, 5, 4, 1, 2})==false);
      |                                          ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_109.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:622:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<int>]’
  622 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
./CPP_109.cpp:3:38: note:   initializing argument 1 of ‘bool move_one_ball(std::vector<int>&)’
    3 | bool move_one_ball(std::vector<int>& v) {
      |                    ~~~~~~~~~~~~~~~~~~^
In file included from ./CPP_109.cpp:24:
./CPP_109.cpp:30:29: error: cannot bind non-const lvalue reference of type ‘std::vector<int>&’ to an rvalue of type ‘std::vector<int>’
   30 |     assert (move_one_ball({})==true);
      |                             ^
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_109.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:484:7: note:   after user-defined conversion: ‘std::vector<_Tp, _Alloc>::vector() [with _Tp = int; _Alloc = std::allocator<int>]’
  484 |       vector() = default;
      |       ^~~~~~
./CPP_109.cpp:3:38: note:   initializing argument 1 of ‘bool move_one_ball(std::vector<int>&)’
    3 | bool move_one_ball(std::vector<int>& v) {
      |                    ~~~~~~~~~~~~~~~~~~^


CPP_5.cpp: Compilation Failed
Error: ./CPP_5.cpp:10:114: error: expected ‘,’ or ‘...’ before ‘this’
   10 | void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(std_vector_int *this, int* pos, int* val) {
      |                                                                                                                  ^~~~
./CPP_5.cpp: In function ‘void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(std_vector_int*)’:
./CPP_5.cpp:11:19: error: invalid use of ‘this’ in non-member function
   11 |  int* old_start = this->_M_start;
      |                   ^~~~
./CPP_5.cpp:12:20: error: invalid use of ‘this’ in non-member function
   12 |  int* old_finish = this->_M_finish;
      |                    ^~~~
./CPP_5.cpp:19:44: error: ‘pos’ was not declared in this scope
   19 |      memcpy(new_start, old_start, (size_t)(pos - old_start) * sizeof(int));
      |                                            ^~~
./CPP_5.cpp:22:36: error: ‘val’ was not declared in this scope
   22 |      new_start[pos - old_start] = *val;
      |                                    ^~~
./CPP_5.cpp:26:6: error: invalid use of ‘this’ in non-member function
   26 |      this->_M_start = new_start;
      |      ^~~~
./CPP_5.cpp:27:6: error: invalid use of ‘this’ in non-member function
   27 |      this->_M_finish = new_start + old_size + 1;
      |      ^~~~
./CPP_5.cpp:28:6: error: invalid use of ‘this’ in non-member function
   28 |      this->_M_end_of_storage = new_start + new_size;
      |      ^~~~
./CPP_5.cpp:31:14: error: ‘pos’ was not declared in this scope
   31 |      memmove(pos + 1, pos, (size_t)(old_finish - pos) * sizeof(int));
      |              ^~~
./CPP_5.cpp:33:36: error: ‘val’ was not declared in this scope
   33 |      new_start[pos - old_start] = *val;
      |                                    ^~~
./CPP_5.cpp: In function ‘void _Z11intersperseSt6vectorIiSaIiEEi(std_vector_int*, const std_vector_int*, int)’:
./CPP_5.cpp:46:124: error: too many arguments to function ‘void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(std_vector_int*)’
   46 |   _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(result, result->_M_finish, it);
      |                                                                                                                            ^
./CPP_5.cpp:10:6: note: declared here
   10 | void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(std_vector_int *this, int* pos, int* val) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_5.cpp:47:124: error: too many arguments to function ‘void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(std_vector_int*)’
   47 |   _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(result, result->_M_finish, &x);
      |                                                                                                                            ^
./CPP_5.cpp:10:6: note: declared here
   10 | void _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(std_vector_int *this, int* pos, int* val) {
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./CPP_5.cpp: At global scope:
./CPP_5.cpp:54:13: error: ‘vector’ was not declared in this scope
   54 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_5.cpp:54:20: error: expected primary-expression before ‘int’
   54 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_5.cpp:54:27: error: ‘vector’ was not declared in this scope
   54 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_5.cpp:54:34: error: expected primary-expression before ‘int’
   54 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_5.cpp:54:39: error: expression list treated as compound expression in initializer [-fpermissive]
   54 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_5.cpp:53:
./CPP_5.cpp: In function ‘int main()’:
./CPP_5.cpp:63:20: error: ‘intersperse’ was not declared in this scope
   63 |     assert (issame(intersperse({}, 7), {}));
      |                    ^~~~~~~~~~~
./CPP_5.cpp:63:42: error: ‘issame’ cannot be used as a function
   63 |     assert (issame(intersperse({}, 7), {}));
      |                                          ^
./CPP_5.cpp:65:70: error: ‘issame’ cannot be used as a function
   65 |     assert (issame(intersperse({5, 6, 3, 2}, 8),{5, 8, 6, 8, 3, 8, 2}));
      |                                                                      ^
./CPP_5.cpp:66:61: error: ‘issame’ cannot be used as a function
   66 |     assert (issame(intersperse({2, 2, 2}, 2),{2, 2, 2, 2, 2}));
      |                                                             ^


CPP_12.cpp: Compilation Failed
Error: In file included from ./CPP_12.cpp:44:
./CPP_12.cpp: In function ‘int main()’:
./CPP_12.cpp:46:23: error: too few arguments to function ‘void longest(String*, Vector*)’
   46 |     assert (longest({}) == "");
      |                       ^
./CPP_12.cpp:15:6: note: declared here
   15 | void longest(String *result, Vector *strings) {
      |      ^~~~~~~
In file included from ./CPP_12.cpp:44:
./CPP_12.cpp:47:36: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘String*’
   47 |     assert (longest({"x", "y", "z"}) == "x");
      |                                    ^
      |                                    |
      |                                    <brace-enclosed initializer list>
./CPP_12.cpp:15:22: note:   initializing argument 1 of ‘void longest(String*, Vector*)’
   15 | void longest(String *result, Vector *strings) {
      |              ~~~~~~~~^~~~~~
In file included from ./CPP_12.cpp:44:
./CPP_12.cpp:48:63: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘String*’
   48 |     assert (longest({"x", "yyy", "zzzz", "www", "kkkk", "abc"}) == "zzzz");
      |                                                               ^
      |                                                               |
      |                                                               <brace-enclosed initializer list>
./CPP_12.cpp:15:22: note:   initializing argument 1 of ‘void longest(String*, Vector*)’
   15 | void longest(String *result, Vector *strings) {
      |              ~~~~~~~~^~~~~~


CPP_150.cpp: Compilation Failed
Error: In file included from ./CPP_150.cpp:21:
./CPP_150.cpp: In function ‘int main()’:
./CPP_150.cpp:23:13: error: ‘x_or_y’ was not declared in this scope
   23 |     assert (x_or_y(7, 34, 12) == 34);
      |             ^~~~~~


CPP_25.cpp: Compilation Failed
Error: ./CPP_25.cpp:56:13: error: ‘vector’ was not declared in this scope
   56 | bool issame(vector<int> a,vector<int>b){
      |             ^~~~~~
./CPP_25.cpp:56:20: error: expected primary-expression before ‘int’
   56 | bool issame(vector<int> a,vector<int>b){
      |                    ^~~
./CPP_25.cpp:56:27: error: ‘vector’ was not declared in this scope
   56 | bool issame(vector<int> a,vector<int>b){
      |                           ^~~~~~
./CPP_25.cpp:56:34: error: expected primary-expression before ‘int’
   56 | bool issame(vector<int> a,vector<int>b){
      |                                  ^~~
./CPP_25.cpp:56:39: error: expression list treated as compound expression in initializer [-fpermissive]
   56 | bool issame(vector<int> a,vector<int>b){
      |                                       ^
In file included from ./CPP_25.cpp:55:
./CPP_25.cpp: In function ‘int main()’:
./CPP_25.cpp:65:30: error: invalid conversion from ‘int’ to ‘std_vector*’ {aka ‘_Vector_base*’} [-fpermissive]
   65 |     assert (issame(factorize(2) , {2}));
      |                              ^
      |                              |
      |                              int
./CPP_25.cpp:65:31: error: too few arguments to function ‘void factorize(std_vector*, int)’
   65 |     assert (issame(factorize(2) , {2}));
      |                               ^
./CPP_25.cpp:11:6: note: declared here
   11 | void factorize (std_vector *result, int n) {
      |      ^~~~~~~~~
In file included from ./CPP_25.cpp:55:
./CPP_25.cpp:65:38: error: ‘issame’ cannot be used as a function
   65 |     assert (issame(factorize(2) , {2}));
      |                                      ^
./CPP_25.cpp:66:30: error: invalid conversion from ‘int’ to ‘std_vector*’ {aka ‘_Vector_base*’} [-fpermissive]
   66 |     assert (issame(factorize(4) , {2, 2}));
      |                              ^
      |                              |
      |                              int
./CPP_25.cpp:66:31: error: too few arguments to function ‘void factorize(std_vector*, int)’
   66 |     assert (issame(factorize(4) , {2, 2}));
      |                               ^
./CPP_25.cpp:11:6: note: declared here
   11 | void factorize (std_vector *result, int n) {
      |      ^~~~~~~~~
In file included from ./CPP_25.cpp:55:
./CPP_25.cpp:66:41: error: ‘issame’ cannot be used as a function
   66 |     assert (issame(factorize(4) , {2, 2}));
      |                                         ^
./CPP_25.cpp:67:30: error: invalid conversion from ‘int’ to ‘std_vector*’ {aka ‘_Vector_base*’} [-fpermissive]
   67 |     assert (issame(factorize(8) , {2, 2, 2}));
      |                              ^
      |                              |
      |                              int
./CPP_25.cpp:67:31: error: too few arguments to function ‘void factorize(std_vector*, int)’
   67 |     assert (issame(factorize(8) , {2, 2, 2}));
      |                               ^
./CPP_25.cpp:11:6: note: declared here
   11 | void factorize (std_vector *result, int n) {
      |      ^~~~~~~~~
In file included from ./CPP_25.cpp:55:
./CPP_25.cpp:67:44: error: ‘issame’ cannot be used as a function
   67 |     assert (issame(factorize(8) , {2, 2, 2}));
      |                                            ^
./CPP_25.cpp:68:33: error: invalid conversion from ‘int’ to ‘std_vector*’ {aka ‘_Vector_base*’} [-fpermissive]
   68 |      assert (issame(factorize(3 * 19) , {3, 19}));
      |                               ~~^~~~
      |                                 |
      |                                 int
./CPP_25.cpp:68:37: error: too few arguments to function ‘void factorize(std_vector*, int)’
   68 |      assert (issame(factorize(3 * 19) , {3, 19}));
      |                                     ^
./CPP_25.cpp:11:6: note: declared here
   11 | void factorize (std_vector *result, int n) {
      |      ^~~~~~~~~
In file included from ./CPP_25.cpp:55:
./CPP_25.cpp:68:48: error: ‘issame’ cannot be used as a function
   68 |      assert (issame(factorize(3 * 19) , {3, 19}));
      |                                                ^
./CPP_25.cpp:69:41: error: invalid conversion from ‘int’ to ‘std_vector*’ {aka ‘_Vector_base*’} [-fpermissive]
   69 |     assert (issame(factorize(3 * 19 * 3 * 19) , {3, 3, 19, 19}));
      |                              ~~~~~~~~~~~^~~~
      |                                         |
      |                                         int
./CPP_25.cpp:69:45: error: too few arguments to function ‘void factorize(std_vector*, int)’
   69 |     assert (issame(factorize(3 * 19 * 3 * 19) , {3, 3, 19, 19}));
      |                                             ^
./CPP_25.cpp:11:6: note: declared here
   11 | void factorize (std_vector *result, int n) {
      |      ^~~~~~~~~
In file included from ./CPP_25.cpp:55:
./CPP_25.cpp:69:63: error: ‘issame’ cannot be used as a function
   69 |     assert (issame(factorize(3 * 19 * 3 * 19) , {3, 3, 19, 19}));
      |                                                               ^
./CPP_25.cpp:70:50: error: invalid conversion from ‘int’ to ‘std_vector*’ {aka ‘_Vector_base*’} [-fpermissive]
   70 |     assert (issame(factorize(3 * 19 * 3 * 19 * 3 * 19) , {3, 3, 3, 19, 19, 19}));
      |                              ~~~~~~~~~~~~~~~~~~~~^~~~
      |                                                  |
      |                                                  int
./CPP_25.cpp:70:54: error: too few arguments to function ‘void factorize(std_vector*, int)’
   70 |     assert (issame(factorize(3 * 19 * 3 * 19 * 3 * 19) , {3, 3, 3, 19, 19, 19}));
      |                                                      ^
./CPP_25.cpp:11:6: note: declared here
   11 | void factorize (std_vector *result, int n) {
      |      ^~~~~~~~~
In file included from ./CPP_25.cpp:55:
./CPP_25.cpp:70:79: error: ‘issame’ cannot be used as a function
   70 |     assert (issame(factorize(3 * 19 * 3 * 19 * 3 * 19) , {3, 3, 3, 19, 19, 19}));
      |                                                                               ^
./CPP_25.cpp:71:42: error: invalid conversion from ‘int’ to ‘std_vector*’ {aka ‘_Vector_base*’} [-fpermissive]
   71 |     assert (issame(factorize(3 * 19 * 19 * 19) , {3, 19, 19, 19}));
      |                              ~~~~~~~~~~~~^~~~
      |                                          |
      |                                          int
./CPP_25.cpp:71:46: error: too few arguments to function ‘void factorize(std_vector*, int)’
   71 |     assert (issame(factorize(3 * 19 * 19 * 19) , {3, 19, 19, 19}));
      |                                              ^
./CPP_25.cpp:11:6: note: declared here
   11 | void factorize (std_vector *result, int n) {
      |      ^~~~~~~~~
In file included from ./CPP_25.cpp:55:
./CPP_25.cpp:71:65: error: ‘issame’ cannot be used as a function
   71 |     assert (issame(factorize(3 * 19 * 19 * 19) , {3, 19, 19, 19}));
      |                                                                 ^
./CPP_25.cpp:72:36: error: invalid conversion from ‘int’ to ‘std_vector*’ {aka ‘_Vector_base*’} [-fpermissive]
   72 |     assert (issame(factorize(3 * 2 * 3) , {2, 3, 3}));
      |                              ~~~~~~^~~
      |                                    |
      |                                    int
./CPP_25.cpp:72:39: error: too few arguments to function ‘void factorize(std_vector*, int)’
   72 |     assert (issame(factorize(3 * 2 * 3) , {2, 3, 3}));
      |                                       ^
./CPP_25.cpp:11:6: note: declared here
   11 | void factorize (std_vector *result, int n) {
      |      ^~~~~~~~~
In file included from ./CPP_25.cpp:55:
./CPP_25.cpp:72:52: error: ‘issame’ cannot be used as a function
   72 |     assert (issame(factorize(3 * 2 * 3) , {2, 3, 3}));
      |                                                    ^


CPP_89.cpp: Compilation Failed
Error: ./CPP_89.cpp: In function ‘string* encrypt(string*)’:
./CPP_89.cpp:13:18: error: ‘struct string’ has no member named ‘_M_dataplus’
   13 |     char* p = s->_M_dataplus;
      |                  ^~~~~~~~~~~
./CPP_89.cpp:14:21: error: ‘struct string’ has no member named ‘_M_len’
   14 |     size_t len = s->_M_len;
      |                     ^~~~~~
In file included from ./CPP_89.cpp:26:
./CPP_89.cpp: In function ‘int main()’:
./CPP_89.cpp:28:21: error: cannot convert ‘const char*’ to ‘string*’
   28 |     assert (encrypt("hi") == "lm");
      |                     ^~~~
      |                     |
      |                     const char*
./CPP_89.cpp:12:25: note:   initializing argument 1 of ‘string* encrypt(string*)’
   12 | string* encrypt(string* s) {
      |                 ~~~~~~~~^
In file included from ./CPP_89.cpp:26:
./CPP_89.cpp:29:21: error: cannot convert ‘const char*’ to ‘string*’
   29 |     assert (encrypt("asdfghjkl") == "ewhjklnop");
      |                     ^~~~~~~~~~~
      |                     |
      |                     const char*
./CPP_89.cpp:12:25: note:   initializing argument 1 of ‘string* encrypt(string*)’
   12 | string* encrypt(string* s) {
      |                 ~~~~~~~~^
In file included from ./CPP_89.cpp:26:
./CPP_89.cpp:30:21: error: cannot convert ‘const char*’ to ‘string*’
   30 |     assert (encrypt("gf") == "kj");
      |                     ^~~~
      |                     |
      |                     const char*
./CPP_89.cpp:12:25: note:   initializing argument 1 of ‘string* encrypt(string*)’
   12 | string* encrypt(string* s) {
      |                 ~~~~~~~~^
In file included from ./CPP_89.cpp:26:
./CPP_89.cpp:31:21: error: cannot convert ‘const char*’ to ‘string*’
   31 |     assert (encrypt("et") == "ix");
      |                     ^~~~
      |                     |
      |                     const char*
./CPP_89.cpp:12:25: note:   initializing argument 1 of ‘string* encrypt(string*)’
   12 | string* encrypt(string* s) {
      |                 ~~~~~~~~^
In file included from ./CPP_89.cpp:26:
./CPP_89.cpp:32:21: error: cannot convert ‘const char*’ to ‘string*’
   32 |     assert (encrypt("faewfawefaewg")=="jeiajeaijeiak");
      |                     ^~~~~~~~~~~~~~~
      |                     |
      |                     const char*
./CPP_89.cpp:12:25: note:   initializing argument 1 of ‘string* encrypt(string*)’
   12 | string* encrypt(string* s) {
      |                 ~~~~~~~~^
In file included from ./CPP_89.cpp:26:
./CPP_89.cpp:33:21: error: cannot convert ‘const char*’ to ‘string*’
   33 |     assert (encrypt("hellomyfriend")=="lippsqcjvmirh");
      |                     ^~~~~~~~~~~~~~~
      |                     |
      |                     const char*
./CPP_89.cpp:12:25: note:   initializing argument 1 of ‘string* encrypt(string*)’
   12 | string* encrypt(string* s) {
      |                 ~~~~~~~~^
In file included from ./CPP_89.cpp:26:
./CPP_89.cpp:34:21: error: cannot convert ‘const char*’ to ‘string*’
   34 |     assert (encrypt("dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh")=="hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl");
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                     |
      |                     const char*
./CPP_89.cpp:12:25: note:   initializing argument 1 of ‘string* encrypt(string*)’
   12 | string* encrypt(string* s) {
      |                 ~~~~~~~~^
In file included from ./CPP_89.cpp:26:
./CPP_89.cpp:35:21: error: cannot convert ‘const char*’ to ‘string*’
   35 |     assert (encrypt("a")=="e");
      |                     ^~~
      |                     |
      |                     const char*
./CPP_89.cpp:12:25: note:   initializing argument 1 of ‘string* encrypt(string*)’
   12 | string* encrypt(string* s) {
      |                 ~~~~~~~~^


CPP_64.cpp: Compilation Failed
Error: ./CPP_64.cpp: In function ‘int vowels_count(const char*)’:
./CPP_64.cpp:6:8: error: ‘size_t’ was not declared in this scope
    6 |   for (size_t i = 0; i < strlen(s); i++) {
      |        ^~~~~~
./CPP_64.cpp:2:1: note: ‘size_t’ is defined in header ‘<cstddef>’; did you forget to ‘#include <cstddef>’?
    1 | #include <stdint.h>
  +++ |+#include <cstddef>
    2 | 
./CPP_64.cpp:6:22: error: ‘i’ was not declared in this scope
    6 |   for (size_t i = 0; i < strlen(s); i++) {
      |                      ^
./CPP_64.cpp:6:26: error: ‘strlen’ was not declared in this scope
    6 |   for (size_t i = 0; i < strlen(s); i++) {
      |                          ^~~~~~
./CPP_64.cpp:2:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    1 | #include <stdint.h>
  +++ |+#include <cstring>
    2 | 
./CPP_64.cpp:7:16: error: expected ‘;’ before ‘j’
    7 |     for (size_t j = 0; j < 10; j++) {
      |                ^~
      |                ;
./CPP_64.cpp:7:24: error: ‘j’ was not declared in this scope
    7 |     for (size_t j = 0; j < 10; j++) {
      |                        ^


CPP_128.cpp: Compilation Failed
Error: ./CPP_128.cpp: In function ‘int prod_signs(int*, int)’:
./CPP_128.cpp:15:12: error: ‘abs’ was not declared in this scope
   15 |     sum += abs(val);
      |            ^~~
In file included from ./CPP_128.cpp:23:
./CPP_128.cpp: In function ‘int main()’:
./CPP_128.cpp:25:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   25 |     assert (prod_signs({1, 2, 2, -4}) == -9);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_128.cpp:3:21: note:   initializing argument 1 of ‘int prod_signs(int*, int)’
    3 | int prod_signs(int* a, int size) {
      |                ~~~~~^
In file included from ./CPP_128.cpp:23:
./CPP_128.cpp:26:30: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   26 |     assert (prod_signs({0, 1}) == 0);
      |                              ^
      |                              |
      |                              <brace-enclosed initializer list>
./CPP_128.cpp:3:21: note:   initializing argument 1 of ‘int prod_signs(int*, int)’
    3 | int prod_signs(int* a, int size) {
      |                ~~~~~^
In file included from ./CPP_128.cpp:23:
./CPP_128.cpp:27:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   27 |     assert (prod_signs({1, 1, 1, 2, 3, -1, 1}) == -10);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_128.cpp:3:21: note:   initializing argument 1 of ‘int prod_signs(int*, int)’
    3 | int prod_signs(int* a, int size) {
      |                ~~~~~^
In file included from ./CPP_128.cpp:23:
./CPP_128.cpp:28:26: error: too few arguments to function ‘int prod_signs(int*, int)’
   28 |     assert (prod_signs({}) == -32768);
      |                          ^
./CPP_128.cpp:3:5: note: declared here
    3 | int prod_signs(int* a, int size) {
      |     ^~~~~~~~~~
In file included from ./CPP_128.cpp:23:
./CPP_128.cpp:29:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   29 |     assert (prod_signs({2, 4,1, 2, -1, -1, 9}) == 20);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_128.cpp:3:21: note:   initializing argument 1 of ‘int prod_signs(int*, int)’
    3 | int prod_signs(int* a, int size) {
      |                ~~~~~^
In file included from ./CPP_128.cpp:23:
./CPP_128.cpp:30:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   30 |     assert (prod_signs({-1, 1, -1, 1}) == 4);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_128.cpp:3:21: note:   initializing argument 1 of ‘int prod_signs(int*, int)’
    3 | int prod_signs(int* a, int size) {
      |                ~~~~~^
In file included from ./CPP_128.cpp:23:
./CPP_128.cpp:31:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   31 |     assert (prod_signs({-1, 1, 1, 1}) == -4);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_128.cpp:3:21: note:   initializing argument 1 of ‘int prod_signs(int*, int)’
    3 | int prod_signs(int* a, int size) {
      |                ~~~~~^
In file included from ./CPP_128.cpp:23:
./CPP_128.cpp:32:37: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   32 |     assert (prod_signs({-1, 1, 1, 0}) == 0);
      |                                     ^
      |                                     |
      |                                     <brace-enclosed initializer list>
./CPP_128.cpp:3:21: note:   initializing argument 1 of ‘int prod_signs(int*, int)’
    3 | int prod_signs(int* a, int size) {
      |                ~~~~~^


CPP_91.cpp: Compilation Failed
Error: ./CPP_91.cpp: In function ‘int is_bored(const char*)’:
./CPP_91.cpp:5:16: error: ‘strlen’ was not declared in this scope
    5 |   size_t len = strlen(str);
      |                ^~~~~~
./CPP_91.cpp:3:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
    2 | #include <stddef.h>
  +++ |+#include <cstring>
    3 | 


CPP_73.cpp: Compilation Failed
Error: ./CPP_73.cpp:11:1: error: stray ‘`’ in program
   11 | ```<|im_end|>
      | ^
./CPP_73.cpp:11:2: error: stray ‘`’ in program
   11 | ```<|im_end|>
      |  ^
./CPP_73.cpp:11:3: error: stray ‘`’ in program
   11 | ```<|im_end|>
      |   ^
./CPP_73.cpp:11:4: error: expected unqualified-id before ‘<’ token
   11 | ```<|im_end|>
      |    ^
In file included from ./CPP_73.cpp:13:
./CPP_73.cpp: In function ‘int main()’:
./CPP_73.cpp:15:46: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   15 |     assert (smallest_change({1,2,3,5,4,7,9,6}) == 4);
      |                                              ^
      |                                              |
      |                                              <brace-enclosed initializer list>
./CPP_73.cpp:1:26: note:   initializing argument 1 of ‘int smallest_change(int*, int)’
    1 | int smallest_change(int* arr, int size) {
      |                     ~~~~~^~~
In file included from ./CPP_73.cpp:13:
./CPP_73.cpp:15:5: error: ‘__assert_fail’ was not declared in this scope
   15 |     assert (smallest_change({1,2,3,5,4,7,9,6}) == 4);
      |     ^~~~~~
./CPP_73.cpp:16:50: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   16 |     assert (smallest_change({1, 2, 3, 4, 3, 2, 2}) == 1);
      |                                                  ^
      |                                                  |
      |                                                  <brace-enclosed initializer list>
./CPP_73.cpp:1:26: note:   initializing argument 1 of ‘int smallest_change(int*, int)’
    1 | int smallest_change(int* arr, int size) {
      |                     ~~~~~^~~
In file included from ./CPP_73.cpp:13:
./CPP_73.cpp:17:38: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   17 |     assert (smallest_change({1, 4, 2}) == 1);
      |                                      ^
      |                                      |
      |                                      <brace-enclosed initializer list>
./CPP_73.cpp:1:26: note:   initializing argument 1 of ‘int smallest_change(int*, int)’
    1 | int smallest_change(int* arr, int size) {
      |                     ~~~~~^~~
In file included from ./CPP_73.cpp:13:
./CPP_73.cpp:18:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   18 |     assert (smallest_change({1, 4, 4, 2}) == 1);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_73.cpp:1:26: note:   initializing argument 1 of ‘int smallest_change(int*, int)’
    1 | int smallest_change(int* arr, int size) {
      |                     ~~~~~^~~
In file included from ./CPP_73.cpp:13:
./CPP_73.cpp:19:44: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   19 |     assert (smallest_change({1, 2, 3, 2, 1}) == 0);
      |                                            ^
      |                                            |
      |                                            <brace-enclosed initializer list>
./CPP_73.cpp:1:26: note:   initializing argument 1 of ‘int smallest_change(int*, int)’
    1 | int smallest_change(int* arr, int size) {
      |                     ~~~~~^~~
In file included from ./CPP_73.cpp:13:
./CPP_73.cpp:20:41: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   20 |     assert (smallest_change({3, 1, 1, 3}) == 0);
      |                                         ^
      |                                         |
      |                                         <brace-enclosed initializer list>
./CPP_73.cpp:1:26: note:   initializing argument 1 of ‘int smallest_change(int*, int)’
    1 | int smallest_change(int* arr, int size) {
      |                     ~~~~~^~~
In file included from ./CPP_73.cpp:13:
./CPP_73.cpp:21:32: error: invalid conversion from ‘int’ to ‘int*’ [-fpermissive]
   21 |     assert (smallest_change({1}) == 0);
      |                                ^
      |                                |
      |                                int
./CPP_73.cpp:21:32: error: too few arguments to function ‘int smallest_change(int*, int)’
./CPP_73.cpp:1:5: note: declared here
    1 | int smallest_change(int* arr, int size) {
      |     ^~~~~~~~~~~~~~~
In file included from ./CPP_73.cpp:13:
./CPP_73.cpp:22:35: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘int*’
   22 |     assert (smallest_change({0, 1}) == 1);
      |                                   ^
      |                                   |
      |                                   <brace-enclosed initializer list>
./CPP_73.cpp:1:26: note:   initializing argument 1 of ‘int smallest_change(int*, int)’
    1 | int smallest_change(int* arr, int size) {
      |                     ~~~~~^~~


CPP_151.cpp: Compilation Failed
Error: ./CPP_151.cpp:3:1: error: ‘int64_t’ does not name a type
    3 | int64_t double_the_difference(const std::vector<float>& vec) {
      | ^~~~~~~
In file included from ./CPP_151.cpp:27:
./CPP_151.cpp: In function ‘int main()’:
./CPP_151.cpp:29:13: error: ‘double_the_difference’ was not declared in this scope
   29 |     assert (double_the_difference({}) == 0);
      |             ^~~~~~~~~~~~~~~~~~~~~
./CPP_151.cpp:38:5: error: ‘vector’ was not declared in this scope; did you mean ‘std::vector’?
   38 |     vector<float> lst={};
      |     ^~~~~~
      |     std::vector
In file included from /usr/include/c++/9/vector:67,
                 from ./CPP_151.cpp:1:
/usr/include/c++/9/bits/stl_vector.h:386:11: note: ‘std::vector’ declared here
  386 |     class vector : protected _Vector_base<_Tp, _Alloc>
      |           ^~~~~~
./CPP_151.cpp:38:12: error: expected primary-expression before ‘float’
   38 |     vector<float> lst={};
      |            ^~~~~
./CPP_151.cpp:42:9: error: ‘lst’ was not declared in this scope
   42 |         lst.push_back(i+0.0);
      |         ^~~
In file included from ./CPP_151.cpp:27:
./CPP_151.cpp:46:35: error: ‘lst’ was not declared in this scope
   46 |     assert (double_the_difference(lst) == odd_sum );
      |                                   ^~~


CPP_95.cpp: Compilation Failed
Error: In file included from ./CPP_95.cpp:70:
./CPP_95.cpp: In function ‘int main()’:
./CPP_95.cpp:72:64: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘map*’
   72 |     assert (check_dict_case({{"p","pineapple"}, {"b","banana"}}) == true);
      |                                                                ^
      |                                                                |
      |                                                                <brace-enclosed initializer list>
./CPP_95.cpp:33:26: note:   initializing argument 1 of ‘int check_dict_case(map*)’
   33 | int check_dict_case(map *m) {
      |                     ~~~~~^
In file included from ./CPP_95.cpp:70:
./CPP_95.cpp:73:80: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘map*’
   73 |     assert (check_dict_case({{"p","pineapple"}, {"A","banana"}, {"B","banana"}}) == false);
      |                                                                                ^
      |                                                                                |
      |                                                                                <brace-enclosed initializer list>
./CPP_95.cpp:33:26: note:   initializing argument 1 of ‘int check_dict_case(map*)’
   33 | int check_dict_case(map *m) {
      |                     ~~~~~^
In file included from ./CPP_95.cpp:70:
./CPP_95.cpp:74:79: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘map*’
   74 |     assert (check_dict_case({{"p","pineapple"}, {"5","banana"}, {"a","apple"}}) == false);
      |                                                                               ^
      |                                                                               |
      |                                                                               <brace-enclosed initializer list>
./CPP_95.cpp:33:26: note:   initializing argument 1 of ‘int check_dict_case(map*)’
   33 | int check_dict_case(map *m) {
      |                     ~~~~~^
In file included from ./CPP_95.cpp:70:
./CPP_95.cpp:75:80: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘map*’
   75 |     assert (check_dict_case({{"Name","John"}, {"Age","36"}, {"City","Houston"}}) == false);
      |                                                                                ^
      |                                                                                |
      |                                                                                <brace-enclosed initializer list>
./CPP_95.cpp:33:26: note:   initializing argument 1 of ‘int check_dict_case(map*)’
   33 | int check_dict_case(map *m) {
      |                     ~~~~~^
In file included from ./CPP_95.cpp:70:
./CPP_95.cpp:76:63: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘map*’
   76 |     assert (check_dict_case({{"STATE","NC"}, {"ZIP","12345"} }) == true  );
      |                                                               ^
      |                                                               |
      |                                                               <brace-enclosed initializer list>
./CPP_95.cpp:33:26: note:   initializing argument 1 of ‘int check_dict_case(map*)’
   33 | int check_dict_case(map *m) {
      |                     ~~~~~^
In file included from ./CPP_95.cpp:70:
./CPP_95.cpp:77:69: error: cannot convert ‘<brace-enclosed initializer list>’ to ‘map*’
   77 |     assert (check_dict_case({{"fruit","Orange"}, {"taste","Sweet"} }) == true  );
      |                                                                     ^
      |                                                                     |
      |                                                                     <brace-enclosed initializer list>
./CPP_95.cpp:33:26: note:   initializing argument 1 of ‘int check_dict_case(map*)’
   33 | int check_dict_case(map *m) {
      |                     ~~~~~^


Summary
=======
Total files processed: 100
Compilation failures: 88
Execution failures: 5
Assertion failures: 0

Detailed Results
===============
CPP_30.cpp Compilation Failed
CPP_110.cpp Compilation Failed
CPP_9.cpp Compilation Failed
CPP_35.cpp Compilation Failed
CPP_138.cpp Compilation Failed
CPP_134.cpp Compilation Failed
CPP_102.cpp Execution Failed
CPP_18.cpp Passed
CPP_45.cpp Compilation Failed
CPP_21.cpp Compilation Failed
CPP_78.cpp Compilation Failed
CPP_63.cpp Compilation Failed
CPP_100.cpp Compilation Failed
CPP_106.cpp Compilation Failed
CPP_83.cpp Compilation Failed
CPP_116.cpp Compilation Failed
CPP_71.cpp Compilation Failed
CPP_99.cpp Compilation Failed
CPP_82.cpp Compilation Failed
CPP_39.cpp Compilation Failed
CPP_56.cpp Compilation Failed
CPP_11.cpp Compilation Failed
CPP_146.cpp Compilation Failed
CPP_59.cpp Compilation Failed
CPP_32.cpp Compilation Failed
CPP_77.cpp Compilation Failed
CPP_98.cpp Execution Failed
CPP_41.cpp Passed
CPP_0.cpp Compilation Failed
CPP_157.cpp Passed
CPP_141.cpp Compilation Failed
CPP_127.cpp Compilation Failed
CPP_31.cpp Compilation Failed
CPP_122.cpp Compilation Failed
CPP_49.cpp Compilation Failed
CPP_55.cpp Compilation Failed
CPP_115.cpp Compilation Failed
CPP_40.cpp Passed
CPP_48.cpp Compilation Failed
CPP_155.cpp Compilation Failed
CPP_96.cpp Compilation Failed
CPP_3.cpp Compilation Failed
CPP_97.cpp Compilation Failed
CPP_4.cpp Compilation Failed
CPP_60.cpp Passed
CPP_76.cpp Compilation Failed
CPP_80.cpp Compilation Failed
CPP_23.cpp Passed
CPP_136.cpp Compilation Failed
CPP_27.cpp Compilation Failed
CPP_16.cpp Compilation Failed
CPP_72.cpp Execution Failed
CPP_24.cpp Compilation Failed
CPP_92.cpp Compilation Failed
CPP_43.cpp Compilation Failed
CPP_53.cpp Compilation Failed
CPP_126.cpp Compilation Failed
CPP_52.cpp Compilation Failed
CPP_2.cpp Compilation Failed
CPP_139.cpp Execution Failed
CPP_57.cpp Compilation Failed
CPP_159.cpp Compilation Failed
CPP_108.cpp Compilation Failed
CPP_61.cpp Compilation Failed
CPP_20.cpp Compilation Failed
CPP_13.cpp Passed
CPP_124.cpp Compilation Failed
CPP_75.cpp Compilation Failed
CPP_142.cpp Compilation Failed
CPP_66.cpp Compilation Failed
CPP_114.cpp Compilation Failed
CPP_85.cpp Compilation Failed
CPP_46.cpp Compilation Failed
CPP_28.cpp Compilation Failed
CPP_62.cpp Compilation Failed
CPP_36.cpp Compilation Failed
CPP_131.cpp Compilation Failed
CPP_152.cpp Compilation Failed
CPP_132.cpp Compilation Failed
CPP_68.cpp Compilation Failed
CPP_163.cpp Compilation Failed
CPP_74.cpp Compilation Failed
CPP_54.cpp Compilation Failed
CPP_135.cpp Compilation Failed
CPP_8.cpp Compilation Failed
CPP_42.cpp Compilation Failed
CPP_133.cpp Compilation Failed
CPP_121.cpp Execution Failed
CPP_109.cpp Compilation Failed
CPP_5.cpp Compilation Failed
CPP_12.cpp Compilation Failed
CPP_150.cpp Compilation Failed
CPP_25.cpp Compilation Failed
CPP_89.cpp Compilation Failed
CPP_64.cpp Compilation Failed
CPP_128.cpp Compilation Failed
CPP_91.cpp Compilation Failed
CPP_73.cpp Compilation Failed
CPP_151.cpp Compilation Failed
CPP_95.cpp Compilation Failed
