After analyzing the provided IR code, I generated the control flow graph (CFG) in the dot file format. Here is the output:
```
digraph CFG {
    node[shape=box, style=filled];

    BB0[label="entry"];
    BB1[label="add"];
    BB2[label="ret"];

    BB0 -> BB1;
    BB1 -> BB2;
}
```
Here's a brief explanation of the CFG:

* `BB0` represents the entry point of the function `_Z3addii`.
* `BB1` represents the basic block containing the `add` instruction.
* `BB2` represents the basic block containing the `ret` instruction.
* The edges represent the control flow between the basic blocks. In this case, the control flow is straightforward: the function enters, executes the `add` instruction, and then returns.

Note that this is a simple CFG, and more complex functions would result in larger and more intricate graphs.