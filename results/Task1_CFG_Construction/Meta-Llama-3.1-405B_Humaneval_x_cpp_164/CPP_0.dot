After analyzing the provided IR code, I extracted the control flow graph (CFG) and represented it in the dot file format. Here is the output:

```
digraph CFG {
    node[shape=box];
    2[label="entry"];
    12[label="bb1"];
    14[label="bb2"];
    17[label="bb3"];
    23[label="bb4"];
    26[label="bb5"];
    28[label="bb6"];
    36[label="exit"];
    
    2 -> 12[label=""];
    2 -> 36[label=""];
    12 -> 17[label=""];
    14 -> 17[label=""];
    14 -> 36[label=""];
    17 -> 14[label=""];
    17 -> 23[label=""];
    23 -> 28[label=""];
    26 -> 14[label=""];
    26 -> 28[label=""];
    28 -> 26[label=""];
    28 -> 36[label=""];
}
```

This dot file represents the CFG, where each node represents a basic block, and the edges represent the control flow between them. The `label` attribute is used to assign a name to each node, which corresponds to the basic block number in the IR code.

To visualize the CFG, you can use a tool like Graphviz, which can render the dot file into an image. If you have Graphviz installed, you can run the following command to generate an SVG image:

```
dot -Tsvg cfg.dot -o cfg.svg
```

This will create an SVG image named `cfg.svg` in the current directory, which represents the CFG.