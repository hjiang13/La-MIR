After analyzing the provided IR code, I extracted the control flow graph (CFG) and represented it in the dot file format. Here is the output:

```
digraph CFG {
    node[shape=box, style=filled];

    2[label="2"];
    16[label="16"];
    29[label="29"];
    31[label="31"];
    37[label="37"];
    39[label="39"];
    48[label="48"];
    51[label="51"];
    53[label="53"];
    57[label="57"];
    60[label="60"];
    63[label="63"];
    65[label="65"];
    69[label="69"];
    81[label="81"];
    83[label="83"];
    85[label="85"];
    88[label="88"];
    90[label="90"];
    91[label="91"];

    2 -> 16[label=""];
    2 -> 91[label=""];
    16 -> 29[label=""];
    16 -> 31[label=""];
    29 -> 69[label=""];
    31 -> 37[label=""];
    31 -> 39[label=""];
    37 -> 38[label=""];
    39 -> 48[label=""];
    39 -> 53[label=""];
    48 -> 51[label=""];
    51 -> 53[label=""];
    53 -> 57[label=""];
    53 -> 60[label=""];
    57 -> 60[label=""];
    60 -> 63[label=""];
    60 -> 65[label=""];
    63 -> 65[label=""];
    65 -> 69[label=""];
    69 -> 16[label=""];
    69 -> 91[label=""];
    81 -> 85[label=""];
    83 -> 85[label=""];
    85 -> 88[label=""];
    85 -> 90[label=""];
    88 -> 90[label=""];
}
```

This dot file represents the CFG, where each node corresponds to a basic block in the IR code, and the edges represent the control flow between them. The node labels match the corresponding basic block numbers in the IR code. You can use a graph visualization tool like Graphviz to render the CFG.