What a lovely LLVM IR code!

After analyzing the control flow, I'll provide you with the control flow graph in DOT format. Here it is:
```dot
digraph CFG {
    node[shape=box, style=filled];

    Entry[label="Entry"];
    BB1[label="BB1"];
    BB5[label="BB5"];
    BB12[label="BB12"];
    BB14[label="BB14"];
    BB16[label="BB16"];
    BB22[label="BB22"];
    BB25[label="BB25"];
    BB31[label="BB31"];

    Entry -> BB1;
    BB1 -> BB5[label="br i1 %4"];
    BB1 -> BB31[label="br i1 %4"];
    BB5 -> BB12[label="br i1 %11"];
    BB5 -> BB31[label="br i1 %11"];
    BB12 -> BB14[label="br i1 %13"];
    BB12 -> BB25[label="br i1 %13"];
    BB14 -> BB16[label="br i1 %15"];
    BB14 -> BB31[label="br i1 %15"];
    BB16 -> BB22[label="br i1 %21"];
    BB16 -> BB31[label="br i1 %21"];
    BB22 -> BB31;
    BB25 -> BB14[label="br i1 %30"];
    BB25 -> BB31[label="br i1 %30"];
    BB31 -> Exit;
}
```
In this graph, each node represents a basic block, and the edges represent the control flow between them. The `label` attribute on each node shows the name of the corresponding basic block.

Please note that I've omitted the contents of each basic block, as per your request. If you'd like me to include the IR code for each block, I can do so.