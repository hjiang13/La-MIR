What a beast of an IR code!

After analyzing the control flow, I'll provide you with the control flow graph in DOT format. Here it is:
```dot
digraph CFG {
    node[shape=box];
    1[label="Entry"];
    10[label="BB10"];
    13[label="BB13"];
    15[label="BB15"];
    26[label="BB26"];
    30[label="BB30"];
    34[label="BB34"];

    1 -> 10[label="br i1 %9"];
    1 -> 13[label="br i1 %9"];
    10 -> 15[label="br label %15"];
    13 -> 34[label="phi i64 [ 0, %1 ], [ %35, %34 ]"];
    15 -> 26[label="br i1 %25"];
    15 -> 34[label="br i1 %25"];
    26 -> 30[label="br i1 %29"];
    26 -> 34[label="br i1 %29"];
    30 -> 34[label="br label %34"];
    34 -> 13[label="br i1 %37"];
    34 -> 15[label="br i1 %37"];
}
```
In this graph, each node represents a basic block (BB) in the IR code. The edges represent the control flow between these basic blocks. The labels on the edges indicate the condition under which the control flow jumps to the next basic block.

Please note that I've used the basic block numbers (e.g., BB10, BB13) as the node labels, instead of the actual IR code. If you'd like me to include the IR code in the node labels, I can do that as well!