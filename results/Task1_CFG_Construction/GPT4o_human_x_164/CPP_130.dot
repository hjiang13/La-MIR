Here's the control flow graph (CFG) in DOT format for the given intermediate representation (IR) code. Each node is labeled with its corresponding basic block, and edges represent the control flow between them.

```dot
digraph CFG {
    rankdir=TB;

    // Nodes
    node [shape=rectangle];
    entry [label="Entry"];
    block_2 [label="%2"];
    block_10 [label="%10"];
    block_12 [label="%12"];
    block_15 [label="%15"];
    block_18 [label="%18"];
    block_20 [label="%20"];
    block_27 [label="%27"];
    block_35 [label="%35"];
    block_39 [label="%39"];
    block_41 [label="%41"];
    block_47 [label="%47"];
    block_48 [label="%48"];
    block_49 [label="%49"];
    block_58 [label="%58"];
    block_61 [label="%61"];
    block_63 [label="%63"];
    block_67 [label="%67"];
    block_70 [label="%70"];
    block_73 [label="%73"];
    block_75 [label="%75"];
    block_77 [label="%77"];
    block_91 [label="%91"];
    block_93 [label="%93"];
    block_99 [label="%99"];
    block_100 [label="%100"];
    block_101 [label="%101"];
    block_110 [label="%110"];
    block_113 [label="%113"];
    block_115 [label="%115"];
    block_119 [label="%119"];
    block_122 [label="%122"];
    block_126 [label="%126"];
    block_128 [label="%128"];
    block_130 [label="%130"];
    block_136 [label="%136"];
    block_144 [label="%144"];
    block_145 [label="%145"];
    block_147 [label="%147"];
    block_149 [label="%149"];
    block_152 [label="%152"];
    block_156 [label="%156"];
    exit [label="Exit"];

    // Edges
    entry -> block_2;
    block_2 -> block_15;
    block_2 -> block_10;
    block_10 -> block_12;
    block_10 -> block_20;
    block_15 -> block_18;
    block_20 -> block_27;
    block_27 -> block_35;
    block_27 -> block_77;
    block_35 -> block_39;
    block_35 -> block_41;
    block_41 -> block_47;
    block_41 -> block_49;
    block_49 -> block_58;
    block_58 -> block_61;
    block_61 -> block_63;
    block_63 -> block_67;
    block_67 -> block_70;
    block_70 -> block_75;
    block_70 -> block_122;
    block_75 -> block_130;
    block_77 -> block_91;
    block_91 -> block_93;
    block_91 -> block_122;
    block_93 -> block_99;
    block_99 -> block_100;
    block_99 -> block_101;
    block_101 -> block_110;
    block_110 -> block_113;
    block_113 -> block_115;
    block_115 -> block_119;
    block_115 -> block_122;
    block_126 -> block_152;
    block_128 -> block_152;
    block_130 -> block_136;
    block_136 -> block_144;
    block_144 -> exit;
    block_145 -> block_149;
    block_147 -> block_149;
    block_149 -> block_152;
    block_152 -> block_156;
    block_156 -> exit;
}
```

This DOT representation summarizes the control flow of the program by specifying the relationships between the basic blocks. Each block is identified by its label, and arrows indicate the flow of control from one block to another.