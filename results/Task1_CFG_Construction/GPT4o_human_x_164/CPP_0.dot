Based on the provided Intermediate Representation (IR) code, we will extract the control flow graph (CFG) by identifying the basic blocks and their connections (edges). Each basic block will be represented as a node, and the edges will be represented as directed connections between these nodes.

### Control Flow Graph in DOT Format

```dot
digraph CFG {
    // Nodes
    node [shape=rect];
    entry [label="Entry"];
    block_2 [label="Block 2"];
    block_12 [label="Block 12"];
    block_14 [label="Block 14"];
    block_17 [label="Block 17"];
    block_23 [label="Block 23"];
    block_26 [label="Block 26"];
    block_28 [label="Block 28"];
    block_36 [label="Block 36"];
    
    // Edges
    entry -> block_2;
    block_2 -> block_12;
    block_12 -> block_17;
    block_17 -> block_14;
    block_14 -> block_36;
    block_17 -> block_23;
    block_23 -> block_28;
    block_28 -> block_26;
    block_26 -> block_14;
    block_28 -> block_36;
    block_36 -> block_12;
}
```

### Explanation

1. **Nodes**: Each basic block from the IR code has been represented as a node in the DOT format. The labels correspond to the blocks identified by their unique labels in the IR code.

2. **Edges**: The edges represent the flow from one basic block to another. For example, the flow starts from the entry point, goes to block 2, then to block 12, and so forth, based on the branching and control flow dictated by the IR code.

You can visualize this graph using any graph visualization tool that supports the DOT format, such as Graphviz.