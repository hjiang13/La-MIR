Based on the provided IR code, we can derive the control flow graph (CFG) and represent it in the DOT file format. The nodes will represent the basic blocks, and the edges will represent the control flow between these blocks.

Hereâ€™s the CFG in DOT format:

```dot
digraph CFG {
    // Define the nodes
    node [shape=box];
    entry [label="Entry"];
    block_3 [label="Block %3"];
    block_7 [label="Block %7"];
    block_12 [label="Block %12"];
    
    // Define the edges
    entry -> block_3; // Entry goes to block %3
    block_3 -> block_7; // From block %3 to block %7 (when %0 < 4)
    block_3 -> block_12; // From block %3 to block %12 (when %0 >= 4)
    block_12 -> block_7; // From block %12 to block %7 (looping back)
    block_12 -> block_12; // From block %12 to block %12 (looping)
    block_7 -> block_12; // From block %7 to block %12 (after execution)
}
```

### Explanation:
1. **Nodes:**
   - Each basic block in the IR code is represented as a node.
   - The entry node represents the start of the function.
   - The nodes `%3`, `%7`, and `%12` correspond to the basic blocks in the IR code.

2. **Edges:**
   - Directed edges denote the flow of control between the blocks based on the conditions and branching in the IR.
   - The edges are defined based on the branching conditions and the structure of the IR code.

You can visualize this graph using any DOT file viewer or graph visualization tool.