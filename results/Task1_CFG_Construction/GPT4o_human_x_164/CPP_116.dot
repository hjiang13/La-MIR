To represent the control flow graph (CFG) of the provided intermediate representation (IR) code in DOT format, we will create nodes for each basic block and edges to represent the flow between them.

Here is the generated DOT representation of the control flow graph:

```dot
digraph CFG {
    node [shape=box];

    // Nodes
    2 [label="%2"];
    8 [label="%8"];
    10 [label="%10"];
    13 [label="%13"];
    21 [label="%21"];
    26 [label="%26"];
    28 [label="%28"];
    34 [label="%34"];
    41 [label="%41"];
    45 [label="%45"];
    48 [label="%48"];
    58 [label="%58"];
    60 [label="%60"];
    67 [label="%67"];
    70 [label="%70"];
    71 [label="%71"];
    77 [label="%77"];
    78 [label="%78"];
    79 [label="%79"];
    88 [label="%88"];
    93 [label="%93"];
    100 [label="%100"];
    102 [label="%102"];
    104 [label="%104"];
    108 [label="%108"];
    123 [label="%123"];
    125 [label="%125"];
    130 [label="%130"];
    131 [label="%131"];
    140 [label="%140"];
    142 [label="%142"];
    144 [label="%144"];

    // Edges
    2 -> 8;
    2 -> 48;
    8 -> 10;
    8 -> 131;
    10 -> 13;
    10 -> 45;
    13 -> 21;
    13 -> 26;
    21 -> 34;
    26 -> 28;
    28 -> 34;
    34 -> 41;
    41 -> 13;
    41 -> 45;
    45 -> 10;
    48 -> 49;
    48 -> 58;
    58 -> 60;
    60 -> 67;
    67 -> 70;
    67 -> 71;
    70 -> 108;
    71 -> 77;
    77 -> 78;
    78 -> 123;
    79 -> 88;
    88 -> 91;
    93 -> 100;
    100 -> 102;
    102 -> 104;
    104 -> 108;
    108 -> 48;
    108 -> 140;
    140 -> 142;
    142 -> 144;
    131 -> 2;
    131 -> 8;
    131 -> 45;
}
```

### Explanation:
- Each basic block from the IR code is represented as a node in the graph, labeled with its corresponding identifier (e.g., `%2`, `%8`, etc.).
- Directed edges between nodes illustrate the flow of control from one block to another, indicating possible jumps or branches in execution.
- The structure is designed to be easily visualized with tools that can render DOT format graphs, such as Graphviz.