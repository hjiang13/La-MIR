To represent the control flow graph (CFG) of the provided Intermediate Representation (IR) code in DOT format, we will identify the basic blocks and their connections (edges) based on the branching instructions (`br`) and the labels defined in the IR code.

Here is the CFG represented in DOT format:

```dot
digraph ControlFlowGraph {
    node [shape=box];

    Entry [label="Entry"];
    Block_2 [label="%2"];
    Block_11 [label="%11"];
    Block_14 [label="%14"];
    Block_25 [label="%25"];
    Block_30 [label="%30"];
    Block_37 [label="%37"];
    Block_39 [label="%39"];
    Block_82 [label="%82"];
    Block_89 [label="%89"];
    Block_105 [label="%105"];
    Block_111 [label="%111"];
    Block_114 [label="%114"];
    Block_116 [label="%116"];
    Block_119 [label="%119"];
    Block_127 [label="%127"];
    Block_132 [label="%132"];

    Entry -> Block_2;
    Block_2 -> Block_11;
    Block_11 -> Block_14;
    Block_14 -> Block_25;
    Block_25 -> Block_30;
    Block_30 -> Block_37;
    Block_37 -> Block_39;
    Block_39 -> Block_82;
    Block_39 -> Block_89;
    Block_39 -> Block_105;
    Block_82 -> Block_111;
    Block_82 -> Block_89;
    Block_89 -> Block_105;
    Block_105 -> Block_116;
    Block_111 -> Block_114;
    Block_114 -> Block_132;
    Block_116 -> Block_127;
    Block_127 -> Block_132;
    Block_132 -> Block_14;
}
```

### Explanation:
1. **Nodes**: Each basic block is represented as a node in the graph. The labels correspond to the identifiers of the basic blocks in the IR code.
2. **Edges**: The directed edges (`->`) represent the flow of control from one block to another based on the branching (`br`) instructions. The CFG starts from the entry point and flows through the blocks according to the conditions defined in the IR.

You can visualize this graph using a DOT viewer or graph visualization tool that supports the DOT format.