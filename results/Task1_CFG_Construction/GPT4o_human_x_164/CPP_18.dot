To create a control flow graph (CFG) in the DOT format from the provided Intermediate Representation (IR) code, we will represent each basic block as a node and each branch as an edge connecting these nodes.

Here is how you can represent the control flow graph based on the IR code you provided:

```dot
digraph CFG {
    // Nodes
    node [shape=box];
    entry;
    block_8;
    block_21;
    block_27;
    block_29;
    block_36;
    block_39;
    block_41;
    block_43;
    block_44;
    block_51;
    block_53;
    block_58;
    block_62;
    block_64;
    block_72;

    // Edges
    entry -> block_8;
    block_8 -> block_21;
    block_21 -> block_27; // if condition
    block_21 -> block_29; // else condition
    block_27 -> block_29; // unreachable
    block_29 -> block_36; // if condition
    block_29 -> block_39; // else condition
    block_36 -> block_39;
    block_39 -> block_41; // switch case
    block_39 -> block_43; // switch case
    block_39 -> block_44; // continue to next
    block_41 -> block_44; // continue to next
    block_43 -> block_44; // continue to next
    block_44 -> block_51; // if condition
    block_51 -> block_58; // if condition
    block_51 -> block_53; // else condition
    block_53 -> block_58; // continue to next
    block_58 -> block_62; // if condition
    block_58 -> block_64; // else condition
    block_62 -> block_64; // continue to next
    block_64 -> block_72; // final return
    block_72 -> entry; // return to entry
}
```

### Explanation:
- Each basic block is represented as a node (e.g., `block_8`, `block_21`, etc.), and these blocks are identified by the labels associated with the branch instructions.
- The edges (`->`) represent the flow of control from one block to another based on the branching conditions.
- The `entry` node represents the starting point of the function, and it connects to the first block that gets executed.
- The conditions and branches (if-else structures) are captured as edges connecting to different blocks based on the outcomes of those conditions.

You can visualize this CFG using graph visualization tools that support the DOT language, such as Graphviz.