digraph CFG {
    // Nodes
    node [shape=box];
    entry [label="entry"];
    bb1 [label="%1"];
    bb2 [label="%9"];
    bb3 [label="%24"];
    bb4 [label="%35"];
    bb5 [label="%38"];
    bb6 [label="%40"];
    bb7 [label="%42"];
    bb8 [label="%43"];
    bb9 [label="%50"];
    bb10 [label="%52"];
    bb11 [label="%59"];
    bb12 [label="%61"];
    bb13 [label="%64"];
    bb14 [label="%70"];
    bb15 [label="%75"];
    bb16 [label="%76"];
    bb17 [label="%77"];
    bb18 [label="%80"];
    bb19 [label="ret"];

    // Edges
    entry -> bb1;
    bb1 -> bb2; // first conditional branch
    bb2 -> bb3; // if false branch
    bb2 -> bb4; // if true branch
    bb3 -> bb4; // fall through
    bb4 -> bb5; // check for condition
    bb5 -> bb6; // switch statement
    bb5 -> bb9; // continue or break logic
    bb4 -> bb5; // continue from bb4
    bb6 -> bb7; // case 1
    bb6 -> bb8; // case 0
    bb7 -> bb8; // fall through
    bb8 -> bb9; // continue to next block
    bb9 -> bb10; // continue based on condition
    bb10 -> bb11; // checks for condition
    bb10 -> bb14; // continues or breaks
    bb11 -> bb12; // check lower bound
    bb12 -> bb13; // check upper bound
    bb13 -> bb14; // increment loop
    bb14 -> bb15; // clean up node
    bb15 -> bb16; // end of node cleanup
    bb16 -> bb17; // continue based on condition
    bb17 -> bb18; // loop increment
    bb18 -> bb19; // return statement
    bb2 -> bb18; // loop back
    bb17 -> bb3; // continue or loop back
}