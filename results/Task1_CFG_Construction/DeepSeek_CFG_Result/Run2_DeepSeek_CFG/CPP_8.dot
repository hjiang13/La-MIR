<think>
Okay, I need to figure out how to create a control flow graph (CFG) from the given IR code. The user wants a dot file showing the nodes and edges without the contents of each basic block, just their titles.

First, I'll look through the IR code to identify all the basic blocks. Each block starts with a label like `label %2` or `11:`. I'll list these out as nodes in the graph.

Next, I'll determine the edges by following the control flow. Each `br` instruction will indicate an edge from one node to another. For example, if there's a `br i1 %10, label %91, label %11`, that means there's an edge from the current block to either %91 or %11 based on the condition.

I'll go through each block systematically, noting where each branch leads. Some blocks might have multiple predecessors, so I'll make sure to capture all incoming edges.

Once I have all the nodes and edges mapped out, I'll structure them into a dot file. Each node will be represented as a label, and edges will show the flow between them.

I need to ensure that the dot file is correctly formatted with `digraph`, `node`, and `edge` definitions. I'll also make sure that the nodes are properly connected based on the control flow I analyzed.

Finally, I'll review the dot file to make sure it accurately represents the CFG without including any unnecessary details about the blocks themselves, just their titles and connections.
</think>

Here is the control flow graph in dot file format:

```dot
digraph CFG {
    node [shape=box, style=filled];
    
    2 [label="2"];
    91 [label="91"];
    11 [label="11"];
    87 [label="87"];
    15 [label="15"];
    22 [label="22"];
    24 [label="24"];
    55 [label="55"];
    66 [label="66"];
    77 [label="77"];
    105 [label="105"];
    
    2 -> 91 [label="cond"];
    2 -> 11 [label="cond"];
    
    11 -> 87 [label="cond"];
    11 -> 15 [label="cond"];
    
    15 -> 22 [label="cond"];
    15 -> 55 [label="cond"];
    
    22 -> 24 [label=""];
    
    24 -> 24 [label="loop"];
    24 -> 55 [label="cond"];
    
    55 -> 77 [label="cond"];
    55 -> 66 [label="cond"];
    
    66 -> 77 [label=""];
    
    77 -> 91 [label="cond"];
    77 -> 87 [label="cond"];
    
    87 -> 105 [label=""];
    
    105 -> 91 [label="cond"];
    105 -> 105 [label="loop"];
}
```

This dot file represents the control flow graph of the given IR code. Each node represents a basic block, and edges represent control flow between blocks. The labels on the edges indicate whether the flow is conditional or unconditional. You can visualize this graph using any dot viewer to see the control flow structure.