The control flow graph for the given IR code program is as follows:
```
digraph G {
    node [shape=box];
    0 [label="Start"];
    1 [label="End"];
    2 [label="Function Attrs"];
    3 [label="Triangle Area"];
    4 [label="Return"];
    0 -> 2;
    2 -> 3;
    3 -> 4;
    4 -> 1;
}
```
In this graph, the nodes represent the basic blocks of the program, and the edges represent the control flow between them. The `Start` node represents the entry point of the program, and the `End` node represents the exit point of the program. The `Function Attrs` node represents the attributes of the function, and the `Triangle Area` node represents the computation of the triangle area. The `Return` node represents the return statement of the function.

The edges in the graph represent the control flow between the basic blocks. For example, the edge from `Start` to `Function Attrs` represents the control flow from the entry point of the program to the function attribute declaration. The edge from `Function Attrs` to `Triangle Area` represents the control flow from the function attribute declaration to the computation of the triangle area. The edge from `Triangle Area` to `Return` represents the control flow from the computation of the triangle area to the return statement of the function. Finally, the edge from `Return` to `End` represents the control flow from the return statement of the function to the exit point of the program.