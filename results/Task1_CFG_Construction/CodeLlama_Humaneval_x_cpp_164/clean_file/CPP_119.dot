digraph {
    node[shape=record];
    0[label="Function Attrs: uwtable\ndefine dso_local void @_Z12match_parensSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::vector"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {\n  %3 = alloca i64, align 8\n  %4 = alloca i64, align 8\n  %5 = alloca %"class.std::__cxx11::basic_string", align 8\n  %6 = alloca %"class.std::__cxx11::basic_string", align 8\n  %7 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*\n  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #6\n  %8 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0\n  %9 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %8, align 8, !tbaa !3\n  tail call void @llvm.experimental.noalias.scope.decl(metadata !8)\n  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2\n  %11 = bitcast %union.anon* %10 to i8*\n  store i8* %10, i8** %11, align 8, !tbaa !11, !alias.scope !8\n  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0\n  %13 = load i8*, i8** %12, align 8, !tbaa !13, !noalias !8\n  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 1\n  %15 = load i64, i64* %14, align 8, !tbaa !16, !noalias !8\n  %16 = icmp ugt i64 %15, 15\n  br i1 %16, label %20, label %18\n"]
    1[label="%20:                                               ; preds = %2\n  %21 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i64* nonnull align 8 dereferenceable(8) %4, i64 0)\n  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0\n  store i8* %21, i8** %22, align 8, !tbaa !13, !alias.scope !8\n  %23 = load i64, i64* %4, align 8, !tbaa !17, !noalias !8\n  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2\n  store i64 %23, i64* %24, align 8, !tbaa !18, !alias.scope !8\n  br label %25\n"]
    2[label="%25:                                               ; preds = %20, %18\n  %26 = phi i8* [ %19, %18 ], [ %21, %20 ]\n  switch i64 %15, label %29 [\n    i64 1, label %27\n    i64 0, label %30\n  ]\n"]
    3[label="%27:                                               ; preds = %25\n  %28 = load i8, i8* %13, align 1, !tbaa !18\n  store i8 %28, i8* %26, align 1, !tbaa !18\n  br label %30\n"]
    4[label="%29:                                               ; preds = %25\n  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %13, i64 %15, i1 false) #6\n  br label %30\n"]
    5[label="%30:                                               ; preds = %29, %27, %25\n  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 1, i32 0, i32 0\n  %32 = load i8*, i8** %31, align 8, !tbaa !13, !noalias !8\n  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 1, i32 1\n  %34 = load i64, i64* %33, align 8, !tbaa !16, !noalias !8\n  %35 = icmp eq i64 %34, 0\n  br i1 %35, label %119, label %45\n"]
    6[label="%45:                                               ; preds = %30\n  %46 = and i64 %34, 1\n  %47 = icmp eq i64 %34, 1\n  br i1 %47, label %87, label %48\n"]
    7[label="%48:                                               ; preds = %45\n  %49 = and i64 %34, -2\n  br label %58\n"]
    8