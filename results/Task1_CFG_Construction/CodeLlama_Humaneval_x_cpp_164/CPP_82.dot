Here is the control flow graph for the given IR code:
```
digraph {
    "main" -> "prime_length";
    "prime_length" -> "prime_length_entry";
    "prime_length_entry" -> "prime_length_loop";
    "prime_length_loop" -> "prime_length_loop_cond";
    "prime_length_loop_cond" -> "prime_length_loop_body";
    "prime_length_loop_body" -> "prime_length_loop_inc";
    "prime_length_loop_inc" -> "prime_length_loop_cond";
    "prime_length_loop_cond" -> "prime_length_loop_exit";
    "prime_length_loop_exit" -> "prime_length_exit";
    "prime_length_exit" -> "main";
}
```
Note: The above graph is a simplified representation of the control flow graph, and it does not include the contents of each basic block. The graph is represented using the dot language, which is a graph description language. The nodes in the graph represent the basic blocks in the IR code, and the edges represent the control flow between the basic blocks.