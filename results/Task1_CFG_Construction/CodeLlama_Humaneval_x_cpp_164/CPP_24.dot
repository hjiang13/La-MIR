Sure, I can help you with that. The control flow graph of the given IR code program is as follows:
```
digraph G {
    node [shape=box];
    0 [label="Start"];
    1 [label="Entry"];
    2 [label="Loop"];
    3 [label="End"];
    4 [label="Exit"];
    0 -> 1;
    1 -> 2;
    2 -> 3;
    3 -> 4;
    4 -> 1;
}
```
In this graph, node 0 represents the start of the program, node 1 represents the entry point of the function, node 2 represents the loop, node 3 represents the end of the loop, and node 4 represents the exit of the function. The edges between the nodes represent the control flow between them.

Note that this is just one possible control flow graph for this IR code program. There may be other possible control flow graphs depending on the specific implementation details of the compiler and the optimization level used.