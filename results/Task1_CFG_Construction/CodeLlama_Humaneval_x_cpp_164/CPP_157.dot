Sure, here's the control flow graph for the given IR code:
```
digraph G {
    node [shape=box];
    0 [label="start"];
    1 [label="define dso_local zeroext i1 @_Z20right_angle_trianglefff(float %0, float %1, float %2)"];
    2 [label="%4 = fmul float %0, %0"];
    3 [label="%5 = fmul float %1, %1"];
    4 [label="%6 = fadd float %4, %5"];
    5 [label="%7 = fmul float %2, %2"];
    6 [label="%8 = fsub float %6, %7"];
    7 [label="%9 = tail call float @llvm.fabs.f32(float %8)"];
    8 [label="%10 = fpext float %9 to double"];
    9 [label="%11 = fcmp olt double %10, 1.000000e-04"];
    10 [label="br i1 %11, label %25, label %12"];
    12 [label="%13 = fadd float %4, %7"];
    14 [label="%15 = fsub float %13, %5"];
    16 [label="%17 = tail call float @llvm.fabs.f32(float %15)"];
    18 [label="%19 = fpext float %17 to double"];
    20 [label="%21 = fcmp olt double %19, 1.000000e-04"];
    22 [label="br i1 %21, label %25, label %18"];
    24 [label="%25 = phi i1 [ false, %24 ], [ true, %18 ], [ true, %12 ], [ true, %3 ]"];
    26 [label="ret i1 %26"];
}
```
Note that this is just one possible control flow graph for the given IR code, and there may be other valid control flow graphs depending on the specific optimization and transformation passes applied to the code.