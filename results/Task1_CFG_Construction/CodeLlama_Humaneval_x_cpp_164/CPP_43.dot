Sure, here's the control flow graph for the given IR code program:
```
digraph G {
    node [shape=box];
    0 [label="start"];
    1 [label="if (x == 0)"];
    2 [label="if (y == 0)"];
    3 [label="if (x + y == 0)"];
    4 [label="return 0"];
    5 [label="return 1"];
    6 [label="return 2"];
    7 [label="return 3"];
    0 -> 1;
    1 -> 2;
    2 -> 3;
    3 -> 4;
    4 -> 5;
    5 -> 6;
    6 -> 7;
    7 -> 0;
}
```
In this graph, each node represents a basic block in the program, and each edge represents a control flow relationship between the basic blocks. The label for each node is the title of the basic block. The graph shows the flow of control through the program, starting at the "start" node and ending at the "return 3" node.