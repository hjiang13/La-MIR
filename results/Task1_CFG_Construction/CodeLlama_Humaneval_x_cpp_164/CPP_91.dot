Sure, I can help you with that. To draw the control flow graph of the given IR code program, you can use a tool like `opt` or `llvm-mca` that comes with LLVM.

Here's an example of how you can use `llvm-mca` to draw the control flow graph:
```bash
$ llvm-mca -cc1 -view-cfg-only test.ll
```
This will generate a `.dot` file called `test.ll.dot` that contains the control flow graph of the program. You can use a tool like `dot` to visualize the graph:
```bash
$ dot -Tpng test.ll.dot > test.png
```
This will generate a `test.png` file that contains the control flow graph of the program.

Alternatively, you can use `opt` to draw the control flow graph:
```bash
$ opt -cc1 -view-cfg-only test.ll
```
This will generate a `.dot` file called `test.ll.dot` that contains the control flow graph of the program. You can use a tool like `dot` to visualize the graph.

Note: The `-cc1` flag tells `opt` to use the LLVM IR parser to parse the input file, rather than the LLVM bitcode parser. This is necessary because the input file is in LLVM IR format.

I hope this helps! Let me know if you have any questions.