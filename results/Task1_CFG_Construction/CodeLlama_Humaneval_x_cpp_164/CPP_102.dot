Here is the control flow graph of the given IR code program, represented in the DOT format:
```dot
digraph G {
    node[shape=box];
    "entry" -> "bb1";
    "bb1" -> "bb2" [label="slt"];
    "bb2" -> "bb3" [label="eq"];
    "bb3" -> "bb4" [label="srem"];
    "bb4" -> "bb5" [label="eq"];
    "bb5" -> "bb6" [label="and"];
    "bb6" -> "bb7" [label="sext"];
    "bb7" -> "bb8" [label="add"];
    "bb8" -> "bb9" [label="phi"];
    "bb9" -> "bb10" [label="ret"];
}
```
Note that the nodes in the graph are labeled with the names of the basic blocks in the program, and the edges represent the control flow between the basic blocks. The `bb1` node is labeled as the entry point of the program, and the `bb10` node is labeled as the exit point. The `bb2`, `bb3`, `bb4`, `bb5`, and `bb6` nodes are labeled as the basic blocks that implement the `choose_num` function, and the `bb7` and `bb8` nodes are labeled as the basic blocks that implement the `sext` and `add` instructions, respectively. The `bb9` node is labeled as the basic block that implements the `phi` instruction.