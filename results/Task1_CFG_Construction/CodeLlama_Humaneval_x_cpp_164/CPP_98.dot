Sure! Here is the control flow graph for the given IR code program:
```
digraph {
    node [shape=box];
    0 [label="entry"];
    1 [label="count_upper"];
    2 [label="__cxx11::basic_string<char>::_Alloc_hider"];
    3 [label="struct.std::__cxx11::basic_string<char>::_Alloc_hider"];
    4 [label="union.anon"];
    5 [label="_Z11count_upperNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"];
    6 [label="i32"];
    7 [label="i8*"];
    8 [label="i64"];
    9 [label="i8"];
    10 [label="i32"];
    11 [label="i64"];
    12 [label="i8*"];
    13 [label="i64"];
    14 [label="i64"];
    15 [label="i32"];
    16 [label="i64"];
    17 [label="i8*"];
    18 [label="i64"];
    19 [label="i8*"];
    20 [label="i64"];
    21 [label="i64"];
    22 [label="i64"];
    23 [label="i64"];
    24 [label="i64"];
    25 [label="i64"];
    26 [label="i64"];
    27 [label="i64"];
    28 [label="i64"];
    29 [label="i64"];
    30 [label="i64"];
    31 [label="i64"];
    32 [label="i64"];
    33 [label="i64"];
    34 [label="i64"];
    35 [label="i64"];
    36 [label="i64"];
    37 [label="i64"];
    38 [label="i64"];
    39 [label="i64"];
    40 [label="i64"];
    41 [label="i64"];
    42 [label="i64"];
    43 [label="i64"];
    44 [label="i64"];
    45 [label="i64"];
    46 [label="i64"];
    47 [label="i64"];
    48 [label="i64"];
    49 [label="i64"];
    50 [label="i64"];
    51 [label="i64"];
    52 [label="i64"];
    53 [label="i64"];
    54 [label="i64"];
    55 [label="i64"];
    56 [label="i64"];
    57 [label="i64"];
    58 [label="i64"];
    59 [label="i64"];
    60 [label="i64"];
    61 [label="i64"];
    62 [label="i64"];
    63 [label="i64"];
    64 [label="i64"];
    65 [label="i64"];
    66 [label="i64"];
    67 [label="i64"];
    68 [label="i64"];
    69 [label="i64"];
    70 [label="i64"];
    71 [label="i64"];
    72 [label="i64"];
    73 [label="i64"];
    74 [label="i64"];
    75 [label="i64"];
    76 [label="i64"];
    77 [label="i64"];
    78 [label="i64"];
    79 [label="i64"];
    80 [label="i64"];
    81 [label="i64"];
    82 [label="i64"];
    83 [label="i64"];
    84 [label="i64"];
    85 [label="i64"];
    86 [label="i64"];
    87 [label="i64"];
    88 [label="i64"];
    89 [label="i64"];
    90 [label="i64"];
    91 [label="i64"];
    92 [label="i64"];
    93 [label="i64"];
    94 [label="i64"];
    95 [label="i64"];
    96 [label="i64"];
    97 [label="i64"];
    98 [label="i64"];
    99 [label="i64"];
    100 [label="i64"];

    0 -> 1 [label="entry"];
    1 -> 2 [label="count_upper"];
    2 -> 3 [label="__cxx11::basic_string<char>::_Alloc_hider"];
    3 -> 4 [label="struct.std::__cxx11::basic_string<char>::_Alloc_hider"];
    4 -> 5 [label="_Z11count_upperNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"];
    5 -> 6 [label="i32"];
    6 -> 7 [label="i8*"];
    7 -> 8 [label="i64"];
    8 -> 9 [label="i8"];
    9 -> 10 [label="i32"];
    10 -> 11 [label="i64"];
    11 -> 12 [label="i8*"];
    12 -> 13 [label="i64"];
    13 -> 14 [label="i64"];
    14 -> 15 [label="i32"];
    15 -> 16 [label="i64"];
    16 -> 17 [label="i8*"];
    17 -> 18 [label="i64"];
    18 -> 19 [label="i8*"];
    19 -> 20 [label="i64"];
    20 -> 21 [label="i64"];
    21 -> 22 [label="i64"];
    22 -> 23 [label="i64"];
    23 -> 24 [label="i64"];
    24 -> 25 [label="i64"];
    25 -> 26 [label="i64"];
    26 -> 27 [label="i64"];
    27 -> 28 [label="i64"];
    28 -> 29 [label="i64"];
    29 -> 30 [label="i64"];
    30 -> 31 [label="i64"];
    31 -> 32 [label="i64"];
    32 -> 33 [label="i64"];
    33 -> 34 [label="i64"];
    34 -> 35 [label="i64"];
    35 -> 36 [label="i64"];
    36 -> 37 [label="i64"];
    37 -> 38 [label="i64"];
    38 -> 39 [label="i64"];
    39 -> 40 [label="i64"];
    40 -> 41 [label="i64"];
    41 -> 42 [label="i64"];
    42 -> 43 [label="i64"];
    43 -> 44 [label="i64"];
    44 -> 45 [label="i64"];
    45 -> 46 [label="i64"];
    46 -> 47 [label="i64"];
    47 -> 48 [label="i64"];
    48 -> 49 [label="i64"];
    49 -> 50 [label="i64"];
    50 -> 51 [label="i64"];
    51 -> 52 [label="i64"];
    52 -> 53 [label="i64"];
    53 -> 54 [label="i64"];
    54 -> 55 [label="i64"];
    55 -> 56 [label="i64"];
    56 -> 57 [label="i64"];
    57 -> 58 [label="i64"];
    58 -> 59 [label="i64"];
    59 -> 60 [label="i64"];
    60 -> 61 [label="i64"];
    61 -> 62 [label="i64"];
    62 -> 63 [label="i64"];
    63 -> 64 [label="i64"];
    64 -> 65 [label="i64"];
    65 -> 66 [label="i64"];
    66 -> 67 [label="i64"];
    67 -> 68 [label="i64"];
    68 -> 69 [label="i64"];
    69 -> 70 [label="i64"];
    70 -> 71 [label="i64"];
    71 -> 72 [label="i64"];
    72 -> 73 [label="i64"];
    73 -> 74 [label="i64"];
    74 -> 75 [label="i64"];
    75 -> 76 [label="i64"];
    76 -> 77 [label="i64"];
    77 -> 78 [label="i64"];
    78 -> 79 [label="i64"];
    79 -> 80 [label="i64"];
    80 -> 81 [label="i64"];
    81 -> 82 [label="i64"];
    82 -> 83 [label="i64"];
    83 -> 84 [label="i64"];
    84 -> 85 [label="i64"];
    85 -> 86 [label="i64"];
    86 -> 87 [label="i64"];
    87 -> 88 [label="i64"];
    88 -> 89 [label="i64"];
    89 -> 90 [label="i64"];
    90 -> 91 [label="i64"];
    91 -> 92 [label="i64"];
    92 -> 93 [label="i64"];
    93 -> 94 [label="i64"];
    94 -> 95 [label="i64"];
    95 -> 96 [label="i64"];
    96 -> 97 [label="i64"];
    97 -> 98 [label="i64"];
    98 -> 99 [label="i64"];
    99 -> 100 [label="i64"];
}
```
Note that the nodes are labeled with their corresponding IR code instructions, and the edges represent the control flow between the instructions.