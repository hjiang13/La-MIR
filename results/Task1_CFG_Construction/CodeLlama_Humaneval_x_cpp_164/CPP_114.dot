Sure, here's the control flow graph of the given IR code program:
```
digraph G {
    rankdir=TB;
    node [shape=box];

    B0 [label="Start"];
    B1 [label="GetElementPtr Inbounds %"class.std::vector" %0, i64 0, i32 0, i32 0, i32 0, i32 0"];
    B2 [label="Load i64* %2, align 8"];
    B3 [label="Load i64 %3, align 8"];
    B4 [label="GetElementPtr Inbounds %"class.std::vector" %0, i64 0, i32 0, i32 0, i32 0, i32 1"];
    B5 [label="Load i64* %5, align 8"];
    B6 [label="PtrToInt i64* %6 to i64"];
    B7 [label="PtrToInt i64* %3 to i64"];
    B8 [label="Sub i64 %7, %8"];
    B9 [label="AShr exact i64 %9, 3"];
    B10 [label="ICmp ugt i64 %10, 1"];
    B11 [label="Br i1 %11, label %12, label %32"];
    B12 [label="Add nsw i64 %10, -1"];
    B13 [label="And i64 %12, 1"];
    B14 [label="ICmp eq i64 %9, 16"];
    B15 [label="Br i1 %14, label %16, label %18"];
    B16 [label="And i64 %12, -2"];
    B17 [label="Br label %34"];
    B18 [label="Phi i64 [undef, %12], [%53, %34]"];
    B19 [label="Phi i64 [1, %12], [%54, %34]"];
    B20 [label="Phi i64 [%4, %12], [%53, %34]"];
    B21 [label="Phi i64 [%4, %12], [%51, %34]"];
    B22 [label="ICmp eq i64 %14, 0"];
    B23 [label="Br i1 %22, label %32, label %24"];
    B24 [label="ICmp slt i64 %21, 0"];
    B25 [label="GetElementPtr Inbounds i64, i64* %3, i64 %20"];
    B26 [label="Load i64, i64* %25, align 8"];
    B27 [label="Select i1 %26, i64 %27, i64 0"];
    B28 [label="Add nsw i64 %28, %27"];
    B29 [label="ICmp slt i64 %29, %20"];
    B30 [label="Select i1 %29, i64 %29, i64 %20"];
    B31 [label="Br label %32"];
    B32 [label="Phi i64 [%4, %1], [%19, %18], [%31, %24]"];
    B33 [label="Ret i64 %33"];
    B34 [label="Phi i64 [1, %16], [%54, %34]"];
    B35 [label="Phi i64 [%4, %16], [%53, %34]"];
    B36 [label="Phi i64 [%4, %16], [%51, %34]"];
    B37 [label="Phi i64 [%17, %16], [%55, %34]"];
    B38 [label="ICmp slt i64 %36, 0"];
    B39 [label="GetElementPtr Inbounds i64, i64* %3, i64 %35"];
    B40 [label="Load i64, i64* %39, align 8"];
    B41 [label="Select i1 %40, i64 %41, i64 0"];
    B42 [label="Add nsw i64 %42, %41"];
    B43 [label="ICmp slt i64 %43, %36"];
    B44 [label="Select i1 %43, i64 %43, i64 %36"];
    B45 [label="Add nuw nsw i64 %35, 1"];
    B46 [label="ICmp slt i64 %43, 0"];
    B47 [label="GetElementPtr Inbounds i64, i64* %3, i64 %45"];
    B48 [label="Load i64, i64* %47, align 8"];
    B49 [label="Select i1 %48, i64 %49, i64 0"];
    B50 [label="Add nsw i64 %50, %49"];
    B51 [label="ICmp slt i64 %51, %44"];
    B52 [label="Select i1 %51, i64 %51, i64 %44"];
    B53 [label="Add nuw nsw i64 %35, 2"];
    B54 [label="Add i64 %38, -2"];
    B55 [label="ICmp eq i64 %54, 0"];
    B56 [label="Br i1 %55, label %18, label %34, !llvm.loop !11"];
}
```
Note that the nodes are labeled with their corresponding basic block names, and the edges represent the control flow between the basic blocks.