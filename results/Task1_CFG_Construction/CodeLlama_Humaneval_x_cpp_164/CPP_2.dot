Sure, here's the control flow graph for the given IR code:
```dot
digraph G {
    node[shape=box];
    0[label="entry"];
    1[label="fptosi float %0 to i32"];
    2[label="sitofp i32 %2 to float"];
    3[label="fsub float %0, %3"];
    4[label="ret float %4"];
    5[label="truncate_numberf"];
    6[label="noreturn"];
    7[label="mustprogress"];
    8[label="nofree"];
    9[label="norecurse"];
    10[label="nosync"];
    11[label="nounwind"];
    12[label="readnone"];
    13[label="uwtable"];
    14[label="willreturn"];

    0 -> 1;
    1 -> 2;
    2 -> 3;
    3 -> 4;
    4 -> 5;
    5 -> 6;
    6 -> 7;
    7 -> 8;
    8 -> 9;
    9 -> 10;
    10 -> 11;
    11 -> 12;
    12 -> 13;
    13 -> 14;
    14 -> 0;
}
```
Note that this is a simplified representation of the control flow graph, and it does not include the contents of each basic block. The nodes are labeled with the corresponding IR instructions, and the edges represent the control flow between the instructions. The entry node is labeled with "entry" and the exit node is labeled with "exit". The rest of the nodes are labeled with the corresponding IR instructions.