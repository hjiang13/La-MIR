digraph "Control Flow Graph" {
  node [shape=box];

  entry;
  "br label %2";
  "phi i64 [%96, %94], [0, %23]";
  "phi i8* [%95, %94], [%8, %23]";
  "phi i64 [%91, %94], [0, %23]";
  "load i8*, i8** %10";
  "gelementptr inbounds i8, i8* %30, i64 %29";
  "load i8, i8* %31";
  "sext i8 %32 to i16";
  "add nsw i16 %33, -93";
  "srem i16 %34, 26";
  "trunc i16 %35 to i8";
  "call void @llvm.lifetime.start.p0i8";
  "add nsw i8 %36, 97";
  "call void @llvm.experimental.noalias.scope.decl";
  "store %union.anon* %12, %union.anon** %13";
  "call void @llvm.lifetime.start.p0i8";
  "store i64 %27, i64* %3";
  "icmp ugt i64 %27, 15";
  "invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm";
  "store i8* %40, i8** %17";
  "load i64, i64* %3";
  "store i64 %42, i64* %18";
  "phi i8* [%40, %41], [%16, %26]";
  "switch i64 %27";
  "load i8, i8* %28";
  "store i8 %46, i8* %44";
  "call void @llvm.memcpy.p0i8.p0i8.i64";
  "load i64, i64* %3";
  "store i64 %49, i64* %19";
  "gelementptr inbounds i8, i8* %50, i64 %49";
  "store i8 0, i8* %51";
  "call void @llvm.lifetime.end.p0i8";
  "load i64, i64* %19";
  "invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc";

  "landingpad { i8*, i32 }";
  "load i8*, i8** %17";
  "icmp eq i8* %56, %16";
  "call void @_ZdlPv";
  "load i8*, i8** %17";
  "icmp eq i8* %60, %16";
  "load i64, i64* %19";
  "icmp eq i64 %63, 0";
  "load i8*, i8** %14";
  "icmp eq i64 %63, 1";
  "load i8, i8* %16";
  "store i8 %69, i8* %66";
  "call void @llvm.memcpy.p0i8.p0i8.i64";
  "load i64, i64* %19";
  "store i64 %72, i64* %7";
  "load i8*, i8** %14";
  "gelementptr inbounds i8, i8* %73, i64 %72";
  "store i8 0, i8* %74";
  "load i8*, i8** %17";
  "load i8*, i8** %14";
  "icmp eq i8* %77, %8";
  "load i64, i64* %20";
  "store i8* %60, i8** %14";
  "load <2 x i64>, <2 x i64>* %24";
  "store <2 x i64> %80, <2 x i64>* %25";
  "icmp eq i8* %77, null";
  "or i1 %78, %81";
  "store i8* %77, i8** %17";
  "store i64 %79, i64* %18";
  "store %union.anon* %12, %union.anon** %13";
  "phi i8* [ %75, %71 ], [ %77, %83 ], [ %16, %84 ]";
  "store i64 0, i64* %19";
  "store i8 0, i8* %86";
  "load i8*, i8** %17";
  "icmp eq i8* %87, %16";
  "call void @llvm.lifetime.end.p0i8";
  "load i64, i64* %9";
  "icmp ugt i64 %92, %91";
  "load i8*, i8** %14";
  "load i64, i64* %7";
  "landingpad { i8*, i32 }";
  "call void @llvm.lifetime.end.p0i8";
  "load i8*, i8** %14";
  "icmp eq i8* %101, %8";
  "call void @_ZdlPv";
  "resume { i8*, i32 }";

  "ret void";

  entry -> "br label %2" [label="true"];

  "br label %2" -> "phi i64 [%96, %94], [0, %23]";

  "phi i64 [%96, %94], [0, %23]" -> "phi i8* [%95, %94], [%8, %23]";

  "phi i8* [%95, %94], [%8, %23]" -> "phi i64 [%91, %94], [0, %23]";

  "phi i64 [%91, %94], [0, %23]" -> "load i8*, i8** %10";

  "load i8*, i8** %10" -> "gelementptr inbounds i8, i8* %30, i64 %29";

  "gelementptr inbounds i8, i8* %30, i64 %29" -> "load i8, i8* %31";

  "load i8, i8* %31" -> "sext i8 %32 to i16";

  "sext i8 %32 to i16" -> "add nsw i16 %33, -93";

  "add nsw i16 %33, -93" -> "srem i16 %34, 26";

  "srem i16 %34, 26" -> "trunc i16 %35 to i8";

  "trunc i16 %35 to i8" -> "call void @llvm.lifetime.start.p0i8";

  "call void @llvm.lifetime.start.p0i8" -> "add nsw i8 %36, 97";

  "add nsw i8 %36, 97" -> "call void @llvm.experimental.noalias.scope.decl";

  "call void @llvm.experimental.noalias.scope.decl" -> "store %union.anon* %12, %union.anon** %13";

  "store %union.anon* %12, %union.anon** %13" -> "call void @llvm.lifetime.start.p0i8";

  "call void @llvm.