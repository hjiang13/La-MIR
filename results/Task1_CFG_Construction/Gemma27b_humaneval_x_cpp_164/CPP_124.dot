```dot
digraph {
  node [shape=box];
entry;
"br i1 %7, label %8, label %92";
"br i1 %13, label %92, label %94";
"bitcast %class.std::__cxx11::basic_string* %2 to i8*";
"bitcast %union.anon* %16 to i8*";
"bitcast %union.anon* %16 to i16*";
"bitcast i8* %10 to i16*";
"call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15)";
"call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15)";
"call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31)";
"call void @llvm.experimental.noalias.scope.decl(metadata !16)";
"call void @_ZdlPv(i8* %27)";
"call i64 @strtol(i8* nocapture nonnull %18, i8** null, i32 10)";
"call void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 3, i64 %32)";
"call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31)";
"call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57)";
"call void @llvm.experimental.noalias.scope.decl(metadata !19)";
"call void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 6, i64 %58)";
"call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57)";
"add i32 %26, -1";
"add i32 %52, -1";
"select i1 %74, i1 true, i1 %76";
"icmp eq i32 %52, 31";
"icmp ult i32 %81, 10";
"select i1 %84, i1 true, i1 %85";
"br i1 %82, label %87, label %83";
"trunc i32 %81 to i16";
"lshr i16 661, %88";
"and i16 %89, 1";
"icmp eq i16 %90, 0";
"br i1 %91, label %83, label %92";
"ret i1 %93";
"br i1 %98, label %103, label %92";
"br i1 %107, label %92, label %108";
"br i1 %112, label %92, label %113";
"br i1 %116, label %117, label %92";
"br i1 %121, label %92, label %122";
"br i1 %126, label %92, label %127";
"br i1 %131, label %92, label %132";
"br i1 %136, label %92, label %14";
"icmp ugt i8 %97, 9";
"icmp eq i8 %101, 45";
"icmp ugt i8 %106, 9";
"icmp ugt i8 %111, 9";
"icmp eq i8 %115, 45";
"icmp ugt i8 %120, 9";
"icmp ugt i8 %125, 9";
"icmp ugt i8 %130, 9";
"icmp ugt i8 %135, 9";
"load i64, i64* %5, align 8, !tbaa !3";
"icmp ult i64 %32, 3