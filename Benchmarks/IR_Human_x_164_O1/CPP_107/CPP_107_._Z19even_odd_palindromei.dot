digraph "CFG for '_Z19even_odd_palindromei' function" {
	label="CFG for '_Z19even_odd_palindromei' function";

	Node0x56099bab2610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %5 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %6 = bitcast %\"class.std::__cxx11::basic_string\"* %4 to i8*\l  %7 = bitcast %\"class.std::__cxx11::basic_string\"* %5 to i8*\l  %8 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 0, i32 0\l  %9 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 1\l  %10 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %5, i64 0, i32 2\l  %11 = bitcast %\"class.std::__cxx11::basic_string\"* %5 to %union.anon**\l  %12 = bitcast i64* %3 to i8*\l  %13 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %5, i64 0, i32 0, i32 0\l  %14 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %5, i64 0, i32 2, i32 0\l  %15 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %5, i64 0, i32 0, i32 0\l  %16 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %5, i64 0, i32 1\l  %17 = bitcast %union.anon* %10 to i8*\l  %18 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2\l  %19 = bitcast %union.anon* %18 to i8*\l  %20 = icmp slt i32 %1, 1\l  br i1 %20, label %21, label %43\l|{<s0>T|<s1>F}}"];
	Node0x56099bab2610:s0 -> Node0x56099bab2dc0;
	Node0x56099bab2610:s1 -> Node0x56099bab3510;
	Node0x56099bab2dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%21:\l21:                                               \l  %22 = phi i32 [ 0, %2 ], [ %100, %108 ]\l  %23 = phi i32 [ 0, %2 ], [ %88, %108 ]\l  %24 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %24, i8 0, i64 24, i1 false) #10\l  %25 = invoke noalias nonnull i8* @_Znwm(i64 8) #11\l          to label %33 unwind label %26\l}"];
	Node0x56099bab2dc0 -> Node0x56099bab3d00;
	Node0x56099bab2dc0 -> Node0x56099bab3d90;
	Node0x56099bab3d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%26:\l26:                                               \l  %27 = landingpad \{ i8*, i32 \}\l          cleanup\l  %28 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %29 = load i32*, i32** %28, align 8, !tbaa !3\l  %30 = icmp eq i32* %29, null\l  br i1 %30, label %121, label %31\l|{<s0>T|<s1>F}}"];
	Node0x56099bab3d90:s0 -> Node0x56099bab5070;
	Node0x56099bab3d90:s1 -> Node0x56099bab5100;
	Node0x56099bab5100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%31:\l31:                                               \l  %32 = bitcast i32* %29 to i8*\l  call void @_ZdlPv(i8* nonnull %32) #10\l  br label %121\l}"];
	Node0x56099bab5100 -> Node0x56099bab5070;
	Node0x56099bab3d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%33:\l33:                                               \l  %34 = bitcast i8* %25 to i32*\l  %35 = bitcast %\"class.std::vector\"* %0 to i8**\l  store i8* %25, i8** %35, align 8, !tbaa !3\l  %36 = getelementptr inbounds i8, i8* %25, i64 8\l  %37 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %38 = bitcast i32** %37 to i8**\l  store i8* %36, i8** %38, align 8, !tbaa !8\l  store i32 %22, i32* %34, align 4\l  %39 = getelementptr inbounds i8, i8* %25, i64 4\l  %40 = bitcast i8* %39 to i32*\l  store i32 %23, i32* %40, align 4\l  %41 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %42 = bitcast i32** %41 to i8**\l  store i8* %36, i8** %42, align 8, !tbaa !9\l  ret void\l}"];
	Node0x56099bab3510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%43:\l43:                                               \l  %44 = phi i32 [ %88, %108 ], [ 0, %2 ]\l  %45 = phi i32 [ %100, %108 ], [ 0, %2 ]\l  %46 = phi i32 [ %109, %108 ], [ 1, %2 ]\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10\l  call void (%\"class.std::__cxx11::basic_string\"*, i32 (i8*, i64, i8*,\l... %struct.__va_list_tag*)*, i64, i8*, ...)\l... @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc\l...EEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%\"class.std::__cxx11::basic_string\"\l...* nonnull sret(%\"class.std::__cxx11::basic_string\") align 8 %4, i32 (i8*, i64,\l... i8*, %struct.__va_list_tag*)* nonnull @vsnprintf, i64 16, i8* getelementptr\l... inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %46)\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #10\l  %47 = load i8*, i8** %8, align 8, !tbaa !10, !noalias !14\l  %48 = load i64, i64* %9, align 8, !tbaa !17, !noalias !14\l  %49 = getelementptr inbounds i8, i8* %47, i64 %48\l  store %union.anon* %10, %union.anon** %11, align 8, !tbaa !18\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10\l  store i64 %48, i64* %3, align 8, !tbaa !19\l  %50 = icmp ugt i64 %48, 15\l  br i1 %50, label %51, label %55\l|{<s0>T|<s1>F}}"];
	Node0x56099bab3510:s0 -> Node0x56099bab84f0;
	Node0x56099bab3510:s1 -> Node0x56099bab8580;
	Node0x56099bab84f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%51:\l51:                                               \l  %52 = invoke i8*\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%\"class.s\l...td::__cxx11::basic_string\"* nonnull align 8 dereferenceable(32) %5, i64*\l... nonnull align 8 dereferenceable(8) %3, i64 0)\l          to label %53 unwind label %111\l}"];
	Node0x56099bab84f0 -> Node0x56099bab87b0;
	Node0x56099bab84f0 -> Node0x56099bab8800;
	Node0x56099bab87b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%53:\l53:                                               \l  store i8* %52, i8** %13, align 8, !tbaa !10\l  %54 = load i64, i64* %3, align 8, !tbaa !19\l  store i64 %54, i64* %14, align 8, !tbaa !20\l  br label %55\l}"];
	Node0x56099bab87b0 -> Node0x56099bab8580;
	Node0x56099bab8580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%55:\l55:                                               \l  %56 = icmp eq i64 %48, 0\l  br i1 %56, label %66, label %57\l|{<s0>T|<s1>F}}"];
	Node0x56099bab8580:s0 -> Node0x56099bab86c0;
	Node0x56099bab8580:s1 -> Node0x56099bab9ad0;
	Node0x56099bab9ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%57:\l57:                                               \l  %58 = load i8*, i8** %15, align 8, !tbaa !10\l  br label %59\l}"];
	Node0x56099bab9ad0 -> Node0x56099bab9c80;
	Node0x56099bab9c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi i8* [ %62, %59 ], [ %49, %57 ]\l  %61 = phi i8* [ %64, %59 ], [ %58, %57 ]\l  %62 = getelementptr inbounds i8, i8* %60, i64 -1\l  %63 = load i8, i8* %62, align 1, !tbaa !20\l  store i8 %63, i8* %61, align 1, !tbaa !20\l  %64 = getelementptr inbounds i8, i8* %61, i64 1\l  %65 = icmp eq i8* %62, %47\l  br i1 %65, label %66, label %59, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x56099bab9c80:s0 -> Node0x56099bab86c0;
	Node0x56099bab9c80:s1 -> Node0x56099bab9c80;
	Node0x56099bab86c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%66:\l66:                                               \l  %67 = load i64, i64* %3, align 8, !tbaa !19\l  store i64 %67, i64* %16, align 8, !tbaa !17\l  %68 = load i8*, i8** %15, align 8, !tbaa !10\l  %69 = getelementptr inbounds i8, i8* %68, i64 %67\l  store i8 0, i8* %69, align 1, !tbaa !20\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10\l  %70 = load i64, i64* %9, align 8, !tbaa !17\l  %71 = load i64, i64* %16, align 8, !tbaa !17\l  %72 = icmp eq i64 %70, %71\l  br i1 %72, label %73, label %80\l|{<s0>T|<s1>F}}"];
	Node0x56099bab86c0:s0 -> Node0x56099babba40;
	Node0x56099bab86c0:s1 -> Node0x56099babba90;
	Node0x56099babba40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%73:\l73:                                               \l  %74 = icmp eq i64 %70, 0\l  br i1 %74, label %80, label %75\l|{<s0>T|<s1>F}}"];
	Node0x56099babba40:s0 -> Node0x56099babba90;
	Node0x56099babba40:s1 -> Node0x56099babbc60;
	Node0x56099babbc60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%75:\l75:                                               \l  %76 = load i8*, i8** %15, align 8, !tbaa !10\l  %77 = load i8*, i8** %8, align 8, !tbaa !10\l  %78 = call i32 @bcmp(i8* %77, i8* %76, i64 %70) #10\l  %79 = icmp eq i32 %78, 0\l  br label %80\l}"];
	Node0x56099babbc60 -> Node0x56099babba90;
	Node0x56099babba90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%80:\l80:                                               \l  %81 = phi i1 [ false, %66 ], [ %79, %75 ], [ true, %73 ]\l  %82 = xor i1 %81, true\l  %83 = and i32 %46, 1\l  %84 = icmp eq i32 %83, 0\l  %85 = select i1 %82, i1 true, i1 %84\l  %86 = xor i1 %85, true\l  %87 = zext i1 %86 to i32\l  %88 = add nuw nsw i32 %44, %87\l  br i1 %72, label %89, label %96\l|{<s0>T|<s1>F}}"];
	Node0x56099babba90:s0 -> Node0x56099babc690;
	Node0x56099babba90:s1 -> Node0x56099babc6e0;
	Node0x56099babc690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%89:\l89:                                               \l  %90 = icmp eq i64 %70, 0\l  br i1 %90, label %96, label %91\l|{<s0>T|<s1>F}}"];
	Node0x56099babc690:s0 -> Node0x56099babc6e0;
	Node0x56099babc690:s1 -> Node0x56099babc870;
	Node0x56099babc870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%91:\l91:                                               \l  %92 = load i8*, i8** %15, align 8, !tbaa !10\l  %93 = load i8*, i8** %8, align 8, !tbaa !10\l  %94 = call i32 @bcmp(i8* %93, i8* %92, i64 %70) #10\l  %95 = icmp eq i32 %94, 0\l  br label %96\l}"];
	Node0x56099babc870 -> Node0x56099babc6e0;
	Node0x56099babc6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%96:\l96:                                               \l  %97 = phi i1 [ false, %80 ], [ %95, %91 ], [ true, %89 ]\l  %98 = select i1 %97, i1 %84, i1 false\l  %99 = zext i1 %98 to i32\l  %100 = add nuw nsw i32 %45, %99\l  %101 = load i8*, i8** %15, align 8, !tbaa !10\l  %102 = icmp eq i8* %101, %17\l  br i1 %102, label %104, label %103\l|{<s0>T|<s1>F}}"];
	Node0x56099babc6e0:s0 -> Node0x56099babd020;
	Node0x56099babc6e0:s1 -> Node0x56099babd070;
	Node0x56099babd070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%103:\l103:                                              \l  call void @_ZdlPv(i8* %101) #10\l  br label %104\l}"];
	Node0x56099babd070 -> Node0x56099babd020;
	Node0x56099babd020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%104:\l104:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10\l  %105 = load i8*, i8** %8, align 8, !tbaa !10\l  %106 = icmp eq i8* %105, %19\l  br i1 %106, label %108, label %107\l|{<s0>T|<s1>F}}"];
	Node0x56099babd020:s0 -> Node0x56099bab3680;
	Node0x56099babd020:s1 -> Node0x56099babd520;
	Node0x56099babd520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%107:\l107:                                              \l  call void @_ZdlPv(i8* %105) #10\l  br label %108\l}"];
	Node0x56099babd520 -> Node0x56099bab3680;
	Node0x56099bab3680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%108:\l108:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10\l  %109 = add nuw i32 %46, 1\l  %110 = icmp eq i32 %46, %1\l  br i1 %110, label %21, label %43, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x56099bab3680:s0 -> Node0x56099bab2dc0;
	Node0x56099bab3680:s1 -> Node0x56099bab3510;
	Node0x56099bab8800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%111:\l111:                                              \l  %112 = landingpad \{ i8*, i32 \}\l          cleanup\l  %113 = bitcast %\"class.std::__cxx11::basic_string\"* %4 to i8*\l  %114 = bitcast %\"class.std::__cxx11::basic_string\"* %5 to i8*\l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #10\l  %115 = load i8*, i8** %8, align 8, !tbaa !10\l  %116 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2\l  %117 = bitcast %union.anon* %116 to i8*\l  %118 = icmp eq i8* %115, %117\l  br i1 %118, label %120, label %119\l|{<s0>T|<s1>F}}"];
	Node0x56099bab8800:s0 -> Node0x56099babdff0;
	Node0x56099bab8800:s1 -> Node0x56099babe040;
	Node0x56099babe040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%119:\l119:                                              \l  call void @_ZdlPv(i8* %115) #10\l  br label %120\l}"];
	Node0x56099babe040 -> Node0x56099babdff0;
	Node0x56099babdff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%120:\l120:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %113) #10\l  br label %121\l}"];
	Node0x56099babdff0 -> Node0x56099bab5070;
	Node0x56099bab5070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%121:\l121:                                              \l  %122 = phi \{ i8*, i32 \} [ %112, %120 ], [ %27, %26 ], [ %27, %31 ]\l  resume \{ i8*, i32 \} %122\l}"];
}
