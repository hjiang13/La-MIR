digraph "CFG for '_Z7minPathSt6vectorIS_IiSaIiEESaIS1_EEi' function" {
	label="CFG for '_Z7minPathSt6vectorIS_IiSaIiEESaIS1_EEi' function";

	Node0x558b39e5a870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = bitcast i32* %4 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8\l  %7 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %1, i64 0, i32 0, i32 0, i32 0, i32 1\l  %8 = load %\"class.std::vector\"*, %\"class.std::vector\"** %7, align 8, !tbaa !3\l  %9 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %1, i64 0, i32 0, i32 0, i32 0, i32 0\l  %10 = load %\"class.std::vector\"*, %\"class.std::vector\"** %9, align 8, !tbaa\l... !8\l  %11 = ptrtoint %\"class.std::vector\"* %8 to i64\l  %12 = ptrtoint %\"class.std::vector\"* %10 to i64\l  %13 = sub i64 %11, %12\l  %14 = sdiv exact i64 %13, 24\l  %15 = icmp eq i64 %13, 0\l  br i1 %15, label %51, label %16\l|{<s0>T|<s1>F}}"];
	Node0x558b39e5a870:s0 -> Node0x558b39e5af10;
	Node0x558b39e5a870:s1 -> Node0x558b39e5c5e0;
	Node0x558b39e5c5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%16:\l16:                                               \l  %17 = call i64 @llvm.umax.i64(i64 %14, i64 1)\l  br label %18\l}"];
	Node0x558b39e5c5e0 -> Node0x558b39e5c930;
	Node0x558b39e5c930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%18:\l18:                                               \l  %19 = phi i64 [ 0, %16 ], [ %49, %46 ]\l  %20 = phi i32 [ undef, %16 ], [ %48, %46 ]\l  %21 = phi i32 [ undef, %16 ], [ %47, %46 ]\l  %22 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %10, i64 %19, i32 0, i32 0, i32 0, i32 1\l  %23 = load i32*, i32** %22, align 8, !tbaa !9\l  %24 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %10, i64 %19, i32 0, i32 0, i32 0, i32 0\l  %25 = load i32*, i32** %24, align 8, !tbaa !11\l  %26 = ptrtoint i32* %23 to i64\l  %27 = ptrtoint i32* %25 to i64\l  %28 = sub i64 %26, %27\l  %29 = icmp eq i64 %28, 0\l  br i1 %29, label %46, label %30\l|{<s0>T|<s1>F}}"];
	Node0x558b39e5c930:s0 -> Node0x558b39e5ca20;
	Node0x558b39e5c930:s1 -> Node0x558b39e5d8f0;
	Node0x558b39e5d8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%30:\l30:                                               \l  %31 = ashr exact i64 %28, 2\l  %32 = call i64 @llvm.umax.i64(i64 %31, i64 1)\l  %33 = trunc i64 %19 to i32\l  br label %34\l}"];
	Node0x558b39e5d8f0 -> Node0x558b39e5dec0;
	Node0x558b39e5dec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = phi i64 [ 0, %30 ], [ %44, %34 ]\l  %36 = phi i32 [ %20, %30 ], [ %43, %34 ]\l  %37 = phi i32 [ %21, %30 ], [ %41, %34 ]\l  %38 = getelementptr inbounds i32, i32* %25, i64 %35\l  %39 = load i32, i32* %38, align 4, !tbaa !12\l  %40 = icmp eq i32 %39, 1\l  %41 = select i1 %40, i32 %33, i32 %37\l  %42 = trunc i64 %35 to i32\l  %43 = select i1 %40, i32 %42, i32 %36\l  %44 = add nuw nsw i64 %35, 1\l  %45 = icmp eq i64 %44, %32\l  br i1 %45, label %46, label %34, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x558b39e5dec0:s0 -> Node0x558b39e5ca20;
	Node0x558b39e5dec0:s1 -> Node0x558b39e5dec0;
	Node0x558b39e5ca20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%46:\l46:                                               \l  %47 = phi i32 [ %21, %18 ], [ %41, %34 ]\l  %48 = phi i32 [ %20, %18 ], [ %43, %34 ]\l  %49 = add nuw nsw i64 %19, 1\l  %50 = icmp eq i64 %49, %17\l  br i1 %50, label %51, label %18, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x558b39e5ca20:s0 -> Node0x558b39e5af10;
	Node0x558b39e5ca20:s1 -> Node0x558b39e5c930;
	Node0x558b39e5af10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%51:\l51:                                               \l  %52 = phi i32 [ undef, %3 ], [ %47, %46 ]\l  %53 = phi i32 [ undef, %3 ], [ %48, %46 ]\l  %54 = mul i64 %14, %14\l  %55 = trunc i64 %54 to i32\l  store i32 %55, i32* %4, align 4, !tbaa !12\l  %56 = icmp sgt i32 %52, 0\l  br i1 %56, label %57, label %67\l|{<s0>T|<s1>F}}"];
	Node0x558b39e5af10:s0 -> Node0x558b39e5f6c0;
	Node0x558b39e5af10:s1 -> Node0x558b39e5f710;
	Node0x558b39e5f6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%57:\l57:                                               \l  %58 = add nsw i32 %52, -1\l  %59 = zext i32 %58 to i64\l  %60 = sext i32 %53 to i64\l  %61 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %10, i64 %59, i32 0, i32 0, i32 0, i32 0\l  %62 = load i32*, i32** %61, align 8, !tbaa !11\l  %63 = getelementptr inbounds i32, i32* %62, i64 %60\l  %64 = load i32, i32* %63, align 4, !tbaa !12\l  %65 = icmp slt i32 %64, %55\l  br i1 %65, label %66, label %67\l|{<s0>T|<s1>F}}"];
	Node0x558b39e5f6c0:s0 -> Node0x558b39e606d0;
	Node0x558b39e5f6c0:s1 -> Node0x558b39e5f710;
	Node0x558b39e606d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%66:\l66:                                               \l  store i32 %64, i32* %4, align 4, !tbaa !12\l  br label %67\l}"];
	Node0x558b39e606d0 -> Node0x558b39e5f710;
	Node0x558b39e5f710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%67:\l67:                                               \l  %68 = sext i32 %52 to i64\l  %69 = add nsw i64 %14, -1\l  %70 = icmp ugt i64 %69, %68\l  br i1 %70, label %71, label %82\l|{<s0>T|<s1>F}}"];
	Node0x558b39e5f710:s0 -> Node0x558b39e60a60;
	Node0x558b39e5f710:s1 -> Node0x558b39e60ab0;
	Node0x558b39e60a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%71:\l71:                                               \l  %72 = add nsw i32 %52, 1\l  %73 = sext i32 %72 to i64\l  %74 = sext i32 %53 to i64\l  %75 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %10, i64 %73, i32 0, i32 0, i32 0, i32 0\l  %76 = load i32*, i32** %75, align 8, !tbaa !11\l  %77 = getelementptr inbounds i32, i32* %76, i64 %74\l  %78 = load i32, i32* %77, align 4, !tbaa !12\l  %79 = load i32, i32* %4, align 4, !tbaa !12\l  %80 = icmp slt i32 %78, %79\l  br i1 %80, label %81, label %82\l|{<s0>T|<s1>F}}"];
	Node0x558b39e60a60:s0 -> Node0x558b39e610c0;
	Node0x558b39e60a60:s1 -> Node0x558b39e60ab0;
	Node0x558b39e610c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%81:\l81:                                               \l  store i32 %78, i32* %4, align 4, !tbaa !12\l  br label %82\l}"];
	Node0x558b39e610c0 -> Node0x558b39e60ab0;
	Node0x558b39e60ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%82:\l82:                                               \l  %83 = icmp sgt i32 %53, 0\l  br i1 %83, label %84, label %94\l|{<s0>T|<s1>F}}"];
	Node0x558b39e60ab0:s0 -> Node0x558b39e61350;
	Node0x558b39e60ab0:s1 -> Node0x558b39e613a0;
	Node0x558b39e61350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%84:\l84:                                               \l  %85 = add nsw i32 %53, -1\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %10, i64 %68, i32 0, i32 0, i32 0, i32 0\l  %88 = load i32*, i32** %87, align 8, !tbaa !11\l  %89 = getelementptr inbounds i32, i32* %88, i64 %86\l  %90 = load i32, i32* %89, align 4, !tbaa !12\l  %91 = load i32, i32* %4, align 4, !tbaa !12\l  %92 = icmp slt i32 %90, %91\l  br i1 %92, label %93, label %94\l|{<s0>T|<s1>F}}"];
	Node0x558b39e61350:s0 -> Node0x558b39e61940;
	Node0x558b39e61350:s1 -> Node0x558b39e613a0;
	Node0x558b39e61940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%93:\l93:                                               \l  store i32 %90, i32* %4, align 4, !tbaa !12\l  br label %94\l}"];
	Node0x558b39e61940 -> Node0x558b39e613a0;
	Node0x558b39e613a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%94:\l94:                                               \l  %95 = sext i32 %53 to i64\l  %96 = icmp ugt i64 %69, %95\l  br i1 %96, label %97, label %107\l|{<s0>T|<s1>F}}"];
	Node0x558b39e613a0:s0 -> Node0x558b39e61c40;
	Node0x558b39e613a0:s1 -> Node0x558b39e61c90;
	Node0x558b39e61c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%97:\l97:                                               \l  %98 = add nsw i32 %53, 1\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %10, i64 %68, i32 0, i32 0, i32 0, i32 0\l  %101 = load i32*, i32** %100, align 8, !tbaa !11\l  %102 = getelementptr inbounds i32, i32* %101, i64 %99\l  %103 = load i32, i32* %102, align 4, !tbaa !12\l  %104 = load i32, i32* %4, align 4, !tbaa !12\l  %105 = icmp slt i32 %103, %104\l  br i1 %105, label %106, label %107\l|{<s0>T|<s1>F}}"];
	Node0x558b39e61c40:s0 -> Node0x558b39e62230;
	Node0x558b39e61c40:s1 -> Node0x558b39e61c90;
	Node0x558b39e62230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%106:\l106:                                              \l  store i32 %103, i32* %4, align 4, !tbaa !12\l  br label %107\l}"];
	Node0x558b39e62230 -> Node0x558b39e61c90;
	Node0x558b39e61c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%107:\l107:                                              \l  %108 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 1\l  %109 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 2\l  %110 = bitcast i32* %5 to i8*\l  %111 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 1\l  %112 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 2\l  %113 = icmp sgt i32 %2, 0\l  %114 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %114, i8 0, i64 24, i1 false)\l  br i1 %113, label %115, label %143\l|{<s0>T|<s1>F}}"];
	Node0x558b39e61c90:s0 -> Node0x558b39e62d30;
	Node0x558b39e61c90:s1 -> Node0x558b39e62d80;
	Node0x558b39e62d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%115:\l115:                                              \l  %116 = phi i32 [ %141, %140 ], [ 0, %107 ]\l  %117 = and i32 %116, 1\l  %118 = icmp eq i32 %117, 0\l  br i1 %118, label %119, label %130\l|{<s0>T|<s1>F}}"];
	Node0x558b39e62d30:s0 -> Node0x558b39e630a0;
	Node0x558b39e62d30:s1 -> Node0x558b39e630f0;
	Node0x558b39e630a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%119:\l119:                                              \l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #8\l  store i32 1, i32* %5, align 4, !tbaa !12\l  %120 = load i32*, i32** %111, align 8, !tbaa !9\l  %121 = load i32*, i32** %112, align 8, !tbaa !18\l  %122 = icmp eq i32* %120, %121\l  br i1 %122, label %125, label %123\l|{<s0>T|<s1>F}}"];
	Node0x558b39e630a0:s0 -> Node0x558b39e63cb0;
	Node0x558b39e630a0:s1 -> Node0x558b39e63d40;
	Node0x558b39e63d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%123:\l123:                                              \l  store i32 1, i32* %120, align 4, !tbaa !12\l  %124 = getelementptr inbounds i32, i32* %120, i64 1\l  store i32* %124, i32** %111, align 8, !tbaa !9\l  br label %126\l}"];
	Node0x558b39e63d40 -> Node0x558b39e64040;
	Node0x558b39e63cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%125:\l125:                                              \l  invoke void\l... @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorI\l...PiS1_EEDpOT_(%\"class.std::vector\"* nonnull align 8 dereferenceable(24) %0,\l... i32* %120, i32* nonnull align 4 dereferenceable(4) %5)\l          to label %126 unwind label %127\l}"];
	Node0x558b39e63cb0 -> Node0x558b39e64040;
	Node0x558b39e63cb0 -> Node0x558b39e64210;
	Node0x558b39e64040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%126:\l126:                                              \l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #8\l  br label %140\l}"];
	Node0x558b39e64040 -> Node0x558b39e62e80;
	Node0x558b39e64210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%127:\l127:                                              \l  %128 = landingpad \{ i8*, i32 \}\l          cleanup\l  %129 = bitcast i32* %5 to i8*\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %129) #8\l  br label %144\l}"];
	Node0x558b39e64210 -> Node0x558b39e65210;
	Node0x558b39e630f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%130:\l130:                                              \l  %131 = load i32*, i32** %108, align 8, !tbaa !9\l  %132 = load i32*, i32** %109, align 8, !tbaa !18\l  %133 = icmp eq i32* %131, %132\l  br i1 %133, label %137, label %134\l|{<s0>T|<s1>F}}"];
	Node0x558b39e630f0:s0 -> Node0x558b39e65a50;
	Node0x558b39e630f0:s1 -> Node0x558b39e65aa0;
	Node0x558b39e65aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%134:\l134:                                              \l  %135 = load i32, i32* %4, align 4, !tbaa !12\l  store i32 %135, i32* %131, align 4, !tbaa !12\l  %136 = getelementptr inbounds i32, i32* %131, i64 1\l  store i32* %136, i32** %108, align 8, !tbaa !9\l  br label %140\l}"];
	Node0x558b39e65aa0 -> Node0x558b39e62e80;
	Node0x558b39e65a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%137:\l137:                                              \l  invoke void\l... @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iterato\l...rIPiS1_EEDpOT_(%\"class.std::vector\"* nonnull align 8 dereferenceable(24) %0,\l... i32* %131, i32* nonnull align 4 dereferenceable(4) %4)\l          to label %140 unwind label %138\l}"];
	Node0x558b39e65a50 -> Node0x558b39e62e80;
	Node0x558b39e65a50 -> Node0x558b39e65eb0;
	Node0x558b39e65eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%138:\l138:                                              \l  %139 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %144\l}"];
	Node0x558b39e65eb0 -> Node0x558b39e65210;
	Node0x558b39e62e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%140:\l140:                                              \l  %141 = add nuw nsw i32 %116, 1\l  %142 = icmp eq i32 %141, %2\l  br i1 %142, label %143, label %115, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x558b39e62e80:s0 -> Node0x558b39e62d80;
	Node0x558b39e62e80:s1 -> Node0x558b39e62d30;
	Node0x558b39e62d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%143:\l143:                                              \l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8\l  ret void\l}"];
	Node0x558b39e65210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%144:\l144:                                              \l  %145 = phi \{ i8*, i32 \} [ %128, %127 ], [ %139, %138 ]\l  %146 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 0\l  %147 = load i32*, i32** %146, align 8, !tbaa !11\l  %148 = icmp eq i32* %147, null\l  br i1 %148, label %151, label %149\l|{<s0>T|<s1>F}}"];
	Node0x558b39e65210:s0 -> Node0x558b39e66900;
	Node0x558b39e65210:s1 -> Node0x558b39e66950;
	Node0x558b39e66950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%149:\l149:                                              \l  %150 = bitcast i32* %147 to i8*\l  call void @_ZdlPv(i8* nonnull %150) #8\l  br label %151\l}"];
	Node0x558b39e66950 -> Node0x558b39e66900;
	Node0x558b39e66900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%151:\l151:                                              \l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8\l  resume \{ i8*, i32 \} %145\l}"];
}
