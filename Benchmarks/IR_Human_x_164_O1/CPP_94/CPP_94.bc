; ModuleID = '../../Human_xBenchmarks_164/CPP_94/CPP_94.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_94/CPP_94.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z = comdat any

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1

; Function Attrs: uwtable
define dso_local i32 @_Z9skjkasdkdSt6vectorIiSaIiEE(%"class.std::vector"* nocapture readonly %0) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8, !tbaa !3
  %6 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8, !tbaa !8
  %8 = ptrtoint i32* %5 to i64
  %9 = ptrtoint i32* %7 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = ashr exact i64 %10, 2
  %14 = call i64 @llvm.umax.i64(i64 %13, i64 1)
  br label %23

15:                                               ; preds = %45, %1
  %16 = phi i32 [ 0, %1 ], [ %46, %45 ]
  %17 = bitcast %"class.std::__cxx11::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 2
  %19 = bitcast %"class.std::__cxx11::basic_string"* %2 to %union.anon**
  store %union.anon* %18, %union.anon** %19, align 8, !tbaa !9
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  store i64 0, i64* %20, align 8, !tbaa !11
  %21 = bitcast %union.anon* %18 to i8*
  store i8 0, i8* %21, align 8, !tbaa !14
  %22 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #8
  invoke void (%"class.std::__cxx11::basic_string"*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i64, i8*, ...) @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %3, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* nonnull @vsnprintf, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %16)
          to label %49 unwind label %101

23:                                               ; preds = %12, %45
  %24 = phi i64 [ 0, %12 ], [ %47, %45 ]
  %25 = phi i32 [ 0, %12 ], [ %46, %45 ]
  %26 = getelementptr inbounds i32, i32* %7, i64 %24
  %27 = load i32, i32* %26, align 4, !tbaa !15
  %28 = icmp sgt i32 %27, %25
  br i1 %28, label %29, label %45

29:                                               ; preds = %23
  %30 = icmp slt i32 %27, 4
  br i1 %30, label %31, label %36

31:                                               ; preds = %36, %29
  %32 = phi i8 [ 1, %29 ], [ %41, %36 ]
  %33 = and i8 %32, 1
  %34 = icmp eq i8 %33, 0
  %35 = select i1 %34, i32 %25, i32 %27
  br label %45

36:                                               ; preds = %29, %36
  %37 = phi i32 [ %42, %36 ], [ 2, %29 ]
  %38 = phi i8 [ %41, %36 ], [ 1, %29 ]
  %39 = srem i32 %27, %37
  %40 = icmp eq i32 %39, 0
  %41 = select i1 %40, i8 0, i8 %38
  %42 = add nuw nsw i32 %37, 1
  %43 = mul nsw i32 %42, %42
  %44 = icmp sgt i32 %43, %27
  br i1 %44, label %31, label %36, !llvm.loop !17

45:                                               ; preds = %31, %23
  %46 = phi i32 [ %25, %23 ], [ %35, %31 ]
  %47 = add nuw nsw i64 %24, 1
  %48 = icmp eq i64 %47, %14
  br i1 %48, label %15, label %23, !llvm.loop !20

49:                                               ; preds = %15
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8, !tbaa !21
  %53 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %54 = bitcast %union.anon* %53 to i8*
  %55 = icmp eq i8* %52, %54
  br i1 %55, label %56, label %70

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  %58 = load i64, i64* %57, align 8, !tbaa !11
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %56
  %61 = load i8*, i8** %50, align 8, !tbaa !21
  %62 = icmp eq i64 %58, 1
  br i1 %62, label %63, label %65

63:                                               ; preds = %60
  %64 = load i8, i8* %52, align 1, !tbaa !14
  store i8 %64, i8* %61, align 1, !tbaa !14
  br label %66

65:                                               ; preds = %60
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 1 %52, i64 %58, i1 false) #8
  br label %66

66:                                               ; preds = %65, %63, %56
  %67 = load i64, i64* %57, align 8, !tbaa !11
  store i64 %67, i64* %20, align 8, !tbaa !11
  %68 = load i8*, i8** %50, align 8, !tbaa !21
  %69 = getelementptr inbounds i8, i8* %68, i64 %67
  store i8 0, i8* %69, align 1, !tbaa !14
  br label %85

70:                                               ; preds = %49
  %71 = load i8*, i8** %50, align 8, !tbaa !21
  %72 = icmp eq i8* %71, %21
  %73 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 2, i32 0
  %74 = load i64, i64* %73, align 8
  store i8* %52, i8** %50, align 8, !tbaa !21
  %75 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  %76 = load i64, i64* %75, align 8, !tbaa !11
  store i64 %76, i64* %20, align 8, !tbaa !11
  %77 = getelementptr %union.anon, %union.anon* %53, i64 0, i32 0
  %78 = load i64, i64* %77, align 8, !tbaa !14
  store i64 %78, i64* %73, align 8, !tbaa !14
  %79 = icmp eq i8* %71, null
  %80 = or i1 %72, %79
  br i1 %80, label %83, label %81

81:                                               ; preds = %70
  store i8* %71, i8** %51, align 8, !tbaa !21
  %82 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2, i32 0
  store i64 %74, i64* %82, align 8, !tbaa !14
  br label %85

83:                                               ; preds = %70
  %84 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  store %union.anon* %53, %union.anon** %84, align 8, !tbaa !21
  br label %85

85:                                               ; preds = %66, %81, %83
  %86 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  store i64 0, i64* %86, align 8, !tbaa !11
  %87 = load i8*, i8** %51, align 8, !tbaa !21
  store i8 0, i8* %87, align 1, !tbaa !14
  %88 = load i8*, i8** %51, align 8, !tbaa !21
  %89 = icmp eq i8* %88, %54
  br i1 %89, label %91, label %90

90:                                               ; preds = %85
  call void @_ZdlPv(i8* %88) #8
  br label %91

91:                                               ; preds = %85, %90
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #8
  %92 = load i64, i64* %20, align 8, !tbaa !11
  %93 = load i8*, i8** %50, align 8
  %94 = icmp eq i64 %92, 0
  br i1 %94, label %95, label %108

95:                                               ; preds = %108, %91
  %96 = phi i32 [ 0, %91 ], [ %115, %108 ]
  %97 = load i8*, i8** %50, align 8, !tbaa !21
  %98 = icmp eq i8* %97, %21
  br i1 %98, label %100, label %99

99:                                               ; preds = %95
  call void @_ZdlPv(i8* %97) #8
  br label %100

100:                                              ; preds = %95, %99
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #8
  ret i32 %96

101:                                              ; preds = %15
  %102 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #8
  %103 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8, !tbaa !21
  %105 = icmp eq i8* %104, %21
  br i1 %105, label %107, label %106

106:                                              ; preds = %101
  call void @_ZdlPv(i8* %104) #8
  br label %107

107:                                              ; preds = %101, %106
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #8
  resume { i8*, i32 } %102

108:                                              ; preds = %91, %108
  %109 = phi i64 [ %116, %108 ], [ 0, %91 ]
  %110 = phi i32 [ %115, %108 ], [ 0, %91 ]
  %111 = getelementptr inbounds i8, i8* %93, i64 %109
  %112 = load i8, i8* %111, align 1, !tbaa !14
  %113 = sext i8 %112 to i32
  %114 = add i32 %110, -48
  %115 = add i32 %114, %113
  %116 = add nuw nsw i64 %109, 1
  %117 = icmp eq i64 %116, %92
  br i1 %117, label %95, label %108, !llvm.loop !22
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* %1, i64 %2, i8* %3, ...) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca i64, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = alloca i8, i64 %2, align 16
  %8 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %8)
  %10 = call i32 %1(i8* nonnull %7, i64 %2, i8* %3, %struct.__va_list_tag* nonnull %9)
  call void @llvm.va_end(i8* %8)
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !9
  %14 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  store i64 %11, i64* %5, align 8, !tbaa !23
  %15 = icmp ugt i32 %10, 15
  br i1 %15, label %16, label %21

16:                                               ; preds = %4
  %17 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8, !tbaa !21
  %19 = load i64, i64* %5, align 8, !tbaa !23
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %19, i64* %20, align 8, !tbaa !14
  br label %21

21:                                               ; preds = %16, %4
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8, !tbaa !21
  switch i64 %11, label %26 [
    i64 1, label %24
    i64 0, label %27
  ]

24:                                               ; preds = %21
  %25 = load i8, i8* %7, align 16, !tbaa !14
  store i8 %25, i8* %23, align 1, !tbaa !14
  br label %27

26:                                               ; preds = %21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* nonnull align 16 %7, i64 %11, i1 false) #8
  br label %27

27:                                               ; preds = %21, %24, %26
  %28 = load i64, i64* %5, align 8, !tbaa !23
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %28, i64* %29, align 8, !tbaa !11
  %30 = load i8*, i8** %22, align 8, !tbaa !21
  %31 = getelementptr inbounds i8, i8* %30, i64 %28
  store i8 0, i8* %31, align 1, !tbaa !14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @vsnprintf(i8* nocapture noundef, i64 noundef, i8* nocapture noundef readonly, %struct.__va_list_tag* noundef) #2

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #3

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #3

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #7

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nofree nosync nounwind willreturn }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #6 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 8}
!4 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!4, !5, i64 0}
!9 = !{!10, !5, i64 0}
!10 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!11 = !{!12, !13, i64 8}
!12 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !10, i64 0, !13, i64 8, !6, i64 16}
!13 = !{!"long", !6, i64 0}
!14 = !{!6, !6, i64 0}
!15 = !{!16, !16, i64 0}
!16 = !{!"int", !6, i64 0}
!17 = distinct !{!17, !18, !19}
!18 = !{!"llvm.loop.mustprogress"}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = distinct !{!20, !18, !19}
!21 = !{!12, !5, i64 0}
!22 = distinct !{!22, !18, !19}
!23 = !{!13, !13, i64 0}
