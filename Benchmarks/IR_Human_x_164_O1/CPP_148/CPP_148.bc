; ModuleID = '../../Human_xBenchmarks_164/CPP_148/CPP_148.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_148/CPP_148.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_EET0_T_SC_SB_ = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ = comdat any

@.str = private unnamed_addr constant [8 x i8] c"Mercury\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"Venus\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"Earth\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"Jupiter\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"Saturn\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"Uranus\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"Neptune\00", align 1
@.str.10 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z2bfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_(%"class.std::vector"* noalias nocapture sret(%"class.std::vector") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1, %"class.std::__cxx11::basic_string"* nocapture readonly %2) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::vector", align 8
  %6 = alloca [8 x %"class.std::__cxx11::basic_string"], align 8
  %7 = alloca %"class.std::vector", align 8
  %8 = bitcast %"class.std::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = bitcast [8 x %"class.std::__cxx11::basic_string"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %9) #12
  %10 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 0
  %11 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 0, i32 2
  %12 = bitcast [8 x %"class.std::__cxx11::basic_string"]* %6 to %union.anon**
  store %union.anon* %11, %union.anon** %12, align 8, !tbaa !3
  %13 = bitcast %union.anon* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(7) %13, i8* noundef nonnull align 1 dereferenceable(7) getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 7, i1 false) #12
  %14 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 0, i32 1
  store i64 7, i64* %14, align 8, !tbaa !8
  %15 = bitcast %union.anon* %11 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 7
  store i8 0, i8* %16, align 1, !tbaa !11
  %17 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 1
  %18 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 1, i32 2
  %19 = bitcast %"class.std::__cxx11::basic_string"* %17 to %union.anon**
  store %union.anon* %18, %union.anon** %19, align 8, !tbaa !3
  %20 = bitcast %union.anon* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(5) %20, i8* noundef nonnull align 1 dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5, i1 false) #12
  %21 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 1, i32 1
  store i64 5, i64* %21, align 8, !tbaa !8
  %22 = bitcast %union.anon* %18 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 5
  store i8 0, i8* %23, align 1, !tbaa !11
  %24 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 2
  %25 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 2, i32 2
  %26 = bitcast %"class.std::__cxx11::basic_string"* %24 to %union.anon**
  store %union.anon* %25, %union.anon** %26, align 8, !tbaa !3
  %27 = bitcast %union.anon* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(5) %27, i8* noundef nonnull align 1 dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5, i1 false) #12
  %28 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 2, i32 1
  store i64 5, i64* %28, align 8, !tbaa !8
  %29 = bitcast %union.anon* %25 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 5
  store i8 0, i8* %30, align 1, !tbaa !11
  %31 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 3
  %32 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 3, i32 2
  %33 = bitcast %"class.std::__cxx11::basic_string"* %31 to %union.anon**
  store %union.anon* %32, %union.anon** %33, align 8, !tbaa !3
  %34 = bitcast %union.anon* %32 to i32*
  store i32 1936875853, i32* %34, align 8
  %35 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 3, i32 1
  store i64 4, i64* %35, align 8, !tbaa !8
  %36 = bitcast %union.anon* %32 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 4
  store i8 0, i8* %37, align 4, !tbaa !11
  %38 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 4
  %39 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 4, i32 2
  %40 = bitcast %"class.std::__cxx11::basic_string"* %38 to %union.anon**
  store %union.anon* %39, %union.anon** %40, align 8, !tbaa !3
  %41 = bitcast %union.anon* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(7) %41, i8* noundef nonnull align 1 dereferenceable(7) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i64 7, i1 false) #12
  %42 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 4, i32 1
  store i64 7, i64* %42, align 8, !tbaa !8
  %43 = bitcast %union.anon* %39 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 7
  store i8 0, i8* %44, align 1, !tbaa !11
  %45 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 5
  %46 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 5, i32 2
  %47 = bitcast %"class.std::__cxx11::basic_string"* %45 to %union.anon**
  store %union.anon* %46, %union.anon** %47, align 8, !tbaa !3
  %48 = bitcast %union.anon* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(6) %48, i8* noundef nonnull align 1 dereferenceable(6) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i64 6, i1 false) #12
  %49 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 5, i32 1
  store i64 6, i64* %49, align 8, !tbaa !8
  %50 = bitcast %union.anon* %46 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 6
  store i8 0, i8* %51, align 2, !tbaa !11
  %52 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 6
  %53 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 6, i32 2
  %54 = bitcast %"class.std::__cxx11::basic_string"* %52 to %union.anon**
  store %union.anon* %53, %union.anon** %54, align 8, !tbaa !3
  %55 = bitcast %union.anon* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(6) %55, i8* noundef nonnull align 1 dereferenceable(6) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i64 6, i1 false) #12
  %56 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 6, i32 1
  store i64 6, i64* %56, align 8, !tbaa !8
  %57 = bitcast %union.anon* %53 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 6
  store i8 0, i8* %58, align 2, !tbaa !11
  %59 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 7
  %60 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 7, i32 2
  %61 = bitcast %"class.std::__cxx11::basic_string"* %59 to %union.anon**
  store %union.anon* %60, %union.anon** %61, align 8, !tbaa !3
  %62 = bitcast %union.anon* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(7) %62, i8* noundef nonnull align 1 dereferenceable(7) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i64 7, i1 false) #12
  %63 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 7, i32 1
  store i64 7, i64* %63, align 8, !tbaa !8
  %64 = bitcast %union.anon* %60 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 7
  store i8 0, i8* %65, align 1, !tbaa !11
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false) #12
  %66 = invoke noalias nonnull i8* @_Znwm(i64 256) #13
          to label %67 unwind label %76

67:                                               ; preds = %3
  %68 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 8
  %69 = bitcast i8* %66 to %"class.std::__cxx11::basic_string"*
  %70 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.std::vector"* %5 to i8**
  store i8* %66, i8** %71, align 8, !tbaa !12
  %72 = getelementptr inbounds i8, i8* %66, i64 256
  %73 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %74 = bitcast %"class.std::__cxx11::basic_string"** %73 to i8**
  store i8* %72, i8** %74, align 8, !tbaa !14
  %75 = invoke %"class.std::__cxx11::basic_string"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_EET0_T_SC_SB_(%"class.std::__cxx11::basic_string"* nonnull %10, %"class.std::__cxx11::basic_string"* nonnull %68, %"class.std::__cxx11::basic_string"* nonnull %69)
          to label %83 unwind label %76

76:                                               ; preds = %67, %3
  %77 = landingpad { i8*, i32 }
          cleanup
  %78 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %78, align 8, !tbaa !12
  %80 = icmp eq %"class.std::__cxx11::basic_string"* %79, null
  br i1 %80, label %148, label %81

81:                                               ; preds = %76
  %82 = bitcast %"class.std::__cxx11::basic_string"* %79 to i8*
  call void @_ZdlPv(i8* nonnull %82) #12
  br label %148

83:                                               ; preds = %67
  %84 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"class.std::__cxx11::basic_string"* %75, %"class.std::__cxx11::basic_string"** %84, align 8, !tbaa !15
  %85 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 8
  br label %86

86:                                               ; preds = %95, %83
  %87 = phi %"class.std::__cxx11::basic_string"* [ %85, %83 ], [ %88, %95 ]
  %88 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %87, i64 -1
  %89 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %88, i64 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8, !tbaa !16
  %91 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %87, i64 -1, i32 2
  %92 = bitcast %union.anon* %91 to i8*
  %93 = icmp eq i8* %90, %92
  br i1 %93, label %95, label %94

94:                                               ; preds = %86
  call void @_ZdlPv(i8* %90) #12
  br label %95

95:                                               ; preds = %86, %94
  %96 = icmp eq %"class.std::__cxx11::basic_string"* %88, %10
  br i1 %96, label %97, label %86

97:                                               ; preds = %95
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %9) #12
  %98 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %84, align 8, !tbaa !15
  %99 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %70, align 8, !tbaa !12
  %100 = ptrtoint %"class.std::__cxx11::basic_string"* %98 to i64
  %101 = ptrtoint %"class.std::__cxx11::basic_string"* %99 to i64
  %102 = sub i64 %100, %101
  %103 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %104 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %105 = icmp eq i64 %102, 0
  br i1 %105, label %162, label %106

106:                                              ; preds = %97
  %107 = ashr exact i64 %102, 5
  %108 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  %109 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %110 = load i64, i64* %109, align 8, !tbaa !8
  %111 = load i64, i64* %108, align 8, !tbaa !8
  %112 = call i64 @llvm.umax.i64(i64 %107, i64 1)
  br label %113

113:                                              ; preds = %106, %142
  %114 = phi i64 [ 0, %106 ], [ %146, %142 ]
  %115 = phi i32 [ -1, %106 ], [ %145, %142 ]
  %116 = phi i32 [ -1, %106 ], [ %132, %142 ]
  %117 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %99, i64 %114
  %118 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %99, i64 %114, i32 1
  %119 = load i64, i64* %118, align 8, !tbaa !8
  %120 = icmp eq i64 %119, %110
  br i1 %120, label %121, label %129

121:                                              ; preds = %113
  %122 = icmp eq i64 %119, 0
  br i1 %122, label %129, label %123

123:                                              ; preds = %121
  %124 = load i8*, i8** %103, align 8, !tbaa !16
  %125 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %117, i64 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8, !tbaa !16
  %127 = call i32 @bcmp(i8* %126, i8* %124, i64 %119) #12
  %128 = icmp eq i32 %127, 0
  br label %129

129:                                              ; preds = %113, %121, %123
  %130 = phi i1 [ false, %113 ], [ %128, %123 ], [ true, %121 ]
  %131 = trunc i64 %114 to i32
  %132 = select i1 %130, i32 %131, i32 %116
  %133 = icmp eq i64 %119, %111
  br i1 %133, label %134, label %142

134:                                              ; preds = %129
  %135 = icmp eq i64 %119, 0
  br i1 %135, label %142, label %136

136:                                              ; preds = %134
  %137 = load i8*, i8** %104, align 8, !tbaa !16
  %138 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %117, i64 0, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8, !tbaa !16
  %140 = call i32 @bcmp(i8* %139, i8* %137, i64 %119) #12
  %141 = icmp eq i32 %140, 0
  br label %142

142:                                              ; preds = %129, %134, %136
  %143 = phi i1 [ false, %129 ], [ %141, %136 ], [ true, %134 ]
  %144 = trunc i64 %114 to i32
  %145 = select i1 %143, i32 %144, i32 %115
  %146 = add nuw nsw i64 %114, 1
  %147 = icmp eq i64 %146, %112
  br i1 %147, label %162, label %113, !llvm.loop !17

148:                                              ; preds = %76, %81
  %149 = getelementptr inbounds [8 x %"class.std::__cxx11::basic_string"], [8 x %"class.std::__cxx11::basic_string"]* %6, i64 0, i64 8
  br label %150

150:                                              ; preds = %159, %148
  %151 = phi %"class.std::__cxx11::basic_string"* [ %149, %148 ], [ %152, %159 ]
  %152 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %151, i64 -1
  %153 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %152, i64 0, i32 0, i32 0
  %154 = load i8*, i8** %153, align 8, !tbaa !16
  %155 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %151, i64 -1, i32 2
  %156 = bitcast %union.anon* %155 to i8*
  %157 = icmp eq i8* %154, %156
  br i1 %157, label %159, label %158

158:                                              ; preds = %150
  call void @_ZdlPv(i8* %154) #12
  br label %159

159:                                              ; preds = %150, %158
  %160 = icmp eq %"class.std::__cxx11::basic_string"* %152, %10
  br i1 %160, label %161, label %150

161:                                              ; preds = %159
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %9) #12
  br label %276

162:                                              ; preds = %142, %97
  %163 = phi i32 [ -1, %97 ], [ %132, %142 ]
  %164 = phi i32 [ -1, %97 ], [ %145, %142 ]
  %165 = icmp eq i32 %163, -1
  %166 = icmp eq i32 %164, -1
  %167 = select i1 %165, i1 true, i1 %166
  br i1 %167, label %168, label %170

168:                                              ; preds = %162
  %169 = bitcast %"class.std::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %169, i8 0, i64 24, i1 false)
  br label %255

170:                                              ; preds = %162
  %171 = icmp sgt i32 %163, %164
  %172 = select i1 %171, i32 %164, i32 %163
  %173 = select i1 %171, i32 %163, i32 %164
  %174 = bitcast %"class.std::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %174) #12
  %175 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %176 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %177 = bitcast i64* %4 to i8*
  %178 = add nsw i32 %172, 1
  %179 = icmp slt i32 %178, %173
  %180 = bitcast %"class.std::vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %180, i8 0, i64 24, i1 false)
  br i1 %179, label %181, label %225

181:                                              ; preds = %170
  %182 = add i32 %172, 1
  %183 = sext i32 %182 to i64
  br label %184

184:                                              ; preds = %181, %219
  %185 = phi i64 [ %183, %181 ], [ %220, %219 ]
  %186 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %70, align 8, !tbaa !12
  %187 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %186, i64 %185
  %188 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %175, align 8, !tbaa !15
  %189 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %176, align 8, !tbaa !14
  %190 = icmp eq %"class.std::__cxx11::basic_string"* %188, %189
  br i1 %190, label %218, label %191

191:                                              ; preds = %184
  %192 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %188, i64 0, i32 2
  %193 = bitcast %"class.std::__cxx11::basic_string"* %188 to %union.anon**
  store %union.anon* %192, %union.anon** %193, align 8, !tbaa !3
  %194 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %187, i64 0, i32 0, i32 0
  %195 = load i8*, i8** %194, align 8, !tbaa !16
  %196 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %186, i64 %185, i32 1
  %197 = load i64, i64* %196, align 8, !tbaa !8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #12
  store i64 %197, i64* %4, align 8, !tbaa !20
  %198 = icmp ugt i64 %197, 15
  br i1 %198, label %199, label %205

199:                                              ; preds = %191
  %200 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %188, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %201 unwind label %223

201:                                              ; preds = %199
  %202 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %188, i64 0, i32 0, i32 0
  store i8* %200, i8** %202, align 8, !tbaa !16
  %203 = load i64, i64* %4, align 8, !tbaa !20
  %204 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %188, i64 0, i32 2, i32 0
  store i64 %203, i64* %204, align 8, !tbaa !11
  br label %205

205:                                              ; preds = %201, %191
  %206 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %188, i64 0, i32 0, i32 0
  %207 = load i8*, i8** %206, align 8, !tbaa !16
  switch i64 %197, label %210 [
    i64 1, label %208
    i64 0, label %211
  ]

208:                                              ; preds = %205
  %209 = load i8, i8* %195, align 1, !tbaa !11
  store i8 %209, i8* %207, align 1, !tbaa !11
  br label %211

210:                                              ; preds = %205
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %207, i8* align 1 %195, i64 %197, i1 false) #12
  br label %211

211:                                              ; preds = %210, %208, %205
  %212 = load i64, i64* %4, align 8, !tbaa !20
  %213 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %188, i64 0, i32 1
  store i64 %212, i64* %213, align 8, !tbaa !8
  %214 = load i8*, i8** %206, align 8, !tbaa !16
  %215 = getelementptr inbounds i8, i8* %214, i64 %212
  store i8 0, i8* %215, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177) #12
  %216 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %175, align 8, !tbaa !15
  %217 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %216, i64 1
  store %"class.std::__cxx11::basic_string"* %217, %"class.std::__cxx11::basic_string"** %175, align 8, !tbaa !15
  br label %219

218:                                              ; preds = %184
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %7, %"class.std::__cxx11::basic_string"* %188, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %187)
          to label %219 unwind label %223

219:                                              ; preds = %218, %211
  %220 = add nsw i64 %185, 1
  %221 = trunc i64 %220 to i32
  %222 = icmp eq i32 %173, %221
  br i1 %222, label %225, label %184

223:                                              ; preds = %218, %199
  %224 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %174) #12
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %5) #12
  br label %276

225:                                              ; preds = %219, %170
  %226 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %227 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %228 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %227, align 8, !tbaa !12
  store %"class.std::__cxx11::basic_string"* %228, %"class.std::__cxx11::basic_string"** %226, align 8, !tbaa !12
  %229 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %230 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %231 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %230, align 8, !tbaa !15
  store %"class.std::__cxx11::basic_string"* %231, %"class.std::__cxx11::basic_string"** %229, align 8, !tbaa !15
  %232 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %233 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %234 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %233, align 8, !tbaa !14
  store %"class.std::__cxx11::basic_string"* %234, %"class.std::__cxx11::basic_string"** %232, align 8, !tbaa !14
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %174, i8 0, i64 24, i1 false) #12
  %235 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %227, align 8, !tbaa !12
  %236 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %230, align 8, !tbaa !15
  %237 = icmp eq %"class.std::__cxx11::basic_string"* %235, %236
  br i1 %237, label %249, label %238

238:                                              ; preds = %225, %246
  %239 = phi %"class.std::__cxx11::basic_string"* [ %247, %246 ], [ %235, %225 ]
  %240 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %239, i64 0, i32 0, i32 0
  %241 = load i8*, i8** %240, align 8, !tbaa !16
  %242 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %239, i64 0, i32 2
  %243 = bitcast %union.anon* %242 to i8*
  %244 = icmp eq i8* %241, %243
  br i1 %244, label %246, label %245

245:                                              ; preds = %238
  call void @_ZdlPv(i8* %241) #12
  br label %246

246:                                              ; preds = %245, %238
  %247 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %239, i64 1
  %248 = icmp eq %"class.std::__cxx11::basic_string"* %247, %236
  br i1 %248, label %249, label %238, !llvm.loop !21

249:                                              ; preds = %246, %225
  %250 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %227, align 8, !tbaa !12
  %251 = icmp eq %"class.std::__cxx11::basic_string"* %250, null
  br i1 %251, label %254, label %252

252:                                              ; preds = %249
  %253 = bitcast %"class.std::__cxx11::basic_string"* %250 to i8*
  call void @_ZdlPv(i8* nonnull %253) #12
  br label %254

254:                                              ; preds = %249, %252
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %174) #12
  br label %255

255:                                              ; preds = %254, %168
  %256 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %70, align 8, !tbaa !12
  %257 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %84, align 8, !tbaa !15
  %258 = icmp eq %"class.std::__cxx11::basic_string"* %256, %257
  br i1 %258, label %270, label %259

259:                                              ; preds = %255, %267
  %260 = phi %"class.std::__cxx11::basic_string"* [ %268, %267 ], [ %256, %255 ]
  %261 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %260, i64 0, i32 0, i32 0
  %262 = load i8*, i8** %261, align 8, !tbaa !16
  %263 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %260, i64 0, i32 2
  %264 = bitcast %union.anon* %263 to i8*
  %265 = icmp eq i8* %262, %264
  br i1 %265, label %267, label %266

266:                                              ; preds = %259
  call void @_ZdlPv(i8* %262) #12
  br label %267

267:                                              ; preds = %266, %259
  %268 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %260, i64 1
  %269 = icmp eq %"class.std::__cxx11::basic_string"* %268, %257
  br i1 %269, label %270, label %259, !llvm.loop !21

270:                                              ; preds = %267, %255
  %271 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %70, align 8, !tbaa !12
  %272 = icmp eq %"class.std::__cxx11::basic_string"* %271, null
  br i1 %272, label %275, label %273

273:                                              ; preds = %270
  %274 = bitcast %"class.std::__cxx11::basic_string"* %271 to i8*
  call void @_ZdlPv(i8* nonnull %274) #12
  br label %275

275:                                              ; preds = %270, %273
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  ret void

276:                                              ; preds = %223, %161
  %277 = phi { i8*, i32 } [ %224, %223 ], [ %77, %161 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  resume { i8*, i32 } %277
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8, !tbaa !12
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8, !tbaa !15
  %6 = icmp eq %"class.std::__cxx11::basic_string"* %3, %5
  br i1 %6, label %18, label %7

7:                                                ; preds = %1, %15
  %8 = phi %"class.std::__cxx11::basic_string"* [ %16, %15 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !tbaa !16
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %12 = bitcast %union.anon* %11 to i8*
  %13 = icmp eq i8* %10, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %7
  call void @_ZdlPv(i8* %10) #12
  br label %15

15:                                               ; preds = %14, %7
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 1
  %17 = icmp eq %"class.std::__cxx11::basic_string"* %16, %5
  br i1 %17, label %18, label %7, !llvm.loop !21

18:                                               ; preds = %15, %1
  %19 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %19, align 8, !tbaa !12
  %21 = icmp eq %"class.std::__cxx11::basic_string"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__cxx11::basic_string"* %20 to i8*
  call void @_ZdlPv(i8* nonnull %23) #12
  br label %24

24:                                               ; preds = %18, %22
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #4 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #12
  call void @_ZSt9terminatev() #14
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #5

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #6

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #8

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #8

; Function Attrs: uwtable
define linkonce_odr dso_local %"class.std::__cxx11::basic_string"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_EET0_T_SC_SB_(%"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"* %2) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to i8*
  %6 = icmp eq %"class.std::__cxx11::basic_string"* %0, %1
  br i1 %6, label %54, label %7

7:                                                ; preds = %3, %29
  %8 = phi %"class.std::__cxx11::basic_string"* [ %35, %29 ], [ %2, %3 ]
  %9 = phi %"class.std::__cxx11::basic_string"* [ %34, %29 ], [ %0, %3 ]
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %11 = bitcast %"class.std::__cxx11::basic_string"* %8 to %union.anon**
  store %union.anon* %10, %union.anon** %11, align 8, !tbaa !3
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8, !tbaa !16
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 1
  %15 = load i64, i64* %14, align 8, !tbaa !8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  store i64 %15, i64* %4, align 8, !tbaa !20
  %16 = icmp ugt i64 %15, 15
  br i1 %16, label %17, label %23

17:                                               ; preds = %7
  %18 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %19 unwind label %37

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  store i8* %18, i8** %20, align 8, !tbaa !16
  %21 = load i64, i64* %4, align 8, !tbaa !20
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  store i64 %21, i64* %22, align 8, !tbaa !11
  br label %23

23:                                               ; preds = %19, %7
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !tbaa !16
  switch i64 %15, label %28 [
    i64 1, label %26
    i64 0, label %29
  ]

26:                                               ; preds = %23
  %27 = load i8, i8* %13, align 1, !tbaa !11
  store i8 %27, i8* %25, align 1, !tbaa !11
  br label %29

28:                                               ; preds = %23
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %13, i64 %15, i1 false) #12
  br label %29

29:                                               ; preds = %23, %26, %28
  %30 = load i64, i64* %4, align 8, !tbaa !20
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 1
  store i64 %30, i64* %31, align 8, !tbaa !8
  %32 = load i8*, i8** %24, align 8, !tbaa !16
  %33 = getelementptr inbounds i8, i8* %32, i64 %30
  store i8 0, i8* %33, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %34 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 1
  %35 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 1
  %36 = icmp eq %"class.std::__cxx11::basic_string"* %34, %1
  br i1 %36, label %54, label %7, !llvm.loop !22

37:                                               ; preds = %17
  %38 = landingpad { i8*, i32 }
          catch i8* null
  %39 = extractvalue { i8*, i32 } %38, 0
  %40 = call i8* @__cxa_begin_catch(i8* %39) #12
  %41 = icmp eq %"class.std::__cxx11::basic_string"* %8, %2
  br i1 %41, label %53, label %42

42:                                               ; preds = %37, %50
  %43 = phi %"class.std::__cxx11::basic_string"* [ %51, %50 ], [ %2, %37 ]
  %44 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %43, i64 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8, !tbaa !16
  %46 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %43, i64 0, i32 2
  %47 = bitcast %union.anon* %46 to i8*
  %48 = icmp eq i8* %45, %47
  br i1 %48, label %50, label %49

49:                                               ; preds = %42
  call void @_ZdlPv(i8* %45) #12
  br label %50

50:                                               ; preds = %49, %42
  %51 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %43, i64 1
  %52 = icmp eq %"class.std::__cxx11::basic_string"* %51, %8
  br i1 %52, label %53, label %42, !llvm.loop !21

53:                                               ; preds = %50, %37
  invoke void @__cxa_rethrow() #15
          to label %62 unwind label %56

54:                                               ; preds = %29, %3
  %55 = phi %"class.std::__cxx11::basic_string"* [ %2, %3 ], [ %35, %29 ]
  ret %"class.std::__cxx11::basic_string"* %55

56:                                               ; preds = %53
  %57 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %58 unwind label %59

58:                                               ; preds = %56
  resume { i8*, i32 } %57

59:                                               ; preds = %56
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  call void @__clang_call_terminate(i8* %61) #14
  unreachable

62:                                               ; preds = %53
  unreachable
}

declare dso_local void @__cxa_rethrow() local_unnamed_addr

declare dso_local void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8, !tbaa !15
  %7 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8, !tbaa !12
  %9 = ptrtoint %"class.std::__cxx11::basic_string"* %6 to i64
  %10 = ptrtoint %"class.std::__cxx11::basic_string"* %8 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 5
  %13 = icmp eq i64 %11, 9223372036854775776
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0)) #15
  unreachable

15:                                               ; preds = %3
  %16 = icmp eq i64 %11, 0
  %17 = select i1 %16, i64 1, i64 %12
  %18 = add nsw i64 %17, %12
  %19 = icmp ult i64 %18, %12
  %20 = icmp ugt i64 %18, 288230376151711743
  %21 = or i1 %19, %20
  %22 = select i1 %21, i64 288230376151711743, i64 %18
  %23 = ptrtoint %"class.std::__cxx11::basic_string"* %1 to i64
  %24 = sub i64 %23, %10
  %25 = ashr exact i64 %24, 5
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %15
  %28 = icmp ugt i64 %22, 288230376151711743
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

30:                                               ; preds = %27
  %31 = shl i64 %22, 5
  %32 = call noalias nonnull i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.std::__cxx11::basic_string"*
  br label %34

34:                                               ; preds = %15, %30
  %35 = phi %"class.std::__cxx11::basic_string"* [ %33, %30 ], [ null, %15 ]
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25, i32 2
  %38 = bitcast %"class.std::__cxx11::basic_string"* %36 to %union.anon**
  store %union.anon* %37, %union.anon** %38, align 8, !tbaa !3
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8, !tbaa !16
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  %42 = load i64, i64* %41, align 8, !tbaa !8
  %43 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #12
  store i64 %42, i64* %4, align 8, !tbaa !20
  %44 = icmp ugt i64 %42, 15
  br i1 %44, label %45, label %51

45:                                               ; preds = %34
  %46 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %36, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %47 unwind label %125

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %36, i64 0, i32 0, i32 0
  store i8* %46, i8** %48, align 8, !tbaa !16
  %49 = load i64, i64* %4, align 8, !tbaa !20
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25, i32 2, i32 0
  store i64 %49, i64* %50, align 8, !tbaa !11
  br label %51

51:                                               ; preds = %47, %34
  %52 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %36, i64 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8, !tbaa !16
  switch i64 %42, label %56 [
    i64 1, label %54
    i64 0, label %57
  ]

54:                                               ; preds = %51
  %55 = load i8, i8* %40, align 1, !tbaa !11
  store i8 %55, i8* %53, align 1, !tbaa !11
  br label %57

56:                                               ; preds = %51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %40, i64 %42, i1 false) #12
  br label %57

57:                                               ; preds = %51, %54, %56
  %58 = load i64, i64* %4, align 8, !tbaa !20
  %59 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25, i32 1
  store i64 %58, i64* %59, align 8, !tbaa !8
  %60 = load i8*, i8** %52, align 8, !tbaa !16
  %61 = getelementptr inbounds i8, i8* %60, i64 %58
  store i8 0, i8* %61, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #12
  %62 = icmp eq %"class.std::__cxx11::basic_string"* %8, %1
  br i1 %62, label %88, label %63

63:                                               ; preds = %57, %80
  %64 = phi %"class.std::__cxx11::basic_string"* [ %86, %80 ], [ %35, %57 ]
  %65 = phi %"class.std::__cxx11::basic_string"* [ %85, %80 ], [ %8, %57 ]
  %66 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 2
  %67 = bitcast %"class.std::__cxx11::basic_string"* %64 to %union.anon**
  store %union.anon* %66, %union.anon** %67, align 8, !tbaa !3
  %68 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8, !tbaa !16
  %70 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 2
  %71 = bitcast %union.anon* %70 to i8*
  %72 = icmp eq i8* %69, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %63
  %74 = bitcast %union.anon* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %74, i8* noundef nonnull align 8 dereferenceable(16) %71, i64 16, i1 false) #12
  br label %80

75:                                               ; preds = %63
  %76 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 0, i32 0
  store i8* %69, i8** %76, align 8, !tbaa !16
  %77 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 2, i32 0
  %78 = load i64, i64* %77, align 8, !tbaa !11
  %79 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 2, i32 0
  store i64 %78, i64* %79, align 8, !tbaa !11
  br label %80

80:                                               ; preds = %75, %73
  %81 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 1
  %82 = load i64, i64* %81, align 8, !tbaa !8
  %83 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 1
  store i64 %82, i64* %83, align 8, !tbaa !8
  %84 = bitcast %"class.std::__cxx11::basic_string"* %65 to %union.anon**
  store %union.anon* %70, %union.anon** %84, align 8, !tbaa !16
  store i64 0, i64* %81, align 8, !tbaa !8
  store i8 0, i8* %71, align 8, !tbaa !11
  %85 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 1
  %86 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 1
  %87 = icmp eq %"class.std::__cxx11::basic_string"* %85, %1
  br i1 %87, label %88, label %63, !llvm.loop !23

88:                                               ; preds = %80, %57
  %89 = phi %"class.std::__cxx11::basic_string"* [ %35, %57 ], [ %86, %80 ]
  %90 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %89, i64 1
  %91 = icmp eq %"class.std::__cxx11::basic_string"* %6, %1
  br i1 %91, label %117, label %92

92:                                               ; preds = %88, %109
  %93 = phi %"class.std::__cxx11::basic_string"* [ %115, %109 ], [ %90, %88 ]
  %94 = phi %"class.std::__cxx11::basic_string"* [ %114, %109 ], [ %1, %88 ]
  %95 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 2
  %96 = bitcast %"class.std::__cxx11::basic_string"* %93 to %union.anon**
  store %union.anon* %95, %union.anon** %96, align 8, !tbaa !3
  %97 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8, !tbaa !16
  %99 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 2
  %100 = bitcast %union.anon* %99 to i8*
  %101 = icmp eq i8* %98, %100
  br i1 %101, label %102, label %104

102:                                              ; preds = %92
  %103 = bitcast %union.anon* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %103, i8* noundef nonnull align 8 dereferenceable(16) %100, i64 16, i1 false) #12
  br label %109

104:                                              ; preds = %92
  %105 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 0, i32 0
  store i8* %98, i8** %105, align 8, !tbaa !16
  %106 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 2, i32 0
  %107 = load i64, i64* %106, align 8, !tbaa !11
  %108 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 2, i32 0
  store i64 %107, i64* %108, align 8, !tbaa !11
  br label %109

109:                                              ; preds = %104, %102
  %110 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 1
  %111 = load i64, i64* %110, align 8, !tbaa !8
  %112 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 1
  store i64 %111, i64* %112, align 8, !tbaa !8
  %113 = bitcast %"class.std::__cxx11::basic_string"* %94 to %union.anon**
  store %union.anon* %99, %union.anon** %113, align 8, !tbaa !16
  store i64 0, i64* %110, align 8, !tbaa !8
  store i8 0, i8* %100, align 8, !tbaa !11
  %114 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 1
  %115 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 1
  %116 = icmp eq %"class.std::__cxx11::basic_string"* %114, %6
  br i1 %116, label %117, label %92, !llvm.loop !23

117:                                              ; preds = %109, %88
  %118 = phi %"class.std::__cxx11::basic_string"* [ %90, %88 ], [ %115, %109 ]
  %119 = icmp eq %"class.std::__cxx11::basic_string"* %8, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %117
  %121 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  call void @_ZdlPv(i8* nonnull %121) #12
  br label %122

122:                                              ; preds = %117, %120
  %123 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* %35, %"class.std::__cxx11::basic_string"** %7, align 8, !tbaa !12
  store %"class.std::__cxx11::basic_string"* %118, %"class.std::__cxx11::basic_string"** %5, align 8, !tbaa !15
  %124 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %22
  store %"class.std::__cxx11::basic_string"* %124, %"class.std::__cxx11::basic_string"** %123, align 8, !tbaa !14
  ret void

125:                                              ; preds = %45
  %126 = landingpad { i8*, i32 }
          catch i8* null
  %127 = extractvalue { i8*, i32 } %126, 0
  %128 = call i8* @__cxa_begin_catch(i8* %127) #12
  %129 = icmp eq %"class.std::__cxx11::basic_string"* %35, null
  br i1 %129, label %130, label %139

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %36, i64 0, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8, !tbaa !16
  %133 = bitcast %union.anon* %37 to i8*
  %134 = icmp eq i8* %132, %133
  br i1 %134, label %138, label %135

135:                                              ; preds = %130
  call void @_ZdlPv(i8* %132) #12
  br label %138

136:                                              ; preds = %141
  %137 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %142 unwind label %143

138:                                              ; preds = %135, %130
  br i1 %129, label %141, label %139

139:                                              ; preds = %125, %138
  %140 = bitcast %"class.std::__cxx11::basic_string"* %35 to i8*
  call void @_ZdlPv(i8* nonnull %140) #12
  br label %141

141:                                              ; preds = %139, %138
  invoke void @__cxa_rethrow() #15
          to label %146 unwind label %136

142:                                              ; preds = %136
  resume { i8*, i32 } %137

143:                                              ; preds = %136
  %144 = landingpad { i8*, i32 }
          catch i8* null
  %145 = extractvalue { i8*, i32 } %144, 0
  call void @__clang_call_terminate(i8* %145) #14
  unreachable

146:                                              ; preds = %141
  unreachable
}

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #11

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #3 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { noinline noreturn nounwind }
attributes #5 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #8 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { argmemonly nofree nounwind readonly willreturn }
attributes #11 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #12 = { nounwind }
attributes #13 = { allocsize(0) }
attributes #14 = { noreturn nounwind }
attributes #15 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!13, !5, i64 0}
!13 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!14 = !{!13, !5, i64 16}
!15 = !{!13, !5, i64 8}
!16 = !{!9, !5, i64 0}
!17 = distinct !{!17, !18, !19}
!18 = !{!"llvm.loop.mustprogress"}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = !{!10, !10, i64 0}
!21 = distinct !{!21, !18, !19}
!22 = distinct !{!22, !18, !19}
!23 = distinct !{!23, !18, !19}
