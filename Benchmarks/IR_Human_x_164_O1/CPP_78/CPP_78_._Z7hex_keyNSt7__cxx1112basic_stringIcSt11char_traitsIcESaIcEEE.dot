digraph "CFG for '_Z7hex_keyNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function" {
	label="CFG for '_Z7hex_keyNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function";

	Node0x558870ff89e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%1:\l  %2 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %3 = bitcast %\"class.std::__cxx11::basic_string\"* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #4\l  %4 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 2\l  %5 = bitcast %\"class.std::__cxx11::basic_string\"* %2 to %union.anon**\l  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !3\l  %6 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 0, i32 0\l  %7 = bitcast %union.anon* %4 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(6) %7, i8* noundef nonnull align 1 dereferenceable(6)\l... getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i64 6, i1\l... false) #4\l  %8 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 1\l  store i64 6, i64* %8, align 8, !tbaa !8\l  %9 = bitcast %union.anon* %4 to i8*\l  %10 = getelementptr inbounds i8, i8* %9, i64 6\l  store i8 0, i8* %10, align 2, !tbaa !11\l  %11 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  %12 = load i64, i64* %11, align 8, !tbaa !8\l  %13 = load i8*, i8** %6, align 8\l  %14 = load i64, i64* %8, align 8\l  %15 = getelementptr inbounds i8, i8* %13, i64 %14\l  %16 = ptrtoint i8* %15 to i64\l  %17 = icmp sgt i64 %14, 3\l  %18 = ashr i64 %14, 2\l  %19 = icmp eq i64 %12, 0\l  br i1 %19, label %23, label %20\l|{<s0>T|<s1>F}}"];
	Node0x558870ff89e0:s0 -> Node0x558870ff9f40;
	Node0x558870ff89e0:s1 -> Node0x558870ffc140;
	Node0x558870ffc140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%20:\l20:                                               \l  %21 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %22 = load i8*, i8** %21, align 8, !tbaa !12\l  br label %30\l}"];
	Node0x558870ffc140 -> Node0x558870ffc3d0;
	Node0x558870ff9f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%23:\l23:                                               \l  %24 = phi i32 [ 0, %1 ], [ %90, %86 ]\l  %25 = load i8*, i8** %6, align 8, !tbaa !12\l  %26 = bitcast %union.anon* %4 to i8*\l  %27 = icmp eq i8* %25, %26\l  br i1 %27, label %29, label %28\l|{<s0>T|<s1>F}}"];
	Node0x558870ff9f40:s0 -> Node0x558870ffcdc0;
	Node0x558870ff9f40:s1 -> Node0x558870ffce50;
	Node0x558870ffce50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%28:\l28:                                               \l  call void @_ZdlPv(i8* %25) #4\l  br label %29\l}"];
	Node0x558870ffce50 -> Node0x558870ffcdc0;
	Node0x558870ffcdc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%29:\l29:                                               \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #4\l  ret i32 %24\l}"];
	Node0x558870ffc3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%30:\l30:                                               \l  %31 = phi i64 [ 0, %20 ], [ %91, %86 ]\l  %32 = phi i32 [ 0, %20 ], [ %90, %86 ]\l  %33 = getelementptr inbounds i8, i8* %22, i64 %31\l  br i1 %17, label %34, label %57\l|{<s0>T|<s1>F}}"];
	Node0x558870ffc3d0:s0 -> Node0x558870ffd970;
	Node0x558870ffc3d0:s1 -> Node0x558870ffd9c0;
	Node0x558870ffd970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%34:\l34:                                               \l  %35 = load i8, i8* %33, align 1, !tbaa !11\l  br label %36\l}"];
	Node0x558870ffd970 -> Node0x558870ffe140;
	Node0x558870ffe140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = phi i64 [ %18, %34 ], [ %55, %53 ]\l  %38 = phi i8* [ %13, %34 ], [ %54, %53 ]\l  %39 = load i8, i8* %38, align 1, !tbaa !11\l  %40 = icmp eq i8 %39, %35\l  br i1 %40, label %86, label %41\l|{<s0>T|<s1>F}}"];
	Node0x558870ffe140:s0 -> Node0x558870ffc500;
	Node0x558870ffe140:s1 -> Node0x558870ffe590;
	Node0x558870ffe590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = getelementptr inbounds i8, i8* %38, i64 1\l  %43 = load i8, i8* %42, align 1, !tbaa !11\l  %44 = icmp eq i8 %43, %35\l  br i1 %44, label %84, label %45\l|{<s0>T|<s1>F}}"];
	Node0x558870ffe590:s0 -> Node0x558870ffe8a0;
	Node0x558870ffe590:s1 -> Node0x558870ffe8f0;
	Node0x558870ffe8f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%45:\l45:                                               \l  %46 = getelementptr inbounds i8, i8* %38, i64 2\l  %47 = load i8, i8* %46, align 1, !tbaa !11\l  %48 = icmp eq i8 %47, %35\l  br i1 %48, label %82, label %49\l|{<s0>T|<s1>F}}"];
	Node0x558870ffe8f0:s0 -> Node0x558870ffebd0;
	Node0x558870ffe8f0:s1 -> Node0x558870ffec20;
	Node0x558870ffec20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%49:\l49:                                               \l  %50 = getelementptr inbounds i8, i8* %38, i64 3\l  %51 = load i8, i8* %50, align 1, !tbaa !11\l  %52 = icmp eq i8 %51, %35\l  br i1 %52, label %80, label %53\l|{<s0>T|<s1>F}}"];
	Node0x558870ffec20:s0 -> Node0x558870ffef00;
	Node0x558870ffec20:s1 -> Node0x558870ffe230;
	Node0x558870ffe230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%53:\l53:                                               \l  %54 = getelementptr inbounds i8, i8* %38, i64 4\l  %55 = add nsw i64 %37, -1\l  %56 = icmp sgt i64 %37, 1\l  br i1 %56, label %36, label %57, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x558870ffe230:s0 -> Node0x558870ffe140;
	Node0x558870ffe230:s1 -> Node0x558870ffd9c0;
	Node0x558870ffd9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%57:\l57:                                               \l  %58 = phi i8* [ %13, %30 ], [ %54, %53 ]\l  %59 = ptrtoint i8* %58 to i64\l  %60 = sub i64 %16, %59\l  switch i64 %60, label %79 [\l    i64 3, label %61\l    i64 2, label %67\l    i64 1, label %74\l  ]\l|{<s0>def|<s1>3|<s2>2|<s3>1}}"];
	Node0x558870ffd9c0:s0 -> Node0x558870fff4d0;
	Node0x558870ffd9c0:s1 -> Node0x558870fff520;
	Node0x558870ffd9c0:s2 -> Node0x558870fff570;
	Node0x558870ffd9c0:s3 -> Node0x558870fff600;
	Node0x558870fff520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%61:\l61:                                               \l  %62 = load i8, i8* %58, align 1, !tbaa !11\l  %63 = load i8, i8* %33, align 1, !tbaa !11\l  %64 = icmp eq i8 %62, %63\l  br i1 %64, label %86, label %65\l|{<s0>T|<s1>F}}"];
	Node0x558870fff520:s0 -> Node0x558870ffc500;
	Node0x558870fff520:s1 -> Node0x558870fffc60;
	Node0x558870fffc60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%65:\l65:                                               \l  %66 = getelementptr inbounds i8, i8* %58, i64 1\l  br label %67\l}"];
	Node0x558870fffc60 -> Node0x558870fff570;
	Node0x558870fff570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%67:\l67:                                               \l  %68 = phi i8* [ %58, %57 ], [ %66, %65 ]\l  %69 = load i8, i8* %68, align 1, !tbaa !11\l  %70 = load i8, i8* %33, align 1, !tbaa !11\l  %71 = icmp eq i8 %69, %70\l  br i1 %71, label %86, label %72\l|{<s0>T|<s1>F}}"];
	Node0x558870fff570:s0 -> Node0x558870ffc500;
	Node0x558870fff570:s1 -> Node0x558871000090;
	Node0x558871000090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%72:\l72:                                               \l  %73 = getelementptr inbounds i8, i8* %68, i64 1\l  br label %74\l}"];
	Node0x558871000090 -> Node0x558870fff600;
	Node0x558870fff600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%74:\l74:                                               \l  %75 = phi i8* [ %58, %57 ], [ %73, %72 ]\l  %76 = load i8, i8* %75, align 1, !tbaa !11\l  %77 = load i8, i8* %33, align 1, !tbaa !11\l  %78 = icmp eq i8 %76, %77\l  br i1 %78, label %86, label %79\l|{<s0>T|<s1>F}}"];
	Node0x558870fff600:s0 -> Node0x558870ffc500;
	Node0x558870fff600:s1 -> Node0x558870fff4d0;
	Node0x558870fff4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%79:\l79:                                               \l  br label %86\l}"];
	Node0x558870fff4d0 -> Node0x558870ffc500;
	Node0x558870ffef00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%80:\l80:                                               \l  %81 = getelementptr inbounds i8, i8* %38, i64 3\l  br label %86\l}"];
	Node0x558870ffef00 -> Node0x558870ffc500;
	Node0x558870ffebd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%82:\l82:                                               \l  %83 = getelementptr inbounds i8, i8* %38, i64 2\l  br label %86\l}"];
	Node0x558870ffebd0 -> Node0x558870ffc500;
	Node0x558870ffe8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%84:\l84:                                               \l  %85 = getelementptr inbounds i8, i8* %38, i64 1\l  br label %86\l}"];
	Node0x558870ffe8a0 -> Node0x558870ffc500;
	Node0x558870ffc500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%86:\l86:                                               \l  %87 = phi i8* [ %15, %79 ], [ %58, %61 ], [ %68, %67 ], [ %75, %74 ], [ %81,\l... %80 ], [ %83, %82 ], [ %85, %84 ], [ %38, %36 ]\l  %88 = icmp ne i8* %87, %15\l  %89 = zext i1 %88 to i32\l  %90 = add nuw nsw i32 %32, %89\l  %91 = add nuw nsw i64 %31, 1\l  %92 = icmp eq i64 %91, %12\l  br i1 %92, label %23, label %30, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x558870ffc500:s0 -> Node0x558870ff9f40;
	Node0x558870ffc500:s1 -> Node0x558870ffc3d0;
}
