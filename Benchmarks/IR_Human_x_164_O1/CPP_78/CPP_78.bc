; ModuleID = '../../Human_xBenchmarks_164/CPP_78/CPP_78.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_78/CPP_78.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@.str = private unnamed_addr constant [7 x i8] c"2357BD\00", align 1

; Function Attrs: uwtable
define dso_local i32 @_Z7hex_keyNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nocapture readonly %0) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = bitcast %"class.std::__cxx11::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #4
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 2
  %5 = bitcast %"class.std::__cxx11::basic_string"* %2 to %union.anon**
  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !3
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %7 = bitcast %union.anon* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(6) %7, i8* noundef nonnull align 1 dereferenceable(6) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i64 6, i1 false) #4
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  store i64 6, i64* %8, align 8, !tbaa !8
  %9 = bitcast %union.anon* %4 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 6
  store i8 0, i8* %10, align 2, !tbaa !11
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8, !tbaa !8
  %13 = load i8*, i8** %6, align 8
  %14 = load i64, i64* %8, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  %16 = ptrtoint i8* %15 to i64
  %17 = icmp sgt i64 %14, 3
  %18 = ashr i64 %14, 2
  %19 = icmp eq i64 %12, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !tbaa !12
  br label %30

23:                                               ; preds = %86, %1
  %24 = phi i32 [ 0, %1 ], [ %90, %86 ]
  %25 = load i8*, i8** %6, align 8, !tbaa !12
  %26 = bitcast %union.anon* %4 to i8*
  %27 = icmp eq i8* %25, %26
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  call void @_ZdlPv(i8* %25) #4
  br label %29

29:                                               ; preds = %23, %28
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #4
  ret i32 %24

30:                                               ; preds = %20, %86
  %31 = phi i64 [ 0, %20 ], [ %91, %86 ]
  %32 = phi i32 [ 0, %20 ], [ %90, %86 ]
  %33 = getelementptr inbounds i8, i8* %22, i64 %31
  br i1 %17, label %34, label %57

34:                                               ; preds = %30
  %35 = load i8, i8* %33, align 1, !tbaa !11
  br label %36

36:                                               ; preds = %53, %34
  %37 = phi i64 [ %18, %34 ], [ %55, %53 ]
  %38 = phi i8* [ %13, %34 ], [ %54, %53 ]
  %39 = load i8, i8* %38, align 1, !tbaa !11
  %40 = icmp eq i8 %39, %35
  br i1 %40, label %86, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds i8, i8* %38, i64 1
  %43 = load i8, i8* %42, align 1, !tbaa !11
  %44 = icmp eq i8 %43, %35
  br i1 %44, label %84, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds i8, i8* %38, i64 2
  %47 = load i8, i8* %46, align 1, !tbaa !11
  %48 = icmp eq i8 %47, %35
  br i1 %48, label %82, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds i8, i8* %38, i64 3
  %51 = load i8, i8* %50, align 1, !tbaa !11
  %52 = icmp eq i8 %51, %35
  br i1 %52, label %80, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds i8, i8* %38, i64 4
  %55 = add nsw i64 %37, -1
  %56 = icmp sgt i64 %37, 1
  br i1 %56, label %36, label %57, !llvm.loop !13

57:                                               ; preds = %53, %30
  %58 = phi i8* [ %13, %30 ], [ %54, %53 ]
  %59 = ptrtoint i8* %58 to i64
  %60 = sub i64 %16, %59
  switch i64 %60, label %79 [
    i64 3, label %61
    i64 2, label %67
    i64 1, label %74
  ]

61:                                               ; preds = %57
  %62 = load i8, i8* %58, align 1, !tbaa !11
  %63 = load i8, i8* %33, align 1, !tbaa !11
  %64 = icmp eq i8 %62, %63
  br i1 %64, label %86, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds i8, i8* %58, i64 1
  br label %67

67:                                               ; preds = %65, %57
  %68 = phi i8* [ %58, %57 ], [ %66, %65 ]
  %69 = load i8, i8* %68, align 1, !tbaa !11
  %70 = load i8, i8* %33, align 1, !tbaa !11
  %71 = icmp eq i8 %69, %70
  br i1 %71, label %86, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds i8, i8* %68, i64 1
  br label %74

74:                                               ; preds = %72, %57
  %75 = phi i8* [ %58, %57 ], [ %73, %72 ]
  %76 = load i8, i8* %75, align 1, !tbaa !11
  %77 = load i8, i8* %33, align 1, !tbaa !11
  %78 = icmp eq i8 %76, %77
  br i1 %78, label %86, label %79

79:                                               ; preds = %74, %57
  br label %86

80:                                               ; preds = %49
  %81 = getelementptr inbounds i8, i8* %38, i64 3
  br label %86

82:                                               ; preds = %45
  %83 = getelementptr inbounds i8, i8* %38, i64 2
  br label %86

84:                                               ; preds = %41
  %85 = getelementptr inbounds i8, i8* %38, i64 1
  br label %86

86:                                               ; preds = %36, %80, %82, %84, %79, %74, %67, %61
  %87 = phi i8* [ %15, %79 ], [ %58, %61 ], [ %68, %67 ], [ %75, %74 ], [ %81, %80 ], [ %83, %82 ], [ %85, %84 ], [ %38, %36 ]
  %88 = icmp ne i8* %87, %15
  %89 = zext i1 %88 to i32
  %90 = add nuw nsw i32 %32, %89
  %91 = add nuw nsw i64 %31, 1
  %92 = icmp eq i64 %91, %12
  br i1 %92, label %23, label %30, !llvm.loop !16
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = distinct !{!13, !14, !15}
!14 = !{!"llvm.loop.mustprogress"}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = distinct !{!16, !14, !15}
