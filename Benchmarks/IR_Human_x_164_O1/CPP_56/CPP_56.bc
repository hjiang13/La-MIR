; ModuleID = '../../Human_xBenchmarks_164/CPP_56/CPP_56.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_56/CPP_56.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local zeroext i1 @_Z18correct_bracketingNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8, !tbaa !3
  %4 = icmp ne i64 %3, 0
  br i1 %4, label %5, label %33

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8, !tbaa !10
  %8 = load i8, i8* %7, align 1, !tbaa !11
  %9 = icmp eq i8 %8, 60
  %10 = zext i1 %9 to i32
  %11 = icmp eq i8 %8, 62
  %12 = sext i1 %11 to i32
  %13 = add nsw i32 %10, %12
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %33, label %15

15:                                               ; preds = %5, %19
  %16 = phi i64 [ %29, %19 ], [ 1, %5 ]
  %17 = phi i32 [ %27, %19 ], [ %13, %5 ]
  %18 = icmp eq i64 %16, %3
  br i1 %18, label %30, label %19, !llvm.loop !12

19:                                               ; preds = %15
  %20 = getelementptr inbounds i8, i8* %7, i64 %16
  %21 = load i8, i8* %20, align 1, !tbaa !11
  %22 = icmp eq i8 %21, 60
  %23 = zext i1 %22 to i32
  %24 = add nsw i32 %17, %23
  %25 = icmp eq i8 %21, 62
  %26 = sext i1 %25 to i32
  %27 = add nsw i32 %24, %26
  %28 = icmp slt i32 %27, 0
  %29 = add nuw i64 %16, 1
  br i1 %28, label %30, label %15, !llvm.loop !12

30:                                               ; preds = %15, %19
  %31 = phi i32 [ %17, %15 ], [ 1, %19 ]
  %32 = icmp ugt i64 %3, %16
  br label %33

33:                                               ; preds = %30, %5, %1
  %34 = phi i1 [ %4, %1 ], [ %4, %5 ], [ %32, %30 ]
  %35 = phi i32 [ 0, %1 ], [ 1, %5 ], [ %31, %30 ]
  %36 = icmp eq i32 %35, 0
  %37 = xor i1 %34, true
  %38 = select i1 %37, i1 %36, i1 false
  ret i1 %38
}

attributes #0 = { mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!4, !6, i64 0}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !13, !14}
!13 = !{!"llvm.loop.mustprogress"}
!14 = !{!"llvm.loop.unroll.disable"}
