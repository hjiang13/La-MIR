; ModuleID = '../../Human_xBenchmarks_164/CPP_154/CPP_154.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_154/CPP_154.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: uwtable
define dso_local zeroext i1 @_Z16cycpattern_checkNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_(%"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %9 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %10 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %12 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %14 = bitcast i64* %4 to i8*
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  %19 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %21 = bitcast %"class.std::__cxx11::basic_string"* %7 to %union.anon**
  %22 = bitcast i64* %3 to i8*
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 0
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  %27 = bitcast %union.anon* %11 to i8*
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %29 = bitcast %union.anon* %20 to i8*
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 0
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %32 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %35 = bitcast %union.anon* %31 to i8*
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  %37 = bitcast %union.anon* %20 to i8*
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %39 = bitcast %union.anon* %31 to i8*
  %40 = load i64, i64* %8, align 8, !tbaa !3
  %41 = icmp ne i64 %40, 0
  br i1 %41, label %45, label %153

42:                                               ; preds = %133
  %43 = load i64, i64* %8, align 8, !tbaa !3
  %44 = icmp ugt i64 %43, %134
  br i1 %44, label %45, label %153, !llvm.loop !10

45:                                               ; preds = %2, %42
  %46 = phi i64 [ %134, %42 ], [ 0, %2 ]
  %47 = phi i1 [ %44, %42 ], [ %41, %2 ]
  %48 = phi i64 [ %43, %42 ], [ %40, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #7
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !13)
  store %union.anon* %11, %union.anon** %12, align 8, !tbaa !16, !alias.scope !13
  %49 = load i8*, i8** %13, align 8, !tbaa !17, !noalias !13
  %50 = getelementptr inbounds i8, i8* %49, i64 %46
  %51 = sub i64 %48, %46
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7, !noalias !13
  store i64 %51, i64* %4, align 8, !tbaa !18, !noalias !13
  %52 = icmp ugt i64 %51, 15
  br i1 %52, label %53, label %56

53:                                               ; preds = %45
  %54 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
  store i8* %54, i8** %15, align 8, !tbaa !17, !alias.scope !13
  %55 = load i64, i64* %4, align 8, !tbaa !18, !noalias !13
  store i64 %55, i64* %16, align 8, !tbaa !19, !alias.scope !13
  br label %56

56:                                               ; preds = %53, %45
  %57 = load i8*, i8** %17, align 8, !tbaa !17, !alias.scope !13
  switch i64 %51, label %60 [
    i64 1, label %58
    i64 0, label %61
  ]

58:                                               ; preds = %56
  %59 = load i8, i8* %50, align 1, !tbaa !19
  store i8 %59, i8* %57, align 1, !tbaa !19
  br label %61

60:                                               ; preds = %56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %57, i8* align 1 %50, i64 %51, i1 false) #7
  br label %61

61:                                               ; preds = %56, %58, %60
  %62 = load i64, i64* %4, align 8, !tbaa !18, !noalias !13
  store i64 %62, i64* %18, align 8, !tbaa !3, !alias.scope !13
  %63 = load i8*, i8** %17, align 8, !tbaa !17, !alias.scope !13
  %64 = getelementptr inbounds i8, i8* %63, i64 %62
  store i8 0, i8* %64, align 1, !tbaa !19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7, !noalias !13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !20)
  %65 = load i64, i64* %8, align 8, !tbaa !3, !noalias !20
  store %union.anon* %20, %union.anon** %21, align 8, !tbaa !16, !alias.scope !20
  %66 = load i8*, i8** %13, align 8, !tbaa !17, !noalias !20
  %67 = icmp ugt i64 %65, %46
  %68 = select i1 %67, i64 %46, i64 %65
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #7, !noalias !20
  store i64 %68, i64* %3, align 8, !tbaa !18, !noalias !20
  %69 = icmp ugt i64 %68, 15
  br i1 %69, label %70, label %74

70:                                               ; preds = %61
  %71 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %72 unwind label %135

72:                                               ; preds = %70
  store i8* %71, i8** %23, align 8, !tbaa !17, !alias.scope !20
  %73 = load i64, i64* %3, align 8, !tbaa !18, !noalias !20
  store i64 %73, i64* %24, align 8, !tbaa !19, !alias.scope !20
  br label %74

74:                                               ; preds = %72, %61
  %75 = load i8*, i8** %25, align 8, !tbaa !17, !alias.scope !20
  %76 = trunc i64 %68 to i32
  switch i32 %76, label %79 [
    i32 1, label %77
    i32 0, label %80
  ]

77:                                               ; preds = %74
  %78 = load i8, i8* %66, align 1, !tbaa !19
  store i8 %78, i8* %75, align 1, !tbaa !19
  br label %80

79:                                               ; preds = %74
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %75, i8* align 1 %66, i64 %68, i1 false) #7
  br label %80

80:                                               ; preds = %74, %77, %79
  %81 = load i64, i64* %3, align 8, !tbaa !18, !noalias !20
  store i64 %81, i64* %26, align 8, !tbaa !3, !alias.scope !20
  %82 = load i8*, i8** %25, align 8, !tbaa !17, !alias.scope !20
  %83 = getelementptr inbounds i8, i8* %82, i64 %81
  store i8 0, i8* %83, align 1, !tbaa !19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #7, !noalias !20
  call void @llvm.experimental.noalias.scope.decl(metadata !23)
  %84 = load i64, i64* %18, align 8, !tbaa !3, !noalias !23
  %85 = load i64, i64* %26, align 8, !tbaa !3, !noalias !23
  %86 = add i64 %85, %84
  %87 = load i8*, i8** %17, align 8, !tbaa !17, !noalias !23
  %88 = icmp eq i8* %87, %27
  %89 = load i64, i64* %28, align 8, !noalias !23
  %90 = select i1 %88, i64 15, i64 %89
  %91 = icmp ugt i64 %86, %90
  br i1 %91, label %92, label %100

92:                                               ; preds = %80
  %93 = load i8*, i8** %25, align 8, !tbaa !17, !noalias !23
  %94 = icmp eq i8* %93, %29
  %95 = load i64, i64* %30, align 8, !noalias !23
  %96 = select i1 %94, i64 15, i64 %95
  %97 = icmp ugt i64 %86, %96
  br i1 %97, label %100, label %98

98:                                               ; preds = %92
  %99 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i64 0, i64 0, i8* %87, i64 %84)
          to label %103 unwind label %137

100:                                              ; preds = %92, %80
  %101 = load i8*, i8** %25, align 8, !tbaa !17, !noalias !23
  %102 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i8* %101, i64 %85)
          to label %103 unwind label %137

103:                                              ; preds = %100, %98
  %104 = phi %"class.std::__cxx11::basic_string"* [ %99, %98 ], [ %102, %100 ]
  store %union.anon* %31, %union.anon** %32, align 8, !tbaa !16, !alias.scope !23
  %105 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %104, i64 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8, !tbaa !17
  %107 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %104, i64 0, i32 2
  %108 = bitcast %union.anon* %107 to i8*
  %109 = icmp eq i8* %106, %108
  br i1 %109, label %110, label %111

110:                                              ; preds = %103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %35, i8* noundef nonnull align 8 dereferenceable(16) %108, i64 16, i1 false) #7
  br label %114

111:                                              ; preds = %103
  store i8* %106, i8** %33, align 8, !tbaa !17, !alias.scope !23
  %112 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %104, i64 0, i32 2, i32 0
  %113 = load i64, i64* %112, align 8, !tbaa !19
  store i64 %113, i64* %34, align 8, !tbaa !19, !alias.scope !23
  br label %114

114:                                              ; preds = %110, %111
  %115 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %104, i64 0, i32 1
  %116 = load i64, i64* %115, align 8, !tbaa !3
  store i64 %116, i64* %36, align 8, !tbaa !3, !alias.scope !23
  %117 = bitcast %"class.std::__cxx11::basic_string"* %104 to %union.anon**
  store %union.anon* %107, %union.anon** %117, align 8, !tbaa !17
  store i64 0, i64* %115, align 8, !tbaa !3
  store i8 0, i8* %108, align 8, !tbaa !19
  %118 = load i8*, i8** %25, align 8, !tbaa !17
  %119 = icmp eq i8* %118, %37
  br i1 %119, label %121, label %120

120:                                              ; preds = %114
  call void @_ZdlPv(i8* %118) #7
  br label %121

121:                                              ; preds = %114, %120
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #7
  %122 = load i8*, i8** %17, align 8, !tbaa !17
  %123 = icmp eq i8* %122, %27
  br i1 %123, label %125, label %124

124:                                              ; preds = %121
  call void @_ZdlPv(i8* %122) #7
  br label %125

125:                                              ; preds = %121, %124
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #7
  %126 = load i8*, i8** %38, align 8, !tbaa !17
  %127 = load i64, i64* %36, align 8, !tbaa !3
  %128 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %126, i64 0, i64 %127) #7
  %129 = icmp eq i64 %128, -1
  %130 = load i8*, i8** %38, align 8, !tbaa !17
  %131 = icmp eq i8* %130, %39
  br i1 %131, label %133, label %132

132:                                              ; preds = %125
  call void @_ZdlPv(i8* %130) #7
  br label %133

133:                                              ; preds = %125, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #7
  %134 = add i64 %46, 1
  br i1 %129, label %42, label %153

135:                                              ; preds = %70
  %136 = landingpad { i8*, i32 }
          cleanup
  br label %143

137:                                              ; preds = %100, %98
  %138 = landingpad { i8*, i32 }
          cleanup
  %139 = load i8*, i8** %25, align 8, !tbaa !17
  %140 = bitcast %union.anon* %20 to i8*
  %141 = icmp eq i8* %139, %140
  br i1 %141, label %143, label %142

142:                                              ; preds = %137
  call void @_ZdlPv(i8* %139) #7
  br label %143

143:                                              ; preds = %142, %137, %135
  %144 = phi { i8*, i32 } [ %136, %135 ], [ %138, %137 ], [ %138, %142 ]
  %145 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  %146 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %147 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %147) #7
  %148 = load i8*, i8** %17, align 8, !tbaa !17
  %149 = bitcast %union.anon* %11 to i8*
  %150 = icmp eq i8* %148, %149
  br i1 %150, label %152, label %151

151:                                              ; preds = %143
  call void @_ZdlPv(i8* %148) #7
  br label %152

152:                                              ; preds = %143, %151
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %145) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %146) #7
  resume { i8*, i32 } %144

153:                                              ; preds = %133, %42, %2
  %154 = phi i1 [ %41, %2 ], [ %47, %133 ], [ %44, %42 ]
  ret i1 %154
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i8*, i64) local_unnamed_addr #3

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare dso_local i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64, i64) local_unnamed_addr #5

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #6

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = distinct !{!10, !11, !12}
!11 = !{!"llvm.loop.mustprogress"}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!15 = distinct !{!15, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!16 = !{!5, !6, i64 0}
!17 = !{!4, !6, i64 0}
!18 = !{!9, !9, i64 0}
!19 = !{!7, !7, i64 0}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!22 = distinct !{!22, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_: argument 0"}
!25 = distinct !{!25, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_"}
