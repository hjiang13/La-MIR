digraph "CFG for '_Z8exchangeB5cxx11St6vectorIiSaIiEES1_' function" {
	label="CFG for '_Z8exchangeB5cxx11St6vectorIiSaIiEES1_' function";

	Node0x55c75733ff80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%3:\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %5 = load i32*, i32** %4, align 8, !tbaa !3\l  %6 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %7 = load i32*, i32** %6, align 8, !tbaa !8\l  %8 = ptrtoint i32* %5 to i64\l  %9 = ptrtoint i32* %7 to i64\l  %10 = sub i64 %8, %9\l  %11 = ashr exact i64 %10, 2\l  %12 = icmp eq i64 %10, 0\l  br i1 %12, label %15, label %13\l|{<s0>T|<s1>F}}"];
	Node0x55c75733ff80:s0 -> Node0x55c7573407a0;
	Node0x55c75733ff80:s1 -> Node0x55c757341920;
	Node0x55c757341920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%13:\l13:                                               \l  %14 = call i64 @llvm.umax.i64(i64 %11, i64 1)\l  br label %28\l}"];
	Node0x55c757341920 -> Node0x55c757341d00;
	Node0x55c7573407a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%15:\l15:                                               \l  %16 = phi i32 [ 0, %3 ], [ %35, %28 ]\l  %17 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %2,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %18 = load i32*, i32** %17, align 8, !tbaa !3\l  %19 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %2,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %20 = load i32*, i32** %19, align 8, !tbaa !8\l  %21 = ptrtoint i32* %18 to i64\l  %22 = ptrtoint i32* %20 to i64\l  %23 = sub i64 %21, %22\l  %24 = icmp eq i64 %23, 0\l  br i1 %24, label %38, label %25\l|{<s0>T|<s1>F}}"];
	Node0x55c7573407a0:s0 -> Node0x55c757342f50;
	Node0x55c7573407a0:s1 -> Node0x55c757342fe0;
	Node0x55c757342fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%25:\l25:                                               \l  %26 = ashr exact i64 %23, 2\l  %27 = call i64 @llvm.umax.i64(i64 %26, i64 1)\l  br label %44\l}"];
	Node0x55c757342fe0 -> Node0x55c7573432c0;
	Node0x55c757341d00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i64 [ 0, %13 ], [ %36, %28 ]\l  %30 = phi i32 [ 0, %13 ], [ %35, %28 ]\l  %31 = getelementptr inbounds i32, i32* %7, i64 %29\l  %32 = load i32, i32* %31, align 4, !tbaa !9\l  %33 = and i32 %32, 1\l  %34 = xor i32 %33, 1\l  %35 = add nuw nsw i32 %34, %30\l  %36 = add nuw nsw i64 %29, 1\l  %37 = icmp eq i64 %36, %14\l  br i1 %37, label %15, label %28, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x55c757341d00:s0 -> Node0x55c7573407a0;
	Node0x55c757341d00:s1 -> Node0x55c757341d00;
	Node0x55c757342f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%38:\l38:                                               \l  %39 = phi i32 [ %16, %15 ], [ %51, %44 ]\l  %40 = zext i32 %39 to i64\l  %41 = icmp ugt i64 %11, %40\l  %42 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2\l  %43 = bitcast %\"class.std::__cxx11::basic_string\"* %0 to %union.anon**\l  store %union.anon* %42, %union.anon** %43, align 8, !tbaa !14\l  br i1 %41, label %59, label %54\l|{<s0>T|<s1>F}}"];
	Node0x55c757342f50:s0 -> Node0x55c7573441c0;
	Node0x55c757342f50:s1 -> Node0x55c757344250;
	Node0x55c7573432c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = phi i64 [ 0, %25 ], [ %52, %44 ]\l  %46 = phi i32 [ %16, %25 ], [ %51, %44 ]\l  %47 = getelementptr inbounds i32, i32* %20, i64 %45\l  %48 = load i32, i32* %47, align 4, !tbaa !9\l  %49 = and i32 %48, 1\l  %50 = xor i32 %49, 1\l  %51 = add nuw nsw i32 %50, %46\l  %52 = add nuw nsw i64 %45, 1\l  %53 = icmp eq i64 %52, %27\l  br i1 %53, label %38, label %44, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x55c7573432c0:s0 -> Node0x55c757342f50;
	Node0x55c7573432c0:s1 -> Node0x55c7573432c0;
	Node0x55c757344250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%54:\l54:                                               \l  %55 = bitcast %union.anon* %42 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(3) %55, i8* noundef nonnull align 1 dereferenceable(3)\l... getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1\l... false) #3\l  %56 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  store i64 3, i64* %56, align 8, !tbaa !17\l  %57 = bitcast %union.anon* %42 to i8*\l  %58 = getelementptr inbounds i8, i8* %57, i64 3\l  store i8 0, i8* %58, align 1, !tbaa !20\l  br label %64\l}"];
	Node0x55c757344250 -> Node0x55c757345a00;
	Node0x55c7573441c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%59:\l59:                                               \l  %60 = bitcast %union.anon* %42 to i16*\l  store i16 20302, i16* %60, align 8\l  %61 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  store i64 2, i64* %61, align 8, !tbaa !17\l  %62 = bitcast %union.anon* %42 to i8*\l  %63 = getelementptr inbounds i8, i8* %62, i64 2\l  store i8 0, i8* %63, align 2, !tbaa !20\l  br label %64\l}"];
	Node0x55c7573441c0 -> Node0x55c757345a00;
	Node0x55c757345a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%64:\l64:                                               \l  ret void\l}"];
}
