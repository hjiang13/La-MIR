; ModuleID = '../../Human_xBenchmarks_164/CPP_161/CPP_161.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_161/CPP_161.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: uwtable
define dso_local void @_Z5solveNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %9 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  store %union.anon* %8, %union.anon** %9, align 8, !tbaa !3
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  store i64 0, i64* %11, align 8, !tbaa !8
  %12 = bitcast %union.anon* %8 to i8*
  store i8 0, i8* %12, align 8, !tbaa !11
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %15 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %17 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  %18 = bitcast i64* %4 to i8*
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  %23 = bitcast %union.anon* %16 to i8*
  %24 = bitcast %union.anon* %8 to i8*
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %26 = getelementptr %union.anon, %union.anon* %16, i64 0, i32 0
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %28 = load i64, i64* %13, align 8, !tbaa !8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %110, %2
  %31 = phi i32 [ 0, %2 ], [ %53, %110 ]
  %32 = phi i64 [ %28, %2 ], [ %112, %110 ]
  %33 = sext i32 %31 to i64
  %34 = icmp eq i64 %32, %33
  br i1 %34, label %119, label %152

35:                                               ; preds = %2, %110
  %36 = phi i64 [ %111, %110 ], [ 0, %2 ]
  %37 = phi i32 [ %53, %110 ], [ 0, %2 ]
  %38 = load i8*, i8** %14, align 8, !tbaa !12
  %39 = getelementptr inbounds i8, i8* %38, i64 %36
  %40 = load i8, i8* %39, align 1, !tbaa !11
  %41 = add i8 %40, -65
  %42 = icmp ult i8 %41, 26
  br i1 %42, label %43, label %45

43:                                               ; preds = %35
  %44 = add i8 %40, 32
  br label %52

45:                                               ; preds = %35
  %46 = add i8 %40, -97
  %47 = icmp ult i8 %46, 26
  br i1 %47, label %48, label %50

48:                                               ; preds = %45
  %49 = add i8 %40, -32
  br label %52

50:                                               ; preds = %45
  %51 = add nsw i32 %37, 1
  br label %52

52:                                               ; preds = %48, %50, %43
  %53 = phi i32 [ %37, %43 ], [ %37, %48 ], [ %51, %50 ]
  %54 = phi i8 [ %44, %43 ], [ %49, %48 ], [ %40, %50 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #6
  call void @llvm.experimental.noalias.scope.decl(metadata !13)
  store %union.anon* %16, %union.anon** %17, align 8, !tbaa !3, !alias.scope !13
  %55 = load i8*, i8** %10, align 8, !tbaa !12, !noalias !13
  %56 = load i64, i64* %11, align 8, !tbaa !8, !noalias !13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6, !noalias !13
  store i64 %56, i64* %4, align 8, !tbaa !16, !noalias !13
  %57 = icmp ugt i64 %56, 15
  br i1 %57, label %58, label %62

58:                                               ; preds = %52
  %59 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %60 unwind label %114

60:                                               ; preds = %58
  store i8* %59, i8** %19, align 8, !tbaa !12, !alias.scope !13
  %61 = load i64, i64* %4, align 8, !tbaa !16, !noalias !13
  store i64 %61, i64* %20, align 8, !tbaa !11, !alias.scope !13
  br label %62

62:                                               ; preds = %60, %52
  %63 = load i8*, i8** %21, align 8, !tbaa !12, !alias.scope !13
  switch i64 %56, label %66 [
    i64 1, label %64
    i64 0, label %67
  ]

64:                                               ; preds = %62
  %65 = load i8, i8* %55, align 1, !tbaa !11
  store i8 %65, i8* %63, align 1, !tbaa !11
  br label %67

66:                                               ; preds = %62
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %63, i8* align 1 %55, i64 %56, i1 false) #6
  br label %67

67:                                               ; preds = %66, %64, %62
  %68 = load i64, i64* %4, align 8, !tbaa !16, !noalias !13
  store i64 %68, i64* %22, align 8, !tbaa !8, !alias.scope !13
  %69 = load i8*, i8** %21, align 8, !tbaa !12, !alias.scope !13
  %70 = getelementptr inbounds i8, i8* %69, i64 %68
  store i8 0, i8* %70, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6, !noalias !13
  %71 = load i64, i64* %22, align 8, !tbaa !8, !alias.scope !13
  %72 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64 %71, i64 0, i64 1, i8 signext %54)
          to label %79 unwind label %73

73:                                               ; preds = %67
  %74 = landingpad { i8*, i32 }
          cleanup
  %75 = load i8*, i8** %21, align 8, !tbaa !12, !alias.scope !13
  %76 = bitcast %union.anon* %16 to i8*
  %77 = icmp eq i8* %75, %76
  br i1 %77, label %116, label %78

78:                                               ; preds = %73
  call void @_ZdlPv(i8* %75) #6
  br label %116

79:                                               ; preds = %67
  %80 = load i8*, i8** %21, align 8, !tbaa !12
  %81 = icmp eq i8* %80, %23
  br i1 %81, label %82, label %95

82:                                               ; preds = %79
  %83 = load i64, i64* %22, align 8, !tbaa !8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %91, label %85

85:                                               ; preds = %82
  %86 = load i8*, i8** %10, align 8, !tbaa !12
  %87 = icmp eq i64 %83, 1
  br i1 %87, label %88, label %90

88:                                               ; preds = %85
  %89 = load i8, i8* %80, align 1, !tbaa !11
  store i8 %89, i8* %86, align 1, !tbaa !11
  br label %91

90:                                               ; preds = %85
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %86, i8* align 1 %80, i64 %83, i1 false) #6
  br label %91

91:                                               ; preds = %90, %88, %82
  %92 = load i64, i64* %22, align 8, !tbaa !8
  store i64 %92, i64* %11, align 8, !tbaa !8
  %93 = load i8*, i8** %10, align 8, !tbaa !12
  %94 = getelementptr inbounds i8, i8* %93, i64 %92
  store i8 0, i8* %94, align 1, !tbaa !11
  br label %105

95:                                               ; preds = %79
  %96 = load i8*, i8** %10, align 8, !tbaa !12
  %97 = icmp eq i8* %96, %24
  %98 = load i64, i64* %25, align 8
  store i8* %80, i8** %10, align 8, !tbaa !12
  %99 = load i64, i64* %22, align 8, !tbaa !8
  store i64 %99, i64* %11, align 8, !tbaa !8
  %100 = load i64, i64* %26, align 8, !tbaa !11
  store i64 %100, i64* %25, align 8, !tbaa !11
  %101 = icmp eq i8* %96, null
  %102 = or i1 %97, %101
  br i1 %102, label %104, label %103

103:                                              ; preds = %95
  store i8* %96, i8** %21, align 8, !tbaa !12
  store i64 %98, i64* %27, align 8, !tbaa !11
  br label %105

104:                                              ; preds = %95
  store %union.anon* %16, %union.anon** %17, align 8, !tbaa !12
  br label %105

105:                                              ; preds = %91, %103, %104
  store i64 0, i64* %22, align 8, !tbaa !8
  %106 = load i8*, i8** %21, align 8, !tbaa !12
  store i8 0, i8* %106, align 1, !tbaa !11
  %107 = load i8*, i8** %21, align 8, !tbaa !12
  %108 = icmp eq i8* %107, %23
  br i1 %108, label %110, label %109

109:                                              ; preds = %105
  call void @_ZdlPv(i8* %107) #6
  br label %110

110:                                              ; preds = %105, %109
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #6
  %111 = add nuw i64 %36, 1
  %112 = load i64, i64* %13, align 8, !tbaa !8
  %113 = icmp ugt i64 %112, %111
  br i1 %113, label %35, label %30, !llvm.loop !17

114:                                              ; preds = %58
  %115 = landingpad { i8*, i32 }
          cleanup
  br label %116

116:                                              ; preds = %73, %78, %114
  %117 = phi { i8*, i32 } [ %115, %114 ], [ %74, %78 ], [ %74, %73 ]
  %118 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %118) #6
  br label %174

119:                                              ; preds = %30
  %120 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8, !tbaa !12, !noalias !20
  %122 = getelementptr inbounds i8, i8* %121, i64 %32
  %123 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %124 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %123, %union.anon** %124, align 8, !tbaa !3
  %125 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #6
  store i64 %32, i64* %3, align 8, !tbaa !16
  %126 = icmp ugt i64 %32, 15
  br i1 %126, label %127, label %133

127:                                              ; preds = %119
  %128 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %129 unwind label %150

129:                                              ; preds = %127
  %130 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %128, i8** %130, align 8, !tbaa !12
  %131 = load i64, i64* %3, align 8, !tbaa !16
  %132 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %131, i64* %132, align 8, !tbaa !11
  br label %133

133:                                              ; preds = %129, %119
  %134 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %135 = icmp eq i64 %32, 0
  br i1 %135, label %145, label %136

136:                                              ; preds = %133
  %137 = load i8*, i8** %134, align 8, !tbaa !12
  br label %138

138:                                              ; preds = %138, %136
  %139 = phi i8* [ %141, %138 ], [ %122, %136 ]
  %140 = phi i8* [ %143, %138 ], [ %137, %136 ]
  %141 = getelementptr inbounds i8, i8* %139, i64 -1
  %142 = load i8, i8* %141, align 1, !tbaa !11
  store i8 %142, i8* %140, align 1, !tbaa !11
  %143 = getelementptr inbounds i8, i8* %140, i64 1
  %144 = icmp eq i8* %141, %121
  br i1 %144, label %145, label %138, !llvm.loop !23

145:                                              ; preds = %138, %133
  %146 = load i64, i64* %3, align 8, !tbaa !16
  %147 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %146, i64* %147, align 8, !tbaa !8
  %148 = load i8*, i8** %134, align 8, !tbaa !12
  %149 = getelementptr inbounds i8, i8* %148, i64 %146
  store i8 0, i8* %149, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #6
  br label %168

150:                                              ; preds = %127
  %151 = landingpad { i8*, i32 }
          cleanup
  br label %174

152:                                              ; preds = %30
  %153 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %154 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %153, %union.anon** %154, align 8, !tbaa !3
  %155 = load i8*, i8** %10, align 8, !tbaa !12
  %156 = bitcast %union.anon* %8 to i8*
  %157 = icmp eq i8* %155, %156
  br i1 %157, label %158, label %160

158:                                              ; preds = %152
  %159 = bitcast %union.anon* %153 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %159, i8* noundef nonnull align 8 dereferenceable(16) %156, i64 16, i1 false) #6
  br label %165

160:                                              ; preds = %152
  %161 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %155, i8** %161, align 8, !tbaa !12
  %162 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %163 = load i64, i64* %162, align 8, !tbaa !11
  %164 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %163, i64* %164, align 8, !tbaa !11
  br label %165

165:                                              ; preds = %158, %160
  %166 = load i64, i64* %11, align 8, !tbaa !8
  %167 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %166, i64* %167, align 8, !tbaa !8
  store %union.anon* %8, %union.anon** %9, align 8, !tbaa !12
  store i64 0, i64* %11, align 8, !tbaa !8
  store i8 0, i8* %156, align 8, !tbaa !11
  br label %168

168:                                              ; preds = %145, %165
  %169 = load i8*, i8** %10, align 8, !tbaa !12
  %170 = bitcast %union.anon* %8 to i8*
  %171 = icmp eq i8* %169, %170
  br i1 %171, label %173, label %172

172:                                              ; preds = %168
  call void @_ZdlPv(i8* %169) #6
  br label %173

173:                                              ; preds = %168, %172
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #6
  ret void

174:                                              ; preds = %150, %116
  %175 = phi { i8*, i32 } [ %117, %116 ], [ %151, %150 ]
  %176 = load i8*, i8** %10, align 8, !tbaa !12
  %177 = bitcast %union.anon* %8 to i8*
  %178 = icmp eq i8* %176, %177
  br i1 %178, label %180, label %179

179:                                              ; preds = %174
  call void @_ZdlPv(i8* %176) #6
  br label %180

180:                                              ; preds = %179, %174
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #6
  resume { i8*, i32 } %175
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #4

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #5

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!15 = distinct !{!15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!16 = !{!10, !10, i64 0}
!17 = distinct !{!17, !18, !19}
!18 = !{!"llvm.loop.mustprogress"}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv: argument 0"}
!22 = distinct !{!22, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv"}
!23 = distinct !{!23, !18, !19}
