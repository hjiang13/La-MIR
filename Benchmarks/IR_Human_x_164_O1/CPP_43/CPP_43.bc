; ModuleID = '../../Human_xBenchmarks_164/CPP_43/CPP_43.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_43/CPP_43.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local zeroext i1 @_Z17pairs_sum_to_zeroSt6vectorIiSaIiEE(%"class.std::vector"* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32*, i32** %2, align 8, !tbaa !3
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8, !tbaa !8
  %6 = ptrtoint i32* %3 to i64
  %7 = ptrtoint i32* %5 to i64
  %8 = sub i64 %6, %7
  %9 = ashr exact i64 %8, 2
  br label %10

10:                                               ; preds = %33, %1
  %11 = phi i64 [ %15, %33 ], [ 0, %1 ]
  %12 = phi i64 [ %36, %33 ], [ 1, %1 ]
  %13 = icmp eq i64 %11, %9
  br i1 %13, label %37, label %14

14:                                               ; preds = %10
  %15 = add nuw i64 %11, 1
  %16 = icmp ugt i64 %9, %15
  br i1 %16, label %17, label %33

17:                                               ; preds = %14
  %18 = getelementptr inbounds i32, i32* %5, i64 %11
  %19 = load i32, i32* %18, align 4, !tbaa !9
  %20 = getelementptr inbounds i32, i32* %5, i64 %12
  %21 = load i32, i32* %20, align 4, !tbaa !9
  %22 = sub i32 0, %21
  %23 = icmp eq i32 %19, %22
  br i1 %23, label %33, label %24

24:                                               ; preds = %17, %28
  %25 = phi i64 [ %26, %28 ], [ %12, %17 ]
  %26 = add i64 %25, 1
  %27 = icmp ugt i64 %9, %26
  br i1 %27, label %28, label %33, !llvm.loop !11

28:                                               ; preds = %24
  %29 = getelementptr inbounds i32, i32* %5, i64 %26
  %30 = load i32, i32* %29, align 4, !tbaa !9
  %31 = sub i32 0, %30
  %32 = icmp eq i32 %19, %31
  br i1 %32, label %33, label %24, !llvm.loop !11

33:                                               ; preds = %28, %24, %17, %14
  %34 = phi i1 [ %16, %14 ], [ %16, %17 ], [ %27, %24 ], [ %27, %28 ]
  %35 = phi i32 [ 5, %14 ], [ 1, %17 ], [ 5, %24 ], [ 1, %28 ]
  %36 = add nuw i64 %12, 1
  br i1 %34, label %37, label %10, !llvm.loop !14

37:                                               ; preds = %10, %33
  %38 = phi i32 [ %35, %33 ], [ 2, %10 ]
  %39 = icmp ne i32 %38, 2
  ret i1 %39
}

attributes #0 = { mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 8}
!4 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!4, !5, i64 0}
!9 = !{!10, !10, i64 0}
!10 = !{!"int", !6, i64 0}
!11 = distinct !{!11, !12, !13}
!12 = !{!"llvm.loop.mustprogress"}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !12, !13}
