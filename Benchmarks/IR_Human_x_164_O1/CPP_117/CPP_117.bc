; ModuleID = '../../Human_xBenchmarks_164/CPP_117/CPP_117.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_117/CPP_117.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ = comdat any

@.str = private unnamed_addr constant [11 x i8] c"aeiouAEIOU\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z12select_wordsNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(%"class.std::vector"* noalias sret(%"class.std::vector") align 8 %0, %"class.std::__cxx11::basic_string"* %1, i32 %2) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = alloca %"class.std::__cxx11::basic_string", align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %7 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %15 = bitcast %union.anon* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(10) %15, i8* noundef nonnull align 1 dereferenceable(10) getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i1 false) #11
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  store i64 10, i64* %16, align 8, !tbaa !8
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 1, i64 2
  store i8 0, i8* %17, align 2, !tbaa !11
  %18 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %20 = bitcast %"class.std::__cxx11::basic_string"* %8 to %union.anon**
  store %union.anon* %19, %union.anon** %20, align 8, !tbaa !3
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 1
  store i64 0, i64* %22, align 8, !tbaa !8
  %23 = bitcast %union.anon* %19 to i8*
  store i8 0, i8* %23, align 8, !tbaa !11
  %24 = bitcast %"class.std::__cxx11::basic_string"* %9 to i8*
  %25 = bitcast %"class.std::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %25, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  call void @llvm.experimental.noalias.scope.decl(metadata !12)
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2
  %27 = bitcast %"class.std::__cxx11::basic_string"* %9 to %union.anon**
  store %union.anon* %26, %union.anon** %27, align 8, !tbaa !3, !alias.scope !12
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8, !tbaa !15, !noalias !12
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %31 = load i64, i64* %30, align 8, !tbaa !8, !noalias !12
  %32 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11, !noalias !12
  store i64 %31, i64* %6, align 8, !tbaa !16, !noalias !12
  %33 = icmp ugt i64 %31, 15
  br i1 %33, label %34, label %40

34:                                               ; preds = %3
  %35 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %9, i64* nonnull align 8 dereferenceable(8) %6, i64 0)
          to label %36 unwind label %115

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  store i8* %35, i8** %37, align 8, !tbaa !15, !alias.scope !12
  %38 = load i64, i64* %6, align 8, !tbaa !16, !noalias !12
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2, i32 0
  store i64 %38, i64* %39, align 8, !tbaa !11, !alias.scope !12
  br label %40

40:                                               ; preds = %36, %3
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8, !tbaa !15, !alias.scope !12
  switch i64 %31, label %45 [
    i64 1, label %43
    i64 0, label %46
  ]

43:                                               ; preds = %40
  %44 = load i8, i8* %29, align 1, !tbaa !11
  store i8 %44, i8* %42, align 1, !tbaa !11
  br label %46

45:                                               ; preds = %40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 1 %29, i64 %31, i1 false) #11
  br label %46

46:                                               ; preds = %45, %43, %40
  %47 = load i64, i64* %6, align 8, !tbaa !16, !noalias !12
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 1
  store i64 %47, i64* %48, align 8, !tbaa !8, !alias.scope !12
  %49 = load i8*, i8** %41, align 8, !tbaa !15, !alias.scope !12
  %50 = getelementptr inbounds i8, i8* %49, i64 %47
  store i8 0, i8* %50, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11, !noalias !12
  %51 = load i64, i64* %48, align 8, !tbaa !8, !alias.scope !12
  %52 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %9, i64 %51, i64 0, i64 1, i8 signext 32)
          to label %59 unwind label %53

53:                                               ; preds = %46
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = load i8*, i8** %41, align 8, !tbaa !15, !alias.scope !12
  %56 = bitcast %union.anon* %26 to i8*
  %57 = icmp eq i8* %55, %56
  br i1 %57, label %117, label %58

58:                                               ; preds = %53
  call void @_ZdlPv(i8* %55) #11
  br label %117

59:                                               ; preds = %46
  %60 = load i8*, i8** %41, align 8, !tbaa !15
  %61 = bitcast %union.anon* %26 to i8*
  %62 = icmp eq i8* %60, %61
  br i1 %62, label %63, label %76

63:                                               ; preds = %59
  %64 = load i64, i64* %48, align 8, !tbaa !8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %63
  %67 = load i8*, i8** %28, align 8, !tbaa !15
  %68 = icmp eq i64 %64, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = load i8, i8* %60, align 1, !tbaa !11
  store i8 %70, i8* %67, align 1, !tbaa !11
  br label %72

71:                                               ; preds = %66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %67, i8* align 1 %60, i64 %64, i1 false) #11
  br label %72

72:                                               ; preds = %71, %69, %63
  %73 = load i64, i64* %48, align 8, !tbaa !8
  store i64 %73, i64* %30, align 8, !tbaa !8
  %74 = load i8*, i8** %28, align 8, !tbaa !15
  %75 = getelementptr inbounds i8, i8* %74, i64 %73
  store i8 0, i8* %75, align 1, !tbaa !11
  br label %91

76:                                               ; preds = %59
  %77 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 2
  %78 = bitcast %union.anon* %77 to i8*
  %79 = load i8*, i8** %28, align 8, !tbaa !15
  %80 = icmp eq i8* %79, %78
  %81 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 2, i32 0
  %82 = load i64, i64* %81, align 8
  store i8* %60, i8** %28, align 8, !tbaa !15
  %83 = load i64, i64* %48, align 8, !tbaa !8
  store i64 %83, i64* %30, align 8, !tbaa !8
  %84 = getelementptr %union.anon, %union.anon* %26, i64 0, i32 0
  %85 = load i64, i64* %84, align 8, !tbaa !11
  store i64 %85, i64* %81, align 8, !tbaa !11
  %86 = icmp eq i8* %79, null
  %87 = or i1 %80, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %76
  store i8* %79, i8** %41, align 8, !tbaa !15
  %89 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2, i32 0
  store i64 %82, i64* %89, align 8, !tbaa !11
  br label %91

90:                                               ; preds = %76
  store %union.anon* %26, %union.anon** %27, align 8, !tbaa !15
  br label %91

91:                                               ; preds = %72, %88, %90
  store i64 0, i64* %48, align 8, !tbaa !8
  %92 = load i8*, i8** %41, align 8, !tbaa !15
  store i8 0, i8* %92, align 1, !tbaa !11
  %93 = load i8*, i8** %41, align 8, !tbaa !15
  %94 = icmp eq i8* %93, %61
  br i1 %94, label %96, label %95

95:                                               ; preds = %91
  call void @_ZdlPv(i8* %93) #11
  br label %96

96:                                               ; preds = %91, %95
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  %97 = bitcast %"class.std::__cxx11::basic_string"* %10 to i8*
  %98 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2
  %99 = bitcast %"class.std::__cxx11::basic_string"* %10 to %union.anon**
  %100 = bitcast i64* %4 to i8*
  %101 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2, i32 0
  %103 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 0, i32 0
  %104 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 1
  %105 = bitcast %union.anon* %98 to i8*
  %106 = bitcast %union.anon* %19 to i8*
  %107 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  %108 = getelementptr %union.anon, %union.anon* %98, i64 0, i32 0
  %109 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2, i32 0
  %110 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %111 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %112 = bitcast i64* %5 to i8*
  %113 = load i64, i64* %30, align 8, !tbaa !8
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %303, label %119

115:                                              ; preds = %34
  %116 = landingpad { i8*, i32 }
          cleanup
  br label %117

117:                                              ; preds = %53, %58, %115
  %118 = phi { i8*, i32 } [ %116, %115 ], [ %54, %58 ], [ %54, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  br label %297

119:                                              ; preds = %96, %292
  %120 = phi i64 [ %294, %292 ], [ 0, %96 ]
  %121 = phi i32 [ %293, %292 ], [ 0, %96 ]
  %122 = load i8*, i8** %28, align 8, !tbaa !15
  %123 = getelementptr inbounds i8, i8* %122, i64 %120
  %124 = load i8, i8* %123, align 1, !tbaa !11
  %125 = icmp eq i8 %124, 32
  br i1 %125, label %126, label %163

126:                                              ; preds = %119
  %127 = icmp eq i32 %121, %2
  br i1 %127, label %128, label %160

128:                                              ; preds = %126
  %129 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %110, align 8, !tbaa !17
  %130 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %111, align 8, !tbaa !19
  %131 = icmp eq %"class.std::__cxx11::basic_string"* %129, %130
  br i1 %131, label %157, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %129, i64 0, i32 2
  %134 = bitcast %"class.std::__cxx11::basic_string"* %129 to %union.anon**
  store %union.anon* %133, %union.anon** %134, align 8, !tbaa !3
  %135 = load i8*, i8** %21, align 8, !tbaa !15
  %136 = load i64, i64* %22, align 8, !tbaa !8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #11
  store i64 %136, i64* %5, align 8, !tbaa !16
  %137 = icmp ugt i64 %136, 15
  br i1 %137, label %138, label %144

138:                                              ; preds = %132
  %139 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %129, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
          to label %140 unwind label %158

140:                                              ; preds = %138
  %141 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %129, i64 0, i32 0, i32 0
  store i8* %139, i8** %141, align 8, !tbaa !15
  %142 = load i64, i64* %5, align 8, !tbaa !16
  %143 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %129, i64 0, i32 2, i32 0
  store i64 %142, i64* %143, align 8, !tbaa !11
  br label %144

144:                                              ; preds = %140, %132
  %145 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %129, i64 0, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8, !tbaa !15
  switch i64 %136, label %149 [
    i64 1, label %147
    i64 0, label %150
  ]

147:                                              ; preds = %144
  %148 = load i8, i8* %135, align 1, !tbaa !11
  store i8 %148, i8* %146, align 1, !tbaa !11
  br label %150

149:                                              ; preds = %144
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %146, i8* align 1 %135, i64 %136, i1 false) #11
  br label %150

150:                                              ; preds = %149, %147, %144
  %151 = load i64, i64* %5, align 8, !tbaa !16
  %152 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %129, i64 0, i32 1
  store i64 %151, i64* %152, align 8, !tbaa !8
  %153 = load i8*, i8** %145, align 8, !tbaa !15
  %154 = getelementptr inbounds i8, i8* %153, i64 %151
  store i8 0, i8* %154, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #11
  %155 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %110, align 8, !tbaa !17
  %156 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %155, i64 1
  store %"class.std::__cxx11::basic_string"* %156, %"class.std::__cxx11::basic_string"** %110, align 8, !tbaa !17
  br label %160

157:                                              ; preds = %128
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %"class.std::__cxx11::basic_string"* %129, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8)
          to label %160 unwind label %158

158:                                              ; preds = %160, %157, %138
  %159 = landingpad { i8*, i32 }
          cleanup
  br label %297

160:                                              ; preds = %150, %157, %126
  %161 = load i64, i64* %22, align 8, !tbaa !8
  %162 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64 0, i64 %161, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 0)
          to label %292 unwind label %158

163:                                              ; preds = %119
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %97) #11
  %164 = load i8, i8* %123, align 1, !tbaa !11
  call void @llvm.experimental.noalias.scope.decl(metadata !20)
  store %union.anon* %98, %union.anon** %99, align 8, !tbaa !3, !alias.scope !20
  %165 = load i8*, i8** %21, align 8, !tbaa !15, !noalias !20
  %166 = load i64, i64* %22, align 8, !tbaa !8, !noalias !20
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #11, !noalias !20
  store i64 %166, i64* %4, align 8, !tbaa !16, !noalias !20
  %167 = icmp ugt i64 %166, 15
  br i1 %167, label %168, label %172

168:                                              ; preds = %163
  %169 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %170 unwind label %287

170:                                              ; preds = %168
  store i8* %169, i8** %101, align 8, !tbaa !15, !alias.scope !20
  %171 = load i64, i64* %4, align 8, !tbaa !16, !noalias !20
  store i64 %171, i64* %102, align 8, !tbaa !11, !alias.scope !20
  br label %172

172:                                              ; preds = %170, %163
  %173 = load i8*, i8** %103, align 8, !tbaa !15, !alias.scope !20
  switch i64 %166, label %176 [
    i64 1, label %174
    i64 0, label %177
  ]

174:                                              ; preds = %172
  %175 = load i8, i8* %165, align 1, !tbaa !11
  store i8 %175, i8* %173, align 1, !tbaa !11
  br label %177

176:                                              ; preds = %172
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %173, i8* align 1 %165, i64 %166, i1 false) #11
  br label %177

177:                                              ; preds = %176, %174, %172
  %178 = load i64, i64* %4, align 8, !tbaa !16, !noalias !20
  store i64 %178, i64* %104, align 8, !tbaa !8, !alias.scope !20
  %179 = load i8*, i8** %103, align 8, !tbaa !15, !alias.scope !20
  %180 = getelementptr inbounds i8, i8* %179, i64 %178
  store i8 0, i8* %180, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #11, !noalias !20
  %181 = load i64, i64* %104, align 8, !tbaa !8, !alias.scope !20
  %182 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i64 %181, i64 0, i64 1, i8 signext %164)
          to label %189 unwind label %183

183:                                              ; preds = %177
  %184 = landingpad { i8*, i32 }
          cleanup
  %185 = load i8*, i8** %103, align 8, !tbaa !15, !alias.scope !20
  %186 = bitcast %union.anon* %98 to i8*
  %187 = icmp eq i8* %185, %186
  br i1 %187, label %289, label %188

188:                                              ; preds = %183
  call void @_ZdlPv(i8* %185) #11
  br label %289

189:                                              ; preds = %177
  %190 = load i8*, i8** %103, align 8, !tbaa !15
  %191 = icmp eq i8* %190, %105
  br i1 %191, label %192, label %205

192:                                              ; preds = %189
  %193 = load i64, i64* %104, align 8, !tbaa !8
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %201, label %195

195:                                              ; preds = %192
  %196 = load i8*, i8** %21, align 8, !tbaa !15
  %197 = icmp eq i64 %193, 1
  br i1 %197, label %198, label %200

198:                                              ; preds = %195
  %199 = load i8, i8* %190, align 1, !tbaa !11
  store i8 %199, i8* %196, align 1, !tbaa !11
  br label %201

200:                                              ; preds = %195
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %196, i8* align 1 %190, i64 %193, i1 false) #11
  br label %201

201:                                              ; preds = %200, %198, %192
  %202 = load i64, i64* %104, align 8, !tbaa !8
  store i64 %202, i64* %22, align 8, !tbaa !8
  %203 = load i8*, i8** %21, align 8, !tbaa !15
  %204 = getelementptr inbounds i8, i8* %203, i64 %202
  store i8 0, i8* %204, align 1, !tbaa !11
  br label %215

205:                                              ; preds = %189
  %206 = load i8*, i8** %21, align 8, !tbaa !15
  %207 = icmp eq i8* %206, %106
  %208 = load i64, i64* %107, align 8
  store i8* %190, i8** %21, align 8, !tbaa !15
  %209 = load i64, i64* %104, align 8, !tbaa !8
  store i64 %209, i64* %22, align 8, !tbaa !8
  %210 = load i64, i64* %108, align 8, !tbaa !11
  store i64 %210, i64* %107, align 8, !tbaa !11
  %211 = icmp eq i8* %206, null
  %212 = or i1 %207, %211
  br i1 %212, label %214, label %213

213:                                              ; preds = %205
  store i8* %206, i8** %103, align 8, !tbaa !15
  store i64 %208, i64* %109, align 8, !tbaa !11
  br label %215

214:                                              ; preds = %205
  store %union.anon* %98, %union.anon** %99, align 8, !tbaa !15
  br label %215

215:                                              ; preds = %201, %213, %214
  store i64 0, i64* %104, align 8, !tbaa !8
  %216 = load i8*, i8** %103, align 8, !tbaa !15
  store i8 0, i8* %216, align 1, !tbaa !11
  %217 = load i8*, i8** %103, align 8, !tbaa !15
  %218 = icmp eq i8* %217, %105
  br i1 %218, label %220, label %219

219:                                              ; preds = %215
  call void @_ZdlPv(i8* %217) #11
  br label %220

220:                                              ; preds = %215, %219
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #11
  %221 = load i8*, i8** %28, align 8, !tbaa !15
  %222 = getelementptr inbounds i8, i8* %221, i64 %120
  %223 = load i8, i8* %222, align 1, !tbaa !11
  %224 = and i8 %223, -33
  %225 = add i8 %224, -65
  %226 = icmp ult i8 %225, 26
  br i1 %226, label %227, label %292

227:                                              ; preds = %220
  %228 = load i8*, i8** %14, align 8, !tbaa !15
  %229 = load i64, i64* %16, align 8, !tbaa !8
  %230 = getelementptr inbounds i8, i8* %228, i64 %229
  %231 = ptrtoint i8* %230 to i64
  %232 = icmp sgt i64 %229, 3
  br i1 %232, label %233, label %256

233:                                              ; preds = %227
  %234 = ashr i64 %229, 2
  br label %235

235:                                              ; preds = %252, %233
  %236 = phi i64 [ %234, %233 ], [ %254, %252 ]
  %237 = phi i8* [ %228, %233 ], [ %253, %252 ]
  %238 = load i8, i8* %237, align 1, !tbaa !11
  %239 = icmp eq i8 %238, %223
  br i1 %239, label %282, label %240

240:                                              ; preds = %235
  %241 = getelementptr inbounds i8, i8* %237, i64 1
  %242 = load i8, i8* %241, align 1, !tbaa !11
  %243 = icmp eq i8 %242, %223
  br i1 %243, label %280, label %244

244:                                              ; preds = %240
  %245 = getelementptr inbounds i8, i8* %237, i64 2
  %246 = load i8, i8* %245, align 1, !tbaa !11
  %247 = icmp eq i8 %246, %223
  br i1 %247, label %278, label %248

248:                                              ; preds = %244
  %249 = getelementptr inbounds i8, i8* %237, i64 3
  %250 = load i8, i8* %249, align 1, !tbaa !11
  %251 = icmp eq i8 %250, %223
  br i1 %251, label %276, label %252

252:                                              ; preds = %248
  %253 = getelementptr inbounds i8, i8* %237, i64 4
  %254 = add nsw i64 %236, -1
  %255 = icmp sgt i64 %236, 1
  br i1 %255, label %235, label %256, !llvm.loop !23

256:                                              ; preds = %252, %227
  %257 = phi i8* [ %228, %227 ], [ %253, %252 ]
  %258 = ptrtoint i8* %257 to i64
  %259 = sub i64 %231, %258
  switch i64 %259, label %275 [
    i64 3, label %260
    i64 2, label %265
    i64 1, label %271
  ]

260:                                              ; preds = %256
  %261 = load i8, i8* %257, align 1, !tbaa !11
  %262 = icmp eq i8 %261, %223
  br i1 %262, label %282, label %263

263:                                              ; preds = %260
  %264 = getelementptr inbounds i8, i8* %257, i64 1
  br label %265

265:                                              ; preds = %263, %256
  %266 = phi i8* [ %257, %256 ], [ %264, %263 ]
  %267 = load i8, i8* %266, align 1, !tbaa !11
  %268 = icmp eq i8 %267, %223
  br i1 %268, label %282, label %269

269:                                              ; preds = %265
  %270 = getelementptr inbounds i8, i8* %266, i64 1
  br label %271

271:                                              ; preds = %269, %256
  %272 = phi i8* [ %257, %256 ], [ %270, %269 ]
  %273 = load i8, i8* %272, align 1, !tbaa !11
  %274 = icmp eq i8 %273, %223
  br i1 %274, label %282, label %275

275:                                              ; preds = %271, %256
  br label %282

276:                                              ; preds = %248
  %277 = getelementptr inbounds i8, i8* %237, i64 3
  br label %282

278:                                              ; preds = %244
  %279 = getelementptr inbounds i8, i8* %237, i64 2
  br label %282

280:                                              ; preds = %240
  %281 = getelementptr inbounds i8, i8* %237, i64 1
  br label %282

282:                                              ; preds = %235, %276, %278, %280, %275, %271, %265, %260
  %283 = phi i8* [ %230, %275 ], [ %257, %260 ], [ %266, %265 ], [ %272, %271 ], [ %277, %276 ], [ %279, %278 ], [ %281, %280 ], [ %237, %235 ]
  %284 = icmp eq i8* %283, %230
  %285 = zext i1 %284 to i32
  %286 = add nsw i32 %121, %285
  br label %292

287:                                              ; preds = %168
  %288 = landingpad { i8*, i32 }
          cleanup
  br label %289

289:                                              ; preds = %183, %188, %287
  %290 = phi { i8*, i32 } [ %288, %287 ], [ %184, %188 ], [ %184, %183 ]
  %291 = bitcast %"class.std::__cxx11::basic_string"* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %291) #11
  br label %297

292:                                              ; preds = %220, %160, %282
  %293 = phi i32 [ %286, %282 ], [ 0, %160 ], [ %121, %220 ]
  %294 = add nuw i64 %120, 1
  %295 = load i64, i64* %30, align 8, !tbaa !8
  %296 = icmp ugt i64 %295, %294
  br i1 %296, label %119, label %303, !llvm.loop !26

297:                                              ; preds = %158, %289, %117
  %298 = phi { i8*, i32 } [ %118, %117 ], [ %159, %158 ], [ %290, %289 ]
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #11
  %299 = load i8*, i8** %21, align 8, !tbaa !15
  %300 = bitcast %union.anon* %19 to i8*
  %301 = icmp eq i8* %299, %300
  br i1 %301, label %314, label %302

302:                                              ; preds = %297
  call void @_ZdlPv(i8* %299) #11
  br label %314

303:                                              ; preds = %292, %96
  %304 = load i8*, i8** %21, align 8, !tbaa !15
  %305 = bitcast %union.anon* %19 to i8*
  %306 = icmp eq i8* %304, %305
  br i1 %306, label %308, label %307

307:                                              ; preds = %303
  call void @_ZdlPv(i8* %304) #11
  br label %308

308:                                              ; preds = %303, %307
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #11
  %309 = load i8*, i8** %14, align 8, !tbaa !15
  %310 = bitcast %union.anon* %12 to i8*
  %311 = icmp eq i8* %309, %310
  br i1 %311, label %313, label %312

312:                                              ; preds = %308
  call void @_ZdlPv(i8* %309) #11
  br label %313

313:                                              ; preds = %308, %312
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  ret void

314:                                              ; preds = %302, %297
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #11
  %315 = load i8*, i8** %14, align 8, !tbaa !15
  %316 = bitcast %union.anon* %12 to i8*
  %317 = icmp eq i8* %315, %316
  br i1 %317, label %319, label %318

318:                                              ; preds = %314
  call void @_ZdlPv(i8* %315) #11
  br label %319

319:                                              ; preds = %318, %314
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  resume { i8*, i32 } %298
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8, !tbaa !27
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8, !tbaa !17
  %6 = icmp eq %"class.std::__cxx11::basic_string"* %3, %5
  br i1 %6, label %18, label %7

7:                                                ; preds = %1, %15
  %8 = phi %"class.std::__cxx11::basic_string"* [ %16, %15 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !tbaa !15
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %12 = bitcast %union.anon* %11 to i8*
  %13 = icmp eq i8* %10, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %7
  call void @_ZdlPv(i8* %10) #11
  br label %15

15:                                               ; preds = %14, %7
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 1
  %17 = icmp eq %"class.std::__cxx11::basic_string"* %16, %5
  br i1 %17, label %18, label %7, !llvm.loop !28

18:                                               ; preds = %15, %1
  %19 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %19, align 8, !tbaa !27
  %21 = icmp eq %"class.std::__cxx11::basic_string"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__cxx11::basic_string"* %20 to i8*
  call void @_ZdlPv(i8* nonnull %23) #11
  br label %24

24:                                               ; preds = %18, %22
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #4 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #11
  call void @_ZSt9terminatev() #12
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #5

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #6

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #6

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8, !tbaa !17
  %7 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8, !tbaa !27
  %9 = ptrtoint %"class.std::__cxx11::basic_string"* %6 to i64
  %10 = ptrtoint %"class.std::__cxx11::basic_string"* %8 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 5
  %13 = icmp eq i64 %11, 9223372036854775776
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable

15:                                               ; preds = %3
  %16 = icmp eq i64 %11, 0
  %17 = select i1 %16, i64 1, i64 %12
  %18 = add nsw i64 %17, %12
  %19 = icmp ult i64 %18, %12
  %20 = icmp ugt i64 %18, 288230376151711743
  %21 = or i1 %19, %20
  %22 = select i1 %21, i64 288230376151711743, i64 %18
  %23 = ptrtoint %"class.std::__cxx11::basic_string"* %1 to i64
  %24 = sub i64 %23, %10
  %25 = ashr exact i64 %24, 5
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %15
  %28 = icmp ugt i64 %22, 288230376151711743
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

30:                                               ; preds = %27
  %31 = shl i64 %22, 5
  %32 = call noalias nonnull i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__cxx11::basic_string"*
  br label %34

34:                                               ; preds = %15, %30
  %35 = phi %"class.std::__cxx11::basic_string"* [ %33, %30 ], [ null, %15 ]
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25, i32 2
  %38 = bitcast %"class.std::__cxx11::basic_string"* %36 to %union.anon**
  store %union.anon* %37, %union.anon** %38, align 8, !tbaa !3
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8, !tbaa !15
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  %42 = load i64, i64* %41, align 8, !tbaa !8
  %43 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  store i64 %42, i64* %4, align 8, !tbaa !16
  %44 = icmp ugt i64 %42, 15
  br i1 %44, label %45, label %51

45:                                               ; preds = %34
  %46 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %36, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %47 unwind label %125

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %36, i64 0, i32 0, i32 0
  store i8* %46, i8** %48, align 8, !tbaa !15
  %49 = load i64, i64* %4, align 8, !tbaa !16
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25, i32 2, i32 0
  store i64 %49, i64* %50, align 8, !tbaa !11
  br label %51

51:                                               ; preds = %47, %34
  %52 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %36, i64 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8, !tbaa !15
  switch i64 %42, label %56 [
    i64 1, label %54
    i64 0, label %57
  ]

54:                                               ; preds = %51
  %55 = load i8, i8* %40, align 1, !tbaa !11
  store i8 %55, i8* %53, align 1, !tbaa !11
  br label %57

56:                                               ; preds = %51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %40, i64 %42, i1 false) #11
  br label %57

57:                                               ; preds = %51, %54, %56
  %58 = load i64, i64* %4, align 8, !tbaa !16
  %59 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25, i32 1
  store i64 %58, i64* %59, align 8, !tbaa !8
  %60 = load i8*, i8** %52, align 8, !tbaa !15
  %61 = getelementptr inbounds i8, i8* %60, i64 %58
  store i8 0, i8* %61, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  %62 = icmp eq %"class.std::__cxx11::basic_string"* %8, %1
  br i1 %62, label %88, label %63

63:                                               ; preds = %57, %80
  %64 = phi %"class.std::__cxx11::basic_string"* [ %86, %80 ], [ %35, %57 ]
  %65 = phi %"class.std::__cxx11::basic_string"* [ %85, %80 ], [ %8, %57 ]
  %66 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 2
  %67 = bitcast %"class.std::__cxx11::basic_string"* %64 to %union.anon**
  store %union.anon* %66, %union.anon** %67, align 8, !tbaa !3
  %68 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8, !tbaa !15
  %70 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 2
  %71 = bitcast %union.anon* %70 to i8*
  %72 = icmp eq i8* %69, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %63
  %74 = bitcast %union.anon* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %74, i8* noundef nonnull align 8 dereferenceable(16) %71, i64 16, i1 false) #11
  br label %80

75:                                               ; preds = %63
  %76 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 0, i32 0
  store i8* %69, i8** %76, align 8, !tbaa !15
  %77 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 2, i32 0
  %78 = load i64, i64* %77, align 8, !tbaa !11
  %79 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 2, i32 0
  store i64 %78, i64* %79, align 8, !tbaa !11
  br label %80

80:                                               ; preds = %75, %73
  %81 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 1
  %82 = load i64, i64* %81, align 8, !tbaa !8
  %83 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 1
  store i64 %82, i64* %83, align 8, !tbaa !8
  %84 = bitcast %"class.std::__cxx11::basic_string"* %65 to %union.anon**
  store %union.anon* %70, %union.anon** %84, align 8, !tbaa !15
  store i64 0, i64* %81, align 8, !tbaa !8
  store i8 0, i8* %71, align 8, !tbaa !11
  %85 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 1
  %86 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 1
  %87 = icmp eq %"class.std::__cxx11::basic_string"* %85, %1
  br i1 %87, label %88, label %63, !llvm.loop !29

88:                                               ; preds = %80, %57
  %89 = phi %"class.std::__cxx11::basic_string"* [ %35, %57 ], [ %86, %80 ]
  %90 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %89, i64 1
  %91 = icmp eq %"class.std::__cxx11::basic_string"* %6, %1
  br i1 %91, label %117, label %92

92:                                               ; preds = %88, %109
  %93 = phi %"class.std::__cxx11::basic_string"* [ %115, %109 ], [ %90, %88 ]
  %94 = phi %"class.std::__cxx11::basic_string"* [ %114, %109 ], [ %1, %88 ]
  %95 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 2
  %96 = bitcast %"class.std::__cxx11::basic_string"* %93 to %union.anon**
  store %union.anon* %95, %union.anon** %96, align 8, !tbaa !3
  %97 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8, !tbaa !15
  %99 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 2
  %100 = bitcast %union.anon* %99 to i8*
  %101 = icmp eq i8* %98, %100
  br i1 %101, label %102, label %104

102:                                              ; preds = %92
  %103 = bitcast %union.anon* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %103, i8* noundef nonnull align 8 dereferenceable(16) %100, i64 16, i1 false) #11
  br label %109

104:                                              ; preds = %92
  %105 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 0, i32 0
  store i8* %98, i8** %105, align 8, !tbaa !15
  %106 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 2, i32 0
  %107 = load i64, i64* %106, align 8, !tbaa !11
  %108 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 2, i32 0
  store i64 %107, i64* %108, align 8, !tbaa !11
  br label %109

109:                                              ; preds = %104, %102
  %110 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 1
  %111 = load i64, i64* %110, align 8, !tbaa !8
  %112 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 1
  store i64 %111, i64* %112, align 8, !tbaa !8
  %113 = bitcast %"class.std::__cxx11::basic_string"* %94 to %union.anon**
  store %union.anon* %99, %union.anon** %113, align 8, !tbaa !15
  store i64 0, i64* %110, align 8, !tbaa !8
  store i8 0, i8* %100, align 8, !tbaa !11
  %114 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 1
  %115 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 1
  %116 = icmp eq %"class.std::__cxx11::basic_string"* %114, %6
  br i1 %116, label %117, label %92, !llvm.loop !29

117:                                              ; preds = %109, %88
  %118 = phi %"class.std::__cxx11::basic_string"* [ %90, %88 ], [ %115, %109 ]
  %119 = icmp eq %"class.std::__cxx11::basic_string"* %8, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %117
  %121 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  call void @_ZdlPv(i8* nonnull %121) #11
  br label %122

122:                                              ; preds = %117, %120
  %123 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* %35, %"class.std::__cxx11::basic_string"** %7, align 8, !tbaa !27
  store %"class.std::__cxx11::basic_string"* %118, %"class.std::__cxx11::basic_string"** %5, align 8, !tbaa !17
  %124 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %22
  store %"class.std::__cxx11::basic_string"* %124, %"class.std::__cxx11::basic_string"** %123, align 8, !tbaa !19
  ret void

125:                                              ; preds = %45
  %126 = landingpad { i8*, i32 }
          catch i8* null
  %127 = extractvalue { i8*, i32 } %126, 0
  %128 = call i8* @__cxa_begin_catch(i8* %127) #11
  %129 = icmp eq %"class.std::__cxx11::basic_string"* %35, null
  br i1 %129, label %130, label %139

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %36, i64 0, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8, !tbaa !15
  %133 = bitcast %union.anon* %37 to i8*
  %134 = icmp eq i8* %132, %133
  br i1 %134, label %138, label %135

135:                                              ; preds = %130
  call void @_ZdlPv(i8* %132) #11
  br label %138

136:                                              ; preds = %141
  %137 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %142 unwind label %143

138:                                              ; preds = %135, %130
  br i1 %129, label %141, label %139

139:                                              ; preds = %125, %138
  %140 = bitcast %"class.std::__cxx11::basic_string"* %35 to i8*
  call void @_ZdlPv(i8* nonnull %140) #11
  br label %141

141:                                              ; preds = %139, %138
  invoke void @__cxa_rethrow() #13
          to label %146 unwind label %136

142:                                              ; preds = %136
  resume { i8*, i32 } %137

143:                                              ; preds = %136
  %144 = landingpad { i8*, i32 }
          catch i8* null
  %145 = extractvalue { i8*, i32 } %144, 0
  call void @__clang_call_terminate(i8* %145) #12
  unreachable

146:                                              ; preds = %141
  unreachable
}

declare dso_local void @__cxa_rethrow() local_unnamed_addr

declare dso_local void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #8

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i8*, i64) local_unnamed_addr #6

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #10

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #3 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { noinline noreturn nounwind }
attributes #5 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #8 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { noreturn }
attributes #14 = { allocsize(0) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!14 = distinct !{!14, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!15 = !{!9, !5, i64 0}
!16 = !{!10, !10, i64 0}
!17 = !{!18, !5, i64 8}
!18 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!19 = !{!18, !5, i64 16}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!22 = distinct !{!22, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!23 = distinct !{!23, !24, !25}
!24 = !{!"llvm.loop.mustprogress"}
!25 = !{!"llvm.loop.unroll.disable"}
!26 = distinct !{!26, !24, !25}
!27 = !{!18, !5, i64 0}
!28 = distinct !{!28, !24, !25}
!29 = distinct !{!29, !24, !25}
