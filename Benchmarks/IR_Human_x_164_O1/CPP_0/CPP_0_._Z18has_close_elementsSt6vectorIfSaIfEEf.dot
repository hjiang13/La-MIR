digraph "CFG for '_Z18has_close_elementsSt6vectorIfSaIfEEf' function" {
	label="CFG for '_Z18has_close_elementsSt6vectorIfSaIfEEf' function";

	Node0x5630271db320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = load float*, float** %3, align 8, !tbaa !3\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %6 = load float*, float** %5, align 8, !tbaa !8\l  %7 = ptrtoint float* %4 to i64\l  %8 = ptrtoint float* %6 to i64\l  %9 = sub i64 %7, %8\l  %10 = ashr exact i64 %9, 2\l  %11 = icmp ne i64 %9, 0\l  br i1 %11, label %12, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5630271db320:s0 -> Node0x5630271dc6a0;
	Node0x5630271db320:s1 -> Node0x5630271dcce0;
	Node0x5630271dc6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%12:\l12:                                               \l  %13 = call i64 @llvm.umax.i64(i64 %10, i64 1)\l  br label %18\l}"];
	Node0x5630271dc6a0 -> Node0x5630271dd0c0;
	Node0x5630271dd180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%14:\l14:                                               \l  %15 = icmp ugt i64 %10, %22\l  %16 = add i64 %20, 1\l  %17 = icmp eq i64 %22, %13\l  br i1 %17, label %37, label %18, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x5630271dd180:s0 -> Node0x5630271dcce0;
	Node0x5630271dd180:s1 -> Node0x5630271dd0c0;
	Node0x5630271dd0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%18:\l18:                                               \l  %19 = phi i64 [ 0, %12 ], [ %22, %14 ]\l  %20 = phi i64 [ 1, %12 ], [ %16, %14 ]\l  %21 = phi i1 [ %11, %12 ], [ %15, %14 ]\l  %22 = add nuw i64 %19, 1\l  %23 = icmp ugt i64 %10, %22\l  br i1 %23, label %24, label %14\l|{<s0>T|<s1>F}}"];
	Node0x5630271dd0c0:s0 -> Node0x5630271dd8b0;
	Node0x5630271dd0c0:s1 -> Node0x5630271dd180;
	Node0x5630271dd8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%24:\l24:                                               \l  %25 = getelementptr inbounds float, float* %6, i64 %19\l  %26 = load float, float* %25, align 4, !tbaa !12\l  br label %29\l}"];
	Node0x5630271dd8b0 -> Node0x5630271ddb40;
	Node0x5630271ddc00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%27:\l27:                                               \l  %28 = icmp ugt i64 %10, %36\l  br i1 %28, label %29, label %14, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5630271ddc00:s0 -> Node0x5630271ddb40;
	Node0x5630271ddc00:s1 -> Node0x5630271dd180;
	Node0x5630271ddb40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i64 [ %20, %24 ], [ %36, %27 ]\l  %31 = getelementptr inbounds float, float* %6, i64 %30\l  %32 = load float, float* %31, align 4, !tbaa !12\l  %33 = fsub float %26, %32\l  %34 = call float @llvm.fabs.f32(float %33) #2\l  %35 = fcmp olt float %34, %1\l  %36 = add i64 %30, 1\l  br i1 %35, label %37, label %27\l|{<s0>T|<s1>F}}"];
	Node0x5630271ddb40:s0 -> Node0x5630271dcce0;
	Node0x5630271ddb40:s1 -> Node0x5630271ddc00;
	Node0x5630271dcce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%37:\l37:                                               \l  %38 = phi i1 [ %11, %2 ], [ %21, %29 ], [ %15, %14 ]\l  ret i1 %38\l}"];
}
