; ModuleID = '../../Human_xBenchmarks_164/CPP_69/CPP_69.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_69/CPP_69.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<std::vector<int>, std::allocator<std::vector<int>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<int>, std::allocator<std::vector<int>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<int>, std::allocator<std::vector<int>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<int>, std::allocator<std::vector<int>>>::_Vector_impl_data" = type { %"class.std::vector"*, %"class.std::vector"*, %"class.std::vector"* }

$_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ = comdat any

@.str = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1

; Function Attrs: uwtable
define dso_local i32 @_Z6searchSt6vectorIiSaIiEE(%"class.std::vector"* nocapture readonly %0) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0", align 8
  %3 = alloca %"class.std::vector", align 8
  %4 = bitcast %"class.std::vector.0"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::vector"* %3 to i8*
  %11 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::vector"* %3 to i8**
  %13 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %14 = bitcast i32** %13 to i8**
  %15 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast i32** %15 to i8**
  %17 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = bitcast %"class.std::vector.0"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %18, i8 0, i64 24, i1 false)
  %19 = load i32*, i32** %5, align 8, !tbaa !3
  %20 = load i32*, i32** %6, align 8, !tbaa !8
  %21 = icmp eq i32* %19, %20
  br i1 %21, label %36, label %22

22:                                               ; preds = %1, %136
  %23 = phi i64 [ %138, %136 ], [ 0, %1 ]
  %24 = phi i32* [ %140, %136 ], [ %20, %1 ]
  %25 = phi i32 [ %137, %136 ], [ -1, %1 ]
  %26 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8, !tbaa !9
  %27 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8, !tbaa !11
  %28 = ptrtoint %"class.std::vector"* %26 to i64
  %29 = ptrtoint %"class.std::vector"* %27 to i64
  %30 = sub i64 %28, %29
  %31 = getelementptr inbounds i32, i32* %24, i64 %23
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %59, label %33

33:                                               ; preds = %22
  %34 = sdiv exact i64 %30, 24
  %35 = call i64 @llvm.umax.i64(i64 %34, i64 1)
  br label %64

36:                                               ; preds = %136, %1
  %37 = phi i32 [ -1, %1 ], [ %137, %136 ]
  %38 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.std::vector"*, %"class.std::vector"** %38, align 8, !tbaa !11
  %40 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %41 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8, !tbaa !9
  %42 = icmp eq %"class.std::vector"* %39, %41
  br i1 %42, label %53, label %43

43:                                               ; preds = %36, %50
  %44 = phi %"class.std::vector"* [ %51, %50 ], [ %39, %36 ]
  %45 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8, !tbaa !8
  %47 = icmp eq i32* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %43
  %49 = bitcast i32* %46 to i8*
  call void @_ZdlPv(i8* nonnull %49) #8
  br label %50

50:                                               ; preds = %48, %43
  %51 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %44, i64 1
  %52 = icmp eq %"class.std::vector"* %51, %41
  br i1 %52, label %53, label %43, !llvm.loop !12

53:                                               ; preds = %50, %36
  %54 = load %"class.std::vector"*, %"class.std::vector"** %38, align 8, !tbaa !11
  %55 = icmp eq %"class.std::vector"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = bitcast %"class.std::vector"* %54 to i8*
  call void @_ZdlPv(i8* nonnull %57) #8
  br label %58

58:                                               ; preds = %53, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  ret i32 %37

59:                                               ; preds = %82, %22
  %60 = phi i8 [ 0, %22 ], [ %83, %82 ]
  %61 = phi i32 [ %25, %22 ], [ %84, %82 ]
  %62 = and i8 %60, 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %87, label %136

64:                                               ; preds = %33, %82
  %65 = phi i64 [ 0, %33 ], [ %85, %82 ]
  %66 = phi i32 [ %25, %33 ], [ %84, %82 ]
  %67 = phi i8 [ 0, %33 ], [ %83, %82 ]
  %68 = load i32, i32* %31, align 4, !tbaa !15
  %69 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %27, i64 %65, i32 0, i32 0, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8, !tbaa !8
  %71 = load i32, i32* %70, align 4, !tbaa !15
  %72 = icmp eq i32 %68, %71
  br i1 %72, label %73, label %82

73:                                               ; preds = %64
  %74 = getelementptr inbounds i32, i32* %70, i64 1
  %75 = load i32, i32* %74, align 4, !tbaa !15
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %74, align 4, !tbaa !15
  %77 = load i32, i32* %70, align 4, !tbaa !15
  %78 = icmp sge i32 %76, %77
  %79 = icmp sgt i32 %77, %66
  %80 = select i1 %78, i1 %79, i1 false
  %81 = select i1 %80, i32 %77, i32 %66
  br label %82

82:                                               ; preds = %73, %64
  %83 = phi i8 [ %67, %64 ], [ 1, %73 ]
  %84 = phi i32 [ %66, %64 ], [ %81, %73 ]
  %85 = add nuw nsw i64 %65, 1
  %86 = icmp eq i64 %85, %35
  br i1 %86, label %59, label %64, !llvm.loop !17

87:                                               ; preds = %59
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %88 = getelementptr inbounds i32, i32* %24, i64 %23
  %89 = load i32, i32* %88, align 4, !tbaa !15
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false) #8
  %90 = invoke noalias nonnull i8* @_Znwm(i64 8) #9
          to label %96 unwind label %91

91:                                               ; preds = %87
  %92 = landingpad { i8*, i32 }
          cleanup
  %93 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i32*, i32** %93, align 8, !tbaa !8
  %95 = icmp eq i32* %94, null
  br i1 %95, label %133, label %129

96:                                               ; preds = %87
  %97 = bitcast i8* %90 to i32*
  store i8* %90, i8** %12, align 8, !tbaa !8
  %98 = getelementptr inbounds i8, i8* %90, i64 8
  store i8* %98, i8** %14, align 8, !tbaa !18
  store i32 %89, i32* %97, align 4
  %99 = getelementptr inbounds i8, i8* %90, i64 4
  %100 = bitcast i8* %99 to i32*
  store i32 1, i32* %100, align 4
  store i8* %98, i8** %16, align 8, !tbaa !3
  %101 = load %"class.std::vector"*, %"class.std::vector"** %9, align 8, !tbaa !9
  %102 = load %"class.std::vector"*, %"class.std::vector"** %17, align 8, !tbaa !19
  %103 = icmp eq %"class.std::vector"* %101, %102
  br i1 %103, label %111, label %104

104:                                              ; preds = %96
  %105 = bitcast %"class.std::vector"* %101 to i8**
  store i8* %90, i8** %105, align 8, !tbaa !8
  %106 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %101, i64 0, i32 0, i32 0, i32 0, i32 1
  %107 = bitcast i32** %106 to i8**
  store i8* %98, i8** %107, align 8, !tbaa !3
  %108 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %101, i64 0, i32 0, i32 0, i32 0, i32 2
  %109 = bitcast i32** %108 to i8**
  store i8* %98, i8** %109, align 8, !tbaa !18
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false) #8
  %110 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %101, i64 1
  store %"class.std::vector"* %110, %"class.std::vector"** %9, align 8, !tbaa !9
  br label %112

111:                                              ; preds = %96
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %2, %"class.std::vector"* %101, %"class.std::vector"* nonnull align 8 dereferenceable(24) %3)
          to label %112 unwind label %125

112:                                              ; preds = %104, %111
  %113 = load i32*, i32** %11, align 8, !tbaa !8
  %114 = icmp eq i32* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %112
  %116 = bitcast i32* %113 to i8*
  call void @_ZdlPv(i8* nonnull %116) #8
  br label %117

117:                                              ; preds = %112, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  %118 = icmp eq i32 %61, -1
  br i1 %118, label %119, label %136

119:                                              ; preds = %117
  %120 = load i32*, i32** %6, align 8, !tbaa !8
  %121 = getelementptr inbounds i32, i32* %120, i64 %23
  %122 = load i32, i32* %121, align 4, !tbaa !15
  %123 = icmp eq i32 %122, 1
  %124 = select i1 %123, i32 1, i32 -1
  br label %136

125:                                              ; preds = %111
  %126 = landingpad { i8*, i32 }
          cleanup
  %127 = load i32*, i32** %11, align 8, !tbaa !8
  %128 = icmp eq i32* %127, null
  br i1 %128, label %133, label %129

129:                                              ; preds = %125, %91
  %130 = phi i32* [ %94, %91 ], [ %127, %125 ]
  %131 = phi { i8*, i32 } [ %92, %91 ], [ %126, %125 ]
  %132 = bitcast i32* %130 to i8*
  call void @_ZdlPv(i8* nonnull %132) #8
  br label %133

133:                                              ; preds = %129, %125, %91
  %134 = phi { i8*, i32 } [ %92, %91 ], [ %126, %125 ], [ %131, %129 ]
  %135 = bitcast %"class.std::vector"* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #8
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %2) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  resume { i8*, i32 } %134

136:                                              ; preds = %119, %117, %59
  %137 = phi i32 [ %61, %59 ], [ %61, %117 ], [ %124, %119 ]
  %138 = add nuw i64 %23, 1
  %139 = load i32*, i32** %5, align 8, !tbaa !3
  %140 = load i32*, i32** %6, align 8, !tbaa !8
  %141 = ptrtoint i32* %139 to i64
  %142 = ptrtoint i32* %140 to i64
  %143 = sub i64 %141, %142
  %144 = ashr exact i64 %143, 2
  %145 = icmp ugt i64 %144, %138
  br i1 %145, label %22, label %36, !llvm.loop !20
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8, !tbaa !11
  %4 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8, !tbaa !9
  %6 = icmp eq %"class.std::vector"* %3, %5
  br i1 %6, label %17, label %7

7:                                                ; preds = %1, %14
  %8 = phi %"class.std::vector"* [ %15, %14 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8, !tbaa !8
  %11 = icmp eq i32* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %7
  %13 = bitcast i32* %10 to i8*
  call void @_ZdlPv(i8* nonnull %13) #8
  br label %14

14:                                               ; preds = %12, %7
  %15 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %8, i64 1
  %16 = icmp eq %"class.std::vector"* %15, %5
  br i1 %16, label %17, label %7, !llvm.loop !12

17:                                               ; preds = %14, %1
  %18 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::vector"*, %"class.std::vector"** %18, align 8, !tbaa !11
  %20 = icmp eq %"class.std::vector"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.std::vector"* %19 to i8*
  call void @_ZdlPv(i8* nonnull %22) #8
  br label %23

23:                                               ; preds = %17, %21
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %0, %"class.std::vector"* %1, %"class.std::vector"* nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8, !tbaa !9
  %6 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8, !tbaa !11
  %8 = ptrtoint %"class.std::vector"* %5 to i64
  %9 = ptrtoint %"class.std::vector"* %7 to i64
  %10 = sub i64 %8, %9
  %11 = sdiv exact i64 %10, 24
  %12 = icmp eq i64 %10, 9223372036854775800
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0)) #10
  unreachable

14:                                               ; preds = %3
  %15 = icmp eq i64 %10, 0
  %16 = select i1 %15, i64 1, i64 %11
  %17 = add nsw i64 %16, %11
  %18 = icmp ult i64 %17, %11
  %19 = icmp ugt i64 %17, 384307168202282325
  %20 = or i1 %18, %19
  %21 = select i1 %20, i64 384307168202282325, i64 %17
  %22 = ptrtoint %"class.std::vector"* %1 to i64
  %23 = sub i64 %22, %9
  %24 = sdiv exact i64 %23, 24
  %25 = icmp ugt i64 %21, 384307168202282325
  br i1 %25, label %26, label %27

26:                                               ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #10
  unreachable

27:                                               ; preds = %14
  %28 = mul i64 %21, 24
  %29 = call noalias nonnull i8* @_Znwm(i64 %28) #9
  %30 = bitcast i8* %29 to %"class.std::vector"*
  %31 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %30, i64 %24, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8, !tbaa !8
  store i32* %33, i32** %31, align 8, !tbaa !8
  %34 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %30, i64 %24, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i32*, i32** %35, align 8, !tbaa !3
  store i32* %36, i32** %34, align 8, !tbaa !3
  %37 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %30, i64 %24, i32 0, i32 0, i32 0, i32 2
  %38 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %39 = load i32*, i32** %38, align 8, !tbaa !18
  store i32* %39, i32** %37, align 8, !tbaa !18
  %40 = bitcast %"class.std::vector"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %40, i8 0, i64 24, i1 false) #8
  %41 = icmp eq %"class.std::vector"* %7, %1
  br i1 %41, label %63, label %42

42:                                               ; preds = %27, %59
  %43 = phi %"class.std::vector"* [ %61, %59 ], [ %30, %27 ]
  %44 = phi %"class.std::vector"* [ %60, %59 ], [ %7, %27 ]
  %45 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8, !tbaa !8
  store i32* %47, i32** %45, align 8, !tbaa !8
  %48 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %43, i64 0, i32 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %44, i64 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i32*, i32** %49, align 8, !tbaa !3
  store i32* %50, i32** %48, align 8, !tbaa !3
  %51 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %43, i64 0, i32 0, i32 0, i32 0, i32 2
  %52 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %44, i64 0, i32 0, i32 0, i32 0, i32 2
  %53 = load i32*, i32** %52, align 8, !tbaa !18
  store i32* %53, i32** %51, align 8, !tbaa !18
  %54 = bitcast %"class.std::vector"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %54, i8 0, i64 24, i1 false) #8
  %55 = load i32*, i32** %46, align 8, !tbaa !8
  %56 = icmp eq i32* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %42
  %58 = bitcast i32* %55 to i8*
  call void @_ZdlPv(i8* nonnull %58) #8
  br label %59

59:                                               ; preds = %57, %42
  %60 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %44, i64 1
  %61 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %43, i64 1
  %62 = icmp eq %"class.std::vector"* %60, %1
  br i1 %62, label %63, label %42, !llvm.loop !21

63:                                               ; preds = %59, %27
  %64 = phi %"class.std::vector"* [ %30, %27 ], [ %61, %59 ]
  %65 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %64, i64 1
  %66 = icmp eq %"class.std::vector"* %5, %1
  br i1 %66, label %88, label %67

67:                                               ; preds = %63, %84
  %68 = phi %"class.std::vector"* [ %86, %84 ], [ %65, %63 ]
  %69 = phi %"class.std::vector"* [ %85, %84 ], [ %1, %63 ]
  %70 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %69, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8, !tbaa !8
  store i32* %72, i32** %70, align 8, !tbaa !8
  %73 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %68, i64 0, i32 0, i32 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %69, i64 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i32*, i32** %74, align 8, !tbaa !3
  store i32* %75, i32** %73, align 8, !tbaa !3
  %76 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %68, i64 0, i32 0, i32 0, i32 0, i32 2
  %77 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %69, i64 0, i32 0, i32 0, i32 0, i32 2
  %78 = load i32*, i32** %77, align 8, !tbaa !18
  store i32* %78, i32** %76, align 8, !tbaa !18
  %79 = bitcast %"class.std::vector"* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %79, i8 0, i64 24, i1 false) #8
  %80 = load i32*, i32** %71, align 8, !tbaa !8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %67
  %83 = bitcast i32* %80 to i8*
  call void @_ZdlPv(i8* nonnull %83) #8
  br label %84

84:                                               ; preds = %82, %67
  %85 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %69, i64 1
  %86 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %68, i64 1
  %87 = icmp eq %"class.std::vector"* %85, %5
  br i1 %87, label %88, label %67, !llvm.loop !21

88:                                               ; preds = %84, %63
  %89 = phi %"class.std::vector"* [ %65, %63 ], [ %86, %84 ]
  %90 = icmp eq %"class.std::vector"* %7, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %88
  %92 = bitcast %"class.std::vector"* %7 to i8*
  call void @_ZdlPv(i8* nonnull %92) #8
  br label %93

93:                                               ; preds = %88, %91
  %94 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %95 = bitcast %"class.std::vector.0"* %0 to i8**
  store i8* %29, i8** %95, align 8, !tbaa !11
  store %"class.std::vector"* %89, %"class.std::vector"** %4, align 8, !tbaa !9
  %96 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %30, i64 %21
  store %"class.std::vector"* %96, %"class.std::vector"** %94, align 8, !tbaa !19
  ret void
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #5

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #7

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #3 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #8 = { nounwind }
attributes #9 = { allocsize(0) }
attributes #10 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 8}
!4 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!4, !5, i64 0}
!9 = !{!10, !5, i64 8}
!10 = !{!"_ZTSNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!11 = !{!10, !5, i64 0}
!12 = distinct !{!12, !13, !14}
!13 = !{!"llvm.loop.mustprogress"}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = !{!16, !16, i64 0}
!16 = !{!"int", !6, i64 0}
!17 = distinct !{!17, !13, !14}
!18 = !{!4, !5, i64 16}
!19 = !{!10, !5, i64 16}
!20 = distinct !{!20, !13, !14}
!21 = distinct !{!21, !13, !14}
