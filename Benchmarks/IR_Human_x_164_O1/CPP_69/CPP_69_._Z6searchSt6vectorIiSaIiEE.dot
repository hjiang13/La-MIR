digraph "CFG for '_Z6searchSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z6searchSt6vectorIiSaIiEE' function";

	Node0x55a64d255770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%1:\l  %2 = alloca %\"class.std::vector.0\", align 8\l  %3 = alloca %\"class.std::vector\", align 8\l  %4 = bitcast %\"class.std::vector.0\"* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %6 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %7 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %2, i64 0, i32 0, i32 0, i32 0, i32 1\l  %8 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %2, i64 0, i32 0, i32 0, i32 0, i32 0\l  %9 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %2, i64 0, i32 0, i32 0, i32 0, i32 1\l  %10 = bitcast %\"class.std::vector\"* %3 to i8*\l  %11 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %3,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %12 = bitcast %\"class.std::vector\"* %3 to i8**\l  %13 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %3,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %14 = bitcast i32** %13 to i8**\l  %15 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %3,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %16 = bitcast i32** %15 to i8**\l  %17 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %2, i64 0, i32 0, i32 0, i32 0, i32 2\l  %18 = bitcast %\"class.std::vector.0\"* %2 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %18, i8 0, i64 24, i1 false)\l  %19 = load i32*, i32** %5, align 8, !tbaa !3\l  %20 = load i32*, i32** %6, align 8, !tbaa !8\l  %21 = icmp eq i32* %19, %20\l  br i1 %21, label %36, label %22\l|{<s0>T|<s1>F}}"];
	Node0x55a64d255770:s0 -> Node0x55a64d257f80;
	Node0x55a64d255770:s1 -> Node0x55a64d258010;
	Node0x55a64d258010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%22:\l22:                                               \l  %23 = phi i64 [ %138, %136 ], [ 0, %1 ]\l  %24 = phi i32* [ %140, %136 ], [ %20, %1 ]\l  %25 = phi i32 [ %137, %136 ], [ -1, %1 ]\l  %26 = load %\"class.std::vector\"*, %\"class.std::vector\"** %7, align 8, !tbaa\l... !9\l  %27 = load %\"class.std::vector\"*, %\"class.std::vector\"** %8, align 8, !tbaa\l... !11\l  %28 = ptrtoint %\"class.std::vector\"* %26 to i64\l  %29 = ptrtoint %\"class.std::vector\"* %27 to i64\l  %30 = sub i64 %28, %29\l  %31 = getelementptr inbounds i32, i32* %24, i64 %23\l  %32 = icmp eq i64 %30, 0\l  br i1 %32, label %59, label %33\l|{<s0>T|<s1>F}}"];
	Node0x55a64d258010:s0 -> Node0x55a64d258cd0;
	Node0x55a64d258010:s1 -> Node0x55a64d258d60;
	Node0x55a64d258d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%33:\l33:                                               \l  %34 = sdiv exact i64 %30, 24\l  %35 = call i64 @llvm.umax.i64(i64 %34, i64 1)\l  br label %64\l}"];
	Node0x55a64d258d60 -> Node0x55a64d2591d0;
	Node0x55a64d257f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%36:\l36:                                               \l  %37 = phi i32 [ -1, %1 ], [ %137, %136 ]\l  %38 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %2, i64 0, i32 0, i32 0, i32 0, i32 0\l  %39 = load %\"class.std::vector\"*, %\"class.std::vector\"** %38, align 8, !tbaa\l... !11\l  %40 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %2, i64 0, i32 0, i32 0, i32 0, i32 1\l  %41 = load %\"class.std::vector\"*, %\"class.std::vector\"** %40, align 8, !tbaa\l... !9\l  %42 = icmp eq %\"class.std::vector\"* %39, %41\l  br i1 %42, label %53, label %43\l|{<s0>T|<s1>F}}"];
	Node0x55a64d257f80:s0 -> Node0x55a64d25a310;
	Node0x55a64d257f80:s1 -> Node0x55a64d25a360;
	Node0x55a64d25a360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%43:\l43:                                               \l  %44 = phi %\"class.std::vector\"* [ %51, %50 ], [ %39, %36 ]\l  %45 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %44, i64 0, i32 0, i32 0, i32 0, i32 0\l  %46 = load i32*, i32** %45, align 8, !tbaa !8\l  %47 = icmp eq i32* %46, null\l  br i1 %47, label %50, label %48\l|{<s0>T|<s1>F}}"];
	Node0x55a64d25a360:s0 -> Node0x55a64d25a4d0;
	Node0x55a64d25a360:s1 -> Node0x55a64d25ae40;
	Node0x55a64d25ae40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%48:\l48:                                               \l  %49 = bitcast i32* %46 to i8*\l  call void @_ZdlPv(i8* nonnull %49) #8\l  br label %50\l}"];
	Node0x55a64d25ae40 -> Node0x55a64d25a4d0;
	Node0x55a64d25a4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%50:\l50:                                               \l  %51 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %44, i64 1\l  %52 = icmp eq %\"class.std::vector\"* %51, %41\l  br i1 %52, label %53, label %43, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x55a64d25a4d0:s0 -> Node0x55a64d25a310;
	Node0x55a64d25a4d0:s1 -> Node0x55a64d25a360;
	Node0x55a64d25a310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%53:\l53:                                               \l  %54 = load %\"class.std::vector\"*, %\"class.std::vector\"** %38, align 8, !tbaa\l... !11\l  %55 = icmp eq %\"class.std::vector\"* %54, null\l  br i1 %55, label %58, label %56\l|{<s0>T|<s1>F}}"];
	Node0x55a64d25a310:s0 -> Node0x55a64d25b610;
	Node0x55a64d25a310:s1 -> Node0x55a64d25b660;
	Node0x55a64d25b660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%56:\l56:                                               \l  %57 = bitcast %\"class.std::vector\"* %54 to i8*\l  call void @_ZdlPv(i8* nonnull %57) #8\l  br label %58\l}"];
	Node0x55a64d25b660 -> Node0x55a64d25b610;
	Node0x55a64d25b610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%58:\l58:                                               \l  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8\l  ret i32 %37\l}"];
	Node0x55a64d258cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%59:\l59:                                               \l  %60 = phi i8 [ 0, %22 ], [ %83, %82 ]\l  %61 = phi i32 [ %25, %22 ], [ %84, %82 ]\l  %62 = and i8 %60, 1\l  %63 = icmp eq i8 %62, 0\l  br i1 %63, label %87, label %136\l|{<s0>T|<s1>F}}"];
	Node0x55a64d258cd0:s0 -> Node0x55a64d25bf80;
	Node0x55a64d258cd0:s1 -> Node0x55a64d258150;
	Node0x55a64d2591d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = phi i64 [ 0, %33 ], [ %85, %82 ]\l  %66 = phi i32 [ %25, %33 ], [ %84, %82 ]\l  %67 = phi i8 [ 0, %33 ], [ %83, %82 ]\l  %68 = load i32, i32* %31, align 4, !tbaa !15\l  %69 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %27, i64 %65, i32 0, i32 0, i32 0, i32 0\l  %70 = load i32*, i32** %69, align 8, !tbaa !8\l  %71 = load i32, i32* %70, align 4, !tbaa !15\l  %72 = icmp eq i32 %68, %71\l  br i1 %72, label %73, label %82\l|{<s0>T|<s1>F}}"];
	Node0x55a64d2591d0:s0 -> Node0x55a64d25d120;
	Node0x55a64d2591d0:s1 -> Node0x55a64d25bc50;
	Node0x55a64d25d120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%73:\l73:                                               \l  %74 = getelementptr inbounds i32, i32* %70, i64 1\l  %75 = load i32, i32* %74, align 4, !tbaa !15\l  %76 = add nsw i32 %75, 1\l  store i32 %76, i32* %74, align 4, !tbaa !15\l  %77 = load i32, i32* %70, align 4, !tbaa !15\l  %78 = icmp sge i32 %76, %77\l  %79 = icmp sgt i32 %77, %66\l  %80 = select i1 %78, i1 %79, i1 false\l  %81 = select i1 %80, i32 %77, i32 %66\l  br label %82\l}"];
	Node0x55a64d25d120 -> Node0x55a64d25bc50;
	Node0x55a64d25bc50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  %83 = phi i8 [ %67, %64 ], [ 1, %73 ]\l  %84 = phi i32 [ %66, %64 ], [ %81, %73 ]\l  %85 = add nuw nsw i64 %65, 1\l  %86 = icmp eq i64 %85, %35\l  br i1 %86, label %59, label %64, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x55a64d25bc50:s0 -> Node0x55a64d258cd0;
	Node0x55a64d25bc50:s1 -> Node0x55a64d2591d0;
	Node0x55a64d25bf80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%87:\l87:                                               \l  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8\l  %88 = getelementptr inbounds i32, i32* %24, i64 %23\l  %89 = load i32, i32* %88, align 4, !tbaa !15\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %10, i8 0, i64 24, i1 false) #8\l  %90 = invoke noalias nonnull i8* @_Znwm(i64 8) #9\l          to label %96 unwind label %91\l}"];
	Node0x55a64d25bf80 -> Node0x55a64d25dfb0;
	Node0x55a64d25bf80 -> Node0x55a64d25e000;
	Node0x55a64d25e000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%91:\l91:                                               \l  %92 = landingpad \{ i8*, i32 \}\l          cleanup\l  %93 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %3,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %94 = load i32*, i32** %93, align 8, !tbaa !8\l  %95 = icmp eq i32* %94, null\l  br i1 %95, label %133, label %129\l|{<s0>T|<s1>F}}"];
	Node0x55a64d25e000:s0 -> Node0x55a64d25e450;
	Node0x55a64d25e000:s1 -> Node0x55a64d25e4a0;
	Node0x55a64d25dfb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%96:\l96:                                               \l  %97 = bitcast i8* %90 to i32*\l  store i8* %90, i8** %12, align 8, !tbaa !8\l  %98 = getelementptr inbounds i8, i8* %90, i64 8\l  store i8* %98, i8** %14, align 8, !tbaa !18\l  store i32 %89, i32* %97, align 4\l  %99 = getelementptr inbounds i8, i8* %90, i64 4\l  %100 = bitcast i8* %99 to i32*\l  store i32 1, i32* %100, align 4\l  store i8* %98, i8** %16, align 8, !tbaa !3\l  %101 = load %\"class.std::vector\"*, %\"class.std::vector\"** %9, align 8, !tbaa\l... !9\l  %102 = load %\"class.std::vector\"*, %\"class.std::vector\"** %17, align 8,\l... !tbaa !19\l  %103 = icmp eq %\"class.std::vector\"* %101, %102\l  br i1 %103, label %111, label %104\l|{<s0>T|<s1>F}}"];
	Node0x55a64d25dfb0:s0 -> Node0x55a64d25f3d0;
	Node0x55a64d25dfb0:s1 -> Node0x55a64d25f460;
	Node0x55a64d25f460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%104:\l104:                                              \l  %105 = bitcast %\"class.std::vector\"* %101 to i8**\l  store i8* %90, i8** %105, align 8, !tbaa !8\l  %106 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %101, i64 0, i32 0, i32 0, i32 0, i32 1\l  %107 = bitcast i32** %106 to i8**\l  store i8* %98, i8** %107, align 8, !tbaa !3\l  %108 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %101, i64 0, i32 0, i32 0, i32 0, i32 2\l  %109 = bitcast i32** %108 to i8**\l  store i8* %98, i8** %109, align 8, !tbaa !18\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %10, i8 0, i64 24, i1 false) #8\l  %110 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %101, i64 1\l  store %\"class.std::vector\"* %110, %\"class.std::vector\"** %9, align 8, !tbaa\l... !9\l  br label %112\l}"];
	Node0x55a64d25f460 -> Node0x55a64d260430;
	Node0x55a64d25f3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%111:\l111:                                              \l  invoke void\l... @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__nor\l...mal_iteratorIPS1_S3_EEDpOT_(%\"class.std::vector.0\"* nonnull align 8\l... dereferenceable(24) %2, %\"class.std::vector\"* %101, %\"class.std::vector\"*\l... nonnull align 8 dereferenceable(24) %3)\l          to label %112 unwind label %125\l}"];
	Node0x55a64d25f3d0 -> Node0x55a64d260430;
	Node0x55a64d25f3d0 -> Node0x55a64d2605c0;
	Node0x55a64d260430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%112:\l112:                                              \l  %113 = load i32*, i32** %11, align 8, !tbaa !8\l  %114 = icmp eq i32* %113, null\l  br i1 %114, label %117, label %115\l|{<s0>T|<s1>F}}"];
	Node0x55a64d260430:s0 -> Node0x55a64d2609f0;
	Node0x55a64d260430:s1 -> Node0x55a64d260a40;
	Node0x55a64d260a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%115:\l115:                                              \l  %116 = bitcast i32* %113 to i8*\l  call void @_ZdlPv(i8* nonnull %116) #8\l  br label %117\l}"];
	Node0x55a64d260a40 -> Node0x55a64d2609f0;
	Node0x55a64d2609f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%117:\l117:                                              \l  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8\l  %118 = icmp eq i32 %61, -1\l  br i1 %118, label %119, label %136\l|{<s0>T|<s1>F}}"];
	Node0x55a64d2609f0:s0 -> Node0x55a64d260f60;
	Node0x55a64d2609f0:s1 -> Node0x55a64d258150;
	Node0x55a64d260f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%119:\l119:                                              \l  %120 = load i32*, i32** %6, align 8, !tbaa !8\l  %121 = getelementptr inbounds i32, i32* %120, i64 %23\l  %122 = load i32, i32* %121, align 4, !tbaa !15\l  %123 = icmp eq i32 %122, 1\l  %124 = select i1 %123, i32 1, i32 -1\l  br label %136\l}"];
	Node0x55a64d260f60 -> Node0x55a64d258150;
	Node0x55a64d2605c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%125:\l125:                                              \l  %126 = landingpad \{ i8*, i32 \}\l          cleanup\l  %127 = load i32*, i32** %11, align 8, !tbaa !8\l  %128 = icmp eq i32* %127, null\l  br i1 %128, label %133, label %129\l|{<s0>T|<s1>F}}"];
	Node0x55a64d2605c0:s0 -> Node0x55a64d25e450;
	Node0x55a64d2605c0:s1 -> Node0x55a64d25e4a0;
	Node0x55a64d25e4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%129:\l129:                                              \l  %130 = phi i32* [ %94, %91 ], [ %127, %125 ]\l  %131 = phi \{ i8*, i32 \} [ %92, %91 ], [ %126, %125 ]\l  %132 = bitcast i32* %130 to i8*\l  call void @_ZdlPv(i8* nonnull %132) #8\l  br label %133\l}"];
	Node0x55a64d25e4a0 -> Node0x55a64d25e450;
	Node0x55a64d25e450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%133:\l133:                                              \l  %134 = phi \{ i8*, i32 \} [ %92, %91 ], [ %126, %125 ], [ %131, %129 ]\l  %135 = bitcast %\"class.std::vector\"* %3 to i8*\l  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #8\l  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%\"class.std::vector.0\"*\l... nonnull align 8 dereferenceable(24) %2) #8\l  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8\l  resume \{ i8*, i32 \} %134\l}"];
	Node0x55a64d258150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%136:\l136:                                              \l  %137 = phi i32 [ %61, %59 ], [ %61, %117 ], [ %124, %119 ]\l  %138 = add nuw i64 %23, 1\l  %139 = load i32*, i32** %5, align 8, !tbaa !3\l  %140 = load i32*, i32** %6, align 8, !tbaa !8\l  %141 = ptrtoint i32* %139 to i64\l  %142 = ptrtoint i32* %140 to i64\l  %143 = sub i64 %141, %142\l  %144 = ashr exact i64 %143, 2\l  %145 = icmp ugt i64 %144, %138\l  br i1 %145, label %22, label %36, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x55a64d258150:s0 -> Node0x55a64d258010;
	Node0x55a64d258150:s1 -> Node0x55a64d257f80;
}
