; ModuleID = '../../Human_xBenchmarks_164/CPP_51/CPP_51.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_51/CPP_51.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@.str.1 = private unnamed_addr constant [11 x i8] c"AEIOUaeiou\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z13remove_vowelsNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %6, %union.anon** %7, align 8, !tbaa !3
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %9, align 8, !tbaa !8
  %10 = bitcast %union.anon* %6 to i8*
  store i8 0, i8* %10, align 8, !tbaa !11
  %11 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %15 = bitcast %union.anon* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(10) %15, i8* noundef nonnull align 1 dereferenceable(10) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i64 10, i1 false) #6
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  store i64 10, i64* %16, align 8, !tbaa !8
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 1, i64 2
  store i8 0, i8* %17, align 2, !tbaa !11
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %20 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %22 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  %23 = bitcast i64* %3 to i8*
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  %28 = bitcast %union.anon* %21 to i8*
  %29 = bitcast %union.anon* %6 to i8*
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %31 = getelementptr %union.anon, %union.anon* %21, i64 0, i32 0
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %33 = load i64, i64* %18, align 8, !tbaa !8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %172, %2
  %36 = load i8*, i8** %14, align 8, !tbaa !12
  %37 = bitcast %union.anon* %12 to i8*
  %38 = icmp eq i8* %36, %37
  br i1 %38, label %40, label %39

39:                                               ; preds = %35
  call void @_ZdlPv(i8* %36) #6
  br label %40

40:                                               ; preds = %35, %39
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6
  ret void

41:                                               ; preds = %2, %172
  %42 = phi i64 [ %173, %172 ], [ 0, %2 ]
  %43 = load i8*, i8** %14, align 8, !tbaa !12
  %44 = load i64, i64* %16, align 8, !tbaa !8
  %45 = getelementptr inbounds i8, i8* %43, i64 %44
  %46 = load i8*, i8** %19, align 8, !tbaa !12
  %47 = getelementptr inbounds i8, i8* %46, i64 %42
  %48 = ptrtoint i8* %45 to i64
  %49 = icmp sgt i64 %44, 3
  br i1 %49, label %50, label %74

50:                                               ; preds = %41
  %51 = ashr i64 %44, 2
  %52 = load i8, i8* %47, align 1, !tbaa !11
  br label %53

53:                                               ; preds = %70, %50
  %54 = phi i64 [ %51, %50 ], [ %72, %70 ]
  %55 = phi i8* [ %43, %50 ], [ %71, %70 ]
  %56 = load i8, i8* %55, align 1, !tbaa !11
  %57 = icmp eq i8 %56, %52
  br i1 %57, label %103, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8, i8* %55, i64 1
  %60 = load i8, i8* %59, align 1, !tbaa !11
  %61 = icmp eq i8 %60, %52
  br i1 %61, label %101, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds i8, i8* %55, i64 2
  %64 = load i8, i8* %63, align 1, !tbaa !11
  %65 = icmp eq i8 %64, %52
  br i1 %65, label %99, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds i8, i8* %55, i64 3
  %68 = load i8, i8* %67, align 1, !tbaa !11
  %69 = icmp eq i8 %68, %52
  br i1 %69, label %97, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds i8, i8* %55, i64 4
  %72 = add nsw i64 %54, -1
  %73 = icmp sgt i64 %54, 1
  br i1 %73, label %53, label %74, !llvm.loop !13

74:                                               ; preds = %70, %41
  %75 = phi i8* [ %43, %41 ], [ %71, %70 ]
  %76 = ptrtoint i8* %75 to i64
  %77 = sub i64 %48, %76
  switch i64 %77, label %96 [
    i64 3, label %78
    i64 2, label %84
    i64 1, label %91
  ]

78:                                               ; preds = %74
  %79 = load i8, i8* %75, align 1, !tbaa !11
  %80 = load i8, i8* %47, align 1, !tbaa !11
  %81 = icmp eq i8 %79, %80
  br i1 %81, label %103, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds i8, i8* %75, i64 1
  br label %84

84:                                               ; preds = %82, %74
  %85 = phi i8* [ %75, %74 ], [ %83, %82 ]
  %86 = load i8, i8* %85, align 1, !tbaa !11
  %87 = load i8, i8* %47, align 1, !tbaa !11
  %88 = icmp eq i8 %86, %87
  br i1 %88, label %103, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds i8, i8* %85, i64 1
  br label %91

91:                                               ; preds = %89, %74
  %92 = phi i8* [ %75, %74 ], [ %90, %89 ]
  %93 = load i8, i8* %92, align 1, !tbaa !11
  %94 = load i8, i8* %47, align 1, !tbaa !11
  %95 = icmp eq i8 %93, %94
  br i1 %95, label %103, label %96

96:                                               ; preds = %91, %74
  br label %103

97:                                               ; preds = %66
  %98 = getelementptr inbounds i8, i8* %55, i64 3
  br label %103

99:                                               ; preds = %62
  %100 = getelementptr inbounds i8, i8* %55, i64 2
  br label %103

101:                                              ; preds = %58
  %102 = getelementptr inbounds i8, i8* %55, i64 1
  br label %103

103:                                              ; preds = %53, %97, %99, %101, %96, %91, %84, %78
  %104 = phi i8* [ %45, %96 ], [ %75, %78 ], [ %85, %84 ], [ %92, %91 ], [ %98, %97 ], [ %100, %99 ], [ %102, %101 ], [ %55, %53 ]
  %105 = icmp eq i8* %104, %45
  br i1 %105, label %106, label %172

106:                                              ; preds = %103
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #6
  %107 = load i8, i8* %47, align 1, !tbaa !11
  call void @llvm.experimental.noalias.scope.decl(metadata !16)
  store %union.anon* %21, %union.anon** %22, align 8, !tbaa !3, !alias.scope !16
  %108 = load i8*, i8** %8, align 8, !tbaa !12, !noalias !16
  %109 = load i64, i64* %9, align 8, !tbaa !8, !noalias !16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6, !noalias !16
  store i64 %109, i64* %3, align 8, !tbaa !19, !noalias !16
  %110 = icmp ugt i64 %109, 15
  br i1 %110, label %111, label %115

111:                                              ; preds = %106
  %112 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %113 unwind label %164

113:                                              ; preds = %111
  store i8* %112, i8** %24, align 8, !tbaa !12, !alias.scope !16
  %114 = load i64, i64* %3, align 8, !tbaa !19, !noalias !16
  store i64 %114, i64* %25, align 8, !tbaa !11, !alias.scope !16
  br label %115

115:                                              ; preds = %113, %106
  %116 = load i8*, i8** %26, align 8, !tbaa !12, !alias.scope !16
  switch i64 %109, label %119 [
    i64 1, label %117
    i64 0, label %120
  ]

117:                                              ; preds = %115
  %118 = load i8, i8* %108, align 1, !tbaa !11
  store i8 %118, i8* %116, align 1, !tbaa !11
  br label %120

119:                                              ; preds = %115
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %116, i8* align 1 %108, i64 %109, i1 false) #6
  br label %120

120:                                              ; preds = %119, %117, %115
  %121 = load i64, i64* %3, align 8, !tbaa !19, !noalias !16
  store i64 %121, i64* %27, align 8, !tbaa !8, !alias.scope !16
  %122 = load i8*, i8** %26, align 8, !tbaa !12, !alias.scope !16
  %123 = getelementptr inbounds i8, i8* %122, i64 %121
  store i8 0, i8* %123, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6, !noalias !16
  %124 = load i64, i64* %27, align 8, !tbaa !8, !alias.scope !16
  %125 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i64 %124, i64 0, i64 1, i8 signext %107)
          to label %132 unwind label %126

126:                                              ; preds = %120
  %127 = landingpad { i8*, i32 }
          cleanup
  %128 = load i8*, i8** %26, align 8, !tbaa !12, !alias.scope !16
  %129 = bitcast %union.anon* %21 to i8*
  %130 = icmp eq i8* %128, %129
  br i1 %130, label %166, label %131

131:                                              ; preds = %126
  call void @_ZdlPv(i8* %128) #6
  br label %166

132:                                              ; preds = %120
  %133 = load i8*, i8** %26, align 8, !tbaa !12
  %134 = icmp eq i8* %133, %28
  br i1 %134, label %135, label %148

135:                                              ; preds = %132
  %136 = load i64, i64* %27, align 8, !tbaa !8
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %144, label %138

138:                                              ; preds = %135
  %139 = load i8*, i8** %8, align 8, !tbaa !12
  %140 = icmp eq i64 %136, 1
  br i1 %140, label %141, label %143

141:                                              ; preds = %138
  %142 = load i8, i8* %133, align 1, !tbaa !11
  store i8 %142, i8* %139, align 1, !tbaa !11
  br label %144

143:                                              ; preds = %138
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %139, i8* align 1 %133, i64 %136, i1 false) #6
  br label %144

144:                                              ; preds = %143, %141, %135
  %145 = load i64, i64* %27, align 8, !tbaa !8
  store i64 %145, i64* %9, align 8, !tbaa !8
  %146 = load i8*, i8** %8, align 8, !tbaa !12
  %147 = getelementptr inbounds i8, i8* %146, i64 %145
  store i8 0, i8* %147, align 1, !tbaa !11
  br label %158

148:                                              ; preds = %132
  %149 = load i8*, i8** %8, align 8, !tbaa !12
  %150 = icmp eq i8* %149, %29
  %151 = load i64, i64* %30, align 8
  store i8* %133, i8** %8, align 8, !tbaa !12
  %152 = load i64, i64* %27, align 8, !tbaa !8
  store i64 %152, i64* %9, align 8, !tbaa !8
  %153 = load i64, i64* %31, align 8, !tbaa !11
  store i64 %153, i64* %30, align 8, !tbaa !11
  %154 = icmp eq i8* %149, null
  %155 = or i1 %150, %154
  br i1 %155, label %157, label %156

156:                                              ; preds = %148
  store i8* %149, i8** %26, align 8, !tbaa !12
  store i64 %151, i64* %32, align 8, !tbaa !11
  br label %158

157:                                              ; preds = %148
  store %union.anon* %21, %union.anon** %22, align 8, !tbaa !12
  br label %158

158:                                              ; preds = %144, %156, %157
  store i64 0, i64* %27, align 8, !tbaa !8
  %159 = load i8*, i8** %26, align 8, !tbaa !12
  store i8 0, i8* %159, align 1, !tbaa !11
  %160 = load i8*, i8** %26, align 8, !tbaa !12
  %161 = icmp eq i8* %160, %28
  br i1 %161, label %163, label %162

162:                                              ; preds = %158
  call void @_ZdlPv(i8* %160) #6
  br label %163

163:                                              ; preds = %158, %162
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #6
  br label %172

164:                                              ; preds = %111
  %165 = landingpad { i8*, i32 }
          cleanup
  br label %166

166:                                              ; preds = %126, %131, %164
  %167 = phi { i8*, i32 } [ %165, %164 ], [ %127, %131 ], [ %127, %126 ]
  %168 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %168) #6
  %169 = load i8*, i8** %14, align 8, !tbaa !12
  %170 = bitcast %union.anon* %12 to i8*
  %171 = icmp eq i8* %169, %170
  br i1 %171, label %177, label %176

172:                                              ; preds = %103, %163
  %173 = add nuw i64 %42, 1
  %174 = load i64, i64* %18, align 8, !tbaa !8
  %175 = icmp ugt i64 %174, %173
  br i1 %175, label %41, label %35, !llvm.loop !20

176:                                              ; preds = %166
  call void @_ZdlPv(i8* %169) #6
  br label %177

177:                                              ; preds = %176, %166
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6
  %178 = load i8*, i8** %8, align 8, !tbaa !12
  %179 = bitcast %union.anon* %6 to i8*
  %180 = icmp eq i8* %178, %179
  br i1 %180, label %182, label %181

181:                                              ; preds = %177
  call void @_ZdlPv(i8* %178) #6
  br label %182

182:                                              ; preds = %181, %177
  resume { i8*, i32 } %167
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #3

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #5

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = distinct !{!13, !14, !15}
!14 = !{!"llvm.loop.mustprogress"}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!18 = distinct !{!18, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!19 = !{!10, !10, i64 0}
!20 = distinct !{!20, !14, !15}
