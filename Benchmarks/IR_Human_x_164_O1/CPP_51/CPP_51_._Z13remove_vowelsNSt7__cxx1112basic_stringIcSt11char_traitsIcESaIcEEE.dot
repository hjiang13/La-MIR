digraph "CFG for '_Z13remove_vowelsNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function" {
	label="CFG for '_Z13remove_vowelsNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function";

	Node0x55a9c6c71740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %5 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %6 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2\l  %7 = bitcast %\"class.std::__cxx11::basic_string\"* %0 to %union.anon**\l  store %union.anon* %6, %union.anon** %7, align 8, !tbaa !3\l  %8 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %9 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  store i64 0, i64* %9, align 8, !tbaa !8\l  %10 = bitcast %union.anon* %6 to i8*\l  store i8 0, i8* %10, align 8, !tbaa !11\l  %11 = bitcast %\"class.std::__cxx11::basic_string\"* %4 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #6\l  %12 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2\l  %13 = bitcast %\"class.std::__cxx11::basic_string\"* %4 to %union.anon**\l  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3\l  %14 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 0, i32 0\l  %15 = bitcast %union.anon* %12 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(10) %15, i8* noundef nonnull align 1 dereferenceable(10)\l... getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i64 10,\l... i1 false) #6\l  %16 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 1\l  store i64 10, i64* %16, align 8, !tbaa !8\l  %17 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2, i32 1, i64 2\l  store i8 0, i8* %17, align 2, !tbaa !11\l  %18 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %1, i64 0, i32 1\l  %19 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %1, i64 0, i32 0, i32 0\l  %20 = bitcast %\"class.std::__cxx11::basic_string\"* %5 to i8*\l  %21 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %5, i64 0, i32 2\l  %22 = bitcast %\"class.std::__cxx11::basic_string\"* %5 to %union.anon**\l  %23 = bitcast i64* %3 to i8*\l  %24 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %5, i64 0, i32 0, i32 0\l  %25 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %5, i64 0, i32 2, i32 0\l  %26 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %5, i64 0, i32 0, i32 0\l  %27 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %5, i64 0, i32 1\l  %28 = bitcast %union.anon* %21 to i8*\l  %29 = bitcast %union.anon* %6 to i8*\l  %30 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2, i32 0\l  %31 = getelementptr %union.anon, %union.anon* %21, i64 0, i32 0\l  %32 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %5, i64 0, i32 2, i32 0\l  %33 = load i64, i64* %18, align 8, !tbaa !8\l  %34 = icmp eq i64 %33, 0\l  br i1 %34, label %35, label %41\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c71740:s0 -> Node0x55a9c6c76690;
	Node0x55a9c6c71740:s1 -> Node0x55a9c6c76720;
	Node0x55a9c6c76690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%35:\l35:                                               \l  %36 = load i8*, i8** %14, align 8, !tbaa !12\l  %37 = bitcast %union.anon* %12 to i8*\l  %38 = icmp eq i8* %36, %37\l  br i1 %38, label %40, label %39\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c76690:s0 -> Node0x55a9c6c76a90;
	Node0x55a9c6c76690:s1 -> Node0x55a9c6c76b20;
	Node0x55a9c6c76b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%39:\l39:                                               \l  call void @_ZdlPv(i8* %36) #6\l  br label %40\l}"];
	Node0x55a9c6c76b20 -> Node0x55a9c6c76a90;
	Node0x55a9c6c76a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%40:\l40:                                               \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6\l  ret void\l}"];
	Node0x55a9c6c76720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%41:\l41:                                               \l  %42 = phi i64 [ %173, %172 ], [ 0, %2 ]\l  %43 = load i8*, i8** %14, align 8, !tbaa !12\l  %44 = load i64, i64* %16, align 8, !tbaa !8\l  %45 = getelementptr inbounds i8, i8* %43, i64 %44\l  %46 = load i8*, i8** %19, align 8, !tbaa !12\l  %47 = getelementptr inbounds i8, i8* %46, i64 %42\l  %48 = ptrtoint i8* %45 to i64\l  %49 = icmp sgt i64 %44, 3\l  br i1 %49, label %50, label %74\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c76720:s0 -> Node0x55a9c6c77cc0;
	Node0x55a9c6c76720:s1 -> Node0x55a9c6c77d10;
	Node0x55a9c6c77cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%50:\l50:                                               \l  %51 = ashr i64 %44, 2\l  %52 = load i8, i8* %47, align 1, !tbaa !11\l  br label %53\l}"];
	Node0x55a9c6c77cc0 -> Node0x55a9c6c77f50;
	Node0x55a9c6c77f50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = phi i64 [ %51, %50 ], [ %72, %70 ]\l  %55 = phi i8* [ %43, %50 ], [ %71, %70 ]\l  %56 = load i8, i8* %55, align 1, !tbaa !11\l  %57 = icmp eq i8 %56, %52\l  br i1 %57, label %103, label %58\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c77f50:s0 -> Node0x55a9c6c783a0;
	Node0x55a9c6c77f50:s1 -> Node0x55a9c6c78430;
	Node0x55a9c6c78430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = getelementptr inbounds i8, i8* %55, i64 1\l  %60 = load i8, i8* %59, align 1, !tbaa !11\l  %61 = icmp eq i8 %60, %52\l  br i1 %61, label %101, label %62\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c78430:s0 -> Node0x55a9c6c78740;
	Node0x55a9c6c78430:s1 -> Node0x55a9c6c78790;
	Node0x55a9c6c78790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  %63 = getelementptr inbounds i8, i8* %55, i64 2\l  %64 = load i8, i8* %63, align 1, !tbaa !11\l  %65 = icmp eq i8 %64, %52\l  br i1 %65, label %99, label %66\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c78790:s0 -> Node0x55a9c6c78e80;
	Node0x55a9c6c78790:s1 -> Node0x55a9c6c78ed0;
	Node0x55a9c6c78ed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%66:\l66:                                               \l  %67 = getelementptr inbounds i8, i8* %55, i64 3\l  %68 = load i8, i8* %67, align 1, !tbaa !11\l  %69 = icmp eq i8 %68, %52\l  br i1 %69, label %97, label %70\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c78ed0:s0 -> Node0x55a9c6c791b0;
	Node0x55a9c6c78ed0:s1 -> Node0x55a9c6c78040;
	Node0x55a9c6c78040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%70:\l70:                                               \l  %71 = getelementptr inbounds i8, i8* %55, i64 4\l  %72 = add nsw i64 %54, -1\l  %73 = icmp sgt i64 %54, 1\l  br i1 %73, label %53, label %74, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c78040:s0 -> Node0x55a9c6c77f50;
	Node0x55a9c6c78040:s1 -> Node0x55a9c6c77d10;
	Node0x55a9c6c77d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%74:\l74:                                               \l  %75 = phi i8* [ %43, %41 ], [ %71, %70 ]\l  %76 = ptrtoint i8* %75 to i64\l  %77 = sub i64 %48, %76\l  switch i64 %77, label %96 [\l    i64 3, label %78\l    i64 2, label %84\l    i64 1, label %91\l  ]\l|{<s0>def|<s1>3|<s2>2|<s3>1}}"];
	Node0x55a9c6c77d10:s0 -> Node0x55a9c6c79780;
	Node0x55a9c6c77d10:s1 -> Node0x55a9c6c797d0;
	Node0x55a9c6c77d10:s2 -> Node0x55a9c6c79820;
	Node0x55a9c6c77d10:s3 -> Node0x55a9c6c798b0;
	Node0x55a9c6c797d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%78:\l78:                                               \l  %79 = load i8, i8* %75, align 1, !tbaa !11\l  %80 = load i8, i8* %47, align 1, !tbaa !11\l  %81 = icmp eq i8 %79, %80\l  br i1 %81, label %103, label %82\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c797d0:s0 -> Node0x55a9c6c783a0;
	Node0x55a9c6c797d0:s1 -> Node0x55a9c6c79b00;
	Node0x55a9c6c79b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%82:\l82:                                               \l  %83 = getelementptr inbounds i8, i8* %75, i64 1\l  br label %84\l}"];
	Node0x55a9c6c79b00 -> Node0x55a9c6c79820;
	Node0x55a9c6c79820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%84:\l84:                                               \l  %85 = phi i8* [ %75, %74 ], [ %83, %82 ]\l  %86 = load i8, i8* %85, align 1, !tbaa !11\l  %87 = load i8, i8* %47, align 1, !tbaa !11\l  %88 = icmp eq i8 %86, %87\l  br i1 %88, label %103, label %89\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c79820:s0 -> Node0x55a9c6c783a0;
	Node0x55a9c6c79820:s1 -> Node0x55a9c6c79f30;
	Node0x55a9c6c79f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%89:\l89:                                               \l  %90 = getelementptr inbounds i8, i8* %85, i64 1\l  br label %91\l}"];
	Node0x55a9c6c79f30 -> Node0x55a9c6c798b0;
	Node0x55a9c6c798b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%91:\l91:                                               \l  %92 = phi i8* [ %75, %74 ], [ %90, %89 ]\l  %93 = load i8, i8* %92, align 1, !tbaa !11\l  %94 = load i8, i8* %47, align 1, !tbaa !11\l  %95 = icmp eq i8 %93, %94\l  br i1 %95, label %103, label %96\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c798b0:s0 -> Node0x55a9c6c783a0;
	Node0x55a9c6c798b0:s1 -> Node0x55a9c6c79780;
	Node0x55a9c6c79780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%96:\l96:                                               \l  br label %103\l}"];
	Node0x55a9c6c79780 -> Node0x55a9c6c783a0;
	Node0x55a9c6c791b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%97:\l97:                                               \l  %98 = getelementptr inbounds i8, i8* %55, i64 3\l  br label %103\l}"];
	Node0x55a9c6c791b0 -> Node0x55a9c6c783a0;
	Node0x55a9c6c78e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%99:\l99:                                               \l  %100 = getelementptr inbounds i8, i8* %55, i64 2\l  br label %103\l}"];
	Node0x55a9c6c78e80 -> Node0x55a9c6c783a0;
	Node0x55a9c6c78740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%101:\l101:                                              \l  %102 = getelementptr inbounds i8, i8* %55, i64 1\l  br label %103\l}"];
	Node0x55a9c6c78740 -> Node0x55a9c6c783a0;
	Node0x55a9c6c783a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%103:\l103:                                              \l  %104 = phi i8* [ %45, %96 ], [ %75, %78 ], [ %85, %84 ], [ %92, %91 ], [\l... %98, %97 ], [ %100, %99 ], [ %102, %101 ], [ %55, %53 ]\l  %105 = icmp eq i8* %104, %45\l  br i1 %105, label %106, label %172\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c783a0:s0 -> Node0x55a9c6c7a9e0;
	Node0x55a9c6c783a0:s1 -> Node0x55a9c6c771f0;
	Node0x55a9c6c7a9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%106:\l106:                                              \l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #6\l  %107 = load i8, i8* %47, align 1, !tbaa !11\l  call void @llvm.experimental.noalias.scope.decl(metadata !16)\l  store %union.anon* %21, %union.anon** %22, align 8, !tbaa !3, !alias.scope\l... !16\l  %108 = load i8*, i8** %8, align 8, !tbaa !12, !noalias !16\l  %109 = load i64, i64* %9, align 8, !tbaa !8, !noalias !16\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6, !noalias !16\l  store i64 %109, i64* %3, align 8, !tbaa !19, !noalias !16\l  %110 = icmp ugt i64 %109, 15\l  br i1 %110, label %111, label %115\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c7a9e0:s0 -> Node0x55a9c6c7bea0;
	Node0x55a9c6c7a9e0:s1 -> Node0x55a9c6c7bf30;
	Node0x55a9c6c7bea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%111:\l111:                                              \l  %112 = invoke i8*\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%\"class.s\l...td::__cxx11::basic_string\"* nonnull align 8 dereferenceable(32) %5, i64*\l... nonnull align 8 dereferenceable(8) %3, i64 0)\l          to label %113 unwind label %164\l}"];
	Node0x55a9c6c7bea0 -> Node0x55a9c6c7c160;
	Node0x55a9c6c7bea0 -> Node0x55a9c6c7c1b0;
	Node0x55a9c6c7c160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%113:\l113:                                              \l  store i8* %112, i8** %24, align 8, !tbaa !12, !alias.scope !16\l  %114 = load i64, i64* %3, align 8, !tbaa !19, !noalias !16\l  store i64 %114, i64* %25, align 8, !tbaa !11, !alias.scope !16\l  br label %115\l}"];
	Node0x55a9c6c7c160 -> Node0x55a9c6c7bf30;
	Node0x55a9c6c7bf30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%115:\l115:                                              \l  %116 = load i8*, i8** %26, align 8, !tbaa !12, !alias.scope !16\l  switch i64 %109, label %119 [\l    i64 1, label %117\l    i64 0, label %120\l  ]\l|{<s0>def|<s1>1|<s2>0}}"];
	Node0x55a9c6c7bf30:s0 -> Node0x55a9c6c7c070;
	Node0x55a9c6c7bf30:s1 -> Node0x55a9c6c7ce50;
	Node0x55a9c6c7bf30:s2 -> Node0x55a9c6c7cee0;
	Node0x55a9c6c7ce50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%117:\l117:                                              \l  %118 = load i8, i8* %108, align 1, !tbaa !11\l  store i8 %118, i8* %116, align 1, !tbaa !11\l  br label %120\l}"];
	Node0x55a9c6c7ce50 -> Node0x55a9c6c7cee0;
	Node0x55a9c6c7c070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%119:\l119:                                              \l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %116, i8* align 1 %108, i64\l... %109, i1 false) #6\l  br label %120\l}"];
	Node0x55a9c6c7c070 -> Node0x55a9c6c7cee0;
	Node0x55a9c6c7cee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%120:\l120:                                              \l  %121 = load i64, i64* %3, align 8, !tbaa !19, !noalias !16\l  store i64 %121, i64* %27, align 8, !tbaa !8, !alias.scope !16\l  %122 = load i8*, i8** %26, align 8, !tbaa !12, !alias.scope !16\l  %123 = getelementptr inbounds i8, i8* %122, i64 %121\l  store i8 0, i8* %123, align 1, !tbaa !11\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6, !noalias !16\l  %124 = load i64, i64* %27, align 8, !tbaa !8, !alias.scope !16\l  %125 = invoke nonnull align 8 dereferenceable(32)\l... %\"class.std::__cxx11::basic_string\"*\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%\"\l...class.std::__cxx11::basic_string\"* nonnull align 8 dereferenceable(32) %5, i64\l... %124, i64 0, i64 1, i8 signext %107)\l          to label %132 unwind label %126\l}"];
	Node0x55a9c6c7cee0 -> Node0x55a9c6c7d9a0;
	Node0x55a9c6c7cee0 -> Node0x55a9c6c7da30;
	Node0x55a9c6c7da30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%126:\l126:                                              \l  %127 = landingpad \{ i8*, i32 \}\l          cleanup\l  %128 = load i8*, i8** %26, align 8, !tbaa !12, !alias.scope !16\l  %129 = bitcast %union.anon* %21 to i8*\l  %130 = icmp eq i8* %128, %129\l  br i1 %130, label %166, label %131\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c7da30:s0 -> Node0x55a9c6c7e790;
	Node0x55a9c6c7da30:s1 -> Node0x55a9c6c7e820;
	Node0x55a9c6c7e820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%131:\l131:                                              \l  call void @_ZdlPv(i8* %128) #6\l  br label %166\l}"];
	Node0x55a9c6c7e820 -> Node0x55a9c6c7e790;
	Node0x55a9c6c7d9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%132:\l132:                                              \l  %133 = load i8*, i8** %26, align 8, !tbaa !12\l  %134 = icmp eq i8* %133, %28\l  br i1 %134, label %135, label %148\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c7d9a0:s0 -> Node0x55a9c6c7ebe0;
	Node0x55a9c6c7d9a0:s1 -> Node0x55a9c6c7ec30;
	Node0x55a9c6c7ebe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%135:\l135:                                              \l  %136 = load i64, i64* %27, align 8, !tbaa !8\l  %137 = icmp eq i64 %136, 0\l  br i1 %137, label %144, label %138\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c7ebe0:s0 -> Node0x55a9c6c7ee30;
	Node0x55a9c6c7ebe0:s1 -> Node0x55a9c6c7ee80;
	Node0x55a9c6c7ee80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%138:\l138:                                              \l  %139 = load i8*, i8** %8, align 8, !tbaa !12\l  %140 = icmp eq i64 %136, 1\l  br i1 %140, label %141, label %143\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c7ee80:s0 -> Node0x55a9c6c7f0c0;
	Node0x55a9c6c7ee80:s1 -> Node0x55a9c6c7f110;
	Node0x55a9c6c7f0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%141:\l141:                                              \l  %142 = load i8, i8* %133, align 1, !tbaa !11\l  store i8 %142, i8* %139, align 1, !tbaa !11\l  br label %144\l}"];
	Node0x55a9c6c7f0c0 -> Node0x55a9c6c7ee30;
	Node0x55a9c6c7f110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%143:\l143:                                              \l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %139, i8* align 1 %133, i64\l... %136, i1 false) #6\l  br label %144\l}"];
	Node0x55a9c6c7f110 -> Node0x55a9c6c7ee30;
	Node0x55a9c6c7ee30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%144:\l144:                                              \l  %145 = load i64, i64* %27, align 8, !tbaa !8\l  store i64 %145, i64* %9, align 8, !tbaa !8\l  %146 = load i8*, i8** %8, align 8, !tbaa !12\l  %147 = getelementptr inbounds i8, i8* %146, i64 %145\l  store i8 0, i8* %147, align 1, !tbaa !11\l  br label %158\l}"];
	Node0x55a9c6c7ee30 -> Node0x55a9c6c72ef0;
	Node0x55a9c6c7ec30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%148:\l148:                                              \l  %149 = load i8*, i8** %8, align 8, !tbaa !12\l  %150 = icmp eq i8* %149, %29\l  %151 = load i64, i64* %30, align 8\l  store i8* %133, i8** %8, align 8, !tbaa !12\l  %152 = load i64, i64* %27, align 8, !tbaa !8\l  store i64 %152, i64* %9, align 8, !tbaa !8\l  %153 = load i64, i64* %31, align 8, !tbaa !11\l  store i64 %153, i64* %30, align 8, !tbaa !11\l  %154 = icmp eq i8* %149, null\l  %155 = or i1 %150, %154\l  br i1 %155, label %157, label %156\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c7ec30:s0 -> Node0x55a9c6c734d0;
	Node0x55a9c6c7ec30:s1 -> Node0x55a9c6c73520;
	Node0x55a9c6c73520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%156:\l156:                                              \l  store i8* %149, i8** %26, align 8, !tbaa !12\l  store i64 %151, i64* %32, align 8, !tbaa !11\l  br label %158\l}"];
	Node0x55a9c6c73520 -> Node0x55a9c6c72ef0;
	Node0x55a9c6c734d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%157:\l157:                                              \l  store %union.anon* %21, %union.anon** %22, align 8, !tbaa !12\l  br label %158\l}"];
	Node0x55a9c6c734d0 -> Node0x55a9c6c72ef0;
	Node0x55a9c6c72ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%158:\l158:                                              \l  store i64 0, i64* %27, align 8, !tbaa !8\l  %159 = load i8*, i8** %26, align 8, !tbaa !12\l  store i8 0, i8* %159, align 1, !tbaa !11\l  %160 = load i8*, i8** %26, align 8, !tbaa !12\l  %161 = icmp eq i8* %160, %28\l  br i1 %161, label %163, label %162\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c72ef0:s0 -> Node0x55a9c6c80f00;
	Node0x55a9c6c72ef0:s1 -> Node0x55a9c6c80f50;
	Node0x55a9c6c80f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%162:\l162:                                              \l  call void @_ZdlPv(i8* %160) #6\l  br label %163\l}"];
	Node0x55a9c6c80f50 -> Node0x55a9c6c80f00;
	Node0x55a9c6c80f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%163:\l163:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #6\l  br label %172\l}"];
	Node0x55a9c6c80f00 -> Node0x55a9c6c771f0;
	Node0x55a9c6c7c1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%164:\l164:                                              \l  %165 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %166\l}"];
	Node0x55a9c6c7c1b0 -> Node0x55a9c6c7e790;
	Node0x55a9c6c7e790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%166:\l166:                                              \l  %167 = phi \{ i8*, i32 \} [ %165, %164 ], [ %127, %131 ], [ %127, %126 ]\l  %168 = bitcast %\"class.std::__cxx11::basic_string\"* %5 to i8*\l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %168) #6\l  %169 = load i8*, i8** %14, align 8, !tbaa !12\l  %170 = bitcast %union.anon* %12 to i8*\l  %171 = icmp eq i8* %169, %170\l  br i1 %171, label %177, label %176\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c7e790:s0 -> Node0x55a9c6c81830;
	Node0x55a9c6c7e790:s1 -> Node0x55a9c6c81880;
	Node0x55a9c6c771f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%172:\l172:                                              \l  %173 = add nuw i64 %42, 1\l  %174 = load i64, i64* %18, align 8, !tbaa !8\l  %175 = icmp ugt i64 %174, %173\l  br i1 %175, label %41, label %35, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c771f0:s0 -> Node0x55a9c6c76720;
	Node0x55a9c6c771f0:s1 -> Node0x55a9c6c76690;
	Node0x55a9c6c81880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%176:\l176:                                              \l  call void @_ZdlPv(i8* %169) #6\l  br label %177\l}"];
	Node0x55a9c6c81880 -> Node0x55a9c6c81830;
	Node0x55a9c6c81830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%177:\l177:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6\l  %178 = load i8*, i8** %8, align 8, !tbaa !12\l  %179 = bitcast %union.anon* %6 to i8*\l  %180 = icmp eq i8* %178, %179\l  br i1 %180, label %182, label %181\l|{<s0>T|<s1>F}}"];
	Node0x55a9c6c81830:s0 -> Node0x55a9c6c82080;
	Node0x55a9c6c81830:s1 -> Node0x55a9c6c820d0;
	Node0x55a9c6c820d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%181:\l181:                                              \l  call void @_ZdlPv(i8* %178) #6\l  br label %182\l}"];
	Node0x55a9c6c820d0 -> Node0x55a9c6c82080;
	Node0x55a9c6c82080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%182:\l182:                                              \l  resume \{ i8*, i32 \} %167\l}"];
}
