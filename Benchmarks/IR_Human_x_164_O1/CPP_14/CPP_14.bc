; ModuleID = '../../Human_xBenchmarks_164/CPP_14/CPP_14.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_14/CPP_14.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ = comdat any

@.str.2 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z12all_prefixesNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::vector"* noalias sret(%"class.std::vector") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = bitcast %"class.std::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false) #11
  %8 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %10 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  store %union.anon* %9, %union.anon** %10, align 8, !tbaa !3
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  store i64 0, i64* %12, align 8, !tbaa !8
  %13 = bitcast %union.anon* %9 to i8*
  store i8 0, i8* %13, align 8, !tbaa !11
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %15 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %18 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  %19 = bitcast i64* %4 to i8*
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  %24 = bitcast %union.anon* %17 to i8*
  %25 = bitcast %union.anon* %9 to i8*
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %27 = getelementptr %union.anon, %union.anon* %17, i64 0, i32 0
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %29 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %31 = bitcast i64* %3 to i8*
  %32 = load i64, i64* %14, align 8, !tbaa !8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %130, %2
  %35 = load i8*, i8** %11, align 8, !tbaa !12
  %36 = bitcast %union.anon* %9 to i8*
  %37 = icmp eq i8* %35, %36
  br i1 %37, label %39, label %38

38:                                               ; preds = %34
  call void @_ZdlPv(i8* %35) #11
  br label %39

39:                                               ; preds = %34, %38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #11
  ret void

40:                                               ; preds = %2, %130
  %41 = phi i64 [ %131, %130 ], [ 0, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  %42 = load i8*, i8** %16, align 8, !tbaa !12
  %43 = getelementptr inbounds i8, i8* %42, i64 %41
  %44 = load i8, i8* %43, align 1, !tbaa !11
  call void @llvm.experimental.noalias.scope.decl(metadata !13)
  store %union.anon* %17, %union.anon** %18, align 8, !tbaa !3, !alias.scope !13
  %45 = load i8*, i8** %11, align 8, !tbaa !12, !noalias !13
  %46 = load i64, i64* %12, align 8, !tbaa !8, !noalias !13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11, !noalias !13
  store i64 %46, i64* %4, align 8, !tbaa !16, !noalias !13
  %47 = icmp ugt i64 %46, 15
  br i1 %47, label %48, label %52

48:                                               ; preds = %40
  %49 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %50 unwind label %134

50:                                               ; preds = %48
  store i8* %49, i8** %20, align 8, !tbaa !12, !alias.scope !13
  %51 = load i64, i64* %4, align 8, !tbaa !16, !noalias !13
  store i64 %51, i64* %21, align 8, !tbaa !11, !alias.scope !13
  br label %52

52:                                               ; preds = %50, %40
  %53 = load i8*, i8** %22, align 8, !tbaa !12, !alias.scope !13
  switch i64 %46, label %56 [
    i64 1, label %54
    i64 0, label %57
  ]

54:                                               ; preds = %52
  %55 = load i8, i8* %45, align 1, !tbaa !11
  store i8 %55, i8* %53, align 1, !tbaa !11
  br label %57

56:                                               ; preds = %52
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %45, i64 %46, i1 false) #11
  br label %57

57:                                               ; preds = %56, %54, %52
  %58 = load i64, i64* %4, align 8, !tbaa !16, !noalias !13
  store i64 %58, i64* %23, align 8, !tbaa !8, !alias.scope !13
  %59 = load i8*, i8** %22, align 8, !tbaa !12, !alias.scope !13
  %60 = getelementptr inbounds i8, i8* %59, i64 %58
  store i8 0, i8* %60, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11, !noalias !13
  %61 = load i64, i64* %23, align 8, !tbaa !8, !alias.scope !13
  %62 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64 %61, i64 0, i64 1, i8 signext %44)
          to label %69 unwind label %63

63:                                               ; preds = %57
  %64 = landingpad { i8*, i32 }
          cleanup
  %65 = load i8*, i8** %22, align 8, !tbaa !12, !alias.scope !13
  %66 = bitcast %union.anon* %17 to i8*
  %67 = icmp eq i8* %65, %66
  br i1 %67, label %136, label %68

68:                                               ; preds = %63
  call void @_ZdlPv(i8* %65) #11
  br label %136

69:                                               ; preds = %57
  %70 = load i8*, i8** %22, align 8, !tbaa !12
  %71 = icmp eq i8* %70, %24
  br i1 %71, label %72, label %85

72:                                               ; preds = %69
  %73 = load i64, i64* %23, align 8, !tbaa !8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %81, label %75

75:                                               ; preds = %72
  %76 = load i8*, i8** %11, align 8, !tbaa !12
  %77 = icmp eq i64 %73, 1
  br i1 %77, label %78, label %80

78:                                               ; preds = %75
  %79 = load i8, i8* %70, align 1, !tbaa !11
  store i8 %79, i8* %76, align 1, !tbaa !11
  br label %81

80:                                               ; preds = %75
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %76, i8* align 1 %70, i64 %73, i1 false) #11
  br label %81

81:                                               ; preds = %80, %78, %72
  %82 = load i64, i64* %23, align 8, !tbaa !8
  store i64 %82, i64* %12, align 8, !tbaa !8
  %83 = load i8*, i8** %11, align 8, !tbaa !12
  %84 = getelementptr inbounds i8, i8* %83, i64 %82
  store i8 0, i8* %84, align 1, !tbaa !11
  br label %95

85:                                               ; preds = %69
  %86 = load i8*, i8** %11, align 8, !tbaa !12
  %87 = icmp eq i8* %86, %25
  %88 = load i64, i64* %26, align 8
  store i8* %70, i8** %11, align 8, !tbaa !12
  %89 = load i64, i64* %23, align 8, !tbaa !8
  store i64 %89, i64* %12, align 8, !tbaa !8
  %90 = load i64, i64* %27, align 8, !tbaa !11
  store i64 %90, i64* %26, align 8, !tbaa !11
  %91 = icmp eq i8* %86, null
  %92 = or i1 %87, %91
  br i1 %92, label %94, label %93

93:                                               ; preds = %85
  store i8* %86, i8** %22, align 8, !tbaa !12
  store i64 %88, i64* %28, align 8, !tbaa !11
  br label %95

94:                                               ; preds = %85
  store %union.anon* %17, %union.anon** %18, align 8, !tbaa !12
  br label %95

95:                                               ; preds = %81, %93, %94
  store i64 0, i64* %23, align 8, !tbaa !8
  %96 = load i8*, i8** %22, align 8, !tbaa !12
  store i8 0, i8* %96, align 1, !tbaa !11
  %97 = load i8*, i8** %22, align 8, !tbaa !12
  %98 = icmp eq i8* %97, %24
  br i1 %98, label %100, label %99

99:                                               ; preds = %95
  call void @_ZdlPv(i8* %97) #11
  br label %100

100:                                              ; preds = %95, %99
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  %101 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %29, align 8, !tbaa !17
  %102 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %30, align 8, !tbaa !19
  %103 = icmp eq %"class.std::__cxx11::basic_string"* %101, %102
  br i1 %103, label %129, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %101, i64 0, i32 2
  %106 = bitcast %"class.std::__cxx11::basic_string"* %101 to %union.anon**
  store %union.anon* %105, %union.anon** %106, align 8, !tbaa !3
  %107 = load i8*, i8** %11, align 8, !tbaa !12
  %108 = load i64, i64* %12, align 8, !tbaa !8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  store i64 %108, i64* %3, align 8, !tbaa !16
  %109 = icmp ugt i64 %108, 15
  br i1 %109, label %110, label %116

110:                                              ; preds = %104
  %111 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %101, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %112 unwind label %139

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %101, i64 0, i32 0, i32 0
  store i8* %111, i8** %113, align 8, !tbaa !12
  %114 = load i64, i64* %3, align 8, !tbaa !16
  %115 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %101, i64 0, i32 2, i32 0
  store i64 %114, i64* %115, align 8, !tbaa !11
  br label %116

116:                                              ; preds = %112, %104
  %117 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %101, i64 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8, !tbaa !12
  switch i64 %108, label %121 [
    i64 1, label %119
    i64 0, label %122
  ]

119:                                              ; preds = %116
  %120 = load i8, i8* %107, align 1, !tbaa !11
  store i8 %120, i8* %118, align 1, !tbaa !11
  br label %122

121:                                              ; preds = %116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %118, i8* align 1 %107, i64 %108, i1 false) #11
  br label %122

122:                                              ; preds = %121, %119, %116
  %123 = load i64, i64* %3, align 8, !tbaa !16
  %124 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %101, i64 0, i32 1
  store i64 %123, i64* %124, align 8, !tbaa !8
  %125 = load i8*, i8** %117, align 8, !tbaa !12
  %126 = getelementptr inbounds i8, i8* %125, i64 %123
  store i8 0, i8* %126, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  %127 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %29, align 8, !tbaa !17
  %128 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %127, i64 1
  store %"class.std::__cxx11::basic_string"* %128, %"class.std::__cxx11::basic_string"** %29, align 8, !tbaa !17
  br label %130

129:                                              ; preds = %100
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %"class.std::__cxx11::basic_string"* %101, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5)
          to label %130 unwind label %139

130:                                              ; preds = %122, %129
  %131 = add nuw i64 %41, 1
  %132 = load i64, i64* %14, align 8, !tbaa !8
  %133 = icmp ugt i64 %132, %131
  br i1 %133, label %40, label %34, !llvm.loop !20

134:                                              ; preds = %48
  %135 = landingpad { i8*, i32 }
          cleanup
  br label %136

136:                                              ; preds = %63, %68, %134
  %137 = phi { i8*, i32 } [ %135, %134 ], [ %64, %68 ], [ %64, %63 ]
  %138 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %138) #11
  br label %141

139:                                              ; preds = %129, %110
  %140 = landingpad { i8*, i32 }
          cleanup
  br label %141

141:                                              ; preds = %139, %136
  %142 = phi { i8*, i32 } [ %140, %139 ], [ %137, %136 ]
  %143 = load i8*, i8** %11, align 8, !tbaa !12
  %144 = bitcast %union.anon* %9 to i8*
  %145 = icmp eq i8* %143, %144
  br i1 %145, label %147, label %146

146:                                              ; preds = %141
  call void @_ZdlPv(i8* %143) #11
  br label %147

147:                                              ; preds = %146, %141
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #11
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #11
  resume { i8*, i32 } %142
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8, !tbaa !23
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8, !tbaa !17
  %6 = icmp eq %"class.std::__cxx11::basic_string"* %3, %5
  br i1 %6, label %18, label %7

7:                                                ; preds = %1, %15
  %8 = phi %"class.std::__cxx11::basic_string"* [ %16, %15 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !tbaa !12
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %12 = bitcast %union.anon* %11 to i8*
  %13 = icmp eq i8* %10, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %7
  call void @_ZdlPv(i8* %10) #11
  br label %15

15:                                               ; preds = %14, %7
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 1
  %17 = icmp eq %"class.std::__cxx11::basic_string"* %16, %5
  br i1 %17, label %18, label %7, !llvm.loop !24

18:                                               ; preds = %15, %1
  %19 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %19, align 8, !tbaa !23
  %21 = icmp eq %"class.std::__cxx11::basic_string"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__cxx11::basic_string"* %20 to i8*
  call void @_ZdlPv(i8* nonnull %23) #11
  br label %24

24:                                               ; preds = %18, %22
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #3 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #11
  call void @_ZSt9terminatev() #12
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #4

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #5

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8, !tbaa !17
  %7 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8, !tbaa !23
  %9 = ptrtoint %"class.std::__cxx11::basic_string"* %6 to i64
  %10 = ptrtoint %"class.std::__cxx11::basic_string"* %8 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 5
  %13 = icmp eq i64 %11, 9223372036854775776
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

15:                                               ; preds = %3
  %16 = icmp eq i64 %11, 0
  %17 = select i1 %16, i64 1, i64 %12
  %18 = add nsw i64 %17, %12
  %19 = icmp ult i64 %18, %12
  %20 = icmp ugt i64 %18, 288230376151711743
  %21 = or i1 %19, %20
  %22 = select i1 %21, i64 288230376151711743, i64 %18
  %23 = ptrtoint %"class.std::__cxx11::basic_string"* %1 to i64
  %24 = sub i64 %23, %10
  %25 = ashr exact i64 %24, 5
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %15
  %28 = icmp ugt i64 %22, 288230376151711743
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

30:                                               ; preds = %27
  %31 = shl i64 %22, 5
  %32 = call noalias nonnull i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__cxx11::basic_string"*
  br label %34

34:                                               ; preds = %15, %30
  %35 = phi %"class.std::__cxx11::basic_string"* [ %33, %30 ], [ null, %15 ]
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25, i32 2
  %38 = bitcast %"class.std::__cxx11::basic_string"* %36 to %union.anon**
  store %union.anon* %37, %union.anon** %38, align 8, !tbaa !3
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8, !tbaa !12
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  %42 = load i64, i64* %41, align 8, !tbaa !8
  %43 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  store i64 %42, i64* %4, align 8, !tbaa !16
  %44 = icmp ugt i64 %42, 15
  br i1 %44, label %45, label %51

45:                                               ; preds = %34
  %46 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %36, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %47 unwind label %125

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %36, i64 0, i32 0, i32 0
  store i8* %46, i8** %48, align 8, !tbaa !12
  %49 = load i64, i64* %4, align 8, !tbaa !16
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25, i32 2, i32 0
  store i64 %49, i64* %50, align 8, !tbaa !11
  br label %51

51:                                               ; preds = %47, %34
  %52 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %36, i64 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8, !tbaa !12
  switch i64 %42, label %56 [
    i64 1, label %54
    i64 0, label %57
  ]

54:                                               ; preds = %51
  %55 = load i8, i8* %40, align 1, !tbaa !11
  store i8 %55, i8* %53, align 1, !tbaa !11
  br label %57

56:                                               ; preds = %51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %40, i64 %42, i1 false) #11
  br label %57

57:                                               ; preds = %51, %54, %56
  %58 = load i64, i64* %4, align 8, !tbaa !16
  %59 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25, i32 1
  store i64 %58, i64* %59, align 8, !tbaa !8
  %60 = load i8*, i8** %52, align 8, !tbaa !12
  %61 = getelementptr inbounds i8, i8* %60, i64 %58
  store i8 0, i8* %61, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  %62 = icmp eq %"class.std::__cxx11::basic_string"* %8, %1
  br i1 %62, label %88, label %63

63:                                               ; preds = %57, %80
  %64 = phi %"class.std::__cxx11::basic_string"* [ %86, %80 ], [ %35, %57 ]
  %65 = phi %"class.std::__cxx11::basic_string"* [ %85, %80 ], [ %8, %57 ]
  %66 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 2
  %67 = bitcast %"class.std::__cxx11::basic_string"* %64 to %union.anon**
  store %union.anon* %66, %union.anon** %67, align 8, !tbaa !3
  %68 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8, !tbaa !12
  %70 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 2
  %71 = bitcast %union.anon* %70 to i8*
  %72 = icmp eq i8* %69, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %63
  %74 = bitcast %union.anon* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %74, i8* noundef nonnull align 8 dereferenceable(16) %71, i64 16, i1 false) #11
  br label %80

75:                                               ; preds = %63
  %76 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 0, i32 0
  store i8* %69, i8** %76, align 8, !tbaa !12
  %77 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 2, i32 0
  %78 = load i64, i64* %77, align 8, !tbaa !11
  %79 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 2, i32 0
  store i64 %78, i64* %79, align 8, !tbaa !11
  br label %80

80:                                               ; preds = %75, %73
  %81 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 1
  %82 = load i64, i64* %81, align 8, !tbaa !8
  %83 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 1
  store i64 %82, i64* %83, align 8, !tbaa !8
  %84 = bitcast %"class.std::__cxx11::basic_string"* %65 to %union.anon**
  store %union.anon* %70, %union.anon** %84, align 8, !tbaa !12
  store i64 0, i64* %81, align 8, !tbaa !8
  store i8 0, i8* %71, align 8, !tbaa !11
  %85 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 1
  %86 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 1
  %87 = icmp eq %"class.std::__cxx11::basic_string"* %85, %1
  br i1 %87, label %88, label %63, !llvm.loop !25

88:                                               ; preds = %80, %57
  %89 = phi %"class.std::__cxx11::basic_string"* [ %35, %57 ], [ %86, %80 ]
  %90 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %89, i64 1
  %91 = icmp eq %"class.std::__cxx11::basic_string"* %6, %1
  br i1 %91, label %117, label %92

92:                                               ; preds = %88, %109
  %93 = phi %"class.std::__cxx11::basic_string"* [ %115, %109 ], [ %90, %88 ]
  %94 = phi %"class.std::__cxx11::basic_string"* [ %114, %109 ], [ %1, %88 ]
  %95 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 2
  %96 = bitcast %"class.std::__cxx11::basic_string"* %93 to %union.anon**
  store %union.anon* %95, %union.anon** %96, align 8, !tbaa !3
  %97 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8, !tbaa !12
  %99 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 2
  %100 = bitcast %union.anon* %99 to i8*
  %101 = icmp eq i8* %98, %100
  br i1 %101, label %102, label %104

102:                                              ; preds = %92
  %103 = bitcast %union.anon* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %103, i8* noundef nonnull align 8 dereferenceable(16) %100, i64 16, i1 false) #11
  br label %109

104:                                              ; preds = %92
  %105 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 0, i32 0
  store i8* %98, i8** %105, align 8, !tbaa !12
  %106 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 2, i32 0
  %107 = load i64, i64* %106, align 8, !tbaa !11
  %108 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 2, i32 0
  store i64 %107, i64* %108, align 8, !tbaa !11
  br label %109

109:                                              ; preds = %104, %102
  %110 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 1
  %111 = load i64, i64* %110, align 8, !tbaa !8
  %112 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 1
  store i64 %111, i64* %112, align 8, !tbaa !8
  %113 = bitcast %"class.std::__cxx11::basic_string"* %94 to %union.anon**
  store %union.anon* %99, %union.anon** %113, align 8, !tbaa !12
  store i64 0, i64* %110, align 8, !tbaa !8
  store i8 0, i8* %100, align 8, !tbaa !11
  %114 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 1
  %115 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 1
  %116 = icmp eq %"class.std::__cxx11::basic_string"* %114, %6
  br i1 %116, label %117, label %92, !llvm.loop !25

117:                                              ; preds = %109, %88
  %118 = phi %"class.std::__cxx11::basic_string"* [ %90, %88 ], [ %115, %109 ]
  %119 = icmp eq %"class.std::__cxx11::basic_string"* %8, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %117
  %121 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  call void @_ZdlPv(i8* nonnull %121) #11
  br label %122

122:                                              ; preds = %117, %120
  %123 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* %35, %"class.std::__cxx11::basic_string"** %7, align 8, !tbaa !23
  store %"class.std::__cxx11::basic_string"* %118, %"class.std::__cxx11::basic_string"** %5, align 8, !tbaa !17
  %124 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %22
  store %"class.std::__cxx11::basic_string"* %124, %"class.std::__cxx11::basic_string"** %123, align 8, !tbaa !19
  ret void

125:                                              ; preds = %45
  %126 = landingpad { i8*, i32 }
          catch i8* null
  %127 = extractvalue { i8*, i32 } %126, 0
  %128 = call i8* @__cxa_begin_catch(i8* %127) #11
  %129 = icmp eq %"class.std::__cxx11::basic_string"* %35, null
  br i1 %129, label %130, label %139

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %36, i64 0, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8, !tbaa !12
  %133 = bitcast %union.anon* %37 to i8*
  %134 = icmp eq i8* %132, %133
  br i1 %134, label %138, label %135

135:                                              ; preds = %130
  call void @_ZdlPv(i8* %132) #11
  br label %138

136:                                              ; preds = %141
  %137 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %142 unwind label %143

138:                                              ; preds = %135, %130
  br i1 %129, label %141, label %139

139:                                              ; preds = %125, %138
  %140 = bitcast %"class.std::__cxx11::basic_string"* %35 to i8*
  call void @_ZdlPv(i8* nonnull %140) #11
  br label %141

141:                                              ; preds = %139, %138
  invoke void @__cxa_rethrow() #13
          to label %146 unwind label %136

142:                                              ; preds = %136
  resume { i8*, i32 } %137

143:                                              ; preds = %136
  %144 = landingpad { i8*, i32 }
          catch i8* null
  %145 = extractvalue { i8*, i32 } %144, 0
  call void @__clang_call_terminate(i8* %145) #12
  unreachable

146:                                              ; preds = %141
  unreachable
}

declare dso_local void @__cxa_rethrow() local_unnamed_addr

declare dso_local void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #7

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #10

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { noinline noreturn nounwind }
attributes #4 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #7 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { argmemonly nofree nounwind willreturn writeonly }
attributes #10 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { noreturn }
attributes #14 = { allocsize(0) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!15 = distinct !{!15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!16 = !{!10, !10, i64 0}
!17 = !{!18, !5, i64 8}
!18 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!19 = !{!18, !5, i64 16}
!20 = distinct !{!20, !21, !22}
!21 = !{!"llvm.loop.mustprogress"}
!22 = !{!"llvm.loop.unroll.disable"}
!23 = !{!18, !5, i64 0}
!24 = distinct !{!24, !21, !22}
!25 = distinct !{!25, !21, !22}
