; ModuleID = '../../Human_xBenchmarks_164/CPP_27/CPP_27.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_27/CPP_27.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: uwtable
define dso_local void @_Z9filp_caseNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !3
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %8, align 8, !tbaa !8
  %9 = bitcast %union.anon* %5 to i8*
  store i8 0, i8* %9, align 8, !tbaa !11
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %12 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %14 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  %15 = bitcast i64* %3 to i8*
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %20 = bitcast %union.anon* %13 to i8*
  %21 = bitcast %union.anon* %5 to i8*
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %23 = getelementptr %union.anon, %union.anon* %13, i64 0, i32 0
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %25 = load i64, i64* %10, align 8, !tbaa !8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %111, label %27

27:                                               ; preds = %2, %98
  %28 = phi i64 [ %99, %98 ], [ 0, %2 ]
  %29 = load i8*, i8** %11, align 8, !tbaa !12
  %30 = getelementptr inbounds i8, i8* %29, i64 %28
  %31 = load i8, i8* %30, align 1, !tbaa !11
  %32 = add i8 %31, -97
  %33 = icmp ult i8 %32, 26
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = add i8 %31, -32
  br label %41

36:                                               ; preds = %27
  %37 = add i8 %31, -65
  %38 = icmp ult i8 %37, 26
  %39 = add i8 %31, 32
  %40 = select i1 %38, i8 %39, i8 %31
  br label %41

41:                                               ; preds = %36, %34
  %42 = phi i8 [ %35, %34 ], [ %40, %36 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #6
  call void @llvm.experimental.noalias.scope.decl(metadata !13)
  store %union.anon* %13, %union.anon** %14, align 8, !tbaa !3, !alias.scope !13
  %43 = load i8*, i8** %7, align 8, !tbaa !12, !noalias !13
  %44 = load i64, i64* %8, align 8, !tbaa !8, !noalias !13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6, !noalias !13
  store i64 %44, i64* %3, align 8, !tbaa !16, !noalias !13
  %45 = icmp ugt i64 %44, 15
  br i1 %45, label %46, label %50

46:                                               ; preds = %41
  %47 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %4, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %48 unwind label %102

48:                                               ; preds = %46
  store i8* %47, i8** %16, align 8, !tbaa !12, !alias.scope !13
  %49 = load i64, i64* %3, align 8, !tbaa !16, !noalias !13
  store i64 %49, i64* %17, align 8, !tbaa !11, !alias.scope !13
  br label %50

50:                                               ; preds = %48, %41
  %51 = load i8*, i8** %18, align 8, !tbaa !12, !alias.scope !13
  switch i64 %44, label %54 [
    i64 1, label %52
    i64 0, label %55
  ]

52:                                               ; preds = %50
  %53 = load i8, i8* %43, align 1, !tbaa !11
  store i8 %53, i8* %51, align 1, !tbaa !11
  br label %55

54:                                               ; preds = %50
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %43, i64 %44, i1 false) #6
  br label %55

55:                                               ; preds = %54, %52, %50
  %56 = load i64, i64* %3, align 8, !tbaa !16, !noalias !13
  store i64 %56, i64* %19, align 8, !tbaa !8, !alias.scope !13
  %57 = load i8*, i8** %18, align 8, !tbaa !12, !alias.scope !13
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6, !noalias !13
  %59 = load i64, i64* %19, align 8, !tbaa !8, !alias.scope !13
  %60 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %4, i64 %59, i64 0, i64 1, i8 signext %42)
          to label %67 unwind label %61

61:                                               ; preds = %55
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = load i8*, i8** %18, align 8, !tbaa !12, !alias.scope !13
  %64 = bitcast %union.anon* %13 to i8*
  %65 = icmp eq i8* %63, %64
  br i1 %65, label %104, label %66

66:                                               ; preds = %61
  call void @_ZdlPv(i8* %63) #6
  br label %104

67:                                               ; preds = %55
  %68 = load i8*, i8** %18, align 8, !tbaa !12
  %69 = icmp eq i8* %68, %20
  br i1 %69, label %70, label %83

70:                                               ; preds = %67
  %71 = load i64, i64* %19, align 8, !tbaa !8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %70
  %74 = load i8*, i8** %7, align 8, !tbaa !12
  %75 = icmp eq i64 %71, 1
  br i1 %75, label %76, label %78

76:                                               ; preds = %73
  %77 = load i8, i8* %68, align 1, !tbaa !11
  store i8 %77, i8* %74, align 1, !tbaa !11
  br label %79

78:                                               ; preds = %73
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %74, i8* align 1 %68, i64 %71, i1 false) #6
  br label %79

79:                                               ; preds = %78, %76, %70
  %80 = load i64, i64* %19, align 8, !tbaa !8
  store i64 %80, i64* %8, align 8, !tbaa !8
  %81 = load i8*, i8** %7, align 8, !tbaa !12
  %82 = getelementptr inbounds i8, i8* %81, i64 %80
  store i8 0, i8* %82, align 1, !tbaa !11
  br label %93

83:                                               ; preds = %67
  %84 = load i8*, i8** %7, align 8, !tbaa !12
  %85 = icmp eq i8* %84, %21
  %86 = load i64, i64* %22, align 8
  store i8* %68, i8** %7, align 8, !tbaa !12
  %87 = load i64, i64* %19, align 8, !tbaa !8
  store i64 %87, i64* %8, align 8, !tbaa !8
  %88 = load i64, i64* %23, align 8, !tbaa !11
  store i64 %88, i64* %22, align 8, !tbaa !11
  %89 = icmp eq i8* %84, null
  %90 = or i1 %85, %89
  br i1 %90, label %92, label %91

91:                                               ; preds = %83
  store i8* %84, i8** %18, align 8, !tbaa !12
  store i64 %86, i64* %24, align 8, !tbaa !11
  br label %93

92:                                               ; preds = %83
  store %union.anon* %13, %union.anon** %14, align 8, !tbaa !12
  br label %93

93:                                               ; preds = %79, %91, %92
  store i64 0, i64* %19, align 8, !tbaa !8
  %94 = load i8*, i8** %18, align 8, !tbaa !12
  store i8 0, i8* %94, align 1, !tbaa !11
  %95 = load i8*, i8** %18, align 8, !tbaa !12
  %96 = icmp eq i8* %95, %20
  br i1 %96, label %98, label %97

97:                                               ; preds = %93
  call void @_ZdlPv(i8* %95) #6
  br label %98

98:                                               ; preds = %93, %97
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #6
  %99 = add nuw i64 %28, 1
  %100 = load i64, i64* %10, align 8, !tbaa !8
  %101 = icmp ugt i64 %100, %99
  br i1 %101, label %27, label %111, !llvm.loop !17

102:                                              ; preds = %46
  %103 = landingpad { i8*, i32 }
          cleanup
  br label %104

104:                                              ; preds = %61, %66, %102
  %105 = phi { i8*, i32 } [ %103, %102 ], [ %62, %66 ], [ %62, %61 ]
  %106 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %106) #6
  %107 = load i8*, i8** %7, align 8, !tbaa !12
  %108 = bitcast %union.anon* %5 to i8*
  %109 = icmp eq i8* %107, %108
  br i1 %109, label %112, label %110

110:                                              ; preds = %104
  call void @_ZdlPv(i8* %107) #6
  br label %112

111:                                              ; preds = %98, %2
  ret void

112:                                              ; preds = %110, %104
  resume { i8*, i32 } %105
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #3

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #5

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!15 = distinct !{!15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!16 = !{!10, !10, i64 0}
!17 = distinct !{!17, !18, !19}
!18 = !{!"llvm.loop.mustprogress"}
!19 = !{!"llvm.loop.unroll.disable"}
