; ModuleID = '../../Human_xBenchmarks_164/CPP_5/CPP_5.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_5/CPP_5.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }

$_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_ = comdat any

@.str = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z11intersperseSt6vectorIiSaIiEEi(%"class.std::vector"* noalias sret(%"class.std::vector") align 8 %0, %"class.std::vector"* nocapture readonly %1, i32 %2) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i32, align 4
  store i32 %2, i32* %4, align 4, !tbaa !3
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  %7 = load i32*, i32** %5, align 8, !tbaa !7
  %8 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8, !tbaa !10
  %10 = icmp eq i32* %7, %9
  br i1 %10, label %23, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8, !tbaa !7
  %14 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32*, i32** %14, align 8, !tbaa !11
  %16 = icmp eq i32* %13, %15
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = load i32, i32* %9, align 4, !tbaa !3
  store i32 %18, i32* %13, align 4, !tbaa !3
  %19 = getelementptr inbounds i32, i32* %13, i64 1
  store i32* %19, i32** %12, align 8, !tbaa !7
  br label %23

20:                                               ; preds = %11
  invoke void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, i32* %13, i32* nonnull align 4 dereferenceable(4) %9)
          to label %23 unwind label %21

21:                                               ; preds = %20
  %22 = landingpad { i8*, i32 }
          cleanup
  br label %64

23:                                               ; preds = %17, %20, %3
  %24 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %26 = load i32*, i32** %5, align 8, !tbaa !7
  %27 = load i32*, i32** %8, align 8, !tbaa !10
  %28 = ptrtoint i32* %26 to i64
  %29 = ptrtoint i32* %27 to i64
  %30 = sub i64 %28, %29
  %31 = ashr exact i64 %30, 2
  %32 = icmp ugt i64 %31, 1
  br i1 %32, label %33, label %63

33:                                               ; preds = %23, %52
  %34 = phi i64 [ %53, %52 ], [ 1, %23 ]
  %35 = load i32*, i32** %24, align 8, !tbaa !7
  %36 = load i32*, i32** %25, align 8, !tbaa !11
  %37 = icmp eq i32* %35, %36
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  %39 = load i32, i32* %4, align 4, !tbaa !3
  store i32 %39, i32* %35, align 4, !tbaa !3
  %40 = getelementptr inbounds i32, i32* %35, i64 1
  store i32* %40, i32** %24, align 8, !tbaa !7
  br label %42

41:                                               ; preds = %33
  invoke void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, i32* %35, i32* nonnull align 4 dereferenceable(4) %4)
          to label %42 unwind label %61

42:                                               ; preds = %38, %41
  %43 = load i32*, i32** %8, align 8, !tbaa !10
  %44 = getelementptr inbounds i32, i32* %43, i64 %34
  %45 = load i32*, i32** %24, align 8, !tbaa !7
  %46 = load i32*, i32** %25, align 8, !tbaa !11
  %47 = icmp eq i32* %45, %46
  br i1 %47, label %51, label %48

48:                                               ; preds = %42
  %49 = load i32, i32* %44, align 4, !tbaa !3
  store i32 %49, i32* %45, align 4, !tbaa !3
  %50 = getelementptr inbounds i32, i32* %45, i64 1
  store i32* %50, i32** %24, align 8, !tbaa !7
  br label %52

51:                                               ; preds = %42
  invoke void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, i32* %45, i32* nonnull align 4 dereferenceable(4) %44)
          to label %52 unwind label %61

52:                                               ; preds = %48, %51
  %53 = add nuw i64 %34, 1
  %54 = load i32*, i32** %5, align 8, !tbaa !7
  %55 = load i32*, i32** %8, align 8, !tbaa !10
  %56 = ptrtoint i32* %54 to i64
  %57 = ptrtoint i32* %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 2
  %60 = icmp ugt i64 %59, %53
  br i1 %60, label %33, label %63, !llvm.loop !12

61:                                               ; preds = %51, %41
  %62 = landingpad { i8*, i32 }
          cleanup
  br label %64

63:                                               ; preds = %52, %23
  ret void

64:                                               ; preds = %61, %21
  %65 = phi { i8*, i32 } [ %62, %61 ], [ %22, %21 ]
  %66 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i32*, i32** %66, align 8, !tbaa !10
  %68 = icmp eq i32* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %64
  %70 = bitcast i32* %67 to i8*
  call void @_ZdlPv(i8* nonnull %70) #6
  br label %71

71:                                               ; preds = %64, %69
  resume { i8*, i32 } %65
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, i32* %1, i32* nonnull align 4 dereferenceable(4) %2) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8, !tbaa !7
  %6 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8, !tbaa !10
  %8 = ptrtoint i32* %5 to i64
  %9 = ptrtoint i32* %7 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 2
  %12 = icmp eq i64 %10, 9223372036854775804
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0)) #7
  unreachable

14:                                               ; preds = %3
  %15 = icmp eq i64 %10, 0
  %16 = select i1 %15, i64 1, i64 %11
  %17 = add nsw i64 %16, %11
  %18 = icmp ult i64 %17, %11
  %19 = icmp ugt i64 %17, 2305843009213693951
  %20 = or i1 %18, %19
  %21 = select i1 %20, i64 2305843009213693951, i64 %17
  %22 = ptrtoint i32* %1 to i64
  %23 = sub i64 %22, %9
  %24 = ashr exact i64 %23, 2
  %25 = icmp eq i64 %21, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %14
  %27 = icmp ugt i64 %21, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  call void @_ZSt17__throw_bad_allocv() #7
  unreachable

29:                                               ; preds = %26
  %30 = shl i64 %21, 2
  %31 = call noalias nonnull i8* @_Znwm(i64 %30) #8
  %32 = bitcast i8* %31 to i32*
  br label %33

33:                                               ; preds = %14, %29
  %34 = phi i32* [ %32, %29 ], [ null, %14 ]
  %35 = getelementptr inbounds i32, i32* %34, i64 %24
  %36 = load i32, i32* %2, align 4, !tbaa !3
  store i32 %36, i32* %35, align 4, !tbaa !3
  %37 = icmp sgt i64 %23, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = bitcast i32* %34 to i8*
  %40 = bitcast i32* %7 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 %23, i1 false) #6
  br label %41

41:                                               ; preds = %33, %38
  %42 = getelementptr inbounds i32, i32* %35, i64 1
  %43 = sub i64 %8, %22
  %44 = icmp sgt i64 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = bitcast i32* %42 to i8*
  %47 = bitcast i32* %1 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %46, i8* align 4 %47, i64 %43, i1 false) #6
  br label %48

48:                                               ; preds = %41, %45
  %49 = icmp eq i32* %7, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %48
  %51 = bitcast i32* %7 to i8*
  call void @_ZdlPv(i8* nonnull %51) #6
  br label %52

52:                                               ; preds = %48, %50
  %53 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %54 = ashr exact i64 %43, 2
  %55 = getelementptr inbounds i32, i32* %42, i64 %54
  store i32* %34, i32** %6, align 8, !tbaa !10
  store i32* %55, i32** %4, align 8, !tbaa !7
  %56 = getelementptr inbounds i32, i32* %34, i64 %21
  store i32* %56, i32** %53, align 8, !tbaa !11
  ret void
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #3

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #3

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #6 = { nounwind }
attributes #7 = { noreturn }
attributes #8 = { allocsize(0) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"int", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !9, i64 8}
!8 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !9, i64 0, !9, i64 8, !9, i64 16}
!9 = !{!"any pointer", !5, i64 0}
!10 = !{!8, !9, i64 0}
!11 = !{!8, !9, i64 16}
!12 = distinct !{!12, !13, !14}
!13 = !{!"llvm.loop.mustprogress"}
!14 = !{!"llvm.loop.unroll.disable"}
