digraph "CFG for '_Z11sum_productSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z11sum_productSt6vectorIiSaIiEE' function";

	Node0x5605e51b1170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = load i32*, i32** %3, align 8, !tbaa !3\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %6 = load i32*, i32** %5, align 8, !tbaa !8\l  %7 = ptrtoint i32* %4 to i64\l  %8 = ptrtoint i32* %6 to i64\l  %9 = sub i64 %7, %8\l  %10 = icmp eq i64 %9, 0\l  br i1 %10, label %14, label %11\l|{<s0>T|<s1>F}}"];
	Node0x5605e51b1170:s0 -> Node0x5605e51b2500;
	Node0x5605e51b1170:s1 -> Node0x5605e51b2ab0;
	Node0x5605e51b2ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%11:\l11:                                               \l  %12 = ashr exact i64 %9, 2\l  %13 = call i64 @llvm.umax.i64(i64 %12, i64 1)\l  br label %36\l}"];
	Node0x5605e51b2ab0 -> Node0x5605e51b2f20;
	Node0x5605e51b2500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%14:\l14:                                               \l  %15 = phi i32 [ 1, %2 ], [ %43, %36 ]\l  %16 = phi i32 [ 0, %2 ], [ %42, %36 ]\l  %17 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %17, i8 0, i64 24, i1 false) #5\l  %18 = invoke noalias nonnull i8* @_Znwm(i64 8) #6\l          to label %26 unwind label %19\l}"];
	Node0x5605e51b2500 -> Node0x5605e51b3570;
	Node0x5605e51b2500 -> Node0x5605e51b3600;
	Node0x5605e51b3600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%19:\l19:                                               \l  %20 = landingpad \{ i8*, i32 \}\l          cleanup\l  %21 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %22 = load i32*, i32** %21, align 8, !tbaa !8\l  %23 = icmp eq i32* %22, null\l  br i1 %23, label %46, label %24\l|{<s0>T|<s1>F}}"];
	Node0x5605e51b3600:s0 -> Node0x5605e51b4320;
	Node0x5605e51b3600:s1 -> Node0x5605e51b4370;
	Node0x5605e51b4370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%24:\l24:                                               \l  %25 = bitcast i32* %22 to i8*\l  call void @_ZdlPv(i8* nonnull %25) #5\l  br label %46\l}"];
	Node0x5605e51b4370 -> Node0x5605e51b4320;
	Node0x5605e51b3570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%26:\l26:                                               \l  %27 = bitcast i8* %18 to i32*\l  %28 = bitcast %\"class.std::vector\"* %0 to i8**\l  store i8* %18, i8** %28, align 8, !tbaa !8\l  %29 = getelementptr inbounds i8, i8* %18, i64 8\l  %30 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %31 = bitcast i32** %30 to i8**\l  store i8* %29, i8** %31, align 8, !tbaa !9\l  store i32 %16, i32* %27, align 4\l  %32 = getelementptr inbounds i8, i8* %18, i64 4\l  %33 = bitcast i8* %32 to i32*\l  store i32 %15, i32* %33, align 4\l  %34 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %35 = bitcast i32** %34 to i8**\l  store i8* %29, i8** %35, align 8, !tbaa !3\l  ret void\l}"];
	Node0x5605e51b2f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = phi i64 [ 0, %11 ], [ %44, %36 ]\l  %38 = phi i32 [ 0, %11 ], [ %42, %36 ]\l  %39 = phi i32 [ 1, %11 ], [ %43, %36 ]\l  %40 = getelementptr inbounds i32, i32* %6, i64 %37\l  %41 = load i32, i32* %40, align 4, !tbaa !10\l  %42 = add nsw i32 %41, %38\l  %43 = mul nsw i32 %41, %39\l  %44 = add nuw nsw i64 %37, 1\l  %45 = icmp eq i64 %44, %13\l  br i1 %45, label %14, label %36, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5605e51b2f20:s0 -> Node0x5605e51b2500;
	Node0x5605e51b2f20:s1 -> Node0x5605e51b2f20;
	Node0x5605e51b4320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%46:\l46:                                               \l  resume \{ i8*, i32 \} %20\l}"];
}
