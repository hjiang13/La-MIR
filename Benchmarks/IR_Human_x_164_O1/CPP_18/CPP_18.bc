; ModuleID = '../../Human_xBenchmarks_164/CPP_18/CPP_18.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_18/CPP_18.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@.str = private unnamed_addr constant [21 x i8] c"basic_string::substr\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"%s: __pos (which is %zu) > this->size() (which is %zu)\00", align 1

; Function Attrs: uwtable
define dso_local i32 @_Z14how_many_timesNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_(%"class.std::__cxx11::basic_string"* nocapture readonly %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i32 (...)* @__gxx_personality_v0 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8, !tbaa !3
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %73, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %12 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %14 = bitcast i64* %3 to i8*
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %20 = bitcast %union.anon* %11 to i8*
  %21 = load i64, i64* %5, align 8, !tbaa !3
  %22 = load i64, i64* %9, align 8, !tbaa !3
  br label %23

23:                                               ; preds = %8, %65
  %24 = phi i64 [ 0, %8 ], [ %68, %65 ]
  %25 = phi i64 [ %22, %8 ], [ %70, %65 ]
  %26 = phi i64 [ %21, %8 ], [ %69, %65 ]
  %27 = phi i32 [ 0, %8 ], [ %67, %65 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8
  call void @llvm.experimental.noalias.scope.decl(metadata !10)
  %28 = icmp ult i64 %26, %24
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = and i64 %24, 4294967295
  call void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 %30, i64 %26) #9, !noalias !10
  unreachable

31:                                               ; preds = %23
  store %union.anon* %11, %union.anon** %12, align 8, !tbaa !13, !alias.scope !10
  %32 = load i8*, i8** %13, align 8, !tbaa !14, !noalias !10
  %33 = getelementptr inbounds i8, i8* %32, i64 %24
  %34 = sub i64 %26, %24
  %35 = icmp ugt i64 %34, %25
  %36 = select i1 %35, i64 %25, i64 %34
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8, !noalias !10
  store i64 %36, i64* %3, align 8, !tbaa !15, !noalias !10
  %37 = icmp ugt i64 %36, 15
  br i1 %37, label %38, label %41

38:                                               ; preds = %31
  %39 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %4, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
  store i8* %39, i8** %15, align 8, !tbaa !14, !alias.scope !10
  %40 = load i64, i64* %3, align 8, !tbaa !15, !noalias !10
  store i64 %40, i64* %16, align 8, !tbaa !16, !alias.scope !10
  br label %41

41:                                               ; preds = %38, %31
  %42 = load i8*, i8** %17, align 8, !tbaa !14, !alias.scope !10
  switch i64 %36, label %45 [
    i64 1, label %43
    i64 0, label %46
  ]

43:                                               ; preds = %41
  %44 = load i8, i8* %33, align 1, !tbaa !16
  store i8 %44, i8* %42, align 1, !tbaa !16
  br label %46

45:                                               ; preds = %41
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 1 %33, i64 %36, i1 false) #8
  br label %46

46:                                               ; preds = %41, %43, %45
  %47 = load i64, i64* %3, align 8, !tbaa !15, !noalias !10
  store i64 %47, i64* %18, align 8, !tbaa !3, !alias.scope !10
  %48 = load i8*, i8** %17, align 8, !tbaa !14, !alias.scope !10
  %49 = getelementptr inbounds i8, i8* %48, i64 %47
  store i8 0, i8* %49, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8, !noalias !10
  %50 = load i64, i64* %18, align 8, !tbaa !3
  %51 = load i64, i64* %9, align 8, !tbaa !3
  %52 = icmp eq i64 %50, %51
  br i1 %52, label %53, label %60

53:                                               ; preds = %46
  %54 = icmp eq i64 %50, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %53
  %56 = load i8*, i8** %19, align 8, !tbaa !14
  %57 = load i8*, i8** %17, align 8, !tbaa !14
  %58 = call i32 @bcmp(i8* %57, i8* %56, i64 %50) #8
  %59 = icmp eq i32 %58, 0
  br label %60

60:                                               ; preds = %46, %53, %55
  %61 = phi i1 [ false, %46 ], [ %59, %55 ], [ true, %53 ]
  %62 = load i8*, i8** %17, align 8, !tbaa !14
  %63 = icmp eq i8* %62, %20
  br i1 %63, label %65, label %64

64:                                               ; preds = %60
  call void @_ZdlPv(i8* %62) #8
  br label %65

65:                                               ; preds = %60, %64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8
  %66 = zext i1 %61 to i32
  %67 = add nuw nsw i32 %27, %66
  %68 = add i64 %24, 1
  %69 = load i64, i64* %5, align 8, !tbaa !3
  %70 = load i64, i64* %9, align 8, !tbaa !3
  %71 = sub i64 %69, %70
  %72 = icmp ult i64 %71, %68
  br i1 %72, label %73, label %23, !llvm.loop !17

73:                                               ; preds = %65, %2
  %74 = phi i32 [ 0, %2 ], [ %67, %65 ]
  ret i32 %74
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare dso_local void @_ZSt24__throw_out_of_range_fmtPKcz(i8*, ...) local_unnamed_addr #3

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #7

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #6 = { argmemonly nofree nounwind readonly willreturn }
attributes #7 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #8 = { nounwind }
attributes #9 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!12 = distinct !{!12, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!13 = !{!5, !6, i64 0}
!14 = !{!4, !6, i64 0}
!15 = !{!9, !9, i64 0}
!16 = !{!7, !7, i64 0}
!17 = distinct !{!17, !18, !19}
!18 = !{!"llvm.loop.mustprogress"}
!19 = !{!"llvm.loop.unroll.disable"}
