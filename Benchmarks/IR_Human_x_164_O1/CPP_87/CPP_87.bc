; ModuleID = '../../Human_xBenchmarks_164/CPP_87/CPP_87.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_87/CPP_87.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::vector<int>, std::allocator<std::vector<int>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<int>, std::allocator<std::vector<int>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<int>, std::allocator<std::vector<int>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<int>, std::allocator<std::vector<int>>>::_Vector_impl_data" = type { %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"* }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }

$_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ = comdat any

@.str = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z7get_rowSt6vectorIS_IiSaIiEESaIS1_EEi(%"class.std::vector"* noalias sret(%"class.std::vector") align 8 %0, %"class.std::vector"* nocapture readonly %1, i32 %2) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.0", align 8
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.std::vector.0"* %4 to i8*
  %8 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.std::vector.0"* %4 to i8**
  %10 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = bitcast i32** %10 to i8**
  %12 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i8**
  %14 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %16 = bitcast %"class.std::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %16, i8 0, i64 24, i1 false)
  %17 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8, !tbaa !3
  %18 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8, !tbaa !8
  %19 = icmp eq %"class.std::vector.0"* %17, %18
  br i1 %19, label %100, label %20

20:                                               ; preds = %3, %37
  %21 = phi i64 [ %38, %37 ], [ 0, %3 ]
  %22 = phi %"class.std::vector.0"* [ %40, %37 ], [ %18, %3 ]
  %23 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %22, i64 %21, i32 0, i32 0, i32 0, i32 1
  %24 = load i32*, i32** %23, align 8, !tbaa !9
  %25 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %22, i64 %21, i32 0, i32 0, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8, !tbaa !11
  %27 = ptrtoint i32* %24 to i64
  %28 = ptrtoint i32* %26 to i64
  %29 = sub i64 %27, %28
  %30 = lshr exact i64 %29, 2
  %31 = trunc i64 %30 to i32
  %32 = add i32 %31, -1
  %33 = icmp sgt i32 %32, -1
  br i1 %33, label %34, label %37

34:                                               ; preds = %20
  %35 = sext i32 %32 to i64
  %36 = trunc i64 %21 to i32
  br label %46

37:                                               ; preds = %96, %20
  %38 = add nuw i64 %21, 1
  %39 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8, !tbaa !3
  %40 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8, !tbaa !8
  %41 = ptrtoint %"class.std::vector.0"* %39 to i64
  %42 = ptrtoint %"class.std::vector.0"* %40 to i64
  %43 = sub i64 %41, %42
  %44 = sdiv exact i64 %43, 24
  %45 = icmp ugt i64 %44, %38
  br i1 %45, label %20, label %100, !llvm.loop !12

46:                                               ; preds = %34, %96
  %47 = phi i64 [ %35, %34 ], [ %99, %96 ]
  %48 = phi i32 [ %32, %34 ], [ %97, %96 ]
  %49 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8, !tbaa !8
  %50 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %49, i64 %21, i32 0, i32 0, i32 0, i32 0
  %51 = load i32*, i32** %50, align 8, !tbaa !11
  %52 = getelementptr inbounds i32, i32* %51, i64 %47
  %53 = load i32, i32* %52, align 4, !tbaa !15
  %54 = icmp eq i32 %53, %2
  br i1 %54, label %55, label %96

55:                                               ; preds = %46
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #7
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false) #7
  %56 = invoke noalias nonnull i8* @_Znwm(i64 8) #8
          to label %62 unwind label %57

57:                                               ; preds = %55
  %58 = landingpad { i8*, i32 }
          cleanup
  %59 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !tbaa !11
  %61 = icmp eq i32* %60, null
  br i1 %61, label %93, label %89

62:                                               ; preds = %55
  %63 = bitcast i8* %56 to i32*
  store i8* %56, i8** %9, align 8, !tbaa !11
  %64 = getelementptr inbounds i8, i8* %56, i64 8
  store i8* %64, i8** %11, align 8, !tbaa !17
  store i32 %36, i32* %63, align 4
  %65 = getelementptr inbounds i8, i8* %56, i64 4
  %66 = bitcast i8* %65 to i32*
  %67 = trunc i64 %47 to i32
  store i32 %67, i32* %66, align 4
  store i8* %64, i8** %13, align 8, !tbaa !9
  %68 = load %"class.std::vector.0"*, %"class.std::vector.0"** %14, align 8, !tbaa !3
  %69 = load %"class.std::vector.0"*, %"class.std::vector.0"** %15, align 8, !tbaa !18
  %70 = icmp eq %"class.std::vector.0"* %68, %69
  br i1 %70, label %78, label %71

71:                                               ; preds = %62
  %72 = bitcast %"class.std::vector.0"* %68 to i8**
  store i8* %56, i8** %72, align 8, !tbaa !11
  %73 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %68, i64 0, i32 0, i32 0, i32 0, i32 1
  %74 = bitcast i32** %73 to i8**
  store i8* %64, i8** %74, align 8, !tbaa !9
  %75 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %68, i64 0, i32 0, i32 0, i32 0, i32 2
  %76 = bitcast i32** %75 to i8**
  store i8* %64, i8** %76, align 8, !tbaa !17
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false) #7
  %77 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %68, i64 1
  store %"class.std::vector.0"* %77, %"class.std::vector.0"** %14, align 8, !tbaa !3
  br label %79

78:                                               ; preds = %62
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %"class.std::vector.0"* %68, %"class.std::vector.0"* nonnull align 8 dereferenceable(24) %4)
          to label %79 unwind label %85

79:                                               ; preds = %71, %78
  %80 = load i32*, i32** %8, align 8, !tbaa !11
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  call void @_ZdlPv(i8* nonnull %83) #7
  br label %84

84:                                               ; preds = %79, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #7
  br label %96

85:                                               ; preds = %78
  %86 = landingpad { i8*, i32 }
          cleanup
  %87 = load i32*, i32** %8, align 8, !tbaa !11
  %88 = icmp eq i32* %87, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %85, %57
  %90 = phi i32* [ %60, %57 ], [ %87, %85 ]
  %91 = phi { i8*, i32 } [ %58, %57 ], [ %86, %85 ]
  %92 = bitcast i32* %90 to i8*
  call void @_ZdlPv(i8* nonnull %92) #7
  br label %93

93:                                               ; preds = %89, %85, %57
  %94 = phi { i8*, i32 } [ %58, %57 ], [ %86, %85 ], [ %91, %89 ]
  %95 = bitcast %"class.std::vector.0"* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #7
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #7
  resume { i8*, i32 } %94

96:                                               ; preds = %46, %84
  %97 = add i32 %48, -1
  %98 = icmp sgt i32 %97, -1
  %99 = add nsw i64 %47, -1
  br i1 %98, label %46, label %37, !llvm.loop !19

100:                                              ; preds = %37, %3
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8, !tbaa !3
  %6 = icmp eq %"class.std::vector.0"* %3, %5
  br i1 %6, label %17, label %7

7:                                                ; preds = %1, %14
  %8 = phi %"class.std::vector.0"* [ %15, %14 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8, !tbaa !11
  %11 = icmp eq i32* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %7
  %13 = bitcast i32* %10 to i8*
  call void @_ZdlPv(i8* nonnull %13) #7
  br label %14

14:                                               ; preds = %12, %7
  %15 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %8, i64 1
  %16 = icmp eq %"class.std::vector.0"* %15, %5
  br i1 %16, label %17, label %7, !llvm.loop !20

17:                                               ; preds = %14, %1
  %18 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::vector.0"*, %"class.std::vector.0"** %18, align 8, !tbaa !8
  %20 = icmp eq %"class.std::vector.0"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.std::vector.0"* %19 to i8*
  call void @_ZdlPv(i8* nonnull %22) #7
  br label %23

23:                                               ; preds = %17, %21
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %"class.std::vector.0"* %1, %"class.std::vector.0"* nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8, !tbaa !3
  %6 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8, !tbaa !8
  %8 = ptrtoint %"class.std::vector.0"* %5 to i64
  %9 = ptrtoint %"class.std::vector.0"* %7 to i64
  %10 = sub i64 %8, %9
  %11 = sdiv exact i64 %10, 24
  %12 = icmp eq i64 %10, 9223372036854775800
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0)) #9
  unreachable

14:                                               ; preds = %3
  %15 = icmp eq i64 %10, 0
  %16 = select i1 %15, i64 1, i64 %11
  %17 = add nsw i64 %16, %11
  %18 = icmp ult i64 %17, %11
  %19 = icmp ugt i64 %17, 384307168202282325
  %20 = or i1 %18, %19
  %21 = select i1 %20, i64 384307168202282325, i64 %17
  %22 = ptrtoint %"class.std::vector.0"* %1 to i64
  %23 = sub i64 %22, %9
  %24 = sdiv exact i64 %23, 24
  %25 = icmp ugt i64 %21, 384307168202282325
  br i1 %25, label %26, label %27

26:                                               ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #9
  unreachable

27:                                               ; preds = %14
  %28 = mul i64 %21, 24
  %29 = call noalias nonnull i8* @_Znwm(i64 %28) #8
  %30 = bitcast i8* %29 to %"class.std::vector.0"*
  %31 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %30, i64 %24, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8, !tbaa !11
  store i32* %33, i32** %31, align 8, !tbaa !11
  %34 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %30, i64 %24, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i32*, i32** %35, align 8, !tbaa !9
  store i32* %36, i32** %34, align 8, !tbaa !9
  %37 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %30, i64 %24, i32 0, i32 0, i32 0, i32 2
  %38 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %39 = load i32*, i32** %38, align 8, !tbaa !17
  store i32* %39, i32** %37, align 8, !tbaa !17
  %40 = bitcast %"class.std::vector.0"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %40, i8 0, i64 24, i1 false) #7
  %41 = icmp eq %"class.std::vector.0"* %7, %1
  br i1 %41, label %63, label %42

42:                                               ; preds = %27, %59
  %43 = phi %"class.std::vector.0"* [ %61, %59 ], [ %30, %27 ]
  %44 = phi %"class.std::vector.0"* [ %60, %59 ], [ %7, %27 ]
  %45 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8, !tbaa !11
  store i32* %47, i32** %45, align 8, !tbaa !11
  %48 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %43, i64 0, i32 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %44, i64 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i32*, i32** %49, align 8, !tbaa !9
  store i32* %50, i32** %48, align 8, !tbaa !9
  %51 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %43, i64 0, i32 0, i32 0, i32 0, i32 2
  %52 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %44, i64 0, i32 0, i32 0, i32 0, i32 2
  %53 = load i32*, i32** %52, align 8, !tbaa !17
  store i32* %53, i32** %51, align 8, !tbaa !17
  %54 = bitcast %"class.std::vector.0"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %54, i8 0, i64 24, i1 false) #7
  %55 = load i32*, i32** %46, align 8, !tbaa !11
  %56 = icmp eq i32* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %42
  %58 = bitcast i32* %55 to i8*
  call void @_ZdlPv(i8* nonnull %58) #7
  br label %59

59:                                               ; preds = %57, %42
  %60 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %44, i64 1
  %61 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %43, i64 1
  %62 = icmp eq %"class.std::vector.0"* %60, %1
  br i1 %62, label %63, label %42, !llvm.loop !21

63:                                               ; preds = %59, %27
  %64 = phi %"class.std::vector.0"* [ %30, %27 ], [ %61, %59 ]
  %65 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %64, i64 1
  %66 = icmp eq %"class.std::vector.0"* %5, %1
  br i1 %66, label %88, label %67

67:                                               ; preds = %63, %84
  %68 = phi %"class.std::vector.0"* [ %86, %84 ], [ %65, %63 ]
  %69 = phi %"class.std::vector.0"* [ %85, %84 ], [ %1, %63 ]
  %70 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %69, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8, !tbaa !11
  store i32* %72, i32** %70, align 8, !tbaa !11
  %73 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %68, i64 0, i32 0, i32 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %69, i64 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i32*, i32** %74, align 8, !tbaa !9
  store i32* %75, i32** %73, align 8, !tbaa !9
  %76 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %68, i64 0, i32 0, i32 0, i32 0, i32 2
  %77 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %69, i64 0, i32 0, i32 0, i32 0, i32 2
  %78 = load i32*, i32** %77, align 8, !tbaa !17
  store i32* %78, i32** %76, align 8, !tbaa !17
  %79 = bitcast %"class.std::vector.0"* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %79, i8 0, i64 24, i1 false) #7
  %80 = load i32*, i32** %71, align 8, !tbaa !11
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %67
  %83 = bitcast i32* %80 to i8*
  call void @_ZdlPv(i8* nonnull %83) #7
  br label %84

84:                                               ; preds = %82, %67
  %85 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %69, i64 1
  %86 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %68, i64 1
  %87 = icmp eq %"class.std::vector.0"* %85, %5
  br i1 %87, label %88, label %67, !llvm.loop !21

88:                                               ; preds = %84, %63
  %89 = phi %"class.std::vector.0"* [ %65, %63 ], [ %86, %84 ]
  %90 = icmp eq %"class.std::vector.0"* %7, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %88
  %92 = bitcast %"class.std::vector.0"* %7 to i8*
  call void @_ZdlPv(i8* nonnull %92) #7
  br label %93

93:                                               ; preds = %88, %91
  %94 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %95 = bitcast %"class.std::vector"* %0 to i8**
  store i8* %29, i8** %95, align 8, !tbaa !8
  store %"class.std::vector.0"* %89, %"class.std::vector.0"** %4, align 8, !tbaa !3
  %96 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %30, i64 %21
  store %"class.std::vector.0"* %96, %"class.std::vector.0"** %94, align 8, !tbaa !18
  ret void
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #5

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #6

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #2 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #3 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nounwind }
attributes #8 = { allocsize(0) }
attributes #9 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 8}
!4 = !{!"_ZTSNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!4, !5, i64 0}
!9 = !{!10, !5, i64 8}
!10 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!11 = !{!10, !5, i64 0}
!12 = distinct !{!12, !13, !14}
!13 = !{!"llvm.loop.mustprogress"}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = !{!16, !16, i64 0}
!16 = !{!"int", !6, i64 0}
!17 = !{!10, !5, i64 16}
!18 = !{!4, !5, i64 16}
!19 = distinct !{!19, !13, !14}
!20 = distinct !{!20, !13, !14}
!21 = distinct !{!21, !13, !14}
