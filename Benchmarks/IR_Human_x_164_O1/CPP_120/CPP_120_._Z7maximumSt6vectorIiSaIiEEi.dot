digraph "CFG for '_Z7maximumSt6vectorIiSaIiEEi' function" {
	label="CFG for '_Z7maximumSt6vectorIiSaIiEEi' function";

	Node0x5605b3a4f570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = load i32*, i32** %4, align 8, !tbaa !3\l  %6 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %7 = load i32*, i32** %6, align 8, !tbaa !3\l  %8 = icmp eq i32* %5, %7\l  br i1 %8, label %17, label %9\l|{<s0>T|<s1>F}}"];
	Node0x5605b3a4f570:s0 -> Node0x5605b3a4fd60;
	Node0x5605b3a4f570:s1 -> Node0x5605b3a511f0;
	Node0x5605b3a511f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%9:\l9:                                                \l  %10 = ptrtoint i32* %7 to i64\l  %11 = ptrtoint i32* %5 to i64\l  %12 = sub i64 %10, %11\l  %13 = ashr exact i64 %12, 2\l  %14 = call i64 @llvm.ctlz.i64(i64 %13, i1 true) #7, !range !7\l  %15 = shl nuw nsw i64 %14, 1\l  %16 = xor i64 %15, 126\l  call void\l... @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElN\l...S0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i32* %5, i32* %7, i64 %16)\l  call void\l... @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIi\l...EEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* %5, i32* %7)\l  br label %17\l}"];
	Node0x5605b3a511f0 -> Node0x5605b3a4fd60;
	Node0x5605b3a4fd60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = load i32*, i32** %6, align 8, !tbaa !3\l  %19 = sext i32 %2 to i64\l  %20 = sub nsw i64 0, %19\l  %21 = getelementptr inbounds i32, i32* %18, i64 %20\l  %22 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %22, i8 0, i64 24, i1 false) #7\l  %23 = shl nsw i64 %19, 2\l  %24 = icmp slt i32 %2, 0\l  br i1 %24, label %25, label %27\l|{<s0>T|<s1>F}}"];
	Node0x5605b3a4fd60:s0 -> Node0x5605b3a526b0;
	Node0x5605b3a4fd60:s1 -> Node0x5605b3a52700;
	Node0x5605b3a526b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%25:\l25:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x\l... i8], [49 x i8]* @.str, i64 0, i64 0)) #8\l          to label %26 unwind label %41\l}"];
	Node0x5605b3a526b0 -> Node0x5605b3a528d0;
	Node0x5605b3a526b0 -> Node0x5605b3a52920;
	Node0x5605b3a528d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4f69d970",label="{%26:\l26:                                               \l  unreachable\l}"];
	Node0x5605b3a52700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = icmp eq i32 %2, 0\l  br i1 %28, label %33, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5605b3a52700:s0 -> Node0x5605b3a52c50;
	Node0x5605b3a52700:s1 -> Node0x5605b3a52ca0;
	Node0x5605b3a52ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%29:\l29:                                               \l  %30 = invoke noalias nonnull i8* @_Znwm(i64 %23) #9\l          to label %31 unwind label %41\l}"];
	Node0x5605b3a52ca0 -> Node0x5605b3a52da0;
	Node0x5605b3a52ca0 -> Node0x5605b3a52920;
	Node0x5605b3a52da0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%31:\l31:                                               \l  %32 = bitcast i8* %30 to i32*\l  br label %33\l}"];
	Node0x5605b3a52da0 -> Node0x5605b3a52c50;
	Node0x5605b3a52c50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i32* [ %32, %31 ], [ null, %27 ]\l  %35 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  store i32* %34, i32** %35, align 8, !tbaa !8\l  %36 = getelementptr inbounds i32, i32* %34, i64 %19\l  %37 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  store i32* %36, i32** %37, align 8, !tbaa !10\l  br i1 %28, label %48, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5605b3a52c50:s0 -> Node0x5605b3a538b0;
	Node0x5605b3a52c50:s1 -> Node0x5605b3a53940;
	Node0x5605b3a53940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%38:\l38:                                               \l  %39 = bitcast i32* %34 to i8*\l  %40 = bitcast i32* %21 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64\l... %23, i1 false) #7\l  br label %48\l}"];
	Node0x5605b3a53940 -> Node0x5605b3a538b0;
	Node0x5605b3a52920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%41:\l41:                                               \l  %42 = landingpad \{ i8*, i32 \}\l          cleanup\l  %43 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %44 = load i32*, i32** %43, align 8, !tbaa !8\l  %45 = icmp eq i32* %44, null\l  br i1 %45, label %50, label %46\l|{<s0>T|<s1>F}}"];
	Node0x5605b3a52920:s0 -> Node0x5605b3a54990;
	Node0x5605b3a52920:s1 -> Node0x5605b3a549e0;
	Node0x5605b3a549e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%46:\l46:                                               \l  %47 = bitcast i32* %44 to i8*\l  call void @_ZdlPv(i8* nonnull %47) #7\l  br label %50\l}"];
	Node0x5605b3a549e0 -> Node0x5605b3a54990;
	Node0x5605b3a538b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  store i32* %36, i32** %49, align 8, !tbaa !11\l  ret void\l}"];
	Node0x5605b3a54990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%50:\l50:                                               \l  resume \{ i8*, i32 \} %42\l}"];
}
