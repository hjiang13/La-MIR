digraph "CFG for '_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_' function" {
	label="CFG for '_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_' function";

	Node0x5635737c4430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%3:\l  %4 = ptrtoint float* %0 to i64\l  %5 = getelementptr inbounds float, float* %0, i64 1\l  %6 = ptrtoint float* %1 to i64\l  %7 = sub i64 %6, %4\l  %8 = icmp sgt i64 %7, 64\l  br i1 %8, label %9, label %182\l|{<s0>T|<s1>F}}"];
	Node0x5635737c4430:s0 -> Node0x5635737c4530;
	Node0x5635737c4430:s1 -> Node0x5635737c47b0;
	Node0x5635737c4530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%9:\l9:                                                \l  %10 = phi i64 [ %180, %178 ], [ %7, %3 ]\l  %11 = phi i64 [ %134, %178 ], [ %2, %3 ]\l  %12 = phi float* [ %166, %178 ], [ %1, %3 ]\l  %13 = ashr exact i64 %10, 2\l  %14 = icmp eq i64 %11, 0\l  br i1 %14, label %15, label %133\l|{<s0>T|<s1>F}}"];
	Node0x5635737c4530:s0 -> Node0x5635737c4c40;
	Node0x5635737c4530:s1 -> Node0x5635737c4cd0;
	Node0x5635737c4c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%15:\l15:                                               \l  %16 = ptrtoint float* %0 to i64\l  %17 = icmp slt i64 %10, 8\l  br i1 %17, label %74, label %18\l|{<s0>T|<s1>F}}"];
	Node0x5635737c4c40:s0 -> Node0x5635737c4eb0;
	Node0x5635737c4c40:s1 -> Node0x5635737c4f00;
	Node0x5635737c4f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%18:\l18:                                               \l  %19 = add nsw i64 %13, -2\l  %20 = sdiv i64 %19, 2\l  %21 = add nsw i64 %13, -1\l  %22 = sdiv i64 %21, 2\l  %23 = and i64 %10, 4\l  %24 = icmp eq i64 %23, 0\l  br label %25\l}"];
	Node0x5635737c4f00 -> Node0x5635737c5430;
	Node0x5635737c5430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%25:\l25:                                               \l  %26 = phi i64 [ %20, %18 ], [ %73, %68 ]\l  %27 = getelementptr inbounds float, float* %0, i64 %26\l  %28 = load float, float* %27, align 4, !tbaa !3\l  %29 = icmp sgt i64 %22, %26\l  br i1 %29, label %30, label %45\l|{<s0>T|<s1>F}}"];
	Node0x5635737c5430:s0 -> Node0x5635737c57a0;
	Node0x5635737c5430:s1 -> Node0x5635737c5830;
	Node0x5635737c57a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%30:\l30:                                               \l  %31 = phi i64 [ %40, %30 ], [ %26, %25 ]\l  %32 = shl i64 %31, 1\l  %33 = add i64 %32, 2\l  %34 = getelementptr inbounds float, float* %0, i64 %33\l  %35 = or i64 %32, 1\l  %36 = getelementptr inbounds float, float* %0, i64 %35\l  %37 = load float, float* %34, align 4, !tbaa !3\l  %38 = load float, float* %36, align 4, !tbaa !3\l  %39 = fcmp olt float %37, %38\l  %40 = select i1 %39, i64 %35, i64 %33\l  %41 = getelementptr inbounds float, float* %0, i64 %40\l  %42 = load float, float* %41, align 4, !tbaa !3\l  %43 = getelementptr inbounds float, float* %0, i64 %31\l  store float %42, float* %43, align 4, !tbaa !3\l  %44 = icmp slt i64 %40, %22\l  br i1 %44, label %30, label %45, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x5635737c57a0:s0 -> Node0x5635737c57a0;
	Node0x5635737c57a0:s1 -> Node0x5635737c5830;
	Node0x5635737c5830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%45:\l45:                                               \l  %46 = phi i64 [ %26, %25 ], [ %40, %30 ]\l  %47 = icmp eq i64 %46, %20\l  %48 = select i1 %24, i1 %47, i1 false\l  br i1 %48, label %49, label %55\l|{<s0>T|<s1>F}}"];
	Node0x5635737c5830:s0 -> Node0x5635737c6510;
	Node0x5635737c5830:s1 -> Node0x5635737c6560;
	Node0x5635737c6510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%49:\l49:                                               \l  %50 = shl i64 %46, 1\l  %51 = or i64 %50, 1\l  %52 = getelementptr inbounds float, float* %0, i64 %51\l  %53 = load float, float* %52, align 4, !tbaa !3\l  %54 = getelementptr inbounds float, float* %0, i64 %46\l  store float %53, float* %54, align 4, !tbaa !3\l  br label %55\l}"];
	Node0x5635737c6510 -> Node0x5635737c6560;
	Node0x5635737c6560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%55:\l55:                                               \l  %56 = phi i64 [ %51, %49 ], [ %46, %45 ]\l  %57 = icmp sgt i64 %56, %26\l  br i1 %57, label %58, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5635737c6560:s0 -> Node0x5635737c6bb0;
	Node0x5635737c6560:s1 -> Node0x5635737c5520;
	Node0x5635737c6bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%58:\l58:                                               \l  %59 = phi i64 [ %61, %65 ], [ %56, %55 ]\l  %60 = add nsw i64 %59, -1\l  %61 = sdiv i64 %60, 2\l  %62 = getelementptr inbounds float, float* %0, i64 %61\l  %63 = load float, float* %62, align 4, !tbaa !3\l  %64 = fcmp olt float %63, %28\l  br i1 %64, label %65, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5635737c6bb0:s0 -> Node0x5635737c6cb0;
	Node0x5635737c6bb0:s1 -> Node0x5635737c5520;
	Node0x5635737c6cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%65:\l65:                                               \l  %66 = getelementptr inbounds float, float* %0, i64 %59\l  store float %63, float* %66, align 4, !tbaa !3\l  %67 = icmp sgt i64 %61, %26\l  br i1 %67, label %58, label %68, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5635737c6cb0:s0 -> Node0x5635737c6bb0;
	Node0x5635737c6cb0:s1 -> Node0x5635737c5520;
	Node0x5635737c5520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%68:\l68:                                               \l  %69 = phi i64 [ %56, %55 ], [ %59, %58 ], [ %61, %65 ]\l  %70 = getelementptr inbounds float, float* %0, i64 %69\l  store float %28, float* %70, align 4, !tbaa !3\l  %71 = icmp eq i64 %26, 0\l  %72 = add nsw i64 %26, -1\l  %73 = select i1 %71, i64 0, i64 %72\l  br i1 %71, label %74, label %25, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5635737c5520:s0 -> Node0x5635737c4eb0;
	Node0x5635737c5520:s1 -> Node0x5635737c5430;
	Node0x5635737c4eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%74:\l74:                                               \l  %75 = icmp sgt i64 %10, 4\l  br i1 %75, label %76, label %182\l|{<s0>T|<s1>F}}"];
	Node0x5635737c4eb0:s0 -> Node0x5635737b7250;
	Node0x5635737c4eb0:s1 -> Node0x5635737c47b0;
	Node0x5635737b7250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%76:\l76:                                               \l  %77 = phi float* [ %78, %129 ], [ %12, %74 ]\l  %78 = getelementptr inbounds float, float* %77, i64 -1\l  %79 = load float, float* %78, align 4, !tbaa !3\l  %80 = load float, float* %0, align 4, !tbaa !3\l  store float %80, float* %78, align 4, !tbaa !3\l  %81 = ptrtoint float* %78 to i64\l  %82 = sub i64 %81, %16\l  %83 = ashr exact i64 %82, 2\l  %84 = add nsw i64 %83, -1\l  %85 = sdiv i64 %84, 2\l  %86 = icmp sgt i64 %82, 8\l  br i1 %86, label %87, label %102\l|{<s0>T|<s1>F}}"];
	Node0x5635737b7250:s0 -> Node0x5635737c8ae0;
	Node0x5635737b7250:s1 -> Node0x5635737c8b30;
	Node0x5635737c8ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%87:\l87:                                               \l  %88 = phi i64 [ %97, %87 ], [ 0, %76 ]\l  %89 = shl i64 %88, 1\l  %90 = add i64 %89, 2\l  %91 = getelementptr inbounds float, float* %0, i64 %90\l  %92 = or i64 %89, 1\l  %93 = getelementptr inbounds float, float* %0, i64 %92\l  %94 = load float, float* %91, align 4, !tbaa !3\l  %95 = load float, float* %93, align 4, !tbaa !3\l  %96 = fcmp olt float %94, %95\l  %97 = select i1 %96, i64 %92, i64 %90\l  %98 = getelementptr inbounds float, float* %0, i64 %97\l  %99 = load float, float* %98, align 4, !tbaa !3\l  %100 = getelementptr inbounds float, float* %0, i64 %88\l  store float %99, float* %100, align 4, !tbaa !3\l  %101 = icmp slt i64 %97, %85\l  br i1 %101, label %87, label %102, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x5635737c8ae0:s0 -> Node0x5635737c8ae0;
	Node0x5635737c8ae0:s1 -> Node0x5635737c8b30;
	Node0x5635737c8b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%102:\l102:                                              \l  %103 = phi i64 [ 0, %76 ], [ %97, %87 ]\l  %104 = and i64 %82, 4\l  %105 = icmp eq i64 %104, 0\l  br i1 %105, label %106, label %116\l|{<s0>T|<s1>F}}"];
	Node0x5635737c8b30:s0 -> Node0x5635737c9d90;
	Node0x5635737c8b30:s1 -> Node0x5635737c9de0;
	Node0x5635737c9d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%106:\l106:                                              \l  %107 = add nsw i64 %83, -2\l  %108 = sdiv i64 %107, 2\l  %109 = icmp eq i64 %103, %108\l  br i1 %109, label %110, label %116\l|{<s0>T|<s1>F}}"];
	Node0x5635737c9d90:s0 -> Node0x5635737ca090;
	Node0x5635737c9d90:s1 -> Node0x5635737c9de0;
	Node0x5635737ca090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%110:\l110:                                              \l  %111 = shl i64 %103, 1\l  %112 = or i64 %111, 1\l  %113 = getelementptr inbounds float, float* %0, i64 %112\l  %114 = load float, float* %113, align 4, !tbaa !3\l  %115 = getelementptr inbounds float, float* %0, i64 %103\l  store float %114, float* %115, align 4, !tbaa !3\l  br label %116\l}"];
	Node0x5635737ca090 -> Node0x5635737c9de0;
	Node0x5635737c9de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%116:\l116:                                              \l  %117 = phi i64 [ %112, %110 ], [ %103, %106 ], [ %103, %102 ]\l  %118 = icmp sgt i64 %117, 0\l  br i1 %118, label %119, label %129\l|{<s0>T|<s1>F}}"];
	Node0x5635737c9de0:s0 -> Node0x5635737ca6c0;
	Node0x5635737c9de0:s1 -> Node0x5635737b7350;
	Node0x5635737ca6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%119:\l119:                                              \l  %120 = phi i64 [ %122, %126 ], [ %117, %116 ]\l  %121 = add nsw i64 %120, -1\l  %122 = sdiv i64 %121, 2\l  %123 = getelementptr inbounds float, float* %0, i64 %122\l  %124 = load float, float* %123, align 4, !tbaa !3\l  %125 = fcmp olt float %124, %79\l  br i1 %125, label %126, label %129\l|{<s0>T|<s1>F}}"];
	Node0x5635737ca6c0:s0 -> Node0x5635737ca7c0;
	Node0x5635737ca6c0:s1 -> Node0x5635737b7350;
	Node0x5635737ca7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%126:\l126:                                              \l  %127 = getelementptr inbounds float, float* %0, i64 %120\l  store float %124, float* %127, align 4, !tbaa !3\l  %128 = icmp sgt i64 %120, 2\l  br i1 %128, label %119, label %129, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5635737ca7c0:s0 -> Node0x5635737ca6c0;
	Node0x5635737ca7c0:s1 -> Node0x5635737b7350;
	Node0x5635737b7350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%129:\l129:                                              \l  %130 = phi i64 [ %117, %116 ], [ %120, %119 ], [ %122, %126 ]\l  %131 = getelementptr inbounds float, float* %0, i64 %130\l  store float %79, float* %131, align 4, !tbaa !3\l  %132 = icmp sgt i64 %82, 4\l  br i1 %132, label %76, label %182, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5635737b7350:s0 -> Node0x5635737b7250;
	Node0x5635737b7350:s1 -> Node0x5635737c47b0;
	Node0x5635737c4cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%133:\l133:                                              \l  %134 = add nsw i64 %11, -1\l  %135 = sdiv i64 %13, 2\l  %136 = getelementptr inbounds float, float* %0, i64 %135\l  %137 = getelementptr inbounds float, float* %12, i64 -1\l  %138 = load float, float* %5, align 4, !tbaa !3\l  %139 = load float, float* %136, align 4, !tbaa !3\l  %140 = fcmp olt float %138, %139\l  %141 = load float, float* %137, align 4, !tbaa !3\l  br i1 %140, label %142, label %151\l|{<s0>T|<s1>F}}"];
	Node0x5635737c4cd0:s0 -> Node0x5635737cc4e0;
	Node0x5635737c4cd0:s1 -> Node0x5635737cc530;
	Node0x5635737cc4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%142:\l142:                                              \l  %143 = fcmp olt float %139, %141\l  br i1 %143, label %144, label %146\l|{<s0>T|<s1>F}}"];
	Node0x5635737cc4e0:s0 -> Node0x5635737cc6c0;
	Node0x5635737cc4e0:s1 -> Node0x5635737cc710;
	Node0x5635737cc6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%144:\l144:                                              \l  %145 = load float, float* %0, align 4, !tbaa !3\l  store float %139, float* %0, align 4, !tbaa !3\l  store float %145, float* %136, align 4, !tbaa !3\l  br label %160\l}"];
	Node0x5635737cc6c0 -> Node0x5635737cc9a0;
	Node0x5635737cc710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%146:\l146:                                              \l  %147 = fcmp olt float %138, %141\l  %148 = load float, float* %0, align 4, !tbaa !3\l  br i1 %147, label %149, label %150\l|{<s0>T|<s1>F}}"];
	Node0x5635737cc710:s0 -> Node0x5635737ccb60;
	Node0x5635737cc710:s1 -> Node0x5635737ccbb0;
	Node0x5635737ccb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%149:\l149:                                              \l  store float %141, float* %0, align 4, !tbaa !3\l  store float %148, float* %137, align 4, !tbaa !3\l  br label %160\l}"];
	Node0x5635737ccb60 -> Node0x5635737cc9a0;
	Node0x5635737ccbb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%150:\l150:                                              \l  store float %138, float* %0, align 4, !tbaa !3\l  store float %148, float* %5, align 4, !tbaa !3\l  br label %160\l}"];
	Node0x5635737ccbb0 -> Node0x5635737cc9a0;
	Node0x5635737cc530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%151:\l151:                                              \l  %152 = fcmp olt float %138, %141\l  br i1 %152, label %153, label %155\l|{<s0>T|<s1>F}}"];
	Node0x5635737cc530:s0 -> Node0x5635737cd0a0;
	Node0x5635737cc530:s1 -> Node0x5635737cd0f0;
	Node0x5635737cd0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%153:\l153:                                              \l  %154 = load float, float* %0, align 4, !tbaa !3\l  store float %138, float* %0, align 4, !tbaa !3\l  store float %154, float* %5, align 4, !tbaa !3\l  br label %160\l}"];
	Node0x5635737cd0a0 -> Node0x5635737cc9a0;
	Node0x5635737cd0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%155:\l155:                                              \l  %156 = fcmp olt float %139, %141\l  %157 = load float, float* %0, align 4, !tbaa !3\l  br i1 %156, label %158, label %159\l|{<s0>T|<s1>F}}"];
	Node0x5635737cd0f0:s0 -> Node0x5635737cd4f0;
	Node0x5635737cd0f0:s1 -> Node0x5635737cd540;
	Node0x5635737cd4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%158:\l158:                                              \l  store float %141, float* %0, align 4, !tbaa !3\l  store float %157, float* %137, align 4, !tbaa !3\l  br label %160\l}"];
	Node0x5635737cd4f0 -> Node0x5635737cc9a0;
	Node0x5635737cd540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%159:\l159:                                              \l  store float %139, float* %0, align 4, !tbaa !3\l  store float %157, float* %136, align 4, !tbaa !3\l  br label %160\l}"];
	Node0x5635737cd540 -> Node0x5635737cc9a0;
	Node0x5635737cc9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%160:\l160:                                              \l  br label %161\l}"];
	Node0x5635737cc9a0 -> Node0x5635737bb6e0;
	Node0x5635737bb6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%161:\l161:                                              \l  %162 = phi float* [ %169, %177 ], [ %5, %160 ]\l  %163 = phi float* [ %172, %177 ], [ %12, %160 ]\l  %164 = load float, float* %0, align 4, !tbaa !3\l  br label %165\l}"];
	Node0x5635737bb6e0 -> Node0x5635737bb9c0;
	Node0x5635737bb9c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%165:\l165:                                              \l  %166 = phi float* [ %162, %161 ], [ %169, %165 ]\l  %167 = load float, float* %166, align 4, !tbaa !3\l  %168 = fcmp olt float %167, %164\l  %169 = getelementptr inbounds float, float* %166, i64 1\l  br i1 %168, label %165, label %170, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5635737bb9c0:s0 -> Node0x5635737bb9c0;
	Node0x5635737bb9c0:s1 -> Node0x5635737bbc30;
	Node0x5635737bbc30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%170:\l170:                                              \l  %171 = phi float* [ %172, %170 ], [ %163, %165 ]\l  %172 = getelementptr inbounds float, float* %171, i64 -1\l  %173 = load float, float* %172, align 4, !tbaa !3\l  %174 = fcmp olt float %164, %173\l  br i1 %174, label %170, label %175, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5635737bbc30:s0 -> Node0x5635737bbc30;
	Node0x5635737bbc30:s1 -> Node0x5635737ce940;
	Node0x5635737ce940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%175:\l175:                                              \l  %176 = icmp ult float* %166, %172\l  br i1 %176, label %177, label %178\l|{<s0>T|<s1>F}}"];
	Node0x5635737ce940:s0 -> Node0x5635737bb7a0;
	Node0x5635737ce940:s1 -> Node0x5635737c48f0;
	Node0x5635737bb7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%177:\l177:                                              \l  store float %173, float* %166, align 4, !tbaa !3\l  store float %167, float* %172, align 4, !tbaa !3\l  br label %161, !llvm.loop !15\l}"];
	Node0x5635737bb7a0 -> Node0x5635737bb6e0;
	Node0x5635737c48f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%178:\l178:                                              \l  call void\l... @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEElN\l...S0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(float* nonnull %166, float* %12, i64\l... %134)\l  %179 = ptrtoint float* %166 to i64\l  %180 = sub i64 %179, %4\l  %181 = icmp sgt i64 %180, 64\l  br i1 %181, label %9, label %182, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5635737c48f0:s0 -> Node0x5635737c4530;
	Node0x5635737c48f0:s1 -> Node0x5635737c47b0;
	Node0x5635737c47b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%182:\l182:                                              \l  ret void\l}"];
}
