digraph "CFG for '_Z10valid_dateNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function" {
	label="CFG for '_Z10valid_dateNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function";

	Node0x557d0dc56350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%1:\l  %2 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %3 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %4 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %5 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  %6 = load i64, i64* %5, align 8, !tbaa !3\l  %7 = icmp eq i64 %6, 10\l  br i1 %7, label %8, label %127\l|{<s0>T|<s1>F}}"];
	Node0x557d0dc56350:s0 -> Node0x557d0dc58050;
	Node0x557d0dc56350:s1 -> Node0x557d0dc580e0;
	Node0x557d0dc58050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%8:\l8:                                                \l  %9 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %10 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  br label %11\l}"];
	Node0x557d0dc58050 -> Node0x557d0dc57340;
	Node0x557d0dc57340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l11:                                               \l  %12 = phi i64 [ 0, %8 ], [ %26, %25 ]\l  %13 = trunc i64 %12 to i32\l  switch i32 %13, label %19 [\l    i32 5, label %14\l    i32 2, label %14\l  ]\l|{<s0>def|<s1>5|<s2>2}}"];
	Node0x557d0dc57340:s0 -> Node0x557d0dc58530;
	Node0x557d0dc57340:s1 -> Node0x557d0dc585f0;
	Node0x557d0dc57340:s2 -> Node0x557d0dc585f0;
	Node0x557d0dc585f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%14:\l14:                                               \l  %15 = load i8*, i8** %9, align 8, !tbaa !10\l  %16 = getelementptr inbounds i8, i8* %15, i64 %12\l  %17 = load i8, i8* %16, align 1, !tbaa !11\l  %18 = icmp eq i8 %17, 45\l  br i1 %18, label %25, label %127\l|{<s0>T|<s1>F}}"];
	Node0x557d0dc585f0:s0 -> Node0x557d0dc58380;
	Node0x557d0dc585f0:s1 -> Node0x557d0dc580e0;
	Node0x557d0dc58530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%19:\l19:                                               \l  %20 = load i8*, i8** %10, align 8, !tbaa !10\l  %21 = getelementptr inbounds i8, i8* %20, i64 %12\l  %22 = load i8, i8* %21, align 1, !tbaa !11\l  %23 = add i8 %22, -48\l  %24 = icmp ugt i8 %23, 9\l  br i1 %24, label %127, label %25\l|{<s0>T|<s1>F}}"];
	Node0x557d0dc58530:s0 -> Node0x557d0dc580e0;
	Node0x557d0dc58530:s1 -> Node0x557d0dc58380;
	Node0x557d0dc58380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = add nuw nsw i64 %12, 1\l  %27 = icmp eq i64 %26, 10\l  br i1 %27, label %28, label %11, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x557d0dc58380:s0 -> Node0x557d0dc59d30;
	Node0x557d0dc58380:s1 -> Node0x557d0dc57340;
	Node0x557d0dc59d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%28:\l28:                                               \l  %29 = bitcast %\"class.std::__cxx11::basic_string\"* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #7\l  call void @llvm.experimental.noalias.scope.decl(metadata !15)\l  %30 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 2\l  %31 = bitcast %\"class.std::__cxx11::basic_string\"* %2 to %union.anon**\l  store %union.anon* %30, %union.anon** %31, align 8, !tbaa !18, !alias.scope\l... !15\l  %32 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %33 = load i8*, i8** %32, align 8, !tbaa !10, !noalias !15\l  %34 = icmp ult i64 %6, 2\l  %35 = select i1 %34, i64 %6, i64 2\l  %36 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 0, i32 0\l  %37 = bitcast %union.anon* %30 to i8*\l  switch i64 %35, label %40 [\l    i64 1, label %38\l    i64 0, label %41\l  ]\l|{<s0>def|<s1>1|<s2>0}}"];
	Node0x557d0dc59d30:s0 -> Node0x557d0dc5b730;
	Node0x557d0dc59d30:s1 -> Node0x557d0dc5b7c0;
	Node0x557d0dc59d30:s2 -> Node0x557d0dc5b850;
	Node0x557d0dc5b7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%38:\l38:                                               \l  %39 = load i8, i8* %33, align 1, !tbaa !11\l  store i8 %39, i8* %37, align 8, !tbaa !11\l  br label %41\l}"];
	Node0x557d0dc5b7c0 -> Node0x557d0dc5b850;
	Node0x557d0dc5b730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%40:\l40:                                               \l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 1\l... %33, i64 %35, i1 false) #7\l  br label %41\l}"];
	Node0x557d0dc5b730 -> Node0x557d0dc5b850;
	Node0x557d0dc5b850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%41:\l41:                                               \l  %42 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 1\l  store i64 %35, i64* %42, align 8, !tbaa !3, !alias.scope !15\l  %43 = load i8*, i8** %36, align 8, !tbaa !10, !alias.scope !15\l  %44 = getelementptr inbounds i8, i8* %43, i64 %35\l  store i8 0, i8* %44, align 1, !tbaa !11\l  %45 = load i8*, i8** %36, align 8, !tbaa !10\l  %46 = call i64 @strtol(i8* nocapture nonnull %45, i8** null, i32 10) #7\l  %47 = trunc i64 %46 to i32\l  %48 = load i8*, i8** %36, align 8, !tbaa !10\l  %49 = bitcast %union.anon* %30 to i8*\l  %50 = icmp eq i8* %48, %49\l  br i1 %50, label %52, label %51\l|{<s0>T|<s1>F}}"];
	Node0x557d0dc5b850:s0 -> Node0x557d0dc5cdf0;
	Node0x557d0dc5b850:s1 -> Node0x557d0dc5ce80;
	Node0x557d0dc5ce80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%51:\l51:                                               \l  call void @_ZdlPv(i8* %48) #7\l  br label %52\l}"];
	Node0x557d0dc5ce80 -> Node0x557d0dc5cdf0;
	Node0x557d0dc5cdf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%52:\l52:                                               \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #7\l  %53 = bitcast %\"class.std::__cxx11::basic_string\"* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #7\l  call void @llvm.experimental.noalias.scope.decl(metadata !19)\l  %54 = load i64, i64* %5, align 8, !tbaa !3, !noalias !19\l  %55 = icmp ult i64 %54, 3\l  br i1 %55, label %56, label %57\l|{<s0>T|<s1>F}}"];
	Node0x557d0dc5cdf0:s0 -> Node0x557d0dc5dfc0;
	Node0x557d0dc5cdf0:s1 -> Node0x557d0dc5e050;
	Node0x557d0dc5dfc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%56:\l56:                                               \l  call void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr\l... inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr\l... inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 3, i64 %54) #8,\l... !noalias !19\l  unreachable\l}"];
	Node0x557d0dc5e050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%57:\l57:                                               \l  %58 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 2\l  %59 = bitcast %\"class.std::__cxx11::basic_string\"* %3 to %union.anon**\l  store %union.anon* %58, %union.anon** %59, align 8, !tbaa !18, !alias.scope\l... !19\l  %60 = load i8*, i8** %32, align 8, !tbaa !10, !noalias !19\l  %61 = getelementptr inbounds i8, i8* %60, i64 3\l  %62 = add i64 %54, -3\l  %63 = icmp ult i64 %62, 2\l  %64 = select i1 %63, i64 %62, i64 2\l  %65 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 0, i32 0\l  %66 = load i8*, i8** %65, align 8, !tbaa !10, !alias.scope !19\l  switch i64 %64, label %69 [\l    i64 1, label %67\l    i64 0, label %70\l  ]\l|{<s0>def|<s1>1|<s2>0}}"];
	Node0x557d0dc5e050:s0 -> Node0x557d0dc5f820;
	Node0x557d0dc5e050:s1 -> Node0x557d0dc5f8b0;
	Node0x557d0dc5e050:s2 -> Node0x557d0dc5f940;
	Node0x557d0dc5f8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%67:\l67:                                               \l  %68 = load i8, i8* %61, align 1, !tbaa !11\l  store i8 %68, i8* %66, align 1, !tbaa !11\l  br label %70\l}"];
	Node0x557d0dc5f8b0 -> Node0x557d0dc5f940;
	Node0x557d0dc5f820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%69:\l69:                                               \l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* nonnull align 1\l... %61, i64 %64, i1 false) #7\l  br label %70\l}"];
	Node0x557d0dc5f820 -> Node0x557d0dc5f940;
	Node0x557d0dc5f940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%70:\l70:                                               \l  %71 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 1\l  store i64 %64, i64* %71, align 8, !tbaa !3, !alias.scope !19\l  %72 = load i8*, i8** %65, align 8, !tbaa !10, !alias.scope !19\l  %73 = getelementptr inbounds i8, i8* %72, i64 %64\l  store i8 0, i8* %73, align 1, !tbaa !11\l  %74 = load i8*, i8** %65, align 8, !tbaa !10\l  %75 = call i64 @strtol(i8* nocapture nonnull %74, i8** null, i32 10) #7\l  %76 = trunc i64 %75 to i32\l  %77 = load i8*, i8** %65, align 8, !tbaa !10\l  %78 = bitcast %union.anon* %58 to i8*\l  %79 = icmp eq i8* %77, %78\l  br i1 %79, label %81, label %80\l|{<s0>T|<s1>F}}"];
	Node0x557d0dc5f940:s0 -> Node0x557d0dc605a0;
	Node0x557d0dc5f940:s1 -> Node0x557d0dc605f0;
	Node0x557d0dc605f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%80:\l80:                                               \l  call void @_ZdlPv(i8* %77) #7\l  br label %81\l}"];
	Node0x557d0dc605f0 -> Node0x557d0dc605a0;
	Node0x557d0dc605a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%81:\l81:                                               \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #7\l  %82 = bitcast %\"class.std::__cxx11::basic_string\"* %4 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %82) #7\l  call void @llvm.experimental.noalias.scope.decl(metadata !22)\l  %83 = load i64, i64* %5, align 8, !tbaa !3, !noalias !22\l  %84 = icmp ult i64 %83, 6\l  br i1 %84, label %85, label %86\l|{<s0>T|<s1>F}}"];
	Node0x557d0dc605a0:s0 -> Node0x557d0dc61470;
	Node0x557d0dc605a0:s1 -> Node0x557d0dc61500;
	Node0x557d0dc61470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%85:\l85:                                               \l  call void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr\l... inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr\l... inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 6, i64 %83) #8,\l... !noalias !22\l  unreachable\l}"];
	Node0x557d0dc61500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%86:\l86:                                               \l  %87 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2\l  %88 = bitcast %\"class.std::__cxx11::basic_string\"* %4 to %union.anon**\l  store %union.anon* %87, %union.anon** %88, align 8, !tbaa !18, !alias.scope\l... !22\l  %89 = load i8*, i8** %32, align 8, !tbaa !10, !noalias !22\l  %90 = getelementptr inbounds i8, i8* %89, i64 6\l  %91 = add i64 %83, -6\l  %92 = icmp ult i64 %91, 4\l  %93 = select i1 %92, i64 %91, i64 4\l  %94 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 0, i32 0\l  %95 = load i8*, i8** %94, align 8, !tbaa !10, !alias.scope !22\l  switch i64 %93, label %98 [\l    i64 1, label %96\l    i64 0, label %99\l  ]\l|{<s0>def|<s1>1|<s2>0}}"];
	Node0x557d0dc61500:s0 -> Node0x557d0dc61e60;
	Node0x557d0dc61500:s1 -> Node0x557d0dc61ef0;
	Node0x557d0dc61500:s2 -> Node0x557d0dc61f80;
	Node0x557d0dc61ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%96:\l96:                                               \l  %97 = load i8, i8* %90, align 1, !tbaa !11\l  store i8 %97, i8* %95, align 1, !tbaa !11\l  br label %99\l}"];
	Node0x557d0dc61ef0 -> Node0x557d0dc61f80;
	Node0x557d0dc61e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%98:\l98:                                               \l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %95, i8* nonnull align 1\l... %90, i64 %93, i1 false) #7\l  br label %99\l}"];
	Node0x557d0dc61e60 -> Node0x557d0dc61f80;
	Node0x557d0dc61f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%99:\l99:                                               \l  %100 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 1\l  store i64 %93, i64* %100, align 8, !tbaa !3, !alias.scope !22\l  %101 = load i8*, i8** %94, align 8, !tbaa !10, !alias.scope !22\l  %102 = getelementptr inbounds i8, i8* %101, i64 %93\l  store i8 0, i8* %102, align 1, !tbaa !11\l  %103 = load i8*, i8** %94, align 8, !tbaa !10\l  %104 = bitcast %union.anon* %87 to i8*\l  %105 = icmp eq i8* %103, %104\l  br i1 %105, label %107, label %106\l|{<s0>T|<s1>F}}"];
	Node0x557d0dc61f80:s0 -> Node0x557d0dc62960;
	Node0x557d0dc61f80:s1 -> Node0x557d0dc629b0;
	Node0x557d0dc629b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%106:\l106:                                              \l  call void @_ZdlPv(i8* %103) #7\l  br label %107\l}"];
	Node0x557d0dc629b0 -> Node0x557d0dc62960;
	Node0x557d0dc62960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%107:\l107:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %82) #7\l  %108 = add i32 %47, -1\l  %109 = icmp ugt i32 %108, 11\l  %110 = add i32 %76, -1\l  %111 = icmp ugt i32 %110, 30\l  %112 = select i1 %109, i1 true, i1 %111\l  br i1 %112, label %127, label %113\l|{<s0>T|<s1>F}}"];
	Node0x557d0dc62960:s0 -> Node0x557d0dc580e0;
	Node0x557d0dc62960:s1 -> Node0x557d0dc630f0;
	Node0x557d0dc630f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%113:\l113:                                              \l  %114 = icmp eq i32 %76, 31\l  br i1 %114, label %115, label %118\l|{<s0>T|<s1>F}}"];
	Node0x557d0dc630f0:s0 -> Node0x557d0dc632b0;
	Node0x557d0dc630f0:s1 -> Node0x557d0dc63300;
	Node0x557d0dc632b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%115:\l115:                                              \l  %116 = add i32 %47, -2\l  %117 = icmp ult i32 %116, 10\l  br i1 %117, label %122, label %118\l|{<s0>T|<s1>F}}"];
	Node0x557d0dc632b0:s0 -> Node0x557d0dc63550;
	Node0x557d0dc632b0:s1 -> Node0x557d0dc63300;
	Node0x557d0dc63300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%118:\l118:                                              \l  %119 = icmp ne i32 %76, 30\l  %120 = icmp ne i32 %47, 2\l  %121 = select i1 %119, i1 true, i1 %120\l  br label %127\l}"];
	Node0x557d0dc63300 -> Node0x557d0dc580e0;
	Node0x557d0dc63550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%122:\l122:                                              \l  %123 = trunc i32 %116 to i16\l  %124 = lshr i16 661, %123\l  %125 = and i16 %124, 1\l  %126 = icmp eq i16 %125, 0\l  br i1 %126, label %118, label %127\l|{<s0>T|<s1>F}}"];
	Node0x557d0dc63550:s0 -> Node0x557d0dc63300;
	Node0x557d0dc63550:s1 -> Node0x557d0dc580e0;
	Node0x557d0dc580e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%127:\l127:                                              \l  %128 = phi i1 [ false, %1 ], [ false, %107 ], [ %121, %118 ], [ false, %122\l... ], [ false, %19 ], [ false, %14 ]\l  ret i1 %128\l}"];
}
