; ModuleID = '../../Human_xBenchmarks_164/CPP_124/CPP_124.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_124/CPP_124.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@.str = private unnamed_addr constant [21 x i8] c"basic_string::substr\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"%s: __pos (which is %zu) > this->size() (which is %zu)\00", align 1

; Function Attrs: uwtable
define dso_local zeroext i1 @_Z10valid_dateNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nocapture readonly %0) local_unnamed_addr #0 personality i32 (...)* @__gxx_personality_v0 {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8, !tbaa !3
  %7 = icmp eq i64 %6, 10
  br i1 %7, label %8, label %127

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %8, %25
  %12 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %13 = trunc i64 %12 to i32
  switch i32 %13, label %19 [
    i32 5, label %14
    i32 2, label %14
  ]

14:                                               ; preds = %11, %11
  %15 = load i8*, i8** %9, align 8, !tbaa !10
  %16 = getelementptr inbounds i8, i8* %15, i64 %12
  %17 = load i8, i8* %16, align 1, !tbaa !11
  %18 = icmp eq i8 %17, 45
  br i1 %18, label %25, label %127

19:                                               ; preds = %11
  %20 = load i8*, i8** %10, align 8, !tbaa !10
  %21 = getelementptr inbounds i8, i8* %20, i64 %12
  %22 = load i8, i8* %21, align 1, !tbaa !11
  %23 = add i8 %22, -48
  %24 = icmp ugt i8 %23, 9
  br i1 %24, label %127, label %25

25:                                               ; preds = %19, %14
  %26 = add nuw nsw i64 %12, 1
  %27 = icmp eq i64 %26, 10
  br i1 %27, label %28, label %11, !llvm.loop !12

28:                                               ; preds = %25
  %29 = bitcast %"class.std::__cxx11::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !15)
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 2
  %31 = bitcast %"class.std::__cxx11::basic_string"* %2 to %union.anon**
  store %union.anon* %30, %union.anon** %31, align 8, !tbaa !18, !alias.scope !15
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8, !tbaa !10, !noalias !15
  %34 = icmp ult i64 %6, 2
  %35 = select i1 %34, i64 %6, i64 2
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %37 = bitcast %union.anon* %30 to i8*
  switch i64 %35, label %40 [
    i64 1, label %38
    i64 0, label %41
  ]

38:                                               ; preds = %28
  %39 = load i8, i8* %33, align 1, !tbaa !11
  store i8 %39, i8* %37, align 8, !tbaa !11
  br label %41

40:                                               ; preds = %28
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 1 %33, i64 %35, i1 false) #7
  br label %41

41:                                               ; preds = %28, %38, %40
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  store i64 %35, i64* %42, align 8, !tbaa !3, !alias.scope !15
  %43 = load i8*, i8** %36, align 8, !tbaa !10, !alias.scope !15
  %44 = getelementptr inbounds i8, i8* %43, i64 %35
  store i8 0, i8* %44, align 1, !tbaa !11
  %45 = load i8*, i8** %36, align 8, !tbaa !10
  %46 = call i64 @strtol(i8* nocapture nonnull %45, i8** null, i32 10) #7
  %47 = trunc i64 %46 to i32
  %48 = load i8*, i8** %36, align 8, !tbaa !10
  %49 = bitcast %union.anon* %30 to i8*
  %50 = icmp eq i8* %48, %49
  br i1 %50, label %52, label %51

51:                                               ; preds = %41
  call void @_ZdlPv(i8* %48) #7
  br label %52

52:                                               ; preds = %41, %51
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #7
  %53 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !19)
  %54 = load i64, i64* %5, align 8, !tbaa !3, !noalias !19
  %55 = icmp ult i64 %54, 3
  br i1 %55, label %56, label %57

56:                                               ; preds = %52
  call void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 3, i64 %54) #8, !noalias !19
  unreachable

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %59 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  store %union.anon* %58, %union.anon** %59, align 8, !tbaa !18, !alias.scope !19
  %60 = load i8*, i8** %32, align 8, !tbaa !10, !noalias !19
  %61 = getelementptr inbounds i8, i8* %60, i64 3
  %62 = add i64 %54, -3
  %63 = icmp ult i64 %62, 2
  %64 = select i1 %63, i64 %62, i64 2
  %65 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8, !tbaa !10, !alias.scope !19
  switch i64 %64, label %69 [
    i64 1, label %67
    i64 0, label %70
  ]

67:                                               ; preds = %57
  %68 = load i8, i8* %61, align 1, !tbaa !11
  store i8 %68, i8* %66, align 1, !tbaa !11
  br label %70

69:                                               ; preds = %57
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* nonnull align 1 %61, i64 %64, i1 false) #7
  br label %70

70:                                               ; preds = %57, %67, %69
  %71 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  store i64 %64, i64* %71, align 8, !tbaa !3, !alias.scope !19
  %72 = load i8*, i8** %65, align 8, !tbaa !10, !alias.scope !19
  %73 = getelementptr inbounds i8, i8* %72, i64 %64
  store i8 0, i8* %73, align 1, !tbaa !11
  %74 = load i8*, i8** %65, align 8, !tbaa !10
  %75 = call i64 @strtol(i8* nocapture nonnull %74, i8** null, i32 10) #7
  %76 = trunc i64 %75 to i32
  %77 = load i8*, i8** %65, align 8, !tbaa !10
  %78 = bitcast %union.anon* %58 to i8*
  %79 = icmp eq i8* %77, %78
  br i1 %79, label %81, label %80

80:                                               ; preds = %70
  call void @_ZdlPv(i8* %77) #7
  br label %81

81:                                               ; preds = %70, %80
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #7
  %82 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %82) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !22)
  %83 = load i64, i64* %5, align 8, !tbaa !3, !noalias !22
  %84 = icmp ult i64 %83, 6
  br i1 %84, label %85, label %86

85:                                               ; preds = %81
  call void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 6, i64 %83) #8, !noalias !22
  unreachable

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %88 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  store %union.anon* %87, %union.anon** %88, align 8, !tbaa !18, !alias.scope !22
  %89 = load i8*, i8** %32, align 8, !tbaa !10, !noalias !22
  %90 = getelementptr inbounds i8, i8* %89, i64 6
  %91 = add i64 %83, -6
  %92 = icmp ult i64 %91, 4
  %93 = select i1 %92, i64 %91, i64 4
  %94 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8, !tbaa !10, !alias.scope !22
  switch i64 %93, label %98 [
    i64 1, label %96
    i64 0, label %99
  ]

96:                                               ; preds = %86
  %97 = load i8, i8* %90, align 1, !tbaa !11
  store i8 %97, i8* %95, align 1, !tbaa !11
  br label %99

98:                                               ; preds = %86
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %95, i8* nonnull align 1 %90, i64 %93, i1 false) #7
  br label %99

99:                                               ; preds = %86, %96, %98
  %100 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  store i64 %93, i64* %100, align 8, !tbaa !3, !alias.scope !22
  %101 = load i8*, i8** %94, align 8, !tbaa !10, !alias.scope !22
  %102 = getelementptr inbounds i8, i8* %101, i64 %93
  store i8 0, i8* %102, align 1, !tbaa !11
  %103 = load i8*, i8** %94, align 8, !tbaa !10
  %104 = bitcast %union.anon* %87 to i8*
  %105 = icmp eq i8* %103, %104
  br i1 %105, label %107, label %106

106:                                              ; preds = %99
  call void @_ZdlPv(i8* %103) #7
  br label %107

107:                                              ; preds = %99, %106
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %82) #7
  %108 = add i32 %47, -1
  %109 = icmp ugt i32 %108, 11
  %110 = add i32 %76, -1
  %111 = icmp ugt i32 %110, 30
  %112 = select i1 %109, i1 true, i1 %111
  br i1 %112, label %127, label %113

113:                                              ; preds = %107
  %114 = icmp eq i32 %76, 31
  br i1 %114, label %115, label %118

115:                                              ; preds = %113
  %116 = add i32 %47, -2
  %117 = icmp ult i32 %116, 10
  br i1 %117, label %122, label %118

118:                                              ; preds = %122, %115, %113
  %119 = icmp ne i32 %76, 30
  %120 = icmp ne i32 %47, 2
  %121 = select i1 %119, i1 true, i1 %120
  br label %127

122:                                              ; preds = %115
  %123 = trunc i32 %116 to i16
  %124 = lshr i16 661, %123
  %125 = and i16 %124, 1
  %126 = icmp eq i16 %125, 0
  br i1 %126, label %118, label %127

127:                                              ; preds = %14, %19, %122, %118, %107, %1
  %128 = phi i1 [ false, %1 ], [ false, %107 ], [ %121, %118 ], [ false, %122 ], [ false, %19 ], [ false, %14 ]
  ret i1 %128
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: mustprogress nofree nounwind willreturn
declare dso_local i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #2

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: noreturn
declare dso_local void @_ZSt24__throw_out_of_range_fmtPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #6

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { mustprogress nofree nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #6 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #7 = { nounwind }
attributes #8 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!4, !6, i64 0}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !13, !14}
!13 = !{!"llvm.loop.mustprogress"}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!17 = distinct !{!17, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!18 = !{!5, !6, i64 0}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!21 = distinct !{!21, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!24 = distinct !{!24, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
