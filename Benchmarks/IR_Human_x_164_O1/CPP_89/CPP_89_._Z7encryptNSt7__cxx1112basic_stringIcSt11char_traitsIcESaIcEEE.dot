digraph "CFG for '_Z7encryptNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function" {
	label="CFG for '_Z7encryptNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function";

	Node0x564c761f33b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %5 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2\l  %6 = bitcast %\"class.std::__cxx11::basic_string\"* %0 to %union.anon**\l  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !3\l  %7 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  store i64 0, i64* %7, align 8, !tbaa !8\l  %8 = bitcast %union.anon* %5 to i8*\l  store i8 0, i8* %8, align 8, !tbaa !11\l  %9 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %1, i64 0, i32 1\l  %10 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %1, i64 0, i32 0, i32 0\l  %11 = bitcast %\"class.std::__cxx11::basic_string\"* %4 to i8*\l  %12 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2\l  %13 = bitcast %\"class.std::__cxx11::basic_string\"* %4 to %union.anon**\l  %14 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %15 = bitcast i64* %3 to i8*\l  %16 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 0, i32 0\l  %17 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2, i32 0\l  %18 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 0, i32 0\l  %19 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 1\l  %20 = bitcast %union.anon* %12 to i8*\l  %21 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2, i32 0\l  %22 = getelementptr %union.anon, %union.anon* %12, i64 0, i32 0\l  %23 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2, i32 0\l  %24 = load i64, i64* %9, align 8, !tbaa !8\l  %25 = icmp eq i64 %24, 0\l  br i1 %25, label %104, label %26\l|{<s0>T|<s1>F}}"];
	Node0x564c761f33b0:s0 -> Node0x564c761f4a80;
	Node0x564c761f33b0:s1 -> Node0x564c761f6b10;
	Node0x564c761f6b10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = phi i64 [ %92, %91 ], [ 0, %2 ]\l  %28 = load i8*, i8** %10, align 8, !tbaa !12\l  %29 = getelementptr inbounds i8, i8* %28, i64 %27\l  %30 = load i8, i8* %29, align 1, !tbaa !11\l  %31 = sext i8 %30 to i32\l  %32 = add nsw i32 %31, -93\l  %33 = srem i32 %32, 26\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #6\l  %34 = trunc i32 %33 to i8\l  %35 = add i8 %34, 97\l  call void @llvm.experimental.noalias.scope.decl(metadata !13)\l  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3, !alias.scope\l... !13\l  %36 = load i8*, i8** %14, align 8, !tbaa !12, !noalias !13\l  %37 = load i64, i64* %7, align 8, !tbaa !8, !noalias !13\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6, !noalias !13\l  store i64 %37, i64* %3, align 8, !tbaa !16, !noalias !13\l  %38 = icmp ugt i64 %37, 15\l  br i1 %38, label %39, label %43\l|{<s0>T|<s1>F}}"];
	Node0x564c761f6b10:s0 -> Node0x564c761f9ef0;
	Node0x564c761f6b10:s1 -> Node0x564c761f9f80;
	Node0x564c761f9ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%39:\l39:                                               \l  %40 = invoke i8*\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%\"class.s\l...td::__cxx11::basic_string\"* nonnull align 8 dereferenceable(32) %4, i64*\l... nonnull align 8 dereferenceable(8) %3, i64 0)\l          to label %41 unwind label %95\l}"];
	Node0x564c761f9ef0 -> Node0x564c761fa1b0;
	Node0x564c761f9ef0 -> Node0x564c761fa200;
	Node0x564c761fa1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%41:\l41:                                               \l  store i8* %40, i8** %16, align 8, !tbaa !12, !alias.scope !13\l  %42 = load i64, i64* %3, align 8, !tbaa !16, !noalias !13\l  store i64 %42, i64* %17, align 8, !tbaa !11, !alias.scope !13\l  br label %43\l}"];
	Node0x564c761fa1b0 -> Node0x564c761f9f80;
	Node0x564c761f9f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = load i8*, i8** %18, align 8, !tbaa !12, !alias.scope !13\l  switch i64 %37, label %47 [\l    i64 1, label %45\l    i64 0, label %48\l  ]\l|{<s0>def|<s1>1|<s2>0}}"];
	Node0x564c761f9f80:s0 -> Node0x564c761fa0c0;
	Node0x564c761f9f80:s1 -> Node0x564c761faed0;
	Node0x564c761f9f80:s2 -> Node0x564c761faf60;
	Node0x564c761faed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%45:\l45:                                               \l  %46 = load i8, i8* %36, align 1, !tbaa !11\l  store i8 %46, i8* %44, align 1, !tbaa !11\l  br label %48\l}"];
	Node0x564c761faed0 -> Node0x564c761faf60;
	Node0x564c761fa0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%47:\l47:                                               \l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %36, i64\l... %37, i1 false) #6\l  br label %48\l}"];
	Node0x564c761fa0c0 -> Node0x564c761faf60;
	Node0x564c761faf60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = load i64, i64* %3, align 8, !tbaa !16, !noalias !13\l  store i64 %49, i64* %19, align 8, !tbaa !8, !alias.scope !13\l  %50 = load i8*, i8** %18, align 8, !tbaa !12, !alias.scope !13\l  %51 = getelementptr inbounds i8, i8* %50, i64 %49\l  store i8 0, i8* %51, align 1, !tbaa !11\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6, !noalias !13\l  %52 = load i64, i64* %19, align 8, !tbaa !8, !alias.scope !13\l  %53 = invoke nonnull align 8 dereferenceable(32)\l... %\"class.std::__cxx11::basic_string\"*\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%\"\l...class.std::__cxx11::basic_string\"* nonnull align 8 dereferenceable(32) %4, i64\l... %52, i64 0, i64 1, i8 signext %35)\l          to label %60 unwind label %54\l}"];
	Node0x564c761faf60 -> Node0x564c761fbc90;
	Node0x564c761faf60 -> Node0x564c761fbd20;
	Node0x564c761fbd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%54:\l54:                                               \l  %55 = landingpad \{ i8*, i32 \}\l          cleanup\l  %56 = load i8*, i8** %18, align 8, !tbaa !12, !alias.scope !13\l  %57 = bitcast %union.anon* %12 to i8*\l  %58 = icmp eq i8* %56, %57\l  br i1 %58, label %97, label %59\l|{<s0>T|<s1>F}}"];
	Node0x564c761fbd20:s0 -> Node0x564c761fc4a0;
	Node0x564c761fbd20:s1 -> Node0x564c761fc530;
	Node0x564c761fc530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%59:\l59:                                               \l  call void @_ZdlPv(i8* %56) #6\l  br label %97\l}"];
	Node0x564c761fc530 -> Node0x564c761fc4a0;
	Node0x564c761fbc90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  %61 = load i8*, i8** %18, align 8, !tbaa !12\l  %62 = icmp eq i8* %61, %20\l  br i1 %62, label %63, label %76\l|{<s0>T|<s1>F}}"];
	Node0x564c761fbc90:s0 -> Node0x564c761fc9b0;
	Node0x564c761fbc90:s1 -> Node0x564c761fca00;
	Node0x564c761fc9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%63:\l63:                                               \l  %64 = load i64, i64* %19, align 8, !tbaa !8\l  %65 = icmp eq i64 %64, 0\l  br i1 %65, label %72, label %66\l|{<s0>T|<s1>F}}"];
	Node0x564c761fc9b0:s0 -> Node0x564c761fd010;
	Node0x564c761fc9b0:s1 -> Node0x564c761fd060;
	Node0x564c761fd060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%66:\l66:                                               \l  %67 = load i8*, i8** %14, align 8, !tbaa !12\l  %68 = icmp eq i64 %64, 1\l  br i1 %68, label %69, label %71\l|{<s0>T|<s1>F}}"];
	Node0x564c761fd060:s0 -> Node0x564c761fd2a0;
	Node0x564c761fd060:s1 -> Node0x564c761fd2f0;
	Node0x564c761fd2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%69:\l69:                                               \l  %70 = load i8, i8* %61, align 1, !tbaa !11\l  store i8 %70, i8* %67, align 1, !tbaa !11\l  br label %72\l}"];
	Node0x564c761fd2a0 -> Node0x564c761fd010;
	Node0x564c761fd2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%71:\l71:                                               \l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %67, i8* align 1 %61, i64\l... %64, i1 false) #6\l  br label %72\l}"];
	Node0x564c761fd2f0 -> Node0x564c761fd010;
	Node0x564c761fd010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%72:\l72:                                               \l  %73 = load i64, i64* %19, align 8, !tbaa !8\l  store i64 %73, i64* %7, align 8, !tbaa !8\l  %74 = load i8*, i8** %14, align 8, !tbaa !12\l  %75 = getelementptr inbounds i8, i8* %74, i64 %73\l  store i8 0, i8* %75, align 1, !tbaa !11\l  br label %86\l}"];
	Node0x564c761fd010 -> Node0x564c761fdaa0;
	Node0x564c761fca00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%76:\l76:                                               \l  %77 = load i8*, i8** %14, align 8, !tbaa !12\l  %78 = icmp eq i8* %77, %8\l  %79 = load i64, i64* %21, align 8\l  store i8* %61, i8** %14, align 8, !tbaa !12\l  %80 = load i64, i64* %19, align 8, !tbaa !8\l  store i64 %80, i64* %7, align 8, !tbaa !8\l  %81 = load i64, i64* %22, align 8, !tbaa !11\l  store i64 %81, i64* %21, align 8, !tbaa !11\l  %82 = icmp eq i8* %77, null\l  %83 = or i1 %78, %82\l  br i1 %83, label %85, label %84\l|{<s0>T|<s1>F}}"];
	Node0x564c761fca00:s0 -> Node0x564c761fe080;
	Node0x564c761fca00:s1 -> Node0x564c761fe0d0;
	Node0x564c761fe0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%84:\l84:                                               \l  store i8* %77, i8** %18, align 8, !tbaa !12\l  store i64 %79, i64* %23, align 8, !tbaa !11\l  br label %86\l}"];
	Node0x564c761fe0d0 -> Node0x564c761fdaa0;
	Node0x564c761fe080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%85:\l85:                                               \l  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !12\l  br label %86\l}"];
	Node0x564c761fe080 -> Node0x564c761fdaa0;
	Node0x564c761fdaa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%86:\l86:                                               \l  store i64 0, i64* %19, align 8, !tbaa !8\l  %87 = load i8*, i8** %18, align 8, !tbaa !12\l  store i8 0, i8* %87, align 1, !tbaa !11\l  %88 = load i8*, i8** %18, align 8, !tbaa !12\l  %89 = icmp eq i8* %88, %20\l  br i1 %89, label %91, label %90\l|{<s0>T|<s1>F}}"];
	Node0x564c761fdaa0:s0 -> Node0x564c761f6c80;
	Node0x564c761fdaa0:s1 -> Node0x564c761fe6f0;
	Node0x564c761fe6f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%90:\l90:                                               \l  call void @_ZdlPv(i8* %88) #6\l  br label %91\l}"];
	Node0x564c761fe6f0 -> Node0x564c761f6c80;
	Node0x564c761f6c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%91:\l91:                                               \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6\l  %92 = add nuw i64 %27, 1\l  %93 = load i64, i64* %9, align 8, !tbaa !8\l  %94 = icmp ugt i64 %93, %92\l  br i1 %94, label %26, label %104, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x564c761f6c80:s0 -> Node0x564c761f6b10;
	Node0x564c761f6c80:s1 -> Node0x564c761f4a80;
	Node0x564c761fa200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%95:\l95:                                               \l  %96 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %97\l}"];
	Node0x564c761fa200 -> Node0x564c761fc4a0;
	Node0x564c761fc4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%97:\l97:                                               \l  %98 = phi \{ i8*, i32 \} [ %96, %95 ], [ %55, %59 ], [ %55, %54 ]\l  %99 = bitcast %\"class.std::__cxx11::basic_string\"* %4 to i8*\l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %99) #6\l  %100 = load i8*, i8** %14, align 8, !tbaa !12\l  %101 = icmp eq i8* %100, %8\l  br i1 %101, label %103, label %102\l|{<s0>T|<s1>F}}"];
	Node0x564c761fc4a0:s0 -> Node0x564c761f51f0;
	Node0x564c761fc4a0:s1 -> Node0x564c761f5240;
	Node0x564c761f5240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%102:\l102:                                              \l  call void @_ZdlPv(i8* %100) #6\l  br label %103\l}"];
	Node0x564c761f5240 -> Node0x564c761f51f0;
	Node0x564c761f51f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%103:\l103:                                              \l  resume \{ i8*, i32 \} %98\l}"];
	Node0x564c761f4a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%104:\l104:                                              \l  ret void\l}"];
}
