digraph "CFG for '_Z12get_positiveSt6vectorIfSaIfEE' function" {
	label="CFG for '_Z12get_positiveSt6vectorIfSaIfEE' function";

	Node0x55b0d7920d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %6 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %7 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %7, i8 0, i64 24, i1 false)\l  %8 = load float*, float** %3, align 8, !tbaa !3\l  %9 = load float*, float** %4, align 8, !tbaa !8\l  %10 = icmp eq float* %8, %9\l  br i1 %10, label %41, label %11\l|{<s0>T|<s1>F}}"];
	Node0x55b0d7920d90:s0 -> Node0x55b0d7921700;
	Node0x55b0d7920d90:s1 -> Node0x55b0d7922bc0;
	Node0x55b0d7922bc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l11:                                               \l  %12 = phi i64 [ %33, %32 ], [ 0, %2 ]\l  %13 = phi float* [ %35, %32 ], [ %9, %2 ]\l  %14 = getelementptr inbounds float, float* %13, i64 %12\l  %15 = load float, float* %14, align 4, !tbaa !9\l  %16 = fcmp ogt float %15, 0.000000e+00\l  br i1 %16, label %17, label %32\l|{<s0>T|<s1>F}}"];
	Node0x55b0d7922bc0:s0 -> Node0x55b0d7923c70;
	Node0x55b0d7922bc0:s1 -> Node0x55b0d7922d00;
	Node0x55b0d7923c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%17:\l17:                                               \l  %18 = load float*, float** %5, align 8, !tbaa !3\l  %19 = load float*, float** %6, align 8, !tbaa !11\l  %20 = icmp eq float* %18, %19\l  br i1 %20, label %23, label %21\l|{<s0>T|<s1>F}}"];
	Node0x55b0d7923c70:s0 -> Node0x55b0d7924580;
	Node0x55b0d7923c70:s1 -> Node0x55b0d7924610;
	Node0x55b0d7924610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%21:\l21:                                               \l  store float %15, float* %18, align 4, !tbaa !9\l  %22 = getelementptr inbounds float, float* %18, i64 1\l  store float* %22, float** %5, align 8, !tbaa !3\l  br label %32\l}"];
	Node0x55b0d7924610 -> Node0x55b0d7922d00;
	Node0x55b0d7924580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%23:\l23:                                               \l  invoke void\l... @_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJRKfEEEvN9__gnu_cxx17__normal_iterato\l...rIPfS1_EEDpOT_(%\"class.std::vector\"* nonnull align 8 dereferenceable(24) %0,\l... float* %18, float* nonnull align 4 dereferenceable(4) %14)\l          to label %32 unwind label %24\l}"];
	Node0x55b0d7924580 -> Node0x55b0d7922d00;
	Node0x55b0d7924580 -> Node0x55b0d79250d0;
	Node0x55b0d79250d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%24:\l24:                                               \l  %25 = landingpad \{ i8*, i32 \}\l          cleanup\l  %26 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %27 = load float*, float** %26, align 8, !tbaa !8\l  %28 = icmp eq float* %27, null\l  br i1 %28, label %31, label %29\l|{<s0>T|<s1>F}}"];
	Node0x55b0d79250d0:s0 -> Node0x55b0d7925e80;
	Node0x55b0d79250d0:s1 -> Node0x55b0d7925ed0;
	Node0x55b0d7925ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%29:\l29:                                               \l  %30 = bitcast float* %27 to i8*\l  call void @_ZdlPv(i8* nonnull %30) #6\l  br label %31\l}"];
	Node0x55b0d7925ed0 -> Node0x55b0d7925e80;
	Node0x55b0d7925e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%31:\l31:                                               \l  resume \{ i8*, i32 \} %25\l}"];
	Node0x55b0d7922d00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = add nuw i64 %12, 1\l  %34 = load float*, float** %3, align 8, !tbaa !3\l  %35 = load float*, float** %4, align 8, !tbaa !8\l  %36 = ptrtoint float* %34 to i64\l  %37 = ptrtoint float* %35 to i64\l  %38 = sub i64 %36, %37\l  %39 = ashr exact i64 %38, 2\l  %40 = icmp ugt i64 %39, %33\l  br i1 %40, label %11, label %41, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x55b0d7922d00:s0 -> Node0x55b0d7922bc0;
	Node0x55b0d7922d00:s1 -> Node0x55b0d7921700;
	Node0x55b0d7921700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%41:\l41:                                               \l  ret void\l}"];
}
