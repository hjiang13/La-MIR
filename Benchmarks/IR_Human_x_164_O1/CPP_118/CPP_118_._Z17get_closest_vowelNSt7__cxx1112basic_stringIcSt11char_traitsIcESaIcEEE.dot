digraph "CFG for '_Z17get_closest_vowelNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function" {
	label="CFG for '_Z17get_closest_vowelNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function";

	Node0x56495c8b91e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%2:\l  %3 = alloca i64, align 8\l  %4 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %5 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %6 = bitcast %\"class.std::__cxx11::basic_string\"* %4 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #6\l  %7 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2\l  %8 = bitcast %\"class.std::__cxx11::basic_string\"* %4 to %union.anon**\l  store %union.anon* %7, %union.anon** %8, align 8, !tbaa !3\l  %9 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 0, i32 0\l  %10 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 1\l  store i64 0, i64* %10, align 8, !tbaa !8\l  %11 = bitcast %union.anon* %7 to i8*\l  store i8 0, i8* %11, align 8, !tbaa !11\l  %12 = bitcast %\"class.std::__cxx11::basic_string\"* %5 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #6\l  %13 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %5, i64 0, i32 2\l  %14 = bitcast %\"class.std::__cxx11::basic_string\"* %5 to %union.anon**\l  store %union.anon* %13, %union.anon** %14, align 8, !tbaa !3\l  %15 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %5, i64 0, i32 0, i32 0\l  %16 = bitcast %union.anon* %13 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(10) %16, i8* noundef nonnull align 1 dereferenceable(10)\l... getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i64 10,\l... i1 false) #6\l  %17 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %5, i64 0, i32 1\l  store i64 10, i64* %17, align 8, !tbaa !8\l  %18 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %5, i64 0, i32 2, i32 1, i64 2\l  store i8 0, i8* %18, align 2, !tbaa !11\l  %19 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %1, i64 0, i32 1\l  %20 = load i64, i64* %19, align 8, !tbaa !8\l  %21 = trunc i64 %20 to i32\l  %22 = add i32 %21, -2\l  %23 = load i8*, i8** %15, align 8\l  %24 = load i64, i64* %17, align 8\l  %25 = getelementptr inbounds i8, i8* %23, i64 %24\l  %26 = ptrtoint i8* %25 to i64\l  %27 = icmp sgt i64 %24, 3\l  %28 = ashr i64 %24, 2\l  %29 = ashr i64 %24, 2\l  %30 = ashr i64 %24, 2\l  %31 = icmp sgt i32 %22, 0\l  br i1 %31, label %32, label %259\l|{<s0>T|<s1>F}}"];
	Node0x56495c8b91e0:s0 -> Node0x56495c8bd3d0;
	Node0x56495c8b91e0:s1 -> Node0x56495c8bd460;
	Node0x56495c8bd3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%32:\l32:                                               \l  %33 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %1, i64 0, i32 0, i32 0\l  %34 = load i8*, i8** %33, align 8, !tbaa !12\l  %35 = zext i32 %22 to i64\l  br label %36\l}"];
	Node0x56495c8bd3d0 -> Node0x56495c8bd950;
	Node0x56495c8bd950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%36:\l36:                                               \l  %37 = phi i64 [ %35, %32 ], [ %252, %249 ]\l  %38 = phi i32 [ %22, %32 ], [ %250, %249 ]\l  %39 = getelementptr inbounds i8, i8* %34, i64 %37\l  br i1 %27, label %40, label %63\l|{<s0>T|<s1>F}}"];
	Node0x56495c8bd950:s0 -> Node0x56495c8bdd80;
	Node0x56495c8bd950:s1 -> Node0x56495c8bde10;
	Node0x56495c8bdd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%40:\l40:                                               \l  %41 = load i8, i8* %39, align 1, !tbaa !11\l  br label %42\l}"];
	Node0x56495c8bdd80 -> Node0x56495c8bdfc0;
	Node0x56495c8bdfc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = phi i64 [ %28, %40 ], [ %61, %59 ]\l  %44 = phi i8* [ %23, %40 ], [ %60, %59 ]\l  %45 = load i8, i8* %44, align 1, !tbaa !11\l  %46 = icmp eq i8 %45, %41\l  br i1 %46, label %92, label %47\l|{<s0>T|<s1>F}}"];
	Node0x56495c8bdfc0:s0 -> Node0x56495c8be410;
	Node0x56495c8bdfc0:s1 -> Node0x56495c8be4a0;
	Node0x56495c8be4a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = getelementptr inbounds i8, i8* %44, i64 1\l  %49 = load i8, i8* %48, align 1, !tbaa !11\l  %50 = icmp eq i8 %49, %41\l  br i1 %50, label %90, label %51\l|{<s0>T|<s1>F}}"];
	Node0x56495c8be4a0:s0 -> Node0x56495c8be7b0;
	Node0x56495c8be4a0:s1 -> Node0x56495c8be800;
	Node0x56495c8be800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = getelementptr inbounds i8, i8* %44, i64 2\l  %53 = load i8, i8* %52, align 1, !tbaa !11\l  %54 = icmp eq i8 %53, %41\l  br i1 %54, label %88, label %55\l|{<s0>T|<s1>F}}"];
	Node0x56495c8be800:s0 -> Node0x56495c8beae0;
	Node0x56495c8be800:s1 -> Node0x56495c8beb30;
	Node0x56495c8beb30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%55:\l55:                                               \l  %56 = getelementptr inbounds i8, i8* %44, i64 3\l  %57 = load i8, i8* %56, align 1, !tbaa !11\l  %58 = icmp eq i8 %57, %41\l  br i1 %58, label %86, label %59\l|{<s0>T|<s1>F}}"];
	Node0x56495c8beb30:s0 -> Node0x56495c8bee10;
	Node0x56495c8beb30:s1 -> Node0x56495c8be0b0;
	Node0x56495c8be0b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%59:\l59:                                               \l  %60 = getelementptr inbounds i8, i8* %44, i64 4\l  %61 = add nsw i64 %43, -1\l  %62 = icmp sgt i64 %43, 1\l  br i1 %62, label %42, label %63, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x56495c8be0b0:s0 -> Node0x56495c8bdfc0;
	Node0x56495c8be0b0:s1 -> Node0x56495c8bde10;
	Node0x56495c8bde10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%63:\l63:                                               \l  %64 = phi i8* [ %23, %36 ], [ %60, %59 ]\l  %65 = ptrtoint i8* %64 to i64\l  %66 = sub i64 %26, %65\l  switch i64 %66, label %85 [\l    i64 3, label %67\l    i64 2, label %73\l    i64 1, label %80\l  ]\l|{<s0>def|<s1>3|<s2>2|<s3>1}}"];
	Node0x56495c8bde10:s0 -> Node0x56495c8bf7f0;
	Node0x56495c8bde10:s1 -> Node0x56495c8bf840;
	Node0x56495c8bde10:s2 -> Node0x56495c8bf890;
	Node0x56495c8bde10:s3 -> Node0x56495c8bf920;
	Node0x56495c8bf840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%67:\l67:                                               \l  %68 = load i8, i8* %64, align 1, !tbaa !11\l  %69 = load i8, i8* %39, align 1, !tbaa !11\l  %70 = icmp eq i8 %68, %69\l  br i1 %70, label %92, label %71\l|{<s0>T|<s1>F}}"];
	Node0x56495c8bf840:s0 -> Node0x56495c8be410;
	Node0x56495c8bf840:s1 -> Node0x56495c8bfb70;
	Node0x56495c8bfb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%71:\l71:                                               \l  %72 = getelementptr inbounds i8, i8* %64, i64 1\l  br label %73\l}"];
	Node0x56495c8bfb70 -> Node0x56495c8bf890;
	Node0x56495c8bf890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%73:\l73:                                               \l  %74 = phi i8* [ %64, %63 ], [ %72, %71 ]\l  %75 = load i8, i8* %74, align 1, !tbaa !11\l  %76 = load i8, i8* %39, align 1, !tbaa !11\l  %77 = icmp eq i8 %75, %76\l  br i1 %77, label %92, label %78\l|{<s0>T|<s1>F}}"];
	Node0x56495c8bf890:s0 -> Node0x56495c8be410;
	Node0x56495c8bf890:s1 -> Node0x56495c8bffa0;
	Node0x56495c8bffa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%78:\l78:                                               \l  %79 = getelementptr inbounds i8, i8* %74, i64 1\l  br label %80\l}"];
	Node0x56495c8bffa0 -> Node0x56495c8bf920;
	Node0x56495c8bf920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%80:\l80:                                               \l  %81 = phi i8* [ %64, %63 ], [ %79, %78 ]\l  %82 = load i8, i8* %81, align 1, !tbaa !11\l  %83 = load i8, i8* %39, align 1, !tbaa !11\l  %84 = icmp eq i8 %82, %83\l  br i1 %84, label %92, label %85\l|{<s0>T|<s1>F}}"];
	Node0x56495c8bf920:s0 -> Node0x56495c8be410;
	Node0x56495c8bf920:s1 -> Node0x56495c8bf7f0;
	Node0x56495c8bf7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%85:\l85:                                               \l  br label %92\l}"];
	Node0x56495c8bf7f0 -> Node0x56495c8be410;
	Node0x56495c8bee10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%86:\l86:                                               \l  %87 = getelementptr inbounds i8, i8* %44, i64 3\l  br label %92\l}"];
	Node0x56495c8bee10 -> Node0x56495c8be410;
	Node0x56495c8beae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%88:\l88:                                               \l  %89 = getelementptr inbounds i8, i8* %44, i64 2\l  br label %92\l}"];
	Node0x56495c8beae0 -> Node0x56495c8be410;
	Node0x56495c8be7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%90:\l90:                                               \l  %91 = getelementptr inbounds i8, i8* %44, i64 1\l  br label %92\l}"];
	Node0x56495c8be7b0 -> Node0x56495c8be410;
	Node0x56495c8be410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%92:\l92:                                               \l  %93 = phi i8* [ %25, %85 ], [ %64, %67 ], [ %74, %73 ], [ %81, %80 ], [ %87,\l... %86 ], [ %89, %88 ], [ %91, %90 ], [ %44, %42 ]\l  %94 = icmp eq i8* %93, %25\l  br i1 %94, label %249, label %95\l|{<s0>T|<s1>F}}"];
	Node0x56495c8be410:s0 -> Node0x56495c8bda80;
	Node0x56495c8be410:s1 -> Node0x56495c8c0a50;
	Node0x56495c8c0a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%95:\l95:                                               \l  %96 = shl i64 %37, 32\l  %97 = add i64 %96, 4294967296\l  %98 = ashr exact i64 %97, 32\l  %99 = getelementptr inbounds i8, i8* %34, i64 %98\l  br i1 %27, label %100, label %123\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c0a50:s0 -> Node0x56495c8c0da0;
	Node0x56495c8c0a50:s1 -> Node0x56495c8c0df0;
	Node0x56495c8c0da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%100:\l100:                                              \l  %101 = load i8, i8* %99, align 1, !tbaa !11\l  br label %102\l}"];
	Node0x56495c8c0da0 -> Node0x56495c8c0f60;
	Node0x56495c8c0f60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%102:\l102:                                              \l  %103 = phi i64 [ %29, %100 ], [ %121, %119 ]\l  %104 = phi i8* [ %23, %100 ], [ %120, %119 ]\l  %105 = load i8, i8* %104, align 1, !tbaa !11\l  %106 = icmp eq i8 %105, %101\l  br i1 %106, label %152, label %107\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c0f60:s0 -> Node0x56495c8c1330;
	Node0x56495c8c0f60:s1 -> Node0x56495c8c1380;
	Node0x56495c8c1380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%107:\l107:                                              \l  %108 = getelementptr inbounds i8, i8* %104, i64 1\l  %109 = load i8, i8* %108, align 1, !tbaa !11\l  %110 = icmp eq i8 %109, %101\l  br i1 %110, label %150, label %111\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c1380:s0 -> Node0x56495c8c1620;
	Node0x56495c8c1380:s1 -> Node0x56495c8c1670;
	Node0x56495c8c1670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%111:\l111:                                              \l  %112 = getelementptr inbounds i8, i8* %104, i64 2\l  %113 = load i8, i8* %112, align 1, !tbaa !11\l  %114 = icmp eq i8 %113, %101\l  br i1 %114, label %148, label %115\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c1670:s0 -> Node0x56495c8c1910;
	Node0x56495c8c1670:s1 -> Node0x56495c8c1960;
	Node0x56495c8c1960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%115:\l115:                                              \l  %116 = getelementptr inbounds i8, i8* %104, i64 3\l  %117 = load i8, i8* %116, align 1, !tbaa !11\l  %118 = icmp eq i8 %117, %101\l  br i1 %118, label %146, label %119\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c1960:s0 -> Node0x56495c8c1c00;
	Node0x56495c8c1960:s1 -> Node0x56495c8c1050;
	Node0x56495c8c1050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%119:\l119:                                              \l  %120 = getelementptr inbounds i8, i8* %104, i64 4\l  %121 = add nsw i64 %103, -1\l  %122 = icmp sgt i64 %103, 1\l  br i1 %122, label %102, label %123, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c1050:s0 -> Node0x56495c8c0f60;
	Node0x56495c8c1050:s1 -> Node0x56495c8c0df0;
	Node0x56495c8c0df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%123:\l123:                                              \l  %124 = phi i8* [ %23, %95 ], [ %120, %119 ]\l  %125 = ptrtoint i8* %124 to i64\l  %126 = sub i64 %26, %125\l  switch i64 %126, label %145 [\l    i64 3, label %127\l    i64 2, label %133\l    i64 1, label %140\l  ]\l|{<s0>def|<s1>3|<s2>2|<s3>1}}"];
	Node0x56495c8c0df0:s0 -> Node0x56495c8c2730;
	Node0x56495c8c0df0:s1 -> Node0x56495c8c2780;
	Node0x56495c8c0df0:s2 -> Node0x56495c8c27d0;
	Node0x56495c8c0df0:s3 -> Node0x56495c8c2820;
	Node0x56495c8c2780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%127:\l127:                                              \l  %128 = load i8, i8* %124, align 1, !tbaa !11\l  %129 = load i8, i8* %99, align 1, !tbaa !11\l  %130 = icmp eq i8 %128, %129\l  br i1 %130, label %152, label %131\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c2780:s0 -> Node0x56495c8c1330;
	Node0x56495c8c2780:s1 -> Node0x56495c8c3350;
	Node0x56495c8c3350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%131:\l131:                                              \l  %132 = getelementptr inbounds i8, i8* %124, i64 1\l  br label %133\l}"];
	Node0x56495c8c3350 -> Node0x56495c8c27d0;
	Node0x56495c8c27d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%133:\l133:                                              \l  %134 = phi i8* [ %124, %123 ], [ %132, %131 ]\l  %135 = load i8, i8* %134, align 1, !tbaa !11\l  %136 = load i8, i8* %99, align 1, !tbaa !11\l  %137 = icmp eq i8 %135, %136\l  br i1 %137, label %152, label %138\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c27d0:s0 -> Node0x56495c8c1330;
	Node0x56495c8c27d0:s1 -> Node0x56495c8c3780;
	Node0x56495c8c3780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%138:\l138:                                              \l  %139 = getelementptr inbounds i8, i8* %134, i64 1\l  br label %140\l}"];
	Node0x56495c8c3780 -> Node0x56495c8c2820;
	Node0x56495c8c2820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%140:\l140:                                              \l  %141 = phi i8* [ %124, %123 ], [ %139, %138 ]\l  %142 = load i8, i8* %141, align 1, !tbaa !11\l  %143 = load i8, i8* %99, align 1, !tbaa !11\l  %144 = icmp eq i8 %142, %143\l  br i1 %144, label %152, label %145\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c2820:s0 -> Node0x56495c8c1330;
	Node0x56495c8c2820:s1 -> Node0x56495c8c2730;
	Node0x56495c8c2730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%145:\l145:                                              \l  br label %152\l}"];
	Node0x56495c8c2730 -> Node0x56495c8c1330;
	Node0x56495c8c1c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%146:\l146:                                              \l  %147 = getelementptr inbounds i8, i8* %104, i64 3\l  br label %152\l}"];
	Node0x56495c8c1c00 -> Node0x56495c8c1330;
	Node0x56495c8c1910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%148:\l148:                                              \l  %149 = getelementptr inbounds i8, i8* %104, i64 2\l  br label %152\l}"];
	Node0x56495c8c1910 -> Node0x56495c8c1330;
	Node0x56495c8c1620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%150:\l150:                                              \l  %151 = getelementptr inbounds i8, i8* %104, i64 1\l  br label %152\l}"];
	Node0x56495c8c1620 -> Node0x56495c8c1330;
	Node0x56495c8c1330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%152:\l152:                                              \l  %153 = phi i8* [ %25, %145 ], [ %124, %127 ], [ %134, %133 ], [ %141, %140\l... ], [ %147, %146 ], [ %149, %148 ], [ %151, %150 ], [ %104, %102 ]\l  %154 = icmp eq i8* %153, %25\l  br i1 %154, label %155, label %249\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c1330:s0 -> Node0x56495c8c4230;
	Node0x56495c8c1330:s1 -> Node0x56495c8bda80;
	Node0x56495c8c4230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%155:\l155:                                              \l  %156 = add nsw i32 %38, -1\l  %157 = zext i32 %156 to i64\l  %158 = getelementptr inbounds i8, i8* %34, i64 %157\l  br i1 %27, label %159, label %182\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c4230:s0 -> Node0x56495c8c44d0;
	Node0x56495c8c4230:s1 -> Node0x56495c8c4520;
	Node0x56495c8c44d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%159:\l159:                                              \l  %160 = load i8, i8* %158, align 1, !tbaa !11\l  br label %161\l}"];
	Node0x56495c8c44d0 -> Node0x56495c8c4690;
	Node0x56495c8c4690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%161:\l161:                                              \l  %162 = phi i64 [ %30, %159 ], [ %180, %178 ]\l  %163 = phi i8* [ %23, %159 ], [ %179, %178 ]\l  %164 = load i8, i8* %163, align 1, !tbaa !11\l  %165 = icmp eq i8 %164, %160\l  br i1 %165, label %211, label %166\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c4690:s0 -> Node0x56495c8c4a30;
	Node0x56495c8c4690:s1 -> Node0x56495c8c4a80;
	Node0x56495c8c4a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%166:\l166:                                              \l  %167 = getelementptr inbounds i8, i8* %163, i64 1\l  %168 = load i8, i8* %167, align 1, !tbaa !11\l  %169 = icmp eq i8 %168, %160\l  br i1 %169, label %209, label %170\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c4a80:s0 -> Node0x56495c8c4d20;
	Node0x56495c8c4a80:s1 -> Node0x56495c8c4d70;
	Node0x56495c8c4d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%170:\l170:                                              \l  %171 = getelementptr inbounds i8, i8* %163, i64 2\l  %172 = load i8, i8* %171, align 1, !tbaa !11\l  %173 = icmp eq i8 %172, %160\l  br i1 %173, label %207, label %174\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c4d70:s0 -> Node0x56495c8c5010;
	Node0x56495c8c4d70:s1 -> Node0x56495c8c5060;
	Node0x56495c8c5060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%174:\l174:                                              \l  %175 = getelementptr inbounds i8, i8* %163, i64 3\l  %176 = load i8, i8* %175, align 1, !tbaa !11\l  %177 = icmp eq i8 %176, %160\l  br i1 %177, label %205, label %178\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c5060:s0 -> Node0x56495c8c5300;
	Node0x56495c8c5060:s1 -> Node0x56495c8c4750;
	Node0x56495c8c4750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%178:\l178:                                              \l  %179 = getelementptr inbounds i8, i8* %163, i64 4\l  %180 = add nsw i64 %162, -1\l  %181 = icmp sgt i64 %162, 1\l  br i1 %181, label %161, label %182, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c4750:s0 -> Node0x56495c8c4690;
	Node0x56495c8c4750:s1 -> Node0x56495c8c4520;
	Node0x56495c8c4520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%182:\l182:                                              \l  %183 = phi i8* [ %23, %155 ], [ %179, %178 ]\l  %184 = ptrtoint i8* %183 to i64\l  %185 = sub i64 %26, %184\l  switch i64 %185, label %204 [\l    i64 3, label %186\l    i64 2, label %192\l    i64 1, label %199\l  ]\l|{<s0>def|<s1>3|<s2>2|<s3>1}}"];
	Node0x56495c8c4520:s0 -> Node0x56495c8c5820;
	Node0x56495c8c4520:s1 -> Node0x56495c8c5870;
	Node0x56495c8c4520:s2 -> Node0x56495c8c58c0;
	Node0x56495c8c4520:s3 -> Node0x56495c8c5910;
	Node0x56495c8c5870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%186:\l186:                                              \l  %187 = load i8, i8* %183, align 1, !tbaa !11\l  %188 = load i8, i8* %158, align 1, !tbaa !11\l  %189 = icmp eq i8 %187, %188\l  br i1 %189, label %211, label %190\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c5870:s0 -> Node0x56495c8c4a30;
	Node0x56495c8c5870:s1 -> Node0x56495c8c5c30;
	Node0x56495c8c5c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%190:\l190:                                              \l  %191 = getelementptr inbounds i8, i8* %183, i64 1\l  br label %192\l}"];
	Node0x56495c8c5c30 -> Node0x56495c8c58c0;
	Node0x56495c8c58c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%192:\l192:                                              \l  %193 = phi i8* [ %183, %182 ], [ %191, %190 ]\l  %194 = load i8, i8* %193, align 1, !tbaa !11\l  %195 = load i8, i8* %158, align 1, !tbaa !11\l  %196 = icmp eq i8 %194, %195\l  br i1 %196, label %211, label %197\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c58c0:s0 -> Node0x56495c8c4a30;
	Node0x56495c8c58c0:s1 -> Node0x56495c8c6060;
	Node0x56495c8c6060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%197:\l197:                                              \l  %198 = getelementptr inbounds i8, i8* %193, i64 1\l  br label %199\l}"];
	Node0x56495c8c6060 -> Node0x56495c8c5910;
	Node0x56495c8c5910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%199:\l199:                                              \l  %200 = phi i8* [ %183, %182 ], [ %198, %197 ]\l  %201 = load i8, i8* %200, align 1, !tbaa !11\l  %202 = load i8, i8* %158, align 1, !tbaa !11\l  %203 = icmp eq i8 %201, %202\l  br i1 %203, label %211, label %204\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c5910:s0 -> Node0x56495c8c4a30;
	Node0x56495c8c5910:s1 -> Node0x56495c8c5820;
	Node0x56495c8c5820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%204:\l204:                                              \l  br label %211\l}"];
	Node0x56495c8c5820 -> Node0x56495c8c4a30;
	Node0x56495c8c5300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%205:\l205:                                              \l  %206 = getelementptr inbounds i8, i8* %163, i64 3\l  br label %211\l}"];
	Node0x56495c8c5300 -> Node0x56495c8c4a30;
	Node0x56495c8c5010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%207:\l207:                                              \l  %208 = getelementptr inbounds i8, i8* %163, i64 2\l  br label %211\l}"];
	Node0x56495c8c5010 -> Node0x56495c8c4a30;
	Node0x56495c8c4d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%209:\l209:                                              \l  %210 = getelementptr inbounds i8, i8* %163, i64 1\l  br label %211\l}"];
	Node0x56495c8c4d20 -> Node0x56495c8c4a30;
	Node0x56495c8c4a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%211:\l211:                                              \l  %212 = phi i8* [ %25, %204 ], [ %183, %186 ], [ %193, %192 ], [ %200, %199\l... ], [ %206, %205 ], [ %208, %207 ], [ %210, %209 ], [ %163, %161 ]\l  %213 = icmp eq i8* %212, %25\l  br i1 %213, label %214, label %249\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c4a30:s0 -> Node0x56495c8c6b10;
	Node0x56495c8c4a30:s1 -> Node0x56495c8bda80;
	Node0x56495c8c6b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%214:\l214:                                              \l  %215 = load i8, i8* %39, align 1, !tbaa !11\l  call void @llvm.experimental.noalias.scope.decl(metadata !16)\l  %216 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2\l  %217 = bitcast %\"class.std::__cxx11::basic_string\"* %0 to %union.anon**\l  store %union.anon* %216, %union.anon** %217, align 8, !tbaa !3, !alias.scope\l... !16\l  %218 = load i8*, i8** %9, align 8, !tbaa !12, !noalias !16\l  %219 = load i64, i64* %10, align 8, !tbaa !8, !noalias !16\l  %220 = bitcast i64* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #6, !noalias !16\l  store i64 %219, i64* %3, align 8, !tbaa !19, !noalias !16\l  %221 = icmp ugt i64 %219, 15\l  br i1 %221, label %222, label %228\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c6b10:s0 -> Node0x56495c8bca30;
	Node0x56495c8c6b10:s1 -> Node0x56495c8bcac0;
	Node0x56495c8bca30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%222:\l222:                                              \l  %223 = invoke i8*\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%\"class.s\l...td::__cxx11::basic_string\"* nonnull align 8 dereferenceable(32) %0, i64*\l... nonnull align 8 dereferenceable(8) %3, i64 0)\l          to label %224 unwind label %247\l}"];
	Node0x56495c8bca30 -> Node0x56495c8ba160;
	Node0x56495c8bca30 -> Node0x56495c8ba1b0;
	Node0x56495c8ba160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%224:\l224:                                              \l  %225 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  store i8* %223, i8** %225, align 8, !tbaa !12, !alias.scope !16\l  %226 = load i64, i64* %3, align 8, !tbaa !19, !noalias !16\l  %227 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2, i32 0\l  store i64 %226, i64* %227, align 8, !tbaa !11, !alias.scope !16\l  br label %228\l}"];
	Node0x56495c8ba160 -> Node0x56495c8bcac0;
	Node0x56495c8bcac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%228:\l228:                                              \l  %229 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %230 = load i8*, i8** %229, align 8, !tbaa !12, !alias.scope !16\l  switch i64 %219, label %233 [\l    i64 1, label %231\l    i64 0, label %234\l  ]\l|{<s0>def|<s1>1|<s2>0}}"];
	Node0x56495c8bcac0:s0 -> Node0x56495c8bcc00;
	Node0x56495c8bcac0:s1 -> Node0x56495c8baa00;
	Node0x56495c8bcac0:s2 -> Node0x56495c8c9e70;
	Node0x56495c8baa00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%231:\l231:                                              \l  %232 = load i8, i8* %218, align 1, !tbaa !11\l  store i8 %232, i8* %230, align 1, !tbaa !11\l  br label %234\l}"];
	Node0x56495c8baa00 -> Node0x56495c8c9e70;
	Node0x56495c8bcc00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%233:\l233:                                              \l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %230, i8* align 1 %218, i64\l... %219, i1 false) #6\l  br label %234\l}"];
	Node0x56495c8bcc00 -> Node0x56495c8c9e70;
	Node0x56495c8c9e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%234:\l234:                                              \l  %235 = load i64, i64* %3, align 8, !tbaa !19, !noalias !16\l  %236 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  store i64 %235, i64* %236, align 8, !tbaa !8, !alias.scope !16\l  %237 = load i8*, i8** %229, align 8, !tbaa !12, !alias.scope !16\l  %238 = getelementptr inbounds i8, i8* %237, i64 %235\l  store i8 0, i8* %238, align 1, !tbaa !11\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #6, !noalias !16\l  %239 = load i64, i64* %236, align 8, !tbaa !8, !alias.scope !16\l  %240 = invoke nonnull align 8 dereferenceable(32)\l... %\"class.std::__cxx11::basic_string\"*\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%\"\l...class.std::__cxx11::basic_string\"* nonnull align 8 dereferenceable(32) %0, i64\l... %239, i64 0, i64 1, i8 signext %215)\l          to label %275 unwind label %241\l}"];
	Node0x56495c8c9e70 -> Node0x56495c8caa70;
	Node0x56495c8c9e70 -> Node0x56495c8cab00;
	Node0x56495c8cab00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%241:\l241:                                              \l  %242 = landingpad \{ i8*, i32 \}\l          cleanup\l  %243 = load i8*, i8** %229, align 8, !tbaa !12, !alias.scope !16\l  %244 = bitcast %union.anon* %216 to i8*\l  %245 = icmp eq i8* %243, %244\l  br i1 %245, label %253, label %246\l|{<s0>T|<s1>F}}"];
	Node0x56495c8cab00:s0 -> Node0x56495c8cb070;
	Node0x56495c8cab00:s1 -> Node0x56495c8cb100;
	Node0x56495c8cb100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%246:\l246:                                              \l  call void @_ZdlPv(i8* %243) #6\l  br label %253\l}"];
	Node0x56495c8cb100 -> Node0x56495c8cb070;
	Node0x56495c8ba1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%247:\l247:                                              \l  %248 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %253\l}"];
	Node0x56495c8ba1b0 -> Node0x56495c8cb070;
	Node0x56495c8bda80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%249:\l249:                                              \l  %250 = add nsw i32 %38, -1\l  %251 = icmp sgt i64 %37, 1\l  %252 = add nsw i64 %37, -1\l  br i1 %251, label %36, label %259, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x56495c8bda80:s0 -> Node0x56495c8bd950;
	Node0x56495c8bda80:s1 -> Node0x56495c8bd460;
	Node0x56495c8cb070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%253:\l253:                                              \l  %254 = phi \{ i8*, i32 \} [ %248, %247 ], [ %242, %246 ], [ %242, %241 ]\l  %255 = load i8*, i8** %15, align 8, !tbaa !12\l  %256 = bitcast %union.anon* %13 to i8*\l  %257 = icmp eq i8* %255, %256\l  br i1 %257, label %286, label %258\l|{<s0>T|<s1>F}}"];
	Node0x56495c8cb070:s0 -> Node0x56495c8c2ad0;
	Node0x56495c8cb070:s1 -> Node0x56495c8c2b20;
	Node0x56495c8c2b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%258:\l258:                                              \l  call void @_ZdlPv(i8* %255) #6\l  br label %286\l}"];
	Node0x56495c8c2b20 -> Node0x56495c8c2ad0;
	Node0x56495c8bd460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%259:\l259:                                              \l  %260 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2\l  %261 = bitcast %\"class.std::__cxx11::basic_string\"* %0 to %union.anon**\l  store %union.anon* %260, %union.anon** %261, align 8, !tbaa !3\l  %262 = load i8*, i8** %9, align 8, !tbaa !12\l  %263 = bitcast %union.anon* %7 to i8*\l  %264 = icmp eq i8* %262, %263\l  br i1 %264, label %265, label %267\l|{<s0>T|<s1>F}}"];
	Node0x56495c8bd460:s0 -> Node0x56495c8c30f0;
	Node0x56495c8bd460:s1 -> Node0x56495c8c3140;
	Node0x56495c8c30f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%265:\l265:                                              \l  %266 = bitcast %union.anon* %260 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %266, i8* noundef nonnull align 8 dereferenceable(16)\l... %263, i64 16, i1 false) #6\l  br label %272\l}"];
	Node0x56495c8c30f0 -> Node0x56495c8ccc90;
	Node0x56495c8c3140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%267:\l267:                                              \l  %268 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  store i8* %262, i8** %268, align 8, !tbaa !12\l  %269 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2, i32 0\l  %270 = load i64, i64* %269, align 8, !tbaa !11\l  %271 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2, i32 0\l  store i64 %270, i64* %271, align 8, !tbaa !11\l  br label %272\l}"];
	Node0x56495c8c3140 -> Node0x56495c8ccc90;
	Node0x56495c8ccc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%272:\l272:                                              \l  %273 = load i64, i64* %10, align 8, !tbaa !8\l  %274 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  store i64 %273, i64* %274, align 8, !tbaa !8\l  store %union.anon* %7, %union.anon** %8, align 8, !tbaa !12\l  store i64 0, i64* %10, align 8, !tbaa !8\l  store i8 0, i8* %263, align 8, !tbaa !11\l  br label %275\l}"];
	Node0x56495c8ccc90 -> Node0x56495c8caa70;
	Node0x56495c8caa70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%275:\l275:                                              \l  %276 = load i8*, i8** %15, align 8, !tbaa !12\l  %277 = bitcast %union.anon* %13 to i8*\l  %278 = icmp eq i8* %276, %277\l  br i1 %278, label %280, label %279\l|{<s0>T|<s1>F}}"];
	Node0x56495c8caa70:s0 -> Node0x56495c8cdb50;
	Node0x56495c8caa70:s1 -> Node0x56495c8cdba0;
	Node0x56495c8cdba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%279:\l279:                                              \l  call void @_ZdlPv(i8* %276) #6\l  br label %280\l}"];
	Node0x56495c8cdba0 -> Node0x56495c8cdb50;
	Node0x56495c8cdb50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%280:\l280:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #6\l  %281 = load i8*, i8** %9, align 8, !tbaa !12\l  %282 = bitcast %union.anon* %7 to i8*\l  %283 = icmp eq i8* %281, %282\l  br i1 %283, label %285, label %284\l|{<s0>T|<s1>F}}"];
	Node0x56495c8cdb50:s0 -> Node0x56495c8ce0c0;
	Node0x56495c8cdb50:s1 -> Node0x56495c8ce110;
	Node0x56495c8ce110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%284:\l284:                                              \l  call void @_ZdlPv(i8* %281) #6\l  br label %285\l}"];
	Node0x56495c8ce110 -> Node0x56495c8ce0c0;
	Node0x56495c8ce0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%285:\l285:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6\l  ret void\l}"];
	Node0x56495c8c2ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%286:\l286:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #6\l  %287 = load i8*, i8** %9, align 8, !tbaa !12\l  %288 = bitcast %union.anon* %7 to i8*\l  %289 = icmp eq i8* %287, %288\l  br i1 %289, label %291, label %290\l|{<s0>T|<s1>F}}"];
	Node0x56495c8c2ad0:s0 -> Node0x56495c8ce7b0;
	Node0x56495c8c2ad0:s1 -> Node0x56495c8ce800;
	Node0x56495c8ce800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%290:\l290:                                              \l  call void @_ZdlPv(i8* %287) #6\l  br label %291\l}"];
	Node0x56495c8ce800 -> Node0x56495c8ce7b0;
	Node0x56495c8ce7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%291:\l291:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6\l  resume \{ i8*, i32 \} %254\l}"];
}
