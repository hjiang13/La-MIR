; ModuleID = '../../Human_xBenchmarks_164/CPP_118/CPP_118.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_118/CPP_118.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@.str.1 = private unnamed_addr constant [11 x i8] c"AEIOUaeiou\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z17get_closest_vowelNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %8 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  store %union.anon* %7, %union.anon** %8, align 8, !tbaa !3
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  store i64 0, i64* %10, align 8, !tbaa !8
  %11 = bitcast %union.anon* %7 to i8*
  store i8 0, i8* %11, align 8, !tbaa !11
  %12 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #6
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %14 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  store %union.anon* %13, %union.anon** %14, align 8, !tbaa !3
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %16 = bitcast %union.anon* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(10) %16, i8* noundef nonnull align 1 dereferenceable(10) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i64 10, i1 false) #6
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  store i64 10, i64* %17, align 8, !tbaa !8
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 1, i64 2
  store i8 0, i8* %18, align 2, !tbaa !11
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %20 = load i64, i64* %19, align 8, !tbaa !8
  %21 = trunc i64 %20 to i32
  %22 = add i32 %21, -2
  %23 = load i8*, i8** %15, align 8
  %24 = load i64, i64* %17, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  %26 = ptrtoint i8* %25 to i64
  %27 = icmp sgt i64 %24, 3
  %28 = ashr i64 %24, 2
  %29 = ashr i64 %24, 2
  %30 = ashr i64 %24, 2
  %31 = icmp sgt i32 %22, 0
  br i1 %31, label %32, label %259

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8, !tbaa !12
  %35 = zext i32 %22 to i64
  br label %36

36:                                               ; preds = %32, %249
  %37 = phi i64 [ %35, %32 ], [ %252, %249 ]
  %38 = phi i32 [ %22, %32 ], [ %250, %249 ]
  %39 = getelementptr inbounds i8, i8* %34, i64 %37
  br i1 %27, label %40, label %63

40:                                               ; preds = %36
  %41 = load i8, i8* %39, align 1, !tbaa !11
  br label %42

42:                                               ; preds = %59, %40
  %43 = phi i64 [ %28, %40 ], [ %61, %59 ]
  %44 = phi i8* [ %23, %40 ], [ %60, %59 ]
  %45 = load i8, i8* %44, align 1, !tbaa !11
  %46 = icmp eq i8 %45, %41
  br i1 %46, label %92, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds i8, i8* %44, i64 1
  %49 = load i8, i8* %48, align 1, !tbaa !11
  %50 = icmp eq i8 %49, %41
  br i1 %50, label %90, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds i8, i8* %44, i64 2
  %53 = load i8, i8* %52, align 1, !tbaa !11
  %54 = icmp eq i8 %53, %41
  br i1 %54, label %88, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds i8, i8* %44, i64 3
  %57 = load i8, i8* %56, align 1, !tbaa !11
  %58 = icmp eq i8 %57, %41
  br i1 %58, label %86, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds i8, i8* %44, i64 4
  %61 = add nsw i64 %43, -1
  %62 = icmp sgt i64 %43, 1
  br i1 %62, label %42, label %63, !llvm.loop !13

63:                                               ; preds = %59, %36
  %64 = phi i8* [ %23, %36 ], [ %60, %59 ]
  %65 = ptrtoint i8* %64 to i64
  %66 = sub i64 %26, %65
  switch i64 %66, label %85 [
    i64 3, label %67
    i64 2, label %73
    i64 1, label %80
  ]

67:                                               ; preds = %63
  %68 = load i8, i8* %64, align 1, !tbaa !11
  %69 = load i8, i8* %39, align 1, !tbaa !11
  %70 = icmp eq i8 %68, %69
  br i1 %70, label %92, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds i8, i8* %64, i64 1
  br label %73

73:                                               ; preds = %71, %63
  %74 = phi i8* [ %64, %63 ], [ %72, %71 ]
  %75 = load i8, i8* %74, align 1, !tbaa !11
  %76 = load i8, i8* %39, align 1, !tbaa !11
  %77 = icmp eq i8 %75, %76
  br i1 %77, label %92, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds i8, i8* %74, i64 1
  br label %80

80:                                               ; preds = %78, %63
  %81 = phi i8* [ %64, %63 ], [ %79, %78 ]
  %82 = load i8, i8* %81, align 1, !tbaa !11
  %83 = load i8, i8* %39, align 1, !tbaa !11
  %84 = icmp eq i8 %82, %83
  br i1 %84, label %92, label %85

85:                                               ; preds = %80, %63
  br label %92

86:                                               ; preds = %55
  %87 = getelementptr inbounds i8, i8* %44, i64 3
  br label %92

88:                                               ; preds = %51
  %89 = getelementptr inbounds i8, i8* %44, i64 2
  br label %92

90:                                               ; preds = %47
  %91 = getelementptr inbounds i8, i8* %44, i64 1
  br label %92

92:                                               ; preds = %42, %86, %88, %90, %85, %80, %73, %67
  %93 = phi i8* [ %25, %85 ], [ %64, %67 ], [ %74, %73 ], [ %81, %80 ], [ %87, %86 ], [ %89, %88 ], [ %91, %90 ], [ %44, %42 ]
  %94 = icmp eq i8* %93, %25
  br i1 %94, label %249, label %95

95:                                               ; preds = %92
  %96 = shl i64 %37, 32
  %97 = add i64 %96, 4294967296
  %98 = ashr exact i64 %97, 32
  %99 = getelementptr inbounds i8, i8* %34, i64 %98
  br i1 %27, label %100, label %123

100:                                              ; preds = %95
  %101 = load i8, i8* %99, align 1, !tbaa !11
  br label %102

102:                                              ; preds = %119, %100
  %103 = phi i64 [ %29, %100 ], [ %121, %119 ]
  %104 = phi i8* [ %23, %100 ], [ %120, %119 ]
  %105 = load i8, i8* %104, align 1, !tbaa !11
  %106 = icmp eq i8 %105, %101
  br i1 %106, label %152, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds i8, i8* %104, i64 1
  %109 = load i8, i8* %108, align 1, !tbaa !11
  %110 = icmp eq i8 %109, %101
  br i1 %110, label %150, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds i8, i8* %104, i64 2
  %113 = load i8, i8* %112, align 1, !tbaa !11
  %114 = icmp eq i8 %113, %101
  br i1 %114, label %148, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds i8, i8* %104, i64 3
  %117 = load i8, i8* %116, align 1, !tbaa !11
  %118 = icmp eq i8 %117, %101
  br i1 %118, label %146, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds i8, i8* %104, i64 4
  %121 = add nsw i64 %103, -1
  %122 = icmp sgt i64 %103, 1
  br i1 %122, label %102, label %123, !llvm.loop !13

123:                                              ; preds = %119, %95
  %124 = phi i8* [ %23, %95 ], [ %120, %119 ]
  %125 = ptrtoint i8* %124 to i64
  %126 = sub i64 %26, %125
  switch i64 %126, label %145 [
    i64 3, label %127
    i64 2, label %133
    i64 1, label %140
  ]

127:                                              ; preds = %123
  %128 = load i8, i8* %124, align 1, !tbaa !11
  %129 = load i8, i8* %99, align 1, !tbaa !11
  %130 = icmp eq i8 %128, %129
  br i1 %130, label %152, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds i8, i8* %124, i64 1
  br label %133

133:                                              ; preds = %131, %123
  %134 = phi i8* [ %124, %123 ], [ %132, %131 ]
  %135 = load i8, i8* %134, align 1, !tbaa !11
  %136 = load i8, i8* %99, align 1, !tbaa !11
  %137 = icmp eq i8 %135, %136
  br i1 %137, label %152, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds i8, i8* %134, i64 1
  br label %140

140:                                              ; preds = %138, %123
  %141 = phi i8* [ %124, %123 ], [ %139, %138 ]
  %142 = load i8, i8* %141, align 1, !tbaa !11
  %143 = load i8, i8* %99, align 1, !tbaa !11
  %144 = icmp eq i8 %142, %143
  br i1 %144, label %152, label %145

145:                                              ; preds = %140, %123
  br label %152

146:                                              ; preds = %115
  %147 = getelementptr inbounds i8, i8* %104, i64 3
  br label %152

148:                                              ; preds = %111
  %149 = getelementptr inbounds i8, i8* %104, i64 2
  br label %152

150:                                              ; preds = %107
  %151 = getelementptr inbounds i8, i8* %104, i64 1
  br label %152

152:                                              ; preds = %102, %146, %148, %150, %145, %140, %133, %127
  %153 = phi i8* [ %25, %145 ], [ %124, %127 ], [ %134, %133 ], [ %141, %140 ], [ %147, %146 ], [ %149, %148 ], [ %151, %150 ], [ %104, %102 ]
  %154 = icmp eq i8* %153, %25
  br i1 %154, label %155, label %249

155:                                              ; preds = %152
  %156 = add nsw i32 %38, -1
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds i8, i8* %34, i64 %157
  br i1 %27, label %159, label %182

159:                                              ; preds = %155
  %160 = load i8, i8* %158, align 1, !tbaa !11
  br label %161

161:                                              ; preds = %178, %159
  %162 = phi i64 [ %30, %159 ], [ %180, %178 ]
  %163 = phi i8* [ %23, %159 ], [ %179, %178 ]
  %164 = load i8, i8* %163, align 1, !tbaa !11
  %165 = icmp eq i8 %164, %160
  br i1 %165, label %211, label %166

166:                                              ; preds = %161
  %167 = getelementptr inbounds i8, i8* %163, i64 1
  %168 = load i8, i8* %167, align 1, !tbaa !11
  %169 = icmp eq i8 %168, %160
  br i1 %169, label %209, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds i8, i8* %163, i64 2
  %172 = load i8, i8* %171, align 1, !tbaa !11
  %173 = icmp eq i8 %172, %160
  br i1 %173, label %207, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds i8, i8* %163, i64 3
  %176 = load i8, i8* %175, align 1, !tbaa !11
  %177 = icmp eq i8 %176, %160
  br i1 %177, label %205, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds i8, i8* %163, i64 4
  %180 = add nsw i64 %162, -1
  %181 = icmp sgt i64 %162, 1
  br i1 %181, label %161, label %182, !llvm.loop !13

182:                                              ; preds = %178, %155
  %183 = phi i8* [ %23, %155 ], [ %179, %178 ]
  %184 = ptrtoint i8* %183 to i64
  %185 = sub i64 %26, %184
  switch i64 %185, label %204 [
    i64 3, label %186
    i64 2, label %192
    i64 1, label %199
  ]

186:                                              ; preds = %182
  %187 = load i8, i8* %183, align 1, !tbaa !11
  %188 = load i8, i8* %158, align 1, !tbaa !11
  %189 = icmp eq i8 %187, %188
  br i1 %189, label %211, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds i8, i8* %183, i64 1
  br label %192

192:                                              ; preds = %190, %182
  %193 = phi i8* [ %183, %182 ], [ %191, %190 ]
  %194 = load i8, i8* %193, align 1, !tbaa !11
  %195 = load i8, i8* %158, align 1, !tbaa !11
  %196 = icmp eq i8 %194, %195
  br i1 %196, label %211, label %197

197:                                              ; preds = %192
  %198 = getelementptr inbounds i8, i8* %193, i64 1
  br label %199

199:                                              ; preds = %197, %182
  %200 = phi i8* [ %183, %182 ], [ %198, %197 ]
  %201 = load i8, i8* %200, align 1, !tbaa !11
  %202 = load i8, i8* %158, align 1, !tbaa !11
  %203 = icmp eq i8 %201, %202
  br i1 %203, label %211, label %204

204:                                              ; preds = %199, %182
  br label %211

205:                                              ; preds = %174
  %206 = getelementptr inbounds i8, i8* %163, i64 3
  br label %211

207:                                              ; preds = %170
  %208 = getelementptr inbounds i8, i8* %163, i64 2
  br label %211

209:                                              ; preds = %166
  %210 = getelementptr inbounds i8, i8* %163, i64 1
  br label %211

211:                                              ; preds = %161, %205, %207, %209, %204, %199, %192, %186
  %212 = phi i8* [ %25, %204 ], [ %183, %186 ], [ %193, %192 ], [ %200, %199 ], [ %206, %205 ], [ %208, %207 ], [ %210, %209 ], [ %163, %161 ]
  %213 = icmp eq i8* %212, %25
  br i1 %213, label %214, label %249

214:                                              ; preds = %211
  %215 = load i8, i8* %39, align 1, !tbaa !11
  call void @llvm.experimental.noalias.scope.decl(metadata !16)
  %216 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %217 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %216, %union.anon** %217, align 8, !tbaa !3, !alias.scope !16
  %218 = load i8*, i8** %9, align 8, !tbaa !12, !noalias !16
  %219 = load i64, i64* %10, align 8, !tbaa !8, !noalias !16
  %220 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #6, !noalias !16
  store i64 %219, i64* %3, align 8, !tbaa !19, !noalias !16
  %221 = icmp ugt i64 %219, 15
  br i1 %221, label %222, label %228

222:                                              ; preds = %214
  %223 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %224 unwind label %247

224:                                              ; preds = %222
  %225 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %223, i8** %225, align 8, !tbaa !12, !alias.scope !16
  %226 = load i64, i64* %3, align 8, !tbaa !19, !noalias !16
  %227 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %226, i64* %227, align 8, !tbaa !11, !alias.scope !16
  br label %228

228:                                              ; preds = %224, %214
  %229 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %230 = load i8*, i8** %229, align 8, !tbaa !12, !alias.scope !16
  switch i64 %219, label %233 [
    i64 1, label %231
    i64 0, label %234
  ]

231:                                              ; preds = %228
  %232 = load i8, i8* %218, align 1, !tbaa !11
  store i8 %232, i8* %230, align 1, !tbaa !11
  br label %234

233:                                              ; preds = %228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %230, i8* align 1 %218, i64 %219, i1 false) #6
  br label %234

234:                                              ; preds = %233, %231, %228
  %235 = load i64, i64* %3, align 8, !tbaa !19, !noalias !16
  %236 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %235, i64* %236, align 8, !tbaa !8, !alias.scope !16
  %237 = load i8*, i8** %229, align 8, !tbaa !12, !alias.scope !16
  %238 = getelementptr inbounds i8, i8* %237, i64 %235
  store i8 0, i8* %238, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #6, !noalias !16
  %239 = load i64, i64* %236, align 8, !tbaa !8, !alias.scope !16
  %240 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64 %239, i64 0, i64 1, i8 signext %215)
          to label %275 unwind label %241

241:                                              ; preds = %234
  %242 = landingpad { i8*, i32 }
          cleanup
  %243 = load i8*, i8** %229, align 8, !tbaa !12, !alias.scope !16
  %244 = bitcast %union.anon* %216 to i8*
  %245 = icmp eq i8* %243, %244
  br i1 %245, label %253, label %246

246:                                              ; preds = %241
  call void @_ZdlPv(i8* %243) #6
  br label %253

247:                                              ; preds = %222
  %248 = landingpad { i8*, i32 }
          cleanup
  br label %253

249:                                              ; preds = %92, %211, %152
  %250 = add nsw i32 %38, -1
  %251 = icmp sgt i64 %37, 1
  %252 = add nsw i64 %37, -1
  br i1 %251, label %36, label %259, !llvm.loop !20

253:                                              ; preds = %247, %246, %241
  %254 = phi { i8*, i32 } [ %248, %247 ], [ %242, %246 ], [ %242, %241 ]
  %255 = load i8*, i8** %15, align 8, !tbaa !12
  %256 = bitcast %union.anon* %13 to i8*
  %257 = icmp eq i8* %255, %256
  br i1 %257, label %286, label %258

258:                                              ; preds = %253
  call void @_ZdlPv(i8* %255) #6
  br label %286

259:                                              ; preds = %249, %2
  %260 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %261 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %260, %union.anon** %261, align 8, !tbaa !3
  %262 = load i8*, i8** %9, align 8, !tbaa !12
  %263 = bitcast %union.anon* %7 to i8*
  %264 = icmp eq i8* %262, %263
  br i1 %264, label %265, label %267

265:                                              ; preds = %259
  %266 = bitcast %union.anon* %260 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %266, i8* noundef nonnull align 8 dereferenceable(16) %263, i64 16, i1 false) #6
  br label %272

267:                                              ; preds = %259
  %268 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %262, i8** %268, align 8, !tbaa !12
  %269 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %270 = load i64, i64* %269, align 8, !tbaa !11
  %271 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %270, i64* %271, align 8, !tbaa !11
  br label %272

272:                                              ; preds = %265, %267
  %273 = load i64, i64* %10, align 8, !tbaa !8
  %274 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %273, i64* %274, align 8, !tbaa !8
  store %union.anon* %7, %union.anon** %8, align 8, !tbaa !12
  store i64 0, i64* %10, align 8, !tbaa !8
  store i8 0, i8* %263, align 8, !tbaa !11
  br label %275

275:                                              ; preds = %234, %272
  %276 = load i8*, i8** %15, align 8, !tbaa !12
  %277 = bitcast %union.anon* %13 to i8*
  %278 = icmp eq i8* %276, %277
  br i1 %278, label %280, label %279

279:                                              ; preds = %275
  call void @_ZdlPv(i8* %276) #6
  br label %280

280:                                              ; preds = %275, %279
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #6
  %281 = load i8*, i8** %9, align 8, !tbaa !12
  %282 = bitcast %union.anon* %7 to i8*
  %283 = icmp eq i8* %281, %282
  br i1 %283, label %285, label %284

284:                                              ; preds = %280
  call void @_ZdlPv(i8* %281) #6
  br label %285

285:                                              ; preds = %280, %284
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6
  ret void

286:                                              ; preds = %258, %253
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #6
  %287 = load i8*, i8** %9, align 8, !tbaa !12
  %288 = bitcast %union.anon* %7 to i8*
  %289 = icmp eq i8* %287, %288
  br i1 %289, label %291, label %290

290:                                              ; preds = %286
  call void @_ZdlPv(i8* %287) #6
  br label %291

291:                                              ; preds = %290, %286
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6
  resume { i8*, i32 } %254
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #4

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #5

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = distinct !{!13, !14, !15}
!14 = !{!"llvm.loop.mustprogress"}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!18 = distinct !{!18, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!19 = !{!10, !10, i64 0}
!20 = distinct !{!20, !14, !15}
