digraph "CFG for '_Z23mean_absolute_deviationSt6vectorIfSaIfEE' function" {
	label="CFG for '_Z23mean_absolute_deviationSt6vectorIfSaIfEE' function";

	Node0x55db06898360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%1:\l  %2 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %3 = load float*, float** %2, align 8, !tbaa !3\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = load float*, float** %4, align 8, !tbaa !8\l  %6 = ptrtoint float* %3 to i64\l  %7 = ptrtoint float* %5 to i64\l  %8 = sub i64 %6, %7\l  %9 = ashr exact i64 %8, 2\l  %10 = icmp eq i64 %8, 0\l  br i1 %10, label %21, label %11\l|{<s0>T|<s1>F}}"];
	Node0x55db06898360:s0 -> Node0x55db06899800;
	Node0x55db06898360:s1 -> Node0x55db06899d20;
	Node0x55db06899d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%11:\l11:                                               \l  %12 = call i64 @llvm.umax.i64(i64 %9, i64 1)\l  br label %13\l}"];
	Node0x55db06899d20 -> Node0x55db0689a0a0;
	Node0x55db0689a0a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%13:\l13:                                               \l  %14 = phi i64 [ 0, %11 ], [ %19, %13 ]\l  %15 = phi float [ 0.000000e+00, %11 ], [ %18, %13 ]\l  %16 = getelementptr inbounds float, float* %5, i64 %14\l  %17 = load float, float* %16, align 4, !tbaa !9\l  %18 = fadd float %15, %17\l  %19 = add nuw nsw i64 %14, 1\l  %20 = icmp eq i64 %19, %12\l  br i1 %20, label %21, label %13, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x55db0689a0a0:s0 -> Node0x55db06899800;
	Node0x55db0689a0a0:s1 -> Node0x55db0689a0a0;
	Node0x55db06899800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%21:\l21:                                               \l  %22 = phi float [ 0.000000e+00, %1 ], [ %18, %13 ]\l  %23 = uitofp i64 %9 to float\l  %24 = fdiv float %22, %23\l  %25 = icmp eq i64 %8, 0\l  br i1 %25, label %38, label %26\l|{<s0>T|<s1>F}}"];
	Node0x55db06899800:s0 -> Node0x55db0689b450;
	Node0x55db06899800:s1 -> Node0x55db0689b4a0;
	Node0x55db0689b4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%26:\l26:                                               \l  %27 = call i64 @llvm.umax.i64(i64 %9, i64 1)\l  br label %28\l}"];
	Node0x55db0689b4a0 -> Node0x55db0689b730;
	Node0x55db0689b730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i64 [ 0, %26 ], [ %36, %28 ]\l  %30 = phi float [ 0.000000e+00, %26 ], [ %35, %28 ]\l  %31 = getelementptr inbounds float, float* %5, i64 %29\l  %32 = load float, float* %31, align 4, !tbaa !9\l  %33 = fsub float %32, %24\l  %34 = call float @llvm.fabs.f32(float %33) #2\l  %35 = fadd float %30, %34\l  %36 = add nuw nsw i64 %29, 1\l  %37 = icmp eq i64 %36, %27\l  br i1 %37, label %38, label %28, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x55db0689b730:s0 -> Node0x55db0689b450;
	Node0x55db0689b730:s1 -> Node0x55db0689b730;
	Node0x55db0689b450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%38:\l38:                                               \l  %39 = phi float [ 0.000000e+00, %21 ], [ %35, %28 ]\l  %40 = fdiv float %39, %23\l  ret float %40\l}"];
}
