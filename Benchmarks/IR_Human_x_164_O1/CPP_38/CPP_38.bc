; ModuleID = '../../Human_xBenchmarks_164/CPP_38/CPP_38.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_38/CPP_38.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@.str = private unnamed_addr constant [21 x i8] c"basic_string::substr\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"%s: __pos (which is %zu) > this->size() (which is %zu)\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z13encode_cyclicNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = alloca %"class.std::__cxx11::basic_string", align 8
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8, !tbaa !3
  %12 = trunc i64 %11 to i32
  %13 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %15 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  store %union.anon* %14, %union.anon** %15, align 8, !tbaa !10
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  store i64 0, i64* %16, align 8, !tbaa !3
  %17 = bitcast %union.anon* %14 to i8*
  store i8 0, i8* %17, align 8, !tbaa !11
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %19 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %18, %union.anon** %19, align 8, !tbaa !10
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %20, align 8, !tbaa !3
  %21 = bitcast %union.anon* %18 to i8*
  store i8 0, i8* %21, align 8, !tbaa !11
  %22 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %24 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %29 = bitcast %union.anon* %23 to i8*
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %31 = getelementptr %union.anon, %union.anon* %23, i64 0, i32 0
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %33 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  %34 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  %35 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %36 = bitcast %"class.std::__cxx11::basic_string"* %8 to %union.anon**
  %37 = bitcast i64* %4 to i8*
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  %40 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 1
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %43 = bitcast %"class.std::__cxx11::basic_string"* %7 to %union.anon**
  %44 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 0
  %46 = bitcast %union.anon* %42 to i8*
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %49 = bitcast %union.anon* %42 to i8*
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %51 = getelementptr %union.anon, %union.anon* %42, i64 0, i32 0
  %52 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 0
  %53 = bitcast %union.anon* %35 to i8*
  %54 = bitcast %"class.std::__cxx11::basic_string"* %9 to i8*
  %55 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2
  %56 = bitcast %"class.std::__cxx11::basic_string"* %9 to %union.anon**
  %57 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %58 = bitcast i64* %3 to i8*
  %59 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2, i32 0
  %61 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 1
  %63 = bitcast %union.anon* %55 to i8*
  %64 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %65 = getelementptr %union.anon, %union.anon* %55, i64 0, i32 0
  %66 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2, i32 0
  %67 = icmp sgt i32 %12, 0
  br i1 %67, label %68, label %289

68:                                               ; preds = %2
  %69 = bitcast %union.anon* %23 to i8*
  br label %70

70:                                               ; preds = %68, %267
  %71 = phi i64 [ %268, %267 ], [ 0, %68 ]
  %72 = phi i32 [ %270, %267 ], [ 0, %68 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #7
  %73 = zext i32 %72 to i64
  call void @llvm.experimental.noalias.scope.decl(metadata !12)
  %74 = load i64, i64* %10, align 8, !tbaa !3, !noalias !12
  %75 = icmp ult i64 %74, %73
  br i1 %75, label %76, label %79

76:                                               ; preds = %70
  %77 = zext i32 %72 to i64
  invoke void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 %77, i64 %74) #8
          to label %78 unwind label %195

78:                                               ; preds = %76
  unreachable

79:                                               ; preds = %70
  store %union.anon* %23, %union.anon** %24, align 8, !tbaa !10, !alias.scope !12
  %80 = load i8*, i8** %25, align 8, !tbaa !15, !noalias !12
  %81 = getelementptr inbounds i8, i8* %80, i64 %73
  %82 = sub i64 %74, %73
  %83 = icmp ult i64 %82, 3
  %84 = select i1 %83, i64 %82, i64 3
  switch i64 %84, label %87 [
    i64 1, label %85
    i64 0, label %88
  ]

85:                                               ; preds = %79
  %86 = load i8, i8* %81, align 1, !tbaa !11
  store i8 %86, i8* %69, align 8, !tbaa !11
  br label %88

87:                                               ; preds = %79
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 1 %81, i64 %84, i1 false) #7
  br label %88

88:                                               ; preds = %79, %85, %87
  store i64 %84, i64* %27, align 8, !tbaa !3, !alias.scope !12
  %89 = load i8*, i8** %26, align 8, !tbaa !15, !alias.scope !12
  %90 = getelementptr inbounds i8, i8* %89, i64 %84
  store i8 0, i8* %90, align 1, !tbaa !11
  %91 = load i8*, i8** %26, align 8, !tbaa !15
  %92 = icmp eq i8* %91, %29
  br i1 %92, label %93, label %106

93:                                               ; preds = %88
  %94 = load i64, i64* %27, align 8, !tbaa !3
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %102, label %96

96:                                               ; preds = %93
  %97 = load i8*, i8** %28, align 8, !tbaa !15
  %98 = icmp eq i64 %94, 1
  br i1 %98, label %99, label %101

99:                                               ; preds = %96
  %100 = load i8, i8* %91, align 1, !tbaa !11
  store i8 %100, i8* %97, align 1, !tbaa !11
  br label %102

101:                                              ; preds = %96
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %97, i8* align 1 %91, i64 %94, i1 false) #7
  br label %102

102:                                              ; preds = %101, %99, %93
  %103 = load i64, i64* %27, align 8, !tbaa !3
  store i64 %103, i64* %16, align 8, !tbaa !3
  %104 = load i8*, i8** %28, align 8, !tbaa !15
  %105 = getelementptr inbounds i8, i8* %104, i64 %103
  store i8 0, i8* %105, align 1, !tbaa !11
  br label %116

106:                                              ; preds = %88
  %107 = load i8*, i8** %28, align 8, !tbaa !15
  %108 = icmp eq i8* %107, %17
  %109 = load i64, i64* %30, align 8
  store i8* %91, i8** %28, align 8, !tbaa !15
  %110 = load i64, i64* %27, align 8, !tbaa !3
  store i64 %110, i64* %16, align 8, !tbaa !3
  %111 = load i64, i64* %31, align 8, !tbaa !11
  store i64 %111, i64* %30, align 8, !tbaa !11
  %112 = icmp eq i8* %107, null
  %113 = or i1 %108, %112
  br i1 %113, label %115, label %114

114:                                              ; preds = %106
  store i8* %107, i8** %26, align 8, !tbaa !15
  store i64 %109, i64* %32, align 8, !tbaa !11
  br label %116

115:                                              ; preds = %106
  store %union.anon* %23, %union.anon** %24, align 8, !tbaa !15
  br label %116

116:                                              ; preds = %102, %114, %115
  store i64 0, i64* %27, align 8, !tbaa !3
  %117 = load i8*, i8** %26, align 8, !tbaa !15
  store i8 0, i8* %117, align 1, !tbaa !11
  %118 = load i8*, i8** %26, align 8, !tbaa !15
  %119 = icmp eq i8* %118, %29
  br i1 %119, label %121, label %120

120:                                              ; preds = %116
  call void @_ZdlPv(i8* %118) #7
  br label %121

121:                                              ; preds = %116, %120
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #7
  %122 = load i64, i64* %16, align 8, !tbaa !3
  %123 = icmp eq i64 %122, 3
  br i1 %123, label %124, label %210

124:                                              ; preds = %121
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #7
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !16)
  store %union.anon* %35, %union.anon** %36, align 8, !tbaa !10, !alias.scope !16
  %125 = load i8*, i8** %28, align 8, !tbaa !15, !noalias !16
  %126 = getelementptr inbounds i8, i8* %125, i64 1
  %127 = add i64 %122, -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #7, !noalias !16
  store i64 %127, i64* %4, align 8, !tbaa !19, !noalias !16
  %128 = icmp ugt i64 %127, 15
  br i1 %128, label %129, label %133

129:                                              ; preds = %124
  %130 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %131 unwind label %198

131:                                              ; preds = %129
  store i8* %130, i8** %38, align 8, !tbaa !15, !alias.scope !16
  %132 = load i64, i64* %4, align 8, !tbaa !19, !noalias !16
  store i64 %132, i64* %39, align 8, !tbaa !11, !alias.scope !16
  br label %133

133:                                              ; preds = %131, %124
  %134 = load i8*, i8** %40, align 8, !tbaa !15, !alias.scope !16
  switch i64 %122, label %137 [
    i64 2, label %135
    i64 1, label %138
  ]

135:                                              ; preds = %133
  %136 = load i8, i8* %126, align 1, !tbaa !11
  store i8 %136, i8* %134, align 1, !tbaa !11
  br label %138

137:                                              ; preds = %133
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %134, i8* nonnull align 1 %126, i64 %127, i1 false) #7
  br label %138

138:                                              ; preds = %133, %135, %137
  %139 = load i64, i64* %4, align 8, !tbaa !19, !noalias !16
  store i64 %139, i64* %41, align 8, !tbaa !3, !alias.scope !16
  %140 = load i8*, i8** %40, align 8, !tbaa !15, !alias.scope !16
  %141 = getelementptr inbounds i8, i8* %140, i64 %139
  store i8 0, i8* %141, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #7, !noalias !16
  %142 = load i8*, i8** %28, align 8, !tbaa !15
  %143 = load i8, i8* %142, align 1, !tbaa !11
  call void @llvm.experimental.noalias.scope.decl(metadata !20)
  %144 = load i64, i64* %41, align 8, !tbaa !3, !noalias !20
  %145 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64 %144, i64 0, i64 1, i8 signext %143)
          to label %146 unwind label %200

146:                                              ; preds = %138
  store %union.anon* %42, %union.anon** %43, align 8, !tbaa !10, !alias.scope !20
  %147 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %145, i64 0, i32 0, i32 0
  %148 = load i8*, i8** %147, align 8, !tbaa !15
  %149 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %145, i64 0, i32 2
  %150 = bitcast %union.anon* %149 to i8*
  %151 = icmp eq i8* %148, %150
  br i1 %151, label %152, label %153

152:                                              ; preds = %146
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %46, i8* noundef nonnull align 8 dereferenceable(16) %150, i64 16, i1 false) #7
  br label %156

153:                                              ; preds = %146
  store i8* %148, i8** %44, align 8, !tbaa !15, !alias.scope !20
  %154 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %145, i64 0, i32 2, i32 0
  %155 = load i64, i64* %154, align 8, !tbaa !11
  store i64 %155, i64* %45, align 8, !tbaa !11, !alias.scope !20
  br label %156

156:                                              ; preds = %152, %153
  %157 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %145, i64 0, i32 1
  %158 = load i64, i64* %157, align 8, !tbaa !3
  store i64 %158, i64* %47, align 8, !tbaa !3, !alias.scope !20
  %159 = bitcast %"class.std::__cxx11::basic_string"* %145 to %union.anon**
  store %union.anon* %149, %union.anon** %159, align 8, !tbaa !15
  store i64 0, i64* %157, align 8, !tbaa !3
  store i8 0, i8* %150, align 8, !tbaa !11
  %160 = load i8*, i8** %48, align 8, !tbaa !15
  %161 = icmp eq i8* %160, %49
  br i1 %161, label %162, label %175

162:                                              ; preds = %156
  %163 = load i64, i64* %47, align 8, !tbaa !3
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %171, label %165

165:                                              ; preds = %162
  %166 = load i8*, i8** %28, align 8, !tbaa !15
  %167 = icmp eq i64 %163, 1
  br i1 %167, label %168, label %170

168:                                              ; preds = %165
  %169 = load i8, i8* %160, align 1, !tbaa !11
  store i8 %169, i8* %166, align 1, !tbaa !11
  br label %171

170:                                              ; preds = %165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %166, i8* align 1 %160, i64 %163, i1 false) #7
  br label %171

171:                                              ; preds = %170, %168, %162
  %172 = load i64, i64* %47, align 8, !tbaa !3
  store i64 %172, i64* %16, align 8, !tbaa !3
  %173 = load i8*, i8** %28, align 8, !tbaa !15
  %174 = getelementptr inbounds i8, i8* %173, i64 %172
  store i8 0, i8* %174, align 1, !tbaa !11
  br label %185

175:                                              ; preds = %156
  %176 = load i8*, i8** %28, align 8, !tbaa !15
  %177 = icmp eq i8* %176, %17
  %178 = load i64, i64* %50, align 8
  store i8* %160, i8** %28, align 8, !tbaa !15
  %179 = load i64, i64* %47, align 8, !tbaa !3
  store i64 %179, i64* %16, align 8, !tbaa !3
  %180 = load i64, i64* %51, align 8, !tbaa !11
  store i64 %180, i64* %50, align 8, !tbaa !11
  %181 = icmp eq i8* %176, null
  %182 = or i1 %177, %181
  br i1 %182, label %184, label %183

183:                                              ; preds = %175
  store i8* %176, i8** %48, align 8, !tbaa !15
  store i64 %178, i64* %52, align 8, !tbaa !11
  br label %185

184:                                              ; preds = %175
  store %union.anon* %42, %union.anon** %43, align 8, !tbaa !15
  br label %185

185:                                              ; preds = %171, %183, %184
  store i64 0, i64* %47, align 8, !tbaa !3
  %186 = load i8*, i8** %48, align 8, !tbaa !15
  store i8 0, i8* %186, align 1, !tbaa !11
  %187 = load i8*, i8** %48, align 8, !tbaa !15
  %188 = icmp eq i8* %187, %49
  br i1 %188, label %190, label %189

189:                                              ; preds = %185
  call void @_ZdlPv(i8* %187) #7
  br label %190

190:                                              ; preds = %185, %189
  %191 = load i8*, i8** %40, align 8, !tbaa !15
  %192 = icmp eq i8* %191, %53
  br i1 %192, label %194, label %193

193:                                              ; preds = %190
  call void @_ZdlPv(i8* %191) #7
  br label %194

194:                                              ; preds = %190, %193
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #7
  br label %210

195:                                              ; preds = %76
  %196 = landingpad { i8*, i32 }
          cleanup
  %197 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %197) #7
  br label %277

198:                                              ; preds = %129
  %199 = landingpad { i8*, i32 }
          cleanup
  br label %206

200:                                              ; preds = %138
  %201 = landingpad { i8*, i32 }
          cleanup
  %202 = load i8*, i8** %40, align 8, !tbaa !15
  %203 = bitcast %union.anon* %35 to i8*
  %204 = icmp eq i8* %202, %203
  br i1 %204, label %206, label %205

205:                                              ; preds = %200
  call void @_ZdlPv(i8* %202) #7
  br label %206

206:                                              ; preds = %205, %200, %198
  %207 = phi { i8*, i32 } [ %199, %198 ], [ %201, %200 ], [ %201, %205 ]
  %208 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  %209 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %208) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %209) #7
  br label %277

210:                                              ; preds = %194, %121
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !23)
  store %union.anon* %55, %union.anon** %56, align 8, !tbaa !10, !alias.scope !23
  %211 = load i8*, i8** %57, align 8, !tbaa !15, !noalias !23
  %212 = load i64, i64* %20, align 8, !tbaa !3, !noalias !23
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #7, !noalias !23
  store i64 %212, i64* %3, align 8, !tbaa !19, !noalias !23
  %213 = icmp ugt i64 %212, 15
  br i1 %213, label %214, label %218

214:                                              ; preds = %210
  %215 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %9, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %216 unwind label %272

216:                                              ; preds = %214
  store i8* %215, i8** %59, align 8, !tbaa !15, !alias.scope !23
  %217 = load i64, i64* %3, align 8, !tbaa !19, !noalias !23
  store i64 %217, i64* %60, align 8, !tbaa !11, !alias.scope !23
  br label %218

218:                                              ; preds = %216, %210
  %219 = load i8*, i8** %61, align 8, !tbaa !15, !alias.scope !23
  switch i64 %212, label %222 [
    i64 1, label %220
    i64 0, label %223
  ]

220:                                              ; preds = %218
  %221 = load i8, i8* %211, align 1, !tbaa !11
  store i8 %221, i8* %219, align 1, !tbaa !11
  br label %223

222:                                              ; preds = %218
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %219, i8* align 1 %211, i64 %212, i1 false) #7
  br label %223

223:                                              ; preds = %222, %220, %218
  %224 = load i64, i64* %3, align 8, !tbaa !19, !noalias !23
  store i64 %224, i64* %62, align 8, !tbaa !3, !alias.scope !23
  %225 = load i8*, i8** %61, align 8, !tbaa !15, !alias.scope !23
  %226 = getelementptr inbounds i8, i8* %225, i64 %224
  store i8 0, i8* %226, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #7, !noalias !23
  %227 = load i8*, i8** %28, align 8, !tbaa !15, !noalias !23
  %228 = load i64, i64* %16, align 8, !tbaa !3, !noalias !23
  %229 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %9, i8* %227, i64 %228)
          to label %236 unwind label %230

230:                                              ; preds = %223
  %231 = landingpad { i8*, i32 }
          cleanup
  %232 = load i8*, i8** %61, align 8, !tbaa !15, !alias.scope !23
  %233 = bitcast %union.anon* %55 to i8*
  %234 = icmp eq i8* %232, %233
  br i1 %234, label %274, label %235

235:                                              ; preds = %230
  call void @_ZdlPv(i8* %232) #7
  br label %274

236:                                              ; preds = %223
  %237 = load i8*, i8** %61, align 8, !tbaa !15
  %238 = icmp eq i8* %237, %63
  br i1 %238, label %239, label %252

239:                                              ; preds = %236
  %240 = load i64, i64* %62, align 8, !tbaa !3
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %248, label %242

242:                                              ; preds = %239
  %243 = load i8*, i8** %57, align 8, !tbaa !15
  %244 = icmp eq i64 %240, 1
  br i1 %244, label %245, label %247

245:                                              ; preds = %242
  %246 = load i8, i8* %237, align 1, !tbaa !11
  store i8 %246, i8* %243, align 1, !tbaa !11
  br label %248

247:                                              ; preds = %242
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %243, i8* align 1 %237, i64 %240, i1 false) #7
  br label %248

248:                                              ; preds = %247, %245, %239
  %249 = load i64, i64* %62, align 8, !tbaa !3
  store i64 %249, i64* %20, align 8, !tbaa !3
  %250 = load i8*, i8** %57, align 8, !tbaa !15
  %251 = getelementptr inbounds i8, i8* %250, i64 %249
  store i8 0, i8* %251, align 1, !tbaa !11
  br label %262

252:                                              ; preds = %236
  %253 = load i8*, i8** %57, align 8, !tbaa !15
  %254 = icmp eq i8* %253, %21
  %255 = load i64, i64* %64, align 8
  store i8* %237, i8** %57, align 8, !tbaa !15
  %256 = load i64, i64* %62, align 8, !tbaa !3
  store i64 %256, i64* %20, align 8, !tbaa !3
  %257 = load i64, i64* %65, align 8, !tbaa !11
  store i64 %257, i64* %64, align 8, !tbaa !11
  %258 = icmp eq i8* %253, null
  %259 = or i1 %254, %258
  br i1 %259, label %261, label %260

260:                                              ; preds = %252
  store i8* %253, i8** %61, align 8, !tbaa !15
  store i64 %255, i64* %66, align 8, !tbaa !11
  br label %262

261:                                              ; preds = %252
  store %union.anon* %55, %union.anon** %56, align 8, !tbaa !15
  br label %262

262:                                              ; preds = %248, %260, %261
  store i64 0, i64* %62, align 8, !tbaa !3
  %263 = load i8*, i8** %61, align 8, !tbaa !15
  store i8 0, i8* %263, align 1, !tbaa !11
  %264 = load i8*, i8** %61, align 8, !tbaa !15
  %265 = icmp eq i8* %264, %63
  br i1 %265, label %267, label %266

266:                                              ; preds = %262
  call void @_ZdlPv(i8* %264) #7
  br label %267

267:                                              ; preds = %262, %266
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #7
  %268 = add nuw i64 %71, 1
  %269 = trunc i64 %268 to i32
  %270 = mul nsw i32 %269, 3
  %271 = icmp slt i32 %270, %12
  br i1 %271, label %70, label %289, !llvm.loop !26

272:                                              ; preds = %214
  %273 = landingpad { i8*, i32 }
          cleanup
  br label %274

274:                                              ; preds = %230, %235, %272
  %275 = phi { i8*, i32 } [ %273, %272 ], [ %231, %235 ], [ %231, %230 ]
  %276 = bitcast %"class.std::__cxx11::basic_string"* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %276) #7
  br label %277

277:                                              ; preds = %274, %206, %195
  %278 = phi { i8*, i32 } [ %275, %274 ], [ %207, %206 ], [ %196, %195 ]
  %279 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %280 = load i8*, i8** %279, align 8, !tbaa !15
  %281 = icmp eq i8* %280, %21
  br i1 %281, label %283, label %282

282:                                              ; preds = %277
  call void @_ZdlPv(i8* %280) #7
  br label %283

283:                                              ; preds = %277, %282
  %284 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %285 = load i8*, i8** %284, align 8, !tbaa !15
  %286 = icmp eq i8* %285, %17
  br i1 %286, label %288, label %287

287:                                              ; preds = %283
  call void @_ZdlPv(i8* %285) #7
  br label %288

288:                                              ; preds = %283, %287
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #7
  resume { i8*, i32 } %278

289:                                              ; preds = %267, %2
  %290 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %291 = load i8*, i8** %290, align 8, !tbaa !15
  %292 = icmp eq i8* %291, %17
  br i1 %292, label %294, label %293

293:                                              ; preds = %289
  call void @_ZdlPv(i8* %291) #7
  br label %294

294:                                              ; preds = %289, %293
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #7
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
define dso_local void @_Z13decode_cyclicNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !3
  %11 = trunc i64 %10 to i32
  %12 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #7
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %14 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  store %union.anon* %13, %union.anon** %14, align 8, !tbaa !10
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  store i64 0, i64* %15, align 8, !tbaa !3
  %16 = bitcast %union.anon* %13 to i8*
  store i8 0, i8* %16, align 8, !tbaa !11
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %18 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %17, %union.anon** %18, align 8, !tbaa !10
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %19, align 8, !tbaa !3
  %20 = bitcast %union.anon* %17 to i8*
  store i8 0, i8* %20, align 8, !tbaa !11
  %21 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %23 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %28 = bitcast %union.anon* %22 to i8*
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %30 = getelementptr %union.anon, %union.anon* %22, i64 0, i32 0
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %32 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  %33 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  %34 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %35 = bitcast %"class.std::__cxx11::basic_string"* %7 to %union.anon**
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %37 = bitcast %union.anon* %34 to i16*
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %40 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %43 = bitcast %union.anon* %39 to i8*
  %44 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %46 = bitcast %union.anon* %39 to i8*
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %48 = getelementptr %union.anon, %union.anon* %39, i64 0, i32 0
  %49 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %50 = bitcast %union.anon* %34 to i8*
  %51 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  %52 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %53 = bitcast %"class.std::__cxx11::basic_string"* %8 to %union.anon**
  %54 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %55 = bitcast i64* %3 to i8*
  %56 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  %58 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 1
  %60 = bitcast %union.anon* %52 to i8*
  %61 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %62 = getelementptr %union.anon, %union.anon* %52, i64 0, i32 0
  %63 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  %64 = icmp sgt i32 %11, 0
  br i1 %64, label %65, label %270

65:                                               ; preds = %2
  %66 = bitcast %union.anon* %22 to i8*
  %67 = bitcast %union.anon* %34 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 2
  br label %69

69:                                               ; preds = %65, %248
  %70 = phi i64 [ %249, %248 ], [ 0, %65 ]
  %71 = phi i32 [ %251, %248 ], [ 0, %65 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #7
  %72 = zext i32 %71 to i64
  call void @llvm.experimental.noalias.scope.decl(metadata !29)
  %73 = load i64, i64* %9, align 8, !tbaa !3, !noalias !29
  %74 = icmp ult i64 %73, %72
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = zext i32 %71 to i64
  invoke void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 %76, i64 %73) #8
          to label %77 unwind label %179

77:                                               ; preds = %75
  unreachable

78:                                               ; preds = %69
  store %union.anon* %22, %union.anon** %23, align 8, !tbaa !10, !alias.scope !29
  %79 = load i8*, i8** %24, align 8, !tbaa !15, !noalias !29
  %80 = getelementptr inbounds i8, i8* %79, i64 %72
  %81 = sub i64 %73, %72
  %82 = icmp ult i64 %81, 3
  %83 = select i1 %82, i64 %81, i64 3
  switch i64 %83, label %86 [
    i64 1, label %84
    i64 0, label %87
  ]

84:                                               ; preds = %78
  %85 = load i8, i8* %80, align 1, !tbaa !11
  store i8 %85, i8* %66, align 8, !tbaa !11
  br label %87

86:                                               ; preds = %78
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* align 1 %80, i64 %83, i1 false) #7
  br label %87

87:                                               ; preds = %78, %84, %86
  store i64 %83, i64* %26, align 8, !tbaa !3, !alias.scope !29
  %88 = load i8*, i8** %25, align 8, !tbaa !15, !alias.scope !29
  %89 = getelementptr inbounds i8, i8* %88, i64 %83
  store i8 0, i8* %89, align 1, !tbaa !11
  %90 = load i8*, i8** %25, align 8, !tbaa !15
  %91 = icmp eq i8* %90, %28
  br i1 %91, label %92, label %105

92:                                               ; preds = %87
  %93 = load i64, i64* %26, align 8, !tbaa !3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %101, label %95

95:                                               ; preds = %92
  %96 = load i8*, i8** %27, align 8, !tbaa !15
  %97 = icmp eq i64 %93, 1
  br i1 %97, label %98, label %100

98:                                               ; preds = %95
  %99 = load i8, i8* %90, align 1, !tbaa !11
  store i8 %99, i8* %96, align 1, !tbaa !11
  br label %101

100:                                              ; preds = %95
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %90, i64 %93, i1 false) #7
  br label %101

101:                                              ; preds = %100, %98, %92
  %102 = load i64, i64* %26, align 8, !tbaa !3
  store i64 %102, i64* %15, align 8, !tbaa !3
  %103 = load i8*, i8** %27, align 8, !tbaa !15
  %104 = getelementptr inbounds i8, i8* %103, i64 %102
  store i8 0, i8* %104, align 1, !tbaa !11
  br label %115

105:                                              ; preds = %87
  %106 = load i8*, i8** %27, align 8, !tbaa !15
  %107 = icmp eq i8* %106, %16
  %108 = load i64, i64* %29, align 8
  store i8* %90, i8** %27, align 8, !tbaa !15
  %109 = load i64, i64* %26, align 8, !tbaa !3
  store i64 %109, i64* %15, align 8, !tbaa !3
  %110 = load i64, i64* %30, align 8, !tbaa !11
  store i64 %110, i64* %29, align 8, !tbaa !11
  %111 = icmp eq i8* %106, null
  %112 = or i1 %107, %111
  br i1 %112, label %114, label %113

113:                                              ; preds = %105
  store i8* %106, i8** %25, align 8, !tbaa !15
  store i64 %108, i64* %31, align 8, !tbaa !11
  br label %115

114:                                              ; preds = %105
  store %union.anon* %22, %union.anon** %23, align 8, !tbaa !15
  br label %115

115:                                              ; preds = %101, %113, %114
  store i64 0, i64* %26, align 8, !tbaa !3
  %116 = load i8*, i8** %25, align 8, !tbaa !15
  store i8 0, i8* %116, align 1, !tbaa !11
  %117 = load i8*, i8** %25, align 8, !tbaa !15
  %118 = icmp eq i8* %117, %28
  br i1 %118, label %120, label %119

119:                                              ; preds = %115
  call void @_ZdlPv(i8* %117) #7
  br label %120

120:                                              ; preds = %115, %119
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #7
  %121 = load i64, i64* %15, align 8, !tbaa !3
  %122 = icmp eq i64 %121, 3
  br i1 %122, label %123, label %191

123:                                              ; preds = %120
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #7
  %124 = load i8*, i8** %27, align 8, !tbaa !15
  %125 = getelementptr inbounds i8, i8* %124, i64 2
  %126 = load i8, i8* %125, align 1, !tbaa !11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #7
  store %union.anon* %34, %union.anon** %35, align 8, !tbaa !10, !alias.scope !32
  %127 = bitcast i8* %124 to i16*
  %128 = load i16, i16* %127, align 1
  store i16 %128, i16* %37, align 8
  store i64 2, i64* %38, align 8, !tbaa !3, !alias.scope !32
  store i8 0, i8* %68, align 2, !tbaa !11
  %129 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i64 0, i64 0, i64 1, i8 signext %126)
          to label %130 unwind label %182

130:                                              ; preds = %123
  store %union.anon* %39, %union.anon** %40, align 8, !tbaa !10, !alias.scope !35
  %131 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %129, i64 0, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8, !tbaa !15
  %133 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %129, i64 0, i32 2
  %134 = bitcast %union.anon* %133 to i8*
  %135 = icmp eq i8* %132, %134
  br i1 %135, label %136, label %137

136:                                              ; preds = %130
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %43, i8* noundef nonnull align 8 dereferenceable(16) %134, i64 16, i1 false) #7
  br label %140

137:                                              ; preds = %130
  store i8* %132, i8** %41, align 8, !tbaa !15, !alias.scope !35
  %138 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %129, i64 0, i32 2, i32 0
  %139 = load i64, i64* %138, align 8, !tbaa !11
  store i64 %139, i64* %42, align 8, !tbaa !11, !alias.scope !35
  br label %140

140:                                              ; preds = %136, %137
  %141 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %129, i64 0, i32 1
  %142 = load i64, i64* %141, align 8, !tbaa !3
  store i64 %142, i64* %44, align 8, !tbaa !3, !alias.scope !35
  %143 = bitcast %"class.std::__cxx11::basic_string"* %129 to %union.anon**
  store %union.anon* %133, %union.anon** %143, align 8, !tbaa !15
  store i64 0, i64* %141, align 8, !tbaa !3
  store i8 0, i8* %134, align 8, !tbaa !11
  %144 = load i8*, i8** %45, align 8, !tbaa !15
  %145 = icmp eq i8* %144, %46
  br i1 %145, label %146, label %159

146:                                              ; preds = %140
  %147 = load i64, i64* %44, align 8, !tbaa !3
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %155, label %149

149:                                              ; preds = %146
  %150 = load i8*, i8** %27, align 8, !tbaa !15
  %151 = icmp eq i64 %147, 1
  br i1 %151, label %152, label %154

152:                                              ; preds = %149
  %153 = load i8, i8* %144, align 1, !tbaa !11
  store i8 %153, i8* %150, align 1, !tbaa !11
  br label %155

154:                                              ; preds = %149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %150, i8* align 1 %144, i64 %147, i1 false) #7
  br label %155

155:                                              ; preds = %154, %152, %146
  %156 = load i64, i64* %44, align 8, !tbaa !3
  store i64 %156, i64* %15, align 8, !tbaa !3
  %157 = load i8*, i8** %27, align 8, !tbaa !15
  %158 = getelementptr inbounds i8, i8* %157, i64 %156
  store i8 0, i8* %158, align 1, !tbaa !11
  br label %169

159:                                              ; preds = %140
  %160 = load i8*, i8** %27, align 8, !tbaa !15
  %161 = icmp eq i8* %160, %16
  %162 = load i64, i64* %47, align 8
  store i8* %144, i8** %27, align 8, !tbaa !15
  %163 = load i64, i64* %44, align 8, !tbaa !3
  store i64 %163, i64* %15, align 8, !tbaa !3
  %164 = load i64, i64* %48, align 8, !tbaa !11
  store i64 %164, i64* %47, align 8, !tbaa !11
  %165 = icmp eq i8* %160, null
  %166 = or i1 %161, %165
  br i1 %166, label %168, label %167

167:                                              ; preds = %159
  store i8* %160, i8** %45, align 8, !tbaa !15
  store i64 %162, i64* %49, align 8, !tbaa !11
  br label %169

168:                                              ; preds = %159
  store %union.anon* %39, %union.anon** %40, align 8, !tbaa !15
  br label %169

169:                                              ; preds = %155, %167, %168
  store i64 0, i64* %44, align 8, !tbaa !3
  %170 = load i8*, i8** %45, align 8, !tbaa !15
  store i8 0, i8* %170, align 1, !tbaa !11
  %171 = load i8*, i8** %45, align 8, !tbaa !15
  %172 = icmp eq i8* %171, %46
  br i1 %172, label %174, label %173

173:                                              ; preds = %169
  call void @_ZdlPv(i8* %171) #7
  br label %174

174:                                              ; preds = %169, %173
  %175 = load i8*, i8** %36, align 8, !tbaa !15
  %176 = icmp eq i8* %175, %50
  br i1 %176, label %178, label %177

177:                                              ; preds = %174
  call void @_ZdlPv(i8* %175) #7
  br label %178

178:                                              ; preds = %174, %177
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #7
  br label %191

179:                                              ; preds = %75
  %180 = landingpad { i8*, i32 }
          cleanup
  %181 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %181) #7
  br label %258

182:                                              ; preds = %123
  %183 = landingpad { i8*, i32 }
          cleanup
  %184 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  %185 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  %186 = load i8*, i8** %36, align 8, !tbaa !15
  %187 = bitcast %union.anon* %34 to i8*
  %188 = icmp eq i8* %186, %187
  br i1 %188, label %190, label %189

189:                                              ; preds = %182
  call void @_ZdlPv(i8* %186) #7
  br label %190

190:                                              ; preds = %189, %182
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %185) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %184) #7
  br label %258

191:                                              ; preds = %178, %120
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !38)
  store %union.anon* %52, %union.anon** %53, align 8, !tbaa !10, !alias.scope !38
  %192 = load i8*, i8** %54, align 8, !tbaa !15, !noalias !38
  %193 = load i64, i64* %19, align 8, !tbaa !3, !noalias !38
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #7, !noalias !38
  store i64 %193, i64* %3, align 8, !tbaa !19, !noalias !38
  %194 = icmp ugt i64 %193, 15
  br i1 %194, label %195, label %199

195:                                              ; preds = %191
  %196 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %197 unwind label %253

197:                                              ; preds = %195
  store i8* %196, i8** %56, align 8, !tbaa !15, !alias.scope !38
  %198 = load i64, i64* %3, align 8, !tbaa !19, !noalias !38
  store i64 %198, i64* %57, align 8, !tbaa !11, !alias.scope !38
  br label %199

199:                                              ; preds = %197, %191
  %200 = load i8*, i8** %58, align 8, !tbaa !15, !alias.scope !38
  switch i64 %193, label %203 [
    i64 1, label %201
    i64 0, label %204
  ]

201:                                              ; preds = %199
  %202 = load i8, i8* %192, align 1, !tbaa !11
  store i8 %202, i8* %200, align 1, !tbaa !11
  br label %204

203:                                              ; preds = %199
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %200, i8* align 1 %192, i64 %193, i1 false) #7
  br label %204

204:                                              ; preds = %203, %201, %199
  %205 = load i64, i64* %3, align 8, !tbaa !19, !noalias !38
  store i64 %205, i64* %59, align 8, !tbaa !3, !alias.scope !38
  %206 = load i8*, i8** %58, align 8, !tbaa !15, !alias.scope !38
  %207 = getelementptr inbounds i8, i8* %206, i64 %205
  store i8 0, i8* %207, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #7, !noalias !38
  %208 = load i8*, i8** %27, align 8, !tbaa !15, !noalias !38
  %209 = load i64, i64* %15, align 8, !tbaa !3, !noalias !38
  %210 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i8* %208, i64 %209)
          to label %217 unwind label %211

211:                                              ; preds = %204
  %212 = landingpad { i8*, i32 }
          cleanup
  %213 = load i8*, i8** %58, align 8, !tbaa !15, !alias.scope !38
  %214 = bitcast %union.anon* %52 to i8*
  %215 = icmp eq i8* %213, %214
  br i1 %215, label %255, label %216

216:                                              ; preds = %211
  call void @_ZdlPv(i8* %213) #7
  br label %255

217:                                              ; preds = %204
  %218 = load i8*, i8** %58, align 8, !tbaa !15
  %219 = icmp eq i8* %218, %60
  br i1 %219, label %220, label %233

220:                                              ; preds = %217
  %221 = load i64, i64* %59, align 8, !tbaa !3
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %229, label %223

223:                                              ; preds = %220
  %224 = load i8*, i8** %54, align 8, !tbaa !15
  %225 = icmp eq i64 %221, 1
  br i1 %225, label %226, label %228

226:                                              ; preds = %223
  %227 = load i8, i8* %218, align 1, !tbaa !11
  store i8 %227, i8* %224, align 1, !tbaa !11
  br label %229

228:                                              ; preds = %223
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %224, i8* align 1 %218, i64 %221, i1 false) #7
  br label %229

229:                                              ; preds = %228, %226, %220
  %230 = load i64, i64* %59, align 8, !tbaa !3
  store i64 %230, i64* %19, align 8, !tbaa !3
  %231 = load i8*, i8** %54, align 8, !tbaa !15
  %232 = getelementptr inbounds i8, i8* %231, i64 %230
  store i8 0, i8* %232, align 1, !tbaa !11
  br label %243

233:                                              ; preds = %217
  %234 = load i8*, i8** %54, align 8, !tbaa !15
  %235 = icmp eq i8* %234, %20
  %236 = load i64, i64* %61, align 8
  store i8* %218, i8** %54, align 8, !tbaa !15
  %237 = load i64, i64* %59, align 8, !tbaa !3
  store i64 %237, i64* %19, align 8, !tbaa !3
  %238 = load i64, i64* %62, align 8, !tbaa !11
  store i64 %238, i64* %61, align 8, !tbaa !11
  %239 = icmp eq i8* %234, null
  %240 = or i1 %235, %239
  br i1 %240, label %242, label %241

241:                                              ; preds = %233
  store i8* %234, i8** %58, align 8, !tbaa !15
  store i64 %236, i64* %63, align 8, !tbaa !11
  br label %243

242:                                              ; preds = %233
  store %union.anon* %52, %union.anon** %53, align 8, !tbaa !15
  br label %243

243:                                              ; preds = %229, %241, %242
  store i64 0, i64* %59, align 8, !tbaa !3
  %244 = load i8*, i8** %58, align 8, !tbaa !15
  store i8 0, i8* %244, align 1, !tbaa !11
  %245 = load i8*, i8** %58, align 8, !tbaa !15
  %246 = icmp eq i8* %245, %60
  br i1 %246, label %248, label %247

247:                                              ; preds = %243
  call void @_ZdlPv(i8* %245) #7
  br label %248

248:                                              ; preds = %243, %247
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #7
  %249 = add nuw i64 %70, 1
  %250 = trunc i64 %249 to i32
  %251 = mul nsw i32 %250, 3
  %252 = icmp slt i32 %251, %11
  br i1 %252, label %69, label %270, !llvm.loop !41

253:                                              ; preds = %195
  %254 = landingpad { i8*, i32 }
          cleanup
  br label %255

255:                                              ; preds = %211, %216, %253
  %256 = phi { i8*, i32 } [ %254, %253 ], [ %212, %216 ], [ %212, %211 ]
  %257 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %257) #7
  br label %258

258:                                              ; preds = %255, %190, %179
  %259 = phi { i8*, i32 } [ %256, %255 ], [ %183, %190 ], [ %180, %179 ]
  %260 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %261 = load i8*, i8** %260, align 8, !tbaa !15
  %262 = icmp eq i8* %261, %20
  br i1 %262, label %264, label %263

263:                                              ; preds = %258
  call void @_ZdlPv(i8* %261) #7
  br label %264

264:                                              ; preds = %258, %263
  %265 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %266 = load i8*, i8** %265, align 8, !tbaa !15
  %267 = icmp eq i8* %266, %16
  br i1 %267, label %269, label %268

268:                                              ; preds = %264
  call void @_ZdlPv(i8* %266) #7
  br label %269

269:                                              ; preds = %264, %268
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #7
  resume { i8*, i32 } %259

270:                                              ; preds = %248, %2
  %271 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %272 = load i8*, i8** %271, align 8, !tbaa !15
  %273 = icmp eq i8* %272, %16
  br i1 %273, label %275, label %274

274:                                              ; preds = %270
  call void @_ZdlPv(i8* %272) #7
  br label %275

275:                                              ; preds = %270, %274
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare dso_local void @_ZSt24__throw_out_of_range_fmtPKcz(i8*, ...) local_unnamed_addr #3

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #4

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #6

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #6 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #7 = { nounwind }
attributes #8 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!5, !6, i64 0}
!11 = !{!7, !7, i64 0}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!14 = distinct !{!14, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!15 = !{!4, !6, i64 0}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!18 = distinct !{!18, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!19 = !{!9, !9, i64 0}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_: argument 0"}
!22 = distinct !{!22, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!25 = distinct !{!25, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!26 = distinct !{!26, !27, !28}
!27 = !{!"llvm.loop.mustprogress"}
!28 = !{!"llvm.loop.unroll.disable"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!31 = distinct !{!31, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!34 = distinct !{!34, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EES5_OS8_: argument 0"}
!37 = distinct !{!37, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EES5_OS8_"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!40 = distinct !{!40, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!41 = distinct !{!41, !27, !28}
