; ModuleID = '../../Human_xBenchmarks_164/CPP_143/CPP_143.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_143/CPP_143.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$__clang_call_terminate = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: uwtable
define dso_local void @_Z17words_in_sentenceNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = alloca %"class.std::__cxx11::basic_string", align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %11, %union.anon** %12, align 8, !tbaa !3
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %14, align 8, !tbaa !8
  %15 = bitcast %union.anon* %11 to i8*
  store i8 0, i8* %15, align 8, !tbaa !11
  %16 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #7
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %18 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  store %union.anon* %17, %union.anon** %18, align 8, !tbaa !3
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  store i64 0, i64* %20, align 8, !tbaa !8
  %21 = bitcast %union.anon* %17 to i8*
  store i8 0, i8* %21, align 8, !tbaa !11
  %22 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !12)
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %24 = bitcast %"class.std::__cxx11::basic_string"* %7 to %union.anon**
  store %union.anon* %23, %union.anon** %24, align 8, !tbaa !3, !alias.scope !12
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8, !tbaa !15, !noalias !12
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %28 = load i64, i64* %27, align 8, !tbaa !8, !noalias !12
  %29 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #7, !noalias !12
  store i64 %28, i64* %5, align 8, !tbaa !16, !noalias !12
  %30 = icmp ugt i64 %28, 15
  br i1 %30, label %31, label %37

31:                                               ; preds = %2
  %32 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
          to label %33 unwind label %134

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  store i8* %32, i8** %34, align 8, !tbaa !15, !alias.scope !12
  %35 = load i64, i64* %5, align 8, !tbaa !16, !noalias !12
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 0
  store i64 %35, i64* %36, align 8, !tbaa !11, !alias.scope !12
  br label %37

37:                                               ; preds = %33, %2
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8, !tbaa !15, !alias.scope !12
  switch i64 %28, label %42 [
    i64 1, label %40
    i64 0, label %43
  ]

40:                                               ; preds = %37
  %41 = load i8, i8* %26, align 1, !tbaa !11
  store i8 %41, i8* %39, align 1, !tbaa !11
  br label %43

42:                                               ; preds = %37
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %26, i64 %28, i1 false) #7
  br label %43

43:                                               ; preds = %42, %40, %37
  %44 = load i64, i64* %5, align 8, !tbaa !16, !noalias !12
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  store i64 %44, i64* %45, align 8, !tbaa !8, !alias.scope !12
  %46 = load i8*, i8** %38, align 8, !tbaa !15, !alias.scope !12
  %47 = getelementptr inbounds i8, i8* %46, i64 %44
  store i8 0, i8* %47, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #7, !noalias !12
  %48 = load i64, i64* %45, align 8, !tbaa !8, !alias.scope !12
  %49 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i64 %48, i64 0, i64 1, i8 signext 32)
          to label %56 unwind label %50

50:                                               ; preds = %43
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = load i8*, i8** %38, align 8, !tbaa !15, !alias.scope !12
  %53 = bitcast %union.anon* %23 to i8*
  %54 = icmp eq i8* %52, %53
  br i1 %54, label %136, label %55

55:                                               ; preds = %50
  call void @_ZdlPv(i8* %52) #7
  br label %136

56:                                               ; preds = %43
  %57 = load i8*, i8** %38, align 8, !tbaa !15
  %58 = bitcast %union.anon* %23 to i8*
  %59 = icmp eq i8* %57, %58
  br i1 %59, label %60, label %73

60:                                               ; preds = %56
  %61 = load i64, i64* %45, align 8, !tbaa !8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %69, label %63

63:                                               ; preds = %60
  %64 = load i8*, i8** %25, align 8, !tbaa !15
  %65 = icmp eq i64 %61, 1
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  %67 = load i8, i8* %57, align 1, !tbaa !11
  store i8 %67, i8* %64, align 1, !tbaa !11
  br label %69

68:                                               ; preds = %63
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %64, i8* align 1 %57, i64 %61, i1 false) #7
  br label %69

69:                                               ; preds = %68, %66, %60
  %70 = load i64, i64* %45, align 8, !tbaa !8
  store i64 %70, i64* %27, align 8, !tbaa !8
  %71 = load i8*, i8** %25, align 8, !tbaa !15
  %72 = getelementptr inbounds i8, i8* %71, i64 %70
  store i8 0, i8* %72, align 1, !tbaa !11
  br label %88

73:                                               ; preds = %56
  %74 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 2
  %75 = bitcast %union.anon* %74 to i8*
  %76 = load i8*, i8** %25, align 8, !tbaa !15
  %77 = icmp eq i8* %76, %75
  %78 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 2, i32 0
  %79 = load i64, i64* %78, align 8
  store i8* %57, i8** %25, align 8, !tbaa !15
  %80 = load i64, i64* %45, align 8, !tbaa !8
  store i64 %80, i64* %27, align 8, !tbaa !8
  %81 = getelementptr %union.anon, %union.anon* %23, i64 0, i32 0
  %82 = load i64, i64* %81, align 8, !tbaa !11
  store i64 %82, i64* %78, align 8, !tbaa !11
  %83 = icmp eq i8* %76, null
  %84 = or i1 %77, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %73
  store i8* %76, i8** %38, align 8, !tbaa !15
  %86 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 0
  store i64 %79, i64* %86, align 8, !tbaa !11
  br label %88

87:                                               ; preds = %73
  store %union.anon* %23, %union.anon** %24, align 8, !tbaa !15
  br label %88

88:                                               ; preds = %69, %85, %87
  store i64 0, i64* %45, align 8, !tbaa !8
  %89 = load i8*, i8** %38, align 8, !tbaa !15
  store i8 0, i8* %89, align 1, !tbaa !11
  %90 = load i8*, i8** %38, align 8, !tbaa !15
  %91 = icmp eq i8* %90, %58
  br i1 %91, label %93, label %92

92:                                               ; preds = %88
  call void @_ZdlPv(i8* %90) #7
  br label %93

93:                                               ; preds = %88, %92
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #7
  %94 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  %95 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %96 = bitcast %"class.std::__cxx11::basic_string"* %8 to %union.anon**
  %97 = bitcast i64* %4 to i8*
  %98 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %99 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  %100 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 1
  %102 = bitcast %union.anon* %95 to i8*
  %103 = bitcast %union.anon* %17 to i8*
  %104 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %105 = getelementptr %union.anon, %union.anon* %95, i64 0, i32 0
  %106 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  %107 = bitcast %"class.std::__cxx11::basic_string"* %9 to i8*
  %108 = bitcast %"class.std::__cxx11::basic_string"* %10 to i8*
  %109 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2
  %110 = bitcast %"class.std::__cxx11::basic_string"* %10 to %union.anon**
  %111 = bitcast i64* %3 to i8*
  %112 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2, i32 0
  %114 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 0, i32 0
  %115 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 1
  %116 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2
  %117 = bitcast %"class.std::__cxx11::basic_string"* %9 to %union.anon**
  %118 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2, i32 0
  %120 = bitcast %union.anon* %116 to i8*
  %121 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 1
  %122 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  %123 = bitcast %union.anon* %116 to i8*
  %124 = bitcast %union.anon* %11 to i8*
  %125 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %126 = getelementptr %union.anon, %union.anon* %116, i64 0, i32 0
  %127 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2, i32 0
  %128 = bitcast %union.anon* %109 to i8*
  %129 = load i64, i64* %27, align 8, !tbaa !8
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %138

131:                                              ; preds = %321, %93
  %132 = load i64, i64* %14, align 8, !tbaa !8
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %330, label %325

134:                                              ; preds = %31
  %135 = landingpad { i8*, i32 }
          cleanup
  br label %136

136:                                              ; preds = %50, %55, %134
  %137 = phi { i8*, i32 } [ %135, %134 ], [ %51, %55 ], [ %51, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #7
  br label %336

138:                                              ; preds = %93, %321
  %139 = phi i64 [ %322, %321 ], [ 0, %93 ]
  %140 = load i8*, i8** %25, align 8, !tbaa !15
  %141 = getelementptr inbounds i8, i8* %140, i64 %139
  %142 = load i8, i8* %141, align 1, !tbaa !11
  %143 = icmp eq i8 %142, 32
  br i1 %143, label %207, label %144

144:                                              ; preds = %138
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %94) #7
  %145 = load i8, i8* %141, align 1, !tbaa !11
  call void @llvm.experimental.noalias.scope.decl(metadata !17)
  store %union.anon* %95, %union.anon** %96, align 8, !tbaa !3, !alias.scope !17
  %146 = load i8*, i8** %19, align 8, !tbaa !15, !noalias !17
  %147 = load i64, i64* %20, align 8, !tbaa !8, !noalias !17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #7, !noalias !17
  store i64 %147, i64* %4, align 8, !tbaa !16, !noalias !17
  %148 = icmp ugt i64 %147, 15
  br i1 %148, label %149, label %153

149:                                              ; preds = %144
  %150 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %151 unwind label %202

151:                                              ; preds = %149
  store i8* %150, i8** %98, align 8, !tbaa !15, !alias.scope !17
  %152 = load i64, i64* %4, align 8, !tbaa !16, !noalias !17
  store i64 %152, i64* %99, align 8, !tbaa !11, !alias.scope !17
  br label %153

153:                                              ; preds = %151, %144
  %154 = load i8*, i8** %100, align 8, !tbaa !15, !alias.scope !17
  switch i64 %147, label %157 [
    i64 1, label %155
    i64 0, label %158
  ]

155:                                              ; preds = %153
  %156 = load i8, i8* %146, align 1, !tbaa !11
  store i8 %156, i8* %154, align 1, !tbaa !11
  br label %158

157:                                              ; preds = %153
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %154, i8* align 1 %146, i64 %147, i1 false) #7
  br label %158

158:                                              ; preds = %157, %155, %153
  %159 = load i64, i64* %4, align 8, !tbaa !16, !noalias !17
  store i64 %159, i64* %101, align 8, !tbaa !8, !alias.scope !17
  %160 = load i8*, i8** %100, align 8, !tbaa !15, !alias.scope !17
  %161 = getelementptr inbounds i8, i8* %160, i64 %159
  store i8 0, i8* %161, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #7, !noalias !17
  %162 = load i64, i64* %101, align 8, !tbaa !8, !alias.scope !17
  %163 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64 %162, i64 0, i64 1, i8 signext %145)
          to label %170 unwind label %164

164:                                              ; preds = %158
  %165 = landingpad { i8*, i32 }
          cleanup
  %166 = load i8*, i8** %100, align 8, !tbaa !15, !alias.scope !17
  %167 = bitcast %union.anon* %95 to i8*
  %168 = icmp eq i8* %166, %167
  br i1 %168, label %204, label %169

169:                                              ; preds = %164
  call void @_ZdlPv(i8* %166) #7
  br label %204

170:                                              ; preds = %158
  %171 = load i8*, i8** %100, align 8, !tbaa !15
  %172 = icmp eq i8* %171, %102
  br i1 %172, label %173, label %186

173:                                              ; preds = %170
  %174 = load i64, i64* %101, align 8, !tbaa !8
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %182, label %176

176:                                              ; preds = %173
  %177 = load i8*, i8** %19, align 8, !tbaa !15
  %178 = icmp eq i64 %174, 1
  br i1 %178, label %179, label %181

179:                                              ; preds = %176
  %180 = load i8, i8* %171, align 1, !tbaa !11
  store i8 %180, i8* %177, align 1, !tbaa !11
  br label %182

181:                                              ; preds = %176
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %177, i8* align 1 %171, i64 %174, i1 false) #7
  br label %182

182:                                              ; preds = %181, %179, %173
  %183 = load i64, i64* %101, align 8, !tbaa !8
  store i64 %183, i64* %20, align 8, !tbaa !8
  %184 = load i8*, i8** %19, align 8, !tbaa !15
  %185 = getelementptr inbounds i8, i8* %184, i64 %183
  store i8 0, i8* %185, align 1, !tbaa !11
  br label %196

186:                                              ; preds = %170
  %187 = load i8*, i8** %19, align 8, !tbaa !15
  %188 = icmp eq i8* %187, %103
  %189 = load i64, i64* %104, align 8
  store i8* %171, i8** %19, align 8, !tbaa !15
  %190 = load i64, i64* %101, align 8, !tbaa !8
  store i64 %190, i64* %20, align 8, !tbaa !8
  %191 = load i64, i64* %105, align 8, !tbaa !11
  store i64 %191, i64* %104, align 8, !tbaa !11
  %192 = icmp eq i8* %187, null
  %193 = or i1 %188, %192
  br i1 %193, label %195, label %194

194:                                              ; preds = %186
  store i8* %187, i8** %100, align 8, !tbaa !15
  store i64 %189, i64* %106, align 8, !tbaa !11
  br label %196

195:                                              ; preds = %186
  store %union.anon* %95, %union.anon** %96, align 8, !tbaa !15
  br label %196

196:                                              ; preds = %182, %194, %195
  store i64 0, i64* %101, align 8, !tbaa !8
  %197 = load i8*, i8** %100, align 8, !tbaa !15
  store i8 0, i8* %197, align 1, !tbaa !11
  %198 = load i8*, i8** %100, align 8, !tbaa !15
  %199 = icmp eq i8* %198, %102
  br i1 %199, label %201, label %200

200:                                              ; preds = %196
  call void @_ZdlPv(i8* %198) #7
  br label %201

201:                                              ; preds = %196, %200
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %94) #7
  br label %321

202:                                              ; preds = %149
  %203 = landingpad { i8*, i32 }
          cleanup
  br label %204

204:                                              ; preds = %164, %169, %202
  %205 = phi { i8*, i32 } [ %203, %202 ], [ %165, %169 ], [ %165, %164 ]
  %206 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %206) #7
  br label %336

207:                                              ; preds = %138
  %208 = load i64, i64* %20, align 8, !tbaa !8
  %209 = trunc i64 %208 to i32
  %210 = icmp sgt i32 %209, 1
  %211 = zext i1 %210 to i8
  %212 = icmp slt i32 %209, 4
  br i1 %212, label %213, label %217

213:                                              ; preds = %217, %207
  %214 = phi i8 [ %211, %207 ], [ %222, %217 ]
  %215 = and i8 %214, 1
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %316, label %226

217:                                              ; preds = %207, %217
  %218 = phi i32 [ %223, %217 ], [ 2, %207 ]
  %219 = phi i8 [ %222, %217 ], [ %211, %207 ]
  %220 = srem i32 %209, %218
  %221 = icmp eq i32 %220, 0
  %222 = select i1 %221, i8 0, i8 %219
  %223 = add nuw nsw i32 %218, 1
  %224 = mul nsw i32 %223, %223
  %225 = icmp sgt i32 %224, %209
  br i1 %225, label %213, label %217, !llvm.loop !20

226:                                              ; preds = %213
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %107) #7
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !23)
  store %union.anon* %109, %union.anon** %110, align 8, !tbaa !3, !alias.scope !23
  %227 = load i8*, i8** %13, align 8, !tbaa !15, !noalias !23
  %228 = load i64, i64* %14, align 8, !tbaa !8, !noalias !23
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #7, !noalias !23
  store i64 %228, i64* %3, align 8, !tbaa !16, !noalias !23
  %229 = icmp ugt i64 %228, 15
  br i1 %229, label %230, label %234

230:                                              ; preds = %226
  %231 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %232 unwind label %304

232:                                              ; preds = %230
  store i8* %231, i8** %112, align 8, !tbaa !15, !alias.scope !23
  %233 = load i64, i64* %3, align 8, !tbaa !16, !noalias !23
  store i64 %233, i64* %113, align 8, !tbaa !11, !alias.scope !23
  br label %234

234:                                              ; preds = %232, %226
  %235 = load i8*, i8** %114, align 8, !tbaa !15, !alias.scope !23
  switch i64 %228, label %238 [
    i64 1, label %236
    i64 0, label %239
  ]

236:                                              ; preds = %234
  %237 = load i8, i8* %227, align 1, !tbaa !11
  store i8 %237, i8* %235, align 1, !tbaa !11
  br label %239

238:                                              ; preds = %234
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %235, i8* align 1 %227, i64 %228, i1 false) #7
  br label %239

239:                                              ; preds = %238, %236, %234
  %240 = load i64, i64* %3, align 8, !tbaa !16, !noalias !23
  store i64 %240, i64* %115, align 8, !tbaa !8, !alias.scope !23
  %241 = load i8*, i8** %114, align 8, !tbaa !15, !alias.scope !23
  %242 = getelementptr inbounds i8, i8* %241, i64 %240
  store i8 0, i8* %242, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #7, !noalias !23
  %243 = load i8*, i8** %19, align 8, !tbaa !15, !noalias !23
  %244 = load i64, i64* %20, align 8, !tbaa !8, !noalias !23
  %245 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i8* %243, i64 %244)
          to label %252 unwind label %246

246:                                              ; preds = %239
  %247 = landingpad { i8*, i32 }
          cleanup
  %248 = load i8*, i8** %114, align 8, !tbaa !15, !alias.scope !23
  %249 = bitcast %union.anon* %109 to i8*
  %250 = icmp eq i8* %248, %249
  br i1 %250, label %312, label %251

251:                                              ; preds = %246
  call void @_ZdlPv(i8* %248) #7
  br label %312

252:                                              ; preds = %239
  call void @llvm.experimental.noalias.scope.decl(metadata !26)
  %253 = load i64, i64* %115, align 8, !tbaa !8, !noalias !26
  %254 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i64 %253, i64 0, i64 1, i8 signext 32)
          to label %255 unwind label %306

255:                                              ; preds = %252
  store %union.anon* %116, %union.anon** %117, align 8, !tbaa !3, !alias.scope !26
  %256 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %254, i64 0, i32 0, i32 0
  %257 = load i8*, i8** %256, align 8, !tbaa !15
  %258 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %254, i64 0, i32 2
  %259 = bitcast %union.anon* %258 to i8*
  %260 = icmp eq i8* %257, %259
  br i1 %260, label %261, label %262

261:                                              ; preds = %255
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %120, i8* noundef nonnull align 8 dereferenceable(16) %259, i64 16, i1 false) #7
  br label %265

262:                                              ; preds = %255
  store i8* %257, i8** %118, align 8, !tbaa !15, !alias.scope !26
  %263 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %254, i64 0, i32 2, i32 0
  %264 = load i64, i64* %263, align 8, !tbaa !11
  store i64 %264, i64* %119, align 8, !tbaa !11, !alias.scope !26
  br label %265

265:                                              ; preds = %261, %262
  %266 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %254, i64 0, i32 1
  %267 = load i64, i64* %266, align 8, !tbaa !8
  store i64 %267, i64* %121, align 8, !tbaa !8, !alias.scope !26
  %268 = bitcast %"class.std::__cxx11::basic_string"* %254 to %union.anon**
  store %union.anon* %258, %union.anon** %268, align 8, !tbaa !15
  store i64 0, i64* %266, align 8, !tbaa !8
  store i8 0, i8* %259, align 8, !tbaa !11
  %269 = load i8*, i8** %122, align 8, !tbaa !15
  %270 = icmp eq i8* %269, %123
  br i1 %270, label %271, label %284

271:                                              ; preds = %265
  %272 = load i64, i64* %121, align 8, !tbaa !8
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %280, label %274

274:                                              ; preds = %271
  %275 = load i8*, i8** %13, align 8, !tbaa !15
  %276 = icmp eq i64 %272, 1
  br i1 %276, label %277, label %279

277:                                              ; preds = %274
  %278 = load i8, i8* %269, align 1, !tbaa !11
  store i8 %278, i8* %275, align 1, !tbaa !11
  br label %280

279:                                              ; preds = %274
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %275, i8* align 1 %269, i64 %272, i1 false) #7
  br label %280

280:                                              ; preds = %279, %277, %271
  %281 = load i64, i64* %121, align 8, !tbaa !8
  store i64 %281, i64* %14, align 8, !tbaa !8
  %282 = load i8*, i8** %13, align 8, !tbaa !15
  %283 = getelementptr inbounds i8, i8* %282, i64 %281
  store i8 0, i8* %283, align 1, !tbaa !11
  br label %294

284:                                              ; preds = %265
  %285 = load i8*, i8** %13, align 8, !tbaa !15
  %286 = icmp eq i8* %285, %124
  %287 = load i64, i64* %125, align 8
  store i8* %269, i8** %13, align 8, !tbaa !15
  %288 = load i64, i64* %121, align 8, !tbaa !8
  store i64 %288, i64* %14, align 8, !tbaa !8
  %289 = load i64, i64* %126, align 8, !tbaa !11
  store i64 %289, i64* %125, align 8, !tbaa !11
  %290 = icmp eq i8* %285, null
  %291 = or i1 %286, %290
  br i1 %291, label %293, label %292

292:                                              ; preds = %284
  store i8* %285, i8** %122, align 8, !tbaa !15
  store i64 %287, i64* %127, align 8, !tbaa !11
  br label %294

293:                                              ; preds = %284
  store %union.anon* %116, %union.anon** %117, align 8, !tbaa !15
  br label %294

294:                                              ; preds = %280, %292, %293
  store i64 0, i64* %121, align 8, !tbaa !8
  %295 = load i8*, i8** %122, align 8, !tbaa !15
  store i8 0, i8* %295, align 1, !tbaa !11
  %296 = load i8*, i8** %122, align 8, !tbaa !15
  %297 = icmp eq i8* %296, %123
  br i1 %297, label %299, label %298

298:                                              ; preds = %294
  call void @_ZdlPv(i8* %296) #7
  br label %299

299:                                              ; preds = %294, %298
  %300 = load i8*, i8** %114, align 8, !tbaa !15
  %301 = icmp eq i8* %300, %128
  br i1 %301, label %303, label %302

302:                                              ; preds = %299
  call void @_ZdlPv(i8* %300) #7
  br label %303

303:                                              ; preds = %299, %302
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %107) #7
  br label %316

304:                                              ; preds = %230
  %305 = landingpad { i8*, i32 }
          cleanup
  br label %312

306:                                              ; preds = %252
  %307 = landingpad { i8*, i32 }
          cleanup
  %308 = load i8*, i8** %114, align 8, !tbaa !15
  %309 = bitcast %union.anon* %109 to i8*
  %310 = icmp eq i8* %308, %309
  br i1 %310, label %312, label %311

311:                                              ; preds = %306
  call void @_ZdlPv(i8* %308) #7
  br label %312

312:                                              ; preds = %311, %306, %304, %251, %246
  %313 = phi { i8*, i32 } [ %305, %304 ], [ %247, %251 ], [ %247, %246 ], [ %307, %306 ], [ %307, %311 ]
  %314 = bitcast %"class.std::__cxx11::basic_string"* %10 to i8*
  %315 = bitcast %"class.std::__cxx11::basic_string"* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %314) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %315) #7
  br label %336

316:                                              ; preds = %303, %213
  %317 = load i64, i64* %20, align 8, !tbaa !8
  %318 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64 0, i64 %317, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0)
          to label %321 unwind label %319

319:                                              ; preds = %316
  %320 = landingpad { i8*, i32 }
          cleanup
  br label %336

321:                                              ; preds = %316, %201
  %322 = add nuw i64 %139, 1
  %323 = load i64, i64* %27, align 8, !tbaa !8
  %324 = icmp ugt i64 %323, %322
  br i1 %324, label %138, label %131, !llvm.loop !29

325:                                              ; preds = %131
  %326 = add i64 %132, -1
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64 %326, i64 1)
          to label %330 unwind label %327

327:                                              ; preds = %325
  %328 = landingpad { i8*, i32 }
          catch i8* null
  %329 = extractvalue { i8*, i32 } %328, 0
  call void @__clang_call_terminate(i8* %329) #8
  unreachable

330:                                              ; preds = %325, %131
  %331 = load i8*, i8** %19, align 8, !tbaa !15
  %332 = bitcast %union.anon* %17 to i8*
  %333 = icmp eq i8* %331, %332
  br i1 %333, label %335, label %334

334:                                              ; preds = %330
  call void @_ZdlPv(i8* %331) #7
  br label %335

335:                                              ; preds = %330, %334
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #7
  ret void

336:                                              ; preds = %204, %319, %312, %136
  %337 = phi { i8*, i32 } [ %137, %136 ], [ %205, %204 ], [ %320, %319 ], [ %313, %312 ]
  %338 = load i8*, i8** %19, align 8, !tbaa !15
  %339 = bitcast %union.anon* %17 to i8*
  %340 = icmp eq i8* %338, %339
  br i1 %340, label %342, label %341

341:                                              ; preds = %336
  call void @_ZdlPv(i8* %338) #7
  br label %342

342:                                              ; preds = %341, %336
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #7
  %343 = load i8*, i8** %13, align 8, !tbaa !15
  %344 = bitcast %union.anon* %11 to i8*
  %345 = icmp eq i8* %343, %344
  br i1 %345, label %347, label %346

346:                                              ; preds = %342
  call void @_ZdlPv(i8* %343) #7
  br label %347

347:                                              ; preds = %346, %342
  resume { i8*, i32 } %337
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #2 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #7
  call void @_ZSt9terminatev() #8
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #3

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i8*, i64) local_unnamed_addr #4

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64) local_unnamed_addr #4

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #6

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { noinline noreturn nounwind }
attributes #3 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #6 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!14 = distinct !{!14, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!15 = !{!9, !5, i64 0}
!16 = !{!10, !10, i64 0}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!19 = distinct !{!19, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!20 = distinct !{!20, !21, !22}
!21 = !{!"llvm.loop.mustprogress"}
!22 = !{!"llvm.loop.unroll.disable"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!25 = distinct !{!25, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_: argument 0"}
!28 = distinct !{!28, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_"}
!29 = distinct !{!29, !21, !22}
