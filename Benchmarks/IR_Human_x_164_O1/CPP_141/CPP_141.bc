; ModuleID = '../../Human_xBenchmarks_164/CPP_141/CPP_141.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_141/CPP_141.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::allocator" = type { i8 }

@.str = private unnamed_addr constant [3 x i8] c"No\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c".txt\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c".exe\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c".dll\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"Yes\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::substr\00", align 1
@.str.7 = private unnamed_addr constant [55 x i8] c"%s: __pos (which is %zu) > this->size() (which is %zu)\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z15file_name_checkNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca %"class.std::allocator", align 1
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8, !tbaa !3
  %7 = icmp ult i64 %6, 5
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %10 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %9, %union.anon** %10, align 8, !tbaa !10
  %11 = bitcast %union.anon* %9 to i16*
  store i16 28494, i16* %11, align 8
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 2, i64* %12, align 8, !tbaa !3
  %13 = bitcast %union.anon* %9 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 2
  store i8 0, i8* %14, align 2, !tbaa !11
  br label %106

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8, !tbaa !12
  %18 = load i8, i8* %17, align 1, !tbaa !11
  %19 = icmp slt i8 %18, 65
  br i1 %19, label %21, label %20

20:                                               ; preds = %15
  switch i8 %18, label %28 [
    i8 127, label %21
    i8 126, label %21
    i8 125, label %21
    i8 124, label %21
    i8 123, label %21
    i8 96, label %21
    i8 95, label %21
    i8 94, label %21
    i8 93, label %21
    i8 92, label %21
    i8 91, label %21
  ]

21:                                               ; preds = %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %15
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %23 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %22, %union.anon** %23, align 8, !tbaa !10
  %24 = bitcast %union.anon* %22 to i16*
  store i16 28494, i16* %24, align 8
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 2, i64* %25, align 8, !tbaa !3
  %26 = bitcast %union.anon* %22 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 2
  store i8 0, i8* %27, align 2, !tbaa !11
  br label %106

28:                                               ; preds = %20
  %29 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #7
  %30 = add i64 %6, -4
  call void @llvm.experimental.noalias.scope.decl(metadata !13)
  %31 = icmp ult i64 %6, 4
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  call void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i64 %30, i64 %6) #8, !noalias !13
  unreachable

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %35 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  store %union.anon* %34, %union.anon** %35, align 8, !tbaa !10, !alias.scope !13
  %36 = getelementptr inbounds i8, i8* %17, i64 %30
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %38 = bitcast i8* %36 to i32*
  %39 = bitcast %union.anon* %34 to i32*
  %40 = load i32, i32* %38, align 1
  store i32 %40, i32* %39, align 8
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  store i64 4, i64* %41, align 8, !tbaa !3, !alias.scope !13
  %42 = load i8*, i8** %37, align 8, !tbaa !12, !alias.scope !13
  %43 = getelementptr inbounds i8, i8* %42, i64 4
  store i8 0, i8* %43, align 1, !tbaa !11
  %44 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #7
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %60, label %46

46:                                               ; preds = %33
  %47 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #7
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %60, label %49

49:                                               ; preds = %46
  %50 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #7
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %53) #7
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %"class.std::allocator"* nonnull align 1 dereferenceable(1) %4)
          to label %54 unwind label %55

54:                                               ; preds = %52
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %53) #7
  br label %98

55:                                               ; preds = %52
  %56 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %53) #7
  %57 = load i8*, i8** %37, align 8, !tbaa !12
  %58 = bitcast %union.anon* %34 to i8*
  %59 = icmp eq i8* %57, %58
  br i1 %59, label %105, label %104

60:                                               ; preds = %49, %46, %33
  %61 = load i64, i64* %5, align 8, !tbaa !3
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %84, label %63

63:                                               ; preds = %60
  %64 = load i8*, i8** %16, align 8, !tbaa !12
  br label %69

65:                                               ; preds = %69
  %66 = icmp ugt i32 %78, 3
  %67 = icmp ne i32 %81, 1
  %68 = select i1 %66, i1 true, i1 %67
  br i1 %68, label %84, label %91

69:                                               ; preds = %63, %69
  %70 = phi i64 [ 0, %63 ], [ %82, %69 ]
  %71 = phi i32 [ 0, %63 ], [ %78, %69 ]
  %72 = phi i32 [ 0, %63 ], [ %81, %69 ]
  %73 = getelementptr inbounds i8, i8* %64, i64 %70
  %74 = load i8, i8* %73, align 1, !tbaa !11
  %75 = add i8 %74, -48
  %76 = icmp ult i8 %75, 10
  %77 = zext i1 %76 to i32
  %78 = add nuw nsw i32 %71, %77
  %79 = icmp eq i8 %74, 46
  %80 = zext i1 %79 to i32
  %81 = add nuw nsw i32 %72, %80
  %82 = add nuw nsw i64 %70, 1
  %83 = icmp eq i64 %82, %61
  br i1 %83, label %65, label %69, !llvm.loop !16

84:                                               ; preds = %60, %65
  %85 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %86 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %85, %union.anon** %86, align 8, !tbaa !10
  %87 = bitcast %union.anon* %85 to i16*
  store i16 28494, i16* %87, align 8
  %88 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 2, i64* %88, align 8, !tbaa !3
  %89 = bitcast %union.anon* %85 to i8*
  %90 = getelementptr inbounds i8, i8* %89, i64 2
  store i8 0, i8* %90, align 2, !tbaa !11
  br label %98

91:                                               ; preds = %65
  %92 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %93 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %92, %union.anon** %93, align 8, !tbaa !10
  %94 = bitcast %union.anon* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(3) %94, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3, i1 false) #7
  %95 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 3, i64* %95, align 8, !tbaa !3
  %96 = bitcast %union.anon* %92 to i8*
  %97 = getelementptr inbounds i8, i8* %96, i64 3
  store i8 0, i8* %97, align 1, !tbaa !11
  br label %98

98:                                               ; preds = %91, %84, %54
  %99 = load i8*, i8** %37, align 8, !tbaa !12
  %100 = bitcast %union.anon* %34 to i8*
  %101 = icmp eq i8* %99, %100
  br i1 %101, label %103, label %102

102:                                              ; preds = %98
  call void @_ZdlPv(i8* %99) #7
  br label %103

103:                                              ; preds = %98, %102
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #7
  br label %106

104:                                              ; preds = %55
  call void @_ZdlPv(i8* %57) #7
  br label %105

105:                                              ; preds = %55, %104
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #7
  resume { i8*, i32 } %56

106:                                              ; preds = %21, %103, %8
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, %"class.std::allocator"* nonnull align 1 dereferenceable(1)) unnamed_addr #0 align 2

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noreturn
declare dso_local void @_ZSt24__throw_out_of_range_fmtPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind
declare dso_local i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*) local_unnamed_addr #5

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #6

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #4 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #7 = { nounwind }
attributes #8 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!5, !6, i64 0}
!11 = !{!7, !7, i64 0}
!12 = !{!4, !6, i64 0}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!15 = distinct !{!15, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!16 = distinct !{!16, !17, !18}
!17 = !{!"llvm.loop.mustprogress"}
!18 = !{!"llvm.loop.unroll.disable"}
