digraph "CFG for '_Z11sum_squaresSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z11sum_squaresSt6vectorIiSaIiEE' function";

	Node0x5612d83ae100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%1:\l  %2 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %3 = load i32*, i32** %2, align 8, !tbaa !3\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = load i32*, i32** %4, align 8, !tbaa !8\l  %6 = ptrtoint i32* %3 to i64\l  %7 = ptrtoint i32* %5 to i64\l  %8 = sub i64 %6, %7\l  %9 = icmp eq i64 %8, 0\l  br i1 %9, label %13, label %10\l|{<s0>T|<s1>F}}"];
	Node0x5612d83ae100:s0 -> Node0x5612d83af5b0;
	Node0x5612d83ae100:s1 -> Node0x5612d83afa40;
	Node0x5612d83afa40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%10:\l10:                                               \l  %11 = ashr exact i64 %8, 2\l  %12 = call i64 @llvm.umax.i64(i64 %11, i64 1)\l  br label %15\l}"];
	Node0x5612d83afa40 -> Node0x5612d83afeb0;
	Node0x5612d83af5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%13:\l13:                                               \l  %14 = phi i32 [ 0, %1 ], [ %35, %33 ]\l  ret i32 %14\l}"];
	Node0x5612d83afeb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l15:                                               \l  %16 = phi i64 [ 0, %10 ], [ %36, %33 ]\l  %17 = phi i32 [ 0, %10 ], [ %35, %33 ]\l  %18 = trunc i64 %16 to i32\l  %19 = urem i32 %18, 3\l  %20 = icmp eq i32 %19, 0\l  br i1 %20, label %21, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5612d83afeb0:s0 -> Node0x5612d83b0410;
	Node0x5612d83afeb0:s1 -> Node0x5612d83b04a0;
	Node0x5612d83b0410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%21:\l21:                                               \l  %22 = getelementptr inbounds i32, i32* %5, i64 %16\l  %23 = load i32, i32* %22, align 4, !tbaa !9\l  %24 = mul nsw i32 %23, %23\l  br label %33\l}"];
	Node0x5612d83b0410 -> Node0x5612d83affa0;
	Node0x5612d83b04a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%25:\l25:                                               \l  %26 = and i64 %16, 3\l  %27 = icmp eq i64 %26, 0\l  %28 = getelementptr inbounds i32, i32* %5, i64 %16\l  %29 = load i32, i32* %28, align 4, !tbaa !9\l  br i1 %27, label %30, label %33\l|{<s0>T|<s1>F}}"];
	Node0x5612d83b04a0:s0 -> Node0x5612d83b1120;
	Node0x5612d83b04a0:s1 -> Node0x5612d83affa0;
	Node0x5612d83b1120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%30:\l30:                                               \l  %31 = mul nsw i32 %29, %29\l  %32 = mul nsw i32 %31, %29\l  br label %33\l}"];
	Node0x5612d83b1120 -> Node0x5612d83affa0;
	Node0x5612d83affa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i32 [ %24, %21 ], [ %32, %30 ], [ %29, %25 ]\l  %35 = add nsw i32 %34, %17\l  %36 = add nuw nsw i64 %16, 1\l  %37 = icmp eq i64 %36, %12\l  br i1 %37, label %13, label %15, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5612d83affa0:s0 -> Node0x5612d83af5b0;
	Node0x5612d83affa0:s1 -> Node0x5612d83afeb0;
}
