; ModuleID = '../../Human_xBenchmarks_164/CPP_113/CPP_113.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_113/CPP_113.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z = comdat any

$__clang_call_terminate = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ = comdat any

@.str = private unnamed_addr constant [57 x i8] c"the number of odd elements in the string i of the input.\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z9odd_countSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE(%"class.std::vector"* noalias sret(%"class.std::vector") align 8 %0, %"class.std::vector"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = alloca %"class.std::__cxx11::basic_string", align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %15 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  %16 = bitcast i64* %5 to i8*
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  %21 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %23 = bitcast %"class.std::__cxx11::basic_string"* %7 to %union.anon**
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  %26 = bitcast %"class.std::__cxx11::basic_string"* %10 to i8*
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2
  %28 = bitcast %"class.std::__cxx11::basic_string"* %10 to %union.anon**
  %29 = bitcast i64* %3 to i8*
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2, i32 0
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 1
  %34 = bitcast %union.anon* %27 to i8*
  %35 = bitcast %union.anon* %22 to i8*
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 0
  %37 = getelementptr %union.anon, %union.anon* %27, i64 0, i32 0
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2, i32 0
  %39 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  %40 = bitcast %"class.std::__cxx11::basic_string"* %9 to i8*
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %42 = bitcast %"class.std::__cxx11::basic_string"* %8 to %union.anon**
  %43 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  %45 = bitcast %union.anon* %41 to i8*
  %46 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 1
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %48 = bitcast %union.anon* %41 to i8*
  %49 = bitcast %union.anon* %22 to i8*
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 0
  %51 = getelementptr %union.anon, %union.anon* %41, i64 0, i32 0
  %52 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  %53 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2
  %55 = bitcast %union.anon* %54 to i8*
  %56 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %58 = bitcast i64* %4 to i8*
  %59 = bitcast %union.anon* %22 to i8*
  %60 = bitcast %union.anon* %14 to i8*
  %61 = bitcast %"class.std::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %61, i8 0, i64 24, i1 false)
  %62 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %11, align 8, !tbaa !3
  %63 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8, !tbaa !8
  %64 = icmp eq %"class.std::__cxx11::basic_string"* %62, %63
  br i1 %64, label %308, label %65

65:                                               ; preds = %2
  %66 = bitcast %union.anon* %22 to i8*
  br label %67

67:                                               ; preds = %65, %282
  %68 = phi i64 [ %283, %282 ], [ 0, %65 ]
  %69 = phi %"class.std::__cxx11::basic_string"* [ %285, %282 ], [ %63, %65 ]
  %70 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %69, i64 %68, i32 1
  %71 = load i64, i64* %70, align 8, !tbaa !9
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %69, i64 %68, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8, !tbaa !13
  br label %84

76:                                               ; preds = %97, %67
  %77 = phi i32 [ 0, %67 ], [ %98, %97 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #13
  store %union.anon* %14, %union.anon** %15, align 8, !tbaa !14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  store i64 56, i64* %5, align 8, !tbaa !15
  %78 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
          to label %79 unwind label %131

79:                                               ; preds = %76
  store i8* %78, i8** %17, align 8, !tbaa !13
  %80 = load i64, i64* %5, align 8, !tbaa !15
  store i64 %80, i64* %18, align 8, !tbaa !16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(56) %78, i8* noundef nonnull align 1 dereferenceable(56) getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i64 56, i1 false) #13
  store i64 %80, i64* %20, align 8, !tbaa !9
  %81 = getelementptr inbounds i8, i8* %78, i64 %80
  store i8 0, i8* %81, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #13
  store %union.anon* %22, %union.anon** %23, align 8, !tbaa !14
  store i64 0, i64* %25, align 8, !tbaa !9
  store i8 0, i8* %66, align 8, !tbaa !16
  %82 = load i64, i64* %20, align 8, !tbaa !9
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %101, label %133

84:                                               ; preds = %73, %97
  %85 = phi i64 [ 0, %73 ], [ %99, %97 ]
  %86 = phi i32 [ 0, %73 ], [ %98, %97 ]
  %87 = getelementptr inbounds i8, i8* %75, i64 %85
  %88 = load i8, i8* %87, align 1, !tbaa !16
  %89 = add i8 %88, -48
  %90 = icmp ult i8 %89, 10
  br i1 %90, label %91, label %97

91:                                               ; preds = %84
  %92 = sext i8 %88 to i32
  %93 = srem i32 %92, 2
  %94 = icmp eq i32 %93, 1
  %95 = zext i1 %94 to i32
  %96 = add nsw i32 %86, %95
  br label %97

97:                                               ; preds = %91, %84
  %98 = phi i32 [ %86, %84 ], [ %96, %91 ]
  %99 = add nuw nsw i64 %85, 1
  %100 = icmp eq i64 %99, %71
  br i1 %100, label %76, label %84, !llvm.loop !17

101:                                              ; preds = %270, %79
  %102 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %56, align 8, !tbaa !3
  %103 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %57, align 8, !tbaa !20
  %104 = icmp eq %"class.std::__cxx11::basic_string"* %102, %103
  br i1 %104, label %130, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %102, i64 0, i32 2
  %107 = bitcast %"class.std::__cxx11::basic_string"* %102 to %union.anon**
  store %union.anon* %106, %union.anon** %107, align 8, !tbaa !14
  %108 = load i8*, i8** %24, align 8, !tbaa !13
  %109 = load i64, i64* %25, align 8, !tbaa !9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #13
  store i64 %109, i64* %4, align 8, !tbaa !15
  %110 = icmp ugt i64 %109, 15
  br i1 %110, label %111, label %117

111:                                              ; preds = %105
  %112 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %102, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %113 unwind label %291

113:                                              ; preds = %111
  %114 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %102, i64 0, i32 0, i32 0
  store i8* %112, i8** %114, align 8, !tbaa !13
  %115 = load i64, i64* %4, align 8, !tbaa !15
  %116 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %102, i64 0, i32 2, i32 0
  store i64 %115, i64* %116, align 8, !tbaa !16
  br label %117

117:                                              ; preds = %113, %105
  %118 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %102, i64 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8, !tbaa !13
  switch i64 %109, label %122 [
    i64 1, label %120
    i64 0, label %123
  ]

120:                                              ; preds = %117
  %121 = load i8, i8* %108, align 1, !tbaa !16
  store i8 %121, i8* %119, align 1, !tbaa !16
  br label %123

122:                                              ; preds = %117
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %119, i8* align 1 %108, i64 %109, i1 false) #13
  br label %123

123:                                              ; preds = %122, %120, %117
  %124 = load i64, i64* %4, align 8, !tbaa !15
  %125 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %102, i64 0, i32 1
  store i64 %124, i64* %125, align 8, !tbaa !9
  %126 = load i8*, i8** %118, align 8, !tbaa !13
  %127 = getelementptr inbounds i8, i8* %126, i64 %124
  store i8 0, i8* %127, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #13
  %128 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %56, align 8, !tbaa !3
  %129 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %128, i64 1
  store %"class.std::__cxx11::basic_string"* %129, %"class.std::__cxx11::basic_string"** %56, align 8, !tbaa !3
  br label %274

130:                                              ; preds = %101
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %"class.std::__cxx11::basic_string"* %102, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7)
          to label %274 unwind label %291

131:                                              ; preds = %76
  %132 = landingpad { i8*, i32 }
          cleanup
  br label %305

133:                                              ; preds = %79, %270
  %134 = phi i64 [ %271, %270 ], [ 0, %79 ]
  %135 = load i8*, i8** %19, align 8, !tbaa !13
  %136 = getelementptr inbounds i8, i8* %135, i64 %134
  %137 = load i8, i8* %136, align 1, !tbaa !16
  %138 = icmp eq i8 %137, 105
  br i1 %138, label %139, label %207

139:                                              ; preds = %133
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #13
  invoke void (%"class.std::__cxx11::basic_string"*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i64, i8*, ...) @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %9, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* nonnull @vsnprintf, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i32 %77)
          to label %140 unwind label %193

140:                                              ; preds = %139
  call void @llvm.experimental.noalias.scope.decl(metadata !21)
  %141 = load i64, i64* %25, align 8, !tbaa !9, !noalias !21
  %142 = load i8*, i8** %24, align 8, !tbaa !13, !noalias !21
  %143 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %9, i64 0, i64 0, i8* %142, i64 %141)
          to label %144 unwind label %195

144:                                              ; preds = %140
  store %union.anon* %41, %union.anon** %42, align 8, !tbaa !14, !alias.scope !21
  %145 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %143, i64 0, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8, !tbaa !13
  %147 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %143, i64 0, i32 2
  %148 = bitcast %union.anon* %147 to i8*
  %149 = icmp eq i8* %146, %148
  br i1 %149, label %150, label %151

150:                                              ; preds = %144
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %45, i8* noundef nonnull align 8 dereferenceable(16) %148, i64 16, i1 false) #13
  br label %154

151:                                              ; preds = %144
  store i8* %146, i8** %43, align 8, !tbaa !13, !alias.scope !21
  %152 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %143, i64 0, i32 2, i32 0
  %153 = load i64, i64* %152, align 8, !tbaa !16
  store i64 %153, i64* %44, align 8, !tbaa !16, !alias.scope !21
  br label %154

154:                                              ; preds = %150, %151
  %155 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %143, i64 0, i32 1
  %156 = load i64, i64* %155, align 8, !tbaa !9
  store i64 %156, i64* %46, align 8, !tbaa !9, !alias.scope !21
  %157 = bitcast %"class.std::__cxx11::basic_string"* %143 to %union.anon**
  store %union.anon* %147, %union.anon** %157, align 8, !tbaa !13
  store i64 0, i64* %155, align 8, !tbaa !9
  store i8 0, i8* %148, align 8, !tbaa !16
  %158 = load i8*, i8** %47, align 8, !tbaa !13
  %159 = icmp eq i8* %158, %48
  br i1 %159, label %160, label %173

160:                                              ; preds = %154
  %161 = load i64, i64* %46, align 8, !tbaa !9
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %169, label %163

163:                                              ; preds = %160
  %164 = load i8*, i8** %24, align 8, !tbaa !13
  %165 = icmp eq i64 %161, 1
  br i1 %165, label %166, label %168

166:                                              ; preds = %163
  %167 = load i8, i8* %158, align 1, !tbaa !16
  store i8 %167, i8* %164, align 1, !tbaa !16
  br label %169

168:                                              ; preds = %163
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %164, i8* align 1 %158, i64 %161, i1 false) #13
  br label %169

169:                                              ; preds = %168, %166, %160
  %170 = load i64, i64* %46, align 8, !tbaa !9
  store i64 %170, i64* %25, align 8, !tbaa !9
  %171 = load i8*, i8** %24, align 8, !tbaa !13
  %172 = getelementptr inbounds i8, i8* %171, i64 %170
  store i8 0, i8* %172, align 1, !tbaa !16
  br label %183

173:                                              ; preds = %154
  %174 = load i8*, i8** %24, align 8, !tbaa !13
  %175 = icmp eq i8* %174, %49
  %176 = load i64, i64* %50, align 8
  store i8* %158, i8** %24, align 8, !tbaa !13
  %177 = load i64, i64* %46, align 8, !tbaa !9
  store i64 %177, i64* %25, align 8, !tbaa !9
  %178 = load i64, i64* %51, align 8, !tbaa !16
  store i64 %178, i64* %50, align 8, !tbaa !16
  %179 = icmp eq i8* %174, null
  %180 = or i1 %175, %179
  br i1 %180, label %182, label %181

181:                                              ; preds = %173
  store i8* %174, i8** %47, align 8, !tbaa !13
  store i64 %176, i64* %52, align 8, !tbaa !16
  br label %183

182:                                              ; preds = %173
  store %union.anon* %41, %union.anon** %42, align 8, !tbaa !13
  br label %183

183:                                              ; preds = %169, %181, %182
  store i64 0, i64* %46, align 8, !tbaa !9
  %184 = load i8*, i8** %47, align 8, !tbaa !13
  store i8 0, i8* %184, align 1, !tbaa !16
  %185 = load i8*, i8** %47, align 8, !tbaa !13
  %186 = icmp eq i8* %185, %48
  br i1 %186, label %188, label %187

187:                                              ; preds = %183
  call void @_ZdlPv(i8* %185) #13
  br label %188

188:                                              ; preds = %183, %187
  %189 = load i8*, i8** %53, align 8, !tbaa !13
  %190 = icmp eq i8* %189, %55
  br i1 %190, label %192, label %191

191:                                              ; preds = %188
  call void @_ZdlPv(i8* %189) #13
  br label %192

192:                                              ; preds = %188, %191
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #13
  br label %270

193:                                              ; preds = %139
  %194 = landingpad { i8*, i32 }
          cleanup
  br label %203

195:                                              ; preds = %140
  %196 = landingpad { i8*, i32 }
          cleanup
  %197 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8, !tbaa !13
  %199 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2
  %200 = bitcast %union.anon* %199 to i8*
  %201 = icmp eq i8* %198, %200
  br i1 %201, label %203, label %202

202:                                              ; preds = %195
  call void @_ZdlPv(i8* %198) #13
  br label %203

203:                                              ; preds = %202, %195, %193
  %204 = phi { i8*, i32 } [ %194, %193 ], [ %196, %195 ], [ %196, %202 ]
  %205 = bitcast %"class.std::__cxx11::basic_string"* %9 to i8*
  %206 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %205) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %206) #13
  br label %293

207:                                              ; preds = %133
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #13
  %208 = load i8, i8* %136, align 1, !tbaa !16
  call void @llvm.experimental.noalias.scope.decl(metadata !24)
  store %union.anon* %27, %union.anon** %28, align 8, !tbaa !14, !alias.scope !24
  %209 = load i8*, i8** %24, align 8, !tbaa !13, !noalias !24
  %210 = load i64, i64* %25, align 8, !tbaa !9, !noalias !24
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13, !noalias !24
  store i64 %210, i64* %3, align 8, !tbaa !15, !noalias !24
  %211 = icmp ugt i64 %210, 15
  br i1 %211, label %212, label %216

212:                                              ; preds = %207
  %213 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %214 unwind label %265

214:                                              ; preds = %212
  store i8* %213, i8** %30, align 8, !tbaa !13, !alias.scope !24
  %215 = load i64, i64* %3, align 8, !tbaa !15, !noalias !24
  store i64 %215, i64* %31, align 8, !tbaa !16, !alias.scope !24
  br label %216

216:                                              ; preds = %214, %207
  %217 = load i8*, i8** %32, align 8, !tbaa !13, !alias.scope !24
  switch i64 %210, label %220 [
    i64 1, label %218
    i64 0, label %221
  ]

218:                                              ; preds = %216
  %219 = load i8, i8* %209, align 1, !tbaa !16
  store i8 %219, i8* %217, align 1, !tbaa !16
  br label %221

220:                                              ; preds = %216
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %217, i8* align 1 %209, i64 %210, i1 false) #13
  br label %221

221:                                              ; preds = %220, %218, %216
  %222 = load i64, i64* %3, align 8, !tbaa !15, !noalias !24
  store i64 %222, i64* %33, align 8, !tbaa !9, !alias.scope !24
  %223 = load i8*, i8** %32, align 8, !tbaa !13, !alias.scope !24
  %224 = getelementptr inbounds i8, i8* %223, i64 %222
  store i8 0, i8* %224, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13, !noalias !24
  %225 = load i64, i64* %33, align 8, !tbaa !9, !alias.scope !24
  %226 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i64 %225, i64 0, i64 1, i8 signext %208)
          to label %233 unwind label %227

227:                                              ; preds = %221
  %228 = landingpad { i8*, i32 }
          cleanup
  %229 = load i8*, i8** %32, align 8, !tbaa !13, !alias.scope !24
  %230 = bitcast %union.anon* %27 to i8*
  %231 = icmp eq i8* %229, %230
  br i1 %231, label %267, label %232

232:                                              ; preds = %227
  call void @_ZdlPv(i8* %229) #13
  br label %267

233:                                              ; preds = %221
  %234 = load i8*, i8** %32, align 8, !tbaa !13
  %235 = icmp eq i8* %234, %34
  br i1 %235, label %236, label %249

236:                                              ; preds = %233
  %237 = load i64, i64* %33, align 8, !tbaa !9
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %245, label %239

239:                                              ; preds = %236
  %240 = load i8*, i8** %24, align 8, !tbaa !13
  %241 = icmp eq i64 %237, 1
  br i1 %241, label %242, label %244

242:                                              ; preds = %239
  %243 = load i8, i8* %234, align 1, !tbaa !16
  store i8 %243, i8* %240, align 1, !tbaa !16
  br label %245

244:                                              ; preds = %239
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %240, i8* align 1 %234, i64 %237, i1 false) #13
  br label %245

245:                                              ; preds = %244, %242, %236
  %246 = load i64, i64* %33, align 8, !tbaa !9
  store i64 %246, i64* %25, align 8, !tbaa !9
  %247 = load i8*, i8** %24, align 8, !tbaa !13
  %248 = getelementptr inbounds i8, i8* %247, i64 %246
  store i8 0, i8* %248, align 1, !tbaa !16
  br label %259

249:                                              ; preds = %233
  %250 = load i8*, i8** %24, align 8, !tbaa !13
  %251 = icmp eq i8* %250, %35
  %252 = load i64, i64* %36, align 8
  store i8* %234, i8** %24, align 8, !tbaa !13
  %253 = load i64, i64* %33, align 8, !tbaa !9
  store i64 %253, i64* %25, align 8, !tbaa !9
  %254 = load i64, i64* %37, align 8, !tbaa !16
  store i64 %254, i64* %36, align 8, !tbaa !16
  %255 = icmp eq i8* %250, null
  %256 = or i1 %251, %255
  br i1 %256, label %258, label %257

257:                                              ; preds = %249
  store i8* %250, i8** %32, align 8, !tbaa !13
  store i64 %252, i64* %38, align 8, !tbaa !16
  br label %259

258:                                              ; preds = %249
  store %union.anon* %27, %union.anon** %28, align 8, !tbaa !13
  br label %259

259:                                              ; preds = %245, %257, %258
  store i64 0, i64* %33, align 8, !tbaa !9
  %260 = load i8*, i8** %32, align 8, !tbaa !13
  store i8 0, i8* %260, align 1, !tbaa !16
  %261 = load i8*, i8** %32, align 8, !tbaa !13
  %262 = icmp eq i8* %261, %34
  br i1 %262, label %264, label %263

263:                                              ; preds = %259
  call void @_ZdlPv(i8* %261) #13
  br label %264

264:                                              ; preds = %259, %263
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #13
  br label %270

265:                                              ; preds = %212
  %266 = landingpad { i8*, i32 }
          cleanup
  br label %267

267:                                              ; preds = %227, %232, %265
  %268 = phi { i8*, i32 } [ %266, %265 ], [ %228, %232 ], [ %228, %227 ]
  %269 = bitcast %"class.std::__cxx11::basic_string"* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %269) #13
  br label %293

270:                                              ; preds = %192, %264
  %271 = add nuw i64 %134, 1
  %272 = load i64, i64* %20, align 8, !tbaa !9
  %273 = icmp ugt i64 %272, %271
  br i1 %273, label %133, label %101, !llvm.loop !27

274:                                              ; preds = %123, %130
  %275 = load i8*, i8** %24, align 8, !tbaa !13
  %276 = icmp eq i8* %275, %59
  br i1 %276, label %278, label %277

277:                                              ; preds = %274
  call void @_ZdlPv(i8* %275) #13
  br label %278

278:                                              ; preds = %274, %277
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #13
  %279 = load i8*, i8** %19, align 8, !tbaa !13
  %280 = icmp eq i8* %279, %60
  br i1 %280, label %282, label %281

281:                                              ; preds = %278
  call void @_ZdlPv(i8* %279) #13
  br label %282

282:                                              ; preds = %278, %281
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #13
  %283 = add nuw i64 %68, 1
  %284 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %11, align 8, !tbaa !3
  %285 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8, !tbaa !8
  %286 = ptrtoint %"class.std::__cxx11::basic_string"* %284 to i64
  %287 = ptrtoint %"class.std::__cxx11::basic_string"* %285 to i64
  %288 = sub i64 %286, %287
  %289 = ashr exact i64 %288, 5
  %290 = icmp ugt i64 %289, %283
  br i1 %290, label %67, label %308, !llvm.loop !28

291:                                              ; preds = %130, %111
  %292 = landingpad { i8*, i32 }
          cleanup
  br label %293

293:                                              ; preds = %203, %267, %291
  %294 = phi { i8*, i32 } [ %292, %291 ], [ %204, %203 ], [ %268, %267 ]
  %295 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  %296 = load i8*, i8** %24, align 8, !tbaa !13
  %297 = bitcast %union.anon* %22 to i8*
  %298 = icmp eq i8* %296, %297
  br i1 %298, label %300, label %299

299:                                              ; preds = %293
  call void @_ZdlPv(i8* %296) #13
  br label %300

300:                                              ; preds = %299, %293
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %295) #13
  %301 = load i8*, i8** %19, align 8, !tbaa !13
  %302 = bitcast %union.anon* %14 to i8*
  %303 = icmp eq i8* %301, %302
  br i1 %303, label %305, label %304

304:                                              ; preds = %300
  call void @_ZdlPv(i8* %301) #13
  br label %305

305:                                              ; preds = %304, %300, %131
  %306 = phi { i8*, i32 } [ %132, %131 ], [ %294, %300 ], [ %294, %304 ]
  %307 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %307) #13
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #13
  resume { i8*, i32 } %306

308:                                              ; preds = %282, %2
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8, !tbaa !3
  %6 = icmp eq %"class.std::__cxx11::basic_string"* %3, %5
  br i1 %6, label %18, label %7

7:                                                ; preds = %1, %15
  %8 = phi %"class.std::__cxx11::basic_string"* [ %16, %15 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !tbaa !13
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %12 = bitcast %union.anon* %11 to i8*
  %13 = icmp eq i8* %10, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %7
  call void @_ZdlPv(i8* %10) #13
  br label %15

15:                                               ; preds = %14, %7
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 1
  %17 = icmp eq %"class.std::__cxx11::basic_string"* %16, %5
  br i1 %17, label %18, label %7, !llvm.loop !29

18:                                               ; preds = %15, %1
  %19 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %19, align 8, !tbaa !8
  %21 = icmp eq %"class.std::__cxx11::basic_string"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__cxx11::basic_string"* %20 to i8*
  call void @_ZdlPv(i8* nonnull %23) #13
  br label %24

24:                                               ; preds = %18, %22
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* %1, i64 %2, i8* %3, ...) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca i64, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = alloca i8, i64 %2, align 16
  %8 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #13
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %8)
  %10 = call i32 %1(i8* nonnull %7, i64 %2, i8* %3, %struct.__va_list_tag* nonnull %9)
  call void @llvm.va_end(i8* %8)
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !14
  %14 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  store i64 %11, i64* %5, align 8, !tbaa !15
  %15 = icmp ugt i32 %10, 15
  br i1 %15, label %16, label %21

16:                                               ; preds = %4
  %17 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8, !tbaa !13
  %19 = load i64, i64* %5, align 8, !tbaa !15
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %19, i64* %20, align 8, !tbaa !16
  br label %21

21:                                               ; preds = %16, %4
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8, !tbaa !13
  switch i64 %11, label %26 [
    i64 1, label %24
    i64 0, label %27
  ]

24:                                               ; preds = %21
  %25 = load i8, i8* %7, align 16, !tbaa !16
  store i8 %25, i8* %23, align 1, !tbaa !16
  br label %27

26:                                               ; preds = %21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* nonnull align 16 %7, i64 %11, i1 false) #13
  br label %27

27:                                               ; preds = %21, %24, %26
  %28 = load i64, i64* %5, align 8, !tbaa !15
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %28, i64* %29, align 8, !tbaa !9
  %30 = load i8*, i8** %22, align 8, !tbaa !13
  %31 = getelementptr inbounds i8, i8* %30, i64 %28
  store i8 0, i8* %31, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #13
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @vsnprintf(i8* nocapture noundef, i64 noundef, i8* nocapture noundef readonly, %struct.__va_list_tag* noundef) #4

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #6

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @__cxa_rethrow() local_unnamed_addr

declare dso_local void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #7 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #13
  call void @_ZSt9terminatev() #14
  unreachable
}

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #9

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i8*, i64) local_unnamed_addr #6

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #6

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8, !tbaa !3
  %7 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8, !tbaa !8
  %9 = ptrtoint %"class.std::__cxx11::basic_string"* %6 to i64
  %10 = ptrtoint %"class.std::__cxx11::basic_string"* %8 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 5
  %13 = icmp eq i64 %11, 9223372036854775776
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0)) #15
  unreachable

15:                                               ; preds = %3
  %16 = icmp eq i64 %11, 0
  %17 = select i1 %16, i64 1, i64 %12
  %18 = add nsw i64 %17, %12
  %19 = icmp ult i64 %18, %12
  %20 = icmp ugt i64 %18, 288230376151711743
  %21 = or i1 %19, %20
  %22 = select i1 %21, i64 288230376151711743, i64 %18
  %23 = ptrtoint %"class.std::__cxx11::basic_string"* %1 to i64
  %24 = sub i64 %23, %10
  %25 = ashr exact i64 %24, 5
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %15
  %28 = icmp ugt i64 %22, 288230376151711743
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

30:                                               ; preds = %27
  %31 = shl i64 %22, 5
  %32 = call noalias nonnull i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.std::__cxx11::basic_string"*
  br label %34

34:                                               ; preds = %15, %30
  %35 = phi %"class.std::__cxx11::basic_string"* [ %33, %30 ], [ null, %15 ]
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25, i32 2
  %38 = bitcast %"class.std::__cxx11::basic_string"* %36 to %union.anon**
  store %union.anon* %37, %union.anon** %38, align 8, !tbaa !14
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  %42 = load i64, i64* %41, align 8, !tbaa !9
  %43 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #13
  store i64 %42, i64* %4, align 8, !tbaa !15
  %44 = icmp ugt i64 %42, 15
  br i1 %44, label %45, label %51

45:                                               ; preds = %34
  %46 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %36, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %47 unwind label %125

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %36, i64 0, i32 0, i32 0
  store i8* %46, i8** %48, align 8, !tbaa !13
  %49 = load i64, i64* %4, align 8, !tbaa !15
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25, i32 2, i32 0
  store i64 %49, i64* %50, align 8, !tbaa !16
  br label %51

51:                                               ; preds = %47, %34
  %52 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %36, i64 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8, !tbaa !13
  switch i64 %42, label %56 [
    i64 1, label %54
    i64 0, label %57
  ]

54:                                               ; preds = %51
  %55 = load i8, i8* %40, align 1, !tbaa !16
  store i8 %55, i8* %53, align 1, !tbaa !16
  br label %57

56:                                               ; preds = %51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %40, i64 %42, i1 false) #13
  br label %57

57:                                               ; preds = %51, %54, %56
  %58 = load i64, i64* %4, align 8, !tbaa !15
  %59 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25, i32 1
  store i64 %58, i64* %59, align 8, !tbaa !9
  %60 = load i8*, i8** %52, align 8, !tbaa !13
  %61 = getelementptr inbounds i8, i8* %60, i64 %58
  store i8 0, i8* %61, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #13
  %62 = icmp eq %"class.std::__cxx11::basic_string"* %8, %1
  br i1 %62, label %88, label %63

63:                                               ; preds = %57, %80
  %64 = phi %"class.std::__cxx11::basic_string"* [ %86, %80 ], [ %35, %57 ]
  %65 = phi %"class.std::__cxx11::basic_string"* [ %85, %80 ], [ %8, %57 ]
  %66 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 2
  %67 = bitcast %"class.std::__cxx11::basic_string"* %64 to %union.anon**
  store %union.anon* %66, %union.anon** %67, align 8, !tbaa !14
  %68 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8, !tbaa !13
  %70 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 2
  %71 = bitcast %union.anon* %70 to i8*
  %72 = icmp eq i8* %69, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %63
  %74 = bitcast %union.anon* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %74, i8* noundef nonnull align 8 dereferenceable(16) %71, i64 16, i1 false) #13
  br label %80

75:                                               ; preds = %63
  %76 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 0, i32 0
  store i8* %69, i8** %76, align 8, !tbaa !13
  %77 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 2, i32 0
  %78 = load i64, i64* %77, align 8, !tbaa !16
  %79 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 2, i32 0
  store i64 %78, i64* %79, align 8, !tbaa !16
  br label %80

80:                                               ; preds = %75, %73
  %81 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 1
  %82 = load i64, i64* %81, align 8, !tbaa !9
  %83 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 1
  store i64 %82, i64* %83, align 8, !tbaa !9
  %84 = bitcast %"class.std::__cxx11::basic_string"* %65 to %union.anon**
  store %union.anon* %70, %union.anon** %84, align 8, !tbaa !13
  store i64 0, i64* %81, align 8, !tbaa !9
  store i8 0, i8* %71, align 8, !tbaa !16
  %85 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 1
  %86 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 1
  %87 = icmp eq %"class.std::__cxx11::basic_string"* %85, %1
  br i1 %87, label %88, label %63, !llvm.loop !30

88:                                               ; preds = %80, %57
  %89 = phi %"class.std::__cxx11::basic_string"* [ %35, %57 ], [ %86, %80 ]
  %90 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %89, i64 1
  %91 = icmp eq %"class.std::__cxx11::basic_string"* %6, %1
  br i1 %91, label %117, label %92

92:                                               ; preds = %88, %109
  %93 = phi %"class.std::__cxx11::basic_string"* [ %115, %109 ], [ %90, %88 ]
  %94 = phi %"class.std::__cxx11::basic_string"* [ %114, %109 ], [ %1, %88 ]
  %95 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 2
  %96 = bitcast %"class.std::__cxx11::basic_string"* %93 to %union.anon**
  store %union.anon* %95, %union.anon** %96, align 8, !tbaa !14
  %97 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8, !tbaa !13
  %99 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 2
  %100 = bitcast %union.anon* %99 to i8*
  %101 = icmp eq i8* %98, %100
  br i1 %101, label %102, label %104

102:                                              ; preds = %92
  %103 = bitcast %union.anon* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %103, i8* noundef nonnull align 8 dereferenceable(16) %100, i64 16, i1 false) #13
  br label %109

104:                                              ; preds = %92
  %105 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 0, i32 0
  store i8* %98, i8** %105, align 8, !tbaa !13
  %106 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 2, i32 0
  %107 = load i64, i64* %106, align 8, !tbaa !16
  %108 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 2, i32 0
  store i64 %107, i64* %108, align 8, !tbaa !16
  br label %109

109:                                              ; preds = %104, %102
  %110 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 1
  %111 = load i64, i64* %110, align 8, !tbaa !9
  %112 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 1
  store i64 %111, i64* %112, align 8, !tbaa !9
  %113 = bitcast %"class.std::__cxx11::basic_string"* %94 to %union.anon**
  store %union.anon* %99, %union.anon** %113, align 8, !tbaa !13
  store i64 0, i64* %110, align 8, !tbaa !9
  store i8 0, i8* %100, align 8, !tbaa !16
  %114 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 1
  %115 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 1
  %116 = icmp eq %"class.std::__cxx11::basic_string"* %114, %6
  br i1 %116, label %117, label %92, !llvm.loop !30

117:                                              ; preds = %109, %88
  %118 = phi %"class.std::__cxx11::basic_string"* [ %90, %88 ], [ %115, %109 ]
  %119 = icmp eq %"class.std::__cxx11::basic_string"* %8, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %117
  %121 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  call void @_ZdlPv(i8* nonnull %121) #13
  br label %122

122:                                              ; preds = %117, %120
  %123 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* %35, %"class.std::__cxx11::basic_string"** %7, align 8, !tbaa !8
  store %"class.std::__cxx11::basic_string"* %118, %"class.std::__cxx11::basic_string"** %5, align 8, !tbaa !3
  %124 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %22
  store %"class.std::__cxx11::basic_string"* %124, %"class.std::__cxx11::basic_string"** %123, align 8, !tbaa !20
  ret void

125:                                              ; preds = %45
  %126 = landingpad { i8*, i32 }
          catch i8* null
  %127 = extractvalue { i8*, i32 } %126, 0
  %128 = call i8* @__cxa_begin_catch(i8* %127) #13
  %129 = icmp eq %"class.std::__cxx11::basic_string"* %35, null
  br i1 %129, label %130, label %139

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %36, i64 0, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8, !tbaa !13
  %133 = bitcast %union.anon* %37 to i8*
  %134 = icmp eq i8* %132, %133
  br i1 %134, label %138, label %135

135:                                              ; preds = %130
  call void @_ZdlPv(i8* %132) #13
  br label %138

136:                                              ; preds = %141
  %137 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %142 unwind label %143

138:                                              ; preds = %135, %130
  br i1 %129, label %141, label %139

139:                                              ; preds = %125, %138
  %140 = bitcast %"class.std::__cxx11::basic_string"* %35 to i8*
  call void @_ZdlPv(i8* nonnull %140) #13
  br label %141

141:                                              ; preds = %139, %138
  invoke void @__cxa_rethrow() #15
          to label %146 unwind label %136

142:                                              ; preds = %136
  resume { i8*, i32 } %137

143:                                              ; preds = %136
  %144 = landingpad { i8*, i32 }
          catch i8* null
  %145 = extractvalue { i8*, i32 } %144, 0
  call void @__clang_call_terminate(i8* %145) #14
  unreachable

146:                                              ; preds = %141
  unreachable
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #10

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #10

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #12

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #2 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #3 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { mustprogress nofree nosync nounwind willreturn }
attributes #6 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { noinline noreturn nounwind }
attributes #8 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #9 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { noreturn }
attributes #16 = { allocsize(0) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 8}
!4 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!4, !5, i64 0}
!9 = !{!10, !12, i64 8}
!10 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !11, i64 0, !12, i64 8, !6, i64 16}
!11 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!12 = !{!"long", !6, i64 0}
!13 = !{!10, !5, i64 0}
!14 = !{!11, !5, i64 0}
!15 = !{!12, !12, i64 0}
!16 = !{!6, !6, i64 0}
!17 = distinct !{!17, !18, !19}
!18 = !{!"llvm.loop.mustprogress"}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = !{!4, !5, i64 16}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_OS8_: argument 0"}
!23 = distinct !{!23, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_OS8_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!26 = distinct !{!26, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!27 = distinct !{!27, !18, !19}
!28 = distinct !{!28, !18, !19}
!29 = distinct !{!29, !18, !19}
!30 = distinct !{!30, !18, !19}
