digraph "CFG for '_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_less_valEEvT_T0_SG_T1_RT2_' function" {
	label="CFG for '_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_less_valEEvT_T0_SG_T1_RT2_' function";

	Node0x55ca994974b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%5:\l  %6 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 1\l  %7 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 0, i32 0\l  %8 = icmp sgt i64 %1, %2\l  br i1 %8, label %9, label %77\l|{<s0>T|<s1>F}}"];
	Node0x55ca994974b0:s0 -> Node0x55ca99497170;
	Node0x55ca994974b0:s1 -> Node0x55ca99497670;
	Node0x55ca99497170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l9:                                                \l  %10 = phi i64 [ %12, %74 ], [ %1, %5 ]\l  %11 = add nsw i64 %10, -1\l  %12 = sdiv i64 %11, 2\l  %13 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 %12\l  %14 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 %12, i32 1\l  %15 = load i64, i64* %14, align 8, !tbaa !3\l  %16 = load i64, i64* %6, align 8, !tbaa !3\l  %17 = icmp ugt i64 %15, %16\l  %18 = select i1 %17, i64 %16, i64 %15\l  %19 = icmp eq i64 %18, 0\l  br i1 %19, label %25, label %20\l|{<s0>T|<s1>F}}"];
	Node0x55ca99497170:s0 -> Node0x55ca994ae430;
	Node0x55ca99497170:s1 -> Node0x55ca994ae480;
	Node0x55ca994ae480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%20:\l20:                                               \l  %21 = load i8*, i8** %7, align 8, !tbaa !10\l  %22 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %13, i64 0, i32 0, i32 0\l  %23 = load i8*, i8** %22, align 8, !tbaa !10\l  %24 = call i32 @memcmp(i8* %23, i8* %21, i64 %18) #16\l  br label %25\l}"];
	Node0x55ca994ae480 -> Node0x55ca994ae430;
	Node0x55ca994ae430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %24, %20 ], [ 0, %9 ]\l  %27 = icmp eq i32 %26, 0\l  br i1 %27, label %28, label %35\l|{<s0>T|<s1>F}}"];
	Node0x55ca994ae430:s0 -> Node0x55ca994aea20;
	Node0x55ca994ae430:s1 -> Node0x55ca994aea70;
	Node0x55ca994aea20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%28:\l28:                                               \l  %29 = sub i64 %15, %16\l  %30 = icmp sgt i64 %29, -2147483648\l  %31 = select i1 %30, i64 %29, i64 -2147483648\l  %32 = icmp slt i64 %31, 2147483647\l  %33 = select i1 %32, i64 %31, i64 2147483647\l  %34 = trunc i64 %33 to i32\l  br label %35\l}"];
	Node0x55ca994aea20 -> Node0x55ca994aea70;
	Node0x55ca994aea70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i32 [ %26, %25 ], [ %34, %28 ]\l  %37 = icmp slt i32 %36, 0\l  br i1 %37, label %38, label %77\l|{<s0>T|<s1>F}}"];
	Node0x55ca994aea70:s0 -> Node0x55ca994af0a0;
	Node0x55ca994aea70:s1 -> Node0x55ca99497670;
	Node0x55ca994af0a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 %10, i32 0, i32 0\l  %40 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %13, i64 0, i32 0, i32 0\l  %41 = load i8*, i8** %40, align 8, !tbaa !10\l  %42 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 %12, i32 2\l  %43 = bitcast %union.anon* %42 to i8*\l  %44 = icmp eq i8* %41, %43\l  br i1 %44, label %45, label %58\l|{<s0>T|<s1>F}}"];
	Node0x55ca994af0a0:s0 -> Node0x55ca994af4d0;
	Node0x55ca994af0a0:s1 -> Node0x55ca994af520;
	Node0x55ca994af4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%45:\l45:                                               \l  %46 = icmp eq i64 %15, 0\l  br i1 %46, label %53, label %47\l|{<s0>T|<s1>F}}"];
	Node0x55ca994af4d0:s0 -> Node0x55ca994af6b0;
	Node0x55ca994af4d0:s1 -> Node0x55ca994af700;
	Node0x55ca994af700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%47:\l47:                                               \l  %48 = load i8*, i8** %39, align 8, !tbaa !10\l  %49 = icmp eq i64 %15, 1\l  br i1 %49, label %50, label %52\l|{<s0>T|<s1>F}}"];
	Node0x55ca994af700:s0 -> Node0x55ca994af900;
	Node0x55ca994af700:s1 -> Node0x55ca994af950;
	Node0x55ca994af900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%50:\l50:                                               \l  %51 = load i8, i8* %41, align 1, !tbaa !11\l  store i8 %51, i8* %48, align 1, !tbaa !11\l  br label %53\l}"];
	Node0x55ca994af900 -> Node0x55ca994af6b0;
	Node0x55ca994af950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%52:\l52:                                               \l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %48, i8* align 1 %41, i64\l... %15, i1 false) #16\l  br label %53\l}"];
	Node0x55ca994af950 -> Node0x55ca994af6b0;
	Node0x55ca994af6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%53:\l53:                                               \l  %54 = load i64, i64* %14, align 8, !tbaa !3\l  %55 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 %10, i32 1\l  store i64 %54, i64* %55, align 8, !tbaa !3\l  %56 = load i8*, i8** %39, align 8, !tbaa !10\l  %57 = getelementptr inbounds i8, i8* %56, i64 %54\l  store i8 0, i8* %57, align 1, !tbaa !11\l  br label %74\l}"];
	Node0x55ca994af6b0 -> Node0x55ca99497770;
	Node0x55ca994af520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%58:\l58:                                               \l  %59 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 %10, i32 2\l  %60 = bitcast %union.anon* %59 to i8*\l  %61 = load i8*, i8** %39, align 8, !tbaa !10\l  %62 = icmp eq i8* %61, %60\l  %63 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 %10, i32 2, i32 0\l  %64 = load i64, i64* %63, align 8\l  store i8* %41, i8** %39, align 8, !tbaa !10\l  %65 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 %10, i32 1\l  store i64 %15, i64* %65, align 8, !tbaa !3\l  %66 = getelementptr %union.anon, %union.anon* %42, i64 0, i32 0\l  %67 = load i64, i64* %66, align 8, !tbaa !11\l  store i64 %67, i64* %63, align 8, !tbaa !11\l  %68 = icmp eq i8* %61, null\l  %69 = or i1 %62, %68\l  br i1 %69, label %72, label %70\l|{<s0>T|<s1>F}}"];
	Node0x55ca994af520:s0 -> Node0x55ca994b09f0;
	Node0x55ca994af520:s1 -> Node0x55ca994b0a40;
	Node0x55ca994b0a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%70:\l70:                                               \l  store i8* %61, i8** %40, align 8, !tbaa !10\l  %71 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 %12, i32 2, i32 0\l  store i64 %64, i64* %71, align 8, !tbaa !11\l  br label %74\l}"];
	Node0x55ca994b0a40 -> Node0x55ca99497770;
	Node0x55ca994b09f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%72:\l72:                                               \l  %73 = bitcast %\"class.std::__cxx11::basic_string\"* %13 to %union.anon**\l  store %union.anon* %42, %union.anon** %73, align 8, !tbaa !10\l  br label %74\l}"];
	Node0x55ca994b09f0 -> Node0x55ca99497770;
	Node0x55ca99497770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  store i64 0, i64* %14, align 8, !tbaa !3\l  %75 = load i8*, i8** %40, align 8, !tbaa !10\l  store i8 0, i8* %75, align 1, !tbaa !11\l  %76 = icmp sgt i64 %12, %2\l  br i1 %76, label %9, label %77, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x55ca99497770:s0 -> Node0x55ca99497170;
	Node0x55ca99497770:s1 -> Node0x55ca99497670;
	Node0x55ca99497670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%77:\l77:                                               \l  %78 = phi i64 [ %1, %5 ], [ %10, %35 ], [ %12, %74 ]\l  %79 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 %78, i32 0, i32 0\l  %80 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 0, i32 0\l  %81 = load i8*, i8** %80, align 8, !tbaa !10\l  %82 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 2\l  %83 = bitcast %union.anon* %82 to i8*\l  %84 = icmp eq i8* %81, %83\l  br i1 %84, label %85, label %100\l|{<s0>T|<s1>F}}"];
	Node0x55ca99497670:s0 -> Node0x55ca994b1730;
	Node0x55ca99497670:s1 -> Node0x55ca994b1780;
	Node0x55ca994b1730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%85:\l85:                                               \l  %86 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 1\l  %87 = load i64, i64* %86, align 8, !tbaa !3\l  %88 = icmp eq i64 %87, 0\l  br i1 %88, label %95, label %89\l|{<s0>T|<s1>F}}"];
	Node0x55ca994b1730:s0 -> Node0x55ca994b1a40;
	Node0x55ca994b1730:s1 -> Node0x55ca994b1a90;
	Node0x55ca994b1a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%89:\l89:                                               \l  %90 = load i8*, i8** %79, align 8, !tbaa !10\l  %91 = icmp eq i64 %87, 1\l  br i1 %91, label %92, label %94\l|{<s0>T|<s1>F}}"];
	Node0x55ca994b1a90:s0 -> Node0x55ca994b1c90;
	Node0x55ca994b1a90:s1 -> Node0x55ca994b1ce0;
	Node0x55ca994b1c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%92:\l92:                                               \l  %93 = load i8, i8* %81, align 1, !tbaa !11\l  store i8 %93, i8* %90, align 1, !tbaa !11\l  br label %95\l}"];
	Node0x55ca994b1c90 -> Node0x55ca994b1a40;
	Node0x55ca994b1ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%94:\l94:                                               \l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %90, i8* align 1 %81, i64\l... %87, i1 false) #16\l  br label %95\l}"];
	Node0x55ca994b1ce0 -> Node0x55ca994b1a40;
	Node0x55ca994b1a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%95:\l95:                                               \l  %96 = load i64, i64* %86, align 8, !tbaa !3\l  %97 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 %78, i32 1\l  store i64 %96, i64* %97, align 8, !tbaa !3\l  %98 = load i8*, i8** %79, align 8, !tbaa !10\l  %99 = getelementptr inbounds i8, i8* %98, i64 %96\l  store i8 0, i8* %99, align 1, !tbaa !11\l  br label %118\l}"];
	Node0x55ca994b1a40 -> Node0x55ca994b24b0;
	Node0x55ca994b1780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%100:\l100:                                              \l  %101 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 %78, i32 2\l  %102 = bitcast %union.anon* %101 to i8*\l  %103 = load i8*, i8** %79, align 8, !tbaa !10\l  %104 = icmp eq i8* %103, %102\l  %105 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 %78, i32 2, i32 0\l  %106 = load i64, i64* %105, align 8\l  store i8* %81, i8** %79, align 8, !tbaa !10\l  %107 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 1\l  %108 = load i64, i64* %107, align 8, !tbaa !3\l  %109 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 %78, i32 1\l  store i64 %108, i64* %109, align 8, !tbaa !3\l  %110 = getelementptr %union.anon, %union.anon* %82, i64 0, i32 0\l  %111 = load i64, i64* %110, align 8, !tbaa !11\l  store i64 %111, i64* %105, align 8, !tbaa !11\l  %112 = icmp eq i8* %103, null\l  %113 = or i1 %104, %112\l  br i1 %113, label %116, label %114\l|{<s0>T|<s1>F}}"];
	Node0x55ca994b1780:s0 -> Node0x55ca994b2ee0;
	Node0x55ca994b1780:s1 -> Node0x55ca994b2f30;
	Node0x55ca994b2f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%114:\l114:                                              \l  store i8* %103, i8** %80, align 8, !tbaa !10\l  %115 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 2, i32 0\l  store i64 %106, i64* %115, align 8, !tbaa !11\l  br label %118\l}"];
	Node0x55ca994b2f30 -> Node0x55ca994b24b0;
	Node0x55ca994b2ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%116:\l116:                                              \l  %117 = bitcast %\"class.std::__cxx11::basic_string\"* %3 to %union.anon**\l  store %union.anon* %82, %union.anon** %117, align 8, !tbaa !10\l  br label %118\l}"];
	Node0x55ca994b2ee0 -> Node0x55ca994b24b0;
	Node0x55ca994b24b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%118:\l118:                                              \l  %119 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 1\l  store i64 0, i64* %119, align 8, !tbaa !3\l  %120 = load i8*, i8** %80, align 8, !tbaa !10\l  store i8 0, i8* %120, align 1, !tbaa !11\l  ret void\l}"];
}
