digraph "CFG for '_Z15check_dict_caseSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEE' function" {
	label="CFG for '_Z15check_dict_caseSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEE' function";

	Node0x556ec724a6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%1:\l  %2 = alloca i64, align 8\l  %3 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %4 = getelementptr inbounds %\"class.std::map\", %\"class.std::map\"* %0, i64 0,\l... i32 0, i32 0, i32 0, i32 0, i32 0\l  %5 = getelementptr inbounds i8, i8* %4, i64 40\l  %6 = bitcast i8* %5 to i64*\l  %7 = load i64, i64* %6, align 8, !tbaa !3\l  %8 = icmp eq i64 %7, 0\l  br i1 %8, label %81, label %9\l|{<s0>T|<s1>F}}"];
	Node0x556ec724a6d0:s0 -> Node0x556ec724b320;
	Node0x556ec724a6d0:s1 -> Node0x556ec724c0a0;
	Node0x556ec724c0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%9:\l9:                                                \l  %10 = getelementptr inbounds i8, i8* %4, i64 24\l  %11 = bitcast i8* %10 to %\"struct.std::_Rb_tree_node_base\"**\l  %12 = load %\"struct.std::_Rb_tree_node_base\"*,\l... %\"struct.std::_Rb_tree_node_base\"** %11, align 8, !tbaa !11\l  %13 = getelementptr inbounds i8, i8* %4, i64 8\l  %14 = bitcast i8* %13 to %\"struct.std::_Rb_tree_node_base\"*\l  %15 = bitcast %\"class.std::__cxx11::basic_string\"* %3 to i8*\l  %16 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 2\l  %17 = bitcast %\"class.std::__cxx11::basic_string\"* %3 to %union.anon**\l  %18 = bitcast i64* %2 to i8*\l  %19 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 0, i32 0\l  %20 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 2, i32 0\l  %21 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 0, i32 0\l  %22 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 1\l  %23 = bitcast %union.anon* %16 to i8*\l  %24 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %12, %14\l  br i1 %24, label %81, label %25\l|{<s0>T|<s1>F}}"];
	Node0x556ec724c0a0:s0 -> Node0x556ec724b320;
	Node0x556ec724c0a0:s1 -> Node0x556ec724c900;
	Node0x556ec724c900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e1675170",label="{%25:\l25:                                               \l  %26 = phi i32 [ %73, %78 ], [ 0, %9 ]\l  %27 = phi i32 [ %71, %78 ], [ 0, %9 ]\l  %28 = phi %\"struct.std::_Rb_tree_node_base\"* [ %79, %78 ], [ %12, %9 ]\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #6\l  %29 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\",\l... %\"struct.std::_Rb_tree_node_base\"* %28, i64 1\l  store %union.anon* %16, %union.anon** %17, align 8, !tbaa !12\l  %30 = bitcast %\"struct.std::_Rb_tree_node_base\"* %29 to i8**\l  %31 = load i8*, i8** %30, align 8, !tbaa !14\l  %32 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\",\l... %\"struct.std::_Rb_tree_node_base\"* %28, i64 1, i32 1\l  %33 = bitcast %\"struct.std::_Rb_tree_node_base\"** %32 to i64*\l  %34 = load i64, i64* %33, align 8, !tbaa !16\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6\l  store i64 %34, i64* %2, align 8, !tbaa !17\l  %35 = icmp ugt i64 %34, 15\l  br i1 %35, label %36, label %39\l|{<s0>T|<s1>F}}"];
	Node0x556ec724c900:s0 -> Node0x556ec724de20;
	Node0x556ec724c900:s1 -> Node0x556ec724deb0;
	Node0x556ec724de20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%36:\l36:                                               \l  %37 = call i8*\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%\"class.s\l...td::__cxx11::basic_string\"* nonnull align 8 dereferenceable(32) %3, i64*\l... nonnull align 8 dereferenceable(8) %2, i64 0)\l  store i8* %37, i8** %19, align 8, !tbaa !14\l  %38 = load i64, i64* %2, align 8, !tbaa !17\l  store i64 %38, i64* %20, align 8, !tbaa !18\l  br label %39\l}"];
	Node0x556ec724de20 -> Node0x556ec724deb0;
	Node0x556ec724deb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e1675170",label="{%39:\l39:                                               \l  %40 = load i8*, i8** %21, align 8, !tbaa !14\l  switch i64 %34, label %43 [\l    i64 1, label %41\l    i64 0, label %44\l  ]\l|{<s0>def|<s1>1|<s2>0}}"];
	Node0x556ec724deb0:s0 -> Node0x556ec724dff0;
	Node0x556ec724deb0:s1 -> Node0x556ec724f1e0;
	Node0x556ec724deb0:s2 -> Node0x556ec724f270;
	Node0x556ec724f1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%41:\l41:                                               \l  %42 = load i8, i8* %31, align 1, !tbaa !18\l  store i8 %42, i8* %40, align 1, !tbaa !18\l  br label %44\l}"];
	Node0x556ec724f1e0 -> Node0x556ec724f270;
	Node0x556ec724dff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%43:\l43:                                               \l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* align 1 %31, i64\l... %34, i1 false) #6\l  br label %44\l}"];
	Node0x556ec724dff0 -> Node0x556ec724f270;
	Node0x556ec724f270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e1675170",label="{%44:\l44:                                               \l  %45 = load i64, i64* %2, align 8, !tbaa !17\l  store i64 %45, i64* %22, align 8, !tbaa !16\l  %46 = load i8*, i8** %21, align 8, !tbaa !14\l  %47 = getelementptr inbounds i8, i8* %46, i64 %45\l  store i8 0, i8* %47, align 1, !tbaa !18\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6\l  %48 = load i64, i64* %22, align 8, !tbaa !16\l  %49 = load i8*, i8** %21, align 8\l  %50 = icmp eq i64 %48, 0\l  br i1 %50, label %70, label %53\l|{<s0>T|<s1>F}}"];
	Node0x556ec724f270:s0 -> Node0x556ec7250bf0;
	Node0x556ec724f270:s1 -> Node0x556ec7250c40;
	Node0x556ec7250d40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%51:\l51:                                               \l  %52 = icmp eq i64 %69, %48\l  br i1 %52, label %70, label %53, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x556ec7250d40:s0 -> Node0x556ec7250bf0;
	Node0x556ec7250d40:s1 -> Node0x556ec7250c40;
	Node0x556ec7250c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = phi i64 [ %69, %51 ], [ 0, %44 ]\l  %55 = phi i32 [ %66, %51 ], [ %26, %44 ]\l  %56 = phi i32 [ %64, %51 ], [ %27, %44 ]\l  %57 = getelementptr inbounds i8, i8* %49, i64 %54\l  %58 = load i8, i8* %57, align 1, !tbaa !18\l  %59 = icmp slt i8 %58, 65\l  br i1 %59, label %70, label %60\l|{<s0>T|<s1>F}}"];
	Node0x556ec7250c40:s0 -> Node0x556ec7250bf0;
	Node0x556ec7250c40:s1 -> Node0x556ec7251490;
	Node0x556ec7251490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%60:\l60:                                               \l  switch i8 %58, label %61 [\l    i8 127, label %70\l    i8 126, label %70\l    i8 125, label %70\l    i8 124, label %70\l    i8 123, label %70\l    i8 96, label %70\l    i8 95, label %70\l    i8 94, label %70\l    i8 93, label %70\l    i8 92, label %70\l    i8 91, label %70\l  ]\l|{<s0>def|<s1>127|<s2>126|<s3>125|<s4>124|<s5>123|<s6>96|<s7>95|<s8>94|<s9>93|<s10>92|<s11>91}}"];
	Node0x556ec7251490:s0 -> Node0x556ec72515d0;
	Node0x556ec7251490:s1 -> Node0x556ec7250bf0;
	Node0x556ec7251490:s2 -> Node0x556ec7250bf0;
	Node0x556ec7251490:s3 -> Node0x556ec7250bf0;
	Node0x556ec7251490:s4 -> Node0x556ec7250bf0;
	Node0x556ec7251490:s5 -> Node0x556ec7250bf0;
	Node0x556ec7251490:s6 -> Node0x556ec7250bf0;
	Node0x556ec7251490:s7 -> Node0x556ec7250bf0;
	Node0x556ec7251490:s8 -> Node0x556ec7250bf0;
	Node0x556ec7251490:s9 -> Node0x556ec7250bf0;
	Node0x556ec7251490:s10 -> Node0x556ec7250bf0;
	Node0x556ec7251490:s11 -> Node0x556ec7250bf0;
	Node0x556ec72515d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%61:\l61:                                               \l  %62 = add i8 %58, -65\l  %63 = icmp ult i8 %62, 26\l  %64 = select i1 %63, i32 1, i32 %56\l  %65 = icmp sgt i8 %58, 96\l  %66 = select i1 %65, i32 1, i32 %55\l  %67 = add nsw i32 %64, %66\l  %68 = icmp eq i32 %67, 2\l  %69 = add nuw i64 %54, 1\l  br i1 %68, label %70, label %51\l|{<s0>T|<s1>F}}"];
	Node0x556ec72515d0:s0 -> Node0x556ec7250bf0;
	Node0x556ec72515d0:s1 -> Node0x556ec7250d40;
	Node0x556ec7250bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e1675170",label="{%70:\l70:                                               \l  %71 = phi i32 [ %27, %44 ], [ %64, %51 ], [ %56, %53 ], [ %64, %61 ], [ %56,\l... %60 ], [ %56, %60 ], [ %56, %60 ], [ %56, %60 ], [ %56, %60 ], [ %56, %60 ],\l... [ %56, %60 ], [ %56, %60 ], [ %56, %60 ], [ %56, %60 ], [ %56, %60 ]\l  %72 = phi i1 [ true, %44 ], [ true, %51 ], [ false, %53 ], [ false, %61 ], [\l... false, %60 ], [ false, %60 ], [ false, %60 ], [ false, %60 ], [ false, %60 ],\l... [ false, %60 ], [ false, %60 ], [ false, %60 ], [ false, %60 ], [ false, %60\l... ], [ false, %60 ]\l  %73 = phi i32 [ %26, %44 ], [ %66, %51 ], [ %55, %53 ], [ %66, %61 ], [ %55,\l... %60 ], [ %55, %60 ], [ %55, %60 ], [ %55, %60 ], [ %55, %60 ], [ %55, %60 ],\l... [ %55, %60 ], [ %55, %60 ], [ %55, %60 ], [ %55, %60 ], [ %55, %60 ]\l  %74 = load i8*, i8** %21, align 8, !tbaa !14\l  %75 = icmp eq i8* %74, %23\l  br i1 %75, label %77, label %76\l|{<s0>T|<s1>F}}"];
	Node0x556ec7250bf0:s0 -> Node0x556ec7252a70;
	Node0x556ec7250bf0:s1 -> Node0x556ec7252ac0;
	Node0x556ec7252ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%76:\l76:                                               \l  call void @_ZdlPv(i8* %74) #6\l  br label %77\l}"];
	Node0x556ec7252ac0 -> Node0x556ec7252a70;
	Node0x556ec7252a70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e1675170",label="{%77:\l77:                                               \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #6\l  br i1 %72, label %78, label %81\l|{<s0>T|<s1>F}}"];
	Node0x556ec7252a70:s0 -> Node0x556ec724ca70;
	Node0x556ec7252a70:s1 -> Node0x556ec724b320;
	Node0x556ec724ca70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e1675170",label="{%78:\l78:                                               \l  %79 = call %\"struct.std::_Rb_tree_node_base\"*\l... @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%\"struct.std::_Rb_tree_node_b\l...ase\"* %28) #7\l  %80 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %79, %14\l  br i1 %80, label %81, label %25, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x556ec724ca70:s0 -> Node0x556ec724b320;
	Node0x556ec724ca70:s1 -> Node0x556ec724c900;
	Node0x556ec724b320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%81:\l81:                                               \l  %82 = phi i1 [ false, %1 ], [ true, %9 ], [ %72, %78 ], [ %72, %77 ]\l  ret i1 %82\l}"];
}
