; ModuleID = '../../Human_xBenchmarks_164/CPP_95/CPP_95.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_95/CPP_95.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>>>, std::less<std::__cxx11::basic_string<char>>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>>>, std::less<std::__cxx11::basic_string<char>>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: uwtable
define dso_local zeroext i1 @_Z15check_dict_caseSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEE(%"class.std::map"* %0) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca i64, align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = getelementptr inbounds %"class.std::map", %"class.std::map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds i8, i8* %4, i64 40
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !3
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %81, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds i8, i8* %4, i64 24
  %11 = bitcast i8* %10 to %"struct.std::_Rb_tree_node_base"**
  %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8, !tbaa !11
  %13 = getelementptr inbounds i8, i8* %4, i64 8
  %14 = bitcast i8* %13 to %"struct.std::_Rb_tree_node_base"*
  %15 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %17 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  %18 = bitcast i64* %2 to i8*
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2, i32 0
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  %23 = bitcast %union.anon* %16 to i8*
  %24 = icmp eq %"struct.std::_Rb_tree_node_base"* %12, %14
  br i1 %24, label %81, label %25

25:                                               ; preds = %9, %78
  %26 = phi i32 [ %73, %78 ], [ 0, %9 ]
  %27 = phi i32 [ %71, %78 ], [ 0, %9 ]
  %28 = phi %"struct.std::_Rb_tree_node_base"* [ %79, %78 ], [ %12, %9 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #6
  %29 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %28, i64 1
  store %union.anon* %16, %union.anon** %17, align 8, !tbaa !12
  %30 = bitcast %"struct.std::_Rb_tree_node_base"* %29 to i8**
  %31 = load i8*, i8** %30, align 8, !tbaa !14
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %28, i64 1, i32 1
  %33 = bitcast %"struct.std::_Rb_tree_node_base"** %32 to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  store i64 %34, i64* %2, align 8, !tbaa !17
  %35 = icmp ugt i64 %34, 15
  br i1 %35, label %36, label %39

36:                                               ; preds = %25
  %37 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3, i64* nonnull align 8 dereferenceable(8) %2, i64 0)
  store i8* %37, i8** %19, align 8, !tbaa !14
  %38 = load i64, i64* %2, align 8, !tbaa !17
  store i64 %38, i64* %20, align 8, !tbaa !18
  br label %39

39:                                               ; preds = %36, %25
  %40 = load i8*, i8** %21, align 8, !tbaa !14
  switch i64 %34, label %43 [
    i64 1, label %41
    i64 0, label %44
  ]

41:                                               ; preds = %39
  %42 = load i8, i8* %31, align 1, !tbaa !18
  store i8 %42, i8* %40, align 1, !tbaa !18
  br label %44

43:                                               ; preds = %39
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* align 1 %31, i64 %34, i1 false) #6
  br label %44

44:                                               ; preds = %39, %41, %43
  %45 = load i64, i64* %2, align 8, !tbaa !17
  store i64 %45, i64* %22, align 8, !tbaa !16
  %46 = load i8*, i8** %21, align 8, !tbaa !14
  %47 = getelementptr inbounds i8, i8* %46, i64 %45
  store i8 0, i8* %47, align 1, !tbaa !18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  %48 = load i64, i64* %22, align 8, !tbaa !16
  %49 = load i8*, i8** %21, align 8
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %70, label %53

51:                                               ; preds = %61
  %52 = icmp eq i64 %69, %48
  br i1 %52, label %70, label %53, !llvm.loop !19

53:                                               ; preds = %44, %51
  %54 = phi i64 [ %69, %51 ], [ 0, %44 ]
  %55 = phi i32 [ %66, %51 ], [ %26, %44 ]
  %56 = phi i32 [ %64, %51 ], [ %27, %44 ]
  %57 = getelementptr inbounds i8, i8* %49, i64 %54
  %58 = load i8, i8* %57, align 1, !tbaa !18
  %59 = icmp slt i8 %58, 65
  br i1 %59, label %70, label %60

60:                                               ; preds = %53
  switch i8 %58, label %61 [
    i8 127, label %70
    i8 126, label %70
    i8 125, label %70
    i8 124, label %70
    i8 123, label %70
    i8 96, label %70
    i8 95, label %70
    i8 94, label %70
    i8 93, label %70
    i8 92, label %70
    i8 91, label %70
  ]

61:                                               ; preds = %60
  %62 = add i8 %58, -65
  %63 = icmp ult i8 %62, 26
  %64 = select i1 %63, i32 1, i32 %56
  %65 = icmp sgt i8 %58, 96
  %66 = select i1 %65, i32 1, i32 %55
  %67 = add nsw i32 %64, %66
  %68 = icmp eq i32 %67, 2
  %69 = add nuw i64 %54, 1
  br i1 %68, label %70, label %51

70:                                               ; preds = %51, %53, %61, %60, %60, %60, %60, %60, %60, %60, %60, %60, %60, %60, %44
  %71 = phi i32 [ %27, %44 ], [ %64, %51 ], [ %56, %53 ], [ %64, %61 ], [ %56, %60 ], [ %56, %60 ], [ %56, %60 ], [ %56, %60 ], [ %56, %60 ], [ %56, %60 ], [ %56, %60 ], [ %56, %60 ], [ %56, %60 ], [ %56, %60 ], [ %56, %60 ]
  %72 = phi i1 [ true, %44 ], [ true, %51 ], [ false, %53 ], [ false, %61 ], [ false, %60 ], [ false, %60 ], [ false, %60 ], [ false, %60 ], [ false, %60 ], [ false, %60 ], [ false, %60 ], [ false, %60 ], [ false, %60 ], [ false, %60 ], [ false, %60 ]
  %73 = phi i32 [ %26, %44 ], [ %66, %51 ], [ %55, %53 ], [ %66, %61 ], [ %55, %60 ], [ %55, %60 ], [ %55, %60 ], [ %55, %60 ], [ %55, %60 ], [ %55, %60 ], [ %55, %60 ], [ %55, %60 ], [ %55, %60 ], [ %55, %60 ], [ %55, %60 ]
  %74 = load i8*, i8** %21, align 8, !tbaa !14
  %75 = icmp eq i8* %74, %23
  br i1 %75, label %77, label %76

76:                                               ; preds = %70
  call void @_ZdlPv(i8* %74) #6
  br label %77

77:                                               ; preds = %70, %76
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #6
  br i1 %72, label %78, label %81

78:                                               ; preds = %77
  %79 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %28) #7
  %80 = icmp eq %"struct.std::_Rb_tree_node_base"* %79, %14
  br i1 %80, label %81, label %25, !llvm.loop !22

81:                                               ; preds = %77, %78, %9, %1
  %82 = phi i1 [ false, %1 ], [ true, %9 ], [ %72, %78 ], [ %72, %77 ]
  ret i1 %82
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) local_unnamed_addr #4

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #5

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #3 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !10, i64 32}
!4 = !{!"_ZTSSt15_Rb_tree_header", !5, i64 0, !10, i64 32}
!5 = !{!"_ZTSSt18_Rb_tree_node_base", !6, i64 0, !9, i64 8, !9, i64 16, !9, i64 24}
!6 = !{!"_ZTSSt14_Rb_tree_color", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"any pointer", !7, i64 0}
!10 = !{!"long", !7, i64 0}
!11 = !{!4, !9, i64 16}
!12 = !{!13, !9, i64 0}
!13 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !9, i64 0}
!14 = !{!15, !9, i64 0}
!15 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !13, i64 0, !10, i64 8, !7, i64 16}
!16 = !{!15, !10, i64 8}
!17 = !{!10, !10, i64 0}
!18 = !{!7, !7, i64 0}
!19 = distinct !{!19, !20, !21}
!20 = !{!"llvm.loop.mustprogress"}
!21 = !{!"llvm.loop.unroll.disable"}
!22 = distinct !{!22, !20, !21}
