digraph "CFG for '_ZNSt6vectorIfSaIfEE13_M_assign_auxIPKfEEvT_S5_St20forward_iterator_tag' function" {
	label="CFG for '_ZNSt6vectorIfSaIfEE13_M_assign_auxIPKfEEvT_S5_St20forward_iterator_tag' function";

	Node0x55ca8347edd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = ptrtoint float* %2 to i64\l  %5 = ptrtoint float* %1 to i64\l  %6 = sub i64 %4, %5\l  %7 = ashr exact i64 %6, 2\l  %8 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %9 = load float*, float** %8, align 8, !tbaa !3\l  %10 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %11 = load float*, float** %10, align 8, !tbaa !8\l  %12 = ptrtoint float* %9 to i64\l  %13 = ptrtoint float* %11 to i64\l  %14 = sub i64 %12, %13\l  %15 = ashr exact i64 %14, 2\l  %16 = icmp ugt i64 %7, %15\l  br i1 %16, label %17, label %35\l|{<s0>T|<s1>F}}"];
	Node0x55ca8347edd0:s0 -> Node0x55ca8347ee20;
	Node0x55ca8347edd0:s1 -> Node0x55ca8347f820;
	Node0x55ca8347ee20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%17:\l17:                                               \l  %18 = icmp ugt i64 %7, 2305843009213693951\l  br i1 %18, label %19, label %20\l|{<s0>T|<s1>F}}"];
	Node0x55ca8347ee20:s0 -> Node0x55ca8347f960;
	Node0x55ca8347ee20:s1 -> Node0x55ca8347f9b0;
	Node0x55ca8347f960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%19:\l19:                                               \l  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x\l... i8], [49 x i8]* @.str, i64 0, i64 0)) #8\l  unreachable\l}"];
	Node0x55ca8347f9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%20:\l20:                                               \l  %21 = call noalias nonnull i8* @_Znwm(i64 %6) #9\l  %22 = bitcast i8* %21 to float*\l  %23 = icmp eq i64 %6, 0\l  br i1 %23, label %26, label %24\l|{<s0>T|<s1>F}}"];
	Node0x55ca8347f9b0:s0 -> Node0x55ca834800f0;
	Node0x55ca8347f9b0:s1 -> Node0x55ca83480140;
	Node0x55ca83480140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%24:\l24:                                               \l  %25 = bitcast float* %1 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4\l... %25, i64 %6, i1 false) #10\l  br label %26\l}"];
	Node0x55ca83480140 -> Node0x55ca834800f0;
	Node0x55ca834800f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%26:\l26:                                               \l  %27 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %28 = load float*, float** %10, align 8, !tbaa !8\l  %29 = icmp eq float* %28, null\l  br i1 %29, label %32, label %30\l|{<s0>T|<s1>F}}"];
	Node0x55ca834800f0:s0 -> Node0x55ca83480840;
	Node0x55ca834800f0:s1 -> Node0x55ca83480890;
	Node0x55ca83480890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%30:\l30:                                               \l  %31 = bitcast float* %28 to i8*\l  call void @_ZdlPv(i8* nonnull %31) #10\l  br label %32\l}"];
	Node0x55ca83480890 -> Node0x55ca83480840;
	Node0x55ca83480840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%32:\l32:                                               \l  %33 = bitcast %\"class.std::vector\"* %0 to i8**\l  store i8* %21, i8** %33, align 8, !tbaa !8\l  %34 = getelementptr inbounds float, float* %22, i64 %7\l  store float* %34, float** %27, align 8, !tbaa !9\l  store float* %34, float** %8, align 8, !tbaa !3\l  br label %69\l}"];
	Node0x55ca83480840 -> Node0x55ca83481680;
	Node0x55ca8347f820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%35:\l35:                                               \l  %36 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %37 = load float*, float** %36, align 8, !tbaa !9\l  %38 = ptrtoint float* %37 to i64\l  %39 = sub i64 %38, %13\l  %40 = ashr exact i64 %39, 2\l  %41 = icmp ult i64 %40, %7\l  br i1 %41, label %52, label %42\l|{<s0>T|<s1>F}}"];
	Node0x55ca8347f820:s0 -> Node0x55ca83481af0;
	Node0x55ca8347f820:s1 -> Node0x55ca83481b40;
	Node0x55ca83481b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%42:\l42:                                               \l  %43 = icmp eq i64 %6, 0\l  br i1 %43, label %47, label %44\l|{<s0>T|<s1>F}}"];
	Node0x55ca83481b40:s0 -> Node0x55ca83481cd0;
	Node0x55ca83481b40:s1 -> Node0x55ca83481d20;
	Node0x55ca83481d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%44:\l44:                                               \l  %45 = bitcast float* %11 to i8*\l  %46 = bitcast float* %1 to i8*\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %46, i64\l... %6, i1 false) #10\l  br label %47\l}"];
	Node0x55ca83481d20 -> Node0x55ca83481cd0;
	Node0x55ca83481cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%47:\l47:                                               \l  %48 = getelementptr inbounds float, float* %11, i64 %7\l  %49 = load float*, float** %36, align 8, !tbaa !9\l  %50 = icmp eq float* %49, %48\l  br i1 %50, label %69, label %51\l|{<s0>T|<s1>F}}"];
	Node0x55ca83481cd0:s0 -> Node0x55ca83481680;
	Node0x55ca83481cd0:s1 -> Node0x55ca83482430;
	Node0x55ca83482430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%51:\l51:                                               \l  store float* %48, float** %36, align 8, !tbaa !9\l  br label %69\l}"];
	Node0x55ca83482430 -> Node0x55ca83481680;
	Node0x55ca83481af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%52:\l52:                                               \l  %53 = getelementptr inbounds float, float* %1, i64 %40\l  %54 = ptrtoint float* %53 to i64\l  %55 = icmp eq i64 %39, 0\l  br i1 %55, label %59, label %56\l|{<s0>T|<s1>F}}"];
	Node0x55ca83481af0:s0 -> Node0x55ca834827d0;
	Node0x55ca83481af0:s1 -> Node0x55ca83482820;
	Node0x55ca83482820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%56:\l56:                                               \l  %57 = bitcast float* %11 to i8*\l  %58 = bitcast float* %1 to i8*\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %58, i64\l... %39, i1 false) #10\l  br label %59\l}"];
	Node0x55ca83482820 -> Node0x55ca834827d0;
	Node0x55ca834827d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%59:\l59:                                               \l  %60 = load float*, float** %36, align 8, !tbaa !9\l  %61 = sub i64 %4, %54\l  %62 = icmp eq i64 %61, 0\l  br i1 %62, label %66, label %63\l|{<s0>T|<s1>F}}"];
	Node0x55ca834827d0:s0 -> Node0x55ca83482da0;
	Node0x55ca834827d0:s1 -> Node0x55ca83482df0;
	Node0x55ca83482df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%63:\l63:                                               \l  %64 = bitcast float* %60 to i8*\l  %65 = bitcast float* %53 to i8*\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %65, i64\l... %61, i1 false) #10\l  br label %66\l}"];
	Node0x55ca83482df0 -> Node0x55ca83482da0;
	Node0x55ca83482da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%66:\l66:                                               \l  %67 = ashr exact i64 %61, 2\l  %68 = getelementptr inbounds float, float* %60, i64 %67\l  store float* %68, float** %36, align 8, !tbaa !9\l  br label %69\l}"];
	Node0x55ca83482da0 -> Node0x55ca83481680;
	Node0x55ca83481680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  ret void\l}"];
}
