digraph "CFG for '_Z21find_closest_elementsSt6vectorIfSaIfEE' function" {
	label="CFG for '_Z21find_closest_elementsSt6vectorIfSaIfEE' function";

	Node0x55ca834762f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%2:\l  %3 = alloca [2 x float], align 4\l  %4 = alloca [2 x float], align 4\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %6 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %7 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %8 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %9 = bitcast [2 x float]* %3 to i8*\l  %10 = getelementptr inbounds [2 x float], [2 x float]* %3, i64 0, i64 0\l  %11 = getelementptr inbounds [2 x float], [2 x float]* %3, i64 0, i64 1\l  %12 = getelementptr inbounds [2 x float], [2 x float]* %3, i64 0, i64 2\l  %13 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %13, i8 0, i64 24, i1 false)\l  %14 = load float*, float** %5, align 8, !tbaa !3\l  %15 = load float*, float** %6, align 8, !tbaa !8\l  %16 = icmp eq float* %14, %15\l  br i1 %16, label %26, label %33\l|{<s0>T|<s1>F}}"];
	Node0x55ca834762f0:s0 -> Node0x55ca83478440;
	Node0x55ca834762f0:s1 -> Node0x55ca834784d0;
	Node0x55ca83478610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%17:\l17:                                               \l  %18 = load float*, float** %5, align 8, !tbaa !3\l  %19 = load float*, float** %6, align 8, !tbaa !8\l  %20 = ptrtoint float* %18 to i64\l  %21 = ptrtoint float* %19 to i64\l  %22 = sub i64 %20, %21\l  %23 = ashr exact i64 %22, 2\l  %24 = icmp ugt i64 %23, %36\l  %25 = add i64 %35, 1\l  br i1 %24, label %33, label %26, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x55ca83478610:s0 -> Node0x55ca834784d0;
	Node0x55ca83478610:s1 -> Node0x55ca83478440;
	Node0x55ca83478440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%26:\l26:                                               \l  %27 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %28 = load float*, float** %27, align 8, !tbaa !8\l  %29 = load float, float* %28, align 4, !tbaa !12\l  %30 = getelementptr inbounds float, float* %28, i64 1\l  %31 = load float, float* %30, align 4, !tbaa !12\l  %32 = fcmp ogt float %29, %31\l  br i1 %32, label %81, label %91\l|{<s0>T|<s1>F}}"];
	Node0x55ca83478440:s0 -> Node0x55ca8347a510;
	Node0x55ca83478440:s1 -> Node0x55ca8347a5a0;
	Node0x55ca834784d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%33:\l33:                                               \l  %34 = phi i64 [ %36, %17 ], [ 0, %2 ]\l  %35 = phi i64 [ %25, %17 ], [ 1, %2 ]\l  %36 = add nuw i64 %34, 1\l  %37 = load float*, float** %5, align 8, !tbaa !3\l  %38 = load float*, float** %6, align 8, !tbaa !8\l  %39 = ptrtoint float* %37 to i64\l  %40 = ptrtoint float* %38 to i64\l  %41 = sub i64 %39, %40\l  %42 = ashr exact i64 %41, 2\l  %43 = icmp ugt i64 %42, %36\l  br i1 %43, label %44, label %17\l|{<s0>T|<s1>F}}"];
	Node0x55ca834784d0:s0 -> Node0x55ca8347ac40;
	Node0x55ca834784d0:s1 -> Node0x55ca83478610;
	Node0x55ca8347ac40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = phi i64 [ %73, %72 ], [ %35, %33 ]\l  %46 = phi float* [ %75, %72 ], [ %38, %33 ]\l  %47 = load float*, float** %7, align 8, !tbaa !3\l  %48 = load float*, float** %8, align 8, !tbaa !8\l  %49 = icmp eq float* %47, %48\l  br i1 %49, label %63, label %50\l|{<s0>T|<s1>F}}"];
	Node0x55ca8347ac40:s0 -> Node0x55ca8347b060;
	Node0x55ca8347ac40:s1 -> Node0x55ca8347b0f0;
	Node0x55ca8347b0f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%50:\l50:                                               \l  %51 = getelementptr inbounds float, float* %46, i64 %34\l  %52 = load float, float* %51, align 4, !tbaa !12\l  %53 = getelementptr inbounds float, float* %46, i64 %45\l  %54 = load float, float* %53, align 4, !tbaa !12\l  %55 = fsub float %52, %54\l  %56 = call float @llvm.fabs.f32(float %55) #8\l  %57 = load float, float* %48, align 4, !tbaa !12\l  %58 = getelementptr inbounds float, float* %48, i64 1\l  %59 = load float, float* %58, align 4, !tbaa !12\l  %60 = fsub float %57, %59\l  %61 = call float @llvm.fabs.f32(float %60) #8\l  %62 = fcmp olt float %56, %61\l  br i1 %62, label %63, label %72\l|{<s0>T|<s1>F}}"];
	Node0x55ca8347b0f0:s0 -> Node0x55ca8347b060;
	Node0x55ca8347b0f0:s1 -> Node0x55ca8347ad40;
	Node0x55ca8347b060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%63:\l63:                                               \l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8\l  %64 = getelementptr inbounds float, float* %46, i64 %34\l  %65 = load float, float* %64, align 4, !tbaa !12\l  store float %65, float* %10, align 4, !tbaa !12\l  %66 = getelementptr inbounds float, float* %46, i64 %45\l  %67 = load float, float* %66, align 4, !tbaa !12\l  store float %67, float* %11, align 4, !tbaa !12\l  invoke void\l... @_ZNSt6vectorIfSaIfEE13_M_assign_auxIPKfEEvT_S5_St20forward_iterator_tag(%\"cla\l...ss.std::vector\"* nonnull align 8 dereferenceable(24) %0, float* nonnull %10,\l... float* nonnull %12)\l          to label %68 unwind label %69\l}"];
	Node0x55ca8347b060 -> Node0x55ca8347c680;
	Node0x55ca8347b060 -> Node0x55ca8347c6d0;
	Node0x55ca8347c680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%68:\l68:                                               \l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8\l  br label %72\l}"];
	Node0x55ca8347c680 -> Node0x55ca8347ad40;
	Node0x55ca8347c6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%69:\l69:                                               \l  %70 = landingpad \{ i8*, i32 \}\l          cleanup\l  %71 = bitcast [2 x float]* %3 to i8*\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #8\l  br label %92\l}"];
	Node0x55ca8347c6d0 -> Node0x55ca8347cf10;
	Node0x55ca8347ad40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  %73 = add i64 %45, 1\l  %74 = load float*, float** %5, align 8, !tbaa !3\l  %75 = load float*, float** %6, align 8, !tbaa !8\l  %76 = ptrtoint float* %74 to i64\l  %77 = ptrtoint float* %75 to i64\l  %78 = sub i64 %76, %77\l  %79 = ashr exact i64 %78, 2\l  %80 = icmp ugt i64 %79, %73\l  br i1 %80, label %44, label %17, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x55ca8347ad40:s0 -> Node0x55ca8347ac40;
	Node0x55ca8347ad40:s1 -> Node0x55ca83478610;
	Node0x55ca8347a510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%81:\l81:                                               \l  %82 = bitcast [2 x float]* %4 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #8\l  %83 = getelementptr inbounds [2 x float], [2 x float]* %4, i64 0, i64 0\l  %84 = load float, float* %30, align 4, !tbaa !12\l  store float %84, float* %83, align 4, !tbaa !12\l  %85 = getelementptr inbounds [2 x float], [2 x float]* %4, i64 0, i64 1\l  %86 = load float, float* %28, align 4, !tbaa !12\l  store float %86, float* %85, align 4, !tbaa !12\l  %87 = getelementptr inbounds [2 x float], [2 x float]* %4, i64 0, i64 2\l  invoke void\l... @_ZNSt6vectorIfSaIfEE13_M_assign_auxIPKfEEvT_S5_St20forward_iterator_tag(%\"cla\l...ss.std::vector\"* nonnull align 8 dereferenceable(24) %0, float* nonnull %83,\l... float* nonnull %87)\l          to label %88 unwind label %89\l}"];
	Node0x55ca8347a510 -> Node0x55ca8347db50;
	Node0x55ca8347a510 -> Node0x55ca8347dba0;
	Node0x55ca8347db50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%88:\l88:                                               \l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #8\l  br label %91\l}"];
	Node0x55ca8347db50 -> Node0x55ca8347a5a0;
	Node0x55ca8347dba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%89:\l89:                                               \l  %90 = landingpad \{ i8*, i32 \}\l          cleanup\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #8\l  br label %92\l}"];
	Node0x55ca8347dba0 -> Node0x55ca8347cf10;
	Node0x55ca8347a5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%91:\l91:                                               \l  ret void\l}"];
	Node0x55ca8347cf10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%92:\l92:                                               \l  %93 = phi \{ i8*, i32 \} [ %70, %69 ], [ %90, %89 ]\l  %94 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %95 = load float*, float** %94, align 8, !tbaa !8\l  %96 = icmp eq float* %95, null\l  br i1 %96, label %99, label %97\l|{<s0>T|<s1>F}}"];
	Node0x55ca8347cf10:s0 -> Node0x55ca8347e3e0;
	Node0x55ca8347cf10:s1 -> Node0x55ca8347e430;
	Node0x55ca8347e430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%97:\l97:                                               \l  %98 = bitcast float* %95 to i8*\l  call void @_ZdlPv(i8* nonnull %98) #8\l  br label %99\l}"];
	Node0x55ca8347e430 -> Node0x55ca8347e3e0;
	Node0x55ca8347e3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%99:\l99:                                               \l  resume \{ i8*, i32 \} %93\l}"];
}
