; ModuleID = '../../Human_xBenchmarks_164/CPP_130/CPP_130.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_130/CPP_130.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }

$_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_ = comdat any

@.str.1 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z3trii(%"class.std::vector"* noalias nocapture sret(%"class.std::vector") align 8 %0, i32 %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector", align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast %"class.std::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false) #7
  %7 = invoke noalias nonnull i8* @_Znwm(i64 8) #8
          to label %13 unwind label %8

8:                                                ; preds = %2
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8, !tbaa !3
  %12 = icmp eq i32* %11, null
  br i1 %12, label %116, label %112

13:                                               ; preds = %2
  %14 = bitcast i8* %7 to i32*
  %15 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::vector"* %3 to i8**
  store i8* %7, i8** %16, align 8, !tbaa !3
  %17 = getelementptr inbounds i8, i8* %7, i64 8
  %18 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %19 = bitcast i32** %18 to i8**
  store i8* %17, i8** %19, align 8, !tbaa !8
  store i32 1, i32* %14, align 4
  %20 = getelementptr inbounds i8, i8* %7, i64 4
  %21 = bitcast i8* %20 to i32*
  store i32 3, i32* %21, align 4
  %22 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast i32** %22 to i8**
  store i8* %17, i8** %23, align 8, !tbaa !9
  %24 = icmp eq i32 %1, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %13
  %26 = bitcast i32* %5 to i8*
  %27 = bitcast i32* %4 to i8*
  %28 = icmp slt i32 %1, 2
  br i1 %28, label %50, label %29

29:                                               ; preds = %25
  %30 = add i32 %1, 1
  %31 = zext i32 %30 to i64
  br label %57

32:                                               ; preds = %13
  %33 = bitcast %"class.std::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %33, i8 0, i64 24, i1 false) #7
  %34 = invoke noalias nonnull i8* @_Znwm(i64 4) #8
          to label %42 unwind label %35

35:                                               ; preds = %32
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8, !tbaa !3
  %39 = icmp eq i32* %38, null
  br i1 %39, label %108, label %40

40:                                               ; preds = %35
  %41 = bitcast i32* %38 to i8*
  call void @_ZdlPv(i8* nonnull %41) #7
  br label %108

42:                                               ; preds = %32
  %43 = bitcast i8* %34 to i32*
  %44 = bitcast %"class.std::vector"* %0 to i8**
  store i8* %34, i8** %44, align 8, !tbaa !3
  %45 = getelementptr inbounds i8, i8* %34, i64 4
  %46 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %47 = bitcast i32** %46 to i8**
  store i8* %45, i8** %47, align 8, !tbaa !8
  store i32 1, i32* %43, align 4
  %48 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %49 = bitcast i32** %48 to i8**
  store i8* %45, i8** %49, align 8, !tbaa !9
  br label %102

50:                                               ; preds = %99, %25
  %51 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i32*, i32** %15, align 8, !tbaa !3
  store i32* %52, i32** %51, align 8, !tbaa !3
  %53 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i32*, i32** %22, align 8, !tbaa !9
  store i32* %54, i32** %53, align 8, !tbaa !9
  %55 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %56 = load i32*, i32** %18, align 8, !tbaa !8
  store i32* %56, i32** %55, align 8, !tbaa !8
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false) #7
  br label %102

57:                                               ; preds = %29, %99
  %58 = phi i64 [ 2, %29 ], [ %100, %99 ]
  %59 = and i64 %58, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %75

61:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #7
  %62 = trunc i64 %58 to i32
  %63 = lshr i32 %62, 1
  %64 = add nuw nsw i32 %63, 1
  store i32 %64, i32* %4, align 4, !tbaa !10
  %65 = load i32*, i32** %22, align 8, !tbaa !9
  %66 = load i32*, i32** %18, align 8, !tbaa !8
  %67 = icmp eq i32* %65, %66
  br i1 %67, label %70, label %68

68:                                               ; preds = %61
  store i32 %64, i32* %65, align 4, !tbaa !10
  %69 = getelementptr inbounds i32, i32* %65, i64 1
  store i32* %69, i32** %22, align 8, !tbaa !9
  br label %71

70:                                               ; preds = %61
  invoke void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %3, i32* %65, i32* nonnull align 4 dereferenceable(4) %4)
          to label %71 unwind label %72

71:                                               ; preds = %68, %70
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #7
  br label %99

72:                                               ; preds = %70
  %73 = landingpad { i8*, i32 }
          cleanup
  %74 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74) #7
  br label %108

75:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #7
  %76 = add nsw i64 %58, -1
  %77 = load i32*, i32** %15, align 8, !tbaa !3
  %78 = getelementptr inbounds i32, i32* %77, i64 %76
  %79 = load i32, i32* %78, align 4, !tbaa !10
  %80 = add nsw i64 %58, -2
  %81 = getelementptr inbounds i32, i32* %77, i64 %80
  %82 = load i32, i32* %81, align 4, !tbaa !10
  %83 = trunc i64 %58 to i32
  %84 = add i32 %83, 1
  %85 = lshr i32 %84, 1
  %86 = add nuw nsw i32 %85, 1
  %87 = add i32 %86, %79
  %88 = add i32 %87, %82
  store i32 %88, i32* %5, align 4, !tbaa !10
  %89 = load i32*, i32** %22, align 8, !tbaa !9
  %90 = load i32*, i32** %18, align 8, !tbaa !8
  %91 = icmp eq i32* %89, %90
  br i1 %91, label %94, label %92

92:                                               ; preds = %75
  store i32 %88, i32* %89, align 4, !tbaa !10
  %93 = getelementptr inbounds i32, i32* %89, i64 1
  store i32* %93, i32** %22, align 8, !tbaa !9
  br label %95

94:                                               ; preds = %75
  invoke void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %3, i32* %89, i32* nonnull align 4 dereferenceable(4) %5)
          to label %95 unwind label %96

95:                                               ; preds = %92, %94
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #7
  br label %99

96:                                               ; preds = %94
  %97 = landingpad { i8*, i32 }
          cleanup
  %98 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #7
  br label %108

99:                                               ; preds = %71, %95
  %100 = add nuw nsw i64 %58, 1
  %101 = icmp eq i64 %100, %31
  br i1 %101, label %50, label %57, !llvm.loop !12

102:                                              ; preds = %50, %42
  %103 = load i32*, i32** %15, align 8, !tbaa !3
  %104 = icmp eq i32* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = bitcast i32* %103 to i8*
  call void @_ZdlPv(i8* nonnull %106) #7
  br label %107

107:                                              ; preds = %102, %105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret void

108:                                              ; preds = %40, %35, %72, %96
  %109 = phi { i8*, i32 } [ %73, %72 ], [ %97, %96 ], [ %36, %35 ], [ %36, %40 ]
  %110 = load i32*, i32** %15, align 8, !tbaa !3
  %111 = icmp eq i32* %110, null
  br i1 %111, label %116, label %112

112:                                              ; preds = %108, %8
  %113 = phi i32* [ %11, %8 ], [ %110, %108 ]
  %114 = phi { i8*, i32 } [ %9, %8 ], [ %109, %108 ]
  %115 = bitcast i32* %113 to i8*
  call void @_ZdlPv(i8* nonnull %115) #7
  br label %116

116:                                              ; preds = %112, %108, %8
  %117 = phi { i8*, i32 } [ %9, %8 ], [ %109, %108 ], [ %114, %112 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  resume { i8*, i32 } %117
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #2

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, i32* %1, i32* nonnull align 4 dereferenceable(4) %2) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8, !tbaa !9
  %6 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8, !tbaa !3
  %8 = ptrtoint i32* %5 to i64
  %9 = ptrtoint i32* %7 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 2
  %12 = icmp eq i64 %10, 9223372036854775804
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #9
  unreachable

14:                                               ; preds = %3
  %15 = icmp eq i64 %10, 0
  %16 = select i1 %15, i64 1, i64 %11
  %17 = add nsw i64 %16, %11
  %18 = icmp ult i64 %17, %11
  %19 = icmp ugt i64 %17, 2305843009213693951
  %20 = or i1 %18, %19
  %21 = select i1 %20, i64 2305843009213693951, i64 %17
  %22 = ptrtoint i32* %1 to i64
  %23 = sub i64 %22, %9
  %24 = ashr exact i64 %23, 2
  %25 = icmp eq i64 %21, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %14
  %27 = icmp ugt i64 %21, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  call void @_ZSt17__throw_bad_allocv() #9
  unreachable

29:                                               ; preds = %26
  %30 = shl i64 %21, 2
  %31 = call noalias nonnull i8* @_Znwm(i64 %30) #8
  %32 = bitcast i8* %31 to i32*
  br label %33

33:                                               ; preds = %14, %29
  %34 = phi i32* [ %32, %29 ], [ null, %14 ]
  %35 = getelementptr inbounds i32, i32* %34, i64 %24
  %36 = load i32, i32* %2, align 4, !tbaa !10
  store i32 %36, i32* %35, align 4, !tbaa !10
  %37 = icmp sgt i64 %23, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = bitcast i32* %34 to i8*
  %40 = bitcast i32* %7 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 %23, i1 false) #7
  br label %41

41:                                               ; preds = %33, %38
  %42 = getelementptr inbounds i32, i32* %35, i64 1
  %43 = sub i64 %8, %22
  %44 = icmp sgt i64 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = bitcast i32* %42 to i8*
  %47 = bitcast i32* %1 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %46, i8* align 4 %47, i64 %43, i1 false) #7
  br label %48

48:                                               ; preds = %41, %45
  %49 = icmp eq i32* %7, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %48
  %51 = bitcast i32* %7 to i8*
  call void @_ZdlPv(i8* nonnull %51) #7
  br label %52

52:                                               ; preds = %48, %50
  %53 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %54 = ashr exact i64 %43, 2
  %55 = getelementptr inbounds i32, i32* %42, i64 %54
  store i32* %34, i32** %6, align 8, !tbaa !3
  store i32* %55, i32** %4, align 8, !tbaa !9
  %56 = getelementptr inbounds i32, i32* %34, i64 %21
  store i32* %56, i32** %53, align 8, !tbaa !8
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { argmemonly nofree nounwind willreturn writeonly }
attributes #7 = { nounwind }
attributes #8 = { allocsize(0) }
attributes #9 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!4, !5, i64 16}
!9 = !{!4, !5, i64 8}
!10 = !{!11, !11, i64 0}
!11 = !{!"int", !6, i64 0}
!12 = distinct !{!12, !13, !14}
!13 = !{!"llvm.loop.mustprogress"}
!14 = !{!"llvm.loop.unroll.disable"}
