; ModuleID = '../../Human_xBenchmarks_164/CPP_93/CPP_93.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_93/CPP_93.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@.str = private unnamed_addr constant [11 x i8] c"aeiouAEIOU\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z6encodeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %8 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  store %union.anon* %7, %union.anon** %8, align 8, !tbaa !3
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %10 = bitcast %union.anon* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(10) %10, i8* noundef nonnull align 1 dereferenceable(10) getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i1 false) #6
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  store i64 10, i64* %11, align 8, !tbaa !8
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 1, i64 2
  store i8 0, i8* %12, align 2, !tbaa !11
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %14 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %13, %union.anon** %14, align 8, !tbaa !3
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %16, align 8, !tbaa !8
  %17 = bitcast %union.anon* %13 to i8*
  store i8 0, i8* %17, align 8, !tbaa !11
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %20 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %22 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  %23 = bitcast i64* %3 to i8*
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  %28 = bitcast %union.anon* %21 to i8*
  %29 = bitcast %union.anon* %13 to i8*
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %31 = getelementptr %union.anon, %union.anon* %21, i64 0, i32 0
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %33 = load i64, i64* %18, align 8, !tbaa !8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %178, label %35

35:                                               ; preds = %2, %165
  %36 = phi i64 [ %166, %165 ], [ 0, %2 ]
  %37 = load i8*, i8** %19, align 8, !tbaa !12
  %38 = getelementptr inbounds i8, i8* %37, i64 %36
  %39 = load i8, i8* %38, align 1, !tbaa !11
  %40 = add i8 %39, -97
  %41 = icmp ult i8 %40, 26
  br i1 %41, label %42, label %44

42:                                               ; preds = %35
  %43 = add i8 %39, -32
  br label %49

44:                                               ; preds = %35
  %45 = add i8 %39, -65
  %46 = icmp ult i8 %45, 26
  %47 = add i8 %39, 32
  %48 = select i1 %46, i8 %47, i8 %39
  br label %49

49:                                               ; preds = %44, %42
  %50 = phi i8 [ %43, %42 ], [ %48, %44 ]
  %51 = load i8*, i8** %9, align 8, !tbaa !12
  %52 = load i64, i64* %11, align 8, !tbaa !8
  %53 = getelementptr inbounds i8, i8* %51, i64 %52
  %54 = ptrtoint i8* %53 to i64
  %55 = icmp sgt i64 %52, 3
  br i1 %55, label %56, label %79

56:                                               ; preds = %49
  %57 = ashr i64 %52, 2
  br label %58

58:                                               ; preds = %75, %56
  %59 = phi i64 [ %57, %56 ], [ %77, %75 ]
  %60 = phi i8* [ %51, %56 ], [ %76, %75 ]
  %61 = load i8, i8* %60, align 1, !tbaa !11
  %62 = icmp eq i8 %61, %50
  br i1 %62, label %105, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds i8, i8* %60, i64 1
  %65 = load i8, i8* %64, align 1, !tbaa !11
  %66 = icmp eq i8 %65, %50
  br i1 %66, label %103, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds i8, i8* %60, i64 2
  %69 = load i8, i8* %68, align 1, !tbaa !11
  %70 = icmp eq i8 %69, %50
  br i1 %70, label %101, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds i8, i8* %60, i64 3
  %73 = load i8, i8* %72, align 1, !tbaa !11
  %74 = icmp eq i8 %73, %50
  br i1 %74, label %99, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds i8, i8* %60, i64 4
  %77 = add nsw i64 %59, -1
  %78 = icmp sgt i64 %59, 1
  br i1 %78, label %58, label %79, !llvm.loop !13

79:                                               ; preds = %75, %49
  %80 = phi i8* [ %51, %49 ], [ %76, %75 ]
  %81 = ptrtoint i8* %80 to i64
  %82 = sub i64 %54, %81
  switch i64 %82, label %98 [
    i64 3, label %83
    i64 2, label %88
    i64 1, label %94
  ]

83:                                               ; preds = %79
  %84 = load i8, i8* %80, align 1, !tbaa !11
  %85 = icmp eq i8 %84, %50
  br i1 %85, label %105, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds i8, i8* %80, i64 1
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i8* [ %80, %79 ], [ %87, %86 ]
  %90 = load i8, i8* %89, align 1, !tbaa !11
  %91 = icmp eq i8 %90, %50
  br i1 %91, label %105, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds i8, i8* %89, i64 1
  br label %94

94:                                               ; preds = %92, %79
  %95 = phi i8* [ %80, %79 ], [ %93, %92 ]
  %96 = load i8, i8* %95, align 1, !tbaa !11
  %97 = icmp eq i8 %96, %50
  br i1 %97, label %105, label %98

98:                                               ; preds = %94, %79
  br label %105

99:                                               ; preds = %71
  %100 = getelementptr inbounds i8, i8* %60, i64 3
  br label %105

101:                                              ; preds = %67
  %102 = getelementptr inbounds i8, i8* %60, i64 2
  br label %105

103:                                              ; preds = %63
  %104 = getelementptr inbounds i8, i8* %60, i64 1
  br label %105

105:                                              ; preds = %58, %99, %101, %103, %98, %94, %88, %83
  %106 = phi i8* [ %53, %98 ], [ %80, %83 ], [ %89, %88 ], [ %95, %94 ], [ %100, %99 ], [ %102, %101 ], [ %104, %103 ], [ %60, %58 ]
  %107 = icmp eq i8* %106, %53
  %108 = add i8 %50, 2
  %109 = select i1 %107, i8 %50, i8 %108
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #6
  call void @llvm.experimental.noalias.scope.decl(metadata !16)
  store %union.anon* %21, %union.anon** %22, align 8, !tbaa !3, !alias.scope !16
  %110 = load i8*, i8** %15, align 8, !tbaa !12, !noalias !16
  %111 = load i64, i64* %16, align 8, !tbaa !8, !noalias !16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6, !noalias !16
  store i64 %111, i64* %3, align 8, !tbaa !19, !noalias !16
  %112 = icmp ugt i64 %111, 15
  br i1 %112, label %113, label %117

113:                                              ; preds = %105
  %114 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %115 unwind label %169

115:                                              ; preds = %113
  store i8* %114, i8** %24, align 8, !tbaa !12, !alias.scope !16
  %116 = load i64, i64* %3, align 8, !tbaa !19, !noalias !16
  store i64 %116, i64* %25, align 8, !tbaa !11, !alias.scope !16
  br label %117

117:                                              ; preds = %115, %105
  %118 = load i8*, i8** %26, align 8, !tbaa !12, !alias.scope !16
  switch i64 %111, label %121 [
    i64 1, label %119
    i64 0, label %122
  ]

119:                                              ; preds = %117
  %120 = load i8, i8* %110, align 1, !tbaa !11
  store i8 %120, i8* %118, align 1, !tbaa !11
  br label %122

121:                                              ; preds = %117
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %118, i8* align 1 %110, i64 %111, i1 false) #6
  br label %122

122:                                              ; preds = %121, %119, %117
  %123 = load i64, i64* %3, align 8, !tbaa !19, !noalias !16
  store i64 %123, i64* %27, align 8, !tbaa !8, !alias.scope !16
  %124 = load i8*, i8** %26, align 8, !tbaa !12, !alias.scope !16
  %125 = getelementptr inbounds i8, i8* %124, i64 %123
  store i8 0, i8* %125, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6, !noalias !16
  %126 = load i64, i64* %27, align 8, !tbaa !8, !alias.scope !16
  %127 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i64 %126, i64 0, i64 1, i8 signext %109)
          to label %134 unwind label %128

128:                                              ; preds = %122
  %129 = landingpad { i8*, i32 }
          cleanup
  %130 = load i8*, i8** %26, align 8, !tbaa !12, !alias.scope !16
  %131 = bitcast %union.anon* %21 to i8*
  %132 = icmp eq i8* %130, %131
  br i1 %132, label %171, label %133

133:                                              ; preds = %128
  call void @_ZdlPv(i8* %130) #6
  br label %171

134:                                              ; preds = %122
  %135 = load i8*, i8** %26, align 8, !tbaa !12
  %136 = icmp eq i8* %135, %28
  br i1 %136, label %137, label %150

137:                                              ; preds = %134
  %138 = load i64, i64* %27, align 8, !tbaa !8
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %146, label %140

140:                                              ; preds = %137
  %141 = load i8*, i8** %15, align 8, !tbaa !12
  %142 = icmp eq i64 %138, 1
  br i1 %142, label %143, label %145

143:                                              ; preds = %140
  %144 = load i8, i8* %135, align 1, !tbaa !11
  store i8 %144, i8* %141, align 1, !tbaa !11
  br label %146

145:                                              ; preds = %140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %141, i8* align 1 %135, i64 %138, i1 false) #6
  br label %146

146:                                              ; preds = %145, %143, %137
  %147 = load i64, i64* %27, align 8, !tbaa !8
  store i64 %147, i64* %16, align 8, !tbaa !8
  %148 = load i8*, i8** %15, align 8, !tbaa !12
  %149 = getelementptr inbounds i8, i8* %148, i64 %147
  store i8 0, i8* %149, align 1, !tbaa !11
  br label %160

150:                                              ; preds = %134
  %151 = load i8*, i8** %15, align 8, !tbaa !12
  %152 = icmp eq i8* %151, %29
  %153 = load i64, i64* %30, align 8
  store i8* %135, i8** %15, align 8, !tbaa !12
  %154 = load i64, i64* %27, align 8, !tbaa !8
  store i64 %154, i64* %16, align 8, !tbaa !8
  %155 = load i64, i64* %31, align 8, !tbaa !11
  store i64 %155, i64* %30, align 8, !tbaa !11
  %156 = icmp eq i8* %151, null
  %157 = or i1 %152, %156
  br i1 %157, label %159, label %158

158:                                              ; preds = %150
  store i8* %151, i8** %26, align 8, !tbaa !12
  store i64 %153, i64* %32, align 8, !tbaa !11
  br label %160

159:                                              ; preds = %150
  store %union.anon* %21, %union.anon** %22, align 8, !tbaa !12
  br label %160

160:                                              ; preds = %146, %158, %159
  store i64 0, i64* %27, align 8, !tbaa !8
  %161 = load i8*, i8** %26, align 8, !tbaa !12
  store i8 0, i8* %161, align 1, !tbaa !11
  %162 = load i8*, i8** %26, align 8, !tbaa !12
  %163 = icmp eq i8* %162, %28
  br i1 %163, label %165, label %164

164:                                              ; preds = %160
  call void @_ZdlPv(i8* %162) #6
  br label %165

165:                                              ; preds = %160, %164
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #6
  %166 = add nuw i64 %36, 1
  %167 = load i64, i64* %18, align 8, !tbaa !8
  %168 = icmp ugt i64 %167, %166
  br i1 %168, label %35, label %178, !llvm.loop !20

169:                                              ; preds = %113
  %170 = landingpad { i8*, i32 }
          cleanup
  br label %171

171:                                              ; preds = %128, %133, %169
  %172 = phi { i8*, i32 } [ %170, %169 ], [ %129, %133 ], [ %129, %128 ]
  %173 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %173) #6
  %174 = load i8*, i8** %15, align 8, !tbaa !12
  %175 = bitcast %union.anon* %13 to i8*
  %176 = icmp eq i8* %174, %175
  br i1 %176, label %184, label %177

177:                                              ; preds = %171
  call void @_ZdlPv(i8* %174) #6
  br label %184

178:                                              ; preds = %165, %2
  %179 = load i8*, i8** %9, align 8, !tbaa !12
  %180 = bitcast %union.anon* %7 to i8*
  %181 = icmp eq i8* %179, %180
  br i1 %181, label %183, label %182

182:                                              ; preds = %178
  call void @_ZdlPv(i8* %179) #6
  br label %183

183:                                              ; preds = %178, %182
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6
  ret void

184:                                              ; preds = %177, %171
  %185 = load i8*, i8** %9, align 8, !tbaa !12
  %186 = bitcast %union.anon* %7 to i8*
  %187 = icmp eq i8* %185, %186
  br i1 %187, label %189, label %188

188:                                              ; preds = %184
  call void @_ZdlPv(i8* %185) #6
  br label %189

189:                                              ; preds = %188, %184
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6
  resume { i8*, i32 } %172
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #3

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #5

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = distinct !{!13, !14, !15}
!14 = !{!"llvm.loop.mustprogress"}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!18 = distinct !{!18, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!19 = !{!10, !10, i64 0}
!20 = distinct !{!20, !14, !15}
