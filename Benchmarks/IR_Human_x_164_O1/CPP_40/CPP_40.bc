; ModuleID = '../../Human_xBenchmarks_164/CPP_40/CPP_40.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_40/CPP_40.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local zeroext i1 @_Z19triples_sum_to_zeroSt6vectorIiSaIiEE(%"class.std::vector"* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32*, i32** %2, align 8, !tbaa !3
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8, !tbaa !8
  %6 = ptrtoint i32* %3 to i64
  %7 = ptrtoint i32* %5 to i64
  %8 = sub i64 %6, %7
  %9 = ashr exact i64 %8, 2
  br label %10

10:                                               ; preds = %48, %1
  %11 = phi i64 [ %16, %48 ], [ 0, %1 ]
  %12 = phi i64 [ %52, %48 ], [ 1, %1 ]
  %13 = phi i32 [ %51, %48 ], [ 2, %1 ]
  %14 = icmp eq i64 %11, %9
  br i1 %14, label %53, label %15

15:                                               ; preds = %10
  %16 = add nuw i64 %11, 1
  %17 = getelementptr inbounds i32, i32* %5, i64 %11
  br label %18

18:                                               ; preds = %44, %15
  %19 = phi i64 [ %24, %44 ], [ %12, %15 ]
  %20 = phi i32 [ %47, %44 ], [ %13, %15 ]
  %21 = zext i32 %20 to i64
  %22 = icmp eq i64 %19, %9
  br i1 %22, label %48, label %23

23:                                               ; preds = %18
  %24 = add i64 %19, 1
  %25 = icmp ugt i64 %9, %24
  br i1 %25, label %26, label %44

26:                                               ; preds = %23
  %27 = getelementptr inbounds i32, i32* %5, i64 %19
  %28 = load i32, i32* %17, align 4, !tbaa !9
  %29 = load i32, i32* %27, align 4, !tbaa !9
  %30 = add nsw i32 %29, %28
  %31 = getelementptr inbounds i32, i32* %5, i64 %21
  %32 = load i32, i32* %31, align 4, !tbaa !9
  %33 = sub i32 0, %32
  %34 = icmp eq i32 %30, %33
  br i1 %34, label %44, label %35

35:                                               ; preds = %26, %39
  %36 = phi i64 [ %37, %39 ], [ %21, %26 ]
  %37 = add nuw i64 %36, 1
  %38 = icmp ugt i64 %9, %37
  br i1 %38, label %39, label %44, !llvm.loop !11

39:                                               ; preds = %35
  %40 = getelementptr inbounds i32, i32* %5, i64 %37
  %41 = load i32, i32* %40, align 4, !tbaa !9
  %42 = sub i32 0, %41
  %43 = icmp eq i32 %30, %42
  br i1 %43, label %44, label %35, !llvm.loop !11

44:                                               ; preds = %39, %35, %26, %23
  %45 = phi i1 [ %25, %23 ], [ %25, %26 ], [ %38, %35 ], [ %38, %39 ]
  %46 = phi i32 [ 8, %23 ], [ 1, %26 ], [ 8, %35 ], [ 1, %39 ]
  %47 = add i32 %20, 1
  br i1 %45, label %48, label %18, !llvm.loop !14

48:                                               ; preds = %18, %44
  %49 = phi i32 [ %46, %44 ], [ 5, %18 ]
  %50 = icmp eq i32 %49, 5
  %51 = add i32 %13, 1
  %52 = add nuw i64 %12, 1
  br i1 %50, label %10, label %53, !llvm.loop !15

53:                                               ; preds = %10, %48
  %54 = phi i32 [ %49, %48 ], [ 2, %10 ]
  %55 = icmp ne i32 %54, 2
  ret i1 %55
}

attributes #0 = { mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 8}
!4 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!4, !5, i64 0}
!9 = !{!10, !10, i64 0}
!10 = !{!"int", !6, i64 0}
!11 = distinct !{!11, !12, !13}
!12 = !{!"llvm.loop.mustprogress"}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !12, !13}
!15 = distinct !{!15, !12, !13}
