digraph "CFG for '_Z19triples_sum_to_zeroSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z19triples_sum_to_zeroSt6vectorIiSaIiEE' function";

	Node0x5640a4c8b4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%1:\l  %2 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %3 = load i32*, i32** %2, align 8, !tbaa !3\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = load i32*, i32** %4, align 8, !tbaa !8\l  %6 = ptrtoint i32* %3 to i64\l  %7 = ptrtoint i32* %5 to i64\l  %8 = sub i64 %6, %7\l  %9 = ashr exact i64 %8, 2\l  br label %10\l}"];
	Node0x5640a4c8b4b0 -> Node0x5640a4c8c950;
	Node0x5640a4c8c950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%10:\l10:                                               \l  %11 = phi i64 [ %16, %48 ], [ 0, %1 ]\l  %12 = phi i64 [ %52, %48 ], [ 1, %1 ]\l  %13 = phi i32 [ %51, %48 ], [ 2, %1 ]\l  %14 = icmp eq i64 %11, %9\l  br i1 %14, label %53, label %15\l|{<s0>T|<s1>F}}"];
	Node0x5640a4c8c950:s0 -> Node0x5640a4c8d2f0;
	Node0x5640a4c8c950:s1 -> Node0x5640a4c8d380;
	Node0x5640a4c8d380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%15:\l15:                                               \l  %16 = add nuw i64 %11, 1\l  %17 = getelementptr inbounds i32, i32* %5, i64 %11\l  br label %18\l}"];
	Node0x5640a4c8d380 -> Node0x5640a4c8d5f0;
	Node0x5640a4c8d5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%18:\l18:                                               \l  %19 = phi i64 [ %24, %44 ], [ %12, %15 ]\l  %20 = phi i32 [ %47, %44 ], [ %13, %15 ]\l  %21 = zext i32 %20 to i64\l  %22 = icmp eq i64 %19, %9\l  br i1 %22, label %48, label %23\l|{<s0>T|<s1>F}}"];
	Node0x5640a4c8d5f0:s0 -> Node0x5640a4c8ce80;
	Node0x5640a4c8d5f0:s1 -> Node0x5640a4c8d940;
	Node0x5640a4c8d940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%23:\l23:                                               \l  %24 = add i64 %19, 1\l  %25 = icmp ugt i64 %9, %24\l  br i1 %25, label %26, label %44\l|{<s0>T|<s1>F}}"];
	Node0x5640a4c8d940:s0 -> Node0x5640a4c8dba0;
	Node0x5640a4c8d940:s1 -> Node0x5640a4c8d6b0;
	Node0x5640a4c8dba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%26:\l26:                                               \l  %27 = getelementptr inbounds i32, i32* %5, i64 %19\l  %28 = load i32, i32* %17, align 4, !tbaa !9\l  %29 = load i32, i32* %27, align 4, !tbaa !9\l  %30 = add nsw i32 %29, %28\l  %31 = getelementptr inbounds i32, i32* %5, i64 %21\l  %32 = load i32, i32* %31, align 4, !tbaa !9\l  %33 = sub i32 0, %32\l  %34 = icmp eq i32 %30, %33\l  br i1 %34, label %44, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5640a4c8dba0:s0 -> Node0x5640a4c8d6b0;
	Node0x5640a4c8dba0:s1 -> Node0x5640a4c8e9a0;
	Node0x5640a4c8e9a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i64 [ %37, %39 ], [ %21, %26 ]\l  %37 = add nuw i64 %36, 1\l  %38 = icmp ugt i64 %9, %37\l  br i1 %38, label %39, label %44, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5640a4c8e9a0:s0 -> Node0x5640a4c8eae0;
	Node0x5640a4c8e9a0:s1 -> Node0x5640a4c8d6b0;
	Node0x5640a4c8eae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = getelementptr inbounds i32, i32* %5, i64 %37\l  %41 = load i32, i32* %40, align 4, !tbaa !9\l  %42 = sub i32 0, %41\l  %43 = icmp eq i32 %30, %42\l  br i1 %43, label %44, label %35, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5640a4c8eae0:s0 -> Node0x5640a4c8d6b0;
	Node0x5640a4c8eae0:s1 -> Node0x5640a4c8e9a0;
	Node0x5640a4c8d6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%44:\l44:                                               \l  %45 = phi i1 [ %25, %23 ], [ %25, %26 ], [ %38, %35 ], [ %38, %39 ]\l  %46 = phi i32 [ 8, %23 ], [ 1, %26 ], [ 8, %35 ], [ 1, %39 ]\l  %47 = add i32 %20, 1\l  br i1 %45, label %48, label %18, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5640a4c8d6b0:s0 -> Node0x5640a4c8ce80;
	Node0x5640a4c8d6b0:s1 -> Node0x5640a4c8d5f0;
	Node0x5640a4c8ce80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%48:\l48:                                               \l  %49 = phi i32 [ %46, %44 ], [ 5, %18 ]\l  %50 = icmp eq i32 %49, 5\l  %51 = add i32 %13, 1\l  %52 = add nuw i64 %12, 1\l  br i1 %50, label %10, label %53, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5640a4c8ce80:s0 -> Node0x5640a4c8c950;
	Node0x5640a4c8ce80:s1 -> Node0x5640a4c8d2f0;
	Node0x5640a4c8d2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%53:\l53:                                               \l  %54 = phi i32 [ %49, %48 ], [ 2, %10 ]\l  %55 = icmp ne i32 %54, 2\l  ret i1 %55\l}"];
}
