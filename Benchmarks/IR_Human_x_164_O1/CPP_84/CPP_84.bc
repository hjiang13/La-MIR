; ModuleID = '../../Human_xBenchmarks_164/CPP_84/CPP_84.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_84/CPP_84.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z = comdat any

@.str.1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z5solveB5cxx11i(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %9 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  store %union.anon* %8, %union.anon** %9, align 8, !tbaa !3
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  store i64 0, i64* %10, align 8, !tbaa !8
  %11 = bitcast %union.anon* %8 to i8*
  store i8 0, i8* %11, align 8, !tbaa !11
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %15, align 8, !tbaa !8
  %16 = bitcast %union.anon* %12 to i8*
  store i8 0, i8* %16, align 8, !tbaa !11
  %17 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #8
  invoke void (%"class.std::__cxx11::basic_string"*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i64, i8*, ...) @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %4, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* nonnull @vsnprintf, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32 %1)
          to label %18 unwind label %84

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8, !tbaa !12
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %23 = bitcast %union.anon* %22 to i8*
  %24 = icmp eq i8* %21, %23
  br i1 %24, label %25, label %39

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %27 = load i64, i64* %26, align 8, !tbaa !8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = load i8*, i8** %19, align 8, !tbaa !12
  %31 = icmp eq i64 %27, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = load i8, i8* %21, align 1, !tbaa !11
  store i8 %33, i8* %30, align 1, !tbaa !11
  br label %35

34:                                               ; preds = %29
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %21, i64 %27, i1 false) #8
  br label %35

35:                                               ; preds = %34, %32, %25
  %36 = load i64, i64* %26, align 8, !tbaa !8
  store i64 %36, i64* %10, align 8, !tbaa !8
  %37 = load i8*, i8** %19, align 8, !tbaa !12
  %38 = getelementptr inbounds i8, i8* %37, i64 %36
  store i8 0, i8* %38, align 1, !tbaa !11
  br label %54

39:                                               ; preds = %18
  %40 = load i8*, i8** %19, align 8, !tbaa !12
  %41 = icmp eq i8* %40, %11
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2, i32 0
  %43 = load i64, i64* %42, align 8
  store i8* %21, i8** %19, align 8, !tbaa !12
  %44 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %45 = load i64, i64* %44, align 8, !tbaa !8
  store i64 %45, i64* %10, align 8, !tbaa !8
  %46 = getelementptr %union.anon, %union.anon* %22, i64 0, i32 0
  %47 = load i64, i64* %46, align 8, !tbaa !11
  store i64 %47, i64* %42, align 8, !tbaa !11
  %48 = icmp eq i8* %40, null
  %49 = or i1 %41, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %39
  store i8* %40, i8** %20, align 8, !tbaa !12
  %51 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  store i64 %43, i64* %51, align 8, !tbaa !11
  br label %54

52:                                               ; preds = %39
  %53 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  store %union.anon* %22, %union.anon** %53, align 8, !tbaa !12
  br label %54

54:                                               ; preds = %35, %50, %52
  %55 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  store i64 0, i64* %55, align 8, !tbaa !8
  %56 = load i8*, i8** %20, align 8, !tbaa !12
  store i8 0, i8* %56, align 1, !tbaa !11
  %57 = load i8*, i8** %20, align 8, !tbaa !12
  %58 = icmp eq i8* %57, %23
  br i1 %58, label %60, label %59

59:                                               ; preds = %54
  call void @_ZdlPv(i8* %57) #8
  br label %60

60:                                               ; preds = %54, %59
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #8
  %61 = load i64, i64* %10, align 8, !tbaa !8
  %62 = load i8*, i8** %19, align 8
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %64, label %86

64:                                               ; preds = %86, %60
  %65 = phi i32 [ 0, %60 ], [ %93, %86 ]
  %66 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %67 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  %68 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %69 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  %70 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %72 = bitcast %union.anon* %68 to i8*
  %73 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  %74 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %75 = bitcast %union.anon* %68 to i8*
  %76 = bitcast %union.anon* %12 to i8*
  %77 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %78 = getelementptr %union.anon, %union.anon* %68, i64 0, i32 0
  %79 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %80 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %82 = bitcast %union.anon* %81 to i8*
  %83 = icmp sgt i32 %65, 0
  br i1 %83, label %96, label %168

84:                                               ; preds = %2
  %85 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #8
  br label %173

86:                                               ; preds = %60, %86
  %87 = phi i64 [ %94, %86 ], [ 0, %60 ]
  %88 = phi i32 [ %93, %86 ], [ 0, %60 ]
  %89 = getelementptr inbounds i8, i8* %62, i64 %87
  %90 = load i8, i8* %89, align 1, !tbaa !11
  %91 = sext i8 %90 to i32
  %92 = add i32 %88, -48
  %93 = add i32 %92, %91
  %94 = add nuw nsw i64 %87, 1
  %95 = icmp eq i64 %94, %61
  br i1 %95, label %64, label %86, !llvm.loop !13

96:                                               ; preds = %64, %152
  %97 = phi i32 [ %99, %152 ], [ %65, %64 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %66) #8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #8
  %98 = srem i32 %97, 2
  %99 = sdiv i32 %97, 2
  invoke void (%"class.std::__cxx11::basic_string"*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i64, i8*, ...) @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %6, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* nonnull @vsnprintf, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32 %98)
          to label %100 unwind label %154

100:                                              ; preds = %96
  call void @llvm.experimental.noalias.scope.decl(metadata !16)
  %101 = load i8*, i8** %14, align 8, !tbaa !12, !noalias !16
  %102 = load i64, i64* %15, align 8, !tbaa !8, !noalias !16
  %103 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i8* %101, i64 %102)
          to label %104 unwind label %156

104:                                              ; preds = %100
  store %union.anon* %68, %union.anon** %69, align 8, !tbaa !3, !alias.scope !16
  %105 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %103, i64 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8, !tbaa !12
  %107 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %103, i64 0, i32 2
  %108 = bitcast %union.anon* %107 to i8*
  %109 = icmp eq i8* %106, %108
  br i1 %109, label %110, label %111

110:                                              ; preds = %104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %72, i8* noundef nonnull align 8 dereferenceable(16) %108, i64 16, i1 false) #8
  br label %114

111:                                              ; preds = %104
  store i8* %106, i8** %70, align 8, !tbaa !12, !alias.scope !16
  %112 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %103, i64 0, i32 2, i32 0
  %113 = load i64, i64* %112, align 8, !tbaa !11
  store i64 %113, i64* %71, align 8, !tbaa !11, !alias.scope !16
  br label %114

114:                                              ; preds = %110, %111
  %115 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %103, i64 0, i32 1
  %116 = load i64, i64* %115, align 8, !tbaa !8
  store i64 %116, i64* %73, align 8, !tbaa !8, !alias.scope !16
  %117 = bitcast %"class.std::__cxx11::basic_string"* %103 to %union.anon**
  store %union.anon* %107, %union.anon** %117, align 8, !tbaa !12
  store i64 0, i64* %115, align 8, !tbaa !8
  store i8 0, i8* %108, align 8, !tbaa !11
  %118 = load i8*, i8** %74, align 8, !tbaa !12
  %119 = icmp eq i8* %118, %75
  br i1 %119, label %120, label %133

120:                                              ; preds = %114
  %121 = load i64, i64* %73, align 8, !tbaa !8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %129, label %123

123:                                              ; preds = %120
  %124 = load i8*, i8** %14, align 8, !tbaa !12
  %125 = icmp eq i64 %121, 1
  br i1 %125, label %126, label %128

126:                                              ; preds = %123
  %127 = load i8, i8* %118, align 1, !tbaa !11
  store i8 %127, i8* %124, align 1, !tbaa !11
  br label %129

128:                                              ; preds = %123
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %124, i8* align 1 %118, i64 %121, i1 false) #8
  br label %129

129:                                              ; preds = %128, %126, %120
  %130 = load i64, i64* %73, align 8, !tbaa !8
  store i64 %130, i64* %15, align 8, !tbaa !8
  %131 = load i8*, i8** %14, align 8, !tbaa !12
  %132 = getelementptr inbounds i8, i8* %131, i64 %130
  store i8 0, i8* %132, align 1, !tbaa !11
  br label %143

133:                                              ; preds = %114
  %134 = load i8*, i8** %14, align 8, !tbaa !12
  %135 = icmp eq i8* %134, %76
  %136 = load i64, i64* %77, align 8
  store i8* %118, i8** %14, align 8, !tbaa !12
  %137 = load i64, i64* %73, align 8, !tbaa !8
  store i64 %137, i64* %15, align 8, !tbaa !8
  %138 = load i64, i64* %78, align 8, !tbaa !11
  store i64 %138, i64* %77, align 8, !tbaa !11
  %139 = icmp eq i8* %134, null
  %140 = or i1 %135, %139
  br i1 %140, label %142, label %141

141:                                              ; preds = %133
  store i8* %134, i8** %74, align 8, !tbaa !12
  store i64 %136, i64* %79, align 8, !tbaa !11
  br label %143

142:                                              ; preds = %133
  store %union.anon* %68, %union.anon** %69, align 8, !tbaa !12
  br label %143

143:                                              ; preds = %129, %141, %142
  store i64 0, i64* %73, align 8, !tbaa !8
  %144 = load i8*, i8** %74, align 8, !tbaa !12
  store i8 0, i8* %144, align 1, !tbaa !11
  %145 = load i8*, i8** %74, align 8, !tbaa !12
  %146 = icmp eq i8* %145, %75
  br i1 %146, label %148, label %147

147:                                              ; preds = %143
  call void @_ZdlPv(i8* %145) #8
  br label %148

148:                                              ; preds = %143, %147
  %149 = load i8*, i8** %80, align 8, !tbaa !12
  %150 = icmp eq i8* %149, %82
  br i1 %150, label %152, label %151

151:                                              ; preds = %148
  call void @_ZdlPv(i8* %149) #8
  br label %152

152:                                              ; preds = %148, %151
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %66) #8
  %153 = icmp sgt i32 %97, 1
  br i1 %153, label %96, label %168, !llvm.loop !19

154:                                              ; preds = %96
  %155 = landingpad { i8*, i32 }
          cleanup
  br label %164

156:                                              ; preds = %100
  %157 = landingpad { i8*, i32 }
          cleanup
  %158 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8, !tbaa !12
  %160 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %161 = bitcast %union.anon* %160 to i8*
  %162 = icmp eq i8* %159, %161
  br i1 %162, label %164, label %163

163:                                              ; preds = %156
  call void @_ZdlPv(i8* %159) #8
  br label %164

164:                                              ; preds = %163, %156, %154
  %165 = phi { i8*, i32 } [ %155, %154 ], [ %157, %156 ], [ %157, %163 ]
  %166 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  %167 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %166) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %167) #8
  br label %173

168:                                              ; preds = %152, %64
  %169 = load i8*, i8** %19, align 8, !tbaa !12
  %170 = icmp eq i8* %169, %11
  br i1 %170, label %172, label %171

171:                                              ; preds = %168
  call void @_ZdlPv(i8* %169) #8
  br label %172

172:                                              ; preds = %168, %171
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #8
  ret void

173:                                              ; preds = %164, %84
  %174 = phi { i8*, i32 } [ %165, %164 ], [ %85, %84 ]
  %175 = load i8*, i8** %14, align 8, !tbaa !12
  %176 = bitcast %union.anon* %12 to i8*
  %177 = icmp eq i8* %175, %176
  br i1 %177, label %179, label %178

178:                                              ; preds = %173
  call void @_ZdlPv(i8* %175) #8
  br label %179

179:                                              ; preds = %178, %173
  %180 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %181 = load i8*, i8** %180, align 8, !tbaa !12
  %182 = icmp eq i8* %181, %11
  br i1 %182, label %184, label %183

183:                                              ; preds = %179
  call void @_ZdlPv(i8* %181) #8
  br label %184

184:                                              ; preds = %179, %183
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #8
  resume { i8*, i32 } %174
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* %1, i64 %2, i8* %3, ...) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca i64, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = alloca i8, i64 %2, align 16
  %8 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %8)
  %10 = call i32 %1(i8* nonnull %7, i64 %2, i8* %3, %struct.__va_list_tag* nonnull %9)
  call void @llvm.va_end(i8* %8)
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3
  %14 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  store i64 %11, i64* %5, align 8, !tbaa !20
  %15 = icmp ugt i32 %10, 15
  br i1 %15, label %16, label %21

16:                                               ; preds = %4
  %17 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8, !tbaa !12
  %19 = load i64, i64* %5, align 8, !tbaa !20
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %19, i64* %20, align 8, !tbaa !11
  br label %21

21:                                               ; preds = %16, %4
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8, !tbaa !12
  switch i64 %11, label %26 [
    i64 1, label %24
    i64 0, label %27
  ]

24:                                               ; preds = %21
  %25 = load i8, i8* %7, align 16, !tbaa !11
  store i8 %25, i8* %23, align 1, !tbaa !11
  br label %27

26:                                               ; preds = %21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* nonnull align 16 %7, i64 %11, i1 false) #8
  br label %27

27:                                               ; preds = %21, %24, %26
  %28 = load i64, i64* %5, align 8, !tbaa !20
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %28, i64* %29, align 8, !tbaa !8
  %30 = load i8*, i8** %22, align 8, !tbaa !12
  %31 = getelementptr inbounds i8, i8* %30, i64 %28
  store i8 0, i8* %31, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @vsnprintf(i8* nocapture noundef, i64 noundef, i8* nocapture noundef readonly, %struct.__va_list_tag* noundef) #2

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #3

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #3

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #6

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #4

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #7

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nofree nosync nounwind willreturn }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #6 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = distinct !{!13, !14, !15}
!14 = !{!"llvm.loop.mustprogress"}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_: argument 0"}
!18 = distinct !{!18, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_"}
!19 = distinct !{!19, !14, !15}
!20 = !{!10, !10, i64 0}
