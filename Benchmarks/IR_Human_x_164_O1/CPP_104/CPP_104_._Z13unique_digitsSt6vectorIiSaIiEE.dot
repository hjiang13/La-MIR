digraph "CFG for '_Z13unique_digitsSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z13unique_digitsSt6vectorIiSaIiEE' function";

	Node0x56439ef805f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %6 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %7 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %7, i8 0, i64 24, i1 false)\l  %8 = load i32*, i32** %3, align 8, !tbaa !3\l  %9 = load i32*, i32** %4, align 8, !tbaa !8\l  %10 = icmp eq i32* %8, %9\l  br i1 %10, label %11, label %26\l|{<s0>T|<s1>F}}"];
	Node0x56439ef805f0:s0 -> Node0x56439ef80f60;
	Node0x56439ef805f0:s1 -> Node0x56439ef823b0;
	Node0x56439ef80f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%11:\l11:                                               \l  %12 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %13 = load i32*, i32** %12, align 8, !tbaa !9\l  %14 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %15 = load i32*, i32** %14, align 8, !tbaa !9\l  %16 = icmp eq i32* %13, %15\l  br i1 %16, label %68, label %17\l|{<s0>T|<s1>F}}"];
	Node0x56439ef80f60:s0 -> Node0x56439ef82f90;
	Node0x56439ef80f60:s1 -> Node0x56439ef83020;
	Node0x56439ef83020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%17:\l17:                                               \l  %18 = ptrtoint i32* %15 to i64\l  %19 = ptrtoint i32* %13 to i64\l  %20 = sub i64 %18, %19\l  %21 = ashr exact i64 %20, 2\l  %22 = call i64 @llvm.ctlz.i64(i64 %21, i1 true) #7, !range !10\l  %23 = shl nuw nsw i64 %22, 1\l  %24 = xor i64 %23, 126\l  invoke void\l... @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElN\l...S0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i32* %13, i32* %15, i64 %24)\l          to label %25 unwind label %66\l}"];
	Node0x56439ef83020 -> Node0x56439ef83850;
	Node0x56439ef83020 -> Node0x56439ef838e0;
	Node0x56439ef83850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%25:\l25:                                               \l  invoke void\l... @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIi\l...EEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* %13, i32* %15)\l          to label %68 unwind label %66\l}"];
	Node0x56439ef83850 -> Node0x56439ef82f90;
	Node0x56439ef83850 -> Node0x56439ef838e0;
	Node0x56439ef823b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%26:\l26:                                               \l  %27 = phi i64 [ %58, %57 ], [ 0, %2 ]\l  %28 = phi i32* [ %60, %57 ], [ %9, %2 ]\l  %29 = getelementptr inbounds i32, i32* %28, i64 %27\l  %30 = load i32, i32* %29, align 4, !tbaa !11\l  %31 = icmp ne i32 %30, 0\l  %32 = icmp sgt i32 %30, 0\l  br i1 %32, label %33, label %46\l|{<s0>T|<s1>F}}"];
	Node0x56439ef823b0:s0 -> Node0x56439ef846a0;
	Node0x56439ef823b0:s1 -> Node0x56439ef84730;
	Node0x56439ef846a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%33:\l33:                                               \l  %34 = zext i1 %31 to i8\l  br label %35\l}"];
	Node0x56439ef846a0 -> Node0x56439ef848e0;
	Node0x56439ef848e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i8 [ %40, %35 ], [ %34, %33 ]\l  %37 = phi i32 [ %41, %35 ], [ %30, %33 ]\l  %38 = and i32 %37, 1\l  %39 = icmp eq i32 %38, 0\l  %40 = select i1 %39, i8 0, i8 %36\l  %41 = sdiv i32 %37, 10\l  %42 = icmp sgt i32 %37, 9\l  %43 = and i8 %40, 1\l  %44 = icmp ne i8 %43, 0\l  %45 = select i1 %42, i1 %44, i1 false\l  br i1 %45, label %35, label %46, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x56439ef848e0:s0 -> Node0x56439ef848e0;
	Node0x56439ef848e0:s1 -> Node0x56439ef84730;
	Node0x56439ef84730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%46:\l46:                                               \l  %47 = phi i1 [ %31, %26 ], [ %44, %35 ]\l  br i1 %47, label %48, label %57\l|{<s0>T|<s1>F}}"];
	Node0x56439ef84730:s0 -> Node0x56439ef85270;
	Node0x56439ef84730:s1 -> Node0x56439ef83fc0;
	Node0x56439ef85270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%48:\l48:                                               \l  %49 = load i32*, i32** %5, align 8, !tbaa !3\l  %50 = load i32*, i32** %6, align 8, !tbaa !16\l  %51 = icmp eq i32* %49, %50\l  br i1 %51, label %54, label %52\l|{<s0>T|<s1>F}}"];
	Node0x56439ef85270:s0 -> Node0x56439ef85bd0;
	Node0x56439ef85270:s1 -> Node0x56439ef85c60;
	Node0x56439ef85c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%52:\l52:                                               \l  store i32 %30, i32* %49, align 4, !tbaa !11\l  %53 = getelementptr inbounds i32, i32* %49, i64 1\l  store i32* %53, i32** %5, align 8, !tbaa !3\l  br label %57\l}"];
	Node0x56439ef85c60 -> Node0x56439ef83fc0;
	Node0x56439ef85bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%54:\l54:                                               \l  invoke void\l... @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iterato\l...rIPiS1_EEDpOT_(%\"class.std::vector\"* nonnull align 8 dereferenceable(24) %0,\l... i32* %49, i32* nonnull align 4 dereferenceable(4) %29)\l          to label %57 unwind label %55\l}"];
	Node0x56439ef85bd0 -> Node0x56439ef83fc0;
	Node0x56439ef85bd0 -> Node0x56439ef866f0;
	Node0x56439ef866f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%55:\l55:                                               \l  %56 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %69\l}"];
	Node0x56439ef866f0 -> Node0x56439ef86ce0;
	Node0x56439ef83fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%57:\l57:                                               \l  %58 = add nuw i64 %27, 1\l  %59 = load i32*, i32** %3, align 8, !tbaa !3\l  %60 = load i32*, i32** %4, align 8, !tbaa !8\l  %61 = ptrtoint i32* %59 to i64\l  %62 = ptrtoint i32* %60 to i64\l  %63 = sub i64 %61, %62\l  %64 = ashr exact i64 %63, 2\l  %65 = icmp ugt i64 %64, %58\l  br i1 %65, label %26, label %11, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x56439ef83fc0:s0 -> Node0x56439ef823b0;
	Node0x56439ef83fc0:s1 -> Node0x56439ef80f60;
	Node0x56439ef838e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%66:\l66:                                               \l  %67 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %69\l}"];
	Node0x56439ef838e0 -> Node0x56439ef86ce0;
	Node0x56439ef82f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%68:\l68:                                               \l  ret void\l}"];
	Node0x56439ef86ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%69:\l69:                                               \l  %70 = phi \{ i8*, i32 \} [ %56, %55 ], [ %67, %66 ]\l  %71 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %72 = load i32*, i32** %71, align 8, !tbaa !8\l  %73 = icmp eq i32* %72, null\l  br i1 %73, label %76, label %74\l|{<s0>T|<s1>F}}"];
	Node0x56439ef86ce0:s0 -> Node0x56439ef880a0;
	Node0x56439ef86ce0:s1 -> Node0x56439ef880f0;
	Node0x56439ef880f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%74:\l74:                                               \l  %75 = bitcast i32* %72 to i8*\l  call void @_ZdlPv(i8* nonnull %75) #7\l  br label %76\l}"];
	Node0x56439ef880f0 -> Node0x56439ef880a0;
	Node0x56439ef880a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%76:\l76:                                               \l  resume \{ i8*, i32 \} %70\l}"];
}
