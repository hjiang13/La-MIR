digraph "CFG for '_ZNSt8_Rb_treeIcSt4pairIKciESt10_Select1stIS2_ESt4lessIcESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_' function" {
	label="CFG for '_ZNSt8_Rb_treeIcSt4pairIKciESt10_Select1stIS2_ESt4lessIcESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_' function";

	Node0x561bf09f4f90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = call noalias nonnull i8* @_Znwm(i64 40) #10\l  %7 = getelementptr inbounds %\"class.std::tuple\", %\"class.std::tuple\"* %3,\l... i64 0, i32 0, i32 0, i32 0\l  %8 = load i8*, i8** %7, align 8, !tbaa !3\l  %9 = getelementptr inbounds i8, i8* %6, i64 32\l  %10 = load i8, i8* %8, align 1, !tbaa !8\l  store i8 %10, i8* %9, align 4, !tbaa !9\l  %11 = getelementptr inbounds i8, i8* %6, i64 36\l  %12 = bitcast i8* %11 to i32*\l  store i32 0, i32* %12, align 4, !tbaa !12\l  %13 = getelementptr inbounds i8, i8* %6, i64 32\l  %14 = invoke \{ %\"struct.std::_Rb_tree_node_base\"*,\l... %\"struct.std::_Rb_tree_node_base\"* \}\l... @_ZNSt8_Rb_treeIcSt4pairIKciESt10_Select1stIS2_ESt4lessIcESaIS2_EE29_M_get_ins\l...ert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%\"class.std::_Rb_tree\"\l...* nonnull align 8 dereferenceable(48) %0, %\"struct.std::_Rb_tree_node_base\"*\l... %1, i8* nonnull align 1 dereferenceable(1) %13)\l          to label %15 unwind label %42\l}"];
	Node0x561bf09f4f90 -> Node0x561bf09f4bf0;
	Node0x561bf09f4f90 -> Node0x561bf09f64b0;
	Node0x561bf09f4bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l15:                                               \l  %16 = extractvalue \{ %\"struct.std::_Rb_tree_node_base\"*,\l... %\"struct.std::_Rb_tree_node_base\"* \} %14, 0\l  %17 = extractvalue \{ %\"struct.std::_Rb_tree_node_base\"*,\l... %\"struct.std::_Rb_tree_node_base\"* \} %14, 1\l  %18 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %17, null\l  br i1 %18, label %46, label %19\l|{<s0>T|<s1>F}}"];
	Node0x561bf09f4bf0:s0 -> Node0x561bf09f78e0;
	Node0x561bf09f4bf0:s1 -> Node0x561bf09f7930;
	Node0x561bf09f7930 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%19:\l19:                                               \l  %20 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %16, null\l  br i1 %20, label %21, label %32\l|{<s0>T|<s1>F}}"];
	Node0x561bf09f7930:s0 -> Node0x561bf09f7b00;
	Node0x561bf09f7930:s1 -> Node0x561bf09f7b50;
	Node0x561bf09f7b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%21:\l21:                                               \l  %22 = getelementptr inbounds %\"class.std::_Rb_tree\", %\"class.std::_Rb_tree\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 0\l  %23 = getelementptr inbounds i8, i8* %22, i64 8\l  %24 = bitcast i8* %23 to %\"struct.std::_Rb_tree_node_base\"*\l  %25 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %17, %24\l  br i1 %25, label %32, label %26\l|{<s0>T|<s1>F}}"];
	Node0x561bf09f7b00:s0 -> Node0x561bf09f7b50;
	Node0x561bf09f7b00:s1 -> Node0x561bf09f7f50;
	Node0x561bf09f7f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%26:\l26:                                               \l  %27 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\",\l... %\"struct.std::_Rb_tree_node_base\"* %17, i64 1\l  %28 = bitcast %\"struct.std::_Rb_tree_node_base\"* %27 to i8*\l  %29 = load i8, i8* %13, align 1, !tbaa !8\l  %30 = load i8, i8* %28, align 1, !tbaa !8\l  %31 = icmp slt i8 %29, %30\l  br label %32\l}"];
	Node0x561bf09f7f50 -> Node0x561bf09f7b50;
	Node0x561bf09f7b50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%32:\l32:                                               \l  %33 = phi i1 [ true, %21 ], [ true, %19 ], [ %31, %26 ]\l  %34 = bitcast i8* %6 to %\"struct.std::_Rb_tree_node_base\"*\l  %35 = getelementptr inbounds %\"class.std::_Rb_tree\", %\"class.std::_Rb_tree\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 0\l  %36 = getelementptr inbounds i8, i8* %35, i64 8\l  %37 = bitcast i8* %36 to %\"struct.std::_Rb_tree_node_base\"*\l  call void\l... @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext\l... %33, %\"struct.std::_Rb_tree_node_base\"* nonnull %34,\l... %\"struct.std::_Rb_tree_node_base\"* nonnull %17,\l... %\"struct.std::_Rb_tree_node_base\"* nonnull align 8 dereferenceable(32) %37)\l... #11\l  %38 = getelementptr inbounds i8, i8* %35, i64 40\l  %39 = bitcast i8* %38 to i64*\l  %40 = load i64, i64* %39, align 8, !tbaa !13\l  %41 = add i64 %40, 1\l  store i64 %41, i64* %39, align 8, !tbaa !13\l  br label %47\l}"];
	Node0x561bf09f7b50 -> Node0x561bf09f88f0;
	Node0x561bf09f64b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%42:\l42:                                               \l  %43 = landingpad \{ i8*, i32 \}\l          catch i8* null\l  %44 = extractvalue \{ i8*, i32 \} %43, 0\l  %45 = call i8* @__cxa_begin_catch(i8* %44) #11\l  call void @_ZdlPv(i8* nonnull %6) #11\l  invoke void @__cxa_rethrow() #12\l          to label %55 unwind label %49\l}"];
	Node0x561bf09f64b0 -> Node0x561bf09f92d0;
	Node0x561bf09f64b0 -> Node0x561bf09f9320;
	Node0x561bf09f78e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%46:\l46:                                               \l  call void @_ZdlPv(i8* nonnull %6) #11\l  br label %47\l}"];
	Node0x561bf09f78e0 -> Node0x561bf09f88f0;
	Node0x561bf09f88f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = phi %\"struct.std::_Rb_tree_node_base\"* [ %16, %46 ], [ %34, %32 ]\l  ret %\"struct.std::_Rb_tree_node_base\"* %48\l}"];
	Node0x561bf09f9320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%49:\l49:                                               \l  %50 = landingpad \{ i8*, i32 \}\l          cleanup\l  invoke void @__cxa_end_catch()\l          to label %51 unwind label %52\l}"];
	Node0x561bf09f9320 -> Node0x561bf09f9860;
	Node0x561bf09f9320 -> Node0x561bf09f98b0;
	Node0x561bf09f9860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%51:\l51:                                               \l  resume \{ i8*, i32 \} %50\l}"];
	Node0x561bf09f98b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%52:\l52:                                               \l  %53 = landingpad \{ i8*, i32 \}\l          catch i8* null\l  %54 = extractvalue \{ i8*, i32 \} %53, 0\l  call void @__clang_call_terminate(i8* %54) #13\l  unreachable\l}"];
	Node0x561bf09f92d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4f69d970",label="{%55:\l55:                                               \l  unreachable\l}"];
}
