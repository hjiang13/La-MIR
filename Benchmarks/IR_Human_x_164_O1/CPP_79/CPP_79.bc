; ModuleID = '../../Human_xBenchmarks_164/CPP_79/CPP_79.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_79/CPP_79.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_ = comdat any

$_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z = comdat any

@.str.1 = private unnamed_addr constant [6 x i8] c"db0db\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"db\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z17decimal_to_binaryB5cxx11i(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %10 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  store %union.anon* %9, %union.anon** %10, align 8, !tbaa !3
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  store i64 0, i64* %12, align 8, !tbaa !8
  %13 = bitcast %union.anon* %9 to i8*
  store i8 0, i8* %13, align 8, !tbaa !11
  %14 = icmp eq i32 %1, 0
  br i1 %14, label %34, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  %17 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %19 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %22 = bitcast %union.anon* %18 to i8*
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %25 = bitcast %union.anon* %18 to i8*
  %26 = bitcast %union.anon* %9 to i8*
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2, i32 0
  %28 = getelementptr %union.anon, %union.anon* %18, i64 0, i32 0
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %32 = bitcast %union.anon* %31 to i8*
  %33 = icmp sgt i32 %1, 0
  br i1 %33, label %41, label %113

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %36 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %35, %union.anon** %36, align 8, !tbaa !3
  %37 = bitcast %union.anon* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(5) %37, i8* noundef nonnull align 1 dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5, i1 false) #10
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 5, i64* %38, align 8, !tbaa !8
  %39 = bitcast %union.anon* %35 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 5
  store i8 0, i8* %40, align 1, !tbaa !11
  br label %216

41:                                               ; preds = %15, %97
  %42 = phi i32 [ %44, %97 ], [ %1, %15 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #10
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #10
  %43 = srem i32 %42, 2
  %44 = sdiv i32 %42, 2
  invoke void (%"class.std::__cxx11::basic_string"*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i64, i8*, ...) @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %5, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* nonnull @vsnprintf, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 %43)
          to label %45 unwind label %99

45:                                               ; preds = %41
  call void @llvm.experimental.noalias.scope.decl(metadata !12)
  %46 = load i8*, i8** %11, align 8, !tbaa !15, !noalias !12
  %47 = load i64, i64* %12, align 8, !tbaa !8, !noalias !12
  %48 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i8* %46, i64 %47)
          to label %49 unwind label %101

49:                                               ; preds = %45
  store %union.anon* %18, %union.anon** %19, align 8, !tbaa !3, !alias.scope !12
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %48, i64 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8, !tbaa !15
  %52 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %48, i64 0, i32 2
  %53 = bitcast %union.anon* %52 to i8*
  %54 = icmp eq i8* %51, %53
  br i1 %54, label %55, label %56

55:                                               ; preds = %49
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %22, i8* noundef nonnull align 8 dereferenceable(16) %53, i64 16, i1 false) #10
  br label %59

56:                                               ; preds = %49
  store i8* %51, i8** %20, align 8, !tbaa !15, !alias.scope !12
  %57 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %48, i64 0, i32 2, i32 0
  %58 = load i64, i64* %57, align 8, !tbaa !11
  store i64 %58, i64* %21, align 8, !tbaa !11, !alias.scope !12
  br label %59

59:                                               ; preds = %55, %56
  %60 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %48, i64 0, i32 1
  %61 = load i64, i64* %60, align 8, !tbaa !8
  store i64 %61, i64* %23, align 8, !tbaa !8, !alias.scope !12
  %62 = bitcast %"class.std::__cxx11::basic_string"* %48 to %union.anon**
  store %union.anon* %52, %union.anon** %62, align 8, !tbaa !15
  store i64 0, i64* %60, align 8, !tbaa !8
  store i8 0, i8* %53, align 8, !tbaa !11
  %63 = load i8*, i8** %24, align 8, !tbaa !15
  %64 = icmp eq i8* %63, %25
  br i1 %64, label %65, label %78

65:                                               ; preds = %59
  %66 = load i64, i64* %23, align 8, !tbaa !8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %65
  %69 = load i8*, i8** %11, align 8, !tbaa !15
  %70 = icmp eq i64 %66, 1
  br i1 %70, label %71, label %73

71:                                               ; preds = %68
  %72 = load i8, i8* %63, align 1, !tbaa !11
  store i8 %72, i8* %69, align 1, !tbaa !11
  br label %74

73:                                               ; preds = %68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* align 1 %63, i64 %66, i1 false) #10
  br label %74

74:                                               ; preds = %73, %71, %65
  %75 = load i64, i64* %23, align 8, !tbaa !8
  store i64 %75, i64* %12, align 8, !tbaa !8
  %76 = load i8*, i8** %11, align 8, !tbaa !15
  %77 = getelementptr inbounds i8, i8* %76, i64 %75
  store i8 0, i8* %77, align 1, !tbaa !11
  br label %88

78:                                               ; preds = %59
  %79 = load i8*, i8** %11, align 8, !tbaa !15
  %80 = icmp eq i8* %79, %26
  %81 = load i64, i64* %27, align 8
  store i8* %63, i8** %11, align 8, !tbaa !15
  %82 = load i64, i64* %23, align 8, !tbaa !8
  store i64 %82, i64* %12, align 8, !tbaa !8
  %83 = load i64, i64* %28, align 8, !tbaa !11
  store i64 %83, i64* %27, align 8, !tbaa !11
  %84 = icmp eq i8* %79, null
  %85 = or i1 %80, %84
  br i1 %85, label %87, label %86

86:                                               ; preds = %78
  store i8* %79, i8** %24, align 8, !tbaa !15
  store i64 %81, i64* %29, align 8, !tbaa !11
  br label %88

87:                                               ; preds = %78
  store %union.anon* %18, %union.anon** %19, align 8, !tbaa !15
  br label %88

88:                                               ; preds = %74, %86, %87
  store i64 0, i64* %23, align 8, !tbaa !8
  %89 = load i8*, i8** %24, align 8, !tbaa !15
  store i8 0, i8* %89, align 1, !tbaa !11
  %90 = load i8*, i8** %24, align 8, !tbaa !15
  %91 = icmp eq i8* %90, %25
  br i1 %91, label %93, label %92

92:                                               ; preds = %88
  call void @_ZdlPv(i8* %90) #10
  br label %93

93:                                               ; preds = %88, %92
  %94 = load i8*, i8** %30, align 8, !tbaa !15
  %95 = icmp eq i8* %94, %32
  br i1 %95, label %97, label %96

96:                                               ; preds = %93
  call void @_ZdlPv(i8* %94) #10
  br label %97

97:                                               ; preds = %93, %96
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #10
  %98 = icmp sgt i32 %42, 1
  br i1 %98, label %41, label %113, !llvm.loop !16

99:                                               ; preds = %41
  %100 = landingpad { i8*, i32 }
          cleanup
  br label %109

101:                                              ; preds = %45
  %102 = landingpad { i8*, i32 }
          cleanup
  %103 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8, !tbaa !15
  %105 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %106 = bitcast %union.anon* %105 to i8*
  %107 = icmp eq i8* %104, %106
  br i1 %107, label %109, label %108

108:                                              ; preds = %101
  call void @_ZdlPv(i8* %104) #10
  br label %109

109:                                              ; preds = %108, %101, %99
  %110 = phi { i8*, i32 } [ %100, %99 ], [ %102, %101 ], [ %102, %108 ]
  %111 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %112 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %111) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112) #10
  br label %222

113:                                              ; preds = %97, %15
  %114 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #10
  %115 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %115) #10
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3)
          to label %116 unwind label %204

116:                                              ; preds = %113
  call void @llvm.experimental.noalias.scope.decl(metadata !19)
  %117 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  %118 = load i64, i64* %117, align 8, !tbaa !8, !noalias !19
  %119 = and i64 %118, -2
  %120 = icmp eq i64 %119, 4611686018427387902
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)) #11
          to label %122 unwind label %206

122:                                              ; preds = %121
  unreachable

123:                                              ; preds = %116
  %124 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2)
          to label %125 unwind label %206

125:                                              ; preds = %123
  %126 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %127 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  store %union.anon* %126, %union.anon** %127, align 8, !tbaa !3, !alias.scope !19
  %128 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %124, i64 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8, !tbaa !15
  %130 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %124, i64 0, i32 2
  %131 = bitcast %union.anon* %130 to i8*
  %132 = icmp eq i8* %129, %131
  br i1 %132, label %133, label %135

133:                                              ; preds = %125
  %134 = bitcast %union.anon* %126 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %134, i8* noundef nonnull align 8 dereferenceable(16) %131, i64 16, i1 false) #10
  br label %140

135:                                              ; preds = %125
  %136 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  store i8* %129, i8** %136, align 8, !tbaa !15, !alias.scope !19
  %137 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %124, i64 0, i32 2, i32 0
  %138 = load i64, i64* %137, align 8, !tbaa !11
  %139 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  store i64 %138, i64* %139, align 8, !tbaa !11, !alias.scope !19
  br label %140

140:                                              ; preds = %133, %135
  %141 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %124, i64 0, i32 1
  %142 = load i64, i64* %141, align 8, !tbaa !8
  %143 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  store i64 %142, i64* %143, align 8, !tbaa !8, !alias.scope !19
  %144 = bitcast %"class.std::__cxx11::basic_string"* %124 to %union.anon**
  store %union.anon* %130, %union.anon** %144, align 8, !tbaa !15
  store i64 0, i64* %141, align 8, !tbaa !8
  store i8 0, i8* %131, align 8, !tbaa !11
  %145 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8, !tbaa !15
  %147 = bitcast %union.anon* %126 to i8*
  %148 = icmp eq i8* %146, %147
  br i1 %148, label %149, label %162

149:                                              ; preds = %140
  %150 = load i64, i64* %143, align 8, !tbaa !8
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %158, label %152

152:                                              ; preds = %149
  %153 = load i8*, i8** %11, align 8, !tbaa !15
  %154 = icmp eq i64 %150, 1
  br i1 %154, label %155, label %157

155:                                              ; preds = %152
  %156 = load i8, i8* %146, align 1, !tbaa !11
  store i8 %156, i8* %153, align 1, !tbaa !11
  br label %158

157:                                              ; preds = %152
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %153, i8* align 1 %146, i64 %150, i1 false) #10
  br label %158

158:                                              ; preds = %157, %155, %149
  %159 = load i64, i64* %143, align 8, !tbaa !8
  store i64 %159, i64* %12, align 8, !tbaa !8
  %160 = load i8*, i8** %11, align 8, !tbaa !15
  %161 = getelementptr inbounds i8, i8* %160, i64 %159
  store i8 0, i8* %161, align 1, !tbaa !11
  br label %176

162:                                              ; preds = %140
  %163 = bitcast %union.anon* %9 to i8*
  %164 = load i8*, i8** %11, align 8, !tbaa !15
  %165 = icmp eq i8* %164, %163
  %166 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2, i32 0
  %167 = load i64, i64* %166, align 8
  store i8* %146, i8** %11, align 8, !tbaa !15
  %168 = load i64, i64* %143, align 8, !tbaa !8
  store i64 %168, i64* %12, align 8, !tbaa !8
  %169 = getelementptr %union.anon, %union.anon* %126, i64 0, i32 0
  %170 = load i64, i64* %169, align 8, !tbaa !11
  store i64 %170, i64* %166, align 8, !tbaa !11
  %171 = icmp eq i8* %164, null
  %172 = or i1 %165, %171
  br i1 %172, label %175, label %173

173:                                              ; preds = %162
  store i8* %164, i8** %145, align 8, !tbaa !15
  %174 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  store i64 %167, i64* %174, align 8, !tbaa !11
  br label %176

175:                                              ; preds = %162
  store %union.anon* %126, %union.anon** %127, align 8, !tbaa !15
  br label %176

176:                                              ; preds = %158, %173, %175
  store i64 0, i64* %143, align 8, !tbaa !8
  %177 = load i8*, i8** %145, align 8, !tbaa !15
  store i8 0, i8* %177, align 1, !tbaa !11
  %178 = load i8*, i8** %145, align 8, !tbaa !15
  %179 = icmp eq i8* %178, %147
  br i1 %179, label %181, label %180

180:                                              ; preds = %176
  call void @_ZdlPv(i8* %178) #10
  br label %181

181:                                              ; preds = %176, %180
  %182 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %183 = load i8*, i8** %182, align 8, !tbaa !15
  %184 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %185 = bitcast %union.anon* %184 to i8*
  %186 = icmp eq i8* %183, %185
  br i1 %186, label %188, label %187

187:                                              ; preds = %181
  call void @_ZdlPv(i8* %183) #10
  br label %188

188:                                              ; preds = %181, %187
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %115) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #10
  %189 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %190 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %189, %union.anon** %190, align 8, !tbaa !3
  %191 = load i8*, i8** %11, align 8, !tbaa !15
  %192 = bitcast %union.anon* %9 to i8*
  %193 = icmp eq i8* %191, %192
  br i1 %193, label %194, label %196

194:                                              ; preds = %188
  %195 = bitcast %union.anon* %189 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %195, i8* noundef nonnull align 8 dereferenceable(16) %192, i64 16, i1 false) #10
  br label %201

196:                                              ; preds = %188
  %197 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %191, i8** %197, align 8, !tbaa !15
  %198 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2, i32 0
  %199 = load i64, i64* %198, align 8, !tbaa !11
  %200 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %199, i64* %200, align 8, !tbaa !11
  br label %201

201:                                              ; preds = %194, %196
  %202 = load i64, i64* %12, align 8, !tbaa !8
  %203 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %202, i64* %203, align 8, !tbaa !8
  store %union.anon* %9, %union.anon** %10, align 8, !tbaa !15
  store i64 0, i64* %12, align 8, !tbaa !8
  store i8 0, i8* %192, align 8, !tbaa !11
  br label %216

204:                                              ; preds = %113
  %205 = landingpad { i8*, i32 }
          cleanup
  br label %214

206:                                              ; preds = %123, %121
  %207 = landingpad { i8*, i32 }
          cleanup
  %208 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8, !tbaa !15
  %210 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %211 = bitcast %union.anon* %210 to i8*
  %212 = icmp eq i8* %209, %211
  br i1 %212, label %214, label %213

213:                                              ; preds = %206
  call void @_ZdlPv(i8* %209) #10
  br label %214

214:                                              ; preds = %213, %206, %204
  %215 = phi { i8*, i32 } [ %205, %204 ], [ %207, %206 ], [ %207, %213 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %115) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #10
  br label %222

216:                                              ; preds = %201, %34
  %217 = load i8*, i8** %11, align 8, !tbaa !15
  %218 = bitcast %union.anon* %9 to i8*
  %219 = icmp eq i8* %217, %218
  br i1 %219, label %221, label %220

220:                                              ; preds = %216
  call void @_ZdlPv(i8* %217) #10
  br label %221

221:                                              ; preds = %216, %220
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #10
  ret void

222:                                              ; preds = %214, %109
  %223 = phi { i8*, i32 } [ %110, %109 ], [ %215, %214 ]
  %224 = load i8*, i8** %11, align 8, !tbaa !15
  %225 = bitcast %union.anon* %9 to i8*
  %226 = icmp eq i8* %224, %225
  br i1 %226, label %228, label %227

227:                                              ; preds = %222
  call void @_ZdlPv(i8* %224) #10
  br label %228

228:                                              ; preds = %227, %222
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #10
  resume { i8*, i32 } %223
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i8* %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = call i64 @strlen(i8* noundef nonnull dereferenceable(1) %1) #10
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !3
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %7, align 8, !tbaa !8
  %8 = bitcast %union.anon* %5 to i8*
  store i8 0, i8* %8, align 8, !tbaa !11
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !8
  %11 = add i64 %10, %4
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64 %11)
          to label %12 unwind label %25

12:                                               ; preds = %3
  %13 = load i64, i64* %7, align 8, !tbaa !8
  %14 = sub i64 4611686018427387903, %13
  %15 = icmp ult i64 %14, %4
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)) #11
          to label %17 unwind label %25

17:                                               ; preds = %16
  unreachable

18:                                               ; preds = %12
  %19 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %1, i64 %4)
          to label %20 unwind label %25

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !tbaa !15
  %23 = load i64, i64* %9, align 8, !tbaa !8
  %24 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %22, i64 %23)
          to label %32 unwind label %25

25:                                               ; preds = %20, %18, %16, %3
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !tbaa !15
  %29 = icmp eq i8* %28, %8
  br i1 %29, label %31, label %30

30:                                               ; preds = %25
  call void @_ZdlPv(i8* %28) #10
  br label %31

31:                                               ; preds = %25, %30
  resume { i8*, i32 } %26

32:                                               ; preds = %20
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* %1, i64 %2, i8* %3, ...) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca i64, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = alloca i8, i64 %2, align 16
  %8 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %8)
  %10 = call i32 %1(i8* nonnull %7, i64 %2, i8* %3, %struct.__va_list_tag* nonnull %9)
  call void @llvm.va_end(i8* %8)
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3
  %14 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  store i64 %11, i64* %5, align 8, !tbaa !22
  %15 = icmp ugt i32 %10, 15
  br i1 %15, label %16, label %21

16:                                               ; preds = %4
  %17 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8, !tbaa !15
  %19 = load i64, i64* %5, align 8, !tbaa !22
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %19, i64* %20, align 8, !tbaa !11
  br label %21

21:                                               ; preds = %16, %4
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8, !tbaa !15
  switch i64 %11, label %26 [
    i64 1, label %24
    i64 0, label %27
  ]

24:                                               ; preds = %21
  %25 = load i8, i8* %7, align 16, !tbaa !11
  store i8 %25, i8* %23, align 1, !tbaa !11
  br label %27

26:                                               ; preds = %21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* nonnull align 16 %7, i64 %11, i1 false) #10
  br label %27

27:                                               ; preds = %21, %24, %26
  %28 = load i64, i64* %5, align 8, !tbaa !22
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %28, i64* %29, align 8, !tbaa !8
  %30 = load i8*, i8** %22, align 8, !tbaa !15
  %31 = getelementptr inbounds i8, i8* %30, i64 %28
  store i8 0, i8* %31, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @vsnprintf(i8* nocapture noundef, i64 noundef, i8* nocapture noundef readonly, %struct.__va_list_tag* noundef) #2

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #3

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #3

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #4

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #8

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #9

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nofree nosync nounwind willreturn }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #6 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #10 = { nounwind }
attributes #11 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_: argument 0"}
!14 = distinct !{!14, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_"}
!15 = !{!9, !5, i64 0}
!16 = distinct !{!16, !17, !18}
!17 = !{!"llvm.loop.mustprogress"}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_: argument 0"}
!21 = distinct !{!21, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"}
!22 = !{!10, !10, i64 0}
