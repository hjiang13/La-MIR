digraph "CFG for '_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_' function" {
	label="CFG for '_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_' function";

	Node0x55b22b2c16d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%3:\l  %4 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 1\l  %5 = load %\"class.std::vector\"*, %\"class.std::vector\"** %4, align 8, !tbaa !3\l  %6 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 0\l  %7 = load %\"class.std::vector\"*, %\"class.std::vector\"** %6, align 8, !tbaa !8\l  %8 = ptrtoint %\"class.std::vector\"* %5 to i64\l  %9 = ptrtoint %\"class.std::vector\"* %7 to i64\l  %10 = sub i64 %8, %9\l  %11 = sdiv exact i64 %10, 24\l  %12 = icmp eq i64 %10, 9223372036854775800\l  br i1 %12, label %13, label %14\l|{<s0>T|<s1>F}}"];
	Node0x55b22b2c16d0:s0 -> Node0x55b22b2c1840;
	Node0x55b22b2c16d0:s1 -> Node0x55b22b2c1d20;
	Node0x55b22b2c1840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%13:\l13:                                               \l  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str.1, i64 0, i64 0)) #10\l  unreachable\l}"];
	Node0x55b22b2c1d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%14:\l14:                                               \l  %15 = icmp eq i64 %10, 0\l  %16 = select i1 %15, i64 1, i64 %11\l  %17 = add nsw i64 %16, %11\l  %18 = icmp ult i64 %17, %11\l  %19 = icmp ugt i64 %17, 384307168202282325\l  %20 = or i1 %18, %19\l  %21 = select i1 %20, i64 384307168202282325, i64 %17\l  %22 = ptrtoint %\"class.std::vector\"* %1 to i64\l  %23 = sub i64 %22, %9\l  %24 = sdiv exact i64 %23, 24\l  %25 = icmp eq i64 %21, 0\l  br i1 %25, label %33, label %26\l|{<s0>T|<s1>F}}"];
	Node0x55b22b2c1d20:s0 -> Node0x55b22b2c2550;
	Node0x55b22b2c1d20:s1 -> Node0x55b22b2c25a0;
	Node0x55b22b2c25a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%26:\l26:                                               \l  %27 = icmp ugt i64 %21, 384307168202282325\l  br i1 %27, label %28, label %29\l|{<s0>T|<s1>F}}"];
	Node0x55b22b2c25a0:s0 -> Node0x55b22b2c2730;
	Node0x55b22b2c25a0:s1 -> Node0x55b22b2c2780;
	Node0x55b22b2c2730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%28:\l28:                                               \l  call void @_ZSt17__throw_bad_allocv() #10\l  unreachable\l}"];
	Node0x55b22b2c2780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%29:\l29:                                               \l  %30 = mul i64 %21, 24\l  %31 = call noalias nonnull i8* @_Znwm(i64 %30) #11\l  %32 = bitcast i8* %31 to %\"class.std::vector\"*\l  br label %33\l}"];
	Node0x55b22b2c2780 -> Node0x55b22b2c2550;
	Node0x55b22b2c2550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%33:\l33:                                               \l  %34 = phi %\"class.std::vector\"* [ %32, %29 ], [ null, %14 ]\l  %35 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %34, i64 %24\l  %36 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %2,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %37 = load i32*, i32** %36, align 8, !tbaa !9\l  %38 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %2,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %39 = load i32*, i32** %38, align 8, !tbaa !11\l  %40 = ptrtoint i32* %37 to i64\l  %41 = ptrtoint i32* %39 to i64\l  %42 = sub i64 %40, %41\l  %43 = ashr exact i64 %42, 2\l  %44 = bitcast %\"class.std::vector\"* %35 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %44, i8 0, i64 24, i1 false) #12\l  %45 = icmp eq i64 %42, 0\l  br i1 %45, label %54, label %46\l|{<s0>T|<s1>F}}"];
	Node0x55b22b2c2550:s0 -> Node0x55b22b2c3490;
	Node0x55b22b2c2550:s1 -> Node0x55b22b2c34e0;
	Node0x55b22b2c34e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%46:\l46:                                               \l  %47 = icmp ugt i64 %43, 2305843009213693951\l  br i1 %47, label %48, label %50\l|{<s0>T|<s1>F}}"];
	Node0x55b22b2c34e0:s0 -> Node0x55b22b2c3670;
	Node0x55b22b2c34e0:s1 -> Node0x55b22b2c36c0;
	Node0x55b22b2c3670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%48:\l48:                                               \l  invoke void @_ZSt17__throw_bad_allocv() #10\l          to label %49 unwind label %127\l}"];
	Node0x55b22b2c3670 -> Node0x55b22b2c37c0;
	Node0x55b22b2c3670 -> Node0x55b22b2c3810;
	Node0x55b22b2c37c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%49:\l49:                                               \l  unreachable\l}"];
	Node0x55b22b2c36c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%50:\l50:                                               \l  %51 = invoke noalias nonnull i8* @_Znwm(i64 %42) #11\l          to label %52 unwind label %127\l}"];
	Node0x55b22b2c36c0 -> Node0x55b22b2c39c0;
	Node0x55b22b2c36c0 -> Node0x55b22b2c3810;
	Node0x55b22b2c39c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%52:\l52:                                               \l  %53 = bitcast i8* %51 to i32*\l  br label %54\l}"];
	Node0x55b22b2c39c0 -> Node0x55b22b2c3490;
	Node0x55b22b2c3490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%54:\l54:                                               \l  %55 = phi i32* [ %53, %52 ], [ null, %33 ]\l  %56 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %35, i64 0, i32 0, i32 0, i32 0, i32 0\l  store i32* %55, i32** %56, align 8, !tbaa !11\l  %57 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %34, i64 %24, i32 0, i32 0, i32 0, i32 1\l  store i32* %55, i32** %57, align 8, !tbaa !9\l  %58 = getelementptr inbounds i32, i32* %55, i64 %43\l  %59 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %34, i64 %24, i32 0, i32 0, i32 0, i32 2\l  store i32* %58, i32** %59, align 8, !tbaa !12\l  %60 = load i32*, i32** %38, align 8, !tbaa !13\l  %61 = load i32*, i32** %36, align 8, !tbaa !13\l  %62 = ptrtoint i32* %61 to i64\l  %63 = ptrtoint i32* %60 to i64\l  %64 = sub i64 %62, %63\l  %65 = icmp eq i64 %64, 0\l  br i1 %65, label %69, label %66\l|{<s0>T|<s1>F}}"];
	Node0x55b22b2c3490:s0 -> Node0x55b22b2c4d40;
	Node0x55b22b2c3490:s1 -> Node0x55b22b2c4d90;
	Node0x55b22b2c4d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%66:\l66:                                               \l  %67 = bitcast i32* %55 to i8*\l  %68 = bitcast i32* %60 to i8*\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %68, i64\l... %64, i1 false) #12\l  br label %69\l}"];
	Node0x55b22b2c4d90 -> Node0x55b22b2c4d40;
	Node0x55b22b2c4d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%69:\l69:                                               \l  %70 = ashr exact i64 %64, 2\l  %71 = getelementptr inbounds i32, i32* %55, i64 %70\l  store i32* %71, i32** %57, align 8, !tbaa !9\l  %72 = icmp eq %\"class.std::vector\"* %7, %1\l  br i1 %72, label %94, label %73\l|{<s0>T|<s1>F}}"];
	Node0x55b22b2c4d40:s0 -> Node0x55b22b2c53c0;
	Node0x55b22b2c4d40:s1 -> Node0x55b22b2c5410;
	Node0x55b22b2c5410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  %74 = phi %\"class.std::vector\"* [ %92, %90 ], [ %34, %69 ]\l  %75 = phi %\"class.std::vector\"* [ %91, %90 ], [ %7, %69 ]\l  %76 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %74, i64 0, i32 0, i32 0, i32 0, i32 0\l  %77 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %75, i64 0, i32 0, i32 0, i32 0, i32 0\l  %78 = load i32*, i32** %77, align 8, !tbaa !11\l  store i32* %78, i32** %76, align 8, !tbaa !11\l  %79 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %74, i64 0, i32 0, i32 0, i32 0, i32 1\l  %80 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %75, i64 0, i32 0, i32 0, i32 0, i32 1\l  %81 = load i32*, i32** %80, align 8, !tbaa !9\l  store i32* %81, i32** %79, align 8, !tbaa !9\l  %82 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %74, i64 0, i32 0, i32 0, i32 0, i32 2\l  %83 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %75, i64 0, i32 0, i32 0, i32 0, i32 2\l  %84 = load i32*, i32** %83, align 8, !tbaa !12\l  store i32* %84, i32** %82, align 8, !tbaa !12\l  %85 = bitcast %\"class.std::vector\"* %75 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %85, i8 0, i64 24, i1 false) #12\l  %86 = load i32*, i32** %77, align 8, !tbaa !11\l  %87 = icmp eq i32* %86, null\l  br i1 %87, label %90, label %88\l|{<s0>T|<s1>F}}"];
	Node0x55b22b2c5410:s0 -> Node0x55b22b2c5510;
	Node0x55b22b2c5410:s1 -> Node0x55b22b2c6360;
	Node0x55b22b2c6360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%88:\l88:                                               \l  %89 = bitcast i32* %86 to i8*\l  call void @_ZdlPv(i8* nonnull %89) #12\l  br label %90\l}"];
	Node0x55b22b2c6360 -> Node0x55b22b2c5510;
	Node0x55b22b2c5510 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  %91 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %75, i64 1\l  %92 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %74, i64 1\l  %93 = icmp eq %\"class.std::vector\"* %91, %1\l  br i1 %93, label %94, label %73, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x55b22b2c5510:s0 -> Node0x55b22b2c53c0;
	Node0x55b22b2c5510:s1 -> Node0x55b22b2c5410;
	Node0x55b22b2c53c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%94:\l94:                                               \l  %95 = phi %\"class.std::vector\"* [ %34, %69 ], [ %92, %90 ]\l  %96 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %95, i64 1\l  %97 = icmp eq %\"class.std::vector\"* %5, %1\l  br i1 %97, label %119, label %98\l|{<s0>T|<s1>F}}"];
	Node0x55b22b2c53c0:s0 -> Node0x55b22b2c6a90;
	Node0x55b22b2c53c0:s1 -> Node0x55b22b2c6ae0;
	Node0x55b22b2c6ae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%98:\l98:                                               \l  %99 = phi %\"class.std::vector\"* [ %117, %115 ], [ %96, %94 ]\l  %100 = phi %\"class.std::vector\"* [ %116, %115 ], [ %1, %94 ]\l  %101 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %99, i64 0, i32 0, i32 0, i32 0, i32 0\l  %102 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %100, i64 0, i32 0, i32 0, i32 0, i32 0\l  %103 = load i32*, i32** %102, align 8, !tbaa !11\l  store i32* %103, i32** %101, align 8, !tbaa !11\l  %104 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %99, i64 0, i32 0, i32 0, i32 0, i32 1\l  %105 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %100, i64 0, i32 0, i32 0, i32 0, i32 1\l  %106 = load i32*, i32** %105, align 8, !tbaa !9\l  store i32* %106, i32** %104, align 8, !tbaa !9\l  %107 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %99, i64 0, i32 0, i32 0, i32 0, i32 2\l  %108 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %100, i64 0, i32 0, i32 0, i32 0, i32 2\l  %109 = load i32*, i32** %108, align 8, !tbaa !12\l  store i32* %109, i32** %107, align 8, !tbaa !12\l  %110 = bitcast %\"class.std::vector\"* %100 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %110, i8 0, i64 24, i1 false) #12\l  %111 = load i32*, i32** %102, align 8, !tbaa !11\l  %112 = icmp eq i32* %111, null\l  br i1 %112, label %115, label %113\l|{<s0>T|<s1>F}}"];
	Node0x55b22b2c6ae0:s0 -> Node0x55b22b2c6be0;
	Node0x55b22b2c6ae0:s1 -> Node0x55b22b2c7ab0;
	Node0x55b22b2c7ab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%113:\l113:                                              \l  %114 = bitcast i32* %111 to i8*\l  call void @_ZdlPv(i8* nonnull %114) #12\l  br label %115\l}"];
	Node0x55b22b2c7ab0 -> Node0x55b22b2c6be0;
	Node0x55b22b2c6be0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%115:\l115:                                              \l  %116 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %100, i64 1\l  %117 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %99, i64 1\l  %118 = icmp eq %\"class.std::vector\"* %116, %5\l  br i1 %118, label %119, label %98, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x55b22b2c6be0:s0 -> Node0x55b22b2c6a90;
	Node0x55b22b2c6be0:s1 -> Node0x55b22b2c6ae0;
	Node0x55b22b2c6a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%119:\l119:                                              \l  %120 = phi %\"class.std::vector\"* [ %96, %94 ], [ %117, %115 ]\l  %121 = icmp eq %\"class.std::vector\"* %7, null\l  br i1 %121, label %124, label %122\l|{<s0>T|<s1>F}}"];
	Node0x55b22b2c6a90:s0 -> Node0x55b22b2c8790;
	Node0x55b22b2c6a90:s1 -> Node0x55b22b2c87e0;
	Node0x55b22b2c87e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%122:\l122:                                              \l  %123 = bitcast %\"class.std::vector\"* %7 to i8*\l  call void @_ZdlPv(i8* nonnull %123) #12\l  br label %124\l}"];
	Node0x55b22b2c87e0 -> Node0x55b22b2c8790;
	Node0x55b22b2c8790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%124:\l124:                                              \l  %125 = getelementptr inbounds %\"class.std::vector.0\",\l... %\"class.std::vector.0\"* %0, i64 0, i32 0, i32 0, i32 0, i32 2\l  store %\"class.std::vector\"* %34, %\"class.std::vector\"** %6, align 8, !tbaa !8\l  store %\"class.std::vector\"* %120, %\"class.std::vector\"** %4, align 8, !tbaa\l... !3\l  %126 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %34, i64 %21\l  store %\"class.std::vector\"* %126, %\"class.std::vector\"** %125, align 8,\l... !tbaa !17\l  ret void\l}"];
	Node0x55b22b2c3810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%127:\l127:                                              \l  %128 = landingpad \{ i8*, i32 \}\l          catch i8* null\l  %129 = extractvalue \{ i8*, i32 \} %128, 0\l  %130 = call i8* @__cxa_begin_catch(i8* %129) #12\l  %131 = icmp eq %\"class.std::vector\"* %34, null\l  br i1 %131, label %132, label %141\l|{<s0>T|<s1>F}}"];
	Node0x55b22b2c3810:s0 -> Node0x55b22b2c9970;
	Node0x55b22b2c3810:s1 -> Node0x55b22b2c99c0;
	Node0x55b22b2c9970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%132:\l132:                                              \l  %133 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %35, i64 0, i32 0, i32 0, i32 0, i32 0\l  %134 = load i32*, i32** %133, align 8, !tbaa !11\l  %135 = icmp eq i32* %134, null\l  br i1 %135, label %140, label %136\l|{<s0>T|<s1>F}}"];
	Node0x55b22b2c9970:s0 -> Node0x55b22b2c9ce0;
	Node0x55b22b2c9970:s1 -> Node0x55b22b2c9d30;
	Node0x55b22b2c9d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%136:\l136:                                              \l  %137 = bitcast i32* %134 to i8*\l  call void @_ZdlPv(i8* nonnull %137) #12\l  br label %140\l}"];
	Node0x55b22b2c9d30 -> Node0x55b22b2c9ce0;
	Node0x55b22b2ca020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%138:\l138:                                              \l  %139 = landingpad \{ i8*, i32 \}\l          cleanup\l  invoke void @__cxa_end_catch()\l          to label %144 unwind label %145\l}"];
	Node0x55b22b2ca020 -> Node0x55b22b2ca0c0;
	Node0x55b22b2ca020 -> Node0x55b22b2ca110;
	Node0x55b22b2c9ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%140:\l140:                                              \l  br i1 %131, label %143, label %141\l|{<s0>T|<s1>F}}"];
	Node0x55b22b2c9ce0:s0 -> Node0x55b22b2ca270;
	Node0x55b22b2c9ce0:s1 -> Node0x55b22b2c99c0;
	Node0x55b22b2c99c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%141:\l141:                                              \l  %142 = bitcast %\"class.std::vector\"* %34 to i8*\l  call void @_ZdlPv(i8* nonnull %142) #12\l  br label %143\l}"];
	Node0x55b22b2c99c0 -> Node0x55b22b2ca270;
	Node0x55b22b2ca270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%143:\l143:                                              \l  invoke void @__cxa_rethrow() #10\l          to label %148 unwind label %138\l}"];
	Node0x55b22b2ca270 -> Node0x55b22b2ca580;
	Node0x55b22b2ca270 -> Node0x55b22b2ca020;
	Node0x55b22b2ca0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%144:\l144:                                              \l  resume \{ i8*, i32 \} %139\l}"];
	Node0x55b22b2ca110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%145:\l145:                                              \l  %146 = landingpad \{ i8*, i32 \}\l          catch i8* null\l  %147 = extractvalue \{ i8*, i32 \} %146, 0\l  call void @__clang_call_terminate(i8* %147) #13\l  unreachable\l}"];
	Node0x55b22b2ca580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#536edd70",label="{%148:\l148:                                              \l  unreachable\l}"];
}
