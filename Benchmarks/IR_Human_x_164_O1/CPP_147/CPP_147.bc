; ModuleID = '../../Human_xBenchmarks_164/CPP_147/CPP_147.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_147/CPP_147.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<std::vector<int>, std::allocator<std::vector<int>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<int>, std::allocator<std::vector<int>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<int>, std::allocator<std::vector<int>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<int>, std::allocator<std::vector<int>>>::_Vector_impl_data" = type { %"class.std::vector"*, %"class.std::vector"*, %"class.std::vector"* }

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEaSERKS3_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt6vectorIiSaIiEEPS4_EET0_T_S9_S8_ = comdat any

$_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIiSaIiEES4_IS6_SaIS6_EEEEPS6_EET0_T_SE_SD_ = comdat any

$_ZNSt6vectorIiSaIiEEaSERKS1_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIiSaIiEES5_EET0_T_S7_S6_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE20_M_allocate_and_copyIPKS1_EEPS1_mT_S8_ = comdat any

@.str = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1

; Function Attrs: uwtable
define dso_local i32 @_Z18get_matrix_triplesi(i32 %0) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector", align 8
  %3 = alloca %"class.std::vector.0", align 8
  %4 = alloca [1 x %"class.std::vector"], align 8
  %5 = alloca %"class.std::vector.0", align 8
  %6 = alloca [1 x %"class.std::vector"], align 8
  %7 = alloca i32, align 4
  %8 = alloca [1 x %"class.std::vector"], align 8
  %9 = bitcast %"class.std::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %9, i8 0, i64 24, i1 false) #11
  %10 = bitcast %"class.std::vector.0"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = bitcast [1 x %"class.std::vector"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %4, i64 0, i64 0
  %13 = bitcast [1 x %"class.std::vector"]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false) #11
  %14 = invoke noalias nonnull i8* @_Znwm(i64 12) #12
          to label %20 unwind label %15

15:                                               ; preds = %1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8, !tbaa !3
  %19 = icmp eq i32* %18, null
  br i1 %19, label %135, label %131

20:                                               ; preds = %1
  %21 = bitcast i8* %14 to i32*
  %22 = bitcast [1 x %"class.std::vector"]* %4 to i8**
  store i8* %14, i8** %22, align 8, !tbaa !3
  %23 = getelementptr inbounds i8, i8* %14, i64 12
  %24 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0, i32 2
  %25 = bitcast i32** %24 to i8**
  store i8* %23, i8** %25, align 8, !tbaa !8
  store i32 0, i32* %21, align 4
  %26 = getelementptr inbounds i8, i8* %14, i64 4
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %14, i64 8
  %29 = bitcast i8* %28 to i32*
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast i32** %30 to i8**
  store i8* %23, i8** %31, align 8, !tbaa !9
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false) #11
  %32 = invoke noalias nonnull i8* @_Znwm(i64 24) #12
          to label %33 unwind label %42

33:                                               ; preds = %20
  %34 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %4, i64 0, i64 1
  %35 = bitcast i8* %32 to %"class.std::vector"*
  %36 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.std::vector.0"* %3 to i8**
  store i8* %32, i8** %37, align 8, !tbaa !10
  %38 = getelementptr inbounds i8, i8* %32, i64 24
  %39 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %40 = bitcast %"class.std::vector"** %39 to i8**
  store i8* %38, i8** %40, align 8, !tbaa !12
  %41 = invoke %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt6vectorIiSaIiEEPS4_EET0_T_S9_S8_(%"class.std::vector"* nonnull %12, %"class.std::vector"* nonnull %34, %"class.std::vector"* nonnull %35)
          to label %49 unwind label %42

42:                                               ; preds = %33, %20
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.std::vector"*, %"class.std::vector"** %44, align 8, !tbaa !10
  %46 = icmp eq %"class.std::vector"* %45, null
  br i1 %46, label %127, label %47

47:                                               ; preds = %42
  %48 = bitcast %"class.std::vector"* %45 to i8*
  call void @_ZdlPv(i8* nonnull %48) #11
  br label %127

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"class.std::vector"* %41, %"class.std::vector"** %50, align 8, !tbaa !13
  %51 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8, !tbaa !3
  %53 = icmp eq i32* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %49
  %55 = bitcast i32* %52 to i8*
  call void @_ZdlPv(i8* nonnull %55) #11
  br label %56

56:                                               ; preds = %54, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %57 = bitcast %"class.std::vector.0"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #11
  %58 = bitcast [1 x %"class.std::vector"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #11
  %59 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %6, i64 0, i64 0
  %60 = bitcast [1 x %"class.std::vector"]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %60, i8 0, i64 24, i1 false) #11
  %61 = invoke noalias nonnull i8* @_Znwm(i64 12) #12
          to label %67 unwind label %62

62:                                               ; preds = %56
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8, !tbaa !3
  %66 = icmp eq i32* %65, null
  br i1 %66, label %145, label %141

67:                                               ; preds = %56
  %68 = bitcast i8* %61 to i32*
  %69 = bitcast [1 x %"class.std::vector"]* %6 to i8**
  store i8* %61, i8** %69, align 8, !tbaa !3
  %70 = getelementptr inbounds i8, i8* %61, i64 12
  %71 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0, i32 2
  %72 = bitcast i32** %71 to i8**
  store i8* %70, i8** %72, align 8, !tbaa !8
  store i32 0, i32* %68, align 4
  %73 = getelementptr inbounds i8, i8* %61, i64 4
  %74 = bitcast i8* %73 to i32*
  store i32 0, i32* %74, align 4
  %75 = getelementptr inbounds i8, i8* %61, i64 8
  %76 = bitcast i8* %75 to i32*
  store i32 0, i32* %76, align 4
  %77 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0, i32 1
  %78 = bitcast i32** %77 to i8**
  store i8* %70, i8** %78, align 8, !tbaa !9
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %57, i8 0, i64 24, i1 false) #11
  %79 = invoke noalias nonnull i8* @_Znwm(i64 24) #12
          to label %80 unwind label %89

80:                                               ; preds = %67
  %81 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %6, i64 0, i64 1
  %82 = bitcast i8* %79 to %"class.std::vector"*
  %83 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = bitcast %"class.std::vector.0"* %5 to i8**
  store i8* %79, i8** %84, align 8, !tbaa !10
  %85 = getelementptr inbounds i8, i8* %79, i64 24
  %86 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %87 = bitcast %"class.std::vector"** %86 to i8**
  store i8* %85, i8** %87, align 8, !tbaa !12
  %88 = invoke %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt6vectorIiSaIiEEPS4_EET0_T_S9_S8_(%"class.std::vector"* nonnull %59, %"class.std::vector"* nonnull %81, %"class.std::vector"* nonnull %82)
          to label %96 unwind label %89

89:                                               ; preds = %80, %67
  %90 = landingpad { i8*, i32 }
          cleanup
  %91 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = load %"class.std::vector"*, %"class.std::vector"** %91, align 8, !tbaa !10
  %93 = icmp eq %"class.std::vector"* %92, null
  br i1 %93, label %137, label %94

94:                                               ; preds = %89
  %95 = bitcast %"class.std::vector"* %92 to i8*
  call void @_ZdlPv(i8* nonnull %95) #11
  br label %137

96:                                               ; preds = %80
  %97 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"class.std::vector"* %88, %"class.std::vector"** %97, align 8, !tbaa !13
  %98 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i32*, i32** %98, align 8, !tbaa !3
  %100 = icmp eq i32* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %96
  %102 = bitcast i32* %99 to i8*
  call void @_ZdlPv(i8* nonnull %102) #11
  br label %103

103:                                              ; preds = %101, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #11
  %104 = bitcast i32* %7 to i8*
  %105 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %106 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %107 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = icmp slt i32 %0, 1
  br i1 %108, label %112, label %109

109:                                              ; preds = %103
  %110 = add i32 %0, 1
  %111 = zext i32 %110 to i64
  br label %147

112:                                              ; preds = %212, %103
  %113 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %114 = icmp slt i32 %0, 1
  %115 = bitcast [1 x %"class.std::vector"]* %8 to i8*
  %116 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %8, i64 0, i64 0
  %117 = bitcast [1 x %"class.std::vector"]* %8 to i8*
  %118 = bitcast [1 x %"class.std::vector"]* %8 to i8**
  %119 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %8, i64 0, i64 0, i32 0, i32 0, i32 0, i32 2
  %120 = bitcast i32** %119 to i8**
  %121 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %8, i64 0, i64 0, i32 0, i32 0, i32 0, i32 1
  %122 = bitcast i32** %121 to i8**
  %123 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %8, i64 0, i64 1
  %124 = add i32 %0, 1
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %8, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %234

127:                                              ; preds = %47, %42
  %128 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i32*, i32** %128, align 8, !tbaa !3
  %130 = icmp eq i32* %129, null
  br i1 %130, label %135, label %131

131:                                              ; preds = %127, %15
  %132 = phi i32* [ %18, %15 ], [ %129, %127 ]
  %133 = phi { i8*, i32 } [ %16, %15 ], [ %43, %127 ]
  %134 = bitcast i32* %132 to i8*
  call void @_ZdlPv(i8* nonnull %134) #11
  br label %135

135:                                              ; preds = %131, %127, %15
  %136 = phi { i8*, i32 } [ %16, %15 ], [ %43, %127 ], [ %133, %131 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  br label %411

137:                                              ; preds = %94, %89
  %138 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i32*, i32** %138, align 8, !tbaa !3
  %140 = icmp eq i32* %139, null
  br i1 %140, label %145, label %141

141:                                              ; preds = %137, %62
  %142 = phi i32* [ %65, %62 ], [ %139, %137 ]
  %143 = phi { i8*, i32 } [ %63, %62 ], [ %90, %137 ]
  %144 = bitcast i32* %142 to i8*
  call void @_ZdlPv(i8* nonnull %144) #11
  br label %145

145:                                              ; preds = %141, %137, %62
  %146 = phi { i8*, i32 } [ %63, %62 ], [ %90, %137 ], [ %143, %141 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #11
  br label %409

147:                                              ; preds = %109, %212
  %148 = phi i64 [ 1, %109 ], [ %224, %212 ]
  %149 = phi i32 [ 1, %109 ], [ %225, %212 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %104) #11
  %150 = mul nsw i64 %148, %148
  %151 = sub nsw i32 1, %149
  %152 = trunc i64 %150 to i32
  %153 = add i32 %151, %152
  %154 = srem i32 %153, 3
  store i32 %154, i32* %7, align 4, !tbaa !14
  %155 = load i32*, i32** %105, align 8, !tbaa !9
  %156 = load i32*, i32** %106, align 8, !tbaa !8
  %157 = icmp eq i32* %155, %156
  br i1 %157, label %160, label %158

158:                                              ; preds = %147
  store i32 %154, i32* %155, align 4, !tbaa !14
  %159 = getelementptr inbounds i32, i32* %155, i64 1
  store i32* %159, i32** %105, align 8, !tbaa !9
  br label %161

160:                                              ; preds = %147
  invoke void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %2, i32* %155, i32* nonnull align 4 dereferenceable(4) %7)
          to label %161 unwind label %227

161:                                              ; preds = %158, %160
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %104) #11
  %162 = load %"class.std::vector"*, %"class.std::vector"** %50, align 8, !tbaa !13
  %163 = load %"class.std::vector"*, %"class.std::vector"** %36, align 8, !tbaa !10
  %164 = ptrtoint %"class.std::vector"* %162 to i64
  %165 = ptrtoint %"class.std::vector"* %163 to i64
  %166 = sub i64 %164, %165
  %167 = sdiv exact i64 %166, 24
  %168 = add nsw i64 %167, -1
  %169 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %163, i64 %168
  %170 = load %"class.std::vector"*, %"class.std::vector"** %39, align 8, !tbaa !12
  %171 = icmp eq %"class.std::vector"* %162, %170
  br i1 %171, label %211, label %172

172:                                              ; preds = %161
  %173 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %163, i64 %168, i32 0, i32 0, i32 0, i32 1
  %174 = load i32*, i32** %173, align 8, !tbaa !9
  %175 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %169, i64 0, i32 0, i32 0, i32 0, i32 0
  %176 = load i32*, i32** %175, align 8, !tbaa !3
  %177 = ptrtoint i32* %174 to i64
  %178 = ptrtoint i32* %176 to i64
  %179 = sub i64 %177, %178
  %180 = ashr exact i64 %179, 2
  %181 = bitcast %"class.std::vector"* %162 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %181, i8 0, i64 24, i1 false) #11
  %182 = icmp eq i64 %179, 0
  br i1 %182, label %191, label %183

183:                                              ; preds = %172
  %184 = icmp ugt i64 %180, 2305843009213693951
  br i1 %184, label %185, label %187

185:                                              ; preds = %183
  invoke void @_ZSt17__throw_bad_allocv() #13
          to label %186 unwind label %232

186:                                              ; preds = %185
  unreachable

187:                                              ; preds = %183
  %188 = invoke noalias nonnull i8* @_Znwm(i64 %179) #12
          to label %189 unwind label %230

189:                                              ; preds = %187
  %190 = bitcast i8* %188 to i32*
  br label %191

191:                                              ; preds = %189, %172
  %192 = phi i32* [ %190, %189 ], [ null, %172 ]
  %193 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %162, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* %192, i32** %193, align 8, !tbaa !3
  %194 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %162, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32* %192, i32** %194, align 8, !tbaa !9
  %195 = getelementptr inbounds i32, i32* %192, i64 %180
  %196 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %162, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32* %195, i32** %196, align 8, !tbaa !8
  %197 = load i32*, i32** %175, align 8, !tbaa !16
  %198 = load i32*, i32** %173, align 8, !tbaa !16
  %199 = ptrtoint i32* %198 to i64
  %200 = ptrtoint i32* %197 to i64
  %201 = sub i64 %199, %200
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %206, label %203

203:                                              ; preds = %191
  %204 = bitcast i32* %192 to i8*
  %205 = bitcast i32* %197 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %204, i8* align 4 %205, i64 %201, i1 false) #11
  br label %206

206:                                              ; preds = %203, %191
  %207 = ashr exact i64 %201, 2
  %208 = getelementptr inbounds i32, i32* %192, i64 %207
  store i32* %208, i32** %194, align 8, !tbaa !9
  %209 = load %"class.std::vector"*, %"class.std::vector"** %50, align 8, !tbaa !13
  %210 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %209, i64 1
  store %"class.std::vector"* %210, %"class.std::vector"** %50, align 8, !tbaa !13
  br label %212

211:                                              ; preds = %161
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %3, %"class.std::vector"* %162, %"class.std::vector"* nonnull align 8 dereferenceable(24) %169)
          to label %212 unwind label %230

212:                                              ; preds = %206, %211
  %213 = load %"class.std::vector"*, %"class.std::vector"** %36, align 8, !tbaa !10
  %214 = add nsw i64 %148, -1
  %215 = load i32*, i32** %107, align 8, !tbaa !3
  %216 = getelementptr inbounds i32, i32* %215, i64 %214
  %217 = load i32, i32* %216, align 4, !tbaa !14
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %213, i64 %148, i32 0, i32 0, i32 0, i32 0
  %220 = load i32*, i32** %219, align 8, !tbaa !3
  %221 = getelementptr inbounds i32, i32* %220, i64 %218
  %222 = load i32, i32* %221, align 4, !tbaa !14
  %223 = add nsw i32 %222, 1
  store i32 %223, i32* %221, align 4, !tbaa !14
  %224 = add nuw nsw i64 %148, 1
  %225 = add nuw nsw i32 %149, 1
  %226 = icmp eq i64 %224, %111
  br i1 %226, label %112, label %147, !llvm.loop !17

227:                                              ; preds = %160
  %228 = landingpad { i8*, i32 }
          cleanup
  %229 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %229) #11
  br label %407

230:                                              ; preds = %187, %211
  %231 = landingpad { i8*, i32 }
          cleanup
  br label %407

232:                                              ; preds = %185
  %233 = landingpad { i8*, i32 }
          cleanup
  br label %407

234:                                              ; preds = %112, %390
  %235 = phi i32 [ 1, %112 ], [ %391, %390 ]
  br i1 %114, label %286, label %288

236:                                              ; preds = %390
  %237 = sext i32 %0 to i64
  %238 = load %"class.std::vector"*, %"class.std::vector"** %36, align 8, !tbaa !10
  %239 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %238, i64 %237, i32 0, i32 0, i32 0, i32 0
  %240 = load i32*, i32** %239, align 8, !tbaa !3
  %241 = load i32, i32* %240, align 4, !tbaa !14
  %242 = load %"class.std::vector"*, %"class.std::vector"** %83, align 8, !tbaa !10
  %243 = load %"class.std::vector"*, %"class.std::vector"** %97, align 8, !tbaa !13
  %244 = icmp eq %"class.std::vector"* %242, %243
  br i1 %244, label %255, label %245

245:                                              ; preds = %236, %252
  %246 = phi %"class.std::vector"* [ %253, %252 ], [ %242, %236 ]
  %247 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %246, i64 0, i32 0, i32 0, i32 0, i32 0
  %248 = load i32*, i32** %247, align 8, !tbaa !3
  %249 = icmp eq i32* %248, null
  br i1 %249, label %252, label %250

250:                                              ; preds = %245
  %251 = bitcast i32* %248 to i8*
  call void @_ZdlPv(i8* nonnull %251) #11
  br label %252

252:                                              ; preds = %250, %245
  %253 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %246, i64 1
  %254 = icmp eq %"class.std::vector"* %253, %243
  br i1 %254, label %255, label %245, !llvm.loop !20

255:                                              ; preds = %252, %236
  %256 = load %"class.std::vector"*, %"class.std::vector"** %83, align 8, !tbaa !10
  %257 = icmp eq %"class.std::vector"* %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %255
  %259 = bitcast %"class.std::vector"* %256 to i8*
  call void @_ZdlPv(i8* nonnull %259) #11
  br label %260

260:                                              ; preds = %255, %258
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #11
  %261 = load %"class.std::vector"*, %"class.std::vector"** %36, align 8, !tbaa !10
  %262 = load %"class.std::vector"*, %"class.std::vector"** %50, align 8, !tbaa !13
  %263 = icmp eq %"class.std::vector"* %261, %262
  br i1 %263, label %274, label %264

264:                                              ; preds = %260, %271
  %265 = phi %"class.std::vector"* [ %272, %271 ], [ %261, %260 ]
  %266 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %265, i64 0, i32 0, i32 0, i32 0, i32 0
  %267 = load i32*, i32** %266, align 8, !tbaa !3
  %268 = icmp eq i32* %267, null
  br i1 %268, label %271, label %269

269:                                              ; preds = %264
  %270 = bitcast i32* %267 to i8*
  call void @_ZdlPv(i8* nonnull %270) #11
  br label %271

271:                                              ; preds = %269, %264
  %272 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %265, i64 1
  %273 = icmp eq %"class.std::vector"* %272, %262
  br i1 %273, label %274, label %264, !llvm.loop !20

274:                                              ; preds = %271, %260
  %275 = load %"class.std::vector"*, %"class.std::vector"** %36, align 8, !tbaa !10
  %276 = icmp eq %"class.std::vector"* %275, null
  br i1 %276, label %279, label %277

277:                                              ; preds = %274
  %278 = bitcast %"class.std::vector"* %275 to i8*
  call void @_ZdlPv(i8* nonnull %278) #11
  br label %279

279:                                              ; preds = %274, %277
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  %280 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %281 = load i32*, i32** %280, align 8, !tbaa !3
  %282 = icmp eq i32* %281, null
  br i1 %282, label %285, label %283

283:                                              ; preds = %279
  %284 = bitcast i32* %281 to i8*
  call void @_ZdlPv(i8* nonnull %284) #11
  br label %285

285:                                              ; preds = %279, %283
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  ret i32 %241

286:                                              ; preds = %368, %234
  %287 = invoke nonnull align 8 dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEaSERKS3_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %3, %"class.std::vector.0"* nonnull align 8 dereferenceable(24) %5)
          to label %371 unwind label %393

288:                                              ; preds = %234, %368
  %289 = phi i64 [ %369, %368 ], [ 1, %234 ]
  %290 = load %"class.std::vector"*, %"class.std::vector"** %97, align 8, !tbaa !13
  %291 = load %"class.std::vector"*, %"class.std::vector"** %83, align 8, !tbaa !10
  %292 = ptrtoint %"class.std::vector"* %290 to i64
  %293 = ptrtoint %"class.std::vector"* %291 to i64
  %294 = sub i64 %292, %293
  %295 = sdiv exact i64 %294, 24
  %296 = add nsw i64 %295, -1
  %297 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %291, i64 %296
  %298 = load %"class.std::vector"*, %"class.std::vector"** %86, align 8, !tbaa !12
  %299 = icmp eq %"class.std::vector"* %290, %298
  br i1 %299, label %339, label %300

300:                                              ; preds = %288
  %301 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %291, i64 %296, i32 0, i32 0, i32 0, i32 1
  %302 = load i32*, i32** %301, align 8, !tbaa !9
  %303 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %297, i64 0, i32 0, i32 0, i32 0, i32 0
  %304 = load i32*, i32** %303, align 8, !tbaa !3
  %305 = ptrtoint i32* %302 to i64
  %306 = ptrtoint i32* %304 to i64
  %307 = sub i64 %305, %306
  %308 = ashr exact i64 %307, 2
  %309 = bitcast %"class.std::vector"* %290 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %309, i8 0, i64 24, i1 false) #11
  %310 = icmp eq i64 %307, 0
  br i1 %310, label %319, label %311

311:                                              ; preds = %300
  %312 = icmp ugt i64 %308, 2305843009213693951
  br i1 %312, label %313, label %315

313:                                              ; preds = %311
  invoke void @_ZSt17__throw_bad_allocv() #13
          to label %314 unwind label %352

314:                                              ; preds = %313
  unreachable

315:                                              ; preds = %311
  %316 = invoke noalias nonnull i8* @_Znwm(i64 %307) #12
          to label %317 unwind label %350

317:                                              ; preds = %315
  %318 = bitcast i8* %316 to i32*
  br label %319

319:                                              ; preds = %317, %300
  %320 = phi i32* [ %318, %317 ], [ null, %300 ]
  %321 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %290, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* %320, i32** %321, align 8, !tbaa !3
  %322 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %290, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32* %320, i32** %322, align 8, !tbaa !9
  %323 = getelementptr inbounds i32, i32* %320, i64 %308
  %324 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %290, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32* %323, i32** %324, align 8, !tbaa !8
  %325 = load i32*, i32** %303, align 8, !tbaa !16
  %326 = load i32*, i32** %301, align 8, !tbaa !16
  %327 = ptrtoint i32* %326 to i64
  %328 = ptrtoint i32* %325 to i64
  %329 = sub i64 %327, %328
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %334, label %331

331:                                              ; preds = %319
  %332 = bitcast i32* %320 to i8*
  %333 = bitcast i32* %325 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %332, i8* align 4 %333, i64 %329, i1 false) #11
  br label %334

334:                                              ; preds = %331, %319
  %335 = ashr exact i64 %329, 2
  %336 = getelementptr inbounds i32, i32* %320, i64 %335
  store i32* %336, i32** %322, align 8, !tbaa !9
  %337 = load %"class.std::vector"*, %"class.std::vector"** %97, align 8, !tbaa !13
  %338 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %337, i64 1
  store %"class.std::vector"* %338, %"class.std::vector"** %97, align 8, !tbaa !13
  br label %340

339:                                              ; preds = %288
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %5, %"class.std::vector"* %290, %"class.std::vector"* nonnull align 8 dereferenceable(24) %297)
          to label %340 unwind label %350

340:                                              ; preds = %339, %334
  %341 = add nsw i64 %289, -1
  %342 = load %"class.std::vector"*, %"class.std::vector"** %36, align 8, !tbaa !10
  %343 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %342, i64 %341, i32 0, i32 0, i32 0, i32 0
  %344 = load i32*, i32** %343, align 8, !tbaa !3
  %345 = load %"class.std::vector"*, %"class.std::vector"** %83, align 8, !tbaa !10
  %346 = load i32*, i32** %113, align 8, !tbaa !3
  %347 = getelementptr inbounds i32, i32* %346, i64 %341
  %348 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %345, i64 %289, i32 0, i32 0, i32 0, i32 0
  %349 = load i32*, i32** %348, align 8, !tbaa !3
  br label %354

350:                                              ; preds = %315, %339
  %351 = landingpad { i8*, i32 }
          cleanup
  br label %407

352:                                              ; preds = %313
  %353 = landingpad { i8*, i32 }
          cleanup
  br label %407

354:                                              ; preds = %340, %354
  %355 = phi i64 [ 0, %340 ], [ %366, %354 ]
  %356 = getelementptr inbounds i32, i32* %344, i64 %355
  %357 = load i32, i32* %356, align 4, !tbaa !14
  %358 = load i32, i32* %347, align 4, !tbaa !14
  %359 = trunc i64 %355 to i32
  %360 = add nsw i32 %358, %359
  %361 = srem i32 %360, 3
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds i32, i32* %349, i64 %362
  %364 = load i32, i32* %363, align 4, !tbaa !14
  %365 = add nsw i32 %364, %357
  store i32 %365, i32* %363, align 4, !tbaa !14
  %366 = add nuw nsw i64 %355, 1
  %367 = icmp eq i64 %366, 3
  br i1 %367, label %368, label %354, !llvm.loop !21

368:                                              ; preds = %354
  %369 = add nuw nsw i64 %289, 1
  %370 = icmp eq i64 %369, %125
  br i1 %370, label %286, label %288, !llvm.loop !22

371:                                              ; preds = %286
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #11
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %117, i8 0, i64 24, i1 false) #11
  %372 = invoke noalias nonnull i8* @_Znwm(i64 12) #12
          to label %378 unwind label %373

373:                                              ; preds = %371
  %374 = landingpad { i8*, i32 }
          cleanup
  %375 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %8, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %376 = load i32*, i32** %375, align 8, !tbaa !3
  %377 = icmp eq i32* %376, null
  br i1 %377, label %404, label %400

378:                                              ; preds = %371
  %379 = bitcast i8* %372 to i32*
  store i8* %372, i8** %118, align 8, !tbaa !3
  %380 = getelementptr inbounds i8, i8* %372, i64 12
  store i8* %380, i8** %120, align 8, !tbaa !8
  store i32 0, i32* %379, align 4
  %381 = getelementptr inbounds i8, i8* %372, i64 4
  %382 = bitcast i8* %381 to i32*
  store i32 0, i32* %382, align 4
  %383 = getelementptr inbounds i8, i8* %372, i64 8
  %384 = bitcast i8* %383 to i32*
  store i32 0, i32* %384, align 4
  store i8* %380, i8** %122, align 8, !tbaa !9
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %5, %"class.std::vector"* nonnull %116, %"class.std::vector"* nonnull %123)
          to label %385 unwind label %395

385:                                              ; preds = %378
  %386 = load i32*, i32** %126, align 8, !tbaa !3
  %387 = icmp eq i32* %386, null
  br i1 %387, label %390, label %388

388:                                              ; preds = %385
  %389 = bitcast i32* %386 to i8*
  call void @_ZdlPv(i8* nonnull %389) #11
  br label %390

390:                                              ; preds = %388, %385
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #11
  %391 = add nuw nsw i32 %235, 1
  %392 = icmp eq i32 %391, 3
  br i1 %392, label %236, label %234, !llvm.loop !23

393:                                              ; preds = %286
  %394 = landingpad { i8*, i32 }
          cleanup
  br label %407

395:                                              ; preds = %378
  %396 = landingpad { i8*, i32 }
          cleanup
  %397 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %8, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %398 = load i32*, i32** %397, align 8, !tbaa !3
  %399 = icmp eq i32* %398, null
  br i1 %399, label %404, label %400

400:                                              ; preds = %395, %373
  %401 = phi i32* [ %376, %373 ], [ %398, %395 ]
  %402 = phi { i8*, i32 } [ %374, %373 ], [ %396, %395 ]
  %403 = bitcast i32* %401 to i8*
  call void @_ZdlPv(i8* nonnull %403) #11
  br label %404

404:                                              ; preds = %400, %395, %373
  %405 = phi { i8*, i32 } [ %374, %373 ], [ %396, %395 ], [ %402, %400 ]
  %406 = bitcast [1 x %"class.std::vector"]* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %406) #11
  br label %407

407:                                              ; preds = %350, %352, %230, %232, %393, %404, %227
  %408 = phi { i8*, i32 } [ %228, %227 ], [ %405, %404 ], [ %394, %393 ], [ %231, %230 ], [ %233, %232 ], [ %351, %350 ], [ %353, %352 ]
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %5) #11
  br label %409

409:                                              ; preds = %407, %145
  %410 = phi { i8*, i32 } [ %408, %407 ], [ %146, %145 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #11
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %3) #11
  br label %411

411:                                              ; preds = %409, %135
  %412 = phi { i8*, i32 } [ %410, %409 ], [ %136, %135 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  %413 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %414 = load i32*, i32** %413, align 8, !tbaa !3
  %415 = icmp eq i32* %414, null
  br i1 %415, label %418, label %416

416:                                              ; preds = %411
  %417 = bitcast i32* %414 to i8*
  call void @_ZdlPv(i8* nonnull %417) #11
  br label %418

418:                                              ; preds = %411, %416
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  resume { i8*, i32 } %412
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEaSERKS3_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %0, %"class.std::vector.0"* nonnull align 8 dereferenceable(24) %1) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = icmp eq %"class.std::vector.0"* %1, %0
  br i1 %3, label %109, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8, !tbaa !13
  %7 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8, !tbaa !10
  %9 = ptrtoint %"class.std::vector"* %6 to i64
  %10 = ptrtoint %"class.std::vector"* %8 to i64
  %11 = sub i64 %9, %10
  %12 = sdiv exact i64 %11, 24
  %13 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %14 = load %"class.std::vector"*, %"class.std::vector"** %13, align 8, !tbaa !12
  %15 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.std::vector"*, %"class.std::vector"** %15, align 8, !tbaa !10
  %17 = ptrtoint %"class.std::vector"* %14 to i64
  %18 = ptrtoint %"class.std::vector"* %16 to i64
  %19 = sub i64 %17, %18
  %20 = sdiv exact i64 %19, 24
  %21 = icmp ugt i64 %12, %20
  br i1 %21, label %22, label %45

22:                                               ; preds = %4
  %23 = call %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %0, i64 %12, %"class.std::vector"* %8, %"class.std::vector"* %6)
  %24 = load %"class.std::vector"*, %"class.std::vector"** %15, align 8, !tbaa !10
  %25 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = load %"class.std::vector"*, %"class.std::vector"** %25, align 8, !tbaa !13
  %27 = icmp eq %"class.std::vector"* %24, %26
  br i1 %27, label %38, label %28

28:                                               ; preds = %22, %35
  %29 = phi %"class.std::vector"* [ %36, %35 ], [ %24, %22 ]
  %30 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8, !tbaa !3
  %32 = icmp eq i32* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  %34 = bitcast i32* %31 to i8*
  call void @_ZdlPv(i8* nonnull %34) #11
  br label %35

35:                                               ; preds = %33, %28
  %36 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %29, i64 1
  %37 = icmp eq %"class.std::vector"* %36, %26
  br i1 %37, label %38, label %28, !llvm.loop !20

38:                                               ; preds = %35, %22
  %39 = load %"class.std::vector"*, %"class.std::vector"** %15, align 8, !tbaa !10
  %40 = icmp eq %"class.std::vector"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %38
  %42 = bitcast %"class.std::vector"* %39 to i8*
  call void @_ZdlPv(i8* nonnull %42) #11
  br label %43

43:                                               ; preds = %38, %41
  store %"class.std::vector"* %23, %"class.std::vector"** %15, align 8, !tbaa !10
  %44 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %23, i64 %12
  store %"class.std::vector"* %44, %"class.std::vector"** %13, align 8, !tbaa !12
  br label %105

45:                                               ; preds = %4
  %46 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %47 = load %"class.std::vector"*, %"class.std::vector"** %46, align 8, !tbaa !13
  %48 = ptrtoint %"class.std::vector"* %47 to i64
  %49 = sub i64 %48, %18
  %50 = sdiv exact i64 %49, 24
  %51 = icmp ult i64 %50, %12
  br i1 %51, label %81, label %52

52:                                               ; preds = %45
  %53 = icmp sgt i64 %11, 0
  br i1 %53, label %54, label %63

54:                                               ; preds = %52, %54
  %55 = phi i64 [ %61, %54 ], [ %12, %52 ]
  %56 = phi %"class.std::vector"* [ %60, %54 ], [ %16, %52 ]
  %57 = phi %"class.std::vector"* [ %59, %54 ], [ %8, %52 ]
  %58 = call nonnull align 8 dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIiSaIiEEaSERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %56, %"class.std::vector"* nonnull align 8 dereferenceable(24) %57)
  %59 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %57, i64 1
  %60 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %56, i64 1
  %61 = add nsw i64 %55, -1
  %62 = icmp sgt i64 %55, 1
  br i1 %62, label %54, label %63, !llvm.loop !24

63:                                               ; preds = %54, %52
  %64 = phi %"class.std::vector"* [ %16, %52 ], [ %60, %54 ]
  %65 = ptrtoint %"class.std::vector"* %64 to i64
  %66 = sub i64 %65, %18
  %67 = sdiv exact i64 %66, 24
  %68 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %16, i64 %67
  %69 = load %"class.std::vector"*, %"class.std::vector"** %46, align 8, !tbaa !16
  %70 = icmp eq %"class.std::vector"* %68, %69
  br i1 %70, label %105, label %71

71:                                               ; preds = %63, %78
  %72 = phi %"class.std::vector"* [ %79, %78 ], [ %68, %63 ]
  %73 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8, !tbaa !3
  %75 = icmp eq i32* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %71
  %77 = bitcast i32* %74 to i8*
  call void @_ZdlPv(i8* nonnull %77) #11
  br label %78

78:                                               ; preds = %76, %71
  %79 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %72, i64 1
  %80 = icmp eq %"class.std::vector"* %79, %69
  br i1 %80, label %105, label %71, !llvm.loop !25

81:                                               ; preds = %45
  %82 = icmp sgt i64 %49, 0
  br i1 %82, label %83, label %94

83:                                               ; preds = %81
  %84 = sdiv exact i64 %49, 24
  br label %85

85:                                               ; preds = %85, %83
  %86 = phi i64 [ %92, %85 ], [ %84, %83 ]
  %87 = phi %"class.std::vector"* [ %91, %85 ], [ %16, %83 ]
  %88 = phi %"class.std::vector"* [ %90, %85 ], [ %8, %83 ]
  %89 = call nonnull align 8 dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIiSaIiEEaSERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %87, %"class.std::vector"* nonnull align 8 dereferenceable(24) %88)
  %90 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %88, i64 1
  %91 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %87, i64 1
  %92 = add nsw i64 %86, -1
  %93 = icmp sgt i64 %86, 1
  br i1 %93, label %85, label %94, !llvm.loop !26

94:                                               ; preds = %85, %81
  %95 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8, !tbaa !10
  %96 = load %"class.std::vector"*, %"class.std::vector"** %46, align 8, !tbaa !13
  %97 = load %"class.std::vector"*, %"class.std::vector"** %15, align 8, !tbaa !10
  %98 = ptrtoint %"class.std::vector"* %96 to i64
  %99 = ptrtoint %"class.std::vector"* %97 to i64
  %100 = sub i64 %98, %99
  %101 = sdiv exact i64 %100, 24
  %102 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %95, i64 %101
  %103 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8, !tbaa !13
  %104 = call %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIiSaIiEES5_EET0_T_S7_S6_(%"class.std::vector"* %102, %"class.std::vector"* %103, %"class.std::vector"* %96)
  br label %105

105:                                              ; preds = %78, %63, %94, %43
  %106 = load %"class.std::vector"*, %"class.std::vector"** %15, align 8, !tbaa !10
  %107 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %106, i64 %12
  %108 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"class.std::vector"* %107, %"class.std::vector"** %108, align 8, !tbaa !13
  br label %109

109:                                              ; preds = %105, %2
  ret %"class.std::vector.0"* %0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8, !tbaa !10
  %4 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8, !tbaa !13
  %6 = icmp eq %"class.std::vector"* %3, %5
  br i1 %6, label %17, label %7

7:                                                ; preds = %1, %14
  %8 = phi %"class.std::vector"* [ %15, %14 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8, !tbaa !3
  %11 = icmp eq i32* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %7
  %13 = bitcast i32* %10 to i8*
  call void @_ZdlPv(i8* nonnull %13) #11
  br label %14

14:                                               ; preds = %12, %7
  %15 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %8, i64 1
  %16 = icmp eq %"class.std::vector"* %15, %5
  br i1 %16, label %17, label %7, !llvm.loop !20

17:                                               ; preds = %14, %1
  %18 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::vector"*, %"class.std::vector"** %18, align 8, !tbaa !10
  %20 = icmp eq %"class.std::vector"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.std::vector"* %19 to i8*
  call void @_ZdlPv(i8* nonnull %22) #11
  br label %23

23:                                               ; preds = %17, %21
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #3 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #11
  call void @_ZSt9terminatev() #14
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #5

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

; Function Attrs: uwtable
define linkonce_odr dso_local %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt6vectorIiSaIiEEPS4_EET0_T_S9_S8_(%"class.std::vector"* %0, %"class.std::vector"* %1, %"class.std::vector"* %2) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = icmp eq %"class.std::vector"* %0, %1
  br i1 %4, label %67, label %5

5:                                                ; preds = %3, %41
  %6 = phi %"class.std::vector"* [ %45, %41 ], [ %2, %3 ]
  %7 = phi %"class.std::vector"* [ %44, %41 ], [ %0, %3 ]
  %8 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32*, i32** %8, align 8, !tbaa !9
  %10 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8, !tbaa !3
  %12 = ptrtoint i32* %9 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = sub i64 %12, %13
  %15 = ashr exact i64 %14, 2
  %16 = bitcast %"class.std::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %16, i8 0, i64 24, i1 false) #11
  %17 = icmp eq i64 %14, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %5
  %19 = icmp ugt i64 %15, 2305843009213693951
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  invoke void @_ZSt17__throw_bad_allocv() #13
          to label %21 unwind label %49

21:                                               ; preds = %20
  unreachable

22:                                               ; preds = %18
  %23 = invoke noalias nonnull i8* @_Znwm(i64 %14) #12
          to label %24 unwind label %47

24:                                               ; preds = %22
  %25 = bitcast i8* %23 to i32*
  br label %26

26:                                               ; preds = %24, %5
  %27 = phi i32* [ %25, %24 ], [ null, %5 ]
  %28 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* %27, i32** %28, align 8, !tbaa !3
  %29 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32* %27, i32** %29, align 8, !tbaa !9
  %30 = getelementptr inbounds i32, i32* %27, i64 %15
  %31 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32* %30, i32** %31, align 8, !tbaa !8
  %32 = load i32*, i32** %10, align 8, !tbaa !16
  %33 = load i32*, i32** %8, align 8, !tbaa !16
  %34 = ptrtoint i32* %33 to i64
  %35 = ptrtoint i32* %32 to i64
  %36 = sub i64 %34, %35
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %26
  %39 = bitcast i32* %27 to i8*
  %40 = bitcast i32* %32 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 %36, i1 false) #11
  br label %41

41:                                               ; preds = %26, %38
  %42 = ashr exact i64 %36, 2
  %43 = getelementptr inbounds i32, i32* %27, i64 %42
  store i32* %43, i32** %29, align 8, !tbaa !9
  %44 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 1
  %45 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 1
  %46 = icmp eq %"class.std::vector"* %44, %1
  br i1 %46, label %67, label %5, !llvm.loop !27

47:                                               ; preds = %22
  %48 = landingpad { i8*, i32 }
          catch i8* null
  br label %51

49:                                               ; preds = %20
  %50 = landingpad { i8*, i32 }
          catch i8* null
  br label %51

51:                                               ; preds = %49, %47
  %52 = phi { i8*, i32 } [ %48, %47 ], [ %50, %49 ]
  %53 = extractvalue { i8*, i32 } %52, 0
  %54 = call i8* @__cxa_begin_catch(i8* %53) #11
  %55 = icmp eq %"class.std::vector"* %6, %2
  br i1 %55, label %66, label %56

56:                                               ; preds = %51, %63
  %57 = phi %"class.std::vector"* [ %64, %63 ], [ %2, %51 ]
  %58 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8, !tbaa !3
  %60 = icmp eq i32* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = bitcast i32* %59 to i8*
  call void @_ZdlPv(i8* nonnull %62) #11
  br label %63

63:                                               ; preds = %61, %56
  %64 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %57, i64 1
  %65 = icmp eq %"class.std::vector"* %64, %6
  br i1 %65, label %66, label %56, !llvm.loop !20

66:                                               ; preds = %63, %51
  invoke void @__cxa_rethrow() #13
          to label %75 unwind label %69

67:                                               ; preds = %41, %3
  %68 = phi %"class.std::vector"* [ %2, %3 ], [ %45, %41 ]
  ret %"class.std::vector"* %68

69:                                               ; preds = %66
  %70 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %71 unwind label %72

71:                                               ; preds = %69
  resume { i8*, i32 } %70

72:                                               ; preds = %69
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  call void @__clang_call_terminate(i8* %74) #14
  unreachable

75:                                               ; preds = %66
  unreachable
}

declare dso_local void @__cxa_rethrow() local_unnamed_addr

declare dso_local void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, i32* %1, i32* nonnull align 4 dereferenceable(4) %2) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8, !tbaa !9
  %6 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8, !tbaa !3
  %8 = ptrtoint i32* %5 to i64
  %9 = ptrtoint i32* %7 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 2
  %12 = icmp eq i64 %10, 9223372036854775804
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #13
  unreachable

14:                                               ; preds = %3
  %15 = icmp eq i64 %10, 0
  %16 = select i1 %15, i64 1, i64 %11
  %17 = add nsw i64 %16, %11
  %18 = icmp ult i64 %17, %11
  %19 = icmp ugt i64 %17, 2305843009213693951
  %20 = or i1 %18, %19
  %21 = select i1 %20, i64 2305843009213693951, i64 %17
  %22 = ptrtoint i32* %1 to i64
  %23 = sub i64 %22, %9
  %24 = ashr exact i64 %23, 2
  %25 = icmp eq i64 %21, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %14
  %27 = icmp ugt i64 %21, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

29:                                               ; preds = %26
  %30 = shl i64 %21, 2
  %31 = call noalias nonnull i8* @_Znwm(i64 %30) #12
  %32 = bitcast i8* %31 to i32*
  br label %33

33:                                               ; preds = %14, %29
  %34 = phi i32* [ %32, %29 ], [ null, %14 ]
  %35 = getelementptr inbounds i32, i32* %34, i64 %24
  %36 = load i32, i32* %2, align 4, !tbaa !14
  store i32 %36, i32* %35, align 4, !tbaa !14
  %37 = icmp sgt i64 %23, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = bitcast i32* %34 to i8*
  %40 = bitcast i32* %7 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 %23, i1 false) #11
  br label %41

41:                                               ; preds = %33, %38
  %42 = getelementptr inbounds i32, i32* %35, i64 1
  %43 = sub i64 %8, %22
  %44 = icmp sgt i64 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = bitcast i32* %42 to i8*
  %47 = bitcast i32* %1 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %46, i8* align 4 %47, i64 %43, i1 false) #11
  br label %48

48:                                               ; preds = %41, %45
  %49 = icmp eq i32* %7, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %48
  %51 = bitcast i32* %7 to i8*
  call void @_ZdlPv(i8* nonnull %51) #11
  br label %52

52:                                               ; preds = %48, %50
  %53 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %54 = ashr exact i64 %43, 2
  %55 = getelementptr inbounds i32, i32* %42, i64 %54
  store i32* %34, i32** %6, align 8, !tbaa !3
  store i32* %55, i32** %4, align 8, !tbaa !9
  %56 = getelementptr inbounds i32, i32* %34, i64 %21
  store i32* %56, i32** %53, align 8, !tbaa !8
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %0, %"class.std::vector"* %1, %"class.std::vector"* nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8, !tbaa !13
  %6 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8, !tbaa !10
  %8 = ptrtoint %"class.std::vector"* %5 to i64
  %9 = ptrtoint %"class.std::vector"* %7 to i64
  %10 = sub i64 %8, %9
  %11 = sdiv exact i64 %10, 24
  %12 = icmp eq i64 %10, 9223372036854775800
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #13
  unreachable

14:                                               ; preds = %3
  %15 = icmp eq i64 %10, 0
  %16 = select i1 %15, i64 1, i64 %11
  %17 = add nsw i64 %16, %11
  %18 = icmp ult i64 %17, %11
  %19 = icmp ugt i64 %17, 384307168202282325
  %20 = or i1 %18, %19
  %21 = select i1 %20, i64 384307168202282325, i64 %17
  %22 = ptrtoint %"class.std::vector"* %1 to i64
  %23 = sub i64 %22, %9
  %24 = sdiv exact i64 %23, 24
  %25 = icmp eq i64 %21, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %14
  %27 = icmp ugt i64 %21, 384307168202282325
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

29:                                               ; preds = %26
  %30 = mul i64 %21, 24
  %31 = call noalias nonnull i8* @_Znwm(i64 %30) #12
  %32 = bitcast i8* %31 to %"class.std::vector"*
  br label %33

33:                                               ; preds = %14, %29
  %34 = phi %"class.std::vector"* [ %32, %29 ], [ null, %14 ]
  %35 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %34, i64 %24
  %36 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i32*, i32** %36, align 8, !tbaa !9
  %38 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8, !tbaa !3
  %40 = ptrtoint i32* %37 to i64
  %41 = ptrtoint i32* %39 to i64
  %42 = sub i64 %40, %41
  %43 = ashr exact i64 %42, 2
  %44 = bitcast %"class.std::vector"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %44, i8 0, i64 24, i1 false) #11
  %45 = icmp eq i64 %42, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %33
  %47 = icmp ugt i64 %43, 2305843009213693951
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  invoke void @_ZSt17__throw_bad_allocv() #13
          to label %49 unwind label %127

49:                                               ; preds = %48
  unreachable

50:                                               ; preds = %46
  %51 = invoke noalias nonnull i8* @_Znwm(i64 %42) #12
          to label %52 unwind label %127

52:                                               ; preds = %50
  %53 = bitcast i8* %51 to i32*
  br label %54

54:                                               ; preds = %52, %33
  %55 = phi i32* [ %53, %52 ], [ null, %33 ]
  %56 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* %55, i32** %56, align 8, !tbaa !3
  %57 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %34, i64 %24, i32 0, i32 0, i32 0, i32 1
  store i32* %55, i32** %57, align 8, !tbaa !9
  %58 = getelementptr inbounds i32, i32* %55, i64 %43
  %59 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %34, i64 %24, i32 0, i32 0, i32 0, i32 2
  store i32* %58, i32** %59, align 8, !tbaa !8
  %60 = load i32*, i32** %38, align 8, !tbaa !16
  %61 = load i32*, i32** %36, align 8, !tbaa !16
  %62 = ptrtoint i32* %61 to i64
  %63 = ptrtoint i32* %60 to i64
  %64 = sub i64 %62, %63
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %54
  %67 = bitcast i32* %55 to i8*
  %68 = bitcast i32* %60 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %68, i64 %64, i1 false) #11
  br label %69

69:                                               ; preds = %54, %66
  %70 = ashr exact i64 %64, 2
  %71 = getelementptr inbounds i32, i32* %55, i64 %70
  store i32* %71, i32** %57, align 8, !tbaa !9
  %72 = icmp eq %"class.std::vector"* %7, %1
  br i1 %72, label %94, label %73

73:                                               ; preds = %69, %90
  %74 = phi %"class.std::vector"* [ %92, %90 ], [ %34, %69 ]
  %75 = phi %"class.std::vector"* [ %91, %90 ], [ %7, %69 ]
  %76 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i32*, i32** %77, align 8, !tbaa !3
  store i32* %78, i32** %76, align 8, !tbaa !3
  %79 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %74, i64 0, i32 0, i32 0, i32 0, i32 1
  %80 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %75, i64 0, i32 0, i32 0, i32 0, i32 1
  %81 = load i32*, i32** %80, align 8, !tbaa !9
  store i32* %81, i32** %79, align 8, !tbaa !9
  %82 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %74, i64 0, i32 0, i32 0, i32 0, i32 2
  %83 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %75, i64 0, i32 0, i32 0, i32 0, i32 2
  %84 = load i32*, i32** %83, align 8, !tbaa !8
  store i32* %84, i32** %82, align 8, !tbaa !8
  %85 = bitcast %"class.std::vector"* %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %85, i8 0, i64 24, i1 false) #11
  %86 = load i32*, i32** %77, align 8, !tbaa !3
  %87 = icmp eq i32* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %73
  %89 = bitcast i32* %86 to i8*
  call void @_ZdlPv(i8* nonnull %89) #11
  br label %90

90:                                               ; preds = %88, %73
  %91 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %75, i64 1
  %92 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %74, i64 1
  %93 = icmp eq %"class.std::vector"* %91, %1
  br i1 %93, label %94, label %73, !llvm.loop !28

94:                                               ; preds = %90, %69
  %95 = phi %"class.std::vector"* [ %34, %69 ], [ %92, %90 ]
  %96 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %95, i64 1
  %97 = icmp eq %"class.std::vector"* %5, %1
  br i1 %97, label %119, label %98

98:                                               ; preds = %94, %115
  %99 = phi %"class.std::vector"* [ %117, %115 ], [ %96, %94 ]
  %100 = phi %"class.std::vector"* [ %116, %115 ], [ %1, %94 ]
  %101 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %99, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %100, i64 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i32*, i32** %102, align 8, !tbaa !3
  store i32* %103, i32** %101, align 8, !tbaa !3
  %104 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %99, i64 0, i32 0, i32 0, i32 0, i32 1
  %105 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %100, i64 0, i32 0, i32 0, i32 0, i32 1
  %106 = load i32*, i32** %105, align 8, !tbaa !9
  store i32* %106, i32** %104, align 8, !tbaa !9
  %107 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %99, i64 0, i32 0, i32 0, i32 0, i32 2
  %108 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %100, i64 0, i32 0, i32 0, i32 0, i32 2
  %109 = load i32*, i32** %108, align 8, !tbaa !8
  store i32* %109, i32** %107, align 8, !tbaa !8
  %110 = bitcast %"class.std::vector"* %100 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %110, i8 0, i64 24, i1 false) #11
  %111 = load i32*, i32** %102, align 8, !tbaa !3
  %112 = icmp eq i32* %111, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %98
  %114 = bitcast i32* %111 to i8*
  call void @_ZdlPv(i8* nonnull %114) #11
  br label %115

115:                                              ; preds = %113, %98
  %116 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %100, i64 1
  %117 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %99, i64 1
  %118 = icmp eq %"class.std::vector"* %116, %5
  br i1 %118, label %119, label %98, !llvm.loop !28

119:                                              ; preds = %115, %94
  %120 = phi %"class.std::vector"* [ %96, %94 ], [ %117, %115 ]
  %121 = icmp eq %"class.std::vector"* %7, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %119
  %123 = bitcast %"class.std::vector"* %7 to i8*
  call void @_ZdlPv(i8* nonnull %123) #11
  br label %124

124:                                              ; preds = %119, %122
  %125 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store %"class.std::vector"* %34, %"class.std::vector"** %6, align 8, !tbaa !10
  store %"class.std::vector"* %120, %"class.std::vector"** %4, align 8, !tbaa !13
  %126 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %34, i64 %21
  store %"class.std::vector"* %126, %"class.std::vector"** %125, align 8, !tbaa !12
  ret void

127:                                              ; preds = %50, %48
  %128 = landingpad { i8*, i32 }
          catch i8* null
  %129 = extractvalue { i8*, i32 } %128, 0
  %130 = call i8* @__cxa_begin_catch(i8* %129) #11
  %131 = icmp eq %"class.std::vector"* %34, null
  br i1 %131, label %132, label %141

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i32*, i32** %133, align 8, !tbaa !3
  %135 = icmp eq i32* %134, null
  br i1 %135, label %140, label %136

136:                                              ; preds = %132
  %137 = bitcast i32* %134 to i8*
  call void @_ZdlPv(i8* nonnull %137) #11
  br label %140

138:                                              ; preds = %143
  %139 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %144 unwind label %145

140:                                              ; preds = %136, %132
  br i1 %131, label %143, label %141

141:                                              ; preds = %127, %140
  %142 = bitcast %"class.std::vector"* %34 to i8*
  call void @_ZdlPv(i8* nonnull %142) #11
  br label %143

143:                                              ; preds = %141, %140
  invoke void @__cxa_rethrow() #13
          to label %148 unwind label %138

144:                                              ; preds = %138
  resume { i8*, i32 } %139

145:                                              ; preds = %138
  %146 = landingpad { i8*, i32 }
          catch i8* null
  %147 = extractvalue { i8*, i32 } %146, 0
  call void @__clang_call_terminate(i8* %147) #14
  unreachable

148:                                              ; preds = %143
  unreachable
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %0, i64 %1, %"class.std::vector"* %2, %"class.std::vector"* %3) local_unnamed_addr #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %4
  %7 = icmp ugt i64 %1, 384307168202282325
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

9:                                                ; preds = %6
  %10 = mul i64 %1, 24
  %11 = call noalias nonnull i8* @_Znwm(i64 %10) #12
  %12 = bitcast i8* %11 to %"class.std::vector"*
  br label %13

13:                                               ; preds = %4, %9
  %14 = phi %"class.std::vector"* [ %12, %9 ], [ null, %4 ]
  %15 = invoke %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIiSaIiEES4_IS6_SaIS6_EEEEPS6_EET0_T_SE_SD_(%"class.std::vector"* %2, %"class.std::vector"* %3, %"class.std::vector"* %14)
          to label %16 unwind label %17

16:                                               ; preds = %13
  ret %"class.std::vector"* %14

17:                                               ; preds = %13
  %18 = landingpad { i8*, i32 }
          catch i8* null
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = call i8* @__cxa_begin_catch(i8* %19) #11
  %21 = icmp eq %"class.std::vector"* %14, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.std::vector"* %14 to i8*
  call void @_ZdlPv(i8* nonnull %23) #11
  br label %24

24:                                               ; preds = %22, %17
  invoke void @__cxa_rethrow() #13
          to label %31 unwind label %25

25:                                               ; preds = %24
  %26 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %27 unwind label %28

27:                                               ; preds = %25
  resume { i8*, i32 } %26

28:                                               ; preds = %25
  %29 = landingpad { i8*, i32 }
          catch i8* null
  %30 = extractvalue { i8*, i32 } %29, 0
  call void @__clang_call_terminate(i8* %30) #14
  unreachable

31:                                               ; preds = %24
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIiSaIiEES4_IS6_SaIS6_EEEEPS6_EET0_T_SE_SD_(%"class.std::vector"* %0, %"class.std::vector"* %1, %"class.std::vector"* %2) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = icmp eq %"class.std::vector"* %0, %1
  br i1 %4, label %67, label %5

5:                                                ; preds = %3, %41
  %6 = phi %"class.std::vector"* [ %45, %41 ], [ %2, %3 ]
  %7 = phi %"class.std::vector"* [ %44, %41 ], [ %0, %3 ]
  %8 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32*, i32** %8, align 8, !tbaa !9
  %10 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8, !tbaa !3
  %12 = ptrtoint i32* %9 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = sub i64 %12, %13
  %15 = ashr exact i64 %14, 2
  %16 = bitcast %"class.std::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %16, i8 0, i64 24, i1 false) #11
  %17 = icmp eq i64 %14, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %5
  %19 = icmp ugt i64 %15, 2305843009213693951
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  invoke void @_ZSt17__throw_bad_allocv() #13
          to label %21 unwind label %49

21:                                               ; preds = %20
  unreachable

22:                                               ; preds = %18
  %23 = invoke noalias nonnull i8* @_Znwm(i64 %14) #12
          to label %24 unwind label %47

24:                                               ; preds = %22
  %25 = bitcast i8* %23 to i32*
  br label %26

26:                                               ; preds = %24, %5
  %27 = phi i32* [ %25, %24 ], [ null, %5 ]
  %28 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* %27, i32** %28, align 8, !tbaa !3
  %29 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32* %27, i32** %29, align 8, !tbaa !9
  %30 = getelementptr inbounds i32, i32* %27, i64 %15
  %31 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32* %30, i32** %31, align 8, !tbaa !8
  %32 = load i32*, i32** %10, align 8, !tbaa !16
  %33 = load i32*, i32** %8, align 8, !tbaa !16
  %34 = ptrtoint i32* %33 to i64
  %35 = ptrtoint i32* %32 to i64
  %36 = sub i64 %34, %35
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %26
  %39 = bitcast i32* %27 to i8*
  %40 = bitcast i32* %32 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 %36, i1 false) #11
  br label %41

41:                                               ; preds = %26, %38
  %42 = ashr exact i64 %36, 2
  %43 = getelementptr inbounds i32, i32* %27, i64 %42
  store i32* %43, i32** %29, align 8, !tbaa !9
  %44 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 1
  %45 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 1
  %46 = icmp eq %"class.std::vector"* %44, %1
  br i1 %46, label %67, label %5, !llvm.loop !29

47:                                               ; preds = %22
  %48 = landingpad { i8*, i32 }
          catch i8* null
  br label %51

49:                                               ; preds = %20
  %50 = landingpad { i8*, i32 }
          catch i8* null
  br label %51

51:                                               ; preds = %49, %47
  %52 = phi { i8*, i32 } [ %48, %47 ], [ %50, %49 ]
  %53 = extractvalue { i8*, i32 } %52, 0
  %54 = call i8* @__cxa_begin_catch(i8* %53) #11
  %55 = icmp eq %"class.std::vector"* %6, %2
  br i1 %55, label %66, label %56

56:                                               ; preds = %51, %63
  %57 = phi %"class.std::vector"* [ %64, %63 ], [ %2, %51 ]
  %58 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8, !tbaa !3
  %60 = icmp eq i32* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = bitcast i32* %59 to i8*
  call void @_ZdlPv(i8* nonnull %62) #11
  br label %63

63:                                               ; preds = %61, %56
  %64 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %57, i64 1
  %65 = icmp eq %"class.std::vector"* %64, %6
  br i1 %65, label %66, label %56, !llvm.loop !20

66:                                               ; preds = %63, %51
  invoke void @__cxa_rethrow() #13
          to label %75 unwind label %69

67:                                               ; preds = %41, %3
  %68 = phi %"class.std::vector"* [ %2, %3 ], [ %45, %41 ]
  ret %"class.std::vector"* %68

69:                                               ; preds = %66
  %70 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %71 unwind label %72

71:                                               ; preds = %69
  resume { i8*, i32 } %70

72:                                               ; preds = %69
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  call void @__clang_call_terminate(i8* %74) #14
  unreachable

75:                                               ; preds = %66
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIiSaIiEEaSERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %"class.std::vector"* nonnull align 8 dereferenceable(24) %1) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = icmp eq %"class.std::vector"* %1, %0
  br i1 %3, label %77, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8, !tbaa !9
  %7 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8, !tbaa !3
  %9 = ptrtoint i32* %6 to i64
  %10 = ptrtoint i32* %8 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 2
  %13 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %14 = load i32*, i32** %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8, !tbaa !3
  %17 = ptrtoint i32* %14 to i64
  %18 = ptrtoint i32* %16 to i64
  %19 = sub i64 %17, %18
  %20 = ashr exact i64 %19, 2
  %21 = icmp ugt i64 %12, %20
  br i1 %21, label %22, label %39

22:                                               ; preds = %4
  %23 = icmp ugt i64 %12, 2305843009213693951
  br i1 %23, label %24, label %25

24:                                               ; preds = %22
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

25:                                               ; preds = %22
  %26 = call noalias nonnull i8* @_Znwm(i64 %11) #12
  %27 = bitcast i8* %26 to i32*
  %28 = icmp eq i64 %11, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = bitcast i32* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %26, i8* align 4 %30, i64 %11, i1 false) #11
  br label %31

31:                                               ; preds = %25, %29
  %32 = load i32*, i32** %15, align 8, !tbaa !3
  %33 = icmp eq i32* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = bitcast i32* %32 to i8*
  call void @_ZdlPv(i8* nonnull %35) #11
  br label %36

36:                                               ; preds = %31, %34
  %37 = bitcast %"class.std::vector"* %0 to i8**
  store i8* %26, i8** %37, align 8, !tbaa !3
  %38 = getelementptr inbounds i32, i32* %27, i64 %12
  store i32* %38, i32** %13, align 8, !tbaa !8
  br label %73

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i32*, i32** %40, align 8, !tbaa !9
  %42 = ptrtoint i32* %41 to i64
  %43 = sub i64 %42, %18
  %44 = ashr exact i64 %43, 2
  %45 = icmp ult i64 %44, %12
  br i1 %45, label %51, label %46

46:                                               ; preds = %39
  %47 = icmp eq i64 %11, 0
  br i1 %47, label %73, label %48

48:                                               ; preds = %46
  %49 = bitcast i32* %16 to i8*
  %50 = bitcast i32* %8 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %50, i64 %11, i1 false) #11
  br label %73

51:                                               ; preds = %39
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %51
  %54 = bitcast i32* %16 to i8*
  %55 = bitcast i32* %8 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %54, i8* align 4 %55, i64 %43, i1 false) #11
  br label %56

56:                                               ; preds = %51, %53
  %57 = load i32*, i32** %7, align 8, !tbaa !3
  %58 = load i32*, i32** %40, align 8, !tbaa !9
  %59 = load i32*, i32** %15, align 8, !tbaa !3
  %60 = ptrtoint i32* %58 to i64
  %61 = ptrtoint i32* %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 2
  %64 = getelementptr inbounds i32, i32* %57, i64 %63
  %65 = load i32*, i32** %5, align 8, !tbaa !9
  %66 = ptrtoint i32* %65 to i64
  %67 = ptrtoint i32* %64 to i64
  %68 = sub i64 %66, %67
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %56
  %71 = bitcast i32* %58 to i8*
  %72 = bitcast i32* %64 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %72, i64 %68, i1 false) #11
  br label %73

73:                                               ; preds = %70, %56, %48, %46, %36
  %74 = load i32*, i32** %15, align 8, !tbaa !3
  %75 = getelementptr inbounds i32, i32* %74, i64 %12
  %76 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32* %75, i32** %76, align 8, !tbaa !9
  br label %77

77:                                               ; preds = %73, %2
  ret %"class.std::vector"* %0
}

; Function Attrs: uwtable
define linkonce_odr dso_local %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIiSaIiEES5_EET0_T_S7_S6_(%"class.std::vector"* %0, %"class.std::vector"* %1, %"class.std::vector"* %2) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = icmp eq %"class.std::vector"* %0, %1
  br i1 %4, label %67, label %5

5:                                                ; preds = %3, %41
  %6 = phi %"class.std::vector"* [ %45, %41 ], [ %2, %3 ]
  %7 = phi %"class.std::vector"* [ %44, %41 ], [ %0, %3 ]
  %8 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32*, i32** %8, align 8, !tbaa !9
  %10 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8, !tbaa !3
  %12 = ptrtoint i32* %9 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = sub i64 %12, %13
  %15 = ashr exact i64 %14, 2
  %16 = bitcast %"class.std::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %16, i8 0, i64 24, i1 false) #11
  %17 = icmp eq i64 %14, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %5
  %19 = icmp ugt i64 %15, 2305843009213693951
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  invoke void @_ZSt17__throw_bad_allocv() #13
          to label %21 unwind label %49

21:                                               ; preds = %20
  unreachable

22:                                               ; preds = %18
  %23 = invoke noalias nonnull i8* @_Znwm(i64 %14) #12
          to label %24 unwind label %47

24:                                               ; preds = %22
  %25 = bitcast i8* %23 to i32*
  br label %26

26:                                               ; preds = %24, %5
  %27 = phi i32* [ %25, %24 ], [ null, %5 ]
  %28 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* %27, i32** %28, align 8, !tbaa !3
  %29 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32* %27, i32** %29, align 8, !tbaa !9
  %30 = getelementptr inbounds i32, i32* %27, i64 %15
  %31 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32* %30, i32** %31, align 8, !tbaa !8
  %32 = load i32*, i32** %10, align 8, !tbaa !16
  %33 = load i32*, i32** %8, align 8, !tbaa !16
  %34 = ptrtoint i32* %33 to i64
  %35 = ptrtoint i32* %32 to i64
  %36 = sub i64 %34, %35
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %26
  %39 = bitcast i32* %27 to i8*
  %40 = bitcast i32* %32 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 %36, i1 false) #11
  br label %41

41:                                               ; preds = %26, %38
  %42 = ashr exact i64 %36, 2
  %43 = getelementptr inbounds i32, i32* %27, i64 %42
  store i32* %43, i32** %29, align 8, !tbaa !9
  %44 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 1
  %45 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 1
  %46 = icmp eq %"class.std::vector"* %44, %1
  br i1 %46, label %67, label %5, !llvm.loop !30

47:                                               ; preds = %22
  %48 = landingpad { i8*, i32 }
          catch i8* null
  br label %51

49:                                               ; preds = %20
  %50 = landingpad { i8*, i32 }
          catch i8* null
  br label %51

51:                                               ; preds = %49, %47
  %52 = phi { i8*, i32 } [ %48, %47 ], [ %50, %49 ]
  %53 = extractvalue { i8*, i32 } %52, 0
  %54 = call i8* @__cxa_begin_catch(i8* %53) #11
  %55 = icmp eq %"class.std::vector"* %6, %2
  br i1 %55, label %66, label %56

56:                                               ; preds = %51, %63
  %57 = phi %"class.std::vector"* [ %64, %63 ], [ %2, %51 ]
  %58 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8, !tbaa !3
  %60 = icmp eq i32* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = bitcast i32* %59 to i8*
  call void @_ZdlPv(i8* nonnull %62) #11
  br label %63

63:                                               ; preds = %61, %56
  %64 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %57, i64 1
  %65 = icmp eq %"class.std::vector"* %64, %6
  br i1 %65, label %66, label %56, !llvm.loop !20

66:                                               ; preds = %63, %51
  invoke void @__cxa_rethrow() #13
          to label %75 unwind label %69

67:                                               ; preds = %41, %3
  %68 = phi %"class.std::vector"* [ %2, %3 ], [ %45, %41 ]
  ret %"class.std::vector"* %68

69:                                               ; preds = %66
  %70 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %71 unwind label %72

71:                                               ; preds = %69
  resume { i8*, i32 } %70

72:                                               ; preds = %69
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  call void @__clang_call_terminate(i8* %74) #14
  unreachable

75:                                               ; preds = %66
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %0, %"class.std::vector"* %1, %"class.std::vector"* %2) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = ptrtoint %"class.std::vector"* %2 to i64
  %5 = ptrtoint %"class.std::vector"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8, !tbaa !12
  %10 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.std::vector"*, %"class.std::vector"** %10, align 8, !tbaa !10
  %12 = ptrtoint %"class.std::vector"* %9 to i64
  %13 = ptrtoint %"class.std::vector"* %11 to i64
  %14 = sub i64 %12, %13
  %15 = sdiv exact i64 %14, 24
  %16 = icmp ugt i64 %7, %15
  br i1 %16, label %17, label %43

17:                                               ; preds = %3
  %18 = icmp ugt i64 %7, 384307168202282325
  br i1 %18, label %19, label %20

19:                                               ; preds = %17
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

20:                                               ; preds = %17
  %21 = call %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE20_M_allocate_and_copyIPKS1_EEPS1_mT_S8_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %0, i64 %7, %"class.std::vector"* %1, %"class.std::vector"* %2)
  %22 = load %"class.std::vector"*, %"class.std::vector"** %10, align 8, !tbaa !10
  %23 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = load %"class.std::vector"*, %"class.std::vector"** %23, align 8, !tbaa !13
  %25 = icmp eq %"class.std::vector"* %22, %24
  br i1 %25, label %36, label %26

26:                                               ; preds = %20, %33
  %27 = phi %"class.std::vector"* [ %34, %33 ], [ %22, %20 ]
  %28 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8, !tbaa !3
  %30 = icmp eq i32* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  %32 = bitcast i32* %29 to i8*
  call void @_ZdlPv(i8* nonnull %32) #11
  br label %33

33:                                               ; preds = %31, %26
  %34 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %27, i64 1
  %35 = icmp eq %"class.std::vector"* %34, %24
  br i1 %35, label %36, label %26, !llvm.loop !20

36:                                               ; preds = %33, %20
  %37 = load %"class.std::vector"*, %"class.std::vector"** %10, align 8, !tbaa !10
  %38 = icmp eq %"class.std::vector"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %36
  %40 = bitcast %"class.std::vector"* %37 to i8*
  call void @_ZdlPv(i8* nonnull %40) #11
  br label %41

41:                                               ; preds = %36, %39
  store %"class.std::vector"* %21, %"class.std::vector"** %10, align 8, !tbaa !10
  %42 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %21, i64 %7
  store %"class.std::vector"* %42, %"class.std::vector"** %23, align 8, !tbaa !13
  store %"class.std::vector"* %42, %"class.std::vector"** %8, align 8, !tbaa !12
  br label %93

43:                                               ; preds = %3
  %44 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %45 = load %"class.std::vector"*, %"class.std::vector"** %44, align 8, !tbaa !13
  %46 = ptrtoint %"class.std::vector"* %45 to i64
  %47 = sub i64 %46, %13
  %48 = sdiv exact i64 %47, 24
  %49 = icmp ult i64 %48, %7
  br i1 %49, label %76, label %50

50:                                               ; preds = %43
  %51 = icmp sgt i64 %6, 0
  br i1 %51, label %52, label %61

52:                                               ; preds = %50, %52
  %53 = phi i64 [ %59, %52 ], [ %7, %50 ]
  %54 = phi %"class.std::vector"* [ %58, %52 ], [ %11, %50 ]
  %55 = phi %"class.std::vector"* [ %57, %52 ], [ %1, %50 ]
  %56 = call nonnull align 8 dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIiSaIiEEaSERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %54, %"class.std::vector"* nonnull align 8 dereferenceable(24) %55)
  %57 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %55, i64 1
  %58 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %54, i64 1
  %59 = add nsw i64 %53, -1
  %60 = icmp sgt i64 %53, 1
  br i1 %60, label %52, label %61, !llvm.loop !24

61:                                               ; preds = %52, %50
  %62 = phi %"class.std::vector"* [ %11, %50 ], [ %58, %52 ]
  %63 = load %"class.std::vector"*, %"class.std::vector"** %44, align 8, !tbaa !13
  %64 = icmp eq %"class.std::vector"* %63, %62
  br i1 %64, label %93, label %65

65:                                               ; preds = %61, %72
  %66 = phi %"class.std::vector"* [ %73, %72 ], [ %62, %61 ]
  %67 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %66, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i32*, i32** %67, align 8, !tbaa !3
  %69 = icmp eq i32* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  %71 = bitcast i32* %68 to i8*
  call void @_ZdlPv(i8* nonnull %71) #11
  br label %72

72:                                               ; preds = %70, %65
  %73 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %66, i64 1
  %74 = icmp eq %"class.std::vector"* %73, %63
  br i1 %74, label %75, label %65, !llvm.loop !20

75:                                               ; preds = %72
  store %"class.std::vector"* %62, %"class.std::vector"** %44, align 8, !tbaa !13
  br label %93

76:                                               ; preds = %43
  %77 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 %48
  %78 = icmp sgt i64 %47, 0
  br i1 %78, label %79, label %90

79:                                               ; preds = %76
  %80 = sdiv exact i64 %47, 24
  br label %81

81:                                               ; preds = %81, %79
  %82 = phi i64 [ %88, %81 ], [ %80, %79 ]
  %83 = phi %"class.std::vector"* [ %87, %81 ], [ %11, %79 ]
  %84 = phi %"class.std::vector"* [ %86, %81 ], [ %1, %79 ]
  %85 = call nonnull align 8 dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIiSaIiEEaSERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %83, %"class.std::vector"* nonnull align 8 dereferenceable(24) %84)
  %86 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %84, i64 1
  %87 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %83, i64 1
  %88 = add nsw i64 %82, -1
  %89 = icmp sgt i64 %82, 1
  br i1 %89, label %81, label %90, !llvm.loop !24

90:                                               ; preds = %81, %76
  %91 = load %"class.std::vector"*, %"class.std::vector"** %44, align 8, !tbaa !13
  %92 = call %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt6vectorIiSaIiEEPS4_EET0_T_S9_S8_(%"class.std::vector"* %77, %"class.std::vector"* %2, %"class.std::vector"* %91)
  store %"class.std::vector"* %92, %"class.std::vector"** %44, align 8, !tbaa !13
  br label %93

93:                                               ; preds = %75, %61, %90, %41
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE20_M_allocate_and_copyIPKS1_EEPS1_mT_S8_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %0, i64 %1, %"class.std::vector"* %2, %"class.std::vector"* %3) local_unnamed_addr #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %4
  %7 = icmp ugt i64 %1, 384307168202282325
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

9:                                                ; preds = %6
  %10 = mul i64 %1, 24
  %11 = call noalias nonnull i8* @_Znwm(i64 %10) #12
  %12 = bitcast i8* %11 to %"class.std::vector"*
  br label %13

13:                                               ; preds = %4, %9
  %14 = phi %"class.std::vector"* [ %12, %9 ], [ null, %4 ]
  %15 = invoke %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt6vectorIiSaIiEEPS4_EET0_T_S9_S8_(%"class.std::vector"* %2, %"class.std::vector"* %3, %"class.std::vector"* %14)
          to label %16 unwind label %17

16:                                               ; preds = %13
  ret %"class.std::vector"* %14

17:                                               ; preds = %13
  %18 = landingpad { i8*, i32 }
          catch i8* null
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = call i8* @__cxa_begin_catch(i8* %19) #11
  %21 = icmp eq %"class.std::vector"* %14, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.std::vector"* %14 to i8*
  call void @_ZdlPv(i8* nonnull %23) #11
  br label %24

24:                                               ; preds = %22, %17
  invoke void @__cxa_rethrow() #13
          to label %31 unwind label %25

25:                                               ; preds = %24
  %26 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %27 unwind label %28

27:                                               ; preds = %25
  resume { i8*, i32 } %26

28:                                               ; preds = %25
  %29 = landingpad { i8*, i32 }
          catch i8* null
  %30 = extractvalue { i8*, i32 } %29, 0
  call void @__clang_call_terminate(i8* %30) #14
  unreachable

31:                                               ; preds = %24
  unreachable
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #10

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { noinline noreturn nounwind }
attributes #4 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #8 = { mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { argmemonly nofree nounwind willreturn writeonly }
attributes #10 = { argmemonly nofree nounwind willreturn }
attributes #11 = { nounwind }
attributes #12 = { allocsize(0) }
attributes #13 = { noreturn }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!4, !5, i64 16}
!9 = !{!4, !5, i64 8}
!10 = !{!11, !5, i64 0}
!11 = !{!"_ZTSNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!12 = !{!11, !5, i64 16}
!13 = !{!11, !5, i64 8}
!14 = !{!15, !15, i64 0}
!15 = !{!"int", !6, i64 0}
!16 = !{!5, !5, i64 0}
!17 = distinct !{!17, !18, !19}
!18 = !{!"llvm.loop.mustprogress"}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = distinct !{!20, !18, !19}
!21 = distinct !{!21, !18, !19}
!22 = distinct !{!22, !18, !19}
!23 = distinct !{!23, !18, !19}
!24 = distinct !{!24, !18, !19}
!25 = distinct !{!25, !18, !19}
!26 = distinct !{!26, !18, !19}
!27 = distinct !{!27, !18, !19}
!28 = distinct !{!28, !18, !19}
!29 = distinct !{!29, !18, !19}
!30 = distinct !{!30, !18, !19}
