; ModuleID = '../../Human_xBenchmarks_164/CPP_54/CPP_54.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_54/CPP_54.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: nofree nosync nounwind readonly uwtable
define dso_local zeroext i1 @_Z10same_charsNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_(%"class.std::__cxx11::basic_string"* nocapture readonly %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8, !tbaa !3
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !tbaa !10
  %11 = load i64, i64* %8, align 8, !tbaa !3
  %12 = getelementptr inbounds i8, i8* %10, i64 %11
  %13 = load i8*, i8** %7, align 8, !tbaa !10
  %14 = ptrtoint i8* %12 to i64
  %15 = icmp sgt i64 %11, 3
  %16 = ashr i64 %11, 2
  br label %32

17:                                               ; preds = %87
  %18 = icmp eq i64 %90, %4
  br i1 %18, label %19, label %32, !llvm.loop !11

19:                                               ; preds = %17, %2
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %21 = load i64, i64* %20, align 8, !tbaa !3
  %22 = icmp sgt i64 %4, 3
  %23 = ashr i64 %4, 2
  %24 = icmp ne i64 %21, 0
  br i1 %24, label %25, label %154

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !tbaa !10
  %29 = getelementptr inbounds i8, i8* %28, i64 %4
  %30 = load i8*, i8** %26, align 8, !tbaa !10
  %31 = ptrtoint i8* %29 to i64
  br label %94

32:                                               ; preds = %6, %17
  %33 = phi i64 [ 0, %6 ], [ %90, %17 ]
  %34 = getelementptr inbounds i8, i8* %13, i64 %33
  br i1 %15, label %35, label %58

35:                                               ; preds = %32
  %36 = load i8, i8* %34, align 1, !tbaa !14
  br label %37

37:                                               ; preds = %54, %35
  %38 = phi i64 [ %16, %35 ], [ %56, %54 ]
  %39 = phi i8* [ %10, %35 ], [ %55, %54 ]
  %40 = load i8, i8* %39, align 1, !tbaa !14
  %41 = icmp eq i8 %40, %36
  br i1 %41, label %87, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds i8, i8* %39, i64 1
  %44 = load i8, i8* %43, align 1, !tbaa !14
  %45 = icmp eq i8 %44, %36
  br i1 %45, label %81, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds i8, i8* %39, i64 2
  %48 = load i8, i8* %47, align 1, !tbaa !14
  %49 = icmp eq i8 %48, %36
  br i1 %49, label %83, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds i8, i8* %39, i64 3
  %52 = load i8, i8* %51, align 1, !tbaa !14
  %53 = icmp eq i8 %52, %36
  br i1 %53, label %85, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds i8, i8* %39, i64 4
  %56 = add nsw i64 %38, -1
  %57 = icmp sgt i64 %38, 1
  br i1 %57, label %37, label %58, !llvm.loop !15

58:                                               ; preds = %54, %32
  %59 = phi i8* [ %10, %32 ], [ %55, %54 ]
  %60 = ptrtoint i8* %59 to i64
  %61 = sub i64 %14, %60
  switch i64 %61, label %80 [
    i64 3, label %62
    i64 2, label %68
    i64 1, label %75
  ]

62:                                               ; preds = %58
  %63 = load i8, i8* %59, align 1, !tbaa !14
  %64 = load i8, i8* %34, align 1, !tbaa !14
  %65 = icmp eq i8 %63, %64
  br i1 %65, label %87, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds i8, i8* %59, i64 1
  br label %68

68:                                               ; preds = %66, %58
  %69 = phi i8* [ %59, %58 ], [ %67, %66 ]
  %70 = load i8, i8* %69, align 1, !tbaa !14
  %71 = load i8, i8* %34, align 1, !tbaa !14
  %72 = icmp eq i8 %70, %71
  br i1 %72, label %87, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds i8, i8* %69, i64 1
  br label %75

75:                                               ; preds = %73, %58
  %76 = phi i8* [ %59, %58 ], [ %74, %73 ]
  %77 = load i8, i8* %76, align 1, !tbaa !14
  %78 = load i8, i8* %34, align 1, !tbaa !14
  %79 = icmp eq i8 %77, %78
  br i1 %79, label %87, label %80

80:                                               ; preds = %75, %58
  br label %87

81:                                               ; preds = %42
  %82 = getelementptr inbounds i8, i8* %39, i64 1
  br label %87

83:                                               ; preds = %46
  %84 = getelementptr inbounds i8, i8* %39, i64 2
  br label %87

85:                                               ; preds = %50
  %86 = getelementptr inbounds i8, i8* %39, i64 3
  br label %87

87:                                               ; preds = %37, %81, %83, %85, %62, %68, %75, %80
  %88 = phi i8* [ %12, %80 ], [ %59, %62 ], [ %69, %68 ], [ %76, %75 ], [ %82, %81 ], [ %84, %83 ], [ %86, %85 ], [ %39, %37 ]
  %89 = icmp eq i8* %88, %12
  %90 = add nuw i64 %33, 1
  br i1 %89, label %157, label %17

91:                                               ; preds = %150
  %92 = icmp ugt i64 %21, %153
  %93 = icmp eq i64 %153, %21
  br i1 %93, label %154, label %94, !llvm.loop !16

94:                                               ; preds = %25, %91
  %95 = phi i64 [ 0, %25 ], [ %153, %91 ]
  %96 = phi i1 [ %24, %25 ], [ %92, %91 ]
  %97 = getelementptr inbounds i8, i8* %30, i64 %95
  br i1 %22, label %98, label %121

98:                                               ; preds = %94
  %99 = load i8, i8* %97, align 1, !tbaa !14
  br label %100

100:                                              ; preds = %117, %98
  %101 = phi i64 [ %23, %98 ], [ %119, %117 ]
  %102 = phi i8* [ %28, %98 ], [ %118, %117 ]
  %103 = load i8, i8* %102, align 1, !tbaa !14
  %104 = icmp eq i8 %103, %99
  br i1 %104, label %150, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds i8, i8* %102, i64 1
  %107 = load i8, i8* %106, align 1, !tbaa !14
  %108 = icmp eq i8 %107, %99
  br i1 %108, label %144, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds i8, i8* %102, i64 2
  %111 = load i8, i8* %110, align 1, !tbaa !14
  %112 = icmp eq i8 %111, %99
  br i1 %112, label %146, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds i8, i8* %102, i64 3
  %115 = load i8, i8* %114, align 1, !tbaa !14
  %116 = icmp eq i8 %115, %99
  br i1 %116, label %148, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds i8, i8* %102, i64 4
  %119 = add nsw i64 %101, -1
  %120 = icmp sgt i64 %101, 1
  br i1 %120, label %100, label %121, !llvm.loop !15

121:                                              ; preds = %117, %94
  %122 = phi i8* [ %28, %94 ], [ %118, %117 ]
  %123 = ptrtoint i8* %122 to i64
  %124 = sub i64 %31, %123
  switch i64 %124, label %143 [
    i64 3, label %125
    i64 2, label %131
    i64 1, label %138
  ]

125:                                              ; preds = %121
  %126 = load i8, i8* %122, align 1, !tbaa !14
  %127 = load i8, i8* %97, align 1, !tbaa !14
  %128 = icmp eq i8 %126, %127
  br i1 %128, label %150, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds i8, i8* %122, i64 1
  br label %131

131:                                              ; preds = %129, %121
  %132 = phi i8* [ %122, %121 ], [ %130, %129 ]
  %133 = load i8, i8* %132, align 1, !tbaa !14
  %134 = load i8, i8* %97, align 1, !tbaa !14
  %135 = icmp eq i8 %133, %134
  br i1 %135, label %150, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds i8, i8* %132, i64 1
  br label %138

138:                                              ; preds = %136, %121
  %139 = phi i8* [ %122, %121 ], [ %137, %136 ]
  %140 = load i8, i8* %139, align 1, !tbaa !14
  %141 = load i8, i8* %97, align 1, !tbaa !14
  %142 = icmp eq i8 %140, %141
  br i1 %142, label %150, label %143

143:                                              ; preds = %138, %121
  br label %150

144:                                              ; preds = %105
  %145 = getelementptr inbounds i8, i8* %102, i64 1
  br label %150

146:                                              ; preds = %109
  %147 = getelementptr inbounds i8, i8* %102, i64 2
  br label %150

148:                                              ; preds = %113
  %149 = getelementptr inbounds i8, i8* %102, i64 3
  br label %150

150:                                              ; preds = %100, %144, %146, %148, %125, %131, %138, %143
  %151 = phi i8* [ %29, %143 ], [ %122, %125 ], [ %132, %131 ], [ %139, %138 ], [ %145, %144 ], [ %147, %146 ], [ %149, %148 ], [ %102, %100 ]
  %152 = icmp eq i8* %151, %29
  %153 = add nuw i64 %95, 1
  br i1 %152, label %154, label %91

154:                                              ; preds = %91, %150, %19
  %155 = phi i1 [ %24, %19 ], [ %92, %91 ], [ %96, %150 ]
  %156 = xor i1 %155, true
  br label %157

157:                                              ; preds = %87, %154
  %158 = phi i1 [ %156, %154 ], [ false, %87 ]
  ret i1 %158
}

declare dso_local i32 @__gxx_personality_v0(...)

attributes #0 = { nofree nosync nounwind readonly uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!4, !6, i64 0}
!11 = distinct !{!11, !12, !13}
!12 = !{!"llvm.loop.mustprogress"}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = !{!7, !7, i64 0}
!15 = distinct !{!15, !12, !13}
!16 = distinct !{!16, !12, !13}
