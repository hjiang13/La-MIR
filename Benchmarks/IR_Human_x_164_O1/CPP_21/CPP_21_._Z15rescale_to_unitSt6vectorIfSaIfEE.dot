digraph "CFG for '_Z15rescale_to_unitSt6vectorIfSaIfEE' function" {
	label="CFG for '_Z15rescale_to_unitSt6vectorIfSaIfEE' function";

	Node0x55d11c25c6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = load float*, float** %3, align 8, !tbaa !3\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %6 = load float*, float** %5, align 8, !tbaa !8\l  %7 = ptrtoint float* %4 to i64\l  %8 = ptrtoint float* %6 to i64\l  %9 = sub i64 %7, %8\l  %10 = ashr exact i64 %9, 2\l  %11 = icmp eq i64 %9, 0\l  br i1 %11, label %14, label %12\l|{<s0>T|<s1>F}}"];
	Node0x55d11c25c6f0:s0 -> Node0x55d11c25da80;
	Node0x55d11c25c6f0:s1 -> Node0x55d11c25e0c0;
	Node0x55d11c25e0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%12:\l12:                                               \l  %13 = call i64 @llvm.umax.i64(i64 %10, i64 1)\l  br label %21\l}"];
	Node0x55d11c25e0c0 -> Node0x55d11c25e4a0;
	Node0x55d11c25da80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%14:\l14:                                               \l  %15 = phi float [ 1.000000e+05, %2 ], [ %28, %21 ]\l  %16 = phi float [ -1.000000e+05, %2 ], [ %30, %21 ]\l  %17 = fsub float %16, %15\l  %18 = icmp eq i64 %9, 0\l  br i1 %18, label %33, label %19\l|{<s0>T|<s1>F}}"];
	Node0x55d11c25da80:s0 -> Node0x55d11c25f280;
	Node0x55d11c25da80:s1 -> Node0x55d11c25f310;
	Node0x55d11c25f310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%19:\l19:                                               \l  %20 = call i64 @llvm.umax.i64(i64 %10, i64 1)\l  br label %40\l}"];
	Node0x55d11c25f310 -> Node0x55d11c25f560;
	Node0x55d11c25e4a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%21:\l21:                                               \l  %22 = phi i64 [ 0, %12 ], [ %31, %21 ]\l  %23 = phi float [ -1.000000e+05, %12 ], [ %30, %21 ]\l  %24 = phi float [ 1.000000e+05, %12 ], [ %28, %21 ]\l  %25 = getelementptr inbounds float, float* %6, i64 %22\l  %26 = load float, float* %25, align 4, !tbaa !9\l  %27 = fcmp olt float %26, %24\l  %28 = select i1 %27, float %26, float %24\l  %29 = fcmp ogt float %26, %23\l  %30 = select i1 %29, float %26, float %23\l  %31 = add nuw nsw i64 %22, 1\l  %32 = icmp eq i64 %31, %13\l  br i1 %32, label %14, label %21, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x55d11c25e4a0:s0 -> Node0x55d11c25da80;
	Node0x55d11c25e4a0:s1 -> Node0x55d11c25e4a0;
	Node0x55d11c25f280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%33:\l33:                                               \l  %34 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  store float* %6, float** %34, align 8, !tbaa !8\l  %35 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  store float* %4, float** %35, align 8, !tbaa !3\l  %36 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %37 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %38 = load float*, float** %37, align 8, !tbaa !14\l  store float* %38, float** %36, align 8, !tbaa !14\l  %39 = bitcast %\"class.std::vector\"* %1 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %39, i8 0, i64 24, i1 false) #3\l  ret void\l}"];
	Node0x55d11c25f560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi i64 [ 0, %19 ], [ %46, %40 ]\l  %42 = getelementptr inbounds float, float* %6, i64 %41\l  %43 = load float, float* %42, align 4, !tbaa !9\l  %44 = fsub float %43, %15\l  %45 = fdiv float %44, %17\l  store float %45, float* %42, align 4, !tbaa !9\l  %46 = add nuw nsw i64 %41, 1\l  %47 = icmp eq i64 %46, %20\l  br i1 %47, label %33, label %40, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x55d11c25f560:s0 -> Node0x55d11c25f280;
	Node0x55d11c25f560:s1 -> Node0x55d11c25f560;
}
