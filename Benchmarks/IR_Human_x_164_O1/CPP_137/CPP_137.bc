; ModuleID = '../../Human_xBenchmarks_164/CPP_137/CPP_137.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_137/CPP_137.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.boost::any" = type { %"class.boost::any::placeholder"* }
%"class.boost::any::placeholder" = type { i32 (...)** }
%"class.boost::bad_any_cast" = type { %"class.std::bad_cast" }
%"class.std::bad_cast" = type { %"class.std::exception" }
%"class.std::exception" = type { i32 (...)** }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.boost::any::holder.0" = type <{ %"class.boost::any::placeholder", i32, [4 x i8] }>
%"class.boost::any::holder.1" = type { %"class.boost::any::placeholder", double }
%"class.boost::any::holder" = type { %"class.boost::any::placeholder", %"class.std::__cxx11::basic_string" }
%"struct.boost::exception_detail::error_info_injector" = type <{ %"class.boost::bad_any_cast", %"class.boost::exception.base", [4 x i8] }>
%"class.boost::exception.base" = type <{ i32 (...)**, %"class.boost::exception_detail::refcount_ptr", i8*, i8*, i32 }>
%"class.boost::exception_detail::refcount_ptr" = type { %"struct.boost::exception_detail::error_info_container"* }
%"struct.boost::exception_detail::error_info_container" = type { i32 (...)** }
%"class.boost::exception" = type <{ i32 (...)**, %"class.boost::exception_detail::refcount_ptr", i8*, i8*, i32, [4 x i8] }>
%"class.boost::exception_detail::clone_impl" = type { %"struct.boost::exception_detail::error_info_injector.base", %"class.boost::exception_detail::clone_base" }
%"struct.boost::exception_detail::error_info_injector.base" = type <{ %"class.boost::bad_any_cast", %"class.boost::exception.base" }>
%"class.boost::exception_detail::clone_base" = type { i32 (...)** }

$_ZN5boost8any_castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_RNS_3anyE = comdat any

$__clang_call_terminate = comdat any

$_ZN5boost15throw_exceptionINS_12bad_any_castEEEvRKT_ = comdat any

$_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev = comdat any

$_ZN5boost16exception_detail19error_info_injectorINS_12bad_any_castEED2Ev = comdat any

$_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_ = comdat any

$_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED0Ev = comdat any

$_ZNK5boost12bad_any_cast4whatEv = comdat any

$_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE5cloneEv = comdat any

$_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE7rethrowEv = comdat any

$_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev = comdat any

$_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED0Ev = comdat any

$_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE5cloneEv = comdat any

$_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE7rethrowEv = comdat any

$_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev = comdat any

$_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED0Ev = comdat any

$_ZN5boost16exception_detail10clone_baseD2Ev = comdat any

$_ZN5boost16exception_detail10clone_baseD0Ev = comdat any

$_ZN5boost16exception_detail19error_info_injectorINS_12bad_any_castEED0Ev = comdat any

$_ZThn8_N5boost16exception_detail19error_info_injectorINS_12bad_any_castEED1Ev = comdat any

$_ZThn8_N5boost16exception_detail19error_info_injectorINS_12bad_any_castEED0Ev = comdat any

$_ZN5boost12bad_any_castD0Ev = comdat any

$_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEC1ERKS5_NS5_9clone_tagE = comdat any

$_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEC1ERKS5_ = comdat any

$_ZN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev = comdat any

$_ZN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED0Ev = comdat any

$_ZNK5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4typeEv = comdat any

$_ZNK5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5cloneEv = comdat any

$_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZTINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE = comdat any

$_ZTSN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE = comdat any

$_ZTSN5boost12bad_any_castE = comdat any

$_ZTIN5boost12bad_any_castE = comdat any

$_ZTSN5boost9exceptionE = comdat any

$_ZTIN5boost9exceptionE = comdat any

$_ZTIN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE = comdat any

$_ZTSN5boost16exception_detail10clone_baseE = comdat any

$_ZTIN5boost16exception_detail10clone_baseE = comdat any

$_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE = comdat any

$_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE = comdat any

$_ZTVN5boost16exception_detail10clone_baseE = comdat any

$_ZTVN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE = comdat any

$_ZTVN5boost12bad_any_castE = comdat any

$_ZTVN5boost9exceptionE = comdat any

$_ZTVN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE = comdat any

$_ZTSN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE = comdat any

$_ZTSN5boost3any11placeholderE = comdat any

$_ZTIN5boost3any11placeholderE = comdat any

$_ZTIN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE = comdat any

@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = linkonce_odr dso_local constant [53 x i8] c"NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\00", comdat, align 1
@_ZTINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, i32 0, i32 0) }, comdat, align 8
@_ZTIi = external dso_local local_unnamed_addr constant i8*
@_ZTId = external dso_local local_unnamed_addr constant i8*
@_ZTIv = external dso_local local_unnamed_addr constant i8*
@.str.3 = private unnamed_addr constant [55 x i8] c"%s: __pos (which is %zu) > this->size() (which is %zu)\00", align 1
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external dso_local global i8*
@_ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE = linkonce_odr dso_local constant [87 x i8] c"N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE\00", comdat, align 1
@_ZTSN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE = linkonce_odr dso_local constant [68 x i8] c"N5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE\00", comdat, align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTSN5boost12bad_any_castE = linkonce_odr dso_local constant [23 x i8] c"N5boost12bad_any_castE\00", comdat, align 1
@_ZTISt8bad_cast = external dso_local constant i8*
@_ZTIN5boost12bad_any_castE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZTSN5boost12bad_any_castE, i32 0, i32 0), i8* bitcast (i8** @_ZTISt8bad_cast to i8*) }, comdat, align 8
@_ZTSN5boost9exceptionE = linkonce_odr dso_local constant [19 x i8] c"N5boost9exceptionE\00", comdat, align 1
@_ZTIN5boost9exceptionE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZTSN5boost9exceptionE, i32 0, i32 0) }, comdat, align 8
@_ZTIN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE = linkonce_odr dso_local constant { i8*, i8*, i32, i32, i8*, i64, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @_ZTSN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE, i32 0, i32 0), i32 0, i32 2, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5boost12bad_any_castE to i8*), i64 2, i8* bitcast ({ i8*, i8* }* @_ZTIN5boost9exceptionE to i8*), i64 2050 }, comdat, align 8
@_ZTSN5boost16exception_detail10clone_baseE = linkonce_odr dso_local constant [39 x i8] c"N5boost16exception_detail10clone_baseE\00", comdat, align 1
@_ZTIN5boost16exception_detail10clone_baseE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @_ZTSN5boost16exception_detail10clone_baseE, i32 0, i32 0) }, comdat, align 8
@_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE = linkonce_odr dso_local constant { i8*, i8*, i32, i32, i8*, i64, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @_ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i32 0, i32 0), i32 0, i32 2, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE to i8*), i64 2, i8* bitcast ({ i8*, i8* }* @_ZTIN5boost16exception_detail10clone_baseE to i8*), i64 -6141 }, comdat, align 8
@_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE = linkonce_odr dso_local unnamed_addr constant { [8 x i8*], [4 x i8*], [9 x i8*] } { [8 x i8*] [i8* inttoptr (i64 48 to i8*), i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED0Ev to i8*), i8* bitcast (i8* (%"class.boost::bad_any_cast"*)* @_ZNK5boost12bad_any_cast4whatEv to i8*), i8* bitcast (%"class.boost::exception_detail::clone_base"* (%"class.boost::exception_detail::clone_impl"*)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE5cloneEv to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE7rethrowEv to i8*)], [4 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED0Ev to i8*)], [9 x i8*] [i8* inttoptr (i64 -48 to i8*), i8* inttoptr (i64 -48 to i8*), i8* inttoptr (i64 -48 to i8*), i8* inttoptr (i64 -48 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE to i8*), i8* bitcast (%"class.boost::exception_detail::clone_base"* (%"class.boost::exception_detail::clone_impl"*)* @_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE5cloneEv to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE7rethrowEv to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED0Ev to i8*)] }, comdat, align 8
@_ZTVN5boost16exception_detail10clone_baseE = linkonce_odr dso_local unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN5boost16exception_detail10clone_baseE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_base"*)* @_ZN5boost16exception_detail10clone_baseD2Ev to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_base"*)* @_ZN5boost16exception_detail10clone_baseD0Ev to i8*)] }, comdat, align 8
@_ZTVN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*], [4 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE to i8*), i8* bitcast (void (%"struct.boost::exception_detail::error_info_injector"*)* @_ZN5boost16exception_detail19error_info_injectorINS_12bad_any_castEED2Ev to i8*), i8* bitcast (void (%"struct.boost::exception_detail::error_info_injector"*)* @_ZN5boost16exception_detail19error_info_injectorINS_12bad_any_castEED0Ev to i8*), i8* bitcast (i8* (%"class.boost::bad_any_cast"*)* @_ZNK5boost12bad_any_cast4whatEv to i8*)], [4 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE to i8*), i8* bitcast (void (%"struct.boost::exception_detail::error_info_injector"*)* @_ZThn8_N5boost16exception_detail19error_info_injectorINS_12bad_any_castEED1Ev to i8*), i8* bitcast (void (%"struct.boost::exception_detail::error_info_injector"*)* @_ZThn8_N5boost16exception_detail19error_info_injectorINS_12bad_any_castEED0Ev to i8*)] }, comdat, align 8
@_ZTVN5boost12bad_any_castE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5boost12bad_any_castE to i8*), i8* bitcast (void (%"class.std::bad_cast"*)* @_ZNSt8bad_castD2Ev to i8*), i8* bitcast (void (%"class.boost::bad_any_cast"*)* @_ZN5boost12bad_any_castD0Ev to i8*), i8* bitcast (i8* (%"class.boost::bad_any_cast"*)* @_ZNK5boost12bad_any_cast4whatEv to i8*)] }, comdat, align 8
@_ZTVN5boost9exceptionE = linkonce_odr dso_local unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN5boost9exceptionE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [61 x i8] c"boost::bad_any_cast: failed conversion using boost::any_cast\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"basic_string::substr\00", align 1
@_ZTVN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE = linkonce_odr dso_local unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE to i8*), i8* bitcast (void (%"class.boost::any::holder"*)* @_ZN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev to i8*), i8* bitcast (void (%"class.boost::any::holder"*)* @_ZN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED0Ev to i8*), i8* bitcast (%"class.std::type_info"* (%"class.boost::any::holder"*)* @_ZNK5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4typeEv to i8*), i8* bitcast (%"class.boost::any::placeholder"* (%"class.boost::any::holder"*)* @_ZNK5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5cloneEv to i8*)] }, comdat, align 8
@_ZTSN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE = linkonce_odr dso_local constant [74 x i8] c"N5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE\00", comdat, align 1
@_ZTSN5boost3any11placeholderE = linkonce_odr dso_local constant [26 x i8] c"N5boost3any11placeholderE\00", comdat, align 1
@_ZTIN5boost3any11placeholderE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTSN5boost3any11placeholderE, i32 0, i32 0) }, comdat, align 8
@_ZTIN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @_ZTSN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN5boost3any11placeholderE to i8*) }, comdat, align 8

; Function Attrs: uwtable
define dso_local void @_Z11compare_oneN5boost3anyES0_(%"class.boost::any"* noalias nocapture sret(%"class.boost::any") align 8 %0, %"class.boost::any"* %1, %"class.boost::any"* %2) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.boost::bad_any_cast", align 8
  %5 = alloca %"class.boost::bad_any_cast", align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.boost::bad_any_cast", align 8
  %9 = alloca %"class.boost::bad_any_cast", align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.std::__cxx11::basic_string", align 8
  %13 = alloca %"class.std::__cxx11::basic_string", align 8
  %14 = alloca %"class.std::__cxx11::basic_string", align 8
  %15 = alloca %"class.std::__cxx11::basic_string", align 8
  %16 = alloca %"class.std::__cxx11::basic_string", align 8
  %17 = alloca %"class.std::__cxx11::basic_string", align 8
  %18 = alloca %"class.std::__cxx11::basic_string", align 8
  %19 = alloca %"class.std::__cxx11::basic_string", align 8
  %20 = alloca %"class.std::__cxx11::basic_string", align 8
  %21 = alloca %"class.std::__cxx11::basic_string", align 8
  %22 = alloca %"class.std::__cxx11::basic_string", align 8
  %23 = alloca %"class.std::__cxx11::basic_string", align 8
  %24 = alloca %"class.std::__cxx11::basic_string", align 8
  %25 = getelementptr inbounds %"class.boost::any", %"class.boost::any"* %1, i64 0, i32 0
  %26 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %25, align 8, !tbaa !3
  %27 = icmp eq %"class.boost::any::placeholder"* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %3
  %29 = bitcast %"class.boost::any::placeholder"* %26 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %30 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %29, align 8, !tbaa !8
  %31 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %30, i64 2
  %32 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %31, align 8
  %33 = call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %32(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %26) #20
  br label %34

34:                                               ; preds = %3, %28
  %35 = phi %"class.std::type_info"* [ %33, %28 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %3 ]
  %36 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %35, i64 0, i32 1
  %37 = load i8*, i8** %36, align 8, !tbaa !10
  %38 = icmp eq i8* %37, getelementptr inbounds ([53 x i8], [53 x i8]* @_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, i64 0, i64 0)
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = load i8, i8* %37, align 1, !tbaa !12
  %41 = icmp eq i8 %40, 42
  br i1 %41, label %389, label %42

42:                                               ; preds = %39
  %43 = call i32 @strcmp(i8* noundef nonnull %37, i8* noundef nonnull dereferenceable(53) getelementptr inbounds ([53 x i8], [53 x i8]* @_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, i64 0, i64 0)) #20
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %389

45:                                               ; preds = %34, %42
  %46 = bitcast %"class.std::__cxx11::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #20
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 2
  %48 = bitcast %"class.std::__cxx11::basic_string"* %12 to %union.anon**
  store %union.anon* %47, %union.anon** %48, align 8, !tbaa !13
  %49 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 1
  store i64 0, i64* %49, align 8, !tbaa !15
  %50 = bitcast %union.anon* %47 to i8*
  store i8 0, i8* %50, align 8, !tbaa !12
  %51 = bitcast %"class.std::__cxx11::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #20
  invoke void @_ZN5boost8any_castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_RNS_3anyE(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %13, %"class.boost::any"* nonnull align 8 dereferenceable(8) %1)
          to label %52 unwind label %197

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8, !tbaa !18
  %56 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 2
  %57 = bitcast %union.anon* %56 to i8*
  %58 = icmp eq i8* %55, %57
  br i1 %58, label %59, label %73

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 1
  %61 = load i64, i64* %60, align 8, !tbaa !15
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %69, label %63

63:                                               ; preds = %59
  %64 = load i8*, i8** %53, align 8, !tbaa !18
  %65 = icmp eq i64 %61, 1
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  %67 = load i8, i8* %55, align 1, !tbaa !12
  store i8 %67, i8* %64, align 1, !tbaa !12
  br label %69

68:                                               ; preds = %63
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %64, i8* align 1 %55, i64 %61, i1 false) #20
  br label %69

69:                                               ; preds = %68, %66, %59
  %70 = load i64, i64* %60, align 8, !tbaa !15
  store i64 %70, i64* %49, align 8, !tbaa !15
  %71 = load i8*, i8** %53, align 8, !tbaa !18
  %72 = getelementptr inbounds i8, i8* %71, i64 %70
  store i8 0, i8* %72, align 1, !tbaa !12
  br label %88

73:                                               ; preds = %52
  %74 = load i8*, i8** %53, align 8, !tbaa !18
  %75 = icmp eq i8* %74, %50
  %76 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 2, i32 0
  %77 = load i64, i64* %76, align 8
  store i8* %55, i8** %53, align 8, !tbaa !18
  %78 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 1
  %79 = load i64, i64* %78, align 8, !tbaa !15
  store i64 %79, i64* %49, align 8, !tbaa !15
  %80 = getelementptr %union.anon, %union.anon* %56, i64 0, i32 0
  %81 = load i64, i64* %80, align 8, !tbaa !12
  store i64 %81, i64* %76, align 8, !tbaa !12
  %82 = icmp eq i8* %74, null
  %83 = or i1 %75, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %73
  store i8* %74, i8** %54, align 8, !tbaa !18
  %85 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 2, i32 0
  store i64 %77, i64* %85, align 8, !tbaa !12
  br label %88

86:                                               ; preds = %73
  %87 = bitcast %"class.std::__cxx11::basic_string"* %13 to %union.anon**
  store %union.anon* %56, %union.anon** %87, align 8, !tbaa !18
  br label %88

88:                                               ; preds = %69, %84, %86
  %89 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 1
  store i64 0, i64* %89, align 8, !tbaa !15
  %90 = load i8*, i8** %54, align 8, !tbaa !18
  store i8 0, i8* %90, align 1, !tbaa !12
  %91 = load i8*, i8** %54, align 8, !tbaa !18
  %92 = icmp eq i8* %91, %57
  br i1 %92, label %94, label %93

93:                                               ; preds = %88
  call void @_ZdlPv(i8* %91) #20
  br label %94

94:                                               ; preds = %88, %93
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #20
  %95 = load i8*, i8** %53, align 8, !tbaa !18
  %96 = load i64, i64* %49, align 8, !tbaa !15
  %97 = getelementptr inbounds i8, i8* %95, i64 %96
  %98 = ptrtoint i8* %97 to i64
  %99 = icmp sgt i64 %96, 3
  br i1 %99, label %100, label %123

100:                                              ; preds = %94
  %101 = ashr i64 %96, 2
  br label %102

102:                                              ; preds = %119, %100
  %103 = phi i64 [ %101, %100 ], [ %121, %119 ]
  %104 = phi i8* [ %95, %100 ], [ %120, %119 ]
  %105 = load i8, i8* %104, align 1, !tbaa !12
  %106 = icmp eq i8 %105, 44
  br i1 %106, label %149, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds i8, i8* %104, i64 1
  %109 = load i8, i8* %108, align 1, !tbaa !12
  %110 = icmp eq i8 %109, 44
  br i1 %110, label %147, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds i8, i8* %104, i64 2
  %113 = load i8, i8* %112, align 1, !tbaa !12
  %114 = icmp eq i8 %113, 44
  br i1 %114, label %145, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds i8, i8* %104, i64 3
  %117 = load i8, i8* %116, align 1, !tbaa !12
  %118 = icmp eq i8 %117, 44
  br i1 %118, label %143, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds i8, i8* %104, i64 4
  %121 = add nsw i64 %103, -1
  %122 = icmp sgt i64 %103, 1
  br i1 %122, label %102, label %123, !llvm.loop !19

123:                                              ; preds = %119, %94
  %124 = phi i8* [ %95, %94 ], [ %120, %119 ]
  %125 = ptrtoint i8* %124 to i64
  %126 = sub i64 %98, %125
  switch i64 %126, label %142 [
    i64 3, label %127
    i64 2, label %132
    i64 1, label %138
  ]

127:                                              ; preds = %123
  %128 = load i8, i8* %124, align 1, !tbaa !12
  %129 = icmp eq i8 %128, 44
  br i1 %129, label %149, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds i8, i8* %124, i64 1
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i8* [ %124, %123 ], [ %131, %130 ]
  %134 = load i8, i8* %133, align 1, !tbaa !12
  %135 = icmp eq i8 %134, 44
  br i1 %135, label %149, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds i8, i8* %133, i64 1
  br label %138

138:                                              ; preds = %136, %123
  %139 = phi i8* [ %124, %123 ], [ %137, %136 ]
  %140 = load i8, i8* %139, align 1, !tbaa !12
  %141 = icmp eq i8 %140, 44
  br i1 %141, label %149, label %142

142:                                              ; preds = %138, %123
  br label %149

143:                                              ; preds = %115
  %144 = getelementptr inbounds i8, i8* %104, i64 3
  br label %149

145:                                              ; preds = %111
  %146 = getelementptr inbounds i8, i8* %104, i64 2
  br label %149

147:                                              ; preds = %107
  %148 = getelementptr inbounds i8, i8* %104, i64 1
  br label %149

149:                                              ; preds = %102, %143, %145, %147, %142, %138, %132, %127
  %150 = phi i8* [ %97, %142 ], [ %124, %127 ], [ %133, %132 ], [ %139, %138 ], [ %144, %143 ], [ %146, %145 ], [ %148, %147 ], [ %104, %102 ]
  %151 = icmp eq i8* %150, %97
  br i1 %151, label %375, label %152

152:                                              ; preds = %149
  %153 = bitcast %"class.std::__cxx11::basic_string"* %14 to i8*
  %154 = bitcast %"class.std::__cxx11::basic_string"* %15 to i8*
  %155 = bitcast %"class.std::__cxx11::basic_string"* %16 to i8*
  %156 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %16, i64 0, i32 2
  %157 = bitcast %"class.std::__cxx11::basic_string"* %16 to %union.anon**
  %158 = bitcast i64* %11 to i8*
  %159 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %16, i64 0, i32 0, i32 0
  %160 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %16, i64 0, i32 2, i32 0
  %161 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %16, i64 0, i32 0, i32 0
  %162 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %16, i64 0, i32 1
  %163 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 2
  %164 = bitcast %"class.std::__cxx11::basic_string"* %15 to %union.anon**
  %165 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 0, i32 0
  %166 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 2, i32 0
  %167 = bitcast %union.anon* %163 to i8*
  %168 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 1
  %169 = bitcast %"class.std::__cxx11::basic_string"* %17 to i8*
  %170 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %17, i64 0, i32 2
  %171 = bitcast %"class.std::__cxx11::basic_string"* %17 to %union.anon**
  %172 = bitcast i64* %10 to i8*
  %173 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %17, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %17, i64 0, i32 2, i32 0
  %175 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %17, i64 0, i32 0, i32 0
  %176 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %17, i64 0, i32 1
  %177 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 0, i32 0
  %178 = bitcast %union.anon* %163 to i8*
  %179 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 2, i32 0
  %180 = bitcast %union.anon* %170 to i8*
  %181 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %17, i64 0, i32 2, i32 0
  %182 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i64 0, i32 2
  %183 = bitcast %"class.std::__cxx11::basic_string"* %14 to %union.anon**
  %184 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i64 0, i32 0, i32 0
  %185 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i64 0, i32 2, i32 0
  %186 = bitcast %union.anon* %182 to i8*
  %187 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i64 0, i32 1
  %188 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i64 0, i32 0, i32 0
  %189 = bitcast %union.anon* %182 to i8*
  %190 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 2, i32 0
  %191 = getelementptr %union.anon, %union.anon* %182, i64 0, i32 0
  %192 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i64 0, i32 2, i32 0
  %193 = bitcast %union.anon* %170 to i8*
  %194 = bitcast %union.anon* %156 to i8*
  %195 = load i64, i64* %49, align 8, !tbaa !15
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %375, label %199

197:                                              ; preds = %45
  %198 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #20
  br label %382

199:                                              ; preds = %152, %371
  %200 = phi i64 [ %372, %371 ], [ 0, %152 ]
  %201 = load i8*, i8** %53, align 8, !tbaa !18
  %202 = getelementptr inbounds i8, i8* %201, i64 %200
  %203 = load i8, i8* %202, align 1, !tbaa !12
  %204 = icmp eq i8 %203, 44
  br i1 %204, label %205, label %371

205:                                              ; preds = %199
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %153) #20
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %154) #20
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %155) #20
  call void @llvm.experimental.noalias.scope.decl(metadata !22)
  store %union.anon* %156, %union.anon** %157, align 8, !tbaa !13, !alias.scope !22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #20, !noalias !22
  store i64 %200, i64* %11, align 8, !tbaa !25, !noalias !22
  %206 = icmp ugt i64 %200, 15
  br i1 %206, label %207, label %211

207:                                              ; preds = %205
  %208 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %16, i64* nonnull align 8 dereferenceable(8) %11, i64 0)
          to label %209 unwind label %338

209:                                              ; preds = %207
  store i8* %208, i8** %159, align 8, !tbaa !18, !alias.scope !22
  %210 = load i64, i64* %11, align 8, !tbaa !25, !noalias !22
  store i64 %210, i64* %160, align 8, !tbaa !12, !alias.scope !22
  br label %211

211:                                              ; preds = %209, %205
  %212 = load i8*, i8** %161, align 8, !tbaa !18, !alias.scope !22
  %213 = trunc i64 %200 to i32
  switch i32 %213, label %216 [
    i32 1, label %214
    i32 0, label %217
  ]

214:                                              ; preds = %211
  %215 = load i8, i8* %201, align 1, !tbaa !12
  store i8 %215, i8* %212, align 1, !tbaa !12
  br label %217

216:                                              ; preds = %211
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %212, i8* align 1 %201, i64 %200, i1 false) #20
  br label %217

217:                                              ; preds = %211, %214, %216
  %218 = load i64, i64* %11, align 8, !tbaa !25, !noalias !22
  store i64 %218, i64* %162, align 8, !tbaa !15, !alias.scope !22
  %219 = load i8*, i8** %161, align 8, !tbaa !18, !alias.scope !22
  %220 = getelementptr inbounds i8, i8* %219, i64 %218
  store i8 0, i8* %220, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #20, !noalias !22
  call void @llvm.experimental.noalias.scope.decl(metadata !26)
  %221 = load i64, i64* %162, align 8, !tbaa !15, !noalias !26
  %222 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %16, i64 %221, i64 0, i64 1, i8 signext 46)
          to label %223 unwind label %340

223:                                              ; preds = %217
  store %union.anon* %163, %union.anon** %164, align 8, !tbaa !13, !alias.scope !26
  %224 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %222, i64 0, i32 0, i32 0
  %225 = load i8*, i8** %224, align 8, !tbaa !18
  %226 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %222, i64 0, i32 2
  %227 = bitcast %union.anon* %226 to i8*
  %228 = icmp eq i8* %225, %227
  br i1 %228, label %229, label %230

229:                                              ; preds = %223
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %167, i8* noundef nonnull align 8 dereferenceable(16) %227, i64 16, i1 false) #20
  br label %233

230:                                              ; preds = %223
  store i8* %225, i8** %165, align 8, !tbaa !18, !alias.scope !26
  %231 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %222, i64 0, i32 2, i32 0
  %232 = load i64, i64* %231, align 8, !tbaa !12
  store i64 %232, i64* %166, align 8, !tbaa !12, !alias.scope !26
  br label %233

233:                                              ; preds = %229, %230
  %234 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %222, i64 0, i32 1
  %235 = load i64, i64* %234, align 8, !tbaa !15
  store i64 %235, i64* %168, align 8, !tbaa !15, !alias.scope !26
  %236 = bitcast %"class.std::__cxx11::basic_string"* %222 to %union.anon**
  store %union.anon* %226, %union.anon** %236, align 8, !tbaa !18
  store i64 0, i64* %234, align 8, !tbaa !15
  store i8 0, i8* %227, align 8, !tbaa !12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %169) #20
  %237 = add nuw nsw i64 %200, 1
  call void @llvm.experimental.noalias.scope.decl(metadata !29)
  %238 = load i64, i64* %49, align 8, !tbaa !15, !noalias !29
  %239 = icmp ugt i64 %238, %200
  br i1 %239, label %243, label %240

240:                                              ; preds = %233
  %241 = and i64 %237, 4294967295
  invoke void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 %241, i64 %238) #21
          to label %242 unwind label %344

242:                                              ; preds = %240
  unreachable

243:                                              ; preds = %233
  store %union.anon* %170, %union.anon** %171, align 8, !tbaa !13, !alias.scope !29
  %244 = load i8*, i8** %53, align 8, !tbaa !18, !noalias !29
  %245 = getelementptr inbounds i8, i8* %244, i64 %237
  %246 = sub i64 %238, %237
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #20, !noalias !29
  store i64 %246, i64* %10, align 8, !tbaa !25, !noalias !29
  %247 = icmp ugt i64 %246, 15
  br i1 %247, label %248, label %252

248:                                              ; preds = %243
  %249 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %17, i64* nonnull align 8 dereferenceable(8) %10, i64 0)
          to label %250 unwind label %342

250:                                              ; preds = %248
  store i8* %249, i8** %173, align 8, !tbaa !18, !alias.scope !29
  %251 = load i64, i64* %10, align 8, !tbaa !25, !noalias !29
  store i64 %251, i64* %174, align 8, !tbaa !12, !alias.scope !29
  br label %252

252:                                              ; preds = %250, %243
  %253 = load i8*, i8** %175, align 8, !tbaa !18, !alias.scope !29
  switch i64 %246, label %256 [
    i64 1, label %254
    i64 0, label %257
  ]

254:                                              ; preds = %252
  %255 = load i8, i8* %245, align 1, !tbaa !12
  store i8 %255, i8* %253, align 1, !tbaa !12
  br label %257

256:                                              ; preds = %252
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %253, i8* nonnull align 1 %245, i64 %246, i1 false) #20
  br label %257

257:                                              ; preds = %252, %254, %256
  %258 = load i64, i64* %10, align 8, !tbaa !25, !noalias !29
  store i64 %258, i64* %176, align 8, !tbaa !15, !alias.scope !29
  %259 = load i8*, i8** %175, align 8, !tbaa !18, !alias.scope !29
  %260 = getelementptr inbounds i8, i8* %259, i64 %258
  store i8 0, i8* %260, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #20, !noalias !29
  call void @llvm.experimental.noalias.scope.decl(metadata !32)
  %261 = load i64, i64* %168, align 8, !tbaa !15, !noalias !32
  %262 = load i64, i64* %176, align 8, !tbaa !15, !noalias !32
  %263 = add i64 %262, %261
  %264 = load i8*, i8** %177, align 8, !tbaa !18, !noalias !32
  %265 = icmp eq i8* %264, %178
  %266 = load i64, i64* %179, align 8, !noalias !32
  %267 = select i1 %265, i64 15, i64 %266
  %268 = icmp ugt i64 %263, %267
  br i1 %268, label %269, label %277

269:                                              ; preds = %257
  %270 = load i8*, i8** %175, align 8, !tbaa !18, !noalias !32
  %271 = icmp eq i8* %270, %180
  %272 = load i64, i64* %181, align 8, !noalias !32
  %273 = select i1 %271, i64 15, i64 %272
  %274 = icmp ugt i64 %263, %273
  br i1 %274, label %277, label %275

275:                                              ; preds = %269
  %276 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %17, i64 0, i64 0, i8* %264, i64 %261)
          to label %280 unwind label %346

277:                                              ; preds = %269, %257
  %278 = load i8*, i8** %175, align 8, !tbaa !18, !noalias !32
  %279 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %15, i8* %278, i64 %262)
          to label %280 unwind label %346

280:                                              ; preds = %277, %275
  %281 = phi %"class.std::__cxx11::basic_string"* [ %276, %275 ], [ %279, %277 ]
  store %union.anon* %182, %union.anon** %183, align 8, !tbaa !13, !alias.scope !32
  %282 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %281, i64 0, i32 0, i32 0
  %283 = load i8*, i8** %282, align 8, !tbaa !18
  %284 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %281, i64 0, i32 2
  %285 = bitcast %union.anon* %284 to i8*
  %286 = icmp eq i8* %283, %285
  br i1 %286, label %287, label %288

287:                                              ; preds = %280
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %186, i8* noundef nonnull align 8 dereferenceable(16) %285, i64 16, i1 false) #20
  br label %291

288:                                              ; preds = %280
  store i8* %283, i8** %184, align 8, !tbaa !18, !alias.scope !32
  %289 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %281, i64 0, i32 2, i32 0
  %290 = load i64, i64* %289, align 8, !tbaa !12
  store i64 %290, i64* %185, align 8, !tbaa !12, !alias.scope !32
  br label %291

291:                                              ; preds = %287, %288
  %292 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %281, i64 0, i32 1
  %293 = load i64, i64* %292, align 8, !tbaa !15
  store i64 %293, i64* %187, align 8, !tbaa !15, !alias.scope !32
  %294 = bitcast %"class.std::__cxx11::basic_string"* %281 to %union.anon**
  store %union.anon* %284, %union.anon** %294, align 8, !tbaa !18
  store i64 0, i64* %292, align 8, !tbaa !15
  store i8 0, i8* %285, align 8, !tbaa !12
  %295 = load i8*, i8** %188, align 8, !tbaa !18
  %296 = icmp eq i8* %295, %189
  br i1 %296, label %297, label %310

297:                                              ; preds = %291
  %298 = load i64, i64* %187, align 8, !tbaa !15
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %306, label %300

300:                                              ; preds = %297
  %301 = load i8*, i8** %53, align 8, !tbaa !18
  %302 = icmp eq i64 %298, 1
  br i1 %302, label %303, label %305

303:                                              ; preds = %300
  %304 = load i8, i8* %295, align 1, !tbaa !12
  store i8 %304, i8* %301, align 1, !tbaa !12
  br label %306

305:                                              ; preds = %300
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %301, i8* align 1 %295, i64 %298, i1 false) #20
  br label %306

306:                                              ; preds = %305, %303, %297
  %307 = load i64, i64* %187, align 8, !tbaa !15
  store i64 %307, i64* %49, align 8, !tbaa !15
  %308 = load i8*, i8** %53, align 8, !tbaa !18
  %309 = getelementptr inbounds i8, i8* %308, i64 %307
  store i8 0, i8* %309, align 1, !tbaa !12
  br label %320

310:                                              ; preds = %291
  %311 = load i8*, i8** %53, align 8, !tbaa !18
  %312 = icmp eq i8* %311, %50
  %313 = load i64, i64* %190, align 8
  store i8* %295, i8** %53, align 8, !tbaa !18
  %314 = load i64, i64* %187, align 8, !tbaa !15
  store i64 %314, i64* %49, align 8, !tbaa !15
  %315 = load i64, i64* %191, align 8, !tbaa !12
  store i64 %315, i64* %190, align 8, !tbaa !12
  %316 = icmp eq i8* %311, null
  %317 = or i1 %312, %316
  br i1 %317, label %319, label %318

318:                                              ; preds = %310
  store i8* %311, i8** %188, align 8, !tbaa !18
  store i64 %313, i64* %192, align 8, !tbaa !12
  br label %320

319:                                              ; preds = %310
  store %union.anon* %182, %union.anon** %183, align 8, !tbaa !18
  br label %320

320:                                              ; preds = %306, %318, %319
  store i64 0, i64* %187, align 8, !tbaa !15
  %321 = load i8*, i8** %188, align 8, !tbaa !18
  store i8 0, i8* %321, align 1, !tbaa !12
  %322 = load i8*, i8** %188, align 8, !tbaa !18
  %323 = icmp eq i8* %322, %189
  br i1 %323, label %325, label %324

324:                                              ; preds = %320
  call void @_ZdlPv(i8* %322) #20
  br label %325

325:                                              ; preds = %320, %324
  %326 = load i8*, i8** %175, align 8, !tbaa !18
  %327 = icmp eq i8* %326, %193
  br i1 %327, label %329, label %328

328:                                              ; preds = %325
  call void @_ZdlPv(i8* %326) #20
  br label %329

329:                                              ; preds = %325, %328
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %169) #20
  %330 = load i8*, i8** %177, align 8, !tbaa !18
  %331 = icmp eq i8* %330, %178
  br i1 %331, label %333, label %332

332:                                              ; preds = %329
  call void @_ZdlPv(i8* %330) #20
  br label %333

333:                                              ; preds = %329, %332
  %334 = load i8*, i8** %161, align 8, !tbaa !18
  %335 = icmp eq i8* %334, %194
  br i1 %335, label %337, label %336

336:                                              ; preds = %333
  call void @_ZdlPv(i8* %334) #20
  br label %337

337:                                              ; preds = %333, %336
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %155) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %154) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %153) #20
  br label %371

338:                                              ; preds = %207
  %339 = landingpad { i8*, i32 }
          cleanup
  br label %366

340:                                              ; preds = %217
  %341 = landingpad { i8*, i32 }
          cleanup
  br label %360

342:                                              ; preds = %248
  %343 = landingpad { i8*, i32 }
          cleanup
  br label %352

344:                                              ; preds = %240
  %345 = landingpad { i8*, i32 }
          cleanup
  br label %352

346:                                              ; preds = %277, %275
  %347 = landingpad { i8*, i32 }
          cleanup
  %348 = load i8*, i8** %175, align 8, !tbaa !18
  %349 = bitcast %union.anon* %170 to i8*
  %350 = icmp eq i8* %348, %349
  br i1 %350, label %352, label %351

351:                                              ; preds = %346
  call void @_ZdlPv(i8* %348) #20
  br label %352

352:                                              ; preds = %342, %344, %351, %346
  %353 = phi { i8*, i32 } [ %347, %346 ], [ %347, %351 ], [ %343, %342 ], [ %345, %344 ]
  %354 = bitcast %"class.std::__cxx11::basic_string"* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %354) #20
  %355 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 0, i32 0
  %356 = load i8*, i8** %355, align 8, !tbaa !18
  %357 = bitcast %union.anon* %163 to i8*
  %358 = icmp eq i8* %356, %357
  br i1 %358, label %360, label %359

359:                                              ; preds = %352
  call void @_ZdlPv(i8* %356) #20
  br label %360

360:                                              ; preds = %359, %352, %340
  %361 = phi { i8*, i32 } [ %341, %340 ], [ %353, %352 ], [ %353, %359 ]
  %362 = load i8*, i8** %161, align 8, !tbaa !18
  %363 = bitcast %union.anon* %156 to i8*
  %364 = icmp eq i8* %362, %363
  br i1 %364, label %366, label %365

365:                                              ; preds = %360
  call void @_ZdlPv(i8* %362) #20
  br label %366

366:                                              ; preds = %365, %360, %338
  %367 = phi { i8*, i32 } [ %339, %338 ], [ %361, %360 ], [ %361, %365 ]
  %368 = bitcast %"class.std::__cxx11::basic_string"* %16 to i8*
  %369 = bitcast %"class.std::__cxx11::basic_string"* %15 to i8*
  %370 = bitcast %"class.std::__cxx11::basic_string"* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %368) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %369) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %370) #20
  br label %382

371:                                              ; preds = %199, %337
  %372 = add nuw i64 %200, 1
  %373 = load i64, i64* %49, align 8, !tbaa !15
  %374 = icmp ugt i64 %373, %372
  br i1 %374, label %199, label %375, !llvm.loop !35

375:                                              ; preds = %371, %152, %149
  %376 = load i8*, i8** %53, align 8, !tbaa !18
  %377 = call double @strtod(i8* nocapture nonnull %376, i8** null) #20
  %378 = load i8*, i8** %53, align 8, !tbaa !18
  %379 = icmp eq i8* %378, %50
  br i1 %379, label %381, label %380

380:                                              ; preds = %375
  call void @_ZdlPv(i8* %378) #20
  br label %381

381:                                              ; preds = %375, %380
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #20
  br label %517

382:                                              ; preds = %366, %197
  %383 = phi { i8*, i32 } [ %367, %366 ], [ %198, %197 ]
  %384 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 0, i32 0
  %385 = load i8*, i8** %384, align 8, !tbaa !18
  %386 = icmp eq i8* %385, %50
  br i1 %386, label %388, label %387

387:                                              ; preds = %382
  call void @_ZdlPv(i8* %385) #20
  br label %388

388:                                              ; preds = %382, %387
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #20
  br label %1062

389:                                              ; preds = %39, %42
  %390 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %25, align 8, !tbaa !3
  %391 = icmp eq %"class.boost::any::placeholder"* %390, null
  br i1 %391, label %398, label %392

392:                                              ; preds = %389
  %393 = bitcast %"class.boost::any::placeholder"* %390 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %394 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %393, align 8, !tbaa !8
  %395 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %394, i64 2
  %396 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %395, align 8
  %397 = call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %396(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %390) #20
  br label %398

398:                                              ; preds = %389, %392
  %399 = phi %"class.std::type_info"* [ %397, %392 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %389 ]
  %400 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %399, i64 0, i32 1
  %401 = load i8*, i8** %400, align 8, !tbaa !10
  %402 = load i8*, i8** getelementptr inbounds (i8*, i8** @_ZTIi, i64 1), align 8, !tbaa !10
  %403 = icmp eq i8* %401, %402
  br i1 %403, label %410, label %404

404:                                              ; preds = %398
  %405 = load i8, i8* %401, align 1, !tbaa !12
  %406 = icmp eq i8 %405, 42
  br i1 %406, label %453, label %407

407:                                              ; preds = %404
  %408 = call i32 @strcmp(i8* noundef nonnull %401, i8* noundef nonnull dereferenceable(1) %402) #20
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %410, label %453

410:                                              ; preds = %398, %407
  %411 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %25, align 8, !tbaa !3
  %412 = icmp eq %"class.boost::any::placeholder"* %411, null
  br i1 %412, label %419, label %413

413:                                              ; preds = %410
  %414 = bitcast %"class.boost::any::placeholder"* %411 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %415 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %414, align 8, !tbaa !8
  %416 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %415, i64 2
  %417 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %416, align 8
  %418 = call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %417(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %411) #20
  br label %419

419:                                              ; preds = %413, %410
  %420 = phi %"class.std::type_info"* [ %418, %413 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %410 ]
  %421 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %420, i64 0, i32 1
  %422 = load i8*, i8** %421, align 8, !tbaa !10
  %423 = load i8, i8* %422, align 1, !tbaa !12
  %424 = icmp eq i8 %423, 42
  %425 = zext i1 %424 to i64
  %426 = getelementptr i8, i8* %422, i64 %425
  %427 = load i8, i8* %402, align 1, !tbaa !12
  %428 = icmp eq i8 %427, 42
  %429 = zext i1 %428 to i64
  %430 = getelementptr i8, i8* %402, i64 %429
  %431 = icmp eq i8* %426, %430
  br i1 %431, label %435, label %432

432:                                              ; preds = %419
  %433 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %426, i8* noundef nonnull dereferenceable(1) %430) #22
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %439

435:                                              ; preds = %432, %419
  %436 = bitcast %"class.boost::any"* %1 to %"class.boost::any::holder.0"**
  %437 = load %"class.boost::any::holder.0"*, %"class.boost::any::holder.0"** %436, align 8, !tbaa !3
  %438 = getelementptr inbounds %"class.boost::any::holder.0", %"class.boost::any::holder.0"* %437, i64 0, i32 1
  br label %439

439:                                              ; preds = %435, %432
  %440 = phi i32* [ %438, %435 ], [ null, %432 ]
  %441 = icmp eq i32* %440, null
  br i1 %441, label %442, label %450

442:                                              ; preds = %439
  %443 = bitcast %"class.boost::bad_any_cast"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %443) #20
  %444 = bitcast %"class.boost::bad_any_cast"* %9 to i64*
  store i64 0, i64* %444, align 8
  %445 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %9, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %445, align 8, !tbaa !8
  invoke void @_ZN5boost15throw_exceptionINS_12bad_any_castEEEvRKT_(%"class.boost::bad_any_cast"* nonnull align 8 dereferenceable(8) %9) #21
          to label %446 unwind label %447

446:                                              ; preds = %442
  unreachable

447:                                              ; preds = %442
  %448 = landingpad { i8*, i32 }
          cleanup
  %449 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %9, i64 0, i32 0
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %449) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %443) #20
  br label %1062

450:                                              ; preds = %439
  %451 = load i32, i32* %440, align 4, !tbaa !36
  %452 = sitofp i32 %451 to double
  br label %453

453:                                              ; preds = %404, %450, %407
  %454 = phi double [ %452, %450 ], [ undef, %407 ], [ undef, %404 ]
  %455 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %25, align 8, !tbaa !3
  %456 = icmp eq %"class.boost::any::placeholder"* %455, null
  br i1 %456, label %463, label %457

457:                                              ; preds = %453
  %458 = bitcast %"class.boost::any::placeholder"* %455 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %459 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %458, align 8, !tbaa !8
  %460 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %459, i64 2
  %461 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %460, align 8
  %462 = call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %461(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %455) #20
  br label %463

463:                                              ; preds = %453, %457
  %464 = phi %"class.std::type_info"* [ %462, %457 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %453 ]
  %465 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %464, i64 0, i32 1
  %466 = load i8*, i8** %465, align 8, !tbaa !10
  %467 = load i8*, i8** getelementptr inbounds (i8*, i8** @_ZTId, i64 1), align 8, !tbaa !10
  %468 = icmp eq i8* %466, %467
  br i1 %468, label %475, label %469

469:                                              ; preds = %463
  %470 = load i8, i8* %466, align 1, !tbaa !12
  %471 = icmp eq i8 %470, 42
  br i1 %471, label %517, label %472

472:                                              ; preds = %469
  %473 = call i32 @strcmp(i8* noundef nonnull %466, i8* noundef nonnull dereferenceable(1) %467) #20
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %517

475:                                              ; preds = %463, %472
  %476 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %25, align 8, !tbaa !3
  %477 = icmp eq %"class.boost::any::placeholder"* %476, null
  br i1 %477, label %484, label %478

478:                                              ; preds = %475
  %479 = bitcast %"class.boost::any::placeholder"* %476 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %480 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %479, align 8, !tbaa !8
  %481 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %480, i64 2
  %482 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %481, align 8
  %483 = call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %482(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %476) #20
  br label %484

484:                                              ; preds = %478, %475
  %485 = phi %"class.std::type_info"* [ %483, %478 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %475 ]
  %486 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %485, i64 0, i32 1
  %487 = load i8*, i8** %486, align 8, !tbaa !10
  %488 = load i8, i8* %487, align 1, !tbaa !12
  %489 = icmp eq i8 %488, 42
  %490 = zext i1 %489 to i64
  %491 = getelementptr i8, i8* %487, i64 %490
  %492 = load i8, i8* %467, align 1, !tbaa !12
  %493 = icmp eq i8 %492, 42
  %494 = zext i1 %493 to i64
  %495 = getelementptr i8, i8* %467, i64 %494
  %496 = icmp eq i8* %491, %495
  br i1 %496, label %500, label %497

497:                                              ; preds = %484
  %498 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %491, i8* noundef nonnull dereferenceable(1) %495) #22
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %504

500:                                              ; preds = %497, %484
  %501 = bitcast %"class.boost::any"* %1 to %"class.boost::any::holder.1"**
  %502 = load %"class.boost::any::holder.1"*, %"class.boost::any::holder.1"** %501, align 8, !tbaa !3
  %503 = getelementptr inbounds %"class.boost::any::holder.1", %"class.boost::any::holder.1"* %502, i64 0, i32 1
  br label %504

504:                                              ; preds = %500, %497
  %505 = phi double* [ %503, %500 ], [ null, %497 ]
  %506 = icmp eq double* %505, null
  br i1 %506, label %507, label %515

507:                                              ; preds = %504
  %508 = bitcast %"class.boost::bad_any_cast"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %508) #20
  %509 = bitcast %"class.boost::bad_any_cast"* %8 to i64*
  store i64 0, i64* %509, align 8
  %510 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %8, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %510, align 8, !tbaa !8
  invoke void @_ZN5boost15throw_exceptionINS_12bad_any_castEEEvRKT_(%"class.boost::bad_any_cast"* nonnull align 8 dereferenceable(8) %8) #21
          to label %511 unwind label %512

511:                                              ; preds = %507
  unreachable

512:                                              ; preds = %507
  %513 = landingpad { i8*, i32 }
          cleanup
  %514 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %8, i64 0, i32 0
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %514) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %508) #20
  br label %1062

515:                                              ; preds = %504
  %516 = load double, double* %505, align 8, !tbaa !38
  br label %517

517:                                              ; preds = %469, %515, %472, %381
  %518 = phi double [ %377, %381 ], [ %454, %472 ], [ %516, %515 ], [ %454, %469 ]
  %519 = getelementptr inbounds %"class.boost::any", %"class.boost::any"* %2, i64 0, i32 0
  %520 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %519, align 8, !tbaa !3
  %521 = icmp eq %"class.boost::any::placeholder"* %520, null
  br i1 %521, label %528, label %522

522:                                              ; preds = %517
  %523 = bitcast %"class.boost::any::placeholder"* %520 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %524 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %523, align 8, !tbaa !8
  %525 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %524, i64 2
  %526 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %525, align 8
  %527 = call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %526(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %520) #20
  br label %528

528:                                              ; preds = %517, %522
  %529 = phi %"class.std::type_info"* [ %527, %522 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %517 ]
  %530 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %529, i64 0, i32 1
  %531 = load i8*, i8** %530, align 8, !tbaa !10
  %532 = icmp eq i8* %531, getelementptr inbounds ([53 x i8], [53 x i8]* @_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, i64 0, i64 0)
  br i1 %532, label %539, label %533

533:                                              ; preds = %528
  %534 = load i8, i8* %531, align 1, !tbaa !12
  %535 = icmp eq i8 %534, 42
  br i1 %535, label %883, label %536

536:                                              ; preds = %533
  %537 = call i32 @strcmp(i8* noundef nonnull %531, i8* noundef nonnull dereferenceable(53) getelementptr inbounds ([53 x i8], [53 x i8]* @_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, i64 0, i64 0)) #20
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %539, label %883

539:                                              ; preds = %528, %536
  %540 = bitcast %"class.std::__cxx11::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %540) #20
  %541 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %18, i64 0, i32 2
  %542 = bitcast %"class.std::__cxx11::basic_string"* %18 to %union.anon**
  store %union.anon* %541, %union.anon** %542, align 8, !tbaa !13
  %543 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %18, i64 0, i32 1
  store i64 0, i64* %543, align 8, !tbaa !15
  %544 = bitcast %union.anon* %541 to i8*
  store i8 0, i8* %544, align 8, !tbaa !12
  %545 = bitcast %"class.std::__cxx11::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %545) #20
  invoke void @_ZN5boost8any_castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_RNS_3anyE(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %19, %"class.boost::any"* nonnull align 8 dereferenceable(8) %2)
          to label %546 unwind label %691

546:                                              ; preds = %539
  %547 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %18, i64 0, i32 0, i32 0
  %548 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 0, i32 0, i32 0
  %549 = load i8*, i8** %548, align 8, !tbaa !18
  %550 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 0, i32 2
  %551 = bitcast %union.anon* %550 to i8*
  %552 = icmp eq i8* %549, %551
  br i1 %552, label %553, label %567

553:                                              ; preds = %546
  %554 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 0, i32 1
  %555 = load i64, i64* %554, align 8, !tbaa !15
  %556 = icmp eq i64 %555, 0
  br i1 %556, label %563, label %557

557:                                              ; preds = %553
  %558 = load i8*, i8** %547, align 8, !tbaa !18
  %559 = icmp eq i64 %555, 1
  br i1 %559, label %560, label %562

560:                                              ; preds = %557
  %561 = load i8, i8* %549, align 1, !tbaa !12
  store i8 %561, i8* %558, align 1, !tbaa !12
  br label %563

562:                                              ; preds = %557
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %558, i8* align 1 %549, i64 %555, i1 false) #20
  br label %563

563:                                              ; preds = %562, %560, %553
  %564 = load i64, i64* %554, align 8, !tbaa !15
  store i64 %564, i64* %543, align 8, !tbaa !15
  %565 = load i8*, i8** %547, align 8, !tbaa !18
  %566 = getelementptr inbounds i8, i8* %565, i64 %564
  store i8 0, i8* %566, align 1, !tbaa !12
  br label %582

567:                                              ; preds = %546
  %568 = load i8*, i8** %547, align 8, !tbaa !18
  %569 = icmp eq i8* %568, %544
  %570 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %18, i64 0, i32 2, i32 0
  %571 = load i64, i64* %570, align 8
  store i8* %549, i8** %547, align 8, !tbaa !18
  %572 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 0, i32 1
  %573 = load i64, i64* %572, align 8, !tbaa !15
  store i64 %573, i64* %543, align 8, !tbaa !15
  %574 = getelementptr %union.anon, %union.anon* %550, i64 0, i32 0
  %575 = load i64, i64* %574, align 8, !tbaa !12
  store i64 %575, i64* %570, align 8, !tbaa !12
  %576 = icmp eq i8* %568, null
  %577 = or i1 %569, %576
  br i1 %577, label %580, label %578

578:                                              ; preds = %567
  store i8* %568, i8** %548, align 8, !tbaa !18
  %579 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 0, i32 2, i32 0
  store i64 %571, i64* %579, align 8, !tbaa !12
  br label %582

580:                                              ; preds = %567
  %581 = bitcast %"class.std::__cxx11::basic_string"* %19 to %union.anon**
  store %union.anon* %550, %union.anon** %581, align 8, !tbaa !18
  br label %582

582:                                              ; preds = %563, %578, %580
  %583 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 0, i32 1
  store i64 0, i64* %583, align 8, !tbaa !15
  %584 = load i8*, i8** %548, align 8, !tbaa !18
  store i8 0, i8* %584, align 1, !tbaa !12
  %585 = load i8*, i8** %548, align 8, !tbaa !18
  %586 = icmp eq i8* %585, %551
  br i1 %586, label %588, label %587

587:                                              ; preds = %582
  call void @_ZdlPv(i8* %585) #20
  br label %588

588:                                              ; preds = %582, %587
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %545) #20
  %589 = load i8*, i8** %547, align 8, !tbaa !18
  %590 = load i64, i64* %543, align 8, !tbaa !15
  %591 = getelementptr inbounds i8, i8* %589, i64 %590
  %592 = ptrtoint i8* %591 to i64
  %593 = icmp sgt i64 %590, 3
  br i1 %593, label %594, label %617

594:                                              ; preds = %588
  %595 = ashr i64 %590, 2
  br label %596

596:                                              ; preds = %613, %594
  %597 = phi i64 [ %595, %594 ], [ %615, %613 ]
  %598 = phi i8* [ %589, %594 ], [ %614, %613 ]
  %599 = load i8, i8* %598, align 1, !tbaa !12
  %600 = icmp eq i8 %599, 44
  br i1 %600, label %643, label %601

601:                                              ; preds = %596
  %602 = getelementptr inbounds i8, i8* %598, i64 1
  %603 = load i8, i8* %602, align 1, !tbaa !12
  %604 = icmp eq i8 %603, 44
  br i1 %604, label %641, label %605

605:                                              ; preds = %601
  %606 = getelementptr inbounds i8, i8* %598, i64 2
  %607 = load i8, i8* %606, align 1, !tbaa !12
  %608 = icmp eq i8 %607, 44
  br i1 %608, label %639, label %609

609:                                              ; preds = %605
  %610 = getelementptr inbounds i8, i8* %598, i64 3
  %611 = load i8, i8* %610, align 1, !tbaa !12
  %612 = icmp eq i8 %611, 44
  br i1 %612, label %637, label %613

613:                                              ; preds = %609
  %614 = getelementptr inbounds i8, i8* %598, i64 4
  %615 = add nsw i64 %597, -1
  %616 = icmp sgt i64 %597, 1
  br i1 %616, label %596, label %617, !llvm.loop !19

617:                                              ; preds = %613, %588
  %618 = phi i8* [ %589, %588 ], [ %614, %613 ]
  %619 = ptrtoint i8* %618 to i64
  %620 = sub i64 %592, %619
  switch i64 %620, label %636 [
    i64 3, label %621
    i64 2, label %626
    i64 1, label %632
  ]

621:                                              ; preds = %617
  %622 = load i8, i8* %618, align 1, !tbaa !12
  %623 = icmp eq i8 %622, 44
  br i1 %623, label %643, label %624

624:                                              ; preds = %621
  %625 = getelementptr inbounds i8, i8* %618, i64 1
  br label %626

626:                                              ; preds = %624, %617
  %627 = phi i8* [ %618, %617 ], [ %625, %624 ]
  %628 = load i8, i8* %627, align 1, !tbaa !12
  %629 = icmp eq i8 %628, 44
  br i1 %629, label %643, label %630

630:                                              ; preds = %626
  %631 = getelementptr inbounds i8, i8* %627, i64 1
  br label %632

632:                                              ; preds = %630, %617
  %633 = phi i8* [ %618, %617 ], [ %631, %630 ]
  %634 = load i8, i8* %633, align 1, !tbaa !12
  %635 = icmp eq i8 %634, 44
  br i1 %635, label %643, label %636

636:                                              ; preds = %632, %617
  br label %643

637:                                              ; preds = %609
  %638 = getelementptr inbounds i8, i8* %598, i64 3
  br label %643

639:                                              ; preds = %605
  %640 = getelementptr inbounds i8, i8* %598, i64 2
  br label %643

641:                                              ; preds = %601
  %642 = getelementptr inbounds i8, i8* %598, i64 1
  br label %643

643:                                              ; preds = %596, %637, %639, %641, %636, %632, %626, %621
  %644 = phi i8* [ %591, %636 ], [ %618, %621 ], [ %627, %626 ], [ %633, %632 ], [ %638, %637 ], [ %640, %639 ], [ %642, %641 ], [ %598, %596 ]
  %645 = icmp eq i8* %644, %591
  br i1 %645, label %869, label %646

646:                                              ; preds = %643
  %647 = bitcast %"class.std::__cxx11::basic_string"* %20 to i8*
  %648 = bitcast %"class.std::__cxx11::basic_string"* %21 to i8*
  %649 = bitcast %"class.std::__cxx11::basic_string"* %22 to i8*
  %650 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %22, i64 0, i32 2
  %651 = bitcast %"class.std::__cxx11::basic_string"* %22 to %union.anon**
  %652 = bitcast i64* %7 to i8*
  %653 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %22, i64 0, i32 0, i32 0
  %654 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %22, i64 0, i32 2, i32 0
  %655 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %22, i64 0, i32 0, i32 0
  %656 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %22, i64 0, i32 1
  %657 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %21, i64 0, i32 2
  %658 = bitcast %"class.std::__cxx11::basic_string"* %21 to %union.anon**
  %659 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %21, i64 0, i32 0, i32 0
  %660 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %21, i64 0, i32 2, i32 0
  %661 = bitcast %union.anon* %657 to i8*
  %662 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %21, i64 0, i32 1
  %663 = bitcast %"class.std::__cxx11::basic_string"* %23 to i8*
  %664 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %23, i64 0, i32 2
  %665 = bitcast %"class.std::__cxx11::basic_string"* %23 to %union.anon**
  %666 = bitcast i64* %6 to i8*
  %667 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %23, i64 0, i32 0, i32 0
  %668 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %23, i64 0, i32 2, i32 0
  %669 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %23, i64 0, i32 0, i32 0
  %670 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %23, i64 0, i32 1
  %671 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %21, i64 0, i32 0, i32 0
  %672 = bitcast %union.anon* %657 to i8*
  %673 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %21, i64 0, i32 2, i32 0
  %674 = bitcast %union.anon* %664 to i8*
  %675 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %23, i64 0, i32 2, i32 0
  %676 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %20, i64 0, i32 2
  %677 = bitcast %"class.std::__cxx11::basic_string"* %20 to %union.anon**
  %678 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %20, i64 0, i32 0, i32 0
  %679 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %20, i64 0, i32 2, i32 0
  %680 = bitcast %union.anon* %676 to i8*
  %681 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %20, i64 0, i32 1
  %682 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %20, i64 0, i32 0, i32 0
  %683 = bitcast %union.anon* %676 to i8*
  %684 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %18, i64 0, i32 2, i32 0
  %685 = getelementptr %union.anon, %union.anon* %676, i64 0, i32 0
  %686 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %20, i64 0, i32 2, i32 0
  %687 = bitcast %union.anon* %664 to i8*
  %688 = bitcast %union.anon* %650 to i8*
  %689 = load i64, i64* %543, align 8, !tbaa !15
  %690 = icmp eq i64 %689, 0
  br i1 %690, label %869, label %693

691:                                              ; preds = %539
  %692 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %545) #20
  br label %876

693:                                              ; preds = %646, %865
  %694 = phi i64 [ %866, %865 ], [ 0, %646 ]
  %695 = load i8*, i8** %547, align 8, !tbaa !18
  %696 = getelementptr inbounds i8, i8* %695, i64 %694
  %697 = load i8, i8* %696, align 1, !tbaa !12
  %698 = icmp eq i8 %697, 44
  br i1 %698, label %699, label %865

699:                                              ; preds = %693
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %647) #20
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %648) #20
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %649) #20
  call void @llvm.experimental.noalias.scope.decl(metadata !40)
  store %union.anon* %650, %union.anon** %651, align 8, !tbaa !13, !alias.scope !40
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %652) #20, !noalias !40
  store i64 %694, i64* %7, align 8, !tbaa !25, !noalias !40
  %700 = icmp ugt i64 %694, 15
  br i1 %700, label %701, label %705

701:                                              ; preds = %699
  %702 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %22, i64* nonnull align 8 dereferenceable(8) %7, i64 0)
          to label %703 unwind label %832

703:                                              ; preds = %701
  store i8* %702, i8** %653, align 8, !tbaa !18, !alias.scope !40
  %704 = load i64, i64* %7, align 8, !tbaa !25, !noalias !40
  store i64 %704, i64* %654, align 8, !tbaa !12, !alias.scope !40
  br label %705

705:                                              ; preds = %703, %699
  %706 = load i8*, i8** %655, align 8, !tbaa !18, !alias.scope !40
  %707 = trunc i64 %694 to i32
  switch i32 %707, label %710 [
    i32 1, label %708
    i32 0, label %711
  ]

708:                                              ; preds = %705
  %709 = load i8, i8* %695, align 1, !tbaa !12
  store i8 %709, i8* %706, align 1, !tbaa !12
  br label %711

710:                                              ; preds = %705
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %706, i8* align 1 %695, i64 %694, i1 false) #20
  br label %711

711:                                              ; preds = %705, %708, %710
  %712 = load i64, i64* %7, align 8, !tbaa !25, !noalias !40
  store i64 %712, i64* %656, align 8, !tbaa !15, !alias.scope !40
  %713 = load i8*, i8** %655, align 8, !tbaa !18, !alias.scope !40
  %714 = getelementptr inbounds i8, i8* %713, i64 %712
  store i8 0, i8* %714, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %652) #20, !noalias !40
  call void @llvm.experimental.noalias.scope.decl(metadata !43)
  %715 = load i64, i64* %656, align 8, !tbaa !15, !noalias !43
  %716 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %22, i64 %715, i64 0, i64 1, i8 signext 46)
          to label %717 unwind label %834

717:                                              ; preds = %711
  store %union.anon* %657, %union.anon** %658, align 8, !tbaa !13, !alias.scope !43
  %718 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %716, i64 0, i32 0, i32 0
  %719 = load i8*, i8** %718, align 8, !tbaa !18
  %720 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %716, i64 0, i32 2
  %721 = bitcast %union.anon* %720 to i8*
  %722 = icmp eq i8* %719, %721
  br i1 %722, label %723, label %724

723:                                              ; preds = %717
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %661, i8* noundef nonnull align 8 dereferenceable(16) %721, i64 16, i1 false) #20
  br label %727

724:                                              ; preds = %717
  store i8* %719, i8** %659, align 8, !tbaa !18, !alias.scope !43
  %725 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %716, i64 0, i32 2, i32 0
  %726 = load i64, i64* %725, align 8, !tbaa !12
  store i64 %726, i64* %660, align 8, !tbaa !12, !alias.scope !43
  br label %727

727:                                              ; preds = %723, %724
  %728 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %716, i64 0, i32 1
  %729 = load i64, i64* %728, align 8, !tbaa !15
  store i64 %729, i64* %662, align 8, !tbaa !15, !alias.scope !43
  %730 = bitcast %"class.std::__cxx11::basic_string"* %716 to %union.anon**
  store %union.anon* %720, %union.anon** %730, align 8, !tbaa !18
  store i64 0, i64* %728, align 8, !tbaa !15
  store i8 0, i8* %721, align 8, !tbaa !12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %663) #20
  %731 = add nuw nsw i64 %694, 1
  call void @llvm.experimental.noalias.scope.decl(metadata !46)
  %732 = load i64, i64* %543, align 8, !tbaa !15, !noalias !46
  %733 = icmp ugt i64 %732, %694
  br i1 %733, label %737, label %734

734:                                              ; preds = %727
  %735 = and i64 %731, 4294967295
  invoke void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 %735, i64 %732) #21
          to label %736 unwind label %838

736:                                              ; preds = %734
  unreachable

737:                                              ; preds = %727
  store %union.anon* %664, %union.anon** %665, align 8, !tbaa !13, !alias.scope !46
  %738 = load i8*, i8** %547, align 8, !tbaa !18, !noalias !46
  %739 = getelementptr inbounds i8, i8* %738, i64 %731
  %740 = sub i64 %732, %731
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %666) #20, !noalias !46
  store i64 %740, i64* %6, align 8, !tbaa !25, !noalias !46
  %741 = icmp ugt i64 %740, 15
  br i1 %741, label %742, label %746

742:                                              ; preds = %737
  %743 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %23, i64* nonnull align 8 dereferenceable(8) %6, i64 0)
          to label %744 unwind label %836

744:                                              ; preds = %742
  store i8* %743, i8** %667, align 8, !tbaa !18, !alias.scope !46
  %745 = load i64, i64* %6, align 8, !tbaa !25, !noalias !46
  store i64 %745, i64* %668, align 8, !tbaa !12, !alias.scope !46
  br label %746

746:                                              ; preds = %744, %737
  %747 = load i8*, i8** %669, align 8, !tbaa !18, !alias.scope !46
  switch i64 %740, label %750 [
    i64 1, label %748
    i64 0, label %751
  ]

748:                                              ; preds = %746
  %749 = load i8, i8* %739, align 1, !tbaa !12
  store i8 %749, i8* %747, align 1, !tbaa !12
  br label %751

750:                                              ; preds = %746
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %747, i8* nonnull align 1 %739, i64 %740, i1 false) #20
  br label %751

751:                                              ; preds = %746, %748, %750
  %752 = load i64, i64* %6, align 8, !tbaa !25, !noalias !46
  store i64 %752, i64* %670, align 8, !tbaa !15, !alias.scope !46
  %753 = load i8*, i8** %669, align 8, !tbaa !18, !alias.scope !46
  %754 = getelementptr inbounds i8, i8* %753, i64 %752
  store i8 0, i8* %754, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %666) #20, !noalias !46
  call void @llvm.experimental.noalias.scope.decl(metadata !49)
  %755 = load i64, i64* %662, align 8, !tbaa !15, !noalias !49
  %756 = load i64, i64* %670, align 8, !tbaa !15, !noalias !49
  %757 = add i64 %756, %755
  %758 = load i8*, i8** %671, align 8, !tbaa !18, !noalias !49
  %759 = icmp eq i8* %758, %672
  %760 = load i64, i64* %673, align 8, !noalias !49
  %761 = select i1 %759, i64 15, i64 %760
  %762 = icmp ugt i64 %757, %761
  br i1 %762, label %763, label %771

763:                                              ; preds = %751
  %764 = load i8*, i8** %669, align 8, !tbaa !18, !noalias !49
  %765 = icmp eq i8* %764, %674
  %766 = load i64, i64* %675, align 8, !noalias !49
  %767 = select i1 %765, i64 15, i64 %766
  %768 = icmp ugt i64 %757, %767
  br i1 %768, label %771, label %769

769:                                              ; preds = %763
  %770 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %23, i64 0, i64 0, i8* %758, i64 %755)
          to label %774 unwind label %840

771:                                              ; preds = %763, %751
  %772 = load i8*, i8** %669, align 8, !tbaa !18, !noalias !49
  %773 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %21, i8* %772, i64 %756)
          to label %774 unwind label %840

774:                                              ; preds = %771, %769
  %775 = phi %"class.std::__cxx11::basic_string"* [ %770, %769 ], [ %773, %771 ]
  store %union.anon* %676, %union.anon** %677, align 8, !tbaa !13, !alias.scope !49
  %776 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %775, i64 0, i32 0, i32 0
  %777 = load i8*, i8** %776, align 8, !tbaa !18
  %778 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %775, i64 0, i32 2
  %779 = bitcast %union.anon* %778 to i8*
  %780 = icmp eq i8* %777, %779
  br i1 %780, label %781, label %782

781:                                              ; preds = %774
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %680, i8* noundef nonnull align 8 dereferenceable(16) %779, i64 16, i1 false) #20
  br label %785

782:                                              ; preds = %774
  store i8* %777, i8** %678, align 8, !tbaa !18, !alias.scope !49
  %783 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %775, i64 0, i32 2, i32 0
  %784 = load i64, i64* %783, align 8, !tbaa !12
  store i64 %784, i64* %679, align 8, !tbaa !12, !alias.scope !49
  br label %785

785:                                              ; preds = %781, %782
  %786 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %775, i64 0, i32 1
  %787 = load i64, i64* %786, align 8, !tbaa !15
  store i64 %787, i64* %681, align 8, !tbaa !15, !alias.scope !49
  %788 = bitcast %"class.std::__cxx11::basic_string"* %775 to %union.anon**
  store %union.anon* %778, %union.anon** %788, align 8, !tbaa !18
  store i64 0, i64* %786, align 8, !tbaa !15
  store i8 0, i8* %779, align 8, !tbaa !12
  %789 = load i8*, i8** %682, align 8, !tbaa !18
  %790 = icmp eq i8* %789, %683
  br i1 %790, label %791, label %804

791:                                              ; preds = %785
  %792 = load i64, i64* %681, align 8, !tbaa !15
  %793 = icmp eq i64 %792, 0
  br i1 %793, label %800, label %794

794:                                              ; preds = %791
  %795 = load i8*, i8** %547, align 8, !tbaa !18
  %796 = icmp eq i64 %792, 1
  br i1 %796, label %797, label %799

797:                                              ; preds = %794
  %798 = load i8, i8* %789, align 1, !tbaa !12
  store i8 %798, i8* %795, align 1, !tbaa !12
  br label %800

799:                                              ; preds = %794
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %795, i8* align 1 %789, i64 %792, i1 false) #20
  br label %800

800:                                              ; preds = %799, %797, %791
  %801 = load i64, i64* %681, align 8, !tbaa !15
  store i64 %801, i64* %543, align 8, !tbaa !15
  %802 = load i8*, i8** %547, align 8, !tbaa !18
  %803 = getelementptr inbounds i8, i8* %802, i64 %801
  store i8 0, i8* %803, align 1, !tbaa !12
  br label %814

804:                                              ; preds = %785
  %805 = load i8*, i8** %547, align 8, !tbaa !18
  %806 = icmp eq i8* %805, %544
  %807 = load i64, i64* %684, align 8
  store i8* %789, i8** %547, align 8, !tbaa !18
  %808 = load i64, i64* %681, align 8, !tbaa !15
  store i64 %808, i64* %543, align 8, !tbaa !15
  %809 = load i64, i64* %685, align 8, !tbaa !12
  store i64 %809, i64* %684, align 8, !tbaa !12
  %810 = icmp eq i8* %805, null
  %811 = or i1 %806, %810
  br i1 %811, label %813, label %812

812:                                              ; preds = %804
  store i8* %805, i8** %682, align 8, !tbaa !18
  store i64 %807, i64* %686, align 8, !tbaa !12
  br label %814

813:                                              ; preds = %804
  store %union.anon* %676, %union.anon** %677, align 8, !tbaa !18
  br label %814

814:                                              ; preds = %800, %812, %813
  store i64 0, i64* %681, align 8, !tbaa !15
  %815 = load i8*, i8** %682, align 8, !tbaa !18
  store i8 0, i8* %815, align 1, !tbaa !12
  %816 = load i8*, i8** %682, align 8, !tbaa !18
  %817 = icmp eq i8* %816, %683
  br i1 %817, label %819, label %818

818:                                              ; preds = %814
  call void @_ZdlPv(i8* %816) #20
  br label %819

819:                                              ; preds = %814, %818
  %820 = load i8*, i8** %669, align 8, !tbaa !18
  %821 = icmp eq i8* %820, %687
  br i1 %821, label %823, label %822

822:                                              ; preds = %819
  call void @_ZdlPv(i8* %820) #20
  br label %823

823:                                              ; preds = %819, %822
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %663) #20
  %824 = load i8*, i8** %671, align 8, !tbaa !18
  %825 = icmp eq i8* %824, %672
  br i1 %825, label %827, label %826

826:                                              ; preds = %823
  call void @_ZdlPv(i8* %824) #20
  br label %827

827:                                              ; preds = %823, %826
  %828 = load i8*, i8** %655, align 8, !tbaa !18
  %829 = icmp eq i8* %828, %688
  br i1 %829, label %831, label %830

830:                                              ; preds = %827
  call void @_ZdlPv(i8* %828) #20
  br label %831

831:                                              ; preds = %827, %830
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %649) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %648) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %647) #20
  br label %865

832:                                              ; preds = %701
  %833 = landingpad { i8*, i32 }
          cleanup
  br label %860

834:                                              ; preds = %711
  %835 = landingpad { i8*, i32 }
          cleanup
  br label %854

836:                                              ; preds = %742
  %837 = landingpad { i8*, i32 }
          cleanup
  br label %846

838:                                              ; preds = %734
  %839 = landingpad { i8*, i32 }
          cleanup
  br label %846

840:                                              ; preds = %771, %769
  %841 = landingpad { i8*, i32 }
          cleanup
  %842 = load i8*, i8** %669, align 8, !tbaa !18
  %843 = bitcast %union.anon* %664 to i8*
  %844 = icmp eq i8* %842, %843
  br i1 %844, label %846, label %845

845:                                              ; preds = %840
  call void @_ZdlPv(i8* %842) #20
  br label %846

846:                                              ; preds = %836, %838, %845, %840
  %847 = phi { i8*, i32 } [ %841, %840 ], [ %841, %845 ], [ %837, %836 ], [ %839, %838 ]
  %848 = bitcast %"class.std::__cxx11::basic_string"* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %848) #20
  %849 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %21, i64 0, i32 0, i32 0
  %850 = load i8*, i8** %849, align 8, !tbaa !18
  %851 = bitcast %union.anon* %657 to i8*
  %852 = icmp eq i8* %850, %851
  br i1 %852, label %854, label %853

853:                                              ; preds = %846
  call void @_ZdlPv(i8* %850) #20
  br label %854

854:                                              ; preds = %853, %846, %834
  %855 = phi { i8*, i32 } [ %835, %834 ], [ %847, %846 ], [ %847, %853 ]
  %856 = load i8*, i8** %655, align 8, !tbaa !18
  %857 = bitcast %union.anon* %650 to i8*
  %858 = icmp eq i8* %856, %857
  br i1 %858, label %860, label %859

859:                                              ; preds = %854
  call void @_ZdlPv(i8* %856) #20
  br label %860

860:                                              ; preds = %859, %854, %832
  %861 = phi { i8*, i32 } [ %833, %832 ], [ %855, %854 ], [ %855, %859 ]
  %862 = bitcast %"class.std::__cxx11::basic_string"* %22 to i8*
  %863 = bitcast %"class.std::__cxx11::basic_string"* %21 to i8*
  %864 = bitcast %"class.std::__cxx11::basic_string"* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %862) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %863) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %864) #20
  br label %876

865:                                              ; preds = %693, %831
  %866 = add nuw i64 %694, 1
  %867 = load i64, i64* %543, align 8, !tbaa !15
  %868 = icmp ugt i64 %867, %866
  br i1 %868, label %693, label %869, !llvm.loop !52

869:                                              ; preds = %865, %646, %643
  %870 = load i8*, i8** %547, align 8, !tbaa !18
  %871 = call double @strtod(i8* nocapture nonnull %870, i8** null) #20
  %872 = load i8*, i8** %547, align 8, !tbaa !18
  %873 = icmp eq i8* %872, %544
  br i1 %873, label %875, label %874

874:                                              ; preds = %869
  call void @_ZdlPv(i8* %872) #20
  br label %875

875:                                              ; preds = %869, %874
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %540) #20
  br label %1011

876:                                              ; preds = %860, %691
  %877 = phi { i8*, i32 } [ %861, %860 ], [ %692, %691 ]
  %878 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %18, i64 0, i32 0, i32 0
  %879 = load i8*, i8** %878, align 8, !tbaa !18
  %880 = icmp eq i8* %879, %544
  br i1 %880, label %882, label %881

881:                                              ; preds = %876
  call void @_ZdlPv(i8* %879) #20
  br label %882

882:                                              ; preds = %876, %881
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %540) #20
  br label %1062

883:                                              ; preds = %533, %536
  %884 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %519, align 8, !tbaa !3
  %885 = icmp eq %"class.boost::any::placeholder"* %884, null
  br i1 %885, label %892, label %886

886:                                              ; preds = %883
  %887 = bitcast %"class.boost::any::placeholder"* %884 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %888 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %887, align 8, !tbaa !8
  %889 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %888, i64 2
  %890 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %889, align 8
  %891 = call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %890(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %884) #20
  br label %892

892:                                              ; preds = %883, %886
  %893 = phi %"class.std::type_info"* [ %891, %886 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %883 ]
  %894 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %893, i64 0, i32 1
  %895 = load i8*, i8** %894, align 8, !tbaa !10
  %896 = load i8*, i8** getelementptr inbounds (i8*, i8** @_ZTIi, i64 1), align 8, !tbaa !10
  %897 = icmp eq i8* %895, %896
  br i1 %897, label %904, label %898

898:                                              ; preds = %892
  %899 = load i8, i8* %895, align 1, !tbaa !12
  %900 = icmp eq i8 %899, 42
  br i1 %900, label %947, label %901

901:                                              ; preds = %898
  %902 = call i32 @strcmp(i8* noundef nonnull %895, i8* noundef nonnull dereferenceable(1) %896) #20
  %903 = icmp eq i32 %902, 0
  br i1 %903, label %904, label %947

904:                                              ; preds = %892, %901
  %905 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %519, align 8, !tbaa !3
  %906 = icmp eq %"class.boost::any::placeholder"* %905, null
  br i1 %906, label %913, label %907

907:                                              ; preds = %904
  %908 = bitcast %"class.boost::any::placeholder"* %905 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %909 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %908, align 8, !tbaa !8
  %910 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %909, i64 2
  %911 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %910, align 8
  %912 = call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %911(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %905) #20
  br label %913

913:                                              ; preds = %907, %904
  %914 = phi %"class.std::type_info"* [ %912, %907 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %904 ]
  %915 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %914, i64 0, i32 1
  %916 = load i8*, i8** %915, align 8, !tbaa !10
  %917 = load i8, i8* %916, align 1, !tbaa !12
  %918 = icmp eq i8 %917, 42
  %919 = zext i1 %918 to i64
  %920 = getelementptr i8, i8* %916, i64 %919
  %921 = load i8, i8* %896, align 1, !tbaa !12
  %922 = icmp eq i8 %921, 42
  %923 = zext i1 %922 to i64
  %924 = getelementptr i8, i8* %896, i64 %923
  %925 = icmp eq i8* %920, %924
  br i1 %925, label %929, label %926

926:                                              ; preds = %913
  %927 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %920, i8* noundef nonnull dereferenceable(1) %924) #22
  %928 = icmp eq i32 %927, 0
  br i1 %928, label %929, label %933

929:                                              ; preds = %926, %913
  %930 = bitcast %"class.boost::any"* %2 to %"class.boost::any::holder.0"**
  %931 = load %"class.boost::any::holder.0"*, %"class.boost::any::holder.0"** %930, align 8, !tbaa !3
  %932 = getelementptr inbounds %"class.boost::any::holder.0", %"class.boost::any::holder.0"* %931, i64 0, i32 1
  br label %933

933:                                              ; preds = %929, %926
  %934 = phi i32* [ %932, %929 ], [ null, %926 ]
  %935 = icmp eq i32* %934, null
  br i1 %935, label %936, label %944

936:                                              ; preds = %933
  %937 = bitcast %"class.boost::bad_any_cast"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %937) #20
  %938 = bitcast %"class.boost::bad_any_cast"* %5 to i64*
  store i64 0, i64* %938, align 8
  %939 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %939, align 8, !tbaa !8
  invoke void @_ZN5boost15throw_exceptionINS_12bad_any_castEEEvRKT_(%"class.boost::bad_any_cast"* nonnull align 8 dereferenceable(8) %5) #21
          to label %940 unwind label %941

940:                                              ; preds = %936
  unreachable

941:                                              ; preds = %936
  %942 = landingpad { i8*, i32 }
          cleanup
  %943 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %5, i64 0, i32 0
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %943) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %937) #20
  br label %1062

944:                                              ; preds = %933
  %945 = load i32, i32* %934, align 4, !tbaa !36
  %946 = sitofp i32 %945 to double
  br label %947

947:                                              ; preds = %898, %944, %901
  %948 = phi double [ %946, %944 ], [ undef, %901 ], [ undef, %898 ]
  %949 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %519, align 8, !tbaa !3
  %950 = icmp eq %"class.boost::any::placeholder"* %949, null
  br i1 %950, label %957, label %951

951:                                              ; preds = %947
  %952 = bitcast %"class.boost::any::placeholder"* %949 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %953 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %952, align 8, !tbaa !8
  %954 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %953, i64 2
  %955 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %954, align 8
  %956 = call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %955(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %949) #20
  br label %957

957:                                              ; preds = %947, %951
  %958 = phi %"class.std::type_info"* [ %956, %951 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %947 ]
  %959 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %958, i64 0, i32 1
  %960 = load i8*, i8** %959, align 8, !tbaa !10
  %961 = load i8*, i8** getelementptr inbounds (i8*, i8** @_ZTId, i64 1), align 8, !tbaa !10
  %962 = icmp eq i8* %960, %961
  br i1 %962, label %969, label %963

963:                                              ; preds = %957
  %964 = load i8, i8* %960, align 1, !tbaa !12
  %965 = icmp eq i8 %964, 42
  br i1 %965, label %1011, label %966

966:                                              ; preds = %963
  %967 = call i32 @strcmp(i8* noundef nonnull %960, i8* noundef nonnull dereferenceable(1) %961) #20
  %968 = icmp eq i32 %967, 0
  br i1 %968, label %969, label %1011

969:                                              ; preds = %957, %966
  %970 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %519, align 8, !tbaa !3
  %971 = icmp eq %"class.boost::any::placeholder"* %970, null
  br i1 %971, label %978, label %972

972:                                              ; preds = %969
  %973 = bitcast %"class.boost::any::placeholder"* %970 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %974 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %973, align 8, !tbaa !8
  %975 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %974, i64 2
  %976 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %975, align 8
  %977 = call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %976(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %970) #20
  br label %978

978:                                              ; preds = %972, %969
  %979 = phi %"class.std::type_info"* [ %977, %972 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %969 ]
  %980 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %979, i64 0, i32 1
  %981 = load i8*, i8** %980, align 8, !tbaa !10
  %982 = load i8, i8* %981, align 1, !tbaa !12
  %983 = icmp eq i8 %982, 42
  %984 = zext i1 %983 to i64
  %985 = getelementptr i8, i8* %981, i64 %984
  %986 = load i8, i8* %961, align 1, !tbaa !12
  %987 = icmp eq i8 %986, 42
  %988 = zext i1 %987 to i64
  %989 = getelementptr i8, i8* %961, i64 %988
  %990 = icmp eq i8* %985, %989
  br i1 %990, label %994, label %991

991:                                              ; preds = %978
  %992 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %985, i8* noundef nonnull dereferenceable(1) %989) #22
  %993 = icmp eq i32 %992, 0
  br i1 %993, label %994, label %998

994:                                              ; preds = %991, %978
  %995 = bitcast %"class.boost::any"* %2 to %"class.boost::any::holder.1"**
  %996 = load %"class.boost::any::holder.1"*, %"class.boost::any::holder.1"** %995, align 8, !tbaa !3
  %997 = getelementptr inbounds %"class.boost::any::holder.1", %"class.boost::any::holder.1"* %996, i64 0, i32 1
  br label %998

998:                                              ; preds = %994, %991
  %999 = phi double* [ %997, %994 ], [ null, %991 ]
  %1000 = icmp eq double* %999, null
  br i1 %1000, label %1001, label %1009

1001:                                             ; preds = %998
  %1002 = bitcast %"class.boost::bad_any_cast"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1002) #20
  %1003 = bitcast %"class.boost::bad_any_cast"* %4 to i64*
  store i64 0, i64* %1003, align 8
  %1004 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1004, align 8, !tbaa !8
  invoke void @_ZN5boost15throw_exceptionINS_12bad_any_castEEEvRKT_(%"class.boost::bad_any_cast"* nonnull align 8 dereferenceable(8) %4) #21
          to label %1005 unwind label %1006

1005:                                             ; preds = %1001
  unreachable

1006:                                             ; preds = %1001
  %1007 = landingpad { i8*, i32 }
          cleanup
  %1008 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %4, i64 0, i32 0
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %1008) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1002) #20
  br label %1062

1009:                                             ; preds = %998
  %1010 = load double, double* %999, align 8, !tbaa !38
  br label %1011

1011:                                             ; preds = %963, %1009, %966, %875
  %1012 = phi double [ %871, %875 ], [ %948, %966 ], [ %1010, %1009 ], [ %948, %963 ]
  %1013 = fcmp oeq double %518, %1012
  br i1 %1013, label %1014, label %1052

1014:                                             ; preds = %1011
  %1015 = bitcast %"class.std::__cxx11::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1015) #20
  %1016 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %24, i64 0, i32 2
  %1017 = bitcast %"class.std::__cxx11::basic_string"* %24 to %union.anon**
  store %union.anon* %1016, %union.anon** %1017, align 8, !tbaa !13
  %1018 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %24, i64 0, i32 0, i32 0
  %1019 = bitcast %union.anon* %1016 to i32*
  store i32 1701736270, i32* %1019, align 8
  %1020 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %24, i64 0, i32 1
  store i64 4, i64* %1020, align 8, !tbaa !15
  %1021 = bitcast %union.anon* %1016 to i8*
  %1022 = getelementptr inbounds i8, i8* %1021, i64 4
  store i8 0, i8* %1022, align 4, !tbaa !12
  %1023 = invoke noalias nonnull dereferenceable(40) i8* @_Znwm(i64 40) #23
          to label %1024 unwind label %1045

1024:                                             ; preds = %1014
  %1025 = bitcast i8* %1023 to %"class.boost::any::holder"*
  %1026 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %1025, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1026, align 8, !tbaa !8
  %1027 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %1025, i64 0, i32 1
  %1028 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %1025, i64 0, i32 1, i32 2
  %1029 = bitcast %"class.std::__cxx11::basic_string"* %1027 to %union.anon**
  store %union.anon* %1028, %union.anon** %1029, align 8, !tbaa !13
  %1030 = load i8*, i8** %1018, align 8, !tbaa !18
  %1031 = bitcast %union.anon* %1016 to i8*
  %1032 = icmp eq i8* %1030, %1031
  br i1 %1032, label %1033, label %1035

1033:                                             ; preds = %1024
  %1034 = bitcast %union.anon* %1028 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %1034, i8* noundef nonnull align 8 dereferenceable(16) %1031, i64 16, i1 false) #20
  br label %1040

1035:                                             ; preds = %1024
  %1036 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1027, i64 0, i32 0, i32 0
  store i8* %1030, i8** %1036, align 8, !tbaa !18
  %1037 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %24, i64 0, i32 2, i32 0
  %1038 = load i64, i64* %1037, align 8, !tbaa !12
  %1039 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %1025, i64 0, i32 1, i32 2, i32 0
  store i64 %1038, i64* %1039, align 8, !tbaa !12
  br label %1040

1040:                                             ; preds = %1033, %1035
  %1041 = getelementptr inbounds %"class.boost::any", %"class.boost::any"* %0, i64 0, i32 0
  %1042 = load i64, i64* %1020, align 8, !tbaa !15
  %1043 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %1025, i64 0, i32 1, i32 1
  store i64 %1042, i64* %1043, align 8, !tbaa !15
  store %union.anon* %1016, %union.anon** %1017, align 8, !tbaa !18
  store i64 0, i64* %1020, align 8, !tbaa !15
  store i8 0, i8* %1031, align 8, !tbaa !12
  %1044 = getelementptr %"class.boost::any::holder", %"class.boost::any::holder"* %1025, i64 0, i32 0
  store %"class.boost::any::placeholder"* %1044, %"class.boost::any::placeholder"** %1041, align 8, !tbaa !3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1015) #20
  br label %1061

1045:                                             ; preds = %1014
  %1046 = landingpad { i8*, i32 }
          cleanup
  %1047 = load i8*, i8** %1018, align 8, !tbaa !18
  %1048 = bitcast %union.anon* %1016 to i8*
  %1049 = icmp eq i8* %1047, %1048
  br i1 %1049, label %1051, label %1050

1050:                                             ; preds = %1045
  call void @_ZdlPv(i8* %1047) #20
  br label %1051

1051:                                             ; preds = %1050, %1045
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1015) #20
  br label %1062

1052:                                             ; preds = %1011
  %1053 = fcmp olt double %518, %1012
  br i1 %1053, label %1054, label %1057

1054:                                             ; preds = %1052
  %1055 = getelementptr inbounds %"class.boost::any", %"class.boost::any"* %0, i64 0, i32 0
  %1056 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %519, align 8, !tbaa !3
  store %"class.boost::any::placeholder"* %1056, %"class.boost::any::placeholder"** %1055, align 8, !tbaa !3
  store %"class.boost::any::placeholder"* null, %"class.boost::any::placeholder"** %519, align 8, !tbaa !3
  br label %1061

1057:                                             ; preds = %1052
  %1058 = fcmp ogt double %518, %1012
  call void @llvm.assume(i1 %1058)
  %1059 = getelementptr inbounds %"class.boost::any", %"class.boost::any"* %0, i64 0, i32 0
  %1060 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %25, align 8, !tbaa !3
  store %"class.boost::any::placeholder"* %1060, %"class.boost::any::placeholder"** %1059, align 8, !tbaa !3
  store %"class.boost::any::placeholder"* null, %"class.boost::any::placeholder"** %25, align 8, !tbaa !3
  br label %1061

1061:                                             ; preds = %1040, %1054, %1057
  ret void

1062:                                             ; preds = %388, %882, %1051, %512, %941, %1006, %447
  %1063 = phi { i8*, i32 } [ %383, %388 ], [ %877, %882 ], [ %1046, %1051 ], [ %448, %447 ], [ %513, %512 ], [ %1007, %1006 ], [ %942, %941 ]
  resume { i8*, i32 } %1063
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5boost8any_castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_RNS_3anyE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.boost::any"* nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.boost::bad_any_cast", align 8
  %5 = getelementptr inbounds %"class.boost::any", %"class.boost::any"* %1, i64 0, i32 0
  %6 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %5, align 8, !tbaa !3
  %7 = icmp eq %"class.boost::any::placeholder"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.boost::any::placeholder"* %6 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %10 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %9, align 8, !tbaa !8
  %11 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %10, i64 2
  %12 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %11, align 8
  %13 = call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %12(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %6) #20
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi %"class.std::type_info"* [ %13, %8 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %2 ]
  %16 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %15, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8, !tbaa !10
  %18 = load i8, i8* %17, align 1, !tbaa !12
  %19 = icmp eq i8 %18, 42
  %20 = zext i1 %19 to i64
  %21 = getelementptr i8, i8* %17, i64 %20
  %22 = icmp eq i8* %21, getelementptr inbounds ([53 x i8], [53 x i8]* @_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, i64 0, i64 0)
  br i1 %22, label %26, label %23

23:                                               ; preds = %14
  %24 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %21, i8* noundef nonnull dereferenceable(53) getelementptr inbounds ([53 x i8], [53 x i8]* @_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, i64 0, i64 0)) #22
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %23, %14
  %27 = bitcast %"class.boost::any"* %1 to %"class.boost::any::holder"**
  %28 = load %"class.boost::any::holder"*, %"class.boost::any::holder"** %27, align 8, !tbaa !3
  %29 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %28, i64 0, i32 1
  br label %30

30:                                               ; preds = %23, %26
  %31 = phi %"class.std::__cxx11::basic_string"* [ %29, %26 ], [ null, %23 ]
  %32 = icmp eq %"class.std::__cxx11::basic_string"* %31, null
  br i1 %32, label %33, label %41

33:                                               ; preds = %30
  %34 = bitcast %"class.boost::bad_any_cast"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #20
  %35 = bitcast %"class.boost::bad_any_cast"* %4 to i64*
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8, !tbaa !8
  invoke void @_ZN5boost15throw_exceptionINS_12bad_any_castEEEvRKT_(%"class.boost::bad_any_cast"* nonnull align 8 dereferenceable(8) %4) #21
          to label %37 unwind label %38

37:                                               ; preds = %33
  unreachable

38:                                               ; preds = %33
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %4, i64 0, i32 0
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %40) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #20
  resume { i8*, i32 } %39

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %43 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %42, %union.anon** %43, align 8, !tbaa !13
  %44 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %31, i64 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8, !tbaa !18
  %46 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %31, i64 0, i32 1
  %47 = load i64, i64* %46, align 8, !tbaa !15
  %48 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #20
  store i64 %47, i64* %3, align 8, !tbaa !25
  %49 = icmp ugt i64 %47, 15
  br i1 %49, label %50, label %55

50:                                               ; preds = %41
  %51 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
  %52 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %51, i8** %52, align 8, !tbaa !18
  %53 = load i64, i64* %3, align 8, !tbaa !25
  %54 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %53, i64* %54, align 8, !tbaa !12
  br label %55

55:                                               ; preds = %50, %41
  %56 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8, !tbaa !18
  switch i64 %47, label %60 [
    i64 1, label %58
    i64 0, label %61
  ]

58:                                               ; preds = %55
  %59 = load i8, i8* %45, align 1, !tbaa !12
  store i8 %59, i8* %57, align 1, !tbaa !12
  br label %61

60:                                               ; preds = %55
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %57, i8* align 1 %45, i64 %47, i1 false) #20
  br label %61

61:                                               ; preds = %55, %58, %60
  %62 = load i64, i64* %3, align 8, !tbaa !25
  %63 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %62, i64* %63, align 8, !tbaa !15
  %64 = load i8*, i8** %56, align 8, !tbaa !18
  %65 = getelementptr inbounds i8, i8* %64, i64 %62
  store i8 0, i8* %65, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #20
  ret void
}

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare dso_local i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind willreturn
declare dso_local double @strtod(i8* readonly, i8** nocapture) local_unnamed_addr #3

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #4 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #20
  call void @_ZSt9terminatev() #24
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #5

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #6

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i8*, i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare dso_local void @_ZSt24__throw_out_of_range_fmtPKcz(i8*, ...) local_unnamed_addr #8

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #6

; Function Attrs: inlinehint noreturn uwtable
define linkonce_odr dso_local void @_ZN5boost15throw_exceptionINS_12bad_any_castEEEvRKT_(%"class.boost::bad_any_cast"* nonnull align 8 dereferenceable(8) %0) local_unnamed_addr #9 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.boost::exception_detail::error_info_injector", align 8
  %3 = call i8* @__cxa_allocate_exception(i64 56) #20
  %4 = bitcast %"struct.boost::exception_detail::error_info_injector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #20
  %5 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !8, !alias.scope !53
  %6 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %2, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !8, !alias.scope !53
  %7 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %2, i64 0, i32 1, i32 1, i32 0
  %8 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %2, i64 0, i32 1, i32 4
  %9 = bitcast %"struct.boost::exception_detail::error_info_container"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %9, i8 0, i64 24, i1 false), !alias.scope !53
  store i32 -1, i32* %8, align 8, !tbaa !56, !alias.scope !53
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [4 x i8*] }, { [5 x i8*], [4 x i8*] }* @_ZTVN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !8, !alias.scope !53
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [4 x i8*] }, { [5 x i8*], [4 x i8*] }* @_ZTVN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !8, !alias.scope !53
  call void @llvm.experimental.noalias.scope.decl(metadata !59)
  %10 = getelementptr inbounds i8, i8* %3, i64 48
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5boost16exception_detail10clone_baseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8, !tbaa !8, !alias.scope !59
  %12 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8, !tbaa !8, !alias.scope !59
  %13 = getelementptr inbounds i8, i8* %3, i64 8
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !8, !alias.scope !59
  %15 = getelementptr inbounds i8, i8* %3, i64 16
  %16 = bitcast i8* %15 to %"struct.boost::exception_detail::error_info_container"**
  %17 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %7, align 8, !tbaa !62, !noalias !59
  store %"struct.boost::exception_detail::error_info_container"* %17, %"struct.boost::exception_detail::error_info_container"** %16, align 8, !tbaa !62, !alias.scope !59
  %18 = icmp eq %"struct.boost::exception_detail::error_info_container"* %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %1
  %20 = bitcast %"struct.boost::exception_detail::error_info_container"* %17 to void (%"struct.boost::exception_detail::error_info_container"*)***
  %21 = load void (%"struct.boost::exception_detail::error_info_container"*)**, void (%"struct.boost::exception_detail::error_info_container"*)*** %20, align 8, !tbaa !8, !noalias !59
  %22 = getelementptr inbounds void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %21, i64 3
  %23 = load void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %22, align 8, !noalias !59
  invoke void %23(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %17)
          to label %27 unwind label %24, !noalias !59

24:                                               ; preds = %19
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = bitcast i8* %3 to %"class.std::bad_cast"*
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %26) #20
  br label %56

27:                                               ; preds = %19, %1
  %28 = getelementptr inbounds i8, i8* %3, i64 24
  %29 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %2, i64 0, i32 1, i32 2
  %30 = bitcast i8** %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(20) %28, i8* noundef nonnull align 8 dereferenceable(20) %30, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [4 x i8*] }, { [5 x i8*], [4 x i8*] }* @_ZTVN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8, !tbaa !8, !alias.scope !59
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [4 x i8*] }, { [5 x i8*], [4 x i8*] }* @_ZTVN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !8, !alias.scope !59
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %12, align 8, !tbaa !8, !alias.scope !59
  %31 = getelementptr inbounds i8, i8* %3, i64 8
  %32 = bitcast i8* %31 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %32, align 8, !tbaa !8, !alias.scope !59
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 2, i64 5) to i32 (...)**), i32 (...)*** %11, align 8, !tbaa !8, !alias.scope !59
  %33 = bitcast i8* %31 to %"class.boost::exception"*
  %34 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %2, i64 0, i32 1
  %35 = bitcast %"class.boost::exception.base"* %34 to %"class.boost::exception"*
  invoke void @_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(%"class.boost::exception"* nonnull %33, %"class.boost::exception"* nonnull %35)
          to label %53 unwind label %36

36:                                               ; preds = %27
  %37 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !8, !alias.scope !59
  %38 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %16, align 8, !tbaa !62, !alias.scope !59
  %39 = icmp eq %"struct.boost::exception_detail::error_info_container"* %38, null
  br i1 %39, label %51, label %40

40:                                               ; preds = %36
  %41 = bitcast %"struct.boost::exception_detail::error_info_container"* %38 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %42 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %41, align 8, !tbaa !8
  %43 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %42, i64 4
  %44 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %43, align 8
  %45 = invoke zeroext i1 %44(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %38)
          to label %46 unwind label %48

46:                                               ; preds = %40
  br i1 %45, label %47, label %51

47:                                               ; preds = %46
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %16, align 8, !tbaa !62, !alias.scope !59
  br label %51

48:                                               ; preds = %40
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  call void @__clang_call_terminate(i8* %50) #24
  unreachable

51:                                               ; preds = %47, %46, %36
  %52 = bitcast i8* %3 to %"class.std::bad_cast"*
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %52) #20
  br label %56

53:                                               ; preds = %27
  invoke void @__cxa_throw(i8* %3, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev to i8*)) #21
          to label %61 unwind label %54

54:                                               ; preds = %53
  %55 = landingpad { i8*, i32 }
          cleanup
  br label %56

56:                                               ; preds = %24, %51, %54
  %57 = phi i1 [ false, %54 ], [ true, %51 ], [ true, %24 ]
  %58 = phi { i8*, i32 } [ %55, %54 ], [ %37, %51 ], [ %25, %24 ]
  call void @_ZN5boost16exception_detail19error_info_injectorINS_12bad_any_castEED2Ev(%"struct.boost::exception_detail::error_info_injector"* nonnull align 8 dereferenceable(44) %2) #20
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #20
  br i1 %57, label %59, label %60

59:                                               ; preds = %56
  call void @__cxa_free_exception(i8* %3) #20
  br label %60

60:                                               ; preds = %56, %59
  resume { i8*, i32 } %58

61:                                               ; preds = %53
  unreachable
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #10

; Function Attrs: nounwind
declare dso_local void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8)) unnamed_addr #11

declare dso_local i8* @__cxa_allocate_exception(i64) local_unnamed_addr

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev(%"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !8
  %3 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %4 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %3, align 8, !tbaa !62
  %5 = icmp eq %"struct.boost::exception_detail::error_info_container"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.boost::exception_detail::error_info_container"* %4 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %8 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %7, align 8, !tbaa !8
  %9 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %8, i64 4
  %10 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %9, align 8
  %11 = invoke zeroext i1 %10(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %4)
          to label %12 unwind label %14

12:                                               ; preds = %6
  br i1 %11, label %13, label %17

13:                                               ; preds = %12
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %3, align 8, !tbaa !62
  br label %17

14:                                               ; preds = %6
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  call void @__clang_call_terminate(i8* %16) #24
  unreachable

17:                                               ; preds = %1, %12, %13
  %18 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %18) #20
  ret void
}

declare dso_local void @__cxa_throw(i8*, i8*, i8*) local_unnamed_addr

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail19error_info_injectorINS_12bad_any_castEED2Ev(%"struct.boost::exception_detail::error_info_injector"* nonnull align 8 dereferenceable(44) %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !8
  %3 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %0, i64 0, i32 1, i32 1, i32 0
  %4 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %3, align 8, !tbaa !62
  %5 = icmp eq %"struct.boost::exception_detail::error_info_container"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.boost::exception_detail::error_info_container"* %4 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %8 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %7, align 8, !tbaa !8
  %9 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %8, i64 4
  %10 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %9, align 8
  %11 = invoke zeroext i1 %10(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %4)
          to label %12 unwind label %14

12:                                               ; preds = %6
  br i1 %11, label %13, label %17

13:                                               ; preds = %12
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %3, align 8, !tbaa !62
  br label %17

14:                                               ; preds = %6
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  call void @__clang_call_terminate(i8* %16) #24
  unreachable

17:                                               ; preds = %1, %12, %13
  %18 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %0, i64 0, i32 0, i32 0
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %18) #20
  ret void
}

declare dso_local void @__cxa_free_exception(i8*) local_unnamed_addr

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(%"class.boost::exception"* %0, %"class.boost::exception"* %1) local_unnamed_addr #13 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.boost::exception_detail::refcount_ptr", align 8
  %4 = getelementptr inbounds %"class.boost::exception", %"class.boost::exception"* %1, i64 0, i32 1, i32 0
  %5 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %4, align 8, !tbaa !62
  %6 = icmp eq %"struct.boost::exception_detail::error_info_container"* %5, null
  br i1 %6, label %57, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.boost::exception_detail::refcount_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #20
  %9 = bitcast %"struct.boost::exception_detail::error_info_container"* %5 to void (%"class.boost::exception_detail::refcount_ptr"*, %"struct.boost::exception_detail::error_info_container"*)***
  %10 = load void (%"class.boost::exception_detail::refcount_ptr"*, %"struct.boost::exception_detail::error_info_container"*)**, void (%"class.boost::exception_detail::refcount_ptr"*, %"struct.boost::exception_detail::error_info_container"*)*** %9, align 8, !tbaa !8
  %11 = getelementptr inbounds void (%"class.boost::exception_detail::refcount_ptr"*, %"struct.boost::exception_detail::error_info_container"*)*, void (%"class.boost::exception_detail::refcount_ptr"*, %"struct.boost::exception_detail::error_info_container"*)** %10, i64 5
  %12 = load void (%"class.boost::exception_detail::refcount_ptr"*, %"struct.boost::exception_detail::error_info_container"*)*, void (%"class.boost::exception_detail::refcount_ptr"*, %"struct.boost::exception_detail::error_info_container"*)** %11, align 8
  invoke void %12(%"class.boost::exception_detail::refcount_ptr"* nonnull sret(%"class.boost::exception_detail::refcount_ptr") align 8 %3, %"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %5)
          to label %13 unwind label %37

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.boost::exception_detail::refcount_ptr", %"class.boost::exception_detail::refcount_ptr"* %3, i64 0, i32 0
  %15 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %14, align 8, !tbaa !62
  %16 = icmp eq %"struct.boost::exception_detail::error_info_container"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = bitcast %"struct.boost::exception_detail::error_info_container"* %15 to void (%"struct.boost::exception_detail::error_info_container"*)***
  %19 = load void (%"struct.boost::exception_detail::error_info_container"*)**, void (%"struct.boost::exception_detail::error_info_container"*)*** %18, align 8, !tbaa !8
  %20 = getelementptr inbounds void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %19, i64 3
  %21 = load void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %20, align 8
  invoke void %21(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %15)
          to label %22 unwind label %39

22:                                               ; preds = %13, %17
  %23 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %14, align 8, !tbaa !62
  %24 = icmp eq %"struct.boost::exception_detail::error_info_container"* %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %22
  %26 = bitcast %"struct.boost::exception_detail::error_info_container"* %23 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %27 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %26, align 8, !tbaa !8
  %28 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %27, i64 4
  %29 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %28, align 8
  %30 = invoke zeroext i1 %29(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %23)
          to label %31 unwind label %33

31:                                               ; preds = %25
  br i1 %30, label %32, label %36

32:                                               ; preds = %31
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %14, align 8, !tbaa !62
  br label %36

33:                                               ; preds = %25
  %34 = landingpad { i8*, i32 }
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  call void @__clang_call_terminate(i8* %35) #24
  unreachable

36:                                               ; preds = %22, %31, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #20
  br label %57

37:                                               ; preds = %7
  %38 = landingpad { i8*, i32 }
          cleanup
  br label %54

39:                                               ; preds = %17
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %14, align 8, !tbaa !62
  %42 = icmp eq %"struct.boost::exception_detail::error_info_container"* %41, null
  br i1 %42, label %54, label %43

43:                                               ; preds = %39
  %44 = bitcast %"struct.boost::exception_detail::error_info_container"* %41 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %45 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %44, align 8, !tbaa !8
  %46 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %45, i64 4
  %47 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %46, align 8
  %48 = invoke zeroext i1 %47(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %41)
          to label %49 unwind label %51

49:                                               ; preds = %43
  br i1 %48, label %50, label %54

50:                                               ; preds = %49
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %14, align 8, !tbaa !62
  br label %54

51:                                               ; preds = %43
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  call void @__clang_call_terminate(i8* %53) #24
  unreachable

54:                                               ; preds = %50, %49, %39, %37
  %55 = phi %"struct.boost::exception_detail::error_info_container"* [ null, %37 ], [ %15, %39 ], [ %15, %49 ], [ %15, %50 ]
  %56 = phi { i8*, i32 } [ %38, %37 ], [ %40, %39 ], [ %40, %49 ], [ %40, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #20
  br label %99

57:                                               ; preds = %36, %2
  %58 = phi %"struct.boost::exception_detail::error_info_container"* [ null, %2 ], [ %15, %36 ]
  %59 = getelementptr inbounds %"class.boost::exception", %"class.boost::exception"* %1, i64 0, i32 3
  %60 = load i8*, i8** %59, align 8, !tbaa !63
  %61 = getelementptr inbounds %"class.boost::exception", %"class.boost::exception"* %0, i64 0, i32 3
  store i8* %60, i8** %61, align 8, !tbaa !63
  %62 = getelementptr inbounds %"class.boost::exception", %"class.boost::exception"* %1, i64 0, i32 4
  %63 = load i32, i32* %62, align 8, !tbaa !56
  %64 = getelementptr inbounds %"class.boost::exception", %"class.boost::exception"* %0, i64 0, i32 4
  store i32 %63, i32* %64, align 8, !tbaa !56
  %65 = getelementptr inbounds %"class.boost::exception", %"class.boost::exception"* %1, i64 0, i32 2
  %66 = load i8*, i8** %65, align 8, !tbaa !64
  %67 = getelementptr inbounds %"class.boost::exception", %"class.boost::exception"* %0, i64 0, i32 2
  store i8* %66, i8** %67, align 8, !tbaa !64
  %68 = getelementptr inbounds %"class.boost::exception", %"class.boost::exception"* %0, i64 0, i32 1, i32 0
  %69 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %68, align 8, !tbaa !62
  %70 = icmp eq %"struct.boost::exception_detail::error_info_container"* %69, null
  br i1 %70, label %79, label %71

71:                                               ; preds = %57
  %72 = bitcast %"struct.boost::exception_detail::error_info_container"* %69 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %73 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %72, align 8, !tbaa !8
  %74 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %73, i64 4
  %75 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %74, align 8
  %76 = invoke zeroext i1 %75(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %69)
          to label %77 unwind label %97

77:                                               ; preds = %71
  br i1 %76, label %78, label %79

78:                                               ; preds = %77
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %68, align 8, !tbaa !62
  br label %79

79:                                               ; preds = %78, %77, %57
  store %"struct.boost::exception_detail::error_info_container"* %58, %"struct.boost::exception_detail::error_info_container"** %68, align 8, !tbaa !62
  %80 = icmp eq %"struct.boost::exception_detail::error_info_container"* %58, null
  br i1 %80, label %96, label %81

81:                                               ; preds = %79
  %82 = bitcast %"struct.boost::exception_detail::error_info_container"* %58 to void (%"struct.boost::exception_detail::error_info_container"*)***
  %83 = load void (%"struct.boost::exception_detail::error_info_container"*)**, void (%"struct.boost::exception_detail::error_info_container"*)*** %82, align 8, !tbaa !8
  %84 = getelementptr inbounds void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %83, i64 3
  %85 = load void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %84, align 8
  invoke void %85(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %58)
          to label %86 unwind label %97

86:                                               ; preds = %81
  br i1 %80, label %96, label %87

87:                                               ; preds = %86
  %88 = bitcast %"struct.boost::exception_detail::error_info_container"* %58 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %89 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %88, align 8, !tbaa !8
  %90 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %89, i64 4
  %91 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %90, align 8
  %92 = invoke zeroext i1 %91(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %58)
          to label %96 unwind label %93

93:                                               ; preds = %87
  %94 = landingpad { i8*, i32 }
          catch i8* null
  %95 = extractvalue { i8*, i32 } %94, 0
  call void @__clang_call_terminate(i8* %95) #24
  unreachable

96:                                               ; preds = %87, %79, %86
  ret void

97:                                               ; preds = %81, %71
  %98 = landingpad { i8*, i32 }
          cleanup
  br label %99

99:                                               ; preds = %97, %54
  %100 = phi %"struct.boost::exception_detail::error_info_container"* [ %58, %97 ], [ %55, %54 ]
  %101 = phi { i8*, i32 } [ %98, %97 ], [ %56, %54 ]
  %102 = icmp eq %"struct.boost::exception_detail::error_info_container"* %100, null
  br i1 %102, label %112, label %103

103:                                              ; preds = %99
  %104 = bitcast %"struct.boost::exception_detail::error_info_container"* %100 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %105 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %104, align 8, !tbaa !8
  %106 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %105, i64 4
  %107 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %106, align 8
  %108 = invoke zeroext i1 %107(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %100)
          to label %112 unwind label %109

109:                                              ; preds = %103
  %110 = landingpad { i8*, i32 }
          catch i8* null
  %111 = extractvalue { i8*, i32 } %110, 0
  call void @__clang_call_terminate(i8* %111) #24
  unreachable

112:                                              ; preds = %103, %99
  resume { i8*, i32 } %101
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED0Ev(%"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !8
  %3 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %4 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %3, align 8, !tbaa !62
  %5 = icmp eq %"struct.boost::exception_detail::error_info_container"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.boost::exception_detail::error_info_container"* %4 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %8 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %7, align 8, !tbaa !8
  %9 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %8, i64 4
  %10 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %9, align 8
  %11 = invoke zeroext i1 %10(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %4)
          to label %12 unwind label %14

12:                                               ; preds = %6
  br i1 %11, label %13, label %17

13:                                               ; preds = %12
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %3, align 8, !tbaa !62
  br label %17

14:                                               ; preds = %6
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  call void @__clang_call_terminate(i8* %16) #24
  unreachable

17:                                               ; preds = %1, %12, %13
  %18 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %18) #20
  %19 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to i8*
  call void @_ZdlPv(i8* %19) #25
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr dso_local i8* @_ZNK5boost12bad_any_cast4whatEv(%"class.boost::bad_any_cast"* nonnull align 8 dereferenceable(8) %0) unnamed_addr #14 comdat align 2 {
  ret i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0)
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local %"class.boost::exception_detail::clone_base"* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE5cloneEv(%"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %0) unnamed_addr #15 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = call noalias nonnull dereferenceable(56) i8* @_Znwm(i64 56) #23
  %3 = bitcast i8* %2 to %"class.boost::exception_detail::clone_impl"*
  invoke void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEC1ERKS5_NS5_9clone_tagE(%"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %3, %"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %0)
          to label %4 unwind label %12

4:                                                ; preds = %1
  %5 = bitcast i8* %2 to i8**
  %6 = load i8*, i8** %5, align 8, !tbaa !8
  %7 = getelementptr i8, i8* %6, i64 -24
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 %9
  %11 = bitcast i8* %10 to %"class.boost::exception_detail::clone_base"*
  ret %"class.boost::exception_detail::clone_base"* %11

12:                                               ; preds = %1
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @_ZdlPv(i8* %2) #25
  resume { i8*, i32 } %13
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE7rethrowEv(%"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %0) unnamed_addr #15 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = call i8* @__cxa_allocate_exception(i64 56) #20
  %3 = bitcast i8* %2 to %"class.boost::exception_detail::clone_impl"*
  invoke void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEC1ERKS5_(%"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %3, %"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %0)
          to label %4 unwind label %5

4:                                                ; preds = %1
  call void @__cxa_throw(i8* %2, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev to i8*)) #21
  unreachable

5:                                                ; preds = %1
  %6 = landingpad { i8*, i32 }
          cleanup
  call void @__cxa_free_exception(i8* %2) #20
  resume { i8*, i32 } %6
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev(%"class.boost::exception_detail::clone_impl"* %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.boost::exception_detail::clone_base", %"class.boost::exception_detail::clone_base"* %2, i64 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.boost::exception_detail::clone_base", %"class.boost::exception_detail::clone_base"* %2, i64 2
  %5 = bitcast %"class.boost::exception_detail::clone_base"* %4 to %"struct.boost::exception_detail::error_info_container"**
  %6 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %5, align 8, !tbaa !62
  %7 = icmp eq %"struct.boost::exception_detail::error_info_container"* %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %1
  %9 = bitcast %"struct.boost::exception_detail::error_info_container"* %6 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %10 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %9, align 8, !tbaa !8
  %11 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %10, i64 4
  %12 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %11, align 8
  %13 = invoke zeroext i1 %12(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %6)
          to label %14 unwind label %16

14:                                               ; preds = %8
  br i1 %13, label %15, label %19

15:                                               ; preds = %14
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %5, align 8, !tbaa !62
  br label %19

16:                                               ; preds = %8
  %17 = landingpad { i8*, i32 }
          catch i8* null
  %18 = extractvalue { i8*, i32 } %17, 0
  call void @__clang_call_terminate(i8* %18) #24
  unreachable

19:                                               ; preds = %1, %14, %15
  %20 = bitcast %"class.boost::exception_detail::clone_base"* %2 to %"class.std::bad_cast"*
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %20) #20
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED0Ev(%"class.boost::exception_detail::clone_impl"* %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.boost::exception_detail::clone_base", %"class.boost::exception_detail::clone_base"* %2, i64 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.boost::exception_detail::clone_base", %"class.boost::exception_detail::clone_base"* %2, i64 2
  %5 = bitcast %"class.boost::exception_detail::clone_base"* %4 to %"struct.boost::exception_detail::error_info_container"**
  %6 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %5, align 8, !tbaa !62
  %7 = icmp eq %"struct.boost::exception_detail::error_info_container"* %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %1
  %9 = bitcast %"struct.boost::exception_detail::error_info_container"* %6 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %10 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %9, align 8, !tbaa !8
  %11 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %10, i64 4
  %12 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %11, align 8
  %13 = invoke zeroext i1 %12(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %6)
          to label %14 unwind label %16

14:                                               ; preds = %8
  br i1 %13, label %15, label %19

15:                                               ; preds = %14
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %5, align 8, !tbaa !62
  br label %19

16:                                               ; preds = %8
  %17 = landingpad { i8*, i32 }
          catch i8* null
  %18 = extractvalue { i8*, i32 } %17, 0
  call void @__clang_call_terminate(i8* %18) #24
  unreachable

19:                                               ; preds = %1, %14, %15
  %20 = bitcast %"class.boost::exception_detail::clone_base"* %2 to %"class.std::bad_cast"*
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %20) #20
  %21 = bitcast %"class.boost::exception_detail::clone_base"* %2 to i8*
  call void @_ZdlPv(i8* %21) #25
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local %"class.boost::exception_detail::clone_base"* @_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE5cloneEv(%"class.boost::exception_detail::clone_impl"* %0) unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to i8*
  %3 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = call noalias nonnull dereferenceable(56) i8* @_Znwm(i64 56) #23
  %10 = bitcast i8* %9 to %"class.boost::exception_detail::clone_impl"*
  %11 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %10, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5boost16exception_detail10clone_baseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8, !tbaa !8
  %12 = bitcast i8* %9 to %"struct.boost::exception_detail::error_info_injector"*
  %13 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8, !tbaa !8
  %14 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %10, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %10, i64 0, i32 0, i32 1, i32 1, i32 0
  %16 = getelementptr inbounds i8, i8* %8, i64 16
  %17 = bitcast i8* %16 to %"struct.boost::exception_detail::error_info_container"**
  %18 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %17, align 8, !tbaa !62
  store %"struct.boost::exception_detail::error_info_container"* %18, %"struct.boost::exception_detail::error_info_container"** %15, align 8, !tbaa !62
  %19 = icmp eq %"struct.boost::exception_detail::error_info_container"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %1
  %21 = bitcast %"struct.boost::exception_detail::error_info_container"* %18 to void (%"struct.boost::exception_detail::error_info_container"*)***
  %22 = load void (%"struct.boost::exception_detail::error_info_container"*)**, void (%"struct.boost::exception_detail::error_info_container"*)*** %21, align 8, !tbaa !8
  %23 = getelementptr inbounds void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %22, i64 3
  %24 = load void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %23, align 8
  invoke void %24(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %18)
          to label %27 unwind label %25

25:                                               ; preds = %20
  %26 = landingpad { i8*, i32 }
          cleanup
  br label %53

27:                                               ; preds = %20, %1
  %28 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %10, i64 0, i32 0, i32 1, i32 2
  %29 = getelementptr inbounds i8, i8* %8, i64 24
  %30 = bitcast i8** %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(20) %30, i8* noundef nonnull align 8 dereferenceable(20) %29, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [4 x i8*] }, { [5 x i8*], [4 x i8*] }* @_ZTVN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8, !tbaa !8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [4 x i8*] }, { [5 x i8*], [4 x i8*] }* @_ZTVN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %13, align 8, !tbaa !8
  %31 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %10, i64 0, i32 0, i32 1
  %32 = getelementptr %"class.boost::exception.base", %"class.boost::exception.base"* %31, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %32, align 8, !tbaa !8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 2, i64 5) to i32 (...)**), i32 (...)*** %11, align 8, !tbaa !8
  %33 = bitcast %"class.boost::exception.base"* %31 to %"class.boost::exception"*
  %34 = getelementptr inbounds i8, i8* %8, i64 8
  %35 = bitcast i8* %34 to %"class.boost::exception"*
  invoke void @_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(%"class.boost::exception"* nonnull %33, %"class.boost::exception"* nonnull %35)
          to label %56 unwind label %36

36:                                               ; preds = %27
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %12, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8, !tbaa !8
  %39 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %12, i64 0, i32 1, i32 1, i32 0
  %40 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %39, align 8, !tbaa !62
  %41 = icmp eq %"struct.boost::exception_detail::error_info_container"* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %36
  %43 = bitcast %"struct.boost::exception_detail::error_info_container"* %40 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %44 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %43, align 8, !tbaa !8
  %45 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %44, i64 4
  %46 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %45, align 8
  %47 = invoke zeroext i1 %46(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %40)
          to label %48 unwind label %50

48:                                               ; preds = %42
  br i1 %47, label %49, label %53

49:                                               ; preds = %48
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %39, align 8, !tbaa !62
  br label %53

50:                                               ; preds = %42
  %51 = landingpad { i8*, i32 }
          catch i8* null
  %52 = extractvalue { i8*, i32 } %51, 0
  call void @__clang_call_terminate(i8* %52) #24
  unreachable

53:                                               ; preds = %49, %48, %36, %25
  %54 = phi { i8*, i32 } [ %26, %25 ], [ %37, %36 ], [ %37, %48 ], [ %37, %49 ]
  %55 = bitcast i8* %9 to %"class.std::bad_cast"*
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %55) #20
  call void @_ZdlPv(i8* %9) #25
  resume { i8*, i32 } %54

56:                                               ; preds = %27
  %57 = bitcast i8* %9 to i8**
  %58 = load i8*, i8** %57, align 8, !tbaa !8
  %59 = getelementptr i8, i8* %58, i64 -24
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds i8, i8* %9, i64 %61
  %63 = bitcast i8* %62 to %"class.boost::exception_detail::clone_base"*
  ret %"class.boost::exception_detail::clone_base"* %63
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE7rethrowEv(%"class.boost::exception_detail::clone_impl"* %0) unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to i8*
  %3 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -32
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to %"class.boost::exception_detail::clone_impl"*
  %10 = call i8* @__cxa_allocate_exception(i64 56) #20
  %11 = bitcast i8* %10 to %"class.boost::exception_detail::clone_impl"*
  invoke void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEC1ERKS5_(%"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %11, %"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %9)
          to label %12 unwind label %13

12:                                               ; preds = %1
  call void @__cxa_throw(i8* %10, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev to i8*)) #21
  unreachable

13:                                               ; preds = %1
  %14 = landingpad { i8*, i32 }
          cleanup
  call void @__cxa_free_exception(i8* %10) #20
  resume { i8*, i32 } %14
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev(%"class.boost::exception_detail::clone_impl"* %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to i8*
  %3 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -40
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8, !tbaa !8
  %11 = getelementptr inbounds i8, i8* %8, i64 16
  %12 = bitcast i8* %11 to %"struct.boost::exception_detail::error_info_container"**
  %13 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %12, align 8, !tbaa !62
  %14 = icmp eq %"struct.boost::exception_detail::error_info_container"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %1
  %16 = bitcast %"struct.boost::exception_detail::error_info_container"* %13 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %17 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %16, align 8, !tbaa !8
  %18 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %17, i64 4
  %19 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %18, align 8
  %20 = invoke zeroext i1 %19(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %13)
          to label %21 unwind label %23

21:                                               ; preds = %15
  br i1 %20, label %22, label %26

22:                                               ; preds = %21
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %12, align 8, !tbaa !62
  br label %26

23:                                               ; preds = %15
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  call void @__clang_call_terminate(i8* %25) #24
  unreachable

26:                                               ; preds = %1, %21, %22
  %27 = bitcast i8* %8 to %"class.std::bad_cast"*
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %27) #20
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED0Ev(%"class.boost::exception_detail::clone_impl"* %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to i8*
  %3 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -40
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8, !tbaa !8
  %11 = getelementptr inbounds i8, i8* %8, i64 16
  %12 = bitcast i8* %11 to %"struct.boost::exception_detail::error_info_container"**
  %13 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %12, align 8, !tbaa !62
  %14 = icmp eq %"struct.boost::exception_detail::error_info_container"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %1
  %16 = bitcast %"struct.boost::exception_detail::error_info_container"* %13 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %17 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %16, align 8, !tbaa !8
  %18 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %17, i64 4
  %19 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %18, align 8
  %20 = invoke zeroext i1 %19(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %13)
          to label %21 unwind label %23

21:                                               ; preds = %15
  br i1 %20, label %22, label %26

22:                                               ; preds = %21
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %12, align 8, !tbaa !62
  br label %26

23:                                               ; preds = %15
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  call void @__clang_call_terminate(i8* %25) #24
  unreachable

26:                                               ; preds = %1, %21, %22
  %27 = bitcast i8* %8 to %"class.std::bad_cast"*
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %27) #20
  call void @_ZdlPv(i8* %8) #25
  ret void
}

declare dso_local void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail10clone_baseD2Ev(%"class.boost::exception_detail::clone_base"* nonnull align 8 dereferenceable(8) %0) unnamed_addr #12 comdat align 2 {
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail10clone_baseD0Ev(%"class.boost::exception_detail::clone_base"* nonnull align 8 dereferenceable(8) %0) unnamed_addr #12 comdat align 2 {
  call void @llvm.trap() #24
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #16

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail19error_info_injectorINS_12bad_any_castEED0Ev(%"struct.boost::exception_detail::error_info_injector"* nonnull align 8 dereferenceable(44) %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !8
  %3 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %0, i64 0, i32 1, i32 1, i32 0
  %4 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %3, align 8, !tbaa !62
  %5 = icmp eq %"struct.boost::exception_detail::error_info_container"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.boost::exception_detail::error_info_container"* %4 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %8 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %7, align 8, !tbaa !8
  %9 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %8, i64 4
  %10 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %9, align 8
  %11 = invoke zeroext i1 %10(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %4)
          to label %12 unwind label %14

12:                                               ; preds = %6
  br i1 %11, label %13, label %17

13:                                               ; preds = %12
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %3, align 8, !tbaa !62
  br label %17

14:                                               ; preds = %6
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  call void @__clang_call_terminate(i8* %16) #24
  unreachable

17:                                               ; preds = %1, %12, %13
  %18 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %0, i64 0, i32 0, i32 0
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %18) #20
  %19 = bitcast %"struct.boost::exception_detail::error_info_injector"* %0 to i8*
  call void @_ZdlPv(i8* %19) #25
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZThn8_N5boost16exception_detail19error_info_injectorINS_12bad_any_castEED1Ev(%"struct.boost::exception_detail::error_info_injector"* %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %0, i64 -1, i32 1, i32 4
  %3 = getelementptr inbounds i32, i32* %2, i64 2
  %4 = bitcast i32* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !8
  %5 = getelementptr inbounds i32, i32* %2, i64 4
  %6 = bitcast i32* %5 to %"struct.boost::exception_detail::error_info_container"**
  %7 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %6, align 8, !tbaa !62
  %8 = icmp eq %"struct.boost::exception_detail::error_info_container"* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %1
  %10 = bitcast %"struct.boost::exception_detail::error_info_container"* %7 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %11 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %10, align 8, !tbaa !8
  %12 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %11, i64 4
  %13 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %12, align 8
  %14 = invoke zeroext i1 %13(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %7)
          to label %15 unwind label %17

15:                                               ; preds = %9
  br i1 %14, label %16, label %20

16:                                               ; preds = %15
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %6, align 8, !tbaa !62
  br label %20

17:                                               ; preds = %9
  %18 = landingpad { i8*, i32 }
          catch i8* null
  %19 = extractvalue { i8*, i32 } %18, 0
  call void @__clang_call_terminate(i8* %19) #24
  unreachable

20:                                               ; preds = %1, %15, %16
  %21 = bitcast i32* %2 to %"class.std::bad_cast"*
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %21) #20
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZThn8_N5boost16exception_detail19error_info_injectorINS_12bad_any_castEED0Ev(%"struct.boost::exception_detail::error_info_injector"* %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %0, i64 -1, i32 1, i32 4
  %3 = getelementptr inbounds i32, i32* %2, i64 2
  %4 = bitcast i32* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !8
  %5 = getelementptr inbounds i32, i32* %2, i64 4
  %6 = bitcast i32* %5 to %"struct.boost::exception_detail::error_info_container"**
  %7 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %6, align 8, !tbaa !62
  %8 = icmp eq %"struct.boost::exception_detail::error_info_container"* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %1
  %10 = bitcast %"struct.boost::exception_detail::error_info_container"* %7 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %11 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %10, align 8, !tbaa !8
  %12 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %11, i64 4
  %13 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %12, align 8
  %14 = invoke zeroext i1 %13(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %7)
          to label %15 unwind label %17

15:                                               ; preds = %9
  br i1 %14, label %16, label %20

16:                                               ; preds = %15
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %6, align 8, !tbaa !62
  br label %20

17:                                               ; preds = %9
  %18 = landingpad { i8*, i32 }
          catch i8* null
  %19 = extractvalue { i8*, i32 } %18, 0
  call void @__clang_call_terminate(i8* %19) #24
  unreachable

20:                                               ; preds = %1, %15, %16
  %21 = bitcast i32* %2 to %"class.std::bad_cast"*
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %21) #20
  %22 = bitcast i32* %2 to i8*
  call void @_ZdlPv(i8* %22) #25
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5boost12bad_any_castD0Ev(%"class.boost::bad_any_cast"* nonnull align 8 dereferenceable(8) %0) unnamed_addr #17 comdat align 2 {
  %2 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %0, i64 0, i32 0
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %2) #20
  %3 = bitcast %"class.boost::bad_any_cast"* %0 to i8*
  call void @_ZdlPv(i8* %3) #25
  ret void
}

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #18

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEC1ERKS5_NS5_9clone_tagE(%"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %0, %"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %1) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5boost16exception_detail10clone_baseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !8
  %4 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to %"struct.boost::exception_detail::error_info_injector"*
  %5 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %8 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %1, i64 0, i32 0, i32 1, i32 1, i32 0
  %9 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %8, align 8, !tbaa !62
  store %"struct.boost::exception_detail::error_info_container"* %9, %"struct.boost::exception_detail::error_info_container"** %7, align 8, !tbaa !62
  %10 = icmp eq %"struct.boost::exception_detail::error_info_container"* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %2
  %12 = bitcast %"struct.boost::exception_detail::error_info_container"* %9 to void (%"struct.boost::exception_detail::error_info_container"*)***
  %13 = load void (%"struct.boost::exception_detail::error_info_container"*)**, void (%"struct.boost::exception_detail::error_info_container"*)*** %12, align 8, !tbaa !8
  %14 = getelementptr inbounds void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %13, i64 3
  %15 = load void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %14, align 8
  invoke void %15(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %9)
          to label %19 unwind label %16

16:                                               ; preds = %11
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %18) #20
  br label %33

19:                                               ; preds = %2, %11
  %20 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 2
  %21 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %1, i64 0, i32 0, i32 1, i32 2
  %22 = bitcast i8** %20 to i8*
  %23 = bitcast i8** %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(20) %22, i8* noundef nonnull align 8 dereferenceable(20) %23, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [4 x i8*] }, { [5 x i8*], [4 x i8*] }* @_ZTVN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [4 x i8*] }, { [5 x i8*], [4 x i8*] }* @_ZTVN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !8
  %24 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %24, align 8, !tbaa !8
  %25 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1
  %26 = getelementptr %"class.boost::exception.base", %"class.boost::exception.base"* %25, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %26, align 8, !tbaa !8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 2, i64 5) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !8
  %27 = bitcast %"class.boost::exception.base"* %25 to %"class.boost::exception"*
  %28 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %1, i64 0, i32 0, i32 1
  %29 = bitcast %"class.boost::exception.base"* %28 to %"class.boost::exception"*
  invoke void @_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(%"class.boost::exception"* nonnull %27, %"class.boost::exception"* nonnull %29)
          to label %30 unwind label %31

30:                                               ; preds = %19
  ret void

31:                                               ; preds = %19
  %32 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN5boost16exception_detail19error_info_injectorINS_12bad_any_castEED2Ev(%"struct.boost::exception_detail::error_info_injector"* nonnull align 8 dereferenceable(44) %4) #20
  br label %33

33:                                               ; preds = %31, %16
  %34 = phi { i8*, i32 } [ %32, %31 ], [ %17, %16 ]
  resume { i8*, i32 } %34
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEC1ERKS5_(%"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %0, %"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %1) unnamed_addr #13 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5boost16exception_detail10clone_baseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %7 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %1, i64 0, i32 0, i32 1, i32 1, i32 0
  %8 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %7, align 8, !tbaa !62
  store %"struct.boost::exception_detail::error_info_container"* %8, %"struct.boost::exception_detail::error_info_container"** %6, align 8, !tbaa !62
  %9 = icmp eq %"struct.boost::exception_detail::error_info_container"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %2
  %11 = bitcast %"struct.boost::exception_detail::error_info_container"* %8 to void (%"struct.boost::exception_detail::error_info_container"*)***
  %12 = load void (%"struct.boost::exception_detail::error_info_container"*)**, void (%"struct.boost::exception_detail::error_info_container"*)*** %11, align 8, !tbaa !8
  %13 = getelementptr inbounds void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %12, i64 3
  %14 = load void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %13, align 8
  invoke void %14(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %8)
          to label %18 unwind label %15

15:                                               ; preds = %10
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %17) #20
  resume { i8*, i32 } %16

18:                                               ; preds = %2, %10
  %19 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 2
  %20 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %1, i64 0, i32 0, i32 1, i32 2
  %21 = bitcast i8** %19 to i8*
  %22 = bitcast i8** %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(20) %21, i8* noundef nonnull align 8 dereferenceable(20) %22, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [4 x i8*] }, { [5 x i8*], [4 x i8*] }* @_ZTVN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [4 x i8*] }, { [5 x i8*], [4 x i8*] }* @_ZTVN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !8
  %23 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %23, align 8, !tbaa !8
  %24 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %24, align 8, !tbaa !8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 2, i64 5) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !8
  ret void
}

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.boost::any::holder"* nonnull align 8 dereferenceable(40) %0) unnamed_addr #17 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !8
  %3 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8, !tbaa !18
  %5 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %0, i64 0, i32 1, i32 2
  %6 = bitcast %union.anon* %5 to i8*
  %7 = icmp eq i8* %4, %6
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  call void @_ZdlPv(i8* %4) #20
  br label %9

9:                                                ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED0Ev(%"class.boost::any::holder"* nonnull align 8 dereferenceable(40) %0) unnamed_addr #17 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !8
  %3 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8, !tbaa !18
  %5 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %0, i64 0, i32 1, i32 2
  %6 = bitcast %union.anon* %5 to i8*
  %7 = icmp eq i8* %4, %6
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  call void @_ZdlPv(i8* %4) #20
  br label %9

9:                                                ; preds = %1, %8
  %10 = bitcast %"class.boost::any::holder"* %0 to i8*
  call void @_ZdlPv(i8* %10) #25
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(16) %"class.std::type_info"* @_ZNK5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4typeEv(%"class.boost::any::holder"* nonnull align 8 dereferenceable(40) %0) unnamed_addr #12 comdat align 2 {
  ret %"class.std::type_info"* bitcast ({ i8*, i8* }* @_ZTINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE to %"class.std::type_info"*)
}

; Function Attrs: uwtable
define linkonce_odr dso_local %"class.boost::any::placeholder"* @_ZNK5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5cloneEv(%"class.boost::any::holder"* nonnull align 8 dereferenceable(40) %0) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca i64, align 8
  %3 = call noalias nonnull dereferenceable(40) i8* @_Znwm(i64 40) #23
  %4 = bitcast i8* %3 to %"class.boost::any::holder"*
  %5 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %4, i64 0, i32 1
  %7 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %4, i64 0, i32 1, i32 2
  %8 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  store %union.anon* %7, %union.anon** %8, align 8, !tbaa !13
  %9 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !tbaa !18
  %11 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %0, i64 0, i32 1, i32 1
  %12 = load i64, i64* %11, align 8, !tbaa !15
  %13 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #20
  store i64 %12, i64* %2, align 8, !tbaa !25
  %14 = icmp ugt i64 %12, 15
  br i1 %14, label %15, label %21

15:                                               ; preds = %1
  %16 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64* nonnull align 8 dereferenceable(8) %2, i64 0)
          to label %17 unwind label %33

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  store i8* %16, i8** %18, align 8, !tbaa !18
  %19 = load i64, i64* %2, align 8, !tbaa !25
  %20 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %4, i64 0, i32 1, i32 2, i32 0
  store i64 %19, i64* %20, align 8, !tbaa !12
  br label %21

21:                                               ; preds = %17, %1
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8, !tbaa !18
  switch i64 %12, label %26 [
    i64 1, label %24
    i64 0, label %27
  ]

24:                                               ; preds = %21
  %25 = load i8, i8* %10, align 1, !tbaa !12
  store i8 %25, i8* %23, align 1, !tbaa !12
  br label %27

26:                                               ; preds = %21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %10, i64 %12, i1 false) #20
  br label %27

27:                                               ; preds = %21, %24, %26
  %28 = load i64, i64* %2, align 8, !tbaa !25
  %29 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %4, i64 0, i32 1, i32 1
  store i64 %28, i64* %29, align 8, !tbaa !15
  %30 = load i8*, i8** %22, align 8, !tbaa !18
  %31 = getelementptr inbounds i8, i8* %30, i64 %28
  store i8 0, i8* %31, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #20
  %32 = getelementptr %"class.boost::any::holder", %"class.boost::any::holder"* %4, i64 0, i32 0
  ret %"class.boost::any::placeholder"* %32

33:                                               ; preds = %15
  %34 = landingpad { i8*, i32 }
          cleanup
  call void @_ZdlPv(i8* %3) #25
  resume { i8*, i32 } %34
}

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #19

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #19

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nofree nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { noinline noreturn nounwind }
attributes #5 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #8 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { inlinehint noreturn uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #11 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { inlinehint uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { mustprogress nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { cold noreturn nounwind }
attributes #17 = { inlinehint nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #20 = { nounwind }
attributes #21 = { noreturn }
attributes #22 = { nounwind readonly willreturn }
attributes #23 = { builtin allocsize(0) }
attributes #24 = { noreturn nounwind }
attributes #25 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSN5boost3anyE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !9, i64 0}
!9 = !{!"vtable pointer", !7, i64 0}
!10 = !{!11, !5, i64 8}
!11 = !{!"_ZTSSt9type_info", !5, i64 8}
!12 = !{!6, !6, i64 0}
!13 = !{!14, !5, i64 0}
!14 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!15 = !{!16, !17, i64 8}
!16 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !14, i64 0, !17, i64 8, !6, i64 16}
!17 = !{!"long", !6, i64 0}
!18 = !{!16, !5, i64 0}
!19 = distinct !{!19, !20, !21}
!20 = !{!"llvm.loop.mustprogress"}
!21 = !{!"llvm.loop.unroll.disable"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!24 = distinct !{!24, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!25 = !{!17, !17, i64 0}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_: argument 0"}
!28 = distinct !{!28, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!31 = distinct !{!31, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_: argument 0"}
!34 = distinct !{!34, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_"}
!35 = distinct !{!35, !20, !21}
!36 = !{!37, !37, i64 0}
!37 = !{!"int", !6, i64 0}
!38 = !{!39, !39, i64 0}
!39 = !{!"double", !6, i64 0}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!42 = distinct !{!42, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_: argument 0"}
!45 = distinct !{!45, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!48 = distinct !{!48, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_: argument 0"}
!51 = distinct !{!51, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_"}
!52 = distinct !{!52, !20, !21}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN5boost17enable_error_infoINS_12bad_any_castEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_: argument 0"}
!55 = distinct !{!55, !"_ZN5boost17enable_error_infoINS_12bad_any_castEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_"}
!56 = !{!57, !37, i64 32}
!57 = !{!"_ZTSN5boost9exceptionE", !58, i64 8, !5, i64 16, !5, i64 24, !37, i64 32}
!58 = !{!"_ZTSN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEE", !5, i64 0}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_12bad_any_castEEEEENS1_10clone_implIT_EERKS6_: argument 0"}
!61 = distinct !{!61, !"_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_12bad_any_castEEEEENS1_10clone_implIT_EERKS6_"}
!62 = !{!58, !5, i64 0}
!63 = !{!57, !5, i64 24}
!64 = !{!57, !5, i64 16}
