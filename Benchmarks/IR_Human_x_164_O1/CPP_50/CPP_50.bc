; ModuleID = '../../Human_xBenchmarks_164/CPP_50/CPP_50.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_50/CPP_50.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: uwtable
define dso_local void @_Z12encode_shiftNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !3
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %7, align 8, !tbaa !8
  %8 = bitcast %union.anon* %5 to i8*
  store i8 0, i8* %8, align 8, !tbaa !11
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %11 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %15 = bitcast i64* %3 to i8*
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %20 = bitcast %union.anon* %12 to i8*
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %22 = getelementptr %union.anon, %union.anon* %12, i64 0, i32 0
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %24 = load i64, i64* %9, align 8, !tbaa !8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %104, label %26

26:                                               ; preds = %2, %91
  %27 = phi i64 [ %92, %91 ], [ 0, %2 ]
  %28 = load i8*, i8** %10, align 8, !tbaa !12
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = load i8, i8* %29, align 1, !tbaa !11
  %31 = sext i8 %30 to i32
  %32 = add nsw i32 %31, -92
  %33 = srem i32 %32, 26
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #6
  %34 = trunc i32 %33 to i8
  %35 = add i8 %34, 97
  call void @llvm.experimental.noalias.scope.decl(metadata !13)
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3, !alias.scope !13
  %36 = load i8*, i8** %14, align 8, !tbaa !12, !noalias !13
  %37 = load i64, i64* %7, align 8, !tbaa !8, !noalias !13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6, !noalias !13
  store i64 %37, i64* %3, align 8, !tbaa !16, !noalias !13
  %38 = icmp ugt i64 %37, 15
  br i1 %38, label %39, label %43

39:                                               ; preds = %26
  %40 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %4, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %41 unwind label %95

41:                                               ; preds = %39
  store i8* %40, i8** %16, align 8, !tbaa !12, !alias.scope !13
  %42 = load i64, i64* %3, align 8, !tbaa !16, !noalias !13
  store i64 %42, i64* %17, align 8, !tbaa !11, !alias.scope !13
  br label %43

43:                                               ; preds = %41, %26
  %44 = load i8*, i8** %18, align 8, !tbaa !12, !alias.scope !13
  switch i64 %37, label %47 [
    i64 1, label %45
    i64 0, label %48
  ]

45:                                               ; preds = %43
  %46 = load i8, i8* %36, align 1, !tbaa !11
  store i8 %46, i8* %44, align 1, !tbaa !11
  br label %48

47:                                               ; preds = %43
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %36, i64 %37, i1 false) #6
  br label %48

48:                                               ; preds = %47, %45, %43
  %49 = load i64, i64* %3, align 8, !tbaa !16, !noalias !13
  store i64 %49, i64* %19, align 8, !tbaa !8, !alias.scope !13
  %50 = load i8*, i8** %18, align 8, !tbaa !12, !alias.scope !13
  %51 = getelementptr inbounds i8, i8* %50, i64 %49
  store i8 0, i8* %51, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6, !noalias !13
  %52 = load i64, i64* %19, align 8, !tbaa !8, !alias.scope !13
  %53 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %4, i64 %52, i64 0, i64 1, i8 signext %35)
          to label %60 unwind label %54

54:                                               ; preds = %48
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = load i8*, i8** %18, align 8, !tbaa !12, !alias.scope !13
  %57 = bitcast %union.anon* %12 to i8*
  %58 = icmp eq i8* %56, %57
  br i1 %58, label %97, label %59

59:                                               ; preds = %54
  call void @_ZdlPv(i8* %56) #6
  br label %97

60:                                               ; preds = %48
  %61 = load i8*, i8** %18, align 8, !tbaa !12
  %62 = icmp eq i8* %61, %20
  br i1 %62, label %63, label %76

63:                                               ; preds = %60
  %64 = load i64, i64* %19, align 8, !tbaa !8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %63
  %67 = load i8*, i8** %14, align 8, !tbaa !12
  %68 = icmp eq i64 %64, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = load i8, i8* %61, align 1, !tbaa !11
  store i8 %70, i8* %67, align 1, !tbaa !11
  br label %72

71:                                               ; preds = %66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %67, i8* align 1 %61, i64 %64, i1 false) #6
  br label %72

72:                                               ; preds = %71, %69, %63
  %73 = load i64, i64* %19, align 8, !tbaa !8
  store i64 %73, i64* %7, align 8, !tbaa !8
  %74 = load i8*, i8** %14, align 8, !tbaa !12
  %75 = getelementptr inbounds i8, i8* %74, i64 %73
  store i8 0, i8* %75, align 1, !tbaa !11
  br label %86

76:                                               ; preds = %60
  %77 = load i8*, i8** %14, align 8, !tbaa !12
  %78 = icmp eq i8* %77, %8
  %79 = load i64, i64* %21, align 8
  store i8* %61, i8** %14, align 8, !tbaa !12
  %80 = load i64, i64* %19, align 8, !tbaa !8
  store i64 %80, i64* %7, align 8, !tbaa !8
  %81 = load i64, i64* %22, align 8, !tbaa !11
  store i64 %81, i64* %21, align 8, !tbaa !11
  %82 = icmp eq i8* %77, null
  %83 = or i1 %78, %82
  br i1 %83, label %85, label %84

84:                                               ; preds = %76
  store i8* %77, i8** %18, align 8, !tbaa !12
  store i64 %79, i64* %23, align 8, !tbaa !11
  br label %86

85:                                               ; preds = %76
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !12
  br label %86

86:                                               ; preds = %72, %84, %85
  store i64 0, i64* %19, align 8, !tbaa !8
  %87 = load i8*, i8** %18, align 8, !tbaa !12
  store i8 0, i8* %87, align 1, !tbaa !11
  %88 = load i8*, i8** %18, align 8, !tbaa !12
  %89 = icmp eq i8* %88, %20
  br i1 %89, label %91, label %90

90:                                               ; preds = %86
  call void @_ZdlPv(i8* %88) #6
  br label %91

91:                                               ; preds = %86, %90
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6
  %92 = add nuw i64 %27, 1
  %93 = load i64, i64* %9, align 8, !tbaa !8
  %94 = icmp ugt i64 %93, %92
  br i1 %94, label %26, label %104, !llvm.loop !17

95:                                               ; preds = %39
  %96 = landingpad { i8*, i32 }
          cleanup
  br label %97

97:                                               ; preds = %54, %59, %95
  %98 = phi { i8*, i32 } [ %96, %95 ], [ %55, %59 ], [ %55, %54 ]
  %99 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %99) #6
  %100 = load i8*, i8** %14, align 8, !tbaa !12
  %101 = icmp eq i8* %100, %8
  br i1 %101, label %103, label %102

102:                                              ; preds = %97
  call void @_ZdlPv(i8* %100) #6
  br label %103

103:                                              ; preds = %97, %102
  resume { i8*, i32 } %98

104:                                              ; preds = %91, %2
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
define dso_local void @_Z12decode_shiftNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !3
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %7, align 8, !tbaa !8
  %8 = bitcast %union.anon* %5 to i8*
  store i8 0, i8* %8, align 8, !tbaa !11
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %11 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %15 = bitcast i64* %3 to i8*
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %20 = bitcast %union.anon* %12 to i8*
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %22 = getelementptr %union.anon, %union.anon* %12, i64 0, i32 0
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %24 = load i64, i64* %9, align 8, !tbaa !8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %104, label %26

26:                                               ; preds = %2, %91
  %27 = phi i64 [ %92, %91 ], [ 0, %2 ]
  %28 = load i8*, i8** %10, align 8, !tbaa !12
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = load i8, i8* %29, align 1, !tbaa !11
  %31 = sext i8 %30 to i32
  %32 = add nsw i32 %31, -76
  %33 = srem i32 %32, 26
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #6
  %34 = trunc i32 %33 to i8
  %35 = add i8 %34, 97
  call void @llvm.experimental.noalias.scope.decl(metadata !20)
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3, !alias.scope !20
  %36 = load i8*, i8** %14, align 8, !tbaa !12, !noalias !20
  %37 = load i64, i64* %7, align 8, !tbaa !8, !noalias !20
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6, !noalias !20
  store i64 %37, i64* %3, align 8, !tbaa !16, !noalias !20
  %38 = icmp ugt i64 %37, 15
  br i1 %38, label %39, label %43

39:                                               ; preds = %26
  %40 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %4, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %41 unwind label %95

41:                                               ; preds = %39
  store i8* %40, i8** %16, align 8, !tbaa !12, !alias.scope !20
  %42 = load i64, i64* %3, align 8, !tbaa !16, !noalias !20
  store i64 %42, i64* %17, align 8, !tbaa !11, !alias.scope !20
  br label %43

43:                                               ; preds = %41, %26
  %44 = load i8*, i8** %18, align 8, !tbaa !12, !alias.scope !20
  switch i64 %37, label %47 [
    i64 1, label %45
    i64 0, label %48
  ]

45:                                               ; preds = %43
  %46 = load i8, i8* %36, align 1, !tbaa !11
  store i8 %46, i8* %44, align 1, !tbaa !11
  br label %48

47:                                               ; preds = %43
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %36, i64 %37, i1 false) #6
  br label %48

48:                                               ; preds = %47, %45, %43
  %49 = load i64, i64* %3, align 8, !tbaa !16, !noalias !20
  store i64 %49, i64* %19, align 8, !tbaa !8, !alias.scope !20
  %50 = load i8*, i8** %18, align 8, !tbaa !12, !alias.scope !20
  %51 = getelementptr inbounds i8, i8* %50, i64 %49
  store i8 0, i8* %51, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6, !noalias !20
  %52 = load i64, i64* %19, align 8, !tbaa !8, !alias.scope !20
  %53 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %4, i64 %52, i64 0, i64 1, i8 signext %35)
          to label %60 unwind label %54

54:                                               ; preds = %48
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = load i8*, i8** %18, align 8, !tbaa !12, !alias.scope !20
  %57 = bitcast %union.anon* %12 to i8*
  %58 = icmp eq i8* %56, %57
  br i1 %58, label %97, label %59

59:                                               ; preds = %54
  call void @_ZdlPv(i8* %56) #6
  br label %97

60:                                               ; preds = %48
  %61 = load i8*, i8** %18, align 8, !tbaa !12
  %62 = icmp eq i8* %61, %20
  br i1 %62, label %63, label %76

63:                                               ; preds = %60
  %64 = load i64, i64* %19, align 8, !tbaa !8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %63
  %67 = load i8*, i8** %14, align 8, !tbaa !12
  %68 = icmp eq i64 %64, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = load i8, i8* %61, align 1, !tbaa !11
  store i8 %70, i8* %67, align 1, !tbaa !11
  br label %72

71:                                               ; preds = %66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %67, i8* align 1 %61, i64 %64, i1 false) #6
  br label %72

72:                                               ; preds = %71, %69, %63
  %73 = load i64, i64* %19, align 8, !tbaa !8
  store i64 %73, i64* %7, align 8, !tbaa !8
  %74 = load i8*, i8** %14, align 8, !tbaa !12
  %75 = getelementptr inbounds i8, i8* %74, i64 %73
  store i8 0, i8* %75, align 1, !tbaa !11
  br label %86

76:                                               ; preds = %60
  %77 = load i8*, i8** %14, align 8, !tbaa !12
  %78 = icmp eq i8* %77, %8
  %79 = load i64, i64* %21, align 8
  store i8* %61, i8** %14, align 8, !tbaa !12
  %80 = load i64, i64* %19, align 8, !tbaa !8
  store i64 %80, i64* %7, align 8, !tbaa !8
  %81 = load i64, i64* %22, align 8, !tbaa !11
  store i64 %81, i64* %21, align 8, !tbaa !11
  %82 = icmp eq i8* %77, null
  %83 = or i1 %78, %82
  br i1 %83, label %85, label %84

84:                                               ; preds = %76
  store i8* %77, i8** %18, align 8, !tbaa !12
  store i64 %79, i64* %23, align 8, !tbaa !11
  br label %86

85:                                               ; preds = %76
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !12
  br label %86

86:                                               ; preds = %72, %84, %85
  store i64 0, i64* %19, align 8, !tbaa !8
  %87 = load i8*, i8** %18, align 8, !tbaa !12
  store i8 0, i8* %87, align 1, !tbaa !11
  %88 = load i8*, i8** %18, align 8, !tbaa !12
  %89 = icmp eq i8* %88, %20
  br i1 %89, label %91, label %90

90:                                               ; preds = %86
  call void @_ZdlPv(i8* %88) #6
  br label %91

91:                                               ; preds = %86, %90
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6
  %92 = add nuw i64 %27, 1
  %93 = load i64, i64* %9, align 8, !tbaa !8
  %94 = icmp ugt i64 %93, %92
  br i1 %94, label %26, label %104, !llvm.loop !23

95:                                               ; preds = %39
  %96 = landingpad { i8*, i32 }
          cleanup
  br label %97

97:                                               ; preds = %54, %59, %95
  %98 = phi { i8*, i32 } [ %96, %95 ], [ %55, %59 ], [ %55, %54 ]
  %99 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %99) #6
  %100 = load i8*, i8** %14, align 8, !tbaa !12
  %101 = icmp eq i8* %100, %8
  br i1 %101, label %103, label %102

102:                                              ; preds = %97
  call void @_ZdlPv(i8* %100) #6
  br label %103

103:                                              ; preds = %97, %102
  resume { i8*, i32 } %98

104:                                              ; preds = %91, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #3

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #5

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!15 = distinct !{!15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!16 = !{!10, !10, i64 0}
!17 = distinct !{!17, !18, !19}
!18 = !{!"llvm.loop.mustprogress"}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!22 = distinct !{!22, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!23 = distinct !{!23, !18, !19}
