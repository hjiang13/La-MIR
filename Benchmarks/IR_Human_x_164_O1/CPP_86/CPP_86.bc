; ModuleID = '../../Human_xBenchmarks_164/CPP_86/CPP_86.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_86/CPP_86.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEElNS0_5__ops15_Iter_less_iterEEvT_SC_T0_T1_ = comdat any

$_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_5__ops15_Iter_less_iterEEvT_SC_T0_ = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: uwtable
define dso_local void @_Z12anti_shuffleNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = alloca %"class.std::__cxx11::basic_string", align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = alloca %"class.std::__cxx11::basic_string", align 8
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %15, align 8, !tbaa !8
  %16 = bitcast %union.anon* %12 to i8*
  store i8 0, i8* %16, align 8, !tbaa !11
  %17 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #7
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %19 = bitcast %"class.std::__cxx11::basic_string"* %7 to %union.anon**
  store %union.anon* %18, %union.anon** %19, align 8, !tbaa !3
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  store i64 0, i64* %21, align 8, !tbaa !8
  %22 = bitcast %union.anon* %18 to i8*
  store i8 0, i8* %22, align 8, !tbaa !11
  %23 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !12)
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %25 = bitcast %"class.std::__cxx11::basic_string"* %8 to %union.anon**
  store %union.anon* %24, %union.anon** %25, align 8, !tbaa !3, !alias.scope !12
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8, !tbaa !15, !noalias !12
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %29 = load i64, i64* %28, align 8, !tbaa !8, !noalias !12
  %30 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #7, !noalias !12
  store i64 %29, i64* %6, align 8, !tbaa !16, !noalias !12
  %31 = icmp ugt i64 %29, 15
  br i1 %31, label %32, label %38

32:                                               ; preds = %2
  %33 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64* nonnull align 8 dereferenceable(8) %6, i64 0)
          to label %34 unwind label %142

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  store i8* %33, i8** %35, align 8, !tbaa !15, !alias.scope !12
  %36 = load i64, i64* %6, align 8, !tbaa !16, !noalias !12
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  store i64 %36, i64* %37, align 8, !tbaa !11, !alias.scope !12
  br label %38

38:                                               ; preds = %34, %2
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8, !tbaa !15, !alias.scope !12
  switch i64 %29, label %43 [
    i64 1, label %41
    i64 0, label %44
  ]

41:                                               ; preds = %38
  %42 = load i8, i8* %27, align 1, !tbaa !11
  store i8 %42, i8* %40, align 1, !tbaa !11
  br label %44

43:                                               ; preds = %38
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* align 1 %27, i64 %29, i1 false) #7
  br label %44

44:                                               ; preds = %43, %41, %38
  %45 = load i64, i64* %6, align 8, !tbaa !16, !noalias !12
  %46 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 1
  store i64 %45, i64* %46, align 8, !tbaa !8, !alias.scope !12
  %47 = load i8*, i8** %39, align 8, !tbaa !15, !alias.scope !12
  %48 = getelementptr inbounds i8, i8* %47, i64 %45
  store i8 0, i8* %48, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #7, !noalias !12
  %49 = load i64, i64* %46, align 8, !tbaa !8, !alias.scope !12
  %50 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64 %49, i64 0, i64 1, i8 signext 32)
          to label %57 unwind label %51

51:                                               ; preds = %44
  %52 = landingpad { i8*, i32 }
          cleanup
  %53 = load i8*, i8** %39, align 8, !tbaa !15, !alias.scope !12
  %54 = bitcast %union.anon* %24 to i8*
  %55 = icmp eq i8* %53, %54
  br i1 %55, label %144, label %56

56:                                               ; preds = %51
  call void @_ZdlPv(i8* %53) #7
  br label %144

57:                                               ; preds = %44
  %58 = load i8*, i8** %39, align 8, !tbaa !15
  %59 = bitcast %union.anon* %24 to i8*
  %60 = icmp eq i8* %58, %59
  br i1 %60, label %61, label %74

61:                                               ; preds = %57
  %62 = load i64, i64* %46, align 8, !tbaa !8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %70, label %64

64:                                               ; preds = %61
  %65 = load i8*, i8** %26, align 8, !tbaa !15
  %66 = icmp eq i64 %62, 1
  br i1 %66, label %67, label %69

67:                                               ; preds = %64
  %68 = load i8, i8* %58, align 1, !tbaa !11
  store i8 %68, i8* %65, align 1, !tbaa !11
  br label %70

69:                                               ; preds = %64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* align 1 %58, i64 %62, i1 false) #7
  br label %70

70:                                               ; preds = %69, %67, %61
  %71 = load i64, i64* %46, align 8, !tbaa !8
  store i64 %71, i64* %28, align 8, !tbaa !8
  %72 = load i8*, i8** %26, align 8, !tbaa !15
  %73 = getelementptr inbounds i8, i8* %72, i64 %71
  store i8 0, i8* %73, align 1, !tbaa !11
  br label %89

74:                                               ; preds = %57
  %75 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 2
  %76 = bitcast %union.anon* %75 to i8*
  %77 = load i8*, i8** %26, align 8, !tbaa !15
  %78 = icmp eq i8* %77, %76
  %79 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 2, i32 0
  %80 = load i64, i64* %79, align 8
  store i8* %58, i8** %26, align 8, !tbaa !15
  %81 = load i64, i64* %46, align 8, !tbaa !8
  store i64 %81, i64* %28, align 8, !tbaa !8
  %82 = getelementptr %union.anon, %union.anon* %24, i64 0, i32 0
  %83 = load i64, i64* %82, align 8, !tbaa !11
  store i64 %83, i64* %79, align 8, !tbaa !11
  %84 = icmp eq i8* %77, null
  %85 = or i1 %78, %84
  br i1 %85, label %88, label %86

86:                                               ; preds = %74
  store i8* %77, i8** %39, align 8, !tbaa !15
  %87 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  store i64 %80, i64* %87, align 8, !tbaa !11
  br label %89

88:                                               ; preds = %74
  store %union.anon* %24, %union.anon** %25, align 8, !tbaa !15
  br label %89

89:                                               ; preds = %70, %86, %88
  store i64 0, i64* %46, align 8, !tbaa !8
  %90 = load i8*, i8** %39, align 8, !tbaa !15
  store i8 0, i8* %90, align 1, !tbaa !11
  %91 = load i8*, i8** %39, align 8, !tbaa !15
  %92 = icmp eq i8* %91, %59
  br i1 %92, label %94, label %93

93:                                               ; preds = %89
  call void @_ZdlPv(i8* %91) #7
  br label %94

94:                                               ; preds = %89, %93
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #7
  %95 = bitcast %"class.std::__cxx11::basic_string"* %11 to i8*
  %96 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %11, i64 0, i32 2
  %97 = bitcast %"class.std::__cxx11::basic_string"* %11 to %union.anon**
  %98 = bitcast i64* %3 to i8*
  %99 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %11, i64 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %11, i64 0, i32 2, i32 0
  %101 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %11, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %11, i64 0, i32 1
  %103 = bitcast %union.anon* %96 to i8*
  %104 = bitcast %union.anon* %18 to i8*
  %105 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 0
  %106 = getelementptr %union.anon, %union.anon* %96, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %11, i64 0, i32 2, i32 0
  %108 = bitcast %"class.std::__cxx11::basic_string"* %9 to i8*
  %109 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2
  %110 = bitcast %"class.std::__cxx11::basic_string"* %9 to %union.anon**
  %111 = bitcast i64* %5 to i8*
  %112 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2, i32 0
  %114 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  %115 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 1
  %116 = bitcast %union.anon* %109 to i8*
  %117 = bitcast %union.anon* %12 to i8*
  %118 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %119 = getelementptr %union.anon, %union.anon* %109, i64 0, i32 0
  %120 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2, i32 0
  %121 = bitcast %"class.std::__cxx11::basic_string"* %10 to i8*
  %122 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2
  %123 = bitcast %"class.std::__cxx11::basic_string"* %10 to %union.anon**
  %124 = bitcast i64* %4 to i8*
  %125 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2, i32 0
  %127 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 0, i32 0
  %128 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 1
  %129 = bitcast %union.anon* %122 to i8*
  %130 = bitcast %union.anon* %12 to i8*
  %131 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %132 = getelementptr %union.anon, %union.anon* %122, i64 0, i32 0
  %133 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2, i32 0
  %134 = load i64, i64* %28, align 8, !tbaa !8
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %146

136:                                              ; preds = %356, %94
  %137 = load i8*, i8** %20, align 8, !tbaa !15
  %138 = bitcast %union.anon* %18 to i8*
  %139 = icmp eq i8* %137, %138
  br i1 %139, label %141, label %140

140:                                              ; preds = %136
  call void @_ZdlPv(i8* %137) #7
  br label %141

141:                                              ; preds = %136, %140
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #7
  ret void

142:                                              ; preds = %32
  %143 = landingpad { i8*, i32 }
          cleanup
  br label %144

144:                                              ; preds = %51, %56, %142
  %145 = phi { i8*, i32 } [ %143, %142 ], [ %52, %56 ], [ %52, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #7
  br label %360

146:                                              ; preds = %94, %356
  %147 = phi i64 [ %357, %356 ], [ 0, %94 ]
  %148 = load i8*, i8** %26, align 8, !tbaa !15
  %149 = getelementptr inbounds i8, i8* %148, i64 %147
  %150 = load i8, i8* %149, align 1, !tbaa !11
  %151 = icmp eq i8 %150, 32
  br i1 %151, label %152, label %293

152:                                              ; preds = %146
  %153 = load i8*, i8** %20, align 8, !tbaa !15
  %154 = load i64, i64* %21, align 8, !tbaa !8
  %155 = getelementptr inbounds i8, i8* %153, i64 %154
  %156 = icmp eq i64 %154, 0
  br i1 %156, label %162, label %157

157:                                              ; preds = %152
  %158 = call i64 @llvm.ctlz.i64(i64 %154, i1 true) #7, !range !17
  %159 = shl nuw nsw i64 %158, 1
  %160 = xor i64 %159, 126
  invoke void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEElNS0_5__ops15_Iter_less_iterEEvT_SC_T0_T1_(i8* %153, i8* nonnull %155, i64 %160)
          to label %161 unwind label %221

161:                                              ; preds = %157
  invoke void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_5__ops15_Iter_less_iterEEvT_SC_T0_(i8* %153, i8* nonnull %155)
          to label %162 unwind label %221

162:                                              ; preds = %152, %161
  %163 = load i64, i64* %15, align 8, !tbaa !8
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %228, label %165

165:                                              ; preds = %162
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !18)
  store %union.anon* %109, %union.anon** %110, align 8, !tbaa !3, !alias.scope !18
  %166 = load i8*, i8** %14, align 8, !tbaa !15, !noalias !18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #7, !noalias !18
  store i64 %163, i64* %5, align 8, !tbaa !16, !noalias !18
  %167 = icmp ugt i64 %163, 15
  br i1 %167, label %168, label %172

168:                                              ; preds = %165
  %169 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %9, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
          to label %170 unwind label %223

170:                                              ; preds = %168
  store i8* %169, i8** %112, align 8, !tbaa !15, !alias.scope !18
  %171 = load i64, i64* %5, align 8, !tbaa !16, !noalias !18
  store i64 %171, i64* %113, align 8, !tbaa !11, !alias.scope !18
  br label %172

172:                                              ; preds = %170, %165
  %173 = load i8*, i8** %114, align 8, !tbaa !15, !alias.scope !18
  switch i64 %163, label %176 [
    i64 1, label %174
    i64 0, label %177
  ]

174:                                              ; preds = %172
  %175 = load i8, i8* %166, align 1, !tbaa !11
  store i8 %175, i8* %173, align 1, !tbaa !11
  br label %177

176:                                              ; preds = %172
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %173, i8* align 1 %166, i64 %163, i1 false) #7
  br label %177

177:                                              ; preds = %176, %174, %172
  %178 = load i64, i64* %5, align 8, !tbaa !16, !noalias !18
  store i64 %178, i64* %115, align 8, !tbaa !8, !alias.scope !18
  %179 = load i8*, i8** %114, align 8, !tbaa !15, !alias.scope !18
  %180 = getelementptr inbounds i8, i8* %179, i64 %178
  store i8 0, i8* %180, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #7, !noalias !18
  %181 = load i64, i64* %115, align 8, !tbaa !8, !alias.scope !18
  %182 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %9, i64 %181, i64 0, i64 1, i8 signext 32)
          to label %189 unwind label %183

183:                                              ; preds = %177
  %184 = landingpad { i8*, i32 }
          cleanup
  %185 = load i8*, i8** %114, align 8, !tbaa !15, !alias.scope !18
  %186 = bitcast %union.anon* %109 to i8*
  %187 = icmp eq i8* %185, %186
  br i1 %187, label %225, label %188

188:                                              ; preds = %183
  call void @_ZdlPv(i8* %185) #7
  br label %225

189:                                              ; preds = %177
  %190 = load i8*, i8** %114, align 8, !tbaa !15
  %191 = icmp eq i8* %190, %116
  br i1 %191, label %192, label %205

192:                                              ; preds = %189
  %193 = load i64, i64* %115, align 8, !tbaa !8
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %201, label %195

195:                                              ; preds = %192
  %196 = load i8*, i8** %14, align 8, !tbaa !15
  %197 = icmp eq i64 %193, 1
  br i1 %197, label %198, label %200

198:                                              ; preds = %195
  %199 = load i8, i8* %190, align 1, !tbaa !11
  store i8 %199, i8* %196, align 1, !tbaa !11
  br label %201

200:                                              ; preds = %195
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %196, i8* align 1 %190, i64 %193, i1 false) #7
  br label %201

201:                                              ; preds = %200, %198, %192
  %202 = load i64, i64* %115, align 8, !tbaa !8
  store i64 %202, i64* %15, align 8, !tbaa !8
  %203 = load i8*, i8** %14, align 8, !tbaa !15
  %204 = getelementptr inbounds i8, i8* %203, i64 %202
  store i8 0, i8* %204, align 1, !tbaa !11
  br label %215

205:                                              ; preds = %189
  %206 = load i8*, i8** %14, align 8, !tbaa !15
  %207 = icmp eq i8* %206, %117
  %208 = load i64, i64* %118, align 8
  store i8* %190, i8** %14, align 8, !tbaa !15
  %209 = load i64, i64* %115, align 8, !tbaa !8
  store i64 %209, i64* %15, align 8, !tbaa !8
  %210 = load i64, i64* %119, align 8, !tbaa !11
  store i64 %210, i64* %118, align 8, !tbaa !11
  %211 = icmp eq i8* %206, null
  %212 = or i1 %207, %211
  br i1 %212, label %214, label %213

213:                                              ; preds = %205
  store i8* %206, i8** %114, align 8, !tbaa !15
  store i64 %208, i64* %120, align 8, !tbaa !11
  br label %215

214:                                              ; preds = %205
  store %union.anon* %109, %union.anon** %110, align 8, !tbaa !15
  br label %215

215:                                              ; preds = %201, %213, %214
  store i64 0, i64* %115, align 8, !tbaa !8
  %216 = load i8*, i8** %114, align 8, !tbaa !15
  store i8 0, i8* %216, align 1, !tbaa !11
  %217 = load i8*, i8** %114, align 8, !tbaa !15
  %218 = icmp eq i8* %217, %116
  br i1 %218, label %220, label %219

219:                                              ; preds = %215
  call void @_ZdlPv(i8* %217) #7
  br label %220

220:                                              ; preds = %215, %219
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #7
  br label %228

221:                                              ; preds = %285, %161, %157
  %222 = landingpad { i8*, i32 }
          cleanup
  br label %360

223:                                              ; preds = %168
  %224 = landingpad { i8*, i32 }
          cleanup
  br label %225

225:                                              ; preds = %183, %188, %223
  %226 = phi { i8*, i32 } [ %224, %223 ], [ %184, %188 ], [ %184, %183 ]
  %227 = bitcast %"class.std::__cxx11::basic_string"* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %227) #7
  br label %360

228:                                              ; preds = %220, %162
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %121) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !21)
  store %union.anon* %122, %union.anon** %123, align 8, !tbaa !3, !alias.scope !21
  %229 = load i8*, i8** %14, align 8, !tbaa !15, !noalias !21
  %230 = load i64, i64* %15, align 8, !tbaa !8, !noalias !21
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #7, !noalias !21
  store i64 %230, i64* %4, align 8, !tbaa !16, !noalias !21
  %231 = icmp ugt i64 %230, 15
  br i1 %231, label %232, label %236

232:                                              ; preds = %228
  %233 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %234 unwind label %288

234:                                              ; preds = %232
  store i8* %233, i8** %125, align 8, !tbaa !15, !alias.scope !21
  %235 = load i64, i64* %4, align 8, !tbaa !16, !noalias !21
  store i64 %235, i64* %126, align 8, !tbaa !11, !alias.scope !21
  br label %236

236:                                              ; preds = %234, %228
  %237 = load i8*, i8** %127, align 8, !tbaa !15, !alias.scope !21
  switch i64 %230, label %240 [
    i64 1, label %238
    i64 0, label %241
  ]

238:                                              ; preds = %236
  %239 = load i8, i8* %229, align 1, !tbaa !11
  store i8 %239, i8* %237, align 1, !tbaa !11
  br label %241

240:                                              ; preds = %236
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %237, i8* align 1 %229, i64 %230, i1 false) #7
  br label %241

241:                                              ; preds = %240, %238, %236
  %242 = load i64, i64* %4, align 8, !tbaa !16, !noalias !21
  store i64 %242, i64* %128, align 8, !tbaa !8, !alias.scope !21
  %243 = load i8*, i8** %127, align 8, !tbaa !15, !alias.scope !21
  %244 = getelementptr inbounds i8, i8* %243, i64 %242
  store i8 0, i8* %244, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #7, !noalias !21
  %245 = load i8*, i8** %20, align 8, !tbaa !15, !noalias !21
  %246 = load i64, i64* %21, align 8, !tbaa !8, !noalias !21
  %247 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i8* %245, i64 %246)
          to label %254 unwind label %248

248:                                              ; preds = %241
  %249 = landingpad { i8*, i32 }
          cleanup
  %250 = load i8*, i8** %127, align 8, !tbaa !15, !alias.scope !21
  %251 = bitcast %union.anon* %122 to i8*
  %252 = icmp eq i8* %250, %251
  br i1 %252, label %290, label %253

253:                                              ; preds = %248
  call void @_ZdlPv(i8* %250) #7
  br label %290

254:                                              ; preds = %241
  %255 = load i8*, i8** %127, align 8, !tbaa !15
  %256 = icmp eq i8* %255, %129
  br i1 %256, label %257, label %270

257:                                              ; preds = %254
  %258 = load i64, i64* %128, align 8, !tbaa !8
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %266, label %260

260:                                              ; preds = %257
  %261 = load i8*, i8** %14, align 8, !tbaa !15
  %262 = icmp eq i64 %258, 1
  br i1 %262, label %263, label %265

263:                                              ; preds = %260
  %264 = load i8, i8* %255, align 1, !tbaa !11
  store i8 %264, i8* %261, align 1, !tbaa !11
  br label %266

265:                                              ; preds = %260
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %261, i8* align 1 %255, i64 %258, i1 false) #7
  br label %266

266:                                              ; preds = %265, %263, %257
  %267 = load i64, i64* %128, align 8, !tbaa !8
  store i64 %267, i64* %15, align 8, !tbaa !8
  %268 = load i8*, i8** %14, align 8, !tbaa !15
  %269 = getelementptr inbounds i8, i8* %268, i64 %267
  store i8 0, i8* %269, align 1, !tbaa !11
  br label %280

270:                                              ; preds = %254
  %271 = load i8*, i8** %14, align 8, !tbaa !15
  %272 = icmp eq i8* %271, %130
  %273 = load i64, i64* %131, align 8
  store i8* %255, i8** %14, align 8, !tbaa !15
  %274 = load i64, i64* %128, align 8, !tbaa !8
  store i64 %274, i64* %15, align 8, !tbaa !8
  %275 = load i64, i64* %132, align 8, !tbaa !11
  store i64 %275, i64* %131, align 8, !tbaa !11
  %276 = icmp eq i8* %271, null
  %277 = or i1 %272, %276
  br i1 %277, label %279, label %278

278:                                              ; preds = %270
  store i8* %271, i8** %127, align 8, !tbaa !15
  store i64 %273, i64* %133, align 8, !tbaa !11
  br label %280

279:                                              ; preds = %270
  store %union.anon* %122, %union.anon** %123, align 8, !tbaa !15
  br label %280

280:                                              ; preds = %266, %278, %279
  store i64 0, i64* %128, align 8, !tbaa !8
  %281 = load i8*, i8** %127, align 8, !tbaa !15
  store i8 0, i8* %281, align 1, !tbaa !11
  %282 = load i8*, i8** %127, align 8, !tbaa !15
  %283 = icmp eq i8* %282, %129
  br i1 %283, label %285, label %284

284:                                              ; preds = %280
  call void @_ZdlPv(i8* %282) #7
  br label %285

285:                                              ; preds = %280, %284
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %121) #7
  %286 = load i64, i64* %21, align 8, !tbaa !8
  %287 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i64 0, i64 %286, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0)
          to label %356 unwind label %221

288:                                              ; preds = %232
  %289 = landingpad { i8*, i32 }
          cleanup
  br label %290

290:                                              ; preds = %248, %253, %288
  %291 = phi { i8*, i32 } [ %289, %288 ], [ %249, %253 ], [ %249, %248 ]
  %292 = bitcast %"class.std::__cxx11::basic_string"* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %292) #7
  br label %360

293:                                              ; preds = %146
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %95) #7
  %294 = load i8, i8* %149, align 1, !tbaa !11
  call void @llvm.experimental.noalias.scope.decl(metadata !24)
  store %union.anon* %96, %union.anon** %97, align 8, !tbaa !3, !alias.scope !24
  %295 = load i8*, i8** %20, align 8, !tbaa !15, !noalias !24
  %296 = load i64, i64* %21, align 8, !tbaa !8, !noalias !24
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #7, !noalias !24
  store i64 %296, i64* %3, align 8, !tbaa !16, !noalias !24
  %297 = icmp ugt i64 %296, 15
  br i1 %297, label %298, label %302

298:                                              ; preds = %293
  %299 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %300 unwind label %351

300:                                              ; preds = %298
  store i8* %299, i8** %99, align 8, !tbaa !15, !alias.scope !24
  %301 = load i64, i64* %3, align 8, !tbaa !16, !noalias !24
  store i64 %301, i64* %100, align 8, !tbaa !11, !alias.scope !24
  br label %302

302:                                              ; preds = %300, %293
  %303 = load i8*, i8** %101, align 8, !tbaa !15, !alias.scope !24
  switch i64 %296, label %306 [
    i64 1, label %304
    i64 0, label %307
  ]

304:                                              ; preds = %302
  %305 = load i8, i8* %295, align 1, !tbaa !11
  store i8 %305, i8* %303, align 1, !tbaa !11
  br label %307

306:                                              ; preds = %302
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %303, i8* align 1 %295, i64 %296, i1 false) #7
  br label %307

307:                                              ; preds = %306, %304, %302
  %308 = load i64, i64* %3, align 8, !tbaa !16, !noalias !24
  store i64 %308, i64* %102, align 8, !tbaa !8, !alias.scope !24
  %309 = load i8*, i8** %101, align 8, !tbaa !15, !alias.scope !24
  %310 = getelementptr inbounds i8, i8* %309, i64 %308
  store i8 0, i8* %310, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #7, !noalias !24
  %311 = load i64, i64* %102, align 8, !tbaa !8, !alias.scope !24
  %312 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i64 %311, i64 0, i64 1, i8 signext %294)
          to label %319 unwind label %313

313:                                              ; preds = %307
  %314 = landingpad { i8*, i32 }
          cleanup
  %315 = load i8*, i8** %101, align 8, !tbaa !15, !alias.scope !24
  %316 = bitcast %union.anon* %96 to i8*
  %317 = icmp eq i8* %315, %316
  br i1 %317, label %353, label %318

318:                                              ; preds = %313
  call void @_ZdlPv(i8* %315) #7
  br label %353

319:                                              ; preds = %307
  %320 = load i8*, i8** %101, align 8, !tbaa !15
  %321 = icmp eq i8* %320, %103
  br i1 %321, label %322, label %335

322:                                              ; preds = %319
  %323 = load i64, i64* %102, align 8, !tbaa !8
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %331, label %325

325:                                              ; preds = %322
  %326 = load i8*, i8** %20, align 8, !tbaa !15
  %327 = icmp eq i64 %323, 1
  br i1 %327, label %328, label %330

328:                                              ; preds = %325
  %329 = load i8, i8* %320, align 1, !tbaa !11
  store i8 %329, i8* %326, align 1, !tbaa !11
  br label %331

330:                                              ; preds = %325
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %326, i8* align 1 %320, i64 %323, i1 false) #7
  br label %331

331:                                              ; preds = %330, %328, %322
  %332 = load i64, i64* %102, align 8, !tbaa !8
  store i64 %332, i64* %21, align 8, !tbaa !8
  %333 = load i8*, i8** %20, align 8, !tbaa !15
  %334 = getelementptr inbounds i8, i8* %333, i64 %332
  store i8 0, i8* %334, align 1, !tbaa !11
  br label %345

335:                                              ; preds = %319
  %336 = load i8*, i8** %20, align 8, !tbaa !15
  %337 = icmp eq i8* %336, %104
  %338 = load i64, i64* %105, align 8
  store i8* %320, i8** %20, align 8, !tbaa !15
  %339 = load i64, i64* %102, align 8, !tbaa !8
  store i64 %339, i64* %21, align 8, !tbaa !8
  %340 = load i64, i64* %106, align 8, !tbaa !11
  store i64 %340, i64* %105, align 8, !tbaa !11
  %341 = icmp eq i8* %336, null
  %342 = or i1 %337, %341
  br i1 %342, label %344, label %343

343:                                              ; preds = %335
  store i8* %336, i8** %101, align 8, !tbaa !15
  store i64 %338, i64* %107, align 8, !tbaa !11
  br label %345

344:                                              ; preds = %335
  store %union.anon* %96, %union.anon** %97, align 8, !tbaa !15
  br label %345

345:                                              ; preds = %331, %343, %344
  store i64 0, i64* %102, align 8, !tbaa !8
  %346 = load i8*, i8** %101, align 8, !tbaa !15
  store i8 0, i8* %346, align 1, !tbaa !11
  %347 = load i8*, i8** %101, align 8, !tbaa !15
  %348 = icmp eq i8* %347, %103
  br i1 %348, label %350, label %349

349:                                              ; preds = %345
  call void @_ZdlPv(i8* %347) #7
  br label %350

350:                                              ; preds = %345, %349
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %95) #7
  br label %356

351:                                              ; preds = %298
  %352 = landingpad { i8*, i32 }
          cleanup
  br label %353

353:                                              ; preds = %313, %318, %351
  %354 = phi { i8*, i32 } [ %352, %351 ], [ %314, %318 ], [ %314, %313 ]
  %355 = bitcast %"class.std::__cxx11::basic_string"* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %355) #7
  br label %360

356:                                              ; preds = %285, %350
  %357 = add nuw i64 %147, 1
  %358 = load i64, i64* %28, align 8, !tbaa !8
  %359 = icmp ugt i64 %358, %357
  br i1 %359, label %146, label %136, !llvm.loop !27

360:                                              ; preds = %221, %225, %290, %353, %144
  %361 = phi { i8*, i32 } [ %145, %144 ], [ %222, %221 ], [ %291, %290 ], [ %226, %225 ], [ %354, %353 ]
  %362 = load i8*, i8** %20, align 8, !tbaa !15
  %363 = bitcast %union.anon* %18 to i8*
  %364 = icmp eq i8* %362, %363
  br i1 %364, label %366, label %365

365:                                              ; preds = %360
  call void @_ZdlPv(i8* %362) #7
  br label %366

366:                                              ; preds = %365, %360
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #7
  %367 = load i8*, i8** %14, align 8, !tbaa !15
  %368 = bitcast %union.anon* %12 to i8*
  %369 = icmp eq i8* %367, %368
  br i1 %369, label %371, label %370

370:                                              ; preds = %366
  call void @_ZdlPv(i8* %367) #7
  br label %371

371:                                              ; preds = %370, %366
  resume { i8*, i32 } %361
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #3

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEElNS0_5__ops15_Iter_less_iterEEvT_SC_T0_T1_(i8* %0, i8* %1, i64 %2) local_unnamed_addr #0 comdat {
  %4 = ptrtoint i8* %0 to i64
  %5 = getelementptr inbounds i8, i8* %0, i64 1
  %6 = ptrtoint i8* %1 to i64
  %7 = sub i64 %6, %4
  %8 = icmp sgt i64 %7, 16
  br i1 %8, label %9, label %180

9:                                                ; preds = %3, %176
  %10 = phi i64 [ %178, %176 ], [ %7, %3 ]
  %11 = phi i64 [ %132, %176 ], [ %2, %3 ]
  %12 = phi i8* [ %164, %176 ], [ %1, %3 ]
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %14, label %131

14:                                               ; preds = %9
  %15 = ptrtoint i8* %0 to i64
  %16 = icmp slt i64 %10, 2
  br i1 %16, label %73, label %17

17:                                               ; preds = %14
  %18 = add nsw i64 %10, -2
  %19 = sdiv i64 %18, 2
  %20 = add nsw i64 %10, -1
  %21 = sdiv i64 %20, 2
  %22 = and i64 %10, 1
  %23 = icmp eq i64 %22, 0
  br label %24

24:                                               ; preds = %67, %17
  %25 = phi i64 [ %19, %17 ], [ %72, %67 ]
  %26 = getelementptr inbounds i8, i8* %0, i64 %25
  %27 = load i8, i8* %26, align 1, !tbaa !11
  %28 = icmp sgt i64 %21, %25
  br i1 %28, label %29, label %44

29:                                               ; preds = %24, %29
  %30 = phi i64 [ %39, %29 ], [ %25, %24 ]
  %31 = shl i64 %30, 1
  %32 = add i64 %31, 2
  %33 = getelementptr inbounds i8, i8* %0, i64 %32
  %34 = or i64 %31, 1
  %35 = getelementptr inbounds i8, i8* %0, i64 %34
  %36 = load i8, i8* %33, align 1, !tbaa !11
  %37 = load i8, i8* %35, align 1, !tbaa !11
  %38 = icmp slt i8 %36, %37
  %39 = select i1 %38, i64 %34, i64 %32
  %40 = getelementptr inbounds i8, i8* %0, i64 %39
  %41 = load i8, i8* %40, align 1, !tbaa !11
  %42 = getelementptr inbounds i8, i8* %0, i64 %30
  store i8 %41, i8* %42, align 1, !tbaa !11
  %43 = icmp slt i64 %39, %21
  br i1 %43, label %29, label %44, !llvm.loop !30

44:                                               ; preds = %29, %24
  %45 = phi i64 [ %25, %24 ], [ %39, %29 ]
  %46 = icmp eq i64 %45, %19
  %47 = select i1 %23, i1 %46, i1 false
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = shl i64 %45, 1
  %50 = or i64 %49, 1
  %51 = getelementptr inbounds i8, i8* %0, i64 %50
  %52 = load i8, i8* %51, align 1, !tbaa !11
  %53 = getelementptr inbounds i8, i8* %0, i64 %45
  store i8 %52, i8* %53, align 1, !tbaa !11
  br label %54

54:                                               ; preds = %48, %44
  %55 = phi i64 [ %50, %48 ], [ %45, %44 ]
  %56 = icmp sgt i64 %55, %25
  br i1 %56, label %57, label %67

57:                                               ; preds = %54, %64
  %58 = phi i64 [ %60, %64 ], [ %55, %54 ]
  %59 = add nsw i64 %58, -1
  %60 = sdiv i64 %59, 2
  %61 = getelementptr inbounds i8, i8* %0, i64 %60
  %62 = load i8, i8* %61, align 1, !tbaa !11
  %63 = icmp slt i8 %62, %27
  br i1 %63, label %64, label %67

64:                                               ; preds = %57
  %65 = getelementptr inbounds i8, i8* %0, i64 %58
  store i8 %62, i8* %65, align 1, !tbaa !11
  %66 = icmp sgt i64 %60, %25
  br i1 %66, label %57, label %67, !llvm.loop !31

67:                                               ; preds = %64, %57, %54
  %68 = phi i64 [ %55, %54 ], [ %58, %57 ], [ %60, %64 ]
  %69 = getelementptr inbounds i8, i8* %0, i64 %68
  store i8 %27, i8* %69, align 1, !tbaa !11
  %70 = icmp eq i64 %25, 0
  %71 = add nsw i64 %25, -1
  %72 = select i1 %70, i64 0, i64 %71
  br i1 %70, label %73, label %24, !llvm.loop !32

73:                                               ; preds = %67, %14
  %74 = icmp sgt i64 %10, 1
  br i1 %74, label %75, label %180

75:                                               ; preds = %73, %127
  %76 = phi i8* [ %77, %127 ], [ %12, %73 ]
  %77 = getelementptr inbounds i8, i8* %76, i64 -1
  %78 = load i8, i8* %77, align 1, !tbaa !11
  %79 = load i8, i8* %0, align 1, !tbaa !11
  store i8 %79, i8* %77, align 1, !tbaa !11
  %80 = ptrtoint i8* %77 to i64
  %81 = sub i64 %80, %15
  %82 = add nsw i64 %81, -1
  %83 = sdiv i64 %82, 2
  %84 = icmp sgt i64 %81, 2
  br i1 %84, label %85, label %100

85:                                               ; preds = %75, %85
  %86 = phi i64 [ %95, %85 ], [ 0, %75 ]
  %87 = shl i64 %86, 1
  %88 = add i64 %87, 2
  %89 = getelementptr inbounds i8, i8* %0, i64 %88
  %90 = or i64 %87, 1
  %91 = getelementptr inbounds i8, i8* %0, i64 %90
  %92 = load i8, i8* %89, align 1, !tbaa !11
  %93 = load i8, i8* %91, align 1, !tbaa !11
  %94 = icmp slt i8 %92, %93
  %95 = select i1 %94, i64 %90, i64 %88
  %96 = getelementptr inbounds i8, i8* %0, i64 %95
  %97 = load i8, i8* %96, align 1, !tbaa !11
  %98 = getelementptr inbounds i8, i8* %0, i64 %86
  store i8 %97, i8* %98, align 1, !tbaa !11
  %99 = icmp slt i64 %95, %83
  br i1 %99, label %85, label %100, !llvm.loop !30

100:                                              ; preds = %85, %75
  %101 = phi i64 [ 0, %75 ], [ %95, %85 ]
  %102 = and i64 %81, 1
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %114

104:                                              ; preds = %100
  %105 = add nsw i64 %81, -2
  %106 = sdiv i64 %105, 2
  %107 = icmp eq i64 %101, %106
  br i1 %107, label %108, label %114

108:                                              ; preds = %104
  %109 = shl i64 %101, 1
  %110 = or i64 %109, 1
  %111 = getelementptr inbounds i8, i8* %0, i64 %110
  %112 = load i8, i8* %111, align 1, !tbaa !11
  %113 = getelementptr inbounds i8, i8* %0, i64 %101
  store i8 %112, i8* %113, align 1, !tbaa !11
  br label %114

114:                                              ; preds = %108, %104, %100
  %115 = phi i64 [ %110, %108 ], [ %101, %104 ], [ %101, %100 ]
  %116 = icmp sgt i64 %115, 0
  br i1 %116, label %117, label %127

117:                                              ; preds = %114, %124
  %118 = phi i64 [ %120, %124 ], [ %115, %114 ]
  %119 = add nsw i64 %118, -1
  %120 = sdiv i64 %119, 2
  %121 = getelementptr inbounds i8, i8* %0, i64 %120
  %122 = load i8, i8* %121, align 1, !tbaa !11
  %123 = icmp slt i8 %122, %78
  br i1 %123, label %124, label %127

124:                                              ; preds = %117
  %125 = getelementptr inbounds i8, i8* %0, i64 %118
  store i8 %122, i8* %125, align 1, !tbaa !11
  %126 = icmp sgt i64 %118, 2
  br i1 %126, label %117, label %127, !llvm.loop !31

127:                                              ; preds = %124, %117, %114
  %128 = phi i64 [ %115, %114 ], [ %118, %117 ], [ %120, %124 ]
  %129 = getelementptr inbounds i8, i8* %0, i64 %128
  store i8 %78, i8* %129, align 1, !tbaa !11
  %130 = icmp sgt i64 %81, 1
  br i1 %130, label %75, label %180, !llvm.loop !33

131:                                              ; preds = %9
  %132 = add nsw i64 %11, -1
  %133 = sdiv i64 %10, 2
  %134 = getelementptr inbounds i8, i8* %0, i64 %133
  %135 = getelementptr inbounds i8, i8* %12, i64 -1
  %136 = load i8, i8* %5, align 1, !tbaa !11
  %137 = load i8, i8* %134, align 1, !tbaa !11
  %138 = icmp slt i8 %136, %137
  %139 = load i8, i8* %135, align 1, !tbaa !11
  br i1 %138, label %140, label %149

140:                                              ; preds = %131
  %141 = icmp slt i8 %137, %139
  br i1 %141, label %142, label %144

142:                                              ; preds = %140
  %143 = load i8, i8* %0, align 1, !tbaa !11
  store i8 %137, i8* %0, align 1, !tbaa !11
  store i8 %143, i8* %134, align 1, !tbaa !11
  br label %158

144:                                              ; preds = %140
  %145 = icmp slt i8 %136, %139
  %146 = load i8, i8* %0, align 1, !tbaa !11
  br i1 %145, label %147, label %148

147:                                              ; preds = %144
  store i8 %139, i8* %0, align 1, !tbaa !11
  store i8 %146, i8* %135, align 1, !tbaa !11
  br label %158

148:                                              ; preds = %144
  store i8 %136, i8* %0, align 1, !tbaa !11
  store i8 %146, i8* %5, align 1, !tbaa !11
  br label %158

149:                                              ; preds = %131
  %150 = icmp slt i8 %136, %139
  br i1 %150, label %151, label %153

151:                                              ; preds = %149
  %152 = load i8, i8* %0, align 1, !tbaa !11
  store i8 %136, i8* %0, align 1, !tbaa !11
  store i8 %152, i8* %5, align 1, !tbaa !11
  br label %158

153:                                              ; preds = %149
  %154 = icmp slt i8 %137, %139
  %155 = load i8, i8* %0, align 1, !tbaa !11
  br i1 %154, label %156, label %157

156:                                              ; preds = %153
  store i8 %139, i8* %0, align 1, !tbaa !11
  store i8 %155, i8* %135, align 1, !tbaa !11
  br label %158

157:                                              ; preds = %153
  store i8 %137, i8* %0, align 1, !tbaa !11
  store i8 %155, i8* %134, align 1, !tbaa !11
  br label %158

158:                                              ; preds = %157, %156, %151, %148, %147, %142
  br label %159

159:                                              ; preds = %158, %175
  %160 = phi i8* [ %167, %175 ], [ %5, %158 ]
  %161 = phi i8* [ %170, %175 ], [ %12, %158 ]
  %162 = load i8, i8* %0, align 1, !tbaa !11
  br label %163

163:                                              ; preds = %163, %159
  %164 = phi i8* [ %160, %159 ], [ %167, %163 ]
  %165 = load i8, i8* %164, align 1, !tbaa !11
  %166 = icmp slt i8 %165, %162
  %167 = getelementptr inbounds i8, i8* %164, i64 1
  br i1 %166, label %163, label %168, !llvm.loop !34

168:                                              ; preds = %163, %168
  %169 = phi i8* [ %170, %168 ], [ %161, %163 ]
  %170 = getelementptr inbounds i8, i8* %169, i64 -1
  %171 = load i8, i8* %170, align 1, !tbaa !11
  %172 = icmp slt i8 %162, %171
  br i1 %172, label %168, label %173, !llvm.loop !35

173:                                              ; preds = %168
  %174 = icmp ult i8* %164, %170
  br i1 %174, label %175, label %176

175:                                              ; preds = %173
  store i8 %171, i8* %164, align 1, !tbaa !11
  store i8 %165, i8* %170, align 1, !tbaa !11
  br label %159, !llvm.loop !36

176:                                              ; preds = %173
  call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEElNS0_5__ops15_Iter_less_iterEEvT_SC_T0_T1_(i8* nonnull %164, i8* %12, i64 %132)
  %177 = ptrtoint i8* %164 to i64
  %178 = sub i64 %177, %4
  %179 = icmp sgt i64 %178, 16
  br i1 %179, label %9, label %180, !llvm.loop !37

180:                                              ; preds = %176, %127, %3, %73
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_5__ops15_Iter_less_iterEEvT_SC_T0_(i8* %0, i8* %1) local_unnamed_addr #0 comdat {
  %3 = ptrtoint i8* %1 to i64
  %4 = ptrtoint i8* %0 to i64
  %5 = sub i64 %3, %4
  %6 = icmp sgt i64 %5, 16
  br i1 %6, label %7, label %51

7:                                                ; preds = %2
  %8 = getelementptr inbounds i8, i8* %0, i64 1
  br label %9

9:                                                ; preds = %7, %27
  %10 = phi i64 [ %29, %27 ], [ 1, %7 ]
  %11 = phi i8* [ %12, %27 ], [ %0, %7 ]
  %12 = getelementptr inbounds i8, i8* %0, i64 %10
  %13 = load i8, i8* %12, align 1, !tbaa !11
  %14 = load i8, i8* %0, align 1, !tbaa !11
  %15 = icmp slt i8 %13, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %9
  call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 1 %8, i8* noundef nonnull align 1 %0, i64 %10, i1 false) #7
  br label %27

17:                                               ; preds = %9
  %18 = load i8, i8* %11, align 1, !tbaa !11
  %19 = icmp slt i8 %13, %18
  br i1 %19, label %20, label %27

20:                                               ; preds = %17, %20
  %21 = phi i8 [ %25, %20 ], [ %18, %17 ]
  %22 = phi i8* [ %24, %20 ], [ %11, %17 ]
  %23 = phi i8* [ %22, %20 ], [ %12, %17 ]
  store i8 %21, i8* %23, align 1, !tbaa !11
  %24 = getelementptr inbounds i8, i8* %22, i64 -1
  %25 = load i8, i8* %24, align 1, !tbaa !11
  %26 = icmp slt i8 %13, %25
  br i1 %26, label %20, label %27, !llvm.loop !38

27:                                               ; preds = %20, %17, %16
  %28 = phi i8* [ %0, %16 ], [ %12, %17 ], [ %22, %20 ]
  store i8 %13, i8* %28, align 1, !tbaa !11
  %29 = add nuw nsw i64 %10, 1
  %30 = icmp eq i64 %29, 16
  br i1 %30, label %31, label %9, !llvm.loop !39

31:                                               ; preds = %27
  %32 = getelementptr inbounds i8, i8* %0, i64 16
  %33 = icmp eq i8* %32, %1
  br i1 %33, label %81, label %34

34:                                               ; preds = %31, %47
  %35 = phi i8* [ %49, %47 ], [ %32, %31 ]
  %36 = load i8, i8* %35, align 1, !tbaa !11
  %37 = getelementptr inbounds i8, i8* %35, i64 -1
  %38 = load i8, i8* %37, align 1, !tbaa !11
  %39 = icmp slt i8 %36, %38
  br i1 %39, label %40, label %47

40:                                               ; preds = %34, %40
  %41 = phi i8 [ %45, %40 ], [ %38, %34 ]
  %42 = phi i8* [ %44, %40 ], [ %37, %34 ]
  %43 = phi i8* [ %42, %40 ], [ %35, %34 ]
  store i8 %41, i8* %43, align 1, !tbaa !11
  %44 = getelementptr inbounds i8, i8* %42, i64 -1
  %45 = load i8, i8* %44, align 1, !tbaa !11
  %46 = icmp slt i8 %36, %45
  br i1 %46, label %40, label %47, !llvm.loop !38

47:                                               ; preds = %40, %34
  %48 = phi i8* [ %35, %34 ], [ %42, %40 ]
  store i8 %36, i8* %48, align 1, !tbaa !11
  %49 = getelementptr inbounds i8, i8* %35, i64 1
  %50 = icmp eq i8* %49, %1
  br i1 %50, label %81, label %34, !llvm.loop !40

51:                                               ; preds = %2
  %52 = icmp eq i8* %0, %1
  br i1 %52, label %81, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds i8, i8* %0, i64 1
  %55 = icmp eq i8* %54, %1
  br i1 %55, label %81, label %56

56:                                               ; preds = %53, %77
  %57 = phi i8* [ %79, %77 ], [ %54, %53 ]
  %58 = phi i8* [ %57, %77 ], [ %0, %53 ]
  %59 = load i8, i8* %57, align 1, !tbaa !11
  %60 = load i8, i8* %0, align 1, !tbaa !11
  %61 = icmp slt i8 %59, %60
  br i1 %61, label %62, label %67

62:                                               ; preds = %56
  %63 = ptrtoint i8* %57 to i64
  %64 = sub i64 %63, %4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %77, label %66

66:                                               ; preds = %62
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %54, i8* nonnull align 1 %0, i64 %64, i1 false) #7
  br label %77

67:                                               ; preds = %56
  %68 = load i8, i8* %58, align 1, !tbaa !11
  %69 = icmp slt i8 %59, %68
  br i1 %69, label %70, label %77

70:                                               ; preds = %67, %70
  %71 = phi i8 [ %75, %70 ], [ %68, %67 ]
  %72 = phi i8* [ %74, %70 ], [ %58, %67 ]
  %73 = phi i8* [ %72, %70 ], [ %57, %67 ]
  store i8 %71, i8* %73, align 1, !tbaa !11
  %74 = getelementptr inbounds i8, i8* %72, i64 -1
  %75 = load i8, i8* %74, align 1, !tbaa !11
  %76 = icmp slt i8 %59, %75
  br i1 %76, label %70, label %77, !llvm.loop !38

77:                                               ; preds = %70, %67, %62, %66
  %78 = phi i8* [ %0, %66 ], [ %0, %62 ], [ %57, %67 ], [ %72, %70 ]
  store i8 %59, i8* %78, align 1, !tbaa !11
  %79 = getelementptr inbounds i8, i8* %57, i64 1
  %80 = icmp eq i8* %79, %1
  br i1 %80, label %81, label %56, !llvm.loop !39

81:                                               ; preds = %77, %47, %53, %51, %31
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #5

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #3

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #6

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!14 = distinct !{!14, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!15 = !{!9, !5, i64 0}
!16 = !{!10, !10, i64 0}
!17 = !{i64 0, i64 65}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!20 = distinct !{!20, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!23 = distinct !{!23, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!26 = distinct !{!26, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!27 = distinct !{!27, !28, !29}
!28 = !{!"llvm.loop.mustprogress"}
!29 = !{!"llvm.loop.unroll.disable"}
!30 = distinct !{!30, !28, !29}
!31 = distinct !{!31, !28, !29}
!32 = distinct !{!32, !28, !29}
!33 = distinct !{!33, !28, !29}
!34 = distinct !{!34, !28, !29}
!35 = distinct !{!35, !28, !29}
!36 = distinct !{!36, !28, !29}
!37 = distinct !{!37, !28, !29}
!38 = distinct !{!38, !28, !29}
!39 = distinct !{!39, !28, !29}
!40 = distinct !{!40, !28, !29}
