; ModuleID = '../../Human_xBenchmarks_164/CPP_145/CPP_145.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_145/CPP_145.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z = comdat any

$_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_ = comdat any

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z15order_by_pointsSt6vectorIiSaIiEE(%"class.std::vector"* noalias nocapture sret(%"class.std::vector") align 8 %0, %"class.std::vector"* nocapture %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector", align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca i32, align 4
  %6 = bitcast %"class.std::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  %10 = bitcast i32* %5 to i8*
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %19 = bitcast %union.anon* %18 to i8*
  %20 = bitcast %"class.std::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %20, i8 0, i64 24, i1 false)
  %21 = load i32*, i32** %7, align 8, !tbaa !3
  %22 = load i32*, i32** %8, align 8, !tbaa !8
  %23 = ptrtoint i32* %21 to i64
  %24 = ptrtoint i32* %22 to i64
  %25 = sub i64 %23, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %35

28:                                               ; preds = %97, %2
  %29 = phi i32* [ %21, %2 ], [ %99, %97 ]
  %30 = phi i32* [ %22, %2 ], [ %100, %97 ]
  %31 = phi i64 [ %26, %2 ], [ %104, %97 ]
  %32 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ugt i64 %31, 1
  %34 = icmp eq i64 %31, 0
  br i1 %34, label %118, label %115

35:                                               ; preds = %2, %97
  %36 = phi i64 [ %98, %97 ], [ 0, %2 ]
  %37 = phi i32* [ %100, %97 ], [ %22, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #11
  %38 = getelementptr inbounds i32, i32* %37, i64 %36
  %39 = load i32, i32* %38, align 4, !tbaa !9
  %40 = call i32 @llvm.abs.i32(i32 %39, i1 true)
  invoke void (%"class.std::__cxx11::basic_string"*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i64, i8*, ...) @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %4, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* nonnull @vsnprintf, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %40)
          to label %41 unwind label %50

41:                                               ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #11
  store i32 0, i32* %5, align 4, !tbaa !9
  %42 = load i64, i64* %11, align 8, !tbaa !11
  %43 = load i8*, i8** %12, align 8
  %44 = icmp ugt i64 %42, 1
  br i1 %44, label %52, label %45

45:                                               ; preds = %52, %41
  %46 = load i32*, i32** %8, align 8, !tbaa !8
  %47 = getelementptr inbounds i32, i32* %46, i64 %36
  %48 = load i32, i32* %47, align 4, !tbaa !9
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %62, label %78

50:                                               ; preds = %35
  %51 = landingpad { i8*, i32 }
          cleanup
  br label %106

52:                                               ; preds = %41, %52
  %53 = phi i64 [ %60, %52 ], [ 1, %41 ]
  %54 = getelementptr inbounds i8, i8* %43, i64 %53
  %55 = load i8, i8* %54, align 1, !tbaa !15
  %56 = sext i8 %55 to i32
  %57 = add nsw i32 %56, -48
  %58 = load i32, i32* %5, align 4, !tbaa !9
  %59 = add nsw i32 %57, %58
  store i32 %59, i32* %5, align 4, !tbaa !9
  %60 = add nuw nsw i64 %53, 1
  %61 = icmp eq i64 %60, %42
  br i1 %61, label %45, label %52, !llvm.loop !16

62:                                               ; preds = %45
  %63 = load i8*, i8** %14, align 8, !tbaa !19
  %64 = load i8, i8* %63, align 1, !tbaa !15
  %65 = sext i8 %64 to i32
  %66 = add nsw i32 %65, -48
  %67 = load i32, i32* %5, align 4, !tbaa !9
  %68 = add nsw i32 %66, %67
  br label %85

69:                                               ; preds = %92
  %70 = landingpad { i8*, i32 }
          cleanup
  %71 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #11
  %72 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8, !tbaa !19
  %74 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %75 = bitcast %union.anon* %74 to i8*
  %76 = icmp eq i8* %73, %75
  br i1 %76, label %106, label %77

77:                                               ; preds = %69
  call void @_ZdlPv(i8* %73) #11
  br label %106

78:                                               ; preds = %45
  %79 = load i8*, i8** %13, align 8, !tbaa !19
  %80 = load i8, i8* %79, align 1, !tbaa !15
  %81 = sext i8 %80 to i32
  %82 = load i32, i32* %5, align 4, !tbaa !9
  %83 = sub nsw i32 48, %81
  %84 = add i32 %83, %82
  br label %85

85:                                               ; preds = %78, %62
  %86 = phi i32 [ %84, %78 ], [ %68, %62 ]
  store i32 %86, i32* %5, align 4, !tbaa !9
  %87 = load i32*, i32** %15, align 8, !tbaa !3
  %88 = load i32*, i32** %16, align 8, !tbaa !20
  %89 = icmp eq i32* %87, %88
  br i1 %89, label %92, label %90

90:                                               ; preds = %85
  store i32 %86, i32* %87, align 4, !tbaa !9
  %91 = getelementptr inbounds i32, i32* %87, i64 1
  store i32* %91, i32** %15, align 8, !tbaa !3
  br label %93

92:                                               ; preds = %85
  invoke void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %3, i32* %87, i32* nonnull align 4 dereferenceable(4) %5)
          to label %93 unwind label %69

93:                                               ; preds = %90, %92
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  %94 = load i8*, i8** %17, align 8, !tbaa !19
  %95 = icmp eq i8* %94, %19
  br i1 %95, label %97, label %96

96:                                               ; preds = %93
  call void @_ZdlPv(i8* %94) #11
  br label %97

97:                                               ; preds = %93, %96
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #11
  %98 = add nuw i64 %36, 1
  %99 = load i32*, i32** %7, align 8, !tbaa !3
  %100 = load i32*, i32** %8, align 8, !tbaa !8
  %101 = ptrtoint i32* %99 to i64
  %102 = ptrtoint i32* %100 to i64
  %103 = sub i64 %101, %102
  %104 = ashr exact i64 %103, 2
  %105 = icmp ugt i64 %104, %98
  br i1 %105, label %35, label %28, !llvm.loop !21

106:                                              ; preds = %77, %69, %50
  %107 = phi { i8*, i32 } [ %51, %50 ], [ %70, %69 ], [ %70, %77 ]
  %108 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #11
  %109 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i32*, i32** %109, align 8, !tbaa !8
  %111 = icmp eq i32* %110, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %106
  %113 = bitcast i32* %110 to i8*
  call void @_ZdlPv(i8* nonnull %113) #11
  br label %114

114:                                              ; preds = %106, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  resume { i8*, i32 } %107

115:                                              ; preds = %28, %131
  %116 = phi i64 [ %132, %131 ], [ 0, %28 ]
  %117 = load i32*, i32** %32, align 8
  br i1 %33, label %134, label %131

118:                                              ; preds = %131, %28
  %119 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* %30, i32** %119, align 8, !tbaa !8
  %120 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32* %29, i32** %120, align 8, !tbaa !3
  %121 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %122 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %123 = load i32*, i32** %122, align 8, !tbaa !20
  store i32* %123, i32** %121, align 8, !tbaa !20
  %124 = bitcast %"class.std::vector"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %124, i8 0, i64 24, i1 false) #11
  %125 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i32*, i32** %125, align 8, !tbaa !8
  %127 = icmp eq i32* %126, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %118
  %129 = bitcast i32* %126 to i8*
  call void @_ZdlPv(i8* nonnull %129) #11
  br label %130

130:                                              ; preds = %118, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void

131:                                              ; preds = %147, %115
  %132 = add nuw nsw i64 %116, 1
  %133 = icmp eq i64 %132, %31
  br i1 %133, label %118, label %115, !llvm.loop !22

134:                                              ; preds = %115, %147
  %135 = phi i64 [ %148, %147 ], [ 1, %115 ]
  %136 = add nsw i64 %135, -1
  %137 = getelementptr inbounds i32, i32* %117, i64 %136
  %138 = load i32, i32* %137, align 4, !tbaa !9
  %139 = getelementptr inbounds i32, i32* %117, i64 %135
  %140 = load i32, i32* %139, align 4, !tbaa !9
  %141 = icmp sgt i32 %138, %140
  br i1 %141, label %142, label %147

142:                                              ; preds = %134
  store i32 %138, i32* %139, align 4, !tbaa !9
  store i32 %140, i32* %137, align 4, !tbaa !9
  %143 = getelementptr inbounds i32, i32* %30, i64 %135
  %144 = load i32, i32* %143, align 4, !tbaa !9
  %145 = getelementptr inbounds i32, i32* %30, i64 %136
  %146 = load i32, i32* %145, align 4, !tbaa !9
  store i32 %146, i32* %143, align 4, !tbaa !9
  store i32 %144, i32* %145, align 4, !tbaa !9
  br label %147

147:                                              ; preds = %134, %142
  %148 = add nuw nsw i64 %135, 1
  %149 = icmp eq i64 %148, %31
  br i1 %149, label %131, label %134, !llvm.loop !23
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* %1, i64 %2, i8* %3, ...) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca i64, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = alloca i8, i64 %2, align 16
  %8 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %8)
  %10 = call i32 %1(i8* nonnull %7, i64 %2, i8* %3, %struct.__va_list_tag* nonnull %9)
  call void @llvm.va_end(i8* %8)
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !24
  %14 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  store i64 %11, i64* %5, align 8, !tbaa !25
  %15 = icmp ugt i32 %10, 15
  br i1 %15, label %16, label %21

16:                                               ; preds = %4
  %17 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8, !tbaa !19
  %19 = load i64, i64* %5, align 8, !tbaa !25
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %19, i64* %20, align 8, !tbaa !15
  br label %21

21:                                               ; preds = %16, %4
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8, !tbaa !19
  switch i64 %11, label %26 [
    i64 1, label %24
    i64 0, label %27
  ]

24:                                               ; preds = %21
  %25 = load i8, i8* %7, align 16, !tbaa !15
  store i8 %25, i8* %23, align 1, !tbaa !15
  br label %27

26:                                               ; preds = %21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* nonnull align 16 %7, i64 %11, i1 false) #11
  br label %27

27:                                               ; preds = %21, %24, %26
  %28 = load i64, i64* %5, align 8, !tbaa !25
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %28, i64* %29, align 8, !tbaa !11
  %30 = load i8*, i8** %22, align 8, !tbaa !19
  %31 = getelementptr inbounds i8, i8* %30, i64 %28
  store i8 0, i8* %31, align 1, !tbaa !15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @vsnprintf(i8* nocapture noundef, i64 noundef, i8* nocapture noundef readonly, %struct.__va_list_tag* noundef) #3

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #4

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #4

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, i32* %1, i32* nonnull align 4 dereferenceable(4) %2) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8, !tbaa !3
  %6 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8, !tbaa !8
  %8 = ptrtoint i32* %5 to i64
  %9 = ptrtoint i32* %7 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 2
  %12 = icmp eq i64 %10, 9223372036854775804
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

14:                                               ; preds = %3
  %15 = icmp eq i64 %10, 0
  %16 = select i1 %15, i64 1, i64 %11
  %17 = add nsw i64 %16, %11
  %18 = icmp ult i64 %17, %11
  %19 = icmp ugt i64 %17, 2305843009213693951
  %20 = or i1 %18, %19
  %21 = select i1 %20, i64 2305843009213693951, i64 %17
  %22 = ptrtoint i32* %1 to i64
  %23 = sub i64 %22, %9
  %24 = ashr exact i64 %23, 2
  %25 = icmp eq i64 %21, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %14
  %27 = icmp ugt i64 %21, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

29:                                               ; preds = %26
  %30 = shl i64 %21, 2
  %31 = call noalias nonnull i8* @_Znwm(i64 %30) #13
  %32 = bitcast i8* %31 to i32*
  br label %33

33:                                               ; preds = %14, %29
  %34 = phi i32* [ %32, %29 ], [ null, %14 ]
  %35 = getelementptr inbounds i32, i32* %34, i64 %24
  %36 = load i32, i32* %2, align 4, !tbaa !9
  store i32 %36, i32* %35, align 4, !tbaa !9
  %37 = icmp sgt i64 %23, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = bitcast i32* %34 to i8*
  %40 = bitcast i32* %7 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 %23, i1 false) #11
  br label %41

41:                                               ; preds = %33, %38
  %42 = getelementptr inbounds i32, i32* %35, i64 1
  %43 = sub i64 %8, %22
  %44 = icmp sgt i64 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = bitcast i32* %42 to i8*
  %47 = bitcast i32* %1 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %46, i8* align 4 %47, i64 %43, i1 false) #11
  br label %48

48:                                               ; preds = %41, %45
  %49 = icmp eq i32* %7, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %48
  %51 = bitcast i32* %7 to i8*
  call void @_ZdlPv(i8* nonnull %51) #11
  br label %52

52:                                               ; preds = %48, %50
  %53 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %54 = ashr exact i64 %43, 2
  %55 = getelementptr inbounds i32, i32* %42, i64 %54
  store i32* %34, i32** %6, align 8, !tbaa !8
  store i32* %55, i32** %4, align 8, !tbaa !3
  %56 = getelementptr inbounds i32, i32* %34, i64 %21
  store i32* %56, i32** %53, align 8, !tbaa !20
  ret void
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #8

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #10

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #3 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree nosync nounwind willreturn }
attributes #5 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #7 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #11 = { nounwind }
attributes #12 = { noreturn }
attributes #13 = { allocsize(0) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 8}
!4 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!4, !5, i64 0}
!9 = !{!10, !10, i64 0}
!10 = !{!"int", !6, i64 0}
!11 = !{!12, !14, i64 8}
!12 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !13, i64 0, !14, i64 8, !6, i64 16}
!13 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!14 = !{!"long", !6, i64 0}
!15 = !{!6, !6, i64 0}
!16 = distinct !{!16, !17, !18}
!17 = !{!"llvm.loop.mustprogress"}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = !{!12, !5, i64 0}
!20 = !{!4, !5, i64 16}
!21 = distinct !{!21, !17, !18}
!22 = distinct !{!22, !17, !18}
!23 = distinct !{!23, !17, !18}
!24 = !{!13, !5, i64 0}
!25 = !{!14, !14, i64 0}
