; ModuleID = '../../Human_xBenchmarks_164/CPP_92/CPP_92.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_92/CPP_92.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: mustprogress nofree nosync nounwind readnone uwtable willreturn
define dso_local zeroext i1 @_Z7any_intfff(float %0, float %1, float %2) local_unnamed_addr #0 {
  %4 = call float @llvm.round.f32(float %0) #2
  %5 = fcmp une float %4, %0
  %6 = call float @llvm.round.f32(float %1) #2
  %7 = fcmp une float %6, %1
  %8 = select i1 %5, i1 true, i1 %7
  %9 = call float @llvm.round.f32(float %2) #2
  %10 = fcmp une float %9, %2
  %11 = select i1 %8, i1 true, i1 %10
  br i1 %11, label %21, label %12

12:                                               ; preds = %3
  %13 = fadd float %0, %1
  %14 = fcmp oeq float %13, %2
  %15 = fadd float %0, %2
  %16 = fcmp oeq float %15, %1
  %17 = or i1 %14, %16
  %18 = fadd float %1, %2
  %19 = fcmp oeq float %18, %0
  %20 = select i1 %17, i1 true, i1 %19
  br label %21

21:                                               ; preds = %12, %3
  %22 = phi i1 [ false, %3 ], [ %20, %12 ]
  ret i1 %22
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.round.f32(float) #1

attributes #0 = { mustprogress nofree nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
