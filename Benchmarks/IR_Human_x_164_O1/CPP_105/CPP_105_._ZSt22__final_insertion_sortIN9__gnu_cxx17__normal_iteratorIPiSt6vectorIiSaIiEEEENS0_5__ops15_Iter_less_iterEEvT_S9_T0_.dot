digraph "CFG for '_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_' function" {
	label="CFG for '_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_' function";

	Node0x55d55b5a90f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%2:\l  %3 = ptrtoint i32* %1 to i64\l  %4 = ptrtoint i32* %0 to i64\l  %5 = sub i64 %3, %4\l  %6 = icmp sgt i64 %5, 64\l  br i1 %6, label %7, label %54\l|{<s0>T|<s1>F}}"];
	Node0x55d55b5a90f0:s0 -> Node0x55d55b5a9300;
	Node0x55d55b5a90f0:s1 -> Node0x55d55b5a9350;
	Node0x55d55b5a9300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%7:\l7:                                                \l  %8 = bitcast i32* %0 to i8*\l  %9 = getelementptr i32, i32* %0, i64 1\l  %10 = bitcast i32* %9 to i8*\l  br label %11\l}"];
	Node0x55d55b5a9300 -> Node0x55d55b5a9220;
	Node0x55d55b5a9220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%11:\l11:                                               \l  %12 = phi i64 [ %32, %30 ], [ 1, %7 ]\l  %13 = phi i32* [ %14, %30 ], [ %0, %7 ]\l  %14 = getelementptr inbounds i32, i32* %0, i64 %12\l  %15 = load i32, i32* %14, align 4, !tbaa !3\l  %16 = load i32, i32* %0, align 4, !tbaa !3\l  %17 = icmp slt i32 %15, %16\l  br i1 %17, label %18, label %20\l|{<s0>T|<s1>F}}"];
	Node0x55d55b5a9220:s0 -> Node0x55d55b592640;
	Node0x55d55b5a9220:s1 -> Node0x55d55b592690;
	Node0x55d55b592640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%18:\l18:                                               \l  %19 = shl nsw i64 %12, 2\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %10, i8* nonnull align 4\l... %8, i64 %19, i1 false) #13\l  br label %30\l}"];
	Node0x55d55b592640 -> Node0x55d55b592290;
	Node0x55d55b592690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%20:\l20:                                               \l  %21 = load i32, i32* %13, align 4, !tbaa !3\l  %22 = icmp slt i32 %15, %21\l  br i1 %22, label %23, label %30\l|{<s0>T|<s1>F}}"];
	Node0x55d55b592690:s0 -> Node0x55d55b592c80;
	Node0x55d55b592690:s1 -> Node0x55d55b592290;
	Node0x55d55b592c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%23:\l23:                                               \l  %24 = phi i32 [ %28, %23 ], [ %21, %20 ]\l  %25 = phi i32* [ %27, %23 ], [ %13, %20 ]\l  %26 = phi i32* [ %25, %23 ], [ %14, %20 ]\l  store i32 %24, i32* %26, align 4, !tbaa !3\l  %27 = getelementptr inbounds i32, i32* %25, i64 -1\l  %28 = load i32, i32* %27, align 4, !tbaa !3\l  %29 = icmp slt i32 %15, %28\l  br i1 %29, label %23, label %30, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x55d55b592c80:s0 -> Node0x55d55b592c80;
	Node0x55d55b592c80:s1 -> Node0x55d55b592290;
	Node0x55d55b592290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%30:\l30:                                               \l  %31 = phi i32* [ %0, %18 ], [ %14, %20 ], [ %25, %23 ]\l  store i32 %15, i32* %31, align 4, !tbaa !3\l  %32 = add nuw nsw i64 %12, 1\l  %33 = icmp eq i64 %32, 16\l  br i1 %33, label %34, label %11, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x55d55b592290:s0 -> Node0x55d55b5b0f20;
	Node0x55d55b592290:s1 -> Node0x55d55b5a9220;
	Node0x55d55b5b0f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%34:\l34:                                               \l  %35 = getelementptr inbounds i32, i32* %0, i64 16\l  %36 = icmp eq i32* %35, %1\l  br i1 %36, label %89, label %37\l|{<s0>T|<s1>F}}"];
	Node0x55d55b5b0f20:s0 -> Node0x55d55b5b1190;
	Node0x55d55b5b0f20:s1 -> Node0x55d55b5b11e0;
	Node0x55d55b5b11e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%37:\l37:                                               \l  %38 = phi i32* [ %52, %50 ], [ %35, %34 ]\l  %39 = load i32, i32* %38, align 4, !tbaa !3\l  %40 = getelementptr inbounds i32, i32* %38, i64 -1\l  %41 = load i32, i32* %40, align 4, !tbaa !3\l  %42 = icmp slt i32 %39, %41\l  br i1 %42, label %43, label %50\l|{<s0>T|<s1>F}}"];
	Node0x55d55b5b11e0:s0 -> Node0x55d55b5b1670;
	Node0x55d55b5b11e0:s1 -> Node0x55d55b5b1320;
	Node0x55d55b5b1670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = phi i32 [ %48, %43 ], [ %41, %37 ]\l  %45 = phi i32* [ %47, %43 ], [ %40, %37 ]\l  %46 = phi i32* [ %45, %43 ], [ %38, %37 ]\l  store i32 %44, i32* %46, align 4, !tbaa !3\l  %47 = getelementptr inbounds i32, i32* %45, i64 -1\l  %48 = load i32, i32* %47, align 4, !tbaa !3\l  %49 = icmp slt i32 %39, %48\l  br i1 %49, label %43, label %50, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x55d55b5b1670:s0 -> Node0x55d55b5b1670;
	Node0x55d55b5b1670:s1 -> Node0x55d55b5b1320;
	Node0x55d55b5b1320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%50:\l50:                                               \l  %51 = phi i32* [ %38, %37 ], [ %45, %43 ]\l  store i32 %39, i32* %51, align 4, !tbaa !3\l  %52 = getelementptr inbounds i32, i32* %38, i64 1\l  %53 = icmp eq i32* %52, %1\l  br i1 %53, label %89, label %37, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x55d55b5b1320:s0 -> Node0x55d55b5b1190;
	Node0x55d55b5b1320:s1 -> Node0x55d55b5b11e0;
	Node0x55d55b5a9350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%54:\l54:                                               \l  %55 = icmp eq i32* %0, %1\l  br i1 %55, label %89, label %56\l|{<s0>T|<s1>F}}"];
	Node0x55d55b5a9350:s0 -> Node0x55d55b5b1190;
	Node0x55d55b5a9350:s1 -> Node0x55d55b5b2720;
	Node0x55d55b5b2720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%56:\l56:                                               \l  %57 = bitcast i32* %0 to i8*\l  %58 = getelementptr inbounds i32, i32* %0, i64 1\l  %59 = icmp eq i32* %58, %1\l  br i1 %59, label %89, label %60\l|{<s0>T|<s1>F}}"];
	Node0x55d55b5b2720:s0 -> Node0x55d55b5b1190;
	Node0x55d55b5b2720:s1 -> Node0x55d55b5b29c0;
	Node0x55d55b5b29c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%60:\l60:                                               \l  %61 = phi i32* [ %87, %85 ], [ %58, %56 ]\l  %62 = phi i32* [ %61, %85 ], [ %0, %56 ]\l  %63 = load i32, i32* %61, align 4, !tbaa !3\l  %64 = load i32, i32* %0, align 4, !tbaa !3\l  %65 = icmp slt i32 %63, %64\l  br i1 %65, label %66, label %75\l|{<s0>T|<s1>F}}"];
	Node0x55d55b5b29c0:s0 -> Node0x55d55b5b2de0;
	Node0x55d55b5b29c0:s1 -> Node0x55d55b5b2e30;
	Node0x55d55b5b2de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%66:\l66:                                               \l  %67 = ptrtoint i32* %61 to i64\l  %68 = sub i64 %67, %4\l  %69 = icmp eq i64 %68, 0\l  br i1 %69, label %85, label %70\l|{<s0>T|<s1>F}}"];
	Node0x55d55b5b2de0:s0 -> Node0x55d55b5b2ac0;
	Node0x55d55b5b2de0:s1 -> Node0x55d55b5b3100;
	Node0x55d55b5b3100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%70:\l70:                                               \l  %71 = ashr exact i64 %68, 2\l  %72 = sub nsw i64 2, %71\l  %73 = getelementptr inbounds i32, i32* %62, i64 %72\l  %74 = bitcast i32* %73 to i8*\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %74, i8* nonnull align 4\l... %57, i64 %68, i1 false) #13\l  br label %85\l}"];
	Node0x55d55b5b3100 -> Node0x55d55b5b2ac0;
	Node0x55d55b5b2e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%75:\l75:                                               \l  %76 = load i32, i32* %62, align 4, !tbaa !3\l  %77 = icmp slt i32 %63, %76\l  br i1 %77, label %78, label %85\l|{<s0>T|<s1>F}}"];
	Node0x55d55b5b2e30:s0 -> Node0x55d55b5b3730;
	Node0x55d55b5b2e30:s1 -> Node0x55d55b5b2ac0;
	Node0x55d55b5b3730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%78:\l78:                                               \l  %79 = phi i32 [ %83, %78 ], [ %76, %75 ]\l  %80 = phi i32* [ %82, %78 ], [ %62, %75 ]\l  %81 = phi i32* [ %80, %78 ], [ %61, %75 ]\l  store i32 %79, i32* %81, align 4, !tbaa !3\l  %82 = getelementptr inbounds i32, i32* %80, i64 -1\l  %83 = load i32, i32* %82, align 4, !tbaa !3\l  %84 = icmp slt i32 %63, %83\l  br i1 %84, label %78, label %85, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x55d55b5b3730:s0 -> Node0x55d55b5b3730;
	Node0x55d55b5b3730:s1 -> Node0x55d55b5b2ac0;
	Node0x55d55b5b2ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%85:\l85:                                               \l  %86 = phi i32* [ %0, %70 ], [ %0, %66 ], [ %61, %75 ], [ %80, %78 ]\l  store i32 %63, i32* %86, align 4, !tbaa !3\l  %87 = getelementptr inbounds i32, i32* %61, i64 1\l  %88 = icmp eq i32* %87, %1\l  br i1 %88, label %89, label %60, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x55d55b5b2ac0:s0 -> Node0x55d55b5b1190;
	Node0x55d55b5b2ac0:s1 -> Node0x55d55b5b29c0;
	Node0x55d55b5b1190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%89:\l89:                                               \l  ret void\l}"];
}
