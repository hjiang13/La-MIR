; ModuleID = '../../Human_xBenchmarks_164/CPP_105/CPP_105.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_105/CPP_105.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::piecewise_construct_t" = type { i8 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base" }
%"struct.std::_Head_base" = type { i32* }
%"class.std::tuple.17" = type { i8 }
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<int, std::pair<const int, std::__cxx11::basic_string<char>>, std::_Select1st<std::pair<const int, std::__cxx11::basic_string<char>>>, std::less<int>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<int, std::pair<const int, std::__cxx11::basic_string<char>>, std::_Select1st<std::pair<const int, std::__cxx11::basic_string<char>>>, std::less<int>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"struct.std::pair" = type { i32, %"class.std::__cxx11::basic_string" }
%"class.std::allocator.11" = type { i8 }
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [40 x i8] }

$_ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEEC2ESt16initializer_listISA_ERKS7_RKSB_ = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EED2Ev = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_ = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_ = comdat any

$_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_ = comdat any

$_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_ = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ = comdat any

@.str.1 = private unnamed_addr constant [4 x i8] c"One\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"Two\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"Three\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"Six\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"Seven\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"Eight\00", align 1
@_ZStL19piecewise_construct = internal constant %"struct.std::piecewise_construct_t" undef, align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z9by_lengthB5cxx11St6vectorIiSaIiEE(%"class.std::vector"* noalias sret(%"class.std::vector") align 8 %0, %"class.std::vector.3"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::tuple", align 8
  %5 = alloca %"class.std::tuple.17", align 1
  %6 = alloca %"class.std::map", align 8
  %7 = alloca [10 x %"struct.std::pair"], align 8
  %8 = alloca %"struct.std::less", align 1
  %9 = alloca %"class.std::allocator.11", align 1
  %10 = getelementptr inbounds %"class.std::map", %"class.std::map"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #13
  %11 = bitcast [10 x %"struct.std::pair"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 400, i8* nonnull %11) #13
  %12 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 0
  %13 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 0, i32 0
  store i32 0, i32* %13, align 8, !tbaa !3
  %14 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 0, i32 1
  %15 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 0, i32 1, i32 2
  %16 = bitcast %"class.std::__cxx11::basic_string"* %14 to %union.anon**
  store %union.anon* %15, %union.anon** %16, align 8, !tbaa !12
  %17 = bitcast %union.anon* %15 to i32*
  store i32 1869768026, i32* %17, align 8
  %18 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 0, i32 1, i32 1
  store i64 4, i64* %18, align 8, !tbaa !13
  %19 = bitcast %union.anon* %15 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 4
  store i8 0, i8* %20, align 4, !tbaa !14
  %21 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 1, i32 0
  store i32 1, i32* %21, align 8, !tbaa !3
  %22 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 1, i32 1
  %23 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 1, i32 1, i32 2
  %24 = bitcast %"class.std::__cxx11::basic_string"* %22 to %union.anon**
  store %union.anon* %23, %union.anon** %24, align 8, !tbaa !12
  %25 = bitcast %union.anon* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(3) %25, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3, i1 false) #13
  %26 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 1, i32 1, i32 1
  store i64 3, i64* %26, align 8, !tbaa !13
  %27 = bitcast %union.anon* %23 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 3
  store i8 0, i8* %28, align 1, !tbaa !14
  %29 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 2, i32 0
  store i32 2, i32* %29, align 8, !tbaa !3
  %30 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 2, i32 1
  %31 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 2, i32 1, i32 2
  %32 = bitcast %"class.std::__cxx11::basic_string"* %30 to %union.anon**
  store %union.anon* %31, %union.anon** %32, align 8, !tbaa !12
  %33 = bitcast %union.anon* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(3) %33, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 3, i1 false) #13
  %34 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 2, i32 1, i32 1
  store i64 3, i64* %34, align 8, !tbaa !13
  %35 = bitcast %union.anon* %31 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 3
  store i8 0, i8* %36, align 1, !tbaa !14
  %37 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 3, i32 0
  store i32 3, i32* %37, align 8, !tbaa !3
  %38 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 3, i32 1
  %39 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 3, i32 1, i32 2
  %40 = bitcast %"class.std::__cxx11::basic_string"* %38 to %union.anon**
  store %union.anon* %39, %union.anon** %40, align 8, !tbaa !12
  %41 = bitcast %union.anon* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(5) %41, i8* noundef nonnull align 1 dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 5, i1 false) #13
  %42 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 3, i32 1, i32 1
  store i64 5, i64* %42, align 8, !tbaa !13
  %43 = bitcast %union.anon* %39 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 5
  store i8 0, i8* %44, align 1, !tbaa !14
  %45 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 4, i32 0
  store i32 4, i32* %45, align 8, !tbaa !3
  %46 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 4, i32 1
  %47 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 4, i32 1, i32 2
  %48 = bitcast %"class.std::__cxx11::basic_string"* %46 to %union.anon**
  store %union.anon* %47, %union.anon** %48, align 8, !tbaa !12
  %49 = bitcast %union.anon* %47 to i32*
  store i32 1920298822, i32* %49, align 8
  %50 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 4, i32 1, i32 1
  store i64 4, i64* %50, align 8, !tbaa !13
  %51 = bitcast %union.anon* %47 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4
  store i8 0, i8* %52, align 4, !tbaa !14
  %53 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 5, i32 0
  store i32 5, i32* %53, align 8, !tbaa !3
  %54 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 5, i32 1
  %55 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 5, i32 1, i32 2
  %56 = bitcast %"class.std::__cxx11::basic_string"* %54 to %union.anon**
  store %union.anon* %55, %union.anon** %56, align 8, !tbaa !12
  %57 = bitcast %union.anon* %55 to i32*
  store i32 1702259014, i32* %57, align 8
  %58 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 5, i32 1, i32 1
  store i64 4, i64* %58, align 8, !tbaa !13
  %59 = bitcast %union.anon* %55 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 4
  store i8 0, i8* %60, align 4, !tbaa !14
  %61 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 6, i32 0
  store i32 6, i32* %61, align 8, !tbaa !3
  %62 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 6, i32 1
  %63 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 6, i32 1, i32 2
  %64 = bitcast %"class.std::__cxx11::basic_string"* %62 to %union.anon**
  store %union.anon* %63, %union.anon** %64, align 8, !tbaa !12
  %65 = bitcast %union.anon* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(3) %65, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3, i1 false) #13
  %66 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 6, i32 1, i32 1
  store i64 3, i64* %66, align 8, !tbaa !13
  %67 = bitcast %union.anon* %63 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 3
  store i8 0, i8* %68, align 1, !tbaa !14
  %69 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 7, i32 0
  store i32 7, i32* %69, align 8, !tbaa !3
  %70 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 7, i32 1
  %71 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 7, i32 1, i32 2
  %72 = bitcast %"class.std::__cxx11::basic_string"* %70 to %union.anon**
  store %union.anon* %71, %union.anon** %72, align 8, !tbaa !12
  %73 = bitcast %union.anon* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(5) %73, i8* noundef nonnull align 1 dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i64 5, i1 false) #13
  %74 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 7, i32 1, i32 1
  store i64 5, i64* %74, align 8, !tbaa !13
  %75 = bitcast %union.anon* %71 to i8*
  %76 = getelementptr inbounds i8, i8* %75, i64 5
  store i8 0, i8* %76, align 1, !tbaa !14
  %77 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 8, i32 0
  store i32 8, i32* %77, align 8, !tbaa !3
  %78 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 8, i32 1
  %79 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 8, i32 1, i32 2
  %80 = bitcast %"class.std::__cxx11::basic_string"* %78 to %union.anon**
  store %union.anon* %79, %union.anon** %80, align 8, !tbaa !12
  %81 = bitcast %union.anon* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(5) %81, i8* noundef nonnull align 1 dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i64 5, i1 false) #13
  %82 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 8, i32 1, i32 1
  store i64 5, i64* %82, align 8, !tbaa !13
  %83 = bitcast %union.anon* %79 to i8*
  %84 = getelementptr inbounds i8, i8* %83, i64 5
  store i8 0, i8* %84, align 1, !tbaa !14
  %85 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 9, i32 0
  store i32 9, i32* %85, align 8, !tbaa !3
  %86 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 9, i32 1
  %87 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 9, i32 1, i32 2
  %88 = bitcast %"class.std::__cxx11::basic_string"* %86 to %union.anon**
  store %union.anon* %87, %union.anon** %88, align 8, !tbaa !12
  %89 = bitcast %union.anon* %87 to i32*
  store i32 1701734734, i32* %89, align 8
  %90 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 9, i32 1, i32 1
  store i64 4, i64* %90, align 8, !tbaa !13
  %91 = bitcast %union.anon* %87 to i8*
  %92 = getelementptr inbounds i8, i8* %91, i64 4
  store i8 0, i8* %92, align 4, !tbaa !14
  %93 = getelementptr inbounds %"struct.std::less", %"struct.std::less"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %93) #13
  %94 = getelementptr inbounds %"class.std::allocator.11", %"class.std::allocator.11"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %94) #13
  invoke void @_ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEEC2ESt16initializer_listISA_ERKS7_RKSB_(%"class.std::map"* nonnull align 8 dereferenceable(48) %6, %"struct.std::pair"* nonnull %12, i64 10, %"struct.std::less"* nonnull align 1 dereferenceable(1) %8, %"class.std::allocator.11"* nonnull align 1 dereferenceable(1) %9)
          to label %95 unwind label %147

95:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %94) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %93) #13
  %96 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 10
  br label %97

97:                                               ; preds = %106, %95
  %98 = phi %"struct.std::pair"* [ %96, %95 ], [ %99, %106 ]
  %99 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %98, i64 -1
  %100 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %98, i64 -1, i32 1, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8, !tbaa !15
  %102 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %98, i64 -1, i32 1, i32 2
  %103 = bitcast %union.anon* %102 to i8*
  %104 = icmp eq i8* %101, %103
  br i1 %104, label %106, label %105

105:                                              ; preds = %97
  call void @_ZdlPv(i8* %101) #13
  br label %106

106:                                              ; preds = %97, %105
  %107 = icmp eq %"struct.std::pair"* %99, %12
  br i1 %107, label %108, label %97

108:                                              ; preds = %106
  call void @llvm.lifetime.end.p0i8(i64 400, i8* nonnull %11) #13
  %109 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i32*, i32** %109, align 8, !tbaa !16
  %111 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %112 = load i32*, i32** %111, align 8, !tbaa !16
  %113 = icmp eq i32* %110, %112
  br i1 %113, label %123, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i32* %112 to i64
  %116 = ptrtoint i32* %110 to i64
  %117 = sub i64 %115, %116
  %118 = ashr exact i64 %117, 2
  %119 = call i64 @llvm.ctlz.i64(i64 %118, i1 true) #13, !range !17
  %120 = shl nuw nsw i64 %119, 1
  %121 = xor i64 %120, 126
  invoke void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i32* %110, i32* %112, i64 %121)
          to label %122 unwind label %162

122:                                              ; preds = %114
  invoke void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* %110, i32* %112)
          to label %123 unwind label %162

123:                                              ; preds = %108, %122
  %124 = bitcast %"class.std::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %124, i8 0, i64 24, i1 false)
  %125 = load i32*, i32** %111, align 8, !tbaa !18
  %126 = load i32*, i32** %109, align 8, !tbaa !20
  %127 = ptrtoint i32* %125 to i64
  %128 = ptrtoint i32* %126 to i64
  %129 = sub i64 %127, %128
  %130 = lshr exact i64 %129, 2
  %131 = trunc i64 %130 to i32
  %132 = getelementptr inbounds i8, i8* %10, i64 16
  %133 = bitcast i8* %132 to %"struct.std::_Rb_tree_node"**
  %134 = getelementptr inbounds i8, i8* %10, i64 8
  %135 = bitcast i8* %134 to %"struct.std::_Rb_tree_node_base"*
  %136 = getelementptr inbounds %"class.std::map", %"class.std::map"* %6, i64 0, i32 0
  %137 = bitcast %"class.std::tuple"* %4 to i8*
  %138 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %139 = getelementptr inbounds %"class.std::tuple.17", %"class.std::tuple.17"* %5, i64 0, i32 0
  %140 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %141 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %142 = bitcast i64* %3 to i8*
  %143 = add i32 %131, -1
  %144 = icmp sgt i32 %143, -1
  br i1 %144, label %145, label %242

145:                                              ; preds = %123
  %146 = sext i32 %143 to i64
  br label %164

147:                                              ; preds = %2
  %148 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %94) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %93) #13
  %149 = getelementptr inbounds [10 x %"struct.std::pair"], [10 x %"struct.std::pair"]* %7, i64 0, i64 10
  br label %150

150:                                              ; preds = %159, %147
  %151 = phi %"struct.std::pair"* [ %149, %147 ], [ %152, %159 ]
  %152 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %151, i64 -1
  %153 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %151, i64 -1, i32 1, i32 0, i32 0
  %154 = load i8*, i8** %153, align 8, !tbaa !15
  %155 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %151, i64 -1, i32 1, i32 2
  %156 = bitcast %union.anon* %155 to i8*
  %157 = icmp eq i8* %154, %156
  br i1 %157, label %159, label %158

158:                                              ; preds = %150
  call void @_ZdlPv(i8* %154) #13
  br label %159

159:                                              ; preds = %150, %158
  %160 = icmp eq %"struct.std::pair"* %152, %12
  br i1 %160, label %161, label %150

161:                                              ; preds = %159
  call void @llvm.lifetime.end.p0i8(i64 400, i8* nonnull %11) #13
  br label %255

162:                                              ; preds = %122, %114
  %163 = landingpad { i8*, i32 }
          cleanup
  br label %252

164:                                              ; preds = %145, %238
  %165 = phi i64 [ %146, %145 ], [ %241, %238 ]
  %166 = phi i32 [ %143, %145 ], [ %239, %238 ]
  %167 = load i32*, i32** %109, align 8, !tbaa !20
  %168 = getelementptr inbounds i32, i32* %167, i64 %165
  %169 = load i32, i32* %168, align 4, !tbaa !21
  %170 = add i32 %169, -1
  %171 = icmp ult i32 %170, 9
  br i1 %171, label %172, label %238

172:                                              ; preds = %164
  %173 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %133, align 8, !tbaa !22
  %174 = icmp eq %"struct.std::_Rb_tree_node"* %173, null
  br i1 %174, label %190, label %175

175:                                              ; preds = %172, %175
  %176 = phi %"struct.std::_Rb_tree_node"* [ %188, %175 ], [ %173, %172 ]
  %177 = phi %"struct.std::_Rb_tree_node_base"* [ %185, %175 ], [ %135, %172 ]
  %178 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %176, i64 0, i32 1
  %179 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %178 to i32*
  %180 = load i32, i32* %179, align 4, !tbaa !21
  %181 = icmp slt i32 %180, %169
  %182 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %176, i64 0, i32 0, i32 3
  %183 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %176, i64 0, i32 0
  %184 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %176, i64 0, i32 0, i32 2
  %185 = select i1 %181, %"struct.std::_Rb_tree_node_base"* %177, %"struct.std::_Rb_tree_node_base"* %183
  %186 = select i1 %181, %"struct.std::_Rb_tree_node_base"** %182, %"struct.std::_Rb_tree_node_base"** %184
  %187 = bitcast %"struct.std::_Rb_tree_node_base"** %186 to %"struct.std::_Rb_tree_node"**
  %188 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %187, align 8, !tbaa !16
  %189 = icmp eq %"struct.std::_Rb_tree_node"* %188, null
  br i1 %189, label %190, label %175, !llvm.loop !26

190:                                              ; preds = %175, %172
  %191 = phi %"struct.std::_Rb_tree_node_base"* [ %135, %172 ], [ %185, %175 ]
  %192 = icmp eq %"struct.std::_Rb_tree_node_base"* %191, %135
  br i1 %192, label %197, label %193

193:                                              ; preds = %190
  %194 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %191, i64 1, i32 0
  %195 = load i32, i32* %194, align 4, !tbaa !21
  %196 = icmp slt i32 %169, %195
  br i1 %196, label %197, label %200

197:                                              ; preds = %193, %190
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #13
  store i32* %168, i32** %138, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %139) #13
  %198 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %136, %"struct.std::_Rb_tree_node_base"* %191, %"struct.std::piecewise_construct_t"* nonnull align 1 dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple"* nonnull align 8 dereferenceable(8) %4, %"class.std::tuple.17"* nonnull align 1 dereferenceable(1) %5)
          to label %199 unwind label %236

199:                                              ; preds = %197
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %139) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #13
  br label %200

200:                                              ; preds = %193, %199
  %201 = phi %"struct.std::_Rb_tree_node_base"* [ %198, %199 ], [ %191, %193 ]
  %202 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %201, i64 1, i32 1
  %203 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %140, align 8, !tbaa !29
  %204 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %141, align 8, !tbaa !31
  %205 = icmp eq %"class.std::__cxx11::basic_string"* %203, %204
  br i1 %205, label %234, label %206

206:                                              ; preds = %200
  %207 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %203, i64 0, i32 2
  %208 = bitcast %"class.std::__cxx11::basic_string"* %203 to %union.anon**
  store %union.anon* %207, %union.anon** %208, align 8, !tbaa !12
  %209 = bitcast %"struct.std::_Rb_tree_node_base"** %202 to i8**
  %210 = load i8*, i8** %209, align 8, !tbaa !15
  %211 = getelementptr inbounds %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %202, i64 1
  %212 = bitcast %"struct.std::_Rb_tree_node_base"** %211 to i64*
  %213 = load i64, i64* %212, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #13
  store i64 %213, i64* %3, align 8, !tbaa !32
  %214 = icmp ugt i64 %213, 15
  br i1 %214, label %215, label %221

215:                                              ; preds = %206
  %216 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %203, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %217 unwind label %236

217:                                              ; preds = %215
  %218 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %203, i64 0, i32 0, i32 0
  store i8* %216, i8** %218, align 8, !tbaa !15
  %219 = load i64, i64* %3, align 8, !tbaa !32
  %220 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %203, i64 0, i32 2, i32 0
  store i64 %219, i64* %220, align 8, !tbaa !14
  br label %221

221:                                              ; preds = %217, %206
  %222 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %203, i64 0, i32 0, i32 0
  %223 = load i8*, i8** %222, align 8, !tbaa !15
  switch i64 %213, label %226 [
    i64 1, label %224
    i64 0, label %227
  ]

224:                                              ; preds = %221
  %225 = load i8, i8* %210, align 1, !tbaa !14
  store i8 %225, i8* %223, align 1, !tbaa !14
  br label %227

226:                                              ; preds = %221
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %223, i8* align 1 %210, i64 %213, i1 false) #13
  br label %227

227:                                              ; preds = %226, %224, %221
  %228 = load i64, i64* %3, align 8, !tbaa !32
  %229 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %203, i64 0, i32 1
  store i64 %228, i64* %229, align 8, !tbaa !13
  %230 = load i8*, i8** %222, align 8, !tbaa !15
  %231 = getelementptr inbounds i8, i8* %230, i64 %228
  store i8 0, i8* %231, align 1, !tbaa !14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #13
  %232 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %140, align 8, !tbaa !29
  %233 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %232, i64 1
  store %"class.std::__cxx11::basic_string"* %233, %"class.std::__cxx11::basic_string"** %140, align 8, !tbaa !29
  br label %238

234:                                              ; preds = %200
  %235 = bitcast %"struct.std::_Rb_tree_node_base"** %202 to %"class.std::__cxx11::basic_string"*
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %"class.std::__cxx11::basic_string"* %203, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %235)
          to label %238 unwind label %236

236:                                              ; preds = %234, %215, %197
  %237 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #13
  br label %252

238:                                              ; preds = %227, %234, %164
  %239 = add i32 %166, -1
  %240 = icmp sgt i32 %239, -1
  %241 = add nsw i64 %165, -1
  br i1 %240, label %164, label %242, !llvm.loop !33

242:                                              ; preds = %238, %123
  %243 = getelementptr inbounds %"class.std::map", %"class.std::map"* %6, i64 0, i32 0
  %244 = getelementptr inbounds %"class.std::map", %"class.std::map"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = getelementptr inbounds i8, i8* %244, i64 16
  %246 = bitcast i8* %245 to %"struct.std::_Rb_tree_node"**
  %247 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %246, align 8, !tbaa !22
  invoke void @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %243, %"struct.std::_Rb_tree_node"* %247)
          to label %251 unwind label %248

248:                                              ; preds = %242
  %249 = landingpad { i8*, i32 }
          catch i8* null
  %250 = extractvalue { i8*, i32 } %249, 0
  call void @__clang_call_terminate(i8* %250) #14
  unreachable

251:                                              ; preds = %242
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #13
  ret void

252:                                              ; preds = %236, %162
  %253 = phi { i8*, i32 } [ %237, %236 ], [ %163, %162 ]
  %254 = getelementptr inbounds %"class.std::map", %"class.std::map"* %6, i64 0, i32 0
  call void @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EED2Ev(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %254) #13
  br label %255

255:                                              ; preds = %252, %161
  %256 = phi { i8*, i32 } [ %253, %252 ], [ %148, %161 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #13
  resume { i8*, i32 } %256
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEEC2ESt16initializer_listISA_ERKS7_RKSB_(%"class.std::map"* nonnull align 8 dereferenceable(48) %0, %"struct.std::pair"* %1, i64 %2, %"struct.std::less"* nonnull align 1 dereferenceable(1) %3, %"class.std::allocator.11"* nonnull align 1 dereferenceable(1) %4) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = getelementptr inbounds %"class.std::map", %"class.std::map"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.std::map", %"class.std::map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds i8, i8* %7, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8, !tbaa !34
  %10 = getelementptr inbounds i8, i8* %7, i64 16
  %11 = bitcast i8* %10 to %"struct.std::_Rb_tree_node_base"**
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %11, align 8, !tbaa !22
  %12 = getelementptr inbounds i8, i8* %7, i64 24
  %13 = bitcast i8* %12 to i8**
  store i8* %8, i8** %13, align 8, !tbaa !35
  %14 = getelementptr inbounds i8, i8* %7, i64 32
  %15 = bitcast i8* %14 to i8**
  store i8* %8, i8** %15, align 8, !tbaa !36
  %16 = getelementptr inbounds i8, i8* %7, i64 40
  %17 = bitcast i8* %16 to i64*
  store i64 0, i64* %17, align 8, !tbaa !37
  %18 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 %2
  %19 = icmp eq i64 %2, 0
  br i1 %19, label %98, label %20

20:                                               ; preds = %5
  %21 = bitcast i8* %8 to %"struct.std::_Rb_tree_node_base"*
  %22 = bitcast i8* %14 to %"struct.std::_Rb_tree_node_base"**
  %23 = bitcast i8* %10 to %"struct.std::_Rb_tree_node"**
  %24 = bitcast i8* %12 to %"struct.std::_Rb_tree_node_base"**
  br label %25

25:                                               ; preds = %20, %95
  %26 = phi %"struct.std::pair"* [ %96, %95 ], [ %1, %20 ]
  %27 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %26, i64 0, i32 0
  %28 = load i64, i64* %17, align 8, !tbaa !37
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %22, align 8, !tbaa !16
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %31, i64 1, i32 0
  %33 = load i32, i32* %32, align 4, !tbaa !21
  %34 = load i32, i32* %27, align 4, !tbaa !21
  %35 = icmp slt i32 %33, %34
  br i1 %35, label %73, label %36

36:                                               ; preds = %30, %25
  %37 = load i32, i32* %27, align 4
  %38 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %23, align 8, !tbaa !16
  %39 = icmp eq %"struct.std::_Rb_tree_node"* %38, null
  br i1 %39, label %54, label %40

40:                                               ; preds = %36, %40
  %41 = phi %"struct.std::_Rb_tree_node"* [ %50, %40 ], [ %38, %36 ]
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %41, i64 0, i32 1
  %43 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %42 to i32*
  %44 = load i32, i32* %43, align 4, !tbaa !21
  %45 = icmp slt i32 %37, %44
  %46 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %41, i64 0, i32 0, i32 2
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %41, i64 0, i32 0, i32 3
  %48 = select i1 %45, %"struct.std::_Rb_tree_node_base"** %46, %"struct.std::_Rb_tree_node_base"** %47
  %49 = bitcast %"struct.std::_Rb_tree_node_base"** %48 to %"struct.std::_Rb_tree_node"**
  %50 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %49, align 8, !tbaa !16
  %51 = icmp eq %"struct.std::_Rb_tree_node"* %50, null
  br i1 %51, label %52, label %40, !llvm.loop !38

52:                                               ; preds = %40
  %53 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %41, i64 0, i32 0
  br label %54

54:                                               ; preds = %52, %36
  %55 = phi %"struct.std::_Rb_tree_node_base"* [ %53, %52 ], [ %21, %36 ]
  %56 = phi i1 [ %45, %52 ], [ true, %36 ]
  %57 = phi %"struct.std::_Rb_tree_node"* [ %50, %52 ], [ %38, %36 ]
  br i1 %56, label %58, label %65

58:                                               ; preds = %54
  %59 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %24, align 8, !tbaa !35
  %60 = icmp eq %"struct.std::_Rb_tree_node_base"* %55, %59
  br i1 %60, label %61, label %63

61:                                               ; preds = %58
  %62 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %57, i64 0, i32 0
  br label %73

63:                                               ; preds = %58
  %64 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %55) #15
  br label %65

65:                                               ; preds = %63, %54
  %66 = phi %"struct.std::_Rb_tree_node_base"* [ %64, %63 ], [ %55, %54 ]
  %67 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %66, i64 1, i32 0
  %68 = load i32, i32* %67, align 4, !tbaa !21
  %69 = icmp slt i32 %68, %37
  %70 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %57, i64 0, i32 0
  %71 = select i1 %69, %"struct.std::_Rb_tree_node_base"* %70, %"struct.std::_Rb_tree_node_base"* %66
  %72 = select i1 %69, %"struct.std::_Rb_tree_node_base"* %55, %"struct.std::_Rb_tree_node_base"* null
  br label %73

73:                                               ; preds = %30, %61, %65
  %74 = phi %"struct.std::_Rb_tree_node_base"* [ null, %30 ], [ %62, %61 ], [ %71, %65 ]
  %75 = phi %"struct.std::_Rb_tree_node_base"* [ %31, %30 ], [ %55, %61 ], [ %72, %65 ]
  %76 = icmp eq %"struct.std::_Rb_tree_node_base"* %75, null
  br i1 %76, label %95, label %77

77:                                               ; preds = %73
  %78 = icmp ne %"struct.std::_Rb_tree_node_base"* %74, null
  %79 = icmp eq %"struct.std::_Rb_tree_node_base"* %75, %21
  %80 = select i1 %78, i1 true, i1 %79
  br i1 %80, label %86, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %75, i64 1, i32 0
  %83 = load i32, i32* %27, align 8, !tbaa !21
  %84 = load i32, i32* %82, align 4, !tbaa !21
  %85 = icmp slt i32 %83, %84
  br label %86

86:                                               ; preds = %81, %77
  %87 = phi i1 [ true, %77 ], [ %85, %81 ]
  %88 = invoke noalias nonnull i8* @_Znwm(i64 72) #16
          to label %89 unwind label %99

89:                                               ; preds = %86
  %90 = bitcast i8* %88 to %"struct.std::_Rb_tree_node"*
  invoke void @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %6, %"struct.std::_Rb_tree_node"* nonnull %90, %"struct.std::pair"* nonnull align 8 dereferenceable(40) %26)
          to label %91 unwind label %99

91:                                               ; preds = %89
  %92 = bitcast i8* %88 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %87, %"struct.std::_Rb_tree_node_base"* nonnull %92, %"struct.std::_Rb_tree_node_base"* nonnull %75, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32) %21) #13
  %93 = load i64, i64* %17, align 8, !tbaa !37
  %94 = add i64 %93, 1
  store i64 %94, i64* %17, align 8, !tbaa !37
  br label %95

95:                                               ; preds = %91, %73
  %96 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %26, i64 1
  %97 = icmp eq %"struct.std::pair"* %96, %18
  br i1 %97, label %98, label %25, !llvm.loop !39

98:                                               ; preds = %95, %5
  ret void

99:                                               ; preds = %89, %86
  %100 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EED2Ev(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %6) #13
  resume { i8*, i32 } %100
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8, !tbaa !40
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8, !tbaa !29
  %6 = icmp eq %"class.std::__cxx11::basic_string"* %3, %5
  br i1 %6, label %18, label %7

7:                                                ; preds = %1, %15
  %8 = phi %"class.std::__cxx11::basic_string"* [ %16, %15 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !tbaa !15
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %12 = bitcast %union.anon* %11 to i8*
  %13 = icmp eq i8* %10, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %7
  call void @_ZdlPv(i8* %10) #13
  br label %15

15:                                               ; preds = %14, %7
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 1
  %17 = icmp eq %"class.std::__cxx11::basic_string"* %16, %5
  br i1 %17, label %18, label %7, !llvm.loop !41

18:                                               ; preds = %15, %1
  %19 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %19, align 8, !tbaa !40
  %21 = icmp eq %"class.std::__cxx11::basic_string"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__cxx11::basic_string"* %20 to i8*
  call void @_ZdlPv(i8* nonnull %23) #13
  br label %24

24:                                               ; preds = %18, %22
  ret void
}

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @__cxa_rethrow() local_unnamed_addr

declare dso_local void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #5 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #13
  call void @_ZSt9terminatev() #14
  unreachable
}

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EED2Ev(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = bitcast i8* %3 to %"struct.std::_Rb_tree_node"**
  %5 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8, !tbaa !22
  invoke void @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %5)
          to label %6 unwind label %7

6:                                                ; preds = %1
  ret void

7:                                                ; preds = %1
  %8 = landingpad { i8*, i32 }
          catch i8* null
  %9 = extractvalue { i8*, i32 } %8, 0
  call void @__clang_call_terminate(i8* %9) #14
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %1) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = icmp eq %"struct.std::_Rb_tree_node"* %1, null
  br i1 %3, label %21, label %4

4:                                                ; preds = %2, %18
  %5 = phi %"struct.std::_Rb_tree_node"* [ %11, %18 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %5, i64 0, i32 0, i32 3
  %7 = bitcast %"struct.std::_Rb_tree_node_base"** %6 to %"struct.std::_Rb_tree_node"**
  %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8, !tbaa !42
  call void @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %8)
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %5, i64 0, i32 0, i32 2
  %10 = bitcast %"struct.std::_Rb_tree_node_base"** %9 to %"struct.std::_Rb_tree_node"**
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8, !tbaa !43
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %5, i64 0, i32 1, i32 0, i64 8
  %13 = bitcast i8* %12 to i8**
  %14 = load i8*, i8** %13, align 8, !tbaa !15
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %5, i64 0, i32 1, i32 0, i64 24
  %16 = icmp eq i8* %14, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @_ZdlPv(i8* %14) #13
  br label %18

18:                                               ; preds = %4, %17
  %19 = bitcast %"struct.std::_Rb_tree_node"* %5 to i8*
  call void @_ZdlPv(i8* nonnull %19) #13
  %20 = icmp eq %"struct.std::_Rb_tree_node"* %11, null
  br i1 %20, label %21, label %4, !llvm.loop !44

21:                                               ; preds = %18, %2
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %1) local_unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %1, i64 0, i32 1, i32 0, i64 8
  %4 = bitcast i8* %3 to i8**
  %5 = load i8*, i8** %4, align 8, !tbaa !15
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %1, i64 0, i32 1, i32 0, i64 24
  %7 = icmp eq i8* %5, %6
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  call void @_ZdlPv(i8* %5) #13
  br label %9

9:                                                ; preds = %2, %8
  %10 = bitcast %"struct.std::_Rb_tree_node"* %1 to i8*
  call void @_ZdlPv(i8* %10) #13
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node_base"* %1, i32* nonnull align 4 dereferenceable(4) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to %"struct.std::_Rb_tree_node_base"*
  %7 = icmp eq %"struct.std::_Rb_tree_node_base"* %6, %1
  br i1 %7, label %8, label %62

8:                                                ; preds = %3
  %9 = getelementptr inbounds i8, i8* %4, i64 40
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !37
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds i8, i8* %4, i64 32
  %15 = bitcast i8* %14 to %"struct.std::_Rb_tree_node_base"**
  %16 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %15, align 8, !tbaa !16
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %16, i64 1, i32 0
  %18 = load i32, i32* %17, align 4, !tbaa !21
  %19 = load i32, i32* %2, align 4, !tbaa !21
  %20 = icmp slt i32 %18, %19
  br i1 %20, label %180, label %21

21:                                               ; preds = %13, %8
  %22 = getelementptr inbounds i8, i8* %4, i64 16
  %23 = bitcast i8* %22 to %"struct.std::_Rb_tree_node"**
  %24 = load i32, i32* %2, align 4
  %25 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %23, align 8, !tbaa !16
  %26 = icmp eq %"struct.std::_Rb_tree_node"* %25, null
  br i1 %26, label %41, label %27

27:                                               ; preds = %21, %27
  %28 = phi %"struct.std::_Rb_tree_node"* [ %37, %27 ], [ %25, %21 ]
  %29 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %28, i64 0, i32 1
  %30 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %29 to i32*
  %31 = load i32, i32* %30, align 4, !tbaa !21
  %32 = icmp slt i32 %24, %31
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %28, i64 0, i32 0, i32 2
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %28, i64 0, i32 0, i32 3
  %35 = select i1 %32, %"struct.std::_Rb_tree_node_base"** %33, %"struct.std::_Rb_tree_node_base"** %34
  %36 = bitcast %"struct.std::_Rb_tree_node_base"** %35 to %"struct.std::_Rb_tree_node"**
  %37 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %36, align 8, !tbaa !16
  %38 = icmp eq %"struct.std::_Rb_tree_node"* %37, null
  br i1 %38, label %39, label %27, !llvm.loop !38

39:                                               ; preds = %27
  %40 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %28, i64 0, i32 0
  br label %41

41:                                               ; preds = %39, %21
  %42 = phi %"struct.std::_Rb_tree_node_base"* [ %40, %39 ], [ %6, %21 ]
  %43 = phi i1 [ %32, %39 ], [ true, %21 ]
  %44 = phi %"struct.std::_Rb_tree_node"* [ %37, %39 ], [ %25, %21 ]
  br i1 %43, label %45, label %54

45:                                               ; preds = %41
  %46 = getelementptr inbounds i8, i8* %4, i64 24
  %47 = bitcast i8* %46 to %"struct.std::_Rb_tree_node_base"**
  %48 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %47, align 8, !tbaa !35
  %49 = icmp eq %"struct.std::_Rb_tree_node_base"* %42, %48
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  %51 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %44, i64 0, i32 0
  br label %180

52:                                               ; preds = %45
  %53 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %42) #15
  br label %54

54:                                               ; preds = %52, %41
  %55 = phi %"struct.std::_Rb_tree_node_base"* [ %53, %52 ], [ %42, %41 ]
  %56 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %55, i64 1, i32 0
  %57 = load i32, i32* %56, align 4, !tbaa !21
  %58 = icmp slt i32 %57, %24
  %59 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %44, i64 0, i32 0
  %60 = select i1 %58, %"struct.std::_Rb_tree_node_base"* %59, %"struct.std::_Rb_tree_node_base"* %55
  %61 = select i1 %58, %"struct.std::_Rb_tree_node_base"* %42, %"struct.std::_Rb_tree_node_base"* null
  br label %180

62:                                               ; preds = %3
  %63 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %1, i64 1, i32 0
  %64 = load i32, i32* %2, align 4, !tbaa !21
  %65 = load i32, i32* %63, align 4, !tbaa !21
  %66 = icmp slt i32 %64, %65
  br i1 %66, label %67, label %121

67:                                               ; preds = %62
  %68 = getelementptr inbounds i8, i8* %4, i64 24
  %69 = bitcast i8* %68 to %"struct.std::_Rb_tree_node_base"**
  %70 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %69, align 8, !tbaa !16
  %71 = icmp eq %"struct.std::_Rb_tree_node_base"* %70, %1
  br i1 %71, label %180, label %72

72:                                               ; preds = %67
  %73 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %1) #15
  %74 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %73, i64 1, i32 0
  %75 = load i32, i32* %74, align 4, !tbaa !21
  %76 = icmp slt i32 %75, %64
  br i1 %76, label %77, label %84

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %73, i64 0, i32 3
  %79 = bitcast %"struct.std::_Rb_tree_node_base"** %78 to %"struct.std::_Rb_tree_node"**
  %80 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %79, align 8, !tbaa !42
  %81 = icmp eq %"struct.std::_Rb_tree_node"* %80, null
  %82 = select i1 %81, %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"* %1
  %83 = select i1 %81, %"struct.std::_Rb_tree_node_base"* %73, %"struct.std::_Rb_tree_node_base"* %1
  br label %180

84:                                               ; preds = %72
  %85 = getelementptr inbounds i8, i8* %4, i64 16
  %86 = bitcast i8* %85 to %"struct.std::_Rb_tree_node"**
  %87 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %86, align 8, !tbaa !16
  %88 = icmp eq %"struct.std::_Rb_tree_node"* %87, null
  br i1 %88, label %103, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::_Rb_tree_node"* [ %99, %89 ], [ %87, %84 ]
  %91 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %90, i64 0, i32 1
  %92 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %91 to i32*
  %93 = load i32, i32* %92, align 4, !tbaa !21
  %94 = icmp slt i32 %64, %93
  %95 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %90, i64 0, i32 0, i32 2
  %96 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %90, i64 0, i32 0, i32 3
  %97 = select i1 %94, %"struct.std::_Rb_tree_node_base"** %95, %"struct.std::_Rb_tree_node_base"** %96
  %98 = bitcast %"struct.std::_Rb_tree_node_base"** %97 to %"struct.std::_Rb_tree_node"**
  %99 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %98, align 8, !tbaa !16
  %100 = icmp eq %"struct.std::_Rb_tree_node"* %99, null
  br i1 %100, label %101, label %89, !llvm.loop !38

101:                                              ; preds = %89
  %102 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %90, i64 0, i32 0
  br label %103

103:                                              ; preds = %101, %84
  %104 = phi %"struct.std::_Rb_tree_node_base"* [ %102, %101 ], [ %6, %84 ]
  %105 = phi i1 [ %94, %101 ], [ true, %84 ]
  %106 = phi %"struct.std::_Rb_tree_node"* [ %99, %101 ], [ %87, %84 ]
  br i1 %105, label %107, label %113

107:                                              ; preds = %103
  %108 = icmp eq %"struct.std::_Rb_tree_node_base"* %104, %70
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %106, i64 0, i32 0
  br label %180

111:                                              ; preds = %107
  %112 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %104) #15
  br label %113

113:                                              ; preds = %111, %103
  %114 = phi %"struct.std::_Rb_tree_node_base"* [ %112, %111 ], [ %104, %103 ]
  %115 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %114, i64 1, i32 0
  %116 = load i32, i32* %115, align 4, !tbaa !21
  %117 = icmp slt i32 %116, %64
  %118 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %106, i64 0, i32 0
  %119 = select i1 %117, %"struct.std::_Rb_tree_node_base"* %118, %"struct.std::_Rb_tree_node_base"* %114
  %120 = select i1 %117, %"struct.std::_Rb_tree_node_base"* %104, %"struct.std::_Rb_tree_node_base"* null
  br label %180

121:                                              ; preds = %62
  %122 = icmp slt i32 %65, %64
  br i1 %122, label %123, label %180

123:                                              ; preds = %121
  %124 = getelementptr inbounds i8, i8* %4, i64 32
  %125 = bitcast i8* %124 to %"struct.std::_Rb_tree_node_base"**
  %126 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %125, align 8, !tbaa !16
  %127 = icmp eq %"struct.std::_Rb_tree_node_base"* %126, %1
  br i1 %127, label %180, label %128

128:                                              ; preds = %123
  %129 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %1) #15
  %130 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %129, i64 1, i32 0
  %131 = load i32, i32* %130, align 4, !tbaa !21
  %132 = icmp slt i32 %64, %131
  br i1 %132, label %133, label %140

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %1, i64 0, i32 3
  %135 = bitcast %"struct.std::_Rb_tree_node_base"** %134 to %"struct.std::_Rb_tree_node"**
  %136 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %135, align 8, !tbaa !42
  %137 = icmp eq %"struct.std::_Rb_tree_node"* %136, null
  %138 = select i1 %137, %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"* %129
  %139 = select i1 %137, %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"* %129
  br label %180

140:                                              ; preds = %128
  %141 = getelementptr inbounds i8, i8* %4, i64 16
  %142 = bitcast i8* %141 to %"struct.std::_Rb_tree_node"**
  %143 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %142, align 8, !tbaa !16
  %144 = icmp eq %"struct.std::_Rb_tree_node"* %143, null
  br i1 %144, label %159, label %145

145:                                              ; preds = %140, %145
  %146 = phi %"struct.std::_Rb_tree_node"* [ %155, %145 ], [ %143, %140 ]
  %147 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %146, i64 0, i32 1
  %148 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %147 to i32*
  %149 = load i32, i32* %148, align 4, !tbaa !21
  %150 = icmp slt i32 %64, %149
  %151 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %146, i64 0, i32 0, i32 2
  %152 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %146, i64 0, i32 0, i32 3
  %153 = select i1 %150, %"struct.std::_Rb_tree_node_base"** %151, %"struct.std::_Rb_tree_node_base"** %152
  %154 = bitcast %"struct.std::_Rb_tree_node_base"** %153 to %"struct.std::_Rb_tree_node"**
  %155 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %154, align 8, !tbaa !16
  %156 = icmp eq %"struct.std::_Rb_tree_node"* %155, null
  br i1 %156, label %157, label %145, !llvm.loop !38

157:                                              ; preds = %145
  %158 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %146, i64 0, i32 0
  br label %159

159:                                              ; preds = %157, %140
  %160 = phi %"struct.std::_Rb_tree_node_base"* [ %158, %157 ], [ %6, %140 ]
  %161 = phi i1 [ %150, %157 ], [ true, %140 ]
  %162 = phi %"struct.std::_Rb_tree_node"* [ %155, %157 ], [ %143, %140 ]
  br i1 %161, label %163, label %172

163:                                              ; preds = %159
  %164 = getelementptr inbounds i8, i8* %4, i64 24
  %165 = bitcast i8* %164 to %"struct.std::_Rb_tree_node_base"**
  %166 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %165, align 8, !tbaa !35
  %167 = icmp eq %"struct.std::_Rb_tree_node_base"* %160, %166
  br i1 %167, label %168, label %170

168:                                              ; preds = %163
  %169 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %162, i64 0, i32 0
  br label %180

170:                                              ; preds = %163
  %171 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %160) #15
  br label %172

172:                                              ; preds = %170, %159
  %173 = phi %"struct.std::_Rb_tree_node_base"* [ %171, %170 ], [ %160, %159 ]
  %174 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %173, i64 1, i32 0
  %175 = load i32, i32* %174, align 4, !tbaa !21
  %176 = icmp slt i32 %175, %64
  %177 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %162, i64 0, i32 0
  %178 = select i1 %176, %"struct.std::_Rb_tree_node_base"* %177, %"struct.std::_Rb_tree_node_base"* %173
  %179 = select i1 %176, %"struct.std::_Rb_tree_node_base"* %160, %"struct.std::_Rb_tree_node_base"* null
  br label %180

180:                                              ; preds = %172, %168, %113, %109, %54, %50, %121, %123, %133, %67, %77, %13
  %181 = phi %"struct.std::_Rb_tree_node_base"* [ null, %13 ], [ %70, %67 ], [ %82, %77 ], [ null, %123 ], [ %138, %133 ], [ %1, %121 ], [ %51, %50 ], [ %60, %54 ], [ %110, %109 ], [ %119, %113 ], [ %169, %168 ], [ %178, %172 ]
  %182 = phi %"struct.std::_Rb_tree_node_base"* [ %16, %13 ], [ %70, %67 ], [ %83, %77 ], [ %126, %123 ], [ %139, %133 ], [ null, %121 ], [ %42, %50 ], [ %61, %54 ], [ %104, %109 ], [ %120, %113 ], [ %160, %168 ], [ %179, %172 ]
  %183 = insertvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } undef, %"struct.std::_Rb_tree_node_base"* %181, 0
  %184 = insertvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %183, %"struct.std::_Rb_tree_node_base"* %182, 1
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %184
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) local_unnamed_addr #8

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) local_unnamed_addr #8

; Function Attrs: nounwind
declare dso_local void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32)) local_unnamed_addr #9

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %1, %"struct.std::pair"* nonnull align 8 dereferenceable(40) %2) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %1, i64 0, i32 1
  %6 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %5 to i32*
  %7 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 0
  %8 = load i32, i32* %7, align 8, !tbaa !3
  store i32 %8, i32* %6, align 8, !tbaa !3
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %1, i64 0, i32 1, i32 0, i64 8
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %1, i64 0, i32 1, i32 0, i64 24
  %11 = bitcast i8* %9 to i8**
  store i8* %10, i8** %11, align 8, !tbaa !12
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 1, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8, !tbaa !15
  %14 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 1, i32 1
  %15 = load i64, i64* %14, align 8, !tbaa !13
  %16 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  store i64 %15, i64* %4, align 8, !tbaa !32
  %17 = icmp ugt i64 %15, 15
  br i1 %17, label %18, label %26

18:                                               ; preds = %3
  %19 = bitcast i8* %9 to %"class.std::__cxx11::basic_string"*
  %20 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %19, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %21 unwind label %38

21:                                               ; preds = %18
  %22 = bitcast i8* %9 to i8**
  store i8* %20, i8** %22, align 8, !tbaa !15
  %23 = load i64, i64* %4, align 8, !tbaa !32
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %1, i64 0, i32 1, i32 0, i64 24
  %25 = bitcast i8* %24 to i64*
  store i64 %23, i64* %25, align 8, !tbaa !14
  br label %26

26:                                               ; preds = %21, %3
  %27 = bitcast i8* %9 to i8**
  %28 = load i8*, i8** %27, align 8, !tbaa !15
  switch i64 %15, label %31 [
    i64 1, label %29
    i64 0, label %32
  ]

29:                                               ; preds = %26
  %30 = load i8, i8* %13, align 1, !tbaa !14
  store i8 %30, i8* %28, align 1, !tbaa !14
  br label %32

31:                                               ; preds = %26
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %13, i64 %15, i1 false) #13
  br label %32

32:                                               ; preds = %26, %29, %31
  %33 = load i64, i64* %4, align 8, !tbaa !32
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %1, i64 0, i32 1, i32 0, i64 16
  %35 = bitcast i8* %34 to i64*
  store i64 %33, i64* %35, align 8, !tbaa !13
  %36 = load i8*, i8** %27, align 8, !tbaa !15
  %37 = getelementptr inbounds i8, i8* %36, i64 %33
  store i8 0, i8* %37, align 1, !tbaa !14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  ret void

38:                                               ; preds = %18
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  %41 = call i8* @__cxa_begin_catch(i8* %40) #13
  %42 = bitcast %"struct.std::_Rb_tree_node"* %1 to i8*
  call void @_ZdlPv(i8* %42) #13
  invoke void @__cxa_rethrow() #17
          to label %49 unwind label %43

43:                                               ; preds = %38
  %44 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %45 unwind label %46

45:                                               ; preds = %43
  resume { i8*, i32 } %44

46:                                               ; preds = %43
  %47 = landingpad { i8*, i32 }
          catch i8* null
  %48 = extractvalue { i8*, i32 } %47, 0
  call void @__clang_call_terminate(i8* %48) #14
  unreachable

49:                                               ; preds = %38
  unreachable
}

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #10

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i32* %0, i32* %1, i64 %2) local_unnamed_addr #0 comdat {
  %4 = ptrtoint i32* %0 to i64
  %5 = getelementptr inbounds i32, i32* %0, i64 1
  %6 = ptrtoint i32* %1 to i64
  %7 = sub i64 %6, %4
  %8 = icmp sgt i64 %7, 64
  br i1 %8, label %9, label %182

9:                                                ; preds = %3, %178
  %10 = phi i64 [ %180, %178 ], [ %7, %3 ]
  %11 = phi i64 [ %134, %178 ], [ %2, %3 ]
  %12 = phi i32* [ %166, %178 ], [ %1, %3 ]
  %13 = ashr exact i64 %10, 2
  %14 = icmp eq i64 %11, 0
  br i1 %14, label %15, label %133

15:                                               ; preds = %9
  %16 = ptrtoint i32* %0 to i64
  %17 = icmp slt i64 %10, 8
  br i1 %17, label %74, label %18

18:                                               ; preds = %15
  %19 = add nsw i64 %13, -2
  %20 = sdiv i64 %19, 2
  %21 = add nsw i64 %13, -1
  %22 = sdiv i64 %21, 2
  %23 = and i64 %10, 4
  %24 = icmp eq i64 %23, 0
  br label %25

25:                                               ; preds = %68, %18
  %26 = phi i64 [ %20, %18 ], [ %73, %68 ]
  %27 = getelementptr inbounds i32, i32* %0, i64 %26
  %28 = load i32, i32* %27, align 4, !tbaa !21
  %29 = icmp sgt i64 %22, %26
  br i1 %29, label %30, label %45

30:                                               ; preds = %25, %30
  %31 = phi i64 [ %40, %30 ], [ %26, %25 ]
  %32 = shl i64 %31, 1
  %33 = add i64 %32, 2
  %34 = getelementptr inbounds i32, i32* %0, i64 %33
  %35 = or i64 %32, 1
  %36 = getelementptr inbounds i32, i32* %0, i64 %35
  %37 = load i32, i32* %34, align 4, !tbaa !21
  %38 = load i32, i32* %36, align 4, !tbaa !21
  %39 = icmp slt i32 %37, %38
  %40 = select i1 %39, i64 %35, i64 %33
  %41 = getelementptr inbounds i32, i32* %0, i64 %40
  %42 = load i32, i32* %41, align 4, !tbaa !21
  %43 = getelementptr inbounds i32, i32* %0, i64 %31
  store i32 %42, i32* %43, align 4, !tbaa !21
  %44 = icmp slt i64 %40, %22
  br i1 %44, label %30, label %45, !llvm.loop !45

45:                                               ; preds = %30, %25
  %46 = phi i64 [ %26, %25 ], [ %40, %30 ]
  %47 = icmp eq i64 %46, %20
  %48 = select i1 %24, i1 %47, i1 false
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = shl i64 %46, 1
  %51 = or i64 %50, 1
  %52 = getelementptr inbounds i32, i32* %0, i64 %51
  %53 = load i32, i32* %52, align 4, !tbaa !21
  %54 = getelementptr inbounds i32, i32* %0, i64 %46
  store i32 %53, i32* %54, align 4, !tbaa !21
  br label %55

55:                                               ; preds = %49, %45
  %56 = phi i64 [ %51, %49 ], [ %46, %45 ]
  %57 = icmp sgt i64 %56, %26
  br i1 %57, label %58, label %68

58:                                               ; preds = %55, %65
  %59 = phi i64 [ %61, %65 ], [ %56, %55 ]
  %60 = add nsw i64 %59, -1
  %61 = sdiv i64 %60, 2
  %62 = getelementptr inbounds i32, i32* %0, i64 %61
  %63 = load i32, i32* %62, align 4, !tbaa !21
  %64 = icmp slt i32 %63, %28
  br i1 %64, label %65, label %68

65:                                               ; preds = %58
  %66 = getelementptr inbounds i32, i32* %0, i64 %59
  store i32 %63, i32* %66, align 4, !tbaa !21
  %67 = icmp sgt i64 %61, %26
  br i1 %67, label %58, label %68, !llvm.loop !46

68:                                               ; preds = %65, %58, %55
  %69 = phi i64 [ %56, %55 ], [ %59, %58 ], [ %61, %65 ]
  %70 = getelementptr inbounds i32, i32* %0, i64 %69
  store i32 %28, i32* %70, align 4, !tbaa !21
  %71 = icmp eq i64 %26, 0
  %72 = add nsw i64 %26, -1
  %73 = select i1 %71, i64 0, i64 %72
  br i1 %71, label %74, label %25, !llvm.loop !47

74:                                               ; preds = %68, %15
  %75 = icmp sgt i64 %10, 4
  br i1 %75, label %76, label %182

76:                                               ; preds = %74, %129
  %77 = phi i32* [ %78, %129 ], [ %12, %74 ]
  %78 = getelementptr inbounds i32, i32* %77, i64 -1
  %79 = load i32, i32* %78, align 4, !tbaa !21
  %80 = load i32, i32* %0, align 4, !tbaa !21
  store i32 %80, i32* %78, align 4, !tbaa !21
  %81 = ptrtoint i32* %78 to i64
  %82 = sub i64 %81, %16
  %83 = ashr exact i64 %82, 2
  %84 = add nsw i64 %83, -1
  %85 = sdiv i64 %84, 2
  %86 = icmp sgt i64 %82, 8
  br i1 %86, label %87, label %102

87:                                               ; preds = %76, %87
  %88 = phi i64 [ %97, %87 ], [ 0, %76 ]
  %89 = shl i64 %88, 1
  %90 = add i64 %89, 2
  %91 = getelementptr inbounds i32, i32* %0, i64 %90
  %92 = or i64 %89, 1
  %93 = getelementptr inbounds i32, i32* %0, i64 %92
  %94 = load i32, i32* %91, align 4, !tbaa !21
  %95 = load i32, i32* %93, align 4, !tbaa !21
  %96 = icmp slt i32 %94, %95
  %97 = select i1 %96, i64 %92, i64 %90
  %98 = getelementptr inbounds i32, i32* %0, i64 %97
  %99 = load i32, i32* %98, align 4, !tbaa !21
  %100 = getelementptr inbounds i32, i32* %0, i64 %88
  store i32 %99, i32* %100, align 4, !tbaa !21
  %101 = icmp slt i64 %97, %85
  br i1 %101, label %87, label %102, !llvm.loop !45

102:                                              ; preds = %87, %76
  %103 = phi i64 [ 0, %76 ], [ %97, %87 ]
  %104 = and i64 %82, 4
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %116

106:                                              ; preds = %102
  %107 = add nsw i64 %83, -2
  %108 = sdiv i64 %107, 2
  %109 = icmp eq i64 %103, %108
  br i1 %109, label %110, label %116

110:                                              ; preds = %106
  %111 = shl i64 %103, 1
  %112 = or i64 %111, 1
  %113 = getelementptr inbounds i32, i32* %0, i64 %112
  %114 = load i32, i32* %113, align 4, !tbaa !21
  %115 = getelementptr inbounds i32, i32* %0, i64 %103
  store i32 %114, i32* %115, align 4, !tbaa !21
  br label %116

116:                                              ; preds = %110, %106, %102
  %117 = phi i64 [ %112, %110 ], [ %103, %106 ], [ %103, %102 ]
  %118 = icmp sgt i64 %117, 0
  br i1 %118, label %119, label %129

119:                                              ; preds = %116, %126
  %120 = phi i64 [ %122, %126 ], [ %117, %116 ]
  %121 = add nsw i64 %120, -1
  %122 = sdiv i64 %121, 2
  %123 = getelementptr inbounds i32, i32* %0, i64 %122
  %124 = load i32, i32* %123, align 4, !tbaa !21
  %125 = icmp slt i32 %124, %79
  br i1 %125, label %126, label %129

126:                                              ; preds = %119
  %127 = getelementptr inbounds i32, i32* %0, i64 %120
  store i32 %124, i32* %127, align 4, !tbaa !21
  %128 = icmp sgt i64 %120, 2
  br i1 %128, label %119, label %129, !llvm.loop !46

129:                                              ; preds = %126, %119, %116
  %130 = phi i64 [ %117, %116 ], [ %120, %119 ], [ %122, %126 ]
  %131 = getelementptr inbounds i32, i32* %0, i64 %130
  store i32 %79, i32* %131, align 4, !tbaa !21
  %132 = icmp sgt i64 %82, 4
  br i1 %132, label %76, label %182, !llvm.loop !48

133:                                              ; preds = %9
  %134 = add nsw i64 %11, -1
  %135 = sdiv i64 %13, 2
  %136 = getelementptr inbounds i32, i32* %0, i64 %135
  %137 = getelementptr inbounds i32, i32* %12, i64 -1
  %138 = load i32, i32* %5, align 4, !tbaa !21
  %139 = load i32, i32* %136, align 4, !tbaa !21
  %140 = icmp slt i32 %138, %139
  %141 = load i32, i32* %137, align 4, !tbaa !21
  br i1 %140, label %142, label %151

142:                                              ; preds = %133
  %143 = icmp slt i32 %139, %141
  br i1 %143, label %144, label %146

144:                                              ; preds = %142
  %145 = load i32, i32* %0, align 4, !tbaa !21
  store i32 %139, i32* %0, align 4, !tbaa !21
  store i32 %145, i32* %136, align 4, !tbaa !21
  br label %160

146:                                              ; preds = %142
  %147 = icmp slt i32 %138, %141
  %148 = load i32, i32* %0, align 4, !tbaa !21
  br i1 %147, label %149, label %150

149:                                              ; preds = %146
  store i32 %141, i32* %0, align 4, !tbaa !21
  store i32 %148, i32* %137, align 4, !tbaa !21
  br label %160

150:                                              ; preds = %146
  store i32 %138, i32* %0, align 4, !tbaa !21
  store i32 %148, i32* %5, align 4, !tbaa !21
  br label %160

151:                                              ; preds = %133
  %152 = icmp slt i32 %138, %141
  br i1 %152, label %153, label %155

153:                                              ; preds = %151
  %154 = load i32, i32* %0, align 4, !tbaa !21
  store i32 %138, i32* %0, align 4, !tbaa !21
  store i32 %154, i32* %5, align 4, !tbaa !21
  br label %160

155:                                              ; preds = %151
  %156 = icmp slt i32 %139, %141
  %157 = load i32, i32* %0, align 4, !tbaa !21
  br i1 %156, label %158, label %159

158:                                              ; preds = %155
  store i32 %141, i32* %0, align 4, !tbaa !21
  store i32 %157, i32* %137, align 4, !tbaa !21
  br label %160

159:                                              ; preds = %155
  store i32 %139, i32* %0, align 4, !tbaa !21
  store i32 %157, i32* %136, align 4, !tbaa !21
  br label %160

160:                                              ; preds = %159, %158, %153, %150, %149, %144
  br label %161

161:                                              ; preds = %160, %177
  %162 = phi i32* [ %169, %177 ], [ %5, %160 ]
  %163 = phi i32* [ %172, %177 ], [ %12, %160 ]
  %164 = load i32, i32* %0, align 4, !tbaa !21
  br label %165

165:                                              ; preds = %165, %161
  %166 = phi i32* [ %162, %161 ], [ %169, %165 ]
  %167 = load i32, i32* %166, align 4, !tbaa !21
  %168 = icmp slt i32 %167, %164
  %169 = getelementptr inbounds i32, i32* %166, i64 1
  br i1 %168, label %165, label %170, !llvm.loop !49

170:                                              ; preds = %165, %170
  %171 = phi i32* [ %172, %170 ], [ %163, %165 ]
  %172 = getelementptr inbounds i32, i32* %171, i64 -1
  %173 = load i32, i32* %172, align 4, !tbaa !21
  %174 = icmp slt i32 %164, %173
  br i1 %174, label %170, label %175, !llvm.loop !50

175:                                              ; preds = %170
  %176 = icmp ult i32* %166, %172
  br i1 %176, label %177, label %178

177:                                              ; preds = %175
  store i32 %173, i32* %166, align 4, !tbaa !21
  store i32 %167, i32* %172, align 4, !tbaa !21
  br label %161, !llvm.loop !51

178:                                              ; preds = %175
  call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i32* nonnull %166, i32* %12, i64 %134)
  %179 = ptrtoint i32* %166 to i64
  %180 = sub i64 %179, %4
  %181 = icmp sgt i64 %180, 64
  br i1 %181, label %9, label %182, !llvm.loop !52

182:                                              ; preds = %178, %129, %3, %74
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* %0, i32* %1) local_unnamed_addr #0 comdat {
  %3 = ptrtoint i32* %1 to i64
  %4 = ptrtoint i32* %0 to i64
  %5 = sub i64 %3, %4
  %6 = icmp sgt i64 %5, 64
  br i1 %6, label %7, label %54

7:                                                ; preds = %2
  %8 = bitcast i32* %0 to i8*
  %9 = getelementptr i32, i32* %0, i64 1
  %10 = bitcast i32* %9 to i8*
  br label %11

11:                                               ; preds = %7, %30
  %12 = phi i64 [ %32, %30 ], [ 1, %7 ]
  %13 = phi i32* [ %14, %30 ], [ %0, %7 ]
  %14 = getelementptr inbounds i32, i32* %0, i64 %12
  %15 = load i32, i32* %14, align 4, !tbaa !21
  %16 = load i32, i32* %0, align 4, !tbaa !21
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %11
  %19 = shl nsw i64 %12, 2
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %10, i8* nonnull align 4 %8, i64 %19, i1 false) #13
  br label %30

20:                                               ; preds = %11
  %21 = load i32, i32* %13, align 4, !tbaa !21
  %22 = icmp slt i32 %15, %21
  br i1 %22, label %23, label %30

23:                                               ; preds = %20, %23
  %24 = phi i32 [ %28, %23 ], [ %21, %20 ]
  %25 = phi i32* [ %27, %23 ], [ %13, %20 ]
  %26 = phi i32* [ %25, %23 ], [ %14, %20 ]
  store i32 %24, i32* %26, align 4, !tbaa !21
  %27 = getelementptr inbounds i32, i32* %25, i64 -1
  %28 = load i32, i32* %27, align 4, !tbaa !21
  %29 = icmp slt i32 %15, %28
  br i1 %29, label %23, label %30, !llvm.loop !53

30:                                               ; preds = %23, %20, %18
  %31 = phi i32* [ %0, %18 ], [ %14, %20 ], [ %25, %23 ]
  store i32 %15, i32* %31, align 4, !tbaa !21
  %32 = add nuw nsw i64 %12, 1
  %33 = icmp eq i64 %32, 16
  br i1 %33, label %34, label %11, !llvm.loop !54

34:                                               ; preds = %30
  %35 = getelementptr inbounds i32, i32* %0, i64 16
  %36 = icmp eq i32* %35, %1
  br i1 %36, label %89, label %37

37:                                               ; preds = %34, %50
  %38 = phi i32* [ %52, %50 ], [ %35, %34 ]
  %39 = load i32, i32* %38, align 4, !tbaa !21
  %40 = getelementptr inbounds i32, i32* %38, i64 -1
  %41 = load i32, i32* %40, align 4, !tbaa !21
  %42 = icmp slt i32 %39, %41
  br i1 %42, label %43, label %50

43:                                               ; preds = %37, %43
  %44 = phi i32 [ %48, %43 ], [ %41, %37 ]
  %45 = phi i32* [ %47, %43 ], [ %40, %37 ]
  %46 = phi i32* [ %45, %43 ], [ %38, %37 ]
  store i32 %44, i32* %46, align 4, !tbaa !21
  %47 = getelementptr inbounds i32, i32* %45, i64 -1
  %48 = load i32, i32* %47, align 4, !tbaa !21
  %49 = icmp slt i32 %39, %48
  br i1 %49, label %43, label %50, !llvm.loop !53

50:                                               ; preds = %43, %37
  %51 = phi i32* [ %38, %37 ], [ %45, %43 ]
  store i32 %39, i32* %51, align 4, !tbaa !21
  %52 = getelementptr inbounds i32, i32* %38, i64 1
  %53 = icmp eq i32* %52, %1
  br i1 %53, label %89, label %37, !llvm.loop !55

54:                                               ; preds = %2
  %55 = icmp eq i32* %0, %1
  br i1 %55, label %89, label %56

56:                                               ; preds = %54
  %57 = bitcast i32* %0 to i8*
  %58 = getelementptr inbounds i32, i32* %0, i64 1
  %59 = icmp eq i32* %58, %1
  br i1 %59, label %89, label %60

60:                                               ; preds = %56, %85
  %61 = phi i32* [ %87, %85 ], [ %58, %56 ]
  %62 = phi i32* [ %61, %85 ], [ %0, %56 ]
  %63 = load i32, i32* %61, align 4, !tbaa !21
  %64 = load i32, i32* %0, align 4, !tbaa !21
  %65 = icmp slt i32 %63, %64
  br i1 %65, label %66, label %75

66:                                               ; preds = %60
  %67 = ptrtoint i32* %61 to i64
  %68 = sub i64 %67, %4
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %85, label %70

70:                                               ; preds = %66
  %71 = ashr exact i64 %68, 2
  %72 = sub nsw i64 2, %71
  %73 = getelementptr inbounds i32, i32* %62, i64 %72
  %74 = bitcast i32* %73 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %74, i8* nonnull align 4 %57, i64 %68, i1 false) #13
  br label %85

75:                                               ; preds = %60
  %76 = load i32, i32* %62, align 4, !tbaa !21
  %77 = icmp slt i32 %63, %76
  br i1 %77, label %78, label %85

78:                                               ; preds = %75, %78
  %79 = phi i32 [ %83, %78 ], [ %76, %75 ]
  %80 = phi i32* [ %82, %78 ], [ %62, %75 ]
  %81 = phi i32* [ %80, %78 ], [ %61, %75 ]
  store i32 %79, i32* %81, align 4, !tbaa !21
  %82 = getelementptr inbounds i32, i32* %80, i64 -1
  %83 = load i32, i32* %82, align 4, !tbaa !21
  %84 = icmp slt i32 %63, %83
  br i1 %84, label %78, label %85, !llvm.loop !53

85:                                               ; preds = %78, %75, %66, %70
  %86 = phi i32* [ %0, %70 ], [ %0, %66 ], [ %61, %75 ], [ %80, %78 ]
  store i32 %63, i32* %86, align 4, !tbaa !21
  %87 = getelementptr inbounds i32, i32* %61, i64 1
  %88 = icmp eq i32* %87, %1
  br i1 %88, label %89, label %60, !llvm.loop !54

89:                                               ; preds = %85, %50, %56, %54, %34
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #12

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::piecewise_construct_t"* nonnull align 1 dereferenceable(1) %2, %"class.std::tuple"* nonnull align 8 dereferenceable(8) %3, %"class.std::tuple.17"* nonnull align 1 dereferenceable(1) %4) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = call noalias nonnull i8* @_Znwm(i64 72) #16
  %7 = getelementptr inbounds i8, i8* %6, i64 32
  %8 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8, !tbaa !56
  %10 = bitcast i8* %7 to i32*
  %11 = load i32, i32* %9, align 4, !tbaa !21
  store i32 %11, i32* %10, align 8, !tbaa !3
  %12 = getelementptr inbounds i8, i8* %6, i64 40
  %13 = getelementptr inbounds i8, i8* %6, i64 56
  %14 = bitcast i8* %12 to i8**
  store i8* %13, i8** %14, align 8, !tbaa !12
  %15 = getelementptr inbounds i8, i8* %6, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 0, i64* %16, align 8, !tbaa !13
  store i8 0, i8* %13, align 8, !tbaa !14
  %17 = getelementptr inbounds i8, i8* %6, i64 32
  %18 = bitcast i8* %17 to i32*
  %19 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node_base"* %1, i32* nonnull align 4 dereferenceable(4) %18)
          to label %20 unwind label %46

20:                                               ; preds = %5
  %21 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %19, 0
  %22 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %19, 1
  %23 = icmp eq %"struct.std::_Rb_tree_node_base"* %22, null
  br i1 %23, label %51, label %24

24:                                               ; preds = %20
  %25 = icmp eq %"struct.std::_Rb_tree_node_base"* %21, null
  br i1 %25, label %26, label %36

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds i8, i8* %27, i64 8
  %29 = bitcast i8* %28 to %"struct.std::_Rb_tree_node_base"*
  %30 = icmp eq %"struct.std::_Rb_tree_node_base"* %22, %29
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %22, i64 1, i32 0
  %33 = load i32, i32* %18, align 4, !tbaa !21
  %34 = load i32, i32* %32, align 4, !tbaa !21
  %35 = icmp slt i32 %33, %34
  br label %36

36:                                               ; preds = %24, %26, %31
  %37 = phi i1 [ true, %26 ], [ true, %24 ], [ %35, %31 ]
  %38 = bitcast i8* %6 to %"struct.std::_Rb_tree_node_base"*
  %39 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds i8, i8* %39, i64 8
  %41 = bitcast i8* %40 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %37, %"struct.std::_Rb_tree_node_base"* nonnull %38, %"struct.std::_Rb_tree_node_base"* nonnull %22, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32) %41) #13
  %42 = getelementptr inbounds i8, i8* %39, i64 40
  %43 = bitcast i8* %42 to i64*
  %44 = load i64, i64* %43, align 8, !tbaa !37
  %45 = add i64 %44, 1
  store i64 %45, i64* %43, align 8, !tbaa !37
  br label %59

46:                                               ; preds = %5
  %47 = landingpad { i8*, i32 }
          catch i8* null
  %48 = bitcast i8* %6 to %"struct.std::_Rb_tree_node"*
  %49 = extractvalue { i8*, i32 } %47, 0
  %50 = call i8* @__cxa_begin_catch(i8* %49) #13
  call void @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* nonnull %48) #13
  invoke void @__cxa_rethrow() #17
          to label %67 unwind label %61

51:                                               ; preds = %20
  %52 = getelementptr inbounds i8, i8* %6, i64 40
  %53 = bitcast i8* %52 to i8**
  %54 = load i8*, i8** %53, align 8, !tbaa !15
  %55 = getelementptr inbounds i8, i8* %6, i64 56
  %56 = icmp eq i8* %54, %55
  br i1 %56, label %58, label %57

57:                                               ; preds = %51
  call void @_ZdlPv(i8* %54) #13
  br label %58

58:                                               ; preds = %51, %57
  call void @_ZdlPv(i8* nonnull %6) #13
  br label %59

59:                                               ; preds = %58, %36
  %60 = phi %"struct.std::_Rb_tree_node_base"* [ %21, %58 ], [ %38, %36 ]
  ret %"struct.std::_Rb_tree_node_base"* %60

61:                                               ; preds = %46
  %62 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %63 unwind label %64

63:                                               ; preds = %61
  resume { i8*, i32 } %62

64:                                               ; preds = %61
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  call void @__clang_call_terminate(i8* %66) #14
  unreachable

67:                                               ; preds = %46
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8, !tbaa !29
  %7 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8, !tbaa !40
  %9 = ptrtoint %"class.std::__cxx11::basic_string"* %6 to i64
  %10 = ptrtoint %"class.std::__cxx11::basic_string"* %8 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 5
  %13 = icmp eq i64 %11, 9223372036854775776
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0)) #17
  unreachable

15:                                               ; preds = %3
  %16 = icmp eq i64 %11, 0
  %17 = select i1 %16, i64 1, i64 %12
  %18 = add nsw i64 %17, %12
  %19 = icmp ult i64 %18, %12
  %20 = icmp ugt i64 %18, 288230376151711743
  %21 = or i1 %19, %20
  %22 = select i1 %21, i64 288230376151711743, i64 %18
  %23 = ptrtoint %"class.std::__cxx11::basic_string"* %1 to i64
  %24 = sub i64 %23, %10
  %25 = ashr exact i64 %24, 5
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %15
  %28 = icmp ugt i64 %22, 288230376151711743
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  call void @_ZSt17__throw_bad_allocv() #17
  unreachable

30:                                               ; preds = %27
  %31 = shl i64 %22, 5
  %32 = call noalias nonnull i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.std::__cxx11::basic_string"*
  br label %34

34:                                               ; preds = %15, %30
  %35 = phi %"class.std::__cxx11::basic_string"* [ %33, %30 ], [ null, %15 ]
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25, i32 2
  %38 = bitcast %"class.std::__cxx11::basic_string"* %36 to %union.anon**
  store %union.anon* %37, %union.anon** %38, align 8, !tbaa !12
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8, !tbaa !15
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  %42 = load i64, i64* %41, align 8, !tbaa !13
  %43 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #13
  store i64 %42, i64* %4, align 8, !tbaa !32
  %44 = icmp ugt i64 %42, 15
  br i1 %44, label %45, label %51

45:                                               ; preds = %34
  %46 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %36, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %47 unwind label %125

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %36, i64 0, i32 0, i32 0
  store i8* %46, i8** %48, align 8, !tbaa !15
  %49 = load i64, i64* %4, align 8, !tbaa !32
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25, i32 2, i32 0
  store i64 %49, i64* %50, align 8, !tbaa !14
  br label %51

51:                                               ; preds = %47, %34
  %52 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %36, i64 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8, !tbaa !15
  switch i64 %42, label %56 [
    i64 1, label %54
    i64 0, label %57
  ]

54:                                               ; preds = %51
  %55 = load i8, i8* %40, align 1, !tbaa !14
  store i8 %55, i8* %53, align 1, !tbaa !14
  br label %57

56:                                               ; preds = %51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %40, i64 %42, i1 false) #13
  br label %57

57:                                               ; preds = %51, %54, %56
  %58 = load i64, i64* %4, align 8, !tbaa !32
  %59 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %25, i32 1
  store i64 %58, i64* %59, align 8, !tbaa !13
  %60 = load i8*, i8** %52, align 8, !tbaa !15
  %61 = getelementptr inbounds i8, i8* %60, i64 %58
  store i8 0, i8* %61, align 1, !tbaa !14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #13
  %62 = icmp eq %"class.std::__cxx11::basic_string"* %8, %1
  br i1 %62, label %88, label %63

63:                                               ; preds = %57, %80
  %64 = phi %"class.std::__cxx11::basic_string"* [ %86, %80 ], [ %35, %57 ]
  %65 = phi %"class.std::__cxx11::basic_string"* [ %85, %80 ], [ %8, %57 ]
  %66 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 2
  %67 = bitcast %"class.std::__cxx11::basic_string"* %64 to %union.anon**
  store %union.anon* %66, %union.anon** %67, align 8, !tbaa !12
  %68 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8, !tbaa !15
  %70 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 2
  %71 = bitcast %union.anon* %70 to i8*
  %72 = icmp eq i8* %69, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %63
  %74 = bitcast %union.anon* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %74, i8* noundef nonnull align 8 dereferenceable(16) %71, i64 16, i1 false) #13
  br label %80

75:                                               ; preds = %63
  %76 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 0, i32 0
  store i8* %69, i8** %76, align 8, !tbaa !15
  %77 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 2, i32 0
  %78 = load i64, i64* %77, align 8, !tbaa !14
  %79 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 2, i32 0
  store i64 %78, i64* %79, align 8, !tbaa !14
  br label %80

80:                                               ; preds = %75, %73
  %81 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 0, i32 1
  %82 = load i64, i64* %81, align 8, !tbaa !13
  %83 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 1
  store i64 %82, i64* %83, align 8, !tbaa !13
  %84 = bitcast %"class.std::__cxx11::basic_string"* %65 to %union.anon**
  store %union.anon* %70, %union.anon** %84, align 8, !tbaa !15
  store i64 0, i64* %81, align 8, !tbaa !13
  store i8 0, i8* %71, align 8, !tbaa !14
  %85 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %65, i64 1
  %86 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 1
  %87 = icmp eq %"class.std::__cxx11::basic_string"* %85, %1
  br i1 %87, label %88, label %63, !llvm.loop !58

88:                                               ; preds = %80, %57
  %89 = phi %"class.std::__cxx11::basic_string"* [ %35, %57 ], [ %86, %80 ]
  %90 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %89, i64 1
  %91 = icmp eq %"class.std::__cxx11::basic_string"* %6, %1
  br i1 %91, label %117, label %92

92:                                               ; preds = %88, %109
  %93 = phi %"class.std::__cxx11::basic_string"* [ %115, %109 ], [ %90, %88 ]
  %94 = phi %"class.std::__cxx11::basic_string"* [ %114, %109 ], [ %1, %88 ]
  %95 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 2
  %96 = bitcast %"class.std::__cxx11::basic_string"* %93 to %union.anon**
  store %union.anon* %95, %union.anon** %96, align 8, !tbaa !12
  %97 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8, !tbaa !15
  %99 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 2
  %100 = bitcast %union.anon* %99 to i8*
  %101 = icmp eq i8* %98, %100
  br i1 %101, label %102, label %104

102:                                              ; preds = %92
  %103 = bitcast %union.anon* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %103, i8* noundef nonnull align 8 dereferenceable(16) %100, i64 16, i1 false) #13
  br label %109

104:                                              ; preds = %92
  %105 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 0, i32 0
  store i8* %98, i8** %105, align 8, !tbaa !15
  %106 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 2, i32 0
  %107 = load i64, i64* %106, align 8, !tbaa !14
  %108 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 2, i32 0
  store i64 %107, i64* %108, align 8, !tbaa !14
  br label %109

109:                                              ; preds = %104, %102
  %110 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 0, i32 1
  %111 = load i64, i64* %110, align 8, !tbaa !13
  %112 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 1
  store i64 %111, i64* %112, align 8, !tbaa !13
  %113 = bitcast %"class.std::__cxx11::basic_string"* %94 to %union.anon**
  store %union.anon* %99, %union.anon** %113, align 8, !tbaa !15
  store i64 0, i64* %110, align 8, !tbaa !13
  store i8 0, i8* %100, align 8, !tbaa !14
  %114 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %94, i64 1
  %115 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 1
  %116 = icmp eq %"class.std::__cxx11::basic_string"* %114, %6
  br i1 %116, label %117, label %92, !llvm.loop !58

117:                                              ; preds = %109, %88
  %118 = phi %"class.std::__cxx11::basic_string"* [ %90, %88 ], [ %115, %109 ]
  %119 = icmp eq %"class.std::__cxx11::basic_string"* %8, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %117
  %121 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  call void @_ZdlPv(i8* nonnull %121) #13
  br label %122

122:                                              ; preds = %117, %120
  %123 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* %35, %"class.std::__cxx11::basic_string"** %7, align 8, !tbaa !40
  store %"class.std::__cxx11::basic_string"* %118, %"class.std::__cxx11::basic_string"** %5, align 8, !tbaa !29
  %124 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %22
  store %"class.std::__cxx11::basic_string"* %124, %"class.std::__cxx11::basic_string"** %123, align 8, !tbaa !31
  ret void

125:                                              ; preds = %45
  %126 = landingpad { i8*, i32 }
          catch i8* null
  %127 = extractvalue { i8*, i32 } %126, 0
  %128 = call i8* @__cxa_begin_catch(i8* %127) #13
  %129 = icmp eq %"class.std::__cxx11::basic_string"* %35, null
  br i1 %129, label %130, label %139

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %36, i64 0, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8, !tbaa !15
  %133 = bitcast %union.anon* %37 to i8*
  %134 = icmp eq i8* %132, %133
  br i1 %134, label %138, label %135

135:                                              ; preds = %130
  call void @_ZdlPv(i8* %132) #13
  br label %138

136:                                              ; preds = %141
  %137 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %142 unwind label %143

138:                                              ; preds = %135, %130
  br i1 %129, label %141, label %139

139:                                              ; preds = %125, %138
  %140 = bitcast %"class.std::__cxx11::basic_string"* %35 to i8*
  call void @_ZdlPv(i8* nonnull %140) #13
  br label %141

141:                                              ; preds = %139, %138
  invoke void @__cxa_rethrow() #17
          to label %146 unwind label %136

142:                                              ; preds = %136
  resume { i8*, i32 } %137

143:                                              ; preds = %136
  %144 = landingpad { i8*, i32 }
          catch i8* null
  %145 = extractvalue { i8*, i32 } %144, 0
  call void @__clang_call_terminate(i8* %145) #14
  unreachable

146:                                              ; preds = %141
  unreachable
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #10

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #3 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { noinline noreturn nounwind }
attributes #6 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #7 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { nounwind readonly willreturn }
attributes #16 = { allocsize(0) }
attributes #17 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE", !5, i64 0, !8, i64 8}
!5 = !{!"int", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !9, i64 0, !11, i64 8, !6, i64 16}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !10, i64 0}
!10 = !{!"any pointer", !6, i64 0}
!11 = !{!"long", !6, i64 0}
!12 = !{!9, !10, i64 0}
!13 = !{!8, !11, i64 8}
!14 = !{!6, !6, i64 0}
!15 = !{!8, !10, i64 0}
!16 = !{!10, !10, i64 0}
!17 = !{i64 0, i64 65}
!18 = !{!19, !10, i64 8}
!19 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !10, i64 0, !10, i64 8, !10, i64 16}
!20 = !{!19, !10, i64 0}
!21 = !{!5, !5, i64 0}
!22 = !{!23, !10, i64 8}
!23 = !{!"_ZTSSt15_Rb_tree_header", !24, i64 0, !11, i64 32}
!24 = !{!"_ZTSSt18_Rb_tree_node_base", !25, i64 0, !10, i64 8, !10, i64 16, !10, i64 24}
!25 = !{!"_ZTSSt14_Rb_tree_color", !6, i64 0}
!26 = distinct !{!26, !27, !28}
!27 = !{!"llvm.loop.mustprogress"}
!28 = !{!"llvm.loop.unroll.disable"}
!29 = !{!30, !10, i64 8}
!30 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !10, i64 0, !10, i64 8, !10, i64 16}
!31 = !{!30, !10, i64 16}
!32 = !{!11, !11, i64 0}
!33 = distinct !{!33, !27, !28}
!34 = !{!23, !25, i64 0}
!35 = !{!23, !10, i64 16}
!36 = !{!23, !10, i64 24}
!37 = !{!23, !11, i64 32}
!38 = distinct !{!38, !27, !28}
!39 = distinct !{!39, !27, !28}
!40 = !{!30, !10, i64 0}
!41 = distinct !{!41, !27, !28}
!42 = !{!24, !10, i64 24}
!43 = !{!24, !10, i64 16}
!44 = distinct !{!44, !27, !28}
!45 = distinct !{!45, !27, !28}
!46 = distinct !{!46, !27, !28}
!47 = distinct !{!47, !27, !28}
!48 = distinct !{!48, !27, !28}
!49 = distinct !{!49, !27, !28}
!50 = distinct !{!50, !27, !28}
!51 = distinct !{!51, !27, !28}
!52 = distinct !{!52, !27, !28}
!53 = distinct !{!53, !27, !28}
!54 = distinct !{!54, !27, !28}
!55 = distinct !{!55, !27, !28}
!56 = !{!57, !10, i64 0}
!57 = !{!"_ZTSSt10_Head_baseILm0ERKiLb0EE", !10, i64 0}
!58 = distinct !{!58, !27, !28}
