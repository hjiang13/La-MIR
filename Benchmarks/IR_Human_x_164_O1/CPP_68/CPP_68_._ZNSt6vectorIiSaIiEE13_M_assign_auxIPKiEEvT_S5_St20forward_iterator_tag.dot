digraph "CFG for '_ZNSt6vectorIiSaIiEE13_M_assign_auxIPKiEEvT_S5_St20forward_iterator_tag' function" {
	label="CFG for '_ZNSt6vectorIiSaIiEE13_M_assign_auxIPKiEEvT_S5_St20forward_iterator_tag' function";

	Node0x55d6d664b800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = ptrtoint i32* %2 to i64\l  %5 = ptrtoint i32* %1 to i64\l  %6 = sub i64 %4, %5\l  %7 = ashr exact i64 %6, 2\l  %8 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %9 = load i32*, i32** %8, align 8, !tbaa !3\l  %10 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %11 = load i32*, i32** %10, align 8, !tbaa !8\l  %12 = ptrtoint i32* %9 to i64\l  %13 = ptrtoint i32* %11 to i64\l  %14 = sub i64 %12, %13\l  %15 = ashr exact i64 %14, 2\l  %16 = icmp ugt i64 %7, %15\l  br i1 %16, label %17, label %35\l|{<s0>T|<s1>F}}"];
	Node0x55d6d664b800:s0 -> Node0x55d6d664b850;
	Node0x55d6d664b800:s1 -> Node0x55d6d664c290;
	Node0x55d6d664b850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%17:\l17:                                               \l  %18 = icmp ugt i64 %7, 2305843009213693951\l  br i1 %18, label %19, label %20\l|{<s0>T|<s1>F}}"];
	Node0x55d6d664b850:s0 -> Node0x55d6d664c3d0;
	Node0x55d6d664b850:s1 -> Node0x55d6d664c420;
	Node0x55d6d664c3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%19:\l19:                                               \l  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x\l... i8], [49 x i8]* @.str, i64 0, i64 0)) #7\l  unreachable\l}"];
	Node0x55d6d664c420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%20:\l20:                                               \l  %21 = call noalias nonnull i8* @_Znwm(i64 %6) #8\l  %22 = bitcast i8* %21 to i32*\l  %23 = icmp eq i64 %6, 0\l  br i1 %23, label %26, label %24\l|{<s0>T|<s1>F}}"];
	Node0x55d6d664c420:s0 -> Node0x55d6d664cb60;
	Node0x55d6d664c420:s1 -> Node0x55d6d664cbb0;
	Node0x55d6d664cbb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%24:\l24:                                               \l  %25 = bitcast i32* %1 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4\l... %25, i64 %6, i1 false) #9\l  br label %26\l}"];
	Node0x55d6d664cbb0 -> Node0x55d6d664cb60;
	Node0x55d6d664cb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%26:\l26:                                               \l  %27 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %28 = load i32*, i32** %10, align 8, !tbaa !8\l  %29 = icmp eq i32* %28, null\l  br i1 %29, label %32, label %30\l|{<s0>T|<s1>F}}"];
	Node0x55d6d664cb60:s0 -> Node0x55d6d664d310;
	Node0x55d6d664cb60:s1 -> Node0x55d6d664d360;
	Node0x55d6d664d360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%30:\l30:                                               \l  %31 = bitcast i32* %28 to i8*\l  call void @_ZdlPv(i8* nonnull %31) #9\l  br label %32\l}"];
	Node0x55d6d664d360 -> Node0x55d6d664d310;
	Node0x55d6d664d310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%32:\l32:                                               \l  %33 = bitcast %\"class.std::vector\"* %0 to i8**\l  store i8* %21, i8** %33, align 8, !tbaa !8\l  %34 = getelementptr inbounds i32, i32* %22, i64 %7\l  store i32* %34, i32** %27, align 8, !tbaa !9\l  store i32* %34, i32** %8, align 8, !tbaa !3\l  br label %69\l}"];
	Node0x55d6d664d310 -> Node0x55d6d664df40;
	Node0x55d6d664c290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%35:\l35:                                               \l  %36 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %37 = load i32*, i32** %36, align 8, !tbaa !9\l  %38 = ptrtoint i32* %37 to i64\l  %39 = sub i64 %38, %13\l  %40 = ashr exact i64 %39, 2\l  %41 = icmp ult i64 %40, %7\l  br i1 %41, label %52, label %42\l|{<s0>T|<s1>F}}"];
	Node0x55d6d664c290:s0 -> Node0x55d6d664e3b0;
	Node0x55d6d664c290:s1 -> Node0x55d6d664e400;
	Node0x55d6d664e400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%42:\l42:                                               \l  %43 = icmp eq i64 %6, 0\l  br i1 %43, label %47, label %44\l|{<s0>T|<s1>F}}"];
	Node0x55d6d664e400:s0 -> Node0x55d6d664e590;
	Node0x55d6d664e400:s1 -> Node0x55d6d664e5e0;
	Node0x55d6d664e5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%44:\l44:                                               \l  %45 = bitcast i32* %11 to i8*\l  %46 = bitcast i32* %1 to i8*\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %46, i64\l... %6, i1 false) #9\l  br label %47\l}"];
	Node0x55d6d664e5e0 -> Node0x55d6d664e590;
	Node0x55d6d664e590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%47:\l47:                                               \l  %48 = getelementptr inbounds i32, i32* %11, i64 %7\l  %49 = load i32*, i32** %36, align 8, !tbaa !9\l  %50 = icmp eq i32* %49, %48\l  br i1 %50, label %69, label %51\l|{<s0>T|<s1>F}}"];
	Node0x55d6d664e590:s0 -> Node0x55d6d664df40;
	Node0x55d6d664e590:s1 -> Node0x55d6d664ecf0;
	Node0x55d6d664ecf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%51:\l51:                                               \l  store i32* %48, i32** %36, align 8, !tbaa !9\l  br label %69\l}"];
	Node0x55d6d664ecf0 -> Node0x55d6d664df40;
	Node0x55d6d664e3b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%52:\l52:                                               \l  %53 = getelementptr inbounds i32, i32* %1, i64 %40\l  %54 = ptrtoint i32* %53 to i64\l  %55 = icmp eq i64 %39, 0\l  br i1 %55, label %59, label %56\l|{<s0>T|<s1>F}}"];
	Node0x55d6d664e3b0:s0 -> Node0x55d6d664f090;
	Node0x55d6d664e3b0:s1 -> Node0x55d6d664f0e0;
	Node0x55d6d664f0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%56:\l56:                                               \l  %57 = bitcast i32* %11 to i8*\l  %58 = bitcast i32* %1 to i8*\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %58, i64\l... %39, i1 false) #9\l  br label %59\l}"];
	Node0x55d6d664f0e0 -> Node0x55d6d664f090;
	Node0x55d6d664f090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%59:\l59:                                               \l  %60 = load i32*, i32** %36, align 8, !tbaa !9\l  %61 = sub i64 %4, %54\l  %62 = icmp eq i64 %61, 0\l  br i1 %62, label %66, label %63\l|{<s0>T|<s1>F}}"];
	Node0x55d6d664f090:s0 -> Node0x55d6d664f660;
	Node0x55d6d664f090:s1 -> Node0x55d6d664f6b0;
	Node0x55d6d664f6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%63:\l63:                                               \l  %64 = bitcast i32* %60 to i8*\l  %65 = bitcast i32* %53 to i8*\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %65, i64\l... %61, i1 false) #9\l  br label %66\l}"];
	Node0x55d6d664f6b0 -> Node0x55d6d664f660;
	Node0x55d6d664f660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%66:\l66:                                               \l  %67 = ashr exact i64 %61, 2\l  %68 = getelementptr inbounds i32, i32* %60, i64 %67\l  store i32* %68, i32** %36, align 8, !tbaa !9\l  br label %69\l}"];
	Node0x55d6d664f660 -> Node0x55d6d664df40;
	Node0x55d6d664df40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  ret void\l}"];
}
