digraph "CFG for '_Z5pluckSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z5pluckSt6vectorIiSaIiEE' function";

	Node0x55d6d6645520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%2:\l  %3 = alloca [2 x i32], align 4\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %6 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %7 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %8 = bitcast [2 x i32]* %3 to i8*\l  %9 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 0\l  %10 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 1\l  %11 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 2\l  %12 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %12, i8 0, i64 24, i1 false)\l  %13 = load i32*, i32** %4, align 8, !tbaa !3\l  %14 = load i32*, i32** %5, align 8, !tbaa !8\l  %15 = icmp eq i32* %13, %14\l  br i1 %15, label %52, label %16\l|{<s0>T|<s1>F}}"];
	Node0x55d6d6645520:s0 -> Node0x55d6d6647610;
	Node0x55d6d6645520:s1 -> Node0x55d6d66476a0;
	Node0x55d6d66476a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l16:                                               \l  %17 = phi i64 [ %44, %43 ], [ 0, %2 ]\l  %18 = phi i32* [ %46, %43 ], [ %14, %2 ]\l  %19 = getelementptr inbounds i32, i32* %18, i64 %17\l  %20 = load i32, i32* %19, align 4, !tbaa !9\l  %21 = and i32 %20, 1\l  %22 = icmp eq i32 %21, 0\l  br i1 %22, label %23, label %43\l|{<s0>T|<s1>F}}"];
	Node0x55d6d66476a0:s0 -> Node0x55d6d6647d00;
	Node0x55d6d66476a0:s1 -> Node0x55d6d66477e0;
	Node0x55d6d6647d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%23:\l23:                                               \l  %24 = load i32*, i32** %6, align 8, !tbaa !3\l  %25 = load i32*, i32** %7, align 8, !tbaa !8\l  %26 = icmp eq i32* %24, %25\l  br i1 %26, label %30, label %27\l|{<s0>T|<s1>F}}"];
	Node0x55d6d6647d00:s0 -> Node0x55d6d6648bd0;
	Node0x55d6d6647d00:s1 -> Node0x55d6d6648c20;
	Node0x55d6d6648c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%27:\l27:                                               \l  %28 = load i32, i32* %25, align 4, !tbaa !9\l  %29 = icmp slt i32 %20, %28\l  br i1 %29, label %30, label %43\l|{<s0>T|<s1>F}}"];
	Node0x55d6d6648c20:s0 -> Node0x55d6d6648bd0;
	Node0x55d6d6648c20:s1 -> Node0x55d6d66477e0;
	Node0x55d6d6648bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%30:\l30:                                               \l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7\l  %31 = load i32, i32* %19, align 4, !tbaa !9\l  store i32 %31, i32* %9, align 4, !tbaa !9\l  %32 = trunc i64 %17 to i32\l  store i32 %32, i32* %10, align 4, !tbaa !9\l  invoke void\l... @_ZNSt6vectorIiSaIiEE13_M_assign_auxIPKiEEvT_S5_St20forward_iterator_tag(%\"cla\l...ss.std::vector\"* nonnull align 8 dereferenceable(24) %0, i32* nonnull %9, i32*\l... nonnull %11)\l          to label %33 unwind label %34\l}"];
	Node0x55d6d6648bd0 -> Node0x55d6d6649cf0;
	Node0x55d6d6648bd0 -> Node0x55d6d6649d40;
	Node0x55d6d6649cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%33:\l33:                                               \l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7\l  br label %43\l}"];
	Node0x55d6d6649cf0 -> Node0x55d6d66477e0;
	Node0x55d6d6649d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%34:\l34:                                               \l  %35 = landingpad \{ i8*, i32 \}\l          cleanup\l  %36 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %37 = bitcast [2 x i32]* %3 to i8*\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #7\l  %38 = load i32*, i32** %36, align 8, !tbaa !8\l  %39 = icmp eq i32* %38, null\l  br i1 %39, label %42, label %40\l|{<s0>T|<s1>F}}"];
	Node0x55d6d6649d40:s0 -> Node0x55d6d664a9b0;
	Node0x55d6d6649d40:s1 -> Node0x55d6d664aa00;
	Node0x55d6d664aa00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%40:\l40:                                               \l  %41 = bitcast i32* %38 to i8*\l  call void @_ZdlPv(i8* nonnull %41) #7\l  br label %42\l}"];
	Node0x55d6d664aa00 -> Node0x55d6d664a9b0;
	Node0x55d6d664a9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%42:\l42:                                               \l  resume \{ i8*, i32 \} %35\l}"];
	Node0x55d6d66477e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = add nuw i64 %17, 1\l  %45 = load i32*, i32** %4, align 8, !tbaa !3\l  %46 = load i32*, i32** %5, align 8, !tbaa !8\l  %47 = ptrtoint i32* %45 to i64\l  %48 = ptrtoint i32* %46 to i64\l  %49 = sub i64 %47, %48\l  %50 = ashr exact i64 %49, 2\l  %51 = icmp ugt i64 %50, %44\l  br i1 %51, label %16, label %52, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x55d6d66477e0:s0 -> Node0x55d6d66476a0;
	Node0x55d6d66477e0:s1 -> Node0x55d6d6647610;
	Node0x55d6d6647610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%52:\l52:                                               \l  ret void\l}"];
}
