digraph "CFG for '_Z11count_upperNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function" {
	label="CFG for '_Z11count_upperNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function";

	Node0x55c81607fa60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%1:\l  %2 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %3 = bitcast %\"class.std::__cxx11::basic_string\"* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #4\l  %4 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 2\l  %5 = bitcast %\"class.std::__cxx11::basic_string\"* %2 to %union.anon**\l  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !3\l  %6 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 0, i32 0\l  %7 = bitcast %union.anon* %4 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(5) %7, i8* noundef nonnull align 1 dereferenceable(5)\l... getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5, i1\l... false) #4\l  %8 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 1\l  store i64 5, i64* %8, align 8, !tbaa !8\l  %9 = bitcast %union.anon* %4 to i8*\l  %10 = getelementptr inbounds i8, i8* %9, i64 5\l  store i8 0, i8* %10, align 1, !tbaa !11\l  %11 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  %12 = load i64, i64* %11, align 8, !tbaa !8\l  %13 = load i8*, i8** %6, align 8\l  %14 = load i64, i64* %8, align 8\l  %15 = getelementptr inbounds i8, i8* %13, i64 %14\l  %16 = ptrtoint i8* %15 to i64\l  %17 = icmp sgt i64 %14, 3\l  %18 = ashr i64 %14, 2\l  %19 = icmp eq i64 %12, 0\l  br i1 %19, label %25, label %20\l|{<s0>T|<s1>F}}"];
	Node0x55c81607fa60:s0 -> Node0x55c816080fc0;
	Node0x55c81607fa60:s1 -> Node0x55c8160831c0;
	Node0x55c8160831c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%20:\l20:                                               \l  %21 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %22 = load i8*, i8** %21, align 8, !tbaa !12\l  %23 = add i64 %12, -1\l  %24 = lshr i64 %23, 1\l  br label %32\l}"];
	Node0x55c8160831c0 -> Node0x55c8160835d0;
	Node0x55c816080fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%25:\l25:                                               \l  %26 = phi i32 [ 0, %1 ], [ %93, %89 ]\l  %27 = load i8*, i8** %6, align 8, !tbaa !12\l  %28 = bitcast %union.anon* %4 to i8*\l  %29 = icmp eq i8* %27, %28\l  br i1 %29, label %31, label %30\l|{<s0>T|<s1>F}}"];
	Node0x55c816080fc0:s0 -> Node0x55c816083fc0;
	Node0x55c816080fc0:s1 -> Node0x55c816084050;
	Node0x55c816084050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%30:\l30:                                               \l  call void @_ZdlPv(i8* %27) #4\l  br label %31\l}"];
	Node0x55c816084050 -> Node0x55c816083fc0;
	Node0x55c816083fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%31:\l31:                                               \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #4\l  ret i32 %26\l}"];
	Node0x55c8160835d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%32:\l32:                                               \l  %33 = phi i64 [ 0, %20 ], [ %94, %89 ]\l  %34 = phi i64 [ 0, %20 ], [ %95, %89 ]\l  %35 = phi i32 [ 0, %20 ], [ %93, %89 ]\l  %36 = getelementptr inbounds i8, i8* %22, i64 %34\l  br i1 %17, label %37, label %60\l|{<s0>T|<s1>F}}"];
	Node0x55c8160835d0:s0 -> Node0x55c816084c50;
	Node0x55c8160835d0:s1 -> Node0x55c816084ca0;
	Node0x55c816084c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%37:\l37:                                               \l  %38 = load i8, i8* %36, align 1, !tbaa !11\l  br label %39\l}"];
	Node0x55c816084c50 -> Node0x55c816085460;
	Node0x55c816085460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi i64 [ %18, %37 ], [ %58, %56 ]\l  %41 = phi i8* [ %13, %37 ], [ %57, %56 ]\l  %42 = load i8, i8* %41, align 1, !tbaa !11\l  %43 = icmp eq i8 %42, %38\l  br i1 %43, label %89, label %44\l|{<s0>T|<s1>F}}"];
	Node0x55c816085460:s0 -> Node0x55c816083700;
	Node0x55c816085460:s1 -> Node0x55c8160858b0;
	Node0x55c8160858b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = getelementptr inbounds i8, i8* %41, i64 1\l  %46 = load i8, i8* %45, align 1, !tbaa !11\l  %47 = icmp eq i8 %46, %38\l  br i1 %47, label %87, label %48\l|{<s0>T|<s1>F}}"];
	Node0x55c8160858b0:s0 -> Node0x55c816085b90;
	Node0x55c8160858b0:s1 -> Node0x55c816085be0;
	Node0x55c816085be0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%48:\l48:                                               \l  %49 = getelementptr inbounds i8, i8* %41, i64 2\l  %50 = load i8, i8* %49, align 1, !tbaa !11\l  %51 = icmp eq i8 %50, %38\l  br i1 %51, label %85, label %52\l|{<s0>T|<s1>F}}"];
	Node0x55c816085be0:s0 -> Node0x55c816085ec0;
	Node0x55c816085be0:s1 -> Node0x55c816085f10;
	Node0x55c816085f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%52:\l52:                                               \l  %53 = getelementptr inbounds i8, i8* %41, i64 3\l  %54 = load i8, i8* %53, align 1, !tbaa !11\l  %55 = icmp eq i8 %54, %38\l  br i1 %55, label %83, label %56\l|{<s0>T|<s1>F}}"];
	Node0x55c816085f10:s0 -> Node0x55c8160861f0;
	Node0x55c816085f10:s1 -> Node0x55c816085550;
	Node0x55c816085550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%56:\l56:                                               \l  %57 = getelementptr inbounds i8, i8* %41, i64 4\l  %58 = add nsw i64 %40, -1\l  %59 = icmp sgt i64 %40, 1\l  br i1 %59, label %39, label %60, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x55c816085550:s0 -> Node0x55c816085460;
	Node0x55c816085550:s1 -> Node0x55c816084ca0;
	Node0x55c816084ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%60:\l60:                                               \l  %61 = phi i8* [ %13, %32 ], [ %57, %56 ]\l  %62 = ptrtoint i8* %61 to i64\l  %63 = sub i64 %16, %62\l  switch i64 %63, label %82 [\l    i64 3, label %64\l    i64 2, label %70\l    i64 1, label %77\l  ]\l|{<s0>def|<s1>3|<s2>2|<s3>1}}"];
	Node0x55c816084ca0:s0 -> Node0x55c8160867c0;
	Node0x55c816084ca0:s1 -> Node0x55c816086810;
	Node0x55c816084ca0:s2 -> Node0x55c816086860;
	Node0x55c816084ca0:s3 -> Node0x55c8160868f0;
	Node0x55c816086810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%64:\l64:                                               \l  %65 = load i8, i8* %61, align 1, !tbaa !11\l  %66 = load i8, i8* %36, align 1, !tbaa !11\l  %67 = icmp eq i8 %65, %66\l  br i1 %67, label %89, label %68\l|{<s0>T|<s1>F}}"];
	Node0x55c816086810:s0 -> Node0x55c816083700;
	Node0x55c816086810:s1 -> Node0x55c816086f50;
	Node0x55c816086f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%68:\l68:                                               \l  %69 = getelementptr inbounds i8, i8* %61, i64 1\l  br label %70\l}"];
	Node0x55c816086f50 -> Node0x55c816086860;
	Node0x55c816086860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%70:\l70:                                               \l  %71 = phi i8* [ %61, %60 ], [ %69, %68 ]\l  %72 = load i8, i8* %71, align 1, !tbaa !11\l  %73 = load i8, i8* %36, align 1, !tbaa !11\l  %74 = icmp eq i8 %72, %73\l  br i1 %74, label %89, label %75\l|{<s0>T|<s1>F}}"];
	Node0x55c816086860:s0 -> Node0x55c816083700;
	Node0x55c816086860:s1 -> Node0x55c816087380;
	Node0x55c816087380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%75:\l75:                                               \l  %76 = getelementptr inbounds i8, i8* %71, i64 1\l  br label %77\l}"];
	Node0x55c816087380 -> Node0x55c8160868f0;
	Node0x55c8160868f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%77:\l77:                                               \l  %78 = phi i8* [ %61, %60 ], [ %76, %75 ]\l  %79 = load i8, i8* %78, align 1, !tbaa !11\l  %80 = load i8, i8* %36, align 1, !tbaa !11\l  %81 = icmp eq i8 %79, %80\l  br i1 %81, label %89, label %82\l|{<s0>T|<s1>F}}"];
	Node0x55c8160868f0:s0 -> Node0x55c816083700;
	Node0x55c8160868f0:s1 -> Node0x55c8160867c0;
	Node0x55c8160867c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%82:\l82:                                               \l  br label %89\l}"];
	Node0x55c8160867c0 -> Node0x55c816083700;
	Node0x55c8160861f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%83:\l83:                                               \l  %84 = getelementptr inbounds i8, i8* %41, i64 3\l  br label %89\l}"];
	Node0x55c8160861f0 -> Node0x55c816083700;
	Node0x55c816085ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%85:\l85:                                               \l  %86 = getelementptr inbounds i8, i8* %41, i64 2\l  br label %89\l}"];
	Node0x55c816085ec0 -> Node0x55c816083700;
	Node0x55c816085b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%87:\l87:                                               \l  %88 = getelementptr inbounds i8, i8* %41, i64 1\l  br label %89\l}"];
	Node0x55c816085b90 -> Node0x55c816083700;
	Node0x55c816083700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%89:\l89:                                               \l  %90 = phi i8* [ %15, %82 ], [ %61, %64 ], [ %71, %70 ], [ %78, %77 ], [ %84,\l... %83 ], [ %86, %85 ], [ %88, %87 ], [ %41, %39 ]\l  %91 = icmp ne i8* %90, %15\l  %92 = zext i1 %91 to i32\l  %93 = add nuw nsw i32 %35, %92\l  %94 = add nuw nsw i64 %33, 1\l  %95 = shl nuw nsw i64 %94, 1\l  %96 = icmp eq i64 %33, %24\l  br i1 %96, label %25, label %32, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x55c816083700:s0 -> Node0x55c816080fc0;
	Node0x55c816083700:s1 -> Node0x55c8160835d0;
}
