; ModuleID = '../../Human_xBenchmarks_164/CPP_98/CPP_98.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_98/CPP_98.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@.str = private unnamed_addr constant [6 x i8] c"AEIOU\00", align 1

; Function Attrs: uwtable
define dso_local i32 @_Z11count_upperNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nocapture readonly %0) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = bitcast %"class.std::__cxx11::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #4
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 2
  %5 = bitcast %"class.std::__cxx11::basic_string"* %2 to %union.anon**
  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !3
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %7 = bitcast %union.anon* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(5) %7, i8* noundef nonnull align 1 dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5, i1 false) #4
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  store i64 5, i64* %8, align 8, !tbaa !8
  %9 = bitcast %union.anon* %4 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 5
  store i8 0, i8* %10, align 1, !tbaa !11
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8, !tbaa !8
  %13 = load i8*, i8** %6, align 8
  %14 = load i64, i64* %8, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  %16 = ptrtoint i8* %15 to i64
  %17 = icmp sgt i64 %14, 3
  %18 = ashr i64 %14, 2
  %19 = icmp eq i64 %12, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !tbaa !12
  %23 = add i64 %12, -1
  %24 = lshr i64 %23, 1
  br label %32

25:                                               ; preds = %89, %1
  %26 = phi i32 [ 0, %1 ], [ %93, %89 ]
  %27 = load i8*, i8** %6, align 8, !tbaa !12
  %28 = bitcast %union.anon* %4 to i8*
  %29 = icmp eq i8* %27, %28
  br i1 %29, label %31, label %30

30:                                               ; preds = %25
  call void @_ZdlPv(i8* %27) #4
  br label %31

31:                                               ; preds = %25, %30
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #4
  ret i32 %26

32:                                               ; preds = %20, %89
  %33 = phi i64 [ 0, %20 ], [ %94, %89 ]
  %34 = phi i64 [ 0, %20 ], [ %95, %89 ]
  %35 = phi i32 [ 0, %20 ], [ %93, %89 ]
  %36 = getelementptr inbounds i8, i8* %22, i64 %34
  br i1 %17, label %37, label %60

37:                                               ; preds = %32
  %38 = load i8, i8* %36, align 1, !tbaa !11
  br label %39

39:                                               ; preds = %56, %37
  %40 = phi i64 [ %18, %37 ], [ %58, %56 ]
  %41 = phi i8* [ %13, %37 ], [ %57, %56 ]
  %42 = load i8, i8* %41, align 1, !tbaa !11
  %43 = icmp eq i8 %42, %38
  br i1 %43, label %89, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds i8, i8* %41, i64 1
  %46 = load i8, i8* %45, align 1, !tbaa !11
  %47 = icmp eq i8 %46, %38
  br i1 %47, label %87, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds i8, i8* %41, i64 2
  %50 = load i8, i8* %49, align 1, !tbaa !11
  %51 = icmp eq i8 %50, %38
  br i1 %51, label %85, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds i8, i8* %41, i64 3
  %54 = load i8, i8* %53, align 1, !tbaa !11
  %55 = icmp eq i8 %54, %38
  br i1 %55, label %83, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds i8, i8* %41, i64 4
  %58 = add nsw i64 %40, -1
  %59 = icmp sgt i64 %40, 1
  br i1 %59, label %39, label %60, !llvm.loop !13

60:                                               ; preds = %56, %32
  %61 = phi i8* [ %13, %32 ], [ %57, %56 ]
  %62 = ptrtoint i8* %61 to i64
  %63 = sub i64 %16, %62
  switch i64 %63, label %82 [
    i64 3, label %64
    i64 2, label %70
    i64 1, label %77
  ]

64:                                               ; preds = %60
  %65 = load i8, i8* %61, align 1, !tbaa !11
  %66 = load i8, i8* %36, align 1, !tbaa !11
  %67 = icmp eq i8 %65, %66
  br i1 %67, label %89, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds i8, i8* %61, i64 1
  br label %70

70:                                               ; preds = %68, %60
  %71 = phi i8* [ %61, %60 ], [ %69, %68 ]
  %72 = load i8, i8* %71, align 1, !tbaa !11
  %73 = load i8, i8* %36, align 1, !tbaa !11
  %74 = icmp eq i8 %72, %73
  br i1 %74, label %89, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds i8, i8* %71, i64 1
  br label %77

77:                                               ; preds = %75, %60
  %78 = phi i8* [ %61, %60 ], [ %76, %75 ]
  %79 = load i8, i8* %78, align 1, !tbaa !11
  %80 = load i8, i8* %36, align 1, !tbaa !11
  %81 = icmp eq i8 %79, %80
  br i1 %81, label %89, label %82

82:                                               ; preds = %77, %60
  br label %89

83:                                               ; preds = %52
  %84 = getelementptr inbounds i8, i8* %41, i64 3
  br label %89

85:                                               ; preds = %48
  %86 = getelementptr inbounds i8, i8* %41, i64 2
  br label %89

87:                                               ; preds = %44
  %88 = getelementptr inbounds i8, i8* %41, i64 1
  br label %89

89:                                               ; preds = %39, %83, %85, %87, %82, %77, %70, %64
  %90 = phi i8* [ %15, %82 ], [ %61, %64 ], [ %71, %70 ], [ %78, %77 ], [ %84, %83 ], [ %86, %85 ], [ %88, %87 ], [ %41, %39 ]
  %91 = icmp ne i8* %90, %15
  %92 = zext i1 %91 to i32
  %93 = add nuw nsw i32 %35, %92
  %94 = add nuw nsw i64 %33, 1
  %95 = shl nuw nsw i64 %94, 1
  %96 = icmp eq i64 %33, %24
  br i1 %96, label %25, label %32, !llvm.loop !16
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = distinct !{!13, !14, !15}
!14 = !{!"llvm.loop.mustprogress"}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = distinct !{!16, !14, !15}
