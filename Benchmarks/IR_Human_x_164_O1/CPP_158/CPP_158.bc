; ModuleID = '../../Human_xBenchmarks_164/CPP_158/CPP_158.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_158/CPP_158.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }

; Function Attrs: uwtable
define dso_local void @_Z8find_maxSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::vector"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %6, %union.anon** %7, align 8, !tbaa !3
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %9, align 8, !tbaa !8
  %10 = bitcast %union.anon* %6 to i8*
  store i8 0, i8* %10, align 8, !tbaa !11
  %11 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %15 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %18 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %20 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  %21 = bitcast i64* %3 to i8*
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  %26 = bitcast %union.anon* %19 to i8*
  %27 = bitcast %union.anon* %14 to i8*
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %29 = getelementptr %union.anon, %union.anon* %19, i64 0, i32 0
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %31 = bitcast %union.anon* %14 to i8*
  %32 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %11, align 8, !tbaa !12
  %33 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8, !tbaa !14
  %34 = icmp eq %"class.std::__cxx11::basic_string"* %32, %33
  br i1 %34, label %244, label %35

35:                                               ; preds = %2
  %36 = bitcast %union.anon* %14 to i8*
  br label %37

37:                                               ; preds = %35, %223
  %38 = phi i64 [ %224, %223 ], [ 0, %35 ]
  %39 = phi i32 [ %219, %223 ], [ 0, %35 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #7
  store %union.anon* %14, %union.anon** %15, align 8, !tbaa !3
  store i64 0, i64* %17, align 8, !tbaa !8
  store i8 0, i8* %36, align 8, !tbaa !11
  %40 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8, !tbaa !14
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %40, i64 %38, i32 1
  %42 = load i64, i64* %41, align 8, !tbaa !8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %51

44:                                               ; preds = %181, %37
  %45 = phi %"class.std::__cxx11::basic_string"* [ %40, %37 ], [ %183, %181 ]
  %46 = phi i64 [ %42, %37 ], [ %185, %181 ]
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %45, i64 %38
  %48 = load i64, i64* %17, align 8, !tbaa !8
  %49 = sext i32 %39 to i64
  %50 = icmp ugt i64 %48, %49
  br i1 %50, label %212, label %187

51:                                               ; preds = %37, %181
  %52 = phi i64 [ %182, %181 ], [ 0, %37 ]
  %53 = phi %"class.std::__cxx11::basic_string"* [ %183, %181 ], [ %40, %37 ]
  %54 = load i8*, i8** %16, align 8, !tbaa !15
  %55 = load i64, i64* %17, align 8, !tbaa !8
  %56 = getelementptr inbounds i8, i8* %54, i64 %55
  %57 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %53, i64 %38, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8, !tbaa !15
  %59 = getelementptr inbounds i8, i8* %58, i64 %52
  %60 = ptrtoint i8* %56 to i64
  %61 = icmp sgt i64 %55, 3
  br i1 %61, label %62, label %86

62:                                               ; preds = %51
  %63 = ashr i64 %55, 2
  %64 = load i8, i8* %59, align 1, !tbaa !11
  br label %65

65:                                               ; preds = %82, %62
  %66 = phi i64 [ %63, %62 ], [ %84, %82 ]
  %67 = phi i8* [ %54, %62 ], [ %83, %82 ]
  %68 = load i8, i8* %67, align 1, !tbaa !11
  %69 = icmp eq i8 %68, %64
  br i1 %69, label %115, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds i8, i8* %67, i64 1
  %72 = load i8, i8* %71, align 1, !tbaa !11
  %73 = icmp eq i8 %72, %64
  br i1 %73, label %113, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds i8, i8* %67, i64 2
  %76 = load i8, i8* %75, align 1, !tbaa !11
  %77 = icmp eq i8 %76, %64
  br i1 %77, label %111, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds i8, i8* %67, i64 3
  %80 = load i8, i8* %79, align 1, !tbaa !11
  %81 = icmp eq i8 %80, %64
  br i1 %81, label %109, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds i8, i8* %67, i64 4
  %84 = add nsw i64 %66, -1
  %85 = icmp sgt i64 %66, 1
  br i1 %85, label %65, label %86, !llvm.loop !16

86:                                               ; preds = %82, %51
  %87 = phi i8* [ %54, %51 ], [ %83, %82 ]
  %88 = ptrtoint i8* %87 to i64
  %89 = sub i64 %60, %88
  switch i64 %89, label %108 [
    i64 3, label %90
    i64 2, label %96
    i64 1, label %103
  ]

90:                                               ; preds = %86
  %91 = load i8, i8* %87, align 1, !tbaa !11
  %92 = load i8, i8* %59, align 1, !tbaa !11
  %93 = icmp eq i8 %91, %92
  br i1 %93, label %115, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds i8, i8* %87, i64 1
  br label %96

96:                                               ; preds = %94, %86
  %97 = phi i8* [ %87, %86 ], [ %95, %94 ]
  %98 = load i8, i8* %97, align 1, !tbaa !11
  %99 = load i8, i8* %59, align 1, !tbaa !11
  %100 = icmp eq i8 %98, %99
  br i1 %100, label %115, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds i8, i8* %97, i64 1
  br label %103

103:                                              ; preds = %101, %86
  %104 = phi i8* [ %87, %86 ], [ %102, %101 ]
  %105 = load i8, i8* %104, align 1, !tbaa !11
  %106 = load i8, i8* %59, align 1, !tbaa !11
  %107 = icmp eq i8 %105, %106
  br i1 %107, label %115, label %108

108:                                              ; preds = %103, %86
  br label %115

109:                                              ; preds = %78
  %110 = getelementptr inbounds i8, i8* %67, i64 3
  br label %115

111:                                              ; preds = %74
  %112 = getelementptr inbounds i8, i8* %67, i64 2
  br label %115

113:                                              ; preds = %70
  %114 = getelementptr inbounds i8, i8* %67, i64 1
  br label %115

115:                                              ; preds = %65, %109, %111, %113, %108, %103, %96, %90
  %116 = phi i8* [ %56, %108 ], [ %87, %90 ], [ %97, %96 ], [ %104, %103 ], [ %110, %109 ], [ %112, %111 ], [ %114, %113 ], [ %67, %65 ]
  %117 = icmp eq i8* %116, %56
  br i1 %117, label %118, label %181

118:                                              ; preds = %115
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #7
  %119 = load i8*, i8** %57, align 8, !tbaa !15
  %120 = getelementptr inbounds i8, i8* %119, i64 %52
  %121 = load i8, i8* %120, align 1, !tbaa !11
  call void @llvm.experimental.noalias.scope.decl(metadata !19)
  store %union.anon* %19, %union.anon** %20, align 8, !tbaa !3, !alias.scope !19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7, !noalias !19
  store i64 %55, i64* %3, align 8, !tbaa !22, !noalias !19
  %122 = icmp ugt i64 %55, 15
  br i1 %122, label %123, label %127

123:                                              ; preds = %118
  %124 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %125 unwind label %176

125:                                              ; preds = %123
  store i8* %124, i8** %22, align 8, !tbaa !15, !alias.scope !19
  %126 = load i64, i64* %3, align 8, !tbaa !22, !noalias !19
  store i64 %126, i64* %23, align 8, !tbaa !11, !alias.scope !19
  br label %127

127:                                              ; preds = %125, %118
  %128 = load i8*, i8** %24, align 8, !tbaa !15, !alias.scope !19
  switch i64 %55, label %131 [
    i64 1, label %129
    i64 0, label %132
  ]

129:                                              ; preds = %127
  %130 = load i8, i8* %54, align 1, !tbaa !11
  store i8 %130, i8* %128, align 1, !tbaa !11
  br label %132

131:                                              ; preds = %127
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %128, i8* align 1 %54, i64 %55, i1 false) #7
  br label %132

132:                                              ; preds = %131, %129, %127
  %133 = load i64, i64* %3, align 8, !tbaa !22, !noalias !19
  store i64 %133, i64* %25, align 8, !tbaa !8, !alias.scope !19
  %134 = load i8*, i8** %24, align 8, !tbaa !15, !alias.scope !19
  %135 = getelementptr inbounds i8, i8* %134, i64 %133
  store i8 0, i8* %135, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7, !noalias !19
  %136 = load i64, i64* %25, align 8, !tbaa !8, !alias.scope !19
  %137 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i64 %136, i64 0, i64 1, i8 signext %121)
          to label %144 unwind label %138

138:                                              ; preds = %132
  %139 = landingpad { i8*, i32 }
          cleanup
  %140 = load i8*, i8** %24, align 8, !tbaa !15, !alias.scope !19
  %141 = bitcast %union.anon* %19 to i8*
  %142 = icmp eq i8* %140, %141
  br i1 %142, label %178, label %143

143:                                              ; preds = %138
  call void @_ZdlPv(i8* %140) #7
  br label %178

144:                                              ; preds = %132
  %145 = load i8*, i8** %24, align 8, !tbaa !15
  %146 = icmp eq i8* %145, %26
  br i1 %146, label %147, label %160

147:                                              ; preds = %144
  %148 = load i64, i64* %25, align 8, !tbaa !8
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %156, label %150

150:                                              ; preds = %147
  %151 = load i8*, i8** %16, align 8, !tbaa !15
  %152 = icmp eq i64 %148, 1
  br i1 %152, label %153, label %155

153:                                              ; preds = %150
  %154 = load i8, i8* %145, align 1, !tbaa !11
  store i8 %154, i8* %151, align 1, !tbaa !11
  br label %156

155:                                              ; preds = %150
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %151, i8* align 1 %145, i64 %148, i1 false) #7
  br label %156

156:                                              ; preds = %155, %153, %147
  %157 = load i64, i64* %25, align 8, !tbaa !8
  store i64 %157, i64* %17, align 8, !tbaa !8
  %158 = load i8*, i8** %16, align 8, !tbaa !15
  %159 = getelementptr inbounds i8, i8* %158, i64 %157
  store i8 0, i8* %159, align 1, !tbaa !11
  br label %170

160:                                              ; preds = %144
  %161 = load i8*, i8** %16, align 8, !tbaa !15
  %162 = icmp eq i8* %161, %27
  %163 = load i64, i64* %28, align 8
  store i8* %145, i8** %16, align 8, !tbaa !15
  %164 = load i64, i64* %25, align 8, !tbaa !8
  store i64 %164, i64* %17, align 8, !tbaa !8
  %165 = load i64, i64* %29, align 8, !tbaa !11
  store i64 %165, i64* %28, align 8, !tbaa !11
  %166 = icmp eq i8* %161, null
  %167 = or i1 %162, %166
  br i1 %167, label %169, label %168

168:                                              ; preds = %160
  store i8* %161, i8** %24, align 8, !tbaa !15
  store i64 %163, i64* %30, align 8, !tbaa !11
  br label %170

169:                                              ; preds = %160
  store %union.anon* %19, %union.anon** %20, align 8, !tbaa !15
  br label %170

170:                                              ; preds = %156, %168, %169
  store i64 0, i64* %25, align 8, !tbaa !8
  %171 = load i8*, i8** %24, align 8, !tbaa !15
  store i8 0, i8* %171, align 1, !tbaa !11
  %172 = load i8*, i8** %24, align 8, !tbaa !15
  %173 = icmp eq i8* %172, %26
  br i1 %173, label %175, label %174

174:                                              ; preds = %170
  call void @_ZdlPv(i8* %172) #7
  br label %175

175:                                              ; preds = %170, %174
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #7
  br label %181

176:                                              ; preds = %123
  %177 = landingpad { i8*, i32 }
          cleanup
  br label %178

178:                                              ; preds = %138, %143, %176
  %179 = phi { i8*, i32 } [ %177, %176 ], [ %139, %143 ], [ %139, %138 ]
  %180 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %180) #7
  br label %232

181:                                              ; preds = %115, %175
  %182 = add nuw i64 %52, 1
  %183 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8, !tbaa !14
  %184 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %183, i64 %38, i32 1
  %185 = load i64, i64* %184, align 8, !tbaa !8
  %186 = icmp ugt i64 %185, %182
  br i1 %186, label %51, label %44, !llvm.loop !23

187:                                              ; preds = %44
  %188 = icmp eq i64 %48, %49
  br i1 %188, label %189, label %218

189:                                              ; preds = %187
  %190 = load i64, i64* %9, align 8, !tbaa !8
  %191 = icmp ugt i64 %46, %190
  %192 = select i1 %191, i64 %190, i64 %46
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %199, label %194

194:                                              ; preds = %189
  %195 = load i8*, i8** %8, align 8, !tbaa !15
  %196 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %47, i64 0, i32 0, i32 0
  %197 = load i8*, i8** %196, align 8, !tbaa !15
  %198 = call i32 @memcmp(i8* %197, i8* %195, i64 %192) #7
  br label %199

199:                                              ; preds = %194, %189
  %200 = phi i32 [ %198, %194 ], [ 0, %189 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %209

202:                                              ; preds = %199
  %203 = sub i64 %46, %190
  %204 = icmp sgt i64 %203, -2147483648
  %205 = select i1 %204, i64 %203, i64 -2147483648
  %206 = icmp slt i64 %205, 2147483647
  %207 = select i1 %206, i64 %205, i64 2147483647
  %208 = trunc i64 %207 to i32
  br label %209

209:                                              ; preds = %199, %202
  %210 = phi i32 [ %200, %199 ], [ %208, %202 ]
  %211 = icmp slt i32 %210, 0
  br i1 %211, label %212, label %218

212:                                              ; preds = %209, %44
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %47)
          to label %213 unwind label %216

213:                                              ; preds = %212
  %214 = load i64, i64* %17, align 8, !tbaa !8
  %215 = trunc i64 %214 to i32
  br label %218

216:                                              ; preds = %212
  %217 = landingpad { i8*, i32 }
          cleanup
  br label %232

218:                                              ; preds = %213, %209, %187
  %219 = phi i32 [ %215, %213 ], [ %39, %209 ], [ %39, %187 ]
  %220 = load i8*, i8** %16, align 8, !tbaa !15
  %221 = icmp eq i8* %220, %31
  br i1 %221, label %223, label %222

222:                                              ; preds = %218
  call void @_ZdlPv(i8* %220) #7
  br label %223

223:                                              ; preds = %218, %222
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #7
  %224 = add nuw i64 %38, 1
  %225 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %11, align 8, !tbaa !12
  %226 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8, !tbaa !14
  %227 = ptrtoint %"class.std::__cxx11::basic_string"* %225 to i64
  %228 = ptrtoint %"class.std::__cxx11::basic_string"* %226 to i64
  %229 = sub i64 %227, %228
  %230 = ashr exact i64 %229, 5
  %231 = icmp ugt i64 %230, %224
  br i1 %231, label %37, label %244, !llvm.loop !24

232:                                              ; preds = %178, %216
  %233 = phi { i8*, i32 } [ %217, %216 ], [ %179, %178 ]
  %234 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  %235 = load i8*, i8** %16, align 8, !tbaa !15
  %236 = bitcast %union.anon* %14 to i8*
  %237 = icmp eq i8* %235, %236
  br i1 %237, label %239, label %238

238:                                              ; preds = %232
  call void @_ZdlPv(i8* %235) #7
  br label %239

239:                                              ; preds = %238, %232
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %234) #7
  %240 = load i8*, i8** %8, align 8, !tbaa !15
  %241 = bitcast %union.anon* %6 to i8*
  %242 = icmp eq i8* %240, %241
  br i1 %242, label %245, label %243

243:                                              ; preds = %239
  call void @_ZdlPv(i8* %240) #7
  br label %245

244:                                              ; preds = %223, %2
  ret void

245:                                              ; preds = %243, %239
  resume { i8*, i32 } %233
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare dso_local i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #6

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!13, !5, i64 8}
!13 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!14 = !{!13, !5, i64 0}
!15 = !{!9, !5, i64 0}
!16 = distinct !{!16, !17, !18}
!17 = !{!"llvm.loop.mustprogress"}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!21 = distinct !{!21, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!22 = !{!10, !10, i64 0}
!23 = distinct !{!23, !17, !18}
!24 = distinct !{!24, !17, !18}
