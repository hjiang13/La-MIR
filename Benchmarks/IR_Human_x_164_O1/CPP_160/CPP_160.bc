; ModuleID = '../../Human_xBenchmarks_164/CPP_160/CPP_160.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_160/CPP_160.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }

$_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_ = comdat any

@.str = private unnamed_addr constant [3 x i8] c"**\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"//\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1

; Function Attrs: uwtable
define dso_local i32 @_Z10do_algebraSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EES_IiSaIiEE(%"class.std::vector"* nocapture readonly %0, %"class.std::vector.3"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.3", align 8
  %4 = alloca i32, align 4
  %5 = bitcast %"class.std::vector.3"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  %6 = bitcast i32* %4 to i8*
  %7 = bitcast %"class.std::vector.3"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #9
  %8 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %4, align 4, !tbaa !3
  %12 = load i32*, i32** %8, align 8, !tbaa !7
  %13 = load i32*, i32** %9, align 8, !tbaa !10
  %14 = icmp eq i32* %12, %13
  br i1 %14, label %15, label %24

15:                                               ; preds = %32, %2
  %16 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #9
  %17 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %17, align 8, !tbaa !11
  %22 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %18, align 8, !tbaa !13
  %23 = icmp eq %"class.std::__cxx11::basic_string"* %21, %22
  br i1 %23, label %51, label %59

24:                                               ; preds = %2, %32
  %25 = phi i32 [ %34, %32 ], [ 0, %2 ]
  %26 = load i32*, i32** %10, align 8, !tbaa !7
  %27 = load i32*, i32** %11, align 8, !tbaa !14
  %28 = icmp eq i32* %26, %27
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  store i32 %25, i32* %26, align 4, !tbaa !3
  %30 = getelementptr inbounds i32, i32* %26, i64 1
  store i32* %30, i32** %10, align 8, !tbaa !7
  br label %32

31:                                               ; preds = %24
  invoke void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(%"class.std::vector.3"* nonnull align 8 dereferenceable(24) %3, i32* %26, i32* nonnull align 4 dereferenceable(4) %4)
          to label %32 unwind label %43

32:                                               ; preds = %29, %31
  %33 = load i32, i32* %4, align 4, !tbaa !3
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %4, align 4, !tbaa !3
  %35 = sext i32 %34 to i64
  %36 = load i32*, i32** %8, align 8, !tbaa !7
  %37 = load i32*, i32** %9, align 8, !tbaa !10
  %38 = ptrtoint i32* %36 to i64
  %39 = ptrtoint i32* %37 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 2
  %42 = icmp ugt i64 %41, %35
  br i1 %42, label %24, label %15, !llvm.loop !15

43:                                               ; preds = %31
  %44 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #9
  %45 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8, !tbaa !10
  %47 = icmp eq i32* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %43
  %49 = bitcast i32* %46 to i8*
  call void @_ZdlPv(i8* nonnull %49) #9
  br label %50

50:                                               ; preds = %43, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  resume { i8*, i32 } %44

51:                                               ; preds = %115, %15
  %52 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %52, align 8, !tbaa !11
  %57 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %53, align 8, !tbaa !13
  %58 = icmp eq %"class.std::__cxx11::basic_string"* %56, %57
  br i1 %58, label %124, label %130

59:                                               ; preds = %15, %115
  %60 = phi i64 [ %116, %115 ], [ 0, %15 ]
  %61 = phi %"class.std::__cxx11::basic_string"* [ %118, %115 ], [ %22, %15 ]
  %62 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %61, i64 %60
  %63 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %62, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #9
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %115

65:                                               ; preds = %59
  %66 = load i32*, i32** %19, align 8, !tbaa !10
  %67 = getelementptr inbounds i32, i32* %66, i64 %60
  %68 = load i32, i32* %67, align 4, !tbaa !3
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i32, i32* %66, i64 %69
  %71 = load i32, i32* %70, align 4, !tbaa !3
  %72 = icmp eq i32 %71, %68
  br i1 %72, label %73, label %81

73:                                               ; preds = %81, %65
  %74 = add nuw nsw i64 %60, 1
  %75 = getelementptr inbounds i32, i32* %66, i64 %74
  %76 = load i32, i32* %75, align 4, !tbaa !3
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i32, i32* %66, i64 %77
  %79 = load i32, i32* %78, align 4, !tbaa !3
  %80 = icmp eq i32 %79, %76
  br i1 %80, label %93, label %87

81:                                               ; preds = %65, %81
  %82 = phi i32 [ %85, %81 ], [ %71, %65 ]
  store i32 %82, i32* %67, align 4, !tbaa !3
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i32, i32* %66, i64 %83
  %85 = load i32, i32* %84, align 4, !tbaa !3
  %86 = icmp eq i32 %85, %82
  br i1 %86, label %73, label %81, !llvm.loop !18

87:                                               ; preds = %73, %87
  %88 = phi i32 [ %91, %87 ], [ %79, %73 ]
  store i32 %88, i32* %75, align 4, !tbaa !3
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i32, i32* %66, i64 %89
  %91 = load i32, i32* %90, align 4, !tbaa !3
  %92 = icmp eq i32 %91, %88
  br i1 %92, label %93, label %87, !llvm.loop !19

93:                                               ; preds = %87, %73
  %94 = phi i32 [ %76, %73 ], [ %88, %87 ]
  %95 = sext i32 %94 to i64
  %96 = load i32, i32* %67, align 4, !tbaa !3
  %97 = sext i32 %96 to i64
  %98 = load i32*, i32** %16, align 8, !tbaa !10
  %99 = getelementptr inbounds i32, i32* %98, i64 %97
  %100 = load i32, i32* %99, align 4, !tbaa !3
  %101 = getelementptr inbounds i32, i32* %98, i64 %95
  %102 = load i32, i32* %101, align 4, !tbaa !3
  %103 = sitofp i32 %100 to double
  %104 = sitofp i32 %102 to double
  %105 = call double @pow(double %103, double %104) #9
  %106 = fptosi double %105 to i32
  %107 = load i32*, i32** %20, align 8, !tbaa !10
  %108 = getelementptr inbounds i32, i32* %107, i64 %60
  %109 = load i32, i32* %108, align 4, !tbaa !3
  %110 = sext i32 %109 to i64
  %111 = load i32*, i32** %16, align 8, !tbaa !10
  %112 = getelementptr inbounds i32, i32* %111, i64 %110
  store i32 %106, i32* %112, align 4, !tbaa !3
  %113 = load i32, i32* %108, align 4, !tbaa !3
  %114 = getelementptr inbounds i32, i32* %107, i64 %74
  store i32 %113, i32* %114, align 4, !tbaa !3
  br label %115

115:                                              ; preds = %59, %93
  %116 = add nuw i64 %60, 1
  %117 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %17, align 8, !tbaa !11
  %118 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %18, align 8, !tbaa !13
  %119 = ptrtoint %"class.std::__cxx11::basic_string"* %117 to i64
  %120 = ptrtoint %"class.std::__cxx11::basic_string"* %118 to i64
  %121 = sub i64 %119, %120
  %122 = ashr exact i64 %121, 5
  %123 = icmp ugt i64 %122, %116
  br i1 %123, label %59, label %51, !llvm.loop !20

124:                                              ; preds = %196, %51
  %125 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %52, align 8, !tbaa !11
  %128 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %53, align 8, !tbaa !13
  %129 = icmp eq %"class.std::__cxx11::basic_string"* %127, %128
  br i1 %129, label %205, label %214

130:                                              ; preds = %51, %196
  %131 = phi i64 [ %197, %196 ], [ 0, %51 ]
  %132 = phi %"class.std::__cxx11::basic_string"* [ %199, %196 ], [ %57, %51 ]
  %133 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %132, i64 %131
  %134 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %133, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #9
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %141, label %136

136:                                              ; preds = %130
  %137 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %53, align 8, !tbaa !13
  %138 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %137, i64 %131
  %139 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %138, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #9
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %196

141:                                              ; preds = %136, %130
  %142 = load i32*, i32** %54, align 8, !tbaa !10
  %143 = getelementptr inbounds i32, i32* %142, i64 %131
  %144 = load i32, i32* %143, align 4, !tbaa !3
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i32, i32* %142, i64 %145
  %147 = load i32, i32* %146, align 4, !tbaa !3
  %148 = icmp eq i32 %147, %144
  br i1 %148, label %149, label %157

149:                                              ; preds = %157, %141
  %150 = add nuw nsw i64 %131, 1
  %151 = getelementptr inbounds i32, i32* %142, i64 %150
  %152 = load i32, i32* %151, align 4, !tbaa !3
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i32, i32* %142, i64 %153
  %155 = load i32, i32* %154, align 4, !tbaa !3
  %156 = icmp eq i32 %155, %152
  br i1 %156, label %169, label %163

157:                                              ; preds = %141, %157
  %158 = phi i32 [ %161, %157 ], [ %147, %141 ]
  store i32 %158, i32* %143, align 4, !tbaa !3
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds i32, i32* %142, i64 %159
  %161 = load i32, i32* %160, align 4, !tbaa !3
  %162 = icmp eq i32 %161, %158
  br i1 %162, label %149, label %157, !llvm.loop !21

163:                                              ; preds = %149, %163
  %164 = phi i32 [ %167, %163 ], [ %155, %149 ]
  store i32 %164, i32* %151, align 4, !tbaa !3
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds i32, i32* %142, i64 %165
  %167 = load i32, i32* %166, align 4, !tbaa !3
  %168 = icmp eq i32 %167, %164
  br i1 %168, label %169, label %163, !llvm.loop !22

169:                                              ; preds = %163, %149
  %170 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %53, align 8, !tbaa !13
  %171 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %170, i64 %131
  %172 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %171, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #9
  %173 = icmp eq i32 %172, 0
  %174 = load i32*, i32** %55, align 8, !tbaa !10
  %175 = getelementptr inbounds i32, i32* %174, i64 %131
  %176 = load i32, i32* %175, align 4, !tbaa !3
  %177 = sext i32 %176 to i64
  %178 = load i32*, i32** %16, align 8, !tbaa !10
  %179 = getelementptr inbounds i32, i32* %178, i64 %177
  %180 = load i32, i32* %179, align 4, !tbaa !3
  %181 = getelementptr inbounds i32, i32* %174, i64 %150
  %182 = load i32, i32* %181, align 4, !tbaa !3
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i32, i32* %178, i64 %183
  %185 = load i32, i32* %184, align 4, !tbaa !3
  br i1 %173, label %186, label %188

186:                                              ; preds = %169
  %187 = mul nsw i32 %185, %180
  br label %190

188:                                              ; preds = %169
  %189 = sdiv i32 %180, %185
  br label %190

190:                                              ; preds = %188, %186
  %191 = phi i32 [ %189, %188 ], [ %187, %186 ]
  store i32 %191, i32* %179, align 4, !tbaa !3
  %192 = load i32*, i32** %55, align 8, !tbaa !10
  %193 = getelementptr inbounds i32, i32* %192, i64 %131
  %194 = load i32, i32* %193, align 4, !tbaa !3
  %195 = getelementptr inbounds i32, i32* %192, i64 %150
  store i32 %194, i32* %195, align 4, !tbaa !3
  br label %196

196:                                              ; preds = %136, %190
  %197 = add nuw i64 %131, 1
  %198 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %52, align 8, !tbaa !11
  %199 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %53, align 8, !tbaa !13
  %200 = ptrtoint %"class.std::__cxx11::basic_string"* %198 to i64
  %201 = ptrtoint %"class.std::__cxx11::basic_string"* %199 to i64
  %202 = sub i64 %200, %201
  %203 = ashr exact i64 %202, 5
  %204 = icmp ugt i64 %203, %197
  br i1 %204, label %130, label %124, !llvm.loop !23

205:                                              ; preds = %277, %124
  %206 = load i32*, i32** %16, align 8, !tbaa !10
  %207 = load i32, i32* %206, align 4, !tbaa !3
  %208 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %209 = load i32*, i32** %208, align 8, !tbaa !10
  %210 = icmp eq i32* %209, null
  br i1 %210, label %213, label %211

211:                                              ; preds = %205
  %212 = bitcast i32* %209 to i8*
  call void @_ZdlPv(i8* nonnull %212) #9
  br label %213

213:                                              ; preds = %205, %211
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret i32 %207

214:                                              ; preds = %124, %277
  %215 = phi i64 [ %278, %277 ], [ 0, %124 ]
  %216 = phi %"class.std::__cxx11::basic_string"* [ %280, %277 ], [ %128, %124 ]
  %217 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %216, i64 %215
  %218 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %217, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #9
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %225, label %220

220:                                              ; preds = %214
  %221 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %53, align 8, !tbaa !13
  %222 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %221, i64 %215
  %223 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %222, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #9
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %277

225:                                              ; preds = %220, %214
  %226 = load i32*, i32** %125, align 8, !tbaa !10
  %227 = getelementptr inbounds i32, i32* %226, i64 %215
  %228 = load i32, i32* %227, align 4, !tbaa !3
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds i32, i32* %226, i64 %229
  %231 = load i32, i32* %230, align 4, !tbaa !3
  %232 = icmp eq i32 %231, %228
  br i1 %232, label %233, label %241

233:                                              ; preds = %241, %225
  %234 = add nuw nsw i64 %215, 1
  %235 = getelementptr inbounds i32, i32* %226, i64 %234
  %236 = load i32, i32* %235, align 4, !tbaa !3
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds i32, i32* %226, i64 %237
  %239 = load i32, i32* %238, align 4, !tbaa !3
  %240 = icmp eq i32 %239, %236
  br i1 %240, label %253, label %247

241:                                              ; preds = %225, %241
  %242 = phi i32 [ %245, %241 ], [ %231, %225 ]
  store i32 %242, i32* %227, align 4, !tbaa !3
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds i32, i32* %226, i64 %243
  %245 = load i32, i32* %244, align 4, !tbaa !3
  %246 = icmp eq i32 %245, %242
  br i1 %246, label %233, label %241, !llvm.loop !24

247:                                              ; preds = %233, %247
  %248 = phi i32 [ %251, %247 ], [ %239, %233 ]
  store i32 %248, i32* %235, align 4, !tbaa !3
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds i32, i32* %226, i64 %249
  %251 = load i32, i32* %250, align 4, !tbaa !3
  %252 = icmp eq i32 %251, %248
  br i1 %252, label %253, label %247, !llvm.loop !25

253:                                              ; preds = %247, %233
  %254 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %53, align 8, !tbaa !13
  %255 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %254, i64 %215
  %256 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %255, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #9
  %257 = icmp eq i32 %256, 0
  %258 = load i32*, i32** %126, align 8, !tbaa !10
  %259 = getelementptr inbounds i32, i32* %258, i64 %215
  %260 = load i32, i32* %259, align 4, !tbaa !3
  %261 = sext i32 %260 to i64
  %262 = load i32*, i32** %16, align 8, !tbaa !10
  %263 = getelementptr inbounds i32, i32* %262, i64 %261
  %264 = load i32, i32* %263, align 4, !tbaa !3
  %265 = getelementptr inbounds i32, i32* %258, i64 %234
  %266 = load i32, i32* %265, align 4, !tbaa !3
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds i32, i32* %262, i64 %267
  %269 = load i32, i32* %268, align 4, !tbaa !3
  %270 = sub i32 0, %269
  %271 = select i1 %257, i32 %269, i32 %270
  %272 = add i32 %264, %271
  store i32 %272, i32* %263, align 4, !tbaa !3
  %273 = load i32*, i32** %126, align 8, !tbaa !10
  %274 = getelementptr inbounds i32, i32* %273, i64 %215
  %275 = load i32, i32* %274, align 4, !tbaa !3
  %276 = getelementptr inbounds i32, i32* %273, i64 %234
  store i32 %275, i32* %276, align 4, !tbaa !3
  br label %277

277:                                              ; preds = %220, %253
  %278 = add nuw i64 %215, 1
  %279 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %52, align 8, !tbaa !11
  %280 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %53, align 8, !tbaa !13
  %281 = ptrtoint %"class.std::__cxx11::basic_string"* %279 to i64
  %282 = ptrtoint %"class.std::__cxx11::basic_string"* %280 to i64
  %283 = sub i64 %281, %282
  %284 = ashr exact i64 %283, 5
  %285 = icmp ugt i64 %284, %278
  br i1 %285, label %214, label %205, !llvm.loop !26
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: mustprogress nofree nounwind willreturn
declare dso_local double @pow(double, double) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(%"class.std::vector.3"* nonnull align 8 dereferenceable(24) %0, i32* %1, i32* nonnull align 4 dereferenceable(4) %2) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8, !tbaa !7
  %6 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8, !tbaa !10
  %8 = ptrtoint i32* %5 to i64
  %9 = ptrtoint i32* %7 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 2
  %12 = icmp eq i64 %10, 9223372036854775804
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0)) #10
  unreachable

14:                                               ; preds = %3
  %15 = icmp eq i64 %10, 0
  %16 = select i1 %15, i64 1, i64 %11
  %17 = add nsw i64 %16, %11
  %18 = icmp ult i64 %17, %11
  %19 = icmp ugt i64 %17, 2305843009213693951
  %20 = or i1 %18, %19
  %21 = select i1 %20, i64 2305843009213693951, i64 %17
  %22 = ptrtoint i32* %1 to i64
  %23 = sub i64 %22, %9
  %24 = ashr exact i64 %23, 2
  %25 = icmp eq i64 %21, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %14
  %27 = icmp ugt i64 %21, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  call void @_ZSt17__throw_bad_allocv() #10
  unreachable

29:                                               ; preds = %26
  %30 = shl i64 %21, 2
  %31 = call noalias nonnull i8* @_Znwm(i64 %30) #11
  %32 = bitcast i8* %31 to i32*
  br label %33

33:                                               ; preds = %14, %29
  %34 = phi i32* [ %32, %29 ], [ null, %14 ]
  %35 = getelementptr inbounds i32, i32* %34, i64 %24
  %36 = load i32, i32* %2, align 4, !tbaa !3
  store i32 %36, i32* %35, align 4, !tbaa !3
  %37 = icmp sgt i64 %23, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = bitcast i32* %34 to i8*
  %40 = bitcast i32* %7 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 %23, i1 false) #9
  br label %41

41:                                               ; preds = %33, %38
  %42 = getelementptr inbounds i32, i32* %35, i64 1
  %43 = sub i64 %8, %22
  %44 = icmp sgt i64 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = bitcast i32* %42 to i8*
  %47 = bitcast i32* %1 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %46, i8* align 4 %47, i64 %43, i1 false) #9
  br label %48

48:                                               ; preds = %41, %45
  %49 = icmp eq i32* %7, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %48
  %51 = bitcast i32* %7 to i8*
  call void @_ZdlPv(i8* nonnull %51) #9
  br label %52

52:                                               ; preds = %48, %50
  %53 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %54 = ashr exact i64 %43, 2
  %55 = getelementptr inbounds i32, i32* %42, i64 %54
  store i32* %34, i32** %6, align 8, !tbaa !10
  store i32* %55, i32** %4, align 8, !tbaa !7
  %56 = getelementptr inbounds i32, i32* %34, i64 %21
  store i32* %56, i32** %53, align 8, !tbaa !14
  ret void
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #5

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

; Function Attrs: nounwind
declare dso_local i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*) local_unnamed_addr #8

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #3 = { mustprogress nofree nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #8 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nounwind }
attributes #10 = { noreturn }
attributes #11 = { allocsize(0) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"int", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !9, i64 8}
!8 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !9, i64 0, !9, i64 8, !9, i64 16}
!9 = !{!"any pointer", !5, i64 0}
!10 = !{!8, !9, i64 0}
!11 = !{!12, !9, i64 8}
!12 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !9, i64 0, !9, i64 8, !9, i64 16}
!13 = !{!12, !9, i64 0}
!14 = !{!8, !9, i64 16}
!15 = distinct !{!15, !16, !17}
!16 = !{!"llvm.loop.mustprogress"}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !16, !17}
!19 = distinct !{!19, !16, !17}
!20 = distinct !{!20, !16, !17}
!21 = distinct !{!21, !16, !17}
!22 = distinct !{!22, !16, !17}
!23 = distinct !{!23, !16, !17}
!24 = distinct !{!24, !16, !17}
!25 = distinct !{!25, !16, !17}
!26 = distinct !{!26, !16, !17}
