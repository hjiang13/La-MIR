digraph "CFG for '_Z18has_close_elementsSt6vectorIfSaIfEEf' function" {
	label="CFG for '_Z18has_close_elementsSt6vectorIfSaIfEEf' function";

	Node0x55658ef542d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = load float*, float** %3, align 8, !tbaa !3\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %6 = load float*, float** %5, align 8, !tbaa !8\l  %7 = ptrtoint float* %4 to i64\l  %8 = ptrtoint float* %6 to i64\l  %9 = sub i64 %7, %8\l  %10 = ashr exact i64 %9, 2\l  %11 = icmp eq i64 %9, 0\l  br i1 %11, label %36, label %12\l|{<s0>T|<s1>F}}"];
	Node0x55658ef542d0:s0 -> Node0x55658ef55650;
	Node0x55658ef542d0:s1 -> Node0x55658ef55c90;
	Node0x55658ef55c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%12:\l12:                                               \l  %13 = call i64 @llvm.umax.i64(i64 %10, i64 1)\l  br label %17\l}"];
	Node0x55658ef55c90 -> Node0x55658ef56070;
	Node0x55658ef56130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%14:\l14:                                               \l  %15 = add i64 %19, 1\l  %16 = icmp eq i64 %21, %13\l  br i1 %16, label %36, label %17, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x55658ef56130:s0 -> Node0x55658ef55650;
	Node0x55658ef56130:s1 -> Node0x55658ef56070;
	Node0x55658ef56070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%17:\l17:                                               \l  %18 = phi i64 [ 0, %12 ], [ %21, %14 ]\l  %19 = phi i64 [ 1, %12 ], [ %15, %14 ]\l  %20 = phi i1 [ true, %12 ], [ %22, %14 ]\l  %21 = add nuw i64 %18, 1\l  %22 = icmp ugt i64 %10, %21\l  br i1 %22, label %23, label %14\l|{<s0>T|<s1>F}}"];
	Node0x55658ef56070:s0 -> Node0x55658ef56800;
	Node0x55658ef56070:s1 -> Node0x55658ef56130;
	Node0x55658ef56800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%23:\l23:                                               \l  %24 = getelementptr inbounds float, float* %6, i64 %18\l  %25 = load float, float* %24, align 4, !tbaa !11\l  br label %28\l}"];
	Node0x55658ef56800 -> Node0x55658ef56a90;
	Node0x55658ef56b50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%26:\l26:                                               \l  %27 = icmp ugt i64 %10, %35\l  br i1 %27, label %28, label %14, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x55658ef56b50:s0 -> Node0x55658ef56a90;
	Node0x55658ef56b50:s1 -> Node0x55658ef56130;
	Node0x55658ef56a90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i64 [ %19, %23 ], [ %35, %26 ]\l  %30 = getelementptr inbounds float, float* %6, i64 %29\l  %31 = load float, float* %30, align 4, !tbaa !11\l  %32 = fsub float %25, %31\l  %33 = tail call float @llvm.fabs.f32(float %32) #2\l  %34 = fcmp olt float %33, %1\l  %35 = add i64 %29, 1\l  br i1 %34, label %36, label %26\l|{<s0>T|<s1>F}}"];
	Node0x55658ef56a90:s0 -> Node0x55658ef55650;
	Node0x55658ef56a90:s1 -> Node0x55658ef56b50;
	Node0x55658ef55650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%36:\l36:                                               \l  %37 = phi i1 [ false, %2 ], [ %20, %28 ], [ %22, %14 ]\l  ret i1 %37\l}"];
}
