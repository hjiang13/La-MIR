digraph "CFG for '_Z11make_a_pilei' function" {
	label="CFG for '_Z11make_a_pilei' function";

	Node0x556d5a364210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%2:\l  %3 = bitcast %\"class.std::vector\"* %0 to i8*\l  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %3, i8 0, i64 24, i1 false) #6\l  %4 = call noalias nonnull i8* @_Znwm(i64 4) #7\l  %5 = bitcast i8* %4 to i32*\l  %6 = bitcast %\"class.std::vector\"* %0 to i8**\l  store i8* %4, i8** %6, align 8, !tbaa !3\l  %7 = getelementptr inbounds i8, i8* %4, i64 4\l  %8 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %9 = bitcast i32** %8 to i8**\l  store i8* %7, i8** %9, align 8, !tbaa !8\l  store i32 %1, i32* %5, align 4\l  %10 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %11 = bitcast i32** %10 to i8**\l  store i8* %7, i8** %11, align 8, !tbaa !9\l  %12 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %13 = icmp sgt i32 %1, 1\l  %14 = bitcast i8* %7 to i32*\l  br i1 %13, label %15, label %73\l|{<s0>T|<s1>F}}"];
	Node0x556d5a364210:s0 -> Node0x556d5a364f50;
	Node0x556d5a364210:s1 -> Node0x556d5a366710;
	Node0x556d5a364f50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l15:                                               \l  %16 = phi i32* [ %61, %60 ], [ %14, %2 ]\l  %17 = phi i32* [ %62, %60 ], [ %5, %2 ]\l  %18 = phi i32* [ %63, %60 ], [ %14, %2 ]\l  %19 = phi i32 [ %64, %60 ], [ 1, %2 ]\l  %20 = ptrtoint i32* %18 to i64\l  %21 = ptrtoint i32* %17 to i64\l  %22 = sub i64 %20, %21\l  %23 = ashr exact i64 %22, 2\l  %24 = add nsw i64 %23, -1\l  %25 = getelementptr inbounds i32, i32* %17, i64 %24\l  %26 = load i32, i32* %25, align 4, !tbaa !10\l  %27 = add nsw i32 %26, 2\l  %28 = icmp eq i32* %18, %16\l  br i1 %28, label %31, label %29\l|{<s0>T|<s1>F}}"];
	Node0x556d5a364f50:s0 -> Node0x556d5a3672d0;
	Node0x556d5a364f50:s1 -> Node0x556d5a367360;
	Node0x556d5a367360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%29:\l29:                                               \l  store i32 %27, i32* %18, align 4, !tbaa !10\l  %30 = getelementptr inbounds i32, i32* %18, i64 1\l  store i32* %30, i32** %10, align 8, !tbaa !9\l  br label %60\l}"];
	Node0x556d5a367360 -> Node0x556d5a366880;
	Node0x556d5a3672d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%31:\l31:                                               \l  %32 = icmp eq i64 %22, 9223372036854775804\l  br i1 %32, label %33, label %35\l|{<s0>T|<s1>F}}"];
	Node0x556d5a3672d0:s0 -> Node0x556d5a368610;
	Node0x556d5a3672d0:s1 -> Node0x556d5a368660;
	Node0x556d5a368610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%33:\l33:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str.1, i64 0, i64 0)) #8\l          to label %34 unwind label %68\l}"];
	Node0x556d5a368610 -> Node0x556d5a368820;
	Node0x556d5a368610 -> Node0x556d5a368870;
	Node0x556d5a368820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%34:\l34:                                               \l  unreachable\l}"];
	Node0x556d5a368660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%35:\l35:                                               \l  %36 = icmp eq i64 %22, 0\l  %37 = select i1 %36, i64 1, i64 %23\l  %38 = add nsw i64 %37, %23\l  %39 = icmp ult i64 %38, %23\l  %40 = icmp ugt i64 %38, 2305843009213693951\l  %41 = or i1 %39, %40\l  %42 = select i1 %41, i64 2305843009213693951, i64 %38\l  %43 = icmp eq i64 %42, 0\l  br i1 %43, label %49, label %44\l|{<s0>T|<s1>F}}"];
	Node0x556d5a368660:s0 -> Node0x556d5a368fd0;
	Node0x556d5a368660:s1 -> Node0x556d5a369020;
	Node0x556d5a369020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%44:\l44:                                               \l  %45 = shl nuw nsw i64 %42, 2\l  %46 = invoke noalias nonnull i8* @_Znwm(i64 %45) #7\l          to label %47 unwind label %66\l}"];
	Node0x556d5a369020 -> Node0x556d5a3691b0;
	Node0x556d5a369020 -> Node0x556d5a369200;
	Node0x556d5a3691b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%47:\l47:                                               \l  %48 = bitcast i8* %46 to i32*\l  br label %49\l}"];
	Node0x556d5a3691b0 -> Node0x556d5a368fd0;
	Node0x556d5a368fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%49:\l49:                                               \l  %50 = phi i32* [ %48, %47 ], [ null, %35 ]\l  %51 = getelementptr inbounds i32, i32* %50, i64 %23\l  store i32 %27, i32* %51, align 4, !tbaa !10\l  %52 = icmp sgt i64 %22, 0\l  br i1 %52, label %53, label %56\l|{<s0>T|<s1>F}}"];
	Node0x556d5a368fd0:s0 -> Node0x556d5a369650;
	Node0x556d5a368fd0:s1 -> Node0x556d5a3696a0;
	Node0x556d5a369650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%53:\l53:                                               \l  %54 = bitcast i32* %50 to i8*\l  %55 = bitcast i32* %17 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %54, i8* align 4 %55,\l... i64 %22, i1 false) #6\l  br label %56\l}"];
	Node0x556d5a369650 -> Node0x556d5a3696a0;
	Node0x556d5a3696a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%56:\l56:                                               \l  %57 = bitcast i32* %17 to i8*\l  %58 = getelementptr inbounds i32, i32* %51, i64 1\l  tail call void @_ZdlPv(i8* nonnull %57) #6\l  store i32* %50, i32** %12, align 8, !tbaa !3\l  store i32* %58, i32** %10, align 8, !tbaa !9\l  %59 = getelementptr inbounds i32, i32* %50, i64 %42\l  store i32* %59, i32** %8, align 8, !tbaa !8\l  br label %60\l}"];
	Node0x556d5a3696a0 -> Node0x556d5a366880;
	Node0x556d5a366880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  %61 = phi i32* [ %59, %56 ], [ %16, %29 ]\l  %62 = phi i32* [ %50, %56 ], [ %17, %29 ]\l  %63 = phi i32* [ %58, %56 ], [ %30, %29 ]\l  %64 = add nuw nsw i32 %19, 1\l  %65 = icmp eq i32 %64, %1\l  br i1 %65, label %73, label %15, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x556d5a366880:s0 -> Node0x556d5a366710;
	Node0x556d5a366880:s1 -> Node0x556d5a364f50;
	Node0x556d5a369200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%66:\l66:                                               \l  %67 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %70\l}"];
	Node0x556d5a369200 -> Node0x556d5a36b6d0;
	Node0x556d5a368870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%68:\l68:                                               \l  %69 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %70\l}"];
	Node0x556d5a368870 -> Node0x556d5a36b6d0;
	Node0x556d5a36b6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%70:\l70:                                               \l  %71 = phi \{ i8*, i32 \} [ %67, %66 ], [ %69, %68 ]\l  %72 = bitcast i32* %17 to i8*\l  tail call void @_ZdlPv(i8* nonnull %72) #6\l  resume \{ i8*, i32 \} %71\l}"];
	Node0x556d5a366710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%73:\l73:                                               \l  ret void\l}"];
}
