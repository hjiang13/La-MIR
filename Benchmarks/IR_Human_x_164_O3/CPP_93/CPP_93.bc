; ModuleID = '../../Human_xBenchmarks_164/CPP_93/CPP_93.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_93/CPP_93.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@.str = private unnamed_addr constant [11 x i8] c"aeiouAEIOU\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z6encodeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %8 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  store %union.anon* %7, %union.anon** %8, align 8, !tbaa !3
  %9 = bitcast %union.anon* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(10) %9, i8* noundef nonnull align 1 dereferenceable(10) getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i1 false) #6
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  store i64 10, i64* %11, align 8, !tbaa !8
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 1, i64 2
  store i8 0, i8* %12, align 2, !tbaa !11
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %14 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %13, %union.anon** %14, align 8, !tbaa !3
  %15 = bitcast %union.anon* %13 to i8*
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %17, align 8, !tbaa !8
  store i8 0, i8* %15, align 8, !tbaa !11
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %20 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %22 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  %23 = bitcast i64* %3 to i8*
  %24 = bitcast %union.anon* %21 to i8*
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %29 = load i64, i64* %18, align 8, !tbaa !8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %179, label %31

31:                                               ; preds = %2
  %32 = bitcast i64* %27 to <2 x i64>*
  %33 = bitcast i64* %17 to <2 x i64>*
  br label %34

34:                                               ; preds = %31, %164
  %35 = phi i64 [ %165, %164 ], [ 0, %31 ]
  %36 = load i8*, i8** %19, align 8, !tbaa !12
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1, !tbaa !11
  %39 = add i8 %38, -97
  %40 = icmp ult i8 %39, 26
  br i1 %40, label %41, label %43

41:                                               ; preds = %34
  %42 = add nsw i8 %38, -32
  br label %48

43:                                               ; preds = %34
  %44 = add i8 %38, -65
  %45 = icmp ult i8 %44, 26
  %46 = add nuw nsw i8 %38, 32
  %47 = select i1 %45, i8 %46, i8 %38
  br label %48

48:                                               ; preds = %43, %41
  %49 = phi i8 [ %42, %41 ], [ %47, %43 ]
  %50 = load i8*, i8** %10, align 8, !tbaa !12
  %51 = load i64, i64* %11, align 8, !tbaa !8
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = ptrtoint i8* %52 to i64
  %54 = icmp sgt i64 %51, 3
  br i1 %54, label %55, label %78

55:                                               ; preds = %48
  %56 = lshr i64 %51, 2
  br label %57

57:                                               ; preds = %74, %55
  %58 = phi i64 [ %56, %55 ], [ %76, %74 ]
  %59 = phi i8* [ %50, %55 ], [ %75, %74 ]
  %60 = load i8, i8* %59, align 1, !tbaa !11
  %61 = icmp eq i8 %60, %49
  br i1 %61, label %103, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds i8, i8* %59, i64 1
  %64 = load i8, i8* %63, align 1, !tbaa !11
  %65 = icmp eq i8 %64, %49
  br i1 %65, label %101, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds i8, i8* %59, i64 2
  %68 = load i8, i8* %67, align 1, !tbaa !11
  %69 = icmp eq i8 %68, %49
  br i1 %69, label %99, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds i8, i8* %59, i64 3
  %72 = load i8, i8* %71, align 1, !tbaa !11
  %73 = icmp eq i8 %72, %49
  br i1 %73, label %97, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds i8, i8* %59, i64 4
  %76 = add nsw i64 %58, -1
  %77 = icmp sgt i64 %58, 1
  br i1 %77, label %57, label %78, !llvm.loop !13

78:                                               ; preds = %74, %48
  %79 = phi i8* [ %50, %48 ], [ %75, %74 ]
  %80 = ptrtoint i8* %79 to i64
  %81 = sub i64 %53, %80
  switch i64 %81, label %108 [
    i64 3, label %82
    i64 2, label %87
    i64 1, label %93
  ]

82:                                               ; preds = %78
  %83 = load i8, i8* %79, align 1, !tbaa !11
  %84 = icmp eq i8 %83, %49
  br i1 %84, label %103, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds i8, i8* %79, i64 1
  br label %87

87:                                               ; preds = %78, %85
  %88 = phi i8* [ %86, %85 ], [ %79, %78 ]
  %89 = load i8, i8* %88, align 1, !tbaa !11
  %90 = icmp eq i8 %89, %49
  br i1 %90, label %103, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds i8, i8* %88, i64 1
  br label %93

93:                                               ; preds = %78, %91
  %94 = phi i8* [ %92, %91 ], [ %79, %78 ]
  %95 = load i8, i8* %94, align 1, !tbaa !11
  %96 = icmp eq i8 %95, %49
  br i1 %96, label %103, label %108

97:                                               ; preds = %70
  %98 = getelementptr inbounds i8, i8* %59, i64 3
  br label %103

99:                                               ; preds = %66
  %100 = getelementptr inbounds i8, i8* %59, i64 2
  br label %103

101:                                              ; preds = %62
  %102 = getelementptr inbounds i8, i8* %59, i64 1
  br label %103

103:                                              ; preds = %57, %97, %99, %101, %93, %87, %82
  %104 = phi i8* [ %79, %82 ], [ %88, %87 ], [ %94, %93 ], [ %98, %97 ], [ %100, %99 ], [ %102, %101 ], [ %59, %57 ]
  %105 = icmp eq i8* %104, %52
  %106 = add i8 %49, 2
  %107 = select i1 %105, i8 %49, i8 %106
  br label %108

108:                                              ; preds = %103, %93, %78
  %109 = phi i8 [ %49, %78 ], [ %49, %93 ], [ %107, %103 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #6
  call void @llvm.experimental.noalias.scope.decl(metadata !15)
  store %union.anon* %21, %union.anon** %22, align 8, !tbaa !3, !alias.scope !15
  %110 = load i8*, i8** %16, align 8, !tbaa !12, !noalias !15
  %111 = load i64, i64* %17, align 8, !tbaa !8, !noalias !15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6, !noalias !15
  store i64 %111, i64* %3, align 8, !tbaa !18, !noalias !15
  %112 = icmp ugt i64 %111, 15
  br i1 %112, label %113, label %117

113:                                              ; preds = %108
  %114 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %115 unwind label %168

115:                                              ; preds = %113
  store i8* %114, i8** %25, align 8, !tbaa !12, !alias.scope !15
  %116 = load i64, i64* %3, align 8, !tbaa !18, !noalias !15
  store i64 %116, i64* %26, align 8, !tbaa !11, !alias.scope !15
  br label %117

117:                                              ; preds = %108, %115
  %118 = phi i8* [ %114, %115 ], [ %24, %108 ]
  switch i64 %111, label %121 [
    i64 1, label %119
    i64 0, label %122
  ]

119:                                              ; preds = %117
  %120 = load i8, i8* %110, align 1, !tbaa !11
  store i8 %120, i8* %118, align 1, !tbaa !11
  br label %122

121:                                              ; preds = %117
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %118, i8* align 1 %110, i64 %111, i1 false) #6
  br label %122

122:                                              ; preds = %121, %119, %117
  %123 = load i64, i64* %3, align 8, !tbaa !18, !noalias !15
  store i64 %123, i64* %27, align 8, !tbaa !8, !alias.scope !15
  %124 = load i8*, i8** %25, align 8, !tbaa !12, !alias.scope !15
  %125 = getelementptr inbounds i8, i8* %124, i64 %123
  store i8 0, i8* %125, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6, !noalias !15
  %126 = load i64, i64* %27, align 8, !tbaa !8, !alias.scope !15
  %127 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i64 %126, i64 0, i64 1, i8 signext %109)
          to label %133 unwind label %128

128:                                              ; preds = %122
  %129 = landingpad { i8*, i32 }
          cleanup
  %130 = load i8*, i8** %25, align 8, !tbaa !12, !alias.scope !15
  %131 = icmp eq i8* %130, %24
  br i1 %131, label %170, label %132

132:                                              ; preds = %128
  call void @_ZdlPv(i8* %130) #6
  br label %170

133:                                              ; preds = %122
  %134 = load i8*, i8** %25, align 8, !tbaa !12
  %135 = icmp eq i8* %134, %24
  br i1 %135, label %136, label %150

136:                                              ; preds = %133
  %137 = load i64, i64* %27, align 8, !tbaa !8
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %145, label %139

139:                                              ; preds = %136
  %140 = load i8*, i8** %16, align 8, !tbaa !12
  %141 = icmp eq i64 %137, 1
  br i1 %141, label %142, label %144

142:                                              ; preds = %139
  %143 = load i8, i8* %24, align 8, !tbaa !11
  store i8 %143, i8* %140, align 1, !tbaa !11
  br label %145

144:                                              ; preds = %139
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %140, i8* nonnull align 8 %24, i64 %137, i1 false) #6
  br label %145

145:                                              ; preds = %144, %142, %136
  %146 = load i64, i64* %27, align 8, !tbaa !8
  store i64 %146, i64* %17, align 8, !tbaa !8
  %147 = load i8*, i8** %16, align 8, !tbaa !12
  %148 = getelementptr inbounds i8, i8* %147, i64 %146
  store i8 0, i8* %148, align 1, !tbaa !11
  %149 = load i8*, i8** %25, align 8, !tbaa !12
  br label %159

150:                                              ; preds = %133
  %151 = load i8*, i8** %16, align 8, !tbaa !12
  %152 = icmp eq i8* %151, %15
  %153 = load i64, i64* %28, align 8
  store i8* %134, i8** %16, align 8, !tbaa !12
  %154 = load <2 x i64>, <2 x i64>* %32, align 8, !tbaa !11
  store <2 x i64> %154, <2 x i64>* %33, align 8, !tbaa !11
  %155 = icmp eq i8* %151, null
  %156 = or i1 %152, %155
  br i1 %156, label %158, label %157

157:                                              ; preds = %150
  store i8* %151, i8** %25, align 8, !tbaa !12
  store i64 %153, i64* %26, align 8, !tbaa !11
  br label %159

158:                                              ; preds = %150
  store %union.anon* %21, %union.anon** %22, align 8, !tbaa !12
  br label %159

159:                                              ; preds = %145, %157, %158
  %160 = phi i8* [ %149, %145 ], [ %151, %157 ], [ %24, %158 ]
  store i64 0, i64* %27, align 8, !tbaa !8
  store i8 0, i8* %160, align 1, !tbaa !11
  %161 = load i8*, i8** %25, align 8, !tbaa !12
  %162 = icmp eq i8* %161, %24
  br i1 %162, label %164, label %163

163:                                              ; preds = %159
  call void @_ZdlPv(i8* %161) #6
  br label %164

164:                                              ; preds = %159, %163
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #6
  %165 = add nuw i64 %35, 1
  %166 = load i64, i64* %18, align 8, !tbaa !8
  %167 = icmp ugt i64 %166, %165
  br i1 %167, label %34, label %175, !llvm.loop !19

168:                                              ; preds = %113
  %169 = landingpad { i8*, i32 }
          cleanup
  br label %170

170:                                              ; preds = %128, %132, %168
  %171 = phi { i8*, i32 } [ %169, %168 ], [ %129, %132 ], [ %129, %128 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #6
  %172 = load i8*, i8** %16, align 8, !tbaa !12
  %173 = icmp eq i8* %172, %15
  br i1 %173, label %180, label %174

174:                                              ; preds = %170
  call void @_ZdlPv(i8* %172) #6
  br label %180

175:                                              ; preds = %164
  %176 = load i8*, i8** %10, align 8, !tbaa !12
  %177 = icmp eq i8* %176, %9
  br i1 %177, label %179, label %178

178:                                              ; preds = %175
  call void @_ZdlPv(i8* %176) #6
  br label %179

179:                                              ; preds = %2, %175, %178
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6
  ret void

180:                                              ; preds = %174, %170
  %181 = load i8*, i8** %10, align 8, !tbaa !12
  %182 = icmp eq i8* %181, %9
  br i1 %182, label %184, label %183

183:                                              ; preds = %180
  call void @_ZdlPv(i8* %181) #6
  br label %184

184:                                              ; preds = %183, %180
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6
  resume { i8*, i32 } %171
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #3

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #5

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.mustprogress"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!17 = distinct !{!17, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!18 = !{!10, !10, i64 0}
!19 = distinct !{!19, !14}
