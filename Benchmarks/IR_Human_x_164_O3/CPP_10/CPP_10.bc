; ModuleID = '../../Human_xBenchmarks_164/CPP_10/CPP_10.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_10/CPP_10.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: uwtable
define dso_local zeroext i1 @_Z13is_palindromeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nocapture readonly %0) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca i64, align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8, !tbaa !3, !noalias !10
  %7 = ptrtoint i8* %6 to i64
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8, !tbaa !13, !noalias !10
  %10 = getelementptr inbounds i8, i8* %6, i64 %9
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %12 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  store %union.anon* %11, %union.anon** %12, align 8, !tbaa !14
  %13 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  store i64 %9, i64* %2, align 8, !tbaa !15
  %14 = icmp ugt i64 %9, 15
  br i1 %14, label %15, label %20

15:                                               ; preds = %1
  %16 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3, i64* nonnull align 8 dereferenceable(8) %2, i64 0)
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8, !tbaa !3
  %18 = load i64, i64* %2, align 8, !tbaa !15
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2, i32 0
  store i64 %18, i64* %19, align 8, !tbaa !16
  br label %23

20:                                               ; preds = %1
  %21 = bitcast %union.anon* %11 to i8*
  %22 = icmp eq i64 %9, 0
  br i1 %22, label %134, label %23

23:                                               ; preds = %15, %20
  %24 = phi i8* [ %16, %15 ], [ %21, %20 ]
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %26 = icmp ult i64 %9, 4
  br i1 %26, label %81, label %27

27:                                               ; preds = %23
  %28 = getelementptr i8, i8* %24, i64 %9
  %29 = icmp ult i8* %24, %10
  %30 = icmp ult i8* %6, %28
  %31 = and i1 %29, %30
  br i1 %31, label %81, label %32

32:                                               ; preds = %27
  %33 = icmp ult i64 %9, 32
  br i1 %33, label %62, label %34

34:                                               ; preds = %32
  %35 = and i64 %9, -32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %52, %36 ]
  %38 = getelementptr i8, i8* %24, i64 %37
  %39 = xor i64 %37, -1
  %40 = getelementptr i8, i8* %10, i64 %39
  %41 = getelementptr inbounds i8, i8* %40, i64 -15
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1, !tbaa !16, !alias.scope !17
  %44 = shufflevector <16 x i8> %43, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %45 = getelementptr inbounds i8, i8* %40, i64 -31
  %46 = bitcast i8* %45 to <16 x i8>*
  %47 = load <16 x i8>, <16 x i8>* %46, align 1, !tbaa !16, !alias.scope !17
  %48 = shufflevector <16 x i8> %47, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %49 = bitcast i8* %38 to <16 x i8>*
  store <16 x i8> %44, <16 x i8>* %49, align 1, !tbaa !16, !alias.scope !20, !noalias !17
  %50 = getelementptr i8, i8* %38, i64 16
  %51 = bitcast i8* %50 to <16 x i8>*
  store <16 x i8> %48, <16 x i8>* %51, align 1, !tbaa !16, !alias.scope !20, !noalias !17
  %52 = add nuw i64 %37, 32
  %53 = icmp eq i64 %52, %35
  br i1 %53, label %54, label %36, !llvm.loop !22

54:                                               ; preds = %36
  %55 = icmp eq i64 %9, %35
  br i1 %55, label %131, label %56

56:                                               ; preds = %54
  %57 = getelementptr i8, i8* %24, i64 %35
  %58 = sub i64 0, %35
  %59 = getelementptr i8, i8* %10, i64 %58
  %60 = and i64 %9, 28
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %81, label %62

62:                                               ; preds = %32, %56
  %63 = phi i64 [ %35, %56 ], [ 0, %32 ]
  %64 = and i64 %9, -4
  %65 = sub i64 0, %64
  %66 = getelementptr i8, i8* %10, i64 %65
  %67 = getelementptr i8, i8* %24, i64 %64
  br label %68

68:                                               ; preds = %68, %62
  %69 = phi i64 [ %63, %62 ], [ %77, %68 ]
  %70 = getelementptr i8, i8* %24, i64 %69
  %71 = sub nuw nsw i64 -4, %69
  %72 = getelementptr i8, i8* %10, i64 %71
  %73 = bitcast i8* %72 to <4 x i8>*
  %74 = load <4 x i8>, <4 x i8>* %73, align 1, !tbaa !16
  %75 = shufflevector <4 x i8> %74, <4 x i8> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %76 = bitcast i8* %70 to <4 x i8>*
  store <4 x i8> %75, <4 x i8>* %76, align 1, !tbaa !16
  %77 = add nuw i64 %69, 4
  %78 = icmp eq i64 %77, %64
  br i1 %78, label %79, label %68, !llvm.loop !25

79:                                               ; preds = %68
  %80 = icmp eq i64 %9, %64
  br i1 %80, label %131, label %81

81:                                               ; preds = %27, %23, %56, %79
  %82 = phi i8* [ %10, %23 ], [ %10, %27 ], [ %59, %56 ], [ %66, %79 ]
  %83 = phi i8* [ %24, %23 ], [ %24, %27 ], [ %57, %56 ], [ %67, %79 ]
  %84 = ptrtoint i8* %82 to i64
  %85 = sub i64 %84, %7
  %86 = xor i64 %7, -1
  %87 = add i64 %86, %84
  %88 = and i64 %85, 7
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %99, label %90

90:                                               ; preds = %81, %90
  %91 = phi i8* [ %94, %90 ], [ %82, %81 ]
  %92 = phi i8* [ %96, %90 ], [ %83, %81 ]
  %93 = phi i64 [ %97, %90 ], [ %88, %81 ]
  %94 = getelementptr inbounds i8, i8* %91, i64 -1
  %95 = load i8, i8* %94, align 1, !tbaa !16
  store i8 %95, i8* %92, align 1, !tbaa !16
  %96 = getelementptr inbounds i8, i8* %92, i64 1
  %97 = add i64 %93, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %90, !llvm.loop !26

99:                                               ; preds = %90, %81
  %100 = phi i8* [ %82, %81 ], [ %94, %90 ]
  %101 = phi i8* [ %83, %81 ], [ %96, %90 ]
  %102 = icmp ult i64 %87, 7
  br i1 %102, label %131, label %103

103:                                              ; preds = %99, %103
  %104 = phi i8* [ %127, %103 ], [ %100, %99 ]
  %105 = phi i8* [ %129, %103 ], [ %101, %99 ]
  %106 = getelementptr inbounds i8, i8* %104, i64 -1
  %107 = load i8, i8* %106, align 1, !tbaa !16
  store i8 %107, i8* %105, align 1, !tbaa !16
  %108 = getelementptr inbounds i8, i8* %105, i64 1
  %109 = getelementptr inbounds i8, i8* %104, i64 -2
  %110 = load i8, i8* %109, align 1, !tbaa !16
  store i8 %110, i8* %108, align 1, !tbaa !16
  %111 = getelementptr inbounds i8, i8* %105, i64 2
  %112 = getelementptr inbounds i8, i8* %104, i64 -3
  %113 = load i8, i8* %112, align 1, !tbaa !16
  store i8 %113, i8* %111, align 1, !tbaa !16
  %114 = getelementptr inbounds i8, i8* %105, i64 3
  %115 = getelementptr inbounds i8, i8* %104, i64 -4
  %116 = load i8, i8* %115, align 1, !tbaa !16
  store i8 %116, i8* %114, align 1, !tbaa !16
  %117 = getelementptr inbounds i8, i8* %105, i64 4
  %118 = getelementptr inbounds i8, i8* %104, i64 -5
  %119 = load i8, i8* %118, align 1, !tbaa !16
  store i8 %119, i8* %117, align 1, !tbaa !16
  %120 = getelementptr inbounds i8, i8* %105, i64 5
  %121 = getelementptr inbounds i8, i8* %104, i64 -6
  %122 = load i8, i8* %121, align 1, !tbaa !16
  store i8 %122, i8* %120, align 1, !tbaa !16
  %123 = getelementptr inbounds i8, i8* %105, i64 6
  %124 = getelementptr inbounds i8, i8* %104, i64 -7
  %125 = load i8, i8* %124, align 1, !tbaa !16
  store i8 %125, i8* %123, align 1, !tbaa !16
  %126 = getelementptr inbounds i8, i8* %105, i64 7
  %127 = getelementptr inbounds i8, i8* %104, i64 -8
  %128 = load i8, i8* %127, align 1, !tbaa !16
  store i8 %128, i8* %126, align 1, !tbaa !16
  %129 = getelementptr inbounds i8, i8* %105, i64 8
  %130 = icmp eq i8* %127, %6
  br i1 %130, label %131, label %103, !llvm.loop !28

131:                                              ; preds = %99, %103, %79, %54
  %132 = load i64, i64* %2, align 8, !tbaa !15
  %133 = load i8*, i8** %25, align 8, !tbaa !3
  br label %134

134:                                              ; preds = %131, %20
  %135 = phi i8* [ %133, %131 ], [ %21, %20 ]
  %136 = phi i64 [ %132, %131 ], [ 0, %20 ]
  %137 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %138 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  store i64 %136, i64* %138, align 8, !tbaa !13
  %139 = getelementptr inbounds i8, i8* %135, i64 %136
  store i8 0, i8* %139, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  %140 = load i64, i64* %138, align 8, !tbaa !13
  %141 = load i64, i64* %8, align 8, !tbaa !13
  %142 = icmp eq i64 %140, %141
  br i1 %142, label %143, label %150

143:                                              ; preds = %134
  %144 = icmp eq i64 %140, 0
  br i1 %144, label %150, label %145

145:                                              ; preds = %143
  %146 = load i8*, i8** %5, align 8, !tbaa !3
  %147 = load i8*, i8** %137, align 8, !tbaa !3
  %148 = call i32 @bcmp(i8* %147, i8* %146, i64 %140) #7
  %149 = icmp eq i32 %148, 0
  br label %150

150:                                              ; preds = %134, %143, %145
  %151 = phi i1 [ false, %134 ], [ %149, %145 ], [ true, %143 ]
  %152 = load i8*, i8** %137, align 8, !tbaa !3
  %153 = bitcast %union.anon* %11 to i8*
  %154 = icmp eq i8* %152, %153
  br i1 %154, label %156, label %155

155:                                              ; preds = %150
  call void @_ZdlPv(i8* %152) #7
  br label %156

156:                                              ; preds = %150, %155
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #7
  ret i1 %151
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
define dso_local void @_Z15make_palindromeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::__cxx11::basic_string", align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.std::__cxx11::basic_string", align 8
  %13 = alloca %"class.std::__cxx11::basic_string", align 8
  %14 = alloca %"class.std::__cxx11::basic_string", align 8
  %15 = alloca %"class.std::__cxx11::basic_string", align 8
  %16 = alloca %"class.std::__cxx11::basic_string", align 8
  %17 = alloca %"class.std::__cxx11::basic_string", align 8
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %19 = bitcast %"class.std::__cxx11::basic_string"* %12 to i8*
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 2
  %21 = bitcast %"class.std::__cxx11::basic_string"* %12 to %union.anon**
  %22 = bitcast %union.anon* %20 to i8*
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %24 = bitcast i64* %11 to i8*
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 2, i32 0
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 1
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 2
  %29 = bitcast %"class.std::__cxx11::basic_string"* %13 to %union.anon**
  %30 = bitcast i64* %10 to i8*
  %31 = bitcast %union.anon* %28 to i8*
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 2, i32 0
  %34 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 1
  %35 = bitcast %"class.std::__cxx11::basic_string"* %9 to i8*
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2
  %37 = bitcast %"class.std::__cxx11::basic_string"* %9 to %union.anon**
  %38 = bitcast i64* %8 to i8*
  %39 = bitcast %union.anon* %36 to i8*
  %40 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2, i32 0
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 1
  %43 = bitcast %"class.std::__cxx11::basic_string"* %14 to i8*
  %44 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i64 0, i32 2
  %45 = bitcast %"class.std::__cxx11::basic_string"* %14 to %union.anon**
  %46 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i64 0, i32 1
  %47 = bitcast %union.anon* %44 to i8*
  %48 = bitcast %"class.std::__cxx11::basic_string"* %15 to i8*
  %49 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 2
  %50 = bitcast %"class.std::__cxx11::basic_string"* %15 to %union.anon**
  %51 = bitcast %union.anon* %49 to i8*
  %52 = bitcast i64* %7 to i8*
  %53 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 2, i32 0
  %55 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 1
  %56 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i64 0, i32 2, i32 0
  %58 = bitcast %"class.std::__cxx11::basic_string"* %16 to i8*
  %59 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %16, i64 0, i32 2
  %60 = bitcast %"class.std::__cxx11::basic_string"* %16 to %union.anon**
  %61 = bitcast i64* %6 to i8*
  %62 = bitcast %union.anon* %59 to i8*
  %63 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %16, i64 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %16, i64 0, i32 2, i32 0
  %65 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %16, i64 0, i32 1
  %66 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %67 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  %68 = bitcast i64* %5 to i8*
  %69 = bitcast %union.anon* %66 to i8*
  %70 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %72 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %73 = load i64, i64* %18, align 8, !tbaa !13
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %509, label %75

75:                                               ; preds = %2, %499
  %76 = phi i64 [ %500, %499 ], [ 0, %2 ]
  %77 = phi i64 [ %501, %499 ], [ %73, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !29)
  store %union.anon* %20, %union.anon** %21, align 8, !tbaa !14, !alias.scope !29
  %78 = load i8*, i8** %23, align 8, !tbaa !3, !noalias !29
  %79 = getelementptr inbounds i8, i8* %78, i64 %76
  %80 = sub i64 %77, %76
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7, !noalias !29
  store i64 %80, i64* %11, align 8, !tbaa !15, !noalias !29
  %81 = icmp ugt i64 %80, 15
  br i1 %81, label %82, label %85

82:                                               ; preds = %75
  %83 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %12, i64* nonnull align 8 dereferenceable(8) %11, i64 0)
  store i8* %83, i8** %25, align 8, !tbaa !3, !alias.scope !29
  %84 = load i64, i64* %11, align 8, !tbaa !15, !noalias !29
  store i64 %84, i64* %26, align 8, !tbaa !16, !alias.scope !29
  br label %85

85:                                               ; preds = %82, %75
  %86 = phi i8* [ %83, %82 ], [ %22, %75 ]
  switch i64 %80, label %89 [
    i64 1, label %87
    i64 0, label %90
  ]

87:                                               ; preds = %85
  %88 = load i8, i8* %79, align 1, !tbaa !16
  store i8 %88, i8* %86, align 1, !tbaa !16
  br label %90

89:                                               ; preds = %85
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %86, i8* align 1 %79, i64 %80, i1 false) #7
  br label %90

90:                                               ; preds = %85, %87, %89
  %91 = load i64, i64* %11, align 8, !tbaa !15, !noalias !29
  store i64 %91, i64* %27, align 8, !tbaa !13, !alias.scope !29
  %92 = load i8*, i8** %25, align 8, !tbaa !3, !alias.scope !29
  %93 = getelementptr inbounds i8, i8* %92, i64 %91
  store i8 0, i8* %93, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7, !noalias !29
  store %union.anon* %28, %union.anon** %29, align 8, !tbaa !14
  %94 = load i8*, i8** %25, align 8, !tbaa !3
  %95 = load i64, i64* %27, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #7
  store i64 %95, i64* %10, align 8, !tbaa !15
  %96 = icmp ugt i64 %95, 15
  br i1 %96, label %97, label %101

97:                                               ; preds = %90
  %98 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %13, i64* nonnull align 8 dereferenceable(8) %10, i64 0)
          to label %99 unwind label %469

99:                                               ; preds = %97
  store i8* %98, i8** %32, align 8, !tbaa !3
  %100 = load i64, i64* %10, align 8, !tbaa !15
  store i64 %100, i64* %33, align 8, !tbaa !16
  br label %101

101:                                              ; preds = %90, %99
  %102 = phi i8* [ %98, %99 ], [ %31, %90 ]
  switch i64 %95, label %105 [
    i64 1, label %103
    i64 0, label %106
  ]

103:                                              ; preds = %101
  %104 = load i8, i8* %94, align 1, !tbaa !16
  store i8 %104, i8* %102, align 1, !tbaa !16
  br label %106

105:                                              ; preds = %101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %102, i8* align 1 %94, i64 %95, i1 false) #7
  br label %106

106:                                              ; preds = %105, %103, %101
  %107 = load i64, i64* %10, align 8, !tbaa !15
  store i64 %107, i64* %34, align 8, !tbaa !13
  %108 = load i8*, i8** %32, align 8, !tbaa !3
  %109 = getelementptr inbounds i8, i8* %108, i64 %107
  store i8 0, i8* %109, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #7
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #7
  %110 = load i8*, i8** %32, align 8, !tbaa !3, !noalias !32
  %111 = ptrtoint i8* %110 to i64
  %112 = load i64, i64* %34, align 8, !tbaa !13, !noalias !32
  %113 = getelementptr inbounds i8, i8* %110, i64 %112
  store %union.anon* %36, %union.anon** %37, align 8, !tbaa !14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #7
  store i64 %112, i64* %8, align 8, !tbaa !15
  %114 = icmp ugt i64 %112, 15
  br i1 %114, label %115, label %119

115:                                              ; preds = %106
  %116 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %9, i64* nonnull align 8 dereferenceable(8) %8, i64 0)
          to label %117 unwind label %471

117:                                              ; preds = %115
  store i8* %116, i8** %40, align 8, !tbaa !3
  %118 = load i64, i64* %8, align 8, !tbaa !15
  store i64 %118, i64* %41, align 8, !tbaa !16
  br label %121

119:                                              ; preds = %106
  %120 = icmp eq i64 %112, 0
  br i1 %120, label %231, label %121

121:                                              ; preds = %119, %117
  %122 = phi i8* [ %116, %117 ], [ %39, %119 ]
  %123 = icmp ult i64 %112, 4
  br i1 %123, label %178, label %124

124:                                              ; preds = %121
  %125 = getelementptr i8, i8* %122, i64 %112
  %126 = icmp ult i8* %122, %113
  %127 = icmp ult i8* %110, %125
  %128 = and i1 %126, %127
  br i1 %128, label %178, label %129

129:                                              ; preds = %124
  %130 = icmp ult i64 %112, 32
  br i1 %130, label %159, label %131

131:                                              ; preds = %129
  %132 = and i64 %112, -32
  br label %133

133:                                              ; preds = %133, %131
  %134 = phi i64 [ 0, %131 ], [ %149, %133 ]
  %135 = getelementptr i8, i8* %122, i64 %134
  %136 = xor i64 %134, -1
  %137 = getelementptr i8, i8* %113, i64 %136
  %138 = getelementptr inbounds i8, i8* %137, i64 -15
  %139 = bitcast i8* %138 to <16 x i8>*
  %140 = load <16 x i8>, <16 x i8>* %139, align 1, !tbaa !16, !alias.scope !35
  %141 = shufflevector <16 x i8> %140, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %142 = getelementptr inbounds i8, i8* %137, i64 -31
  %143 = bitcast i8* %142 to <16 x i8>*
  %144 = load <16 x i8>, <16 x i8>* %143, align 1, !tbaa !16, !alias.scope !35
  %145 = shufflevector <16 x i8> %144, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %146 = bitcast i8* %135 to <16 x i8>*
  store <16 x i8> %141, <16 x i8>* %146, align 1, !tbaa !16, !alias.scope !38, !noalias !35
  %147 = getelementptr i8, i8* %135, i64 16
  %148 = bitcast i8* %147 to <16 x i8>*
  store <16 x i8> %145, <16 x i8>* %148, align 1, !tbaa !16, !alias.scope !38, !noalias !35
  %149 = add nuw i64 %134, 32
  %150 = icmp eq i64 %149, %132
  br i1 %150, label %151, label %133, !llvm.loop !40

151:                                              ; preds = %133
  %152 = icmp eq i64 %112, %132
  br i1 %152, label %228, label %153

153:                                              ; preds = %151
  %154 = getelementptr i8, i8* %122, i64 %132
  %155 = sub i64 0, %132
  %156 = getelementptr i8, i8* %113, i64 %155
  %157 = and i64 %112, 28
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %178, label %159

159:                                              ; preds = %129, %153
  %160 = phi i64 [ %132, %153 ], [ 0, %129 ]
  %161 = and i64 %112, -4
  %162 = sub i64 0, %161
  %163 = getelementptr i8, i8* %113, i64 %162
  %164 = getelementptr i8, i8* %122, i64 %161
  br label %165

165:                                              ; preds = %165, %159
  %166 = phi i64 [ %160, %159 ], [ %174, %165 ]
  %167 = getelementptr i8, i8* %122, i64 %166
  %168 = sub nuw nsw i64 -4, %166
  %169 = getelementptr i8, i8* %113, i64 %168
  %170 = bitcast i8* %169 to <4 x i8>*
  %171 = load <4 x i8>, <4 x i8>* %170, align 1, !tbaa !16
  %172 = shufflevector <4 x i8> %171, <4 x i8> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %173 = bitcast i8* %167 to <4 x i8>*
  store <4 x i8> %172, <4 x i8>* %173, align 1, !tbaa !16
  %174 = add nuw i64 %166, 4
  %175 = icmp eq i64 %174, %161
  br i1 %175, label %176, label %165, !llvm.loop !41

176:                                              ; preds = %165
  %177 = icmp eq i64 %112, %161
  br i1 %177, label %228, label %178

178:                                              ; preds = %124, %121, %153, %176
  %179 = phi i8* [ %113, %121 ], [ %113, %124 ], [ %156, %153 ], [ %163, %176 ]
  %180 = phi i8* [ %122, %121 ], [ %122, %124 ], [ %154, %153 ], [ %164, %176 ]
  %181 = ptrtoint i8* %179 to i64
  %182 = sub i64 %181, %111
  %183 = xor i64 %111, -1
  %184 = add i64 %183, %181
  %185 = and i64 %182, 7
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %196, label %187

187:                                              ; preds = %178, %187
  %188 = phi i8* [ %191, %187 ], [ %179, %178 ]
  %189 = phi i8* [ %193, %187 ], [ %180, %178 ]
  %190 = phi i64 [ %194, %187 ], [ %185, %178 ]
  %191 = getelementptr inbounds i8, i8* %188, i64 -1
  %192 = load i8, i8* %191, align 1, !tbaa !16
  store i8 %192, i8* %189, align 1, !tbaa !16
  %193 = getelementptr inbounds i8, i8* %189, i64 1
  %194 = add i64 %190, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %187, !llvm.loop !42

196:                                              ; preds = %187, %178
  %197 = phi i8* [ %179, %178 ], [ %191, %187 ]
  %198 = phi i8* [ %180, %178 ], [ %193, %187 ]
  %199 = icmp ult i64 %184, 7
  br i1 %199, label %228, label %200

200:                                              ; preds = %196, %200
  %201 = phi i8* [ %224, %200 ], [ %197, %196 ]
  %202 = phi i8* [ %226, %200 ], [ %198, %196 ]
  %203 = getelementptr inbounds i8, i8* %201, i64 -1
  %204 = load i8, i8* %203, align 1, !tbaa !16
  store i8 %204, i8* %202, align 1, !tbaa !16
  %205 = getelementptr inbounds i8, i8* %202, i64 1
  %206 = getelementptr inbounds i8, i8* %201, i64 -2
  %207 = load i8, i8* %206, align 1, !tbaa !16
  store i8 %207, i8* %205, align 1, !tbaa !16
  %208 = getelementptr inbounds i8, i8* %202, i64 2
  %209 = getelementptr inbounds i8, i8* %201, i64 -3
  %210 = load i8, i8* %209, align 1, !tbaa !16
  store i8 %210, i8* %208, align 1, !tbaa !16
  %211 = getelementptr inbounds i8, i8* %202, i64 3
  %212 = getelementptr inbounds i8, i8* %201, i64 -4
  %213 = load i8, i8* %212, align 1, !tbaa !16
  store i8 %213, i8* %211, align 1, !tbaa !16
  %214 = getelementptr inbounds i8, i8* %202, i64 4
  %215 = getelementptr inbounds i8, i8* %201, i64 -5
  %216 = load i8, i8* %215, align 1, !tbaa !16
  store i8 %216, i8* %214, align 1, !tbaa !16
  %217 = getelementptr inbounds i8, i8* %202, i64 5
  %218 = getelementptr inbounds i8, i8* %201, i64 -6
  %219 = load i8, i8* %218, align 1, !tbaa !16
  store i8 %219, i8* %217, align 1, !tbaa !16
  %220 = getelementptr inbounds i8, i8* %202, i64 6
  %221 = getelementptr inbounds i8, i8* %201, i64 -7
  %222 = load i8, i8* %221, align 1, !tbaa !16
  store i8 %222, i8* %220, align 1, !tbaa !16
  %223 = getelementptr inbounds i8, i8* %202, i64 7
  %224 = getelementptr inbounds i8, i8* %201, i64 -8
  %225 = load i8, i8* %224, align 1, !tbaa !16
  store i8 %225, i8* %223, align 1, !tbaa !16
  %226 = getelementptr inbounds i8, i8* %202, i64 8
  %227 = icmp eq i8* %224, %110
  br i1 %227, label %228, label %200, !llvm.loop !43

228:                                              ; preds = %196, %200, %176, %151
  %229 = load i64, i64* %8, align 8, !tbaa !15
  %230 = load i8*, i8** %40, align 8, !tbaa !3
  br label %231

231:                                              ; preds = %228, %119
  %232 = phi i8* [ %230, %228 ], [ %39, %119 ]
  %233 = phi i64 [ %229, %228 ], [ 0, %119 ]
  store i64 %233, i64* %42, align 8, !tbaa !13
  %234 = getelementptr inbounds i8, i8* %232, i64 %233
  store i8 0, i8* %234, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #7
  %235 = load i64, i64* %42, align 8, !tbaa !13
  %236 = load i64, i64* %34, align 8, !tbaa !13
  %237 = icmp eq i64 %235, %236
  br i1 %237, label %238, label %245

238:                                              ; preds = %231
  %239 = icmp eq i64 %235, 0
  br i1 %239, label %245, label %240

240:                                              ; preds = %238
  %241 = load i8*, i8** %32, align 8, !tbaa !3
  %242 = load i8*, i8** %40, align 8, !tbaa !3
  %243 = call i32 @bcmp(i8* %242, i8* %241, i64 %235) #7
  %244 = icmp eq i32 %243, 0
  br label %245

245:                                              ; preds = %240, %238, %231
  %246 = phi i1 [ false, %231 ], [ %244, %240 ], [ true, %238 ]
  %247 = load i8*, i8** %40, align 8, !tbaa !3
  %248 = icmp eq i8* %247, %39
  br i1 %248, label %250, label %249

249:                                              ; preds = %245
  call void @_ZdlPv(i8* %247) #7
  br label %250

250:                                              ; preds = %249, %245
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #7
  %251 = load i8*, i8** %32, align 8, !tbaa !3
  %252 = icmp eq i8* %251, %31
  br i1 %252, label %254, label %253

253:                                              ; preds = %250
  call void @_ZdlPv(i8* %251) #7
  br label %254

254:                                              ; preds = %250, %253
  br i1 %246, label %255, label %495

255:                                              ; preds = %254
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #7
  store %union.anon* %44, %union.anon** %45, align 8, !tbaa !14
  store i64 0, i64* %46, align 8, !tbaa !13
  store i8 0, i8* %47, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !44)
  %256 = load i64, i64* %18, align 8, !tbaa !13, !noalias !44
  store %union.anon* %49, %union.anon** %50, align 8, !tbaa !14, !alias.scope !44
  %257 = load i8*, i8** %23, align 8, !tbaa !3, !noalias !44
  %258 = icmp ugt i64 %256, %76
  %259 = select i1 %258, i64 %76, i64 %256
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #7, !noalias !44
  store i64 %259, i64* %7, align 8, !tbaa !15, !noalias !44
  %260 = icmp ugt i64 %259, 15
  br i1 %260, label %261, label %265

261:                                              ; preds = %255
  %262 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %15, i64* nonnull align 8 dereferenceable(8) %7, i64 0)
          to label %263 unwind label %476

263:                                              ; preds = %261
  store i8* %262, i8** %53, align 8, !tbaa !3, !alias.scope !44
  %264 = load i64, i64* %7, align 8, !tbaa !15, !noalias !44
  store i64 %264, i64* %54, align 8, !tbaa !16, !alias.scope !44
  br label %265

265:                                              ; preds = %263, %255
  %266 = phi i8* [ %262, %263 ], [ %51, %255 ]
  %267 = trunc i64 %259 to i32
  switch i32 %267, label %270 [
    i32 1, label %268
    i32 0, label %271
  ]

268:                                              ; preds = %265
  %269 = load i8, i8* %257, align 1, !tbaa !16
  store i8 %269, i8* %266, align 1, !tbaa !16
  br label %271

270:                                              ; preds = %265
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %266, i8* align 1 %257, i64 %259, i1 false) #7
  br label %271

271:                                              ; preds = %270, %268, %265
  %272 = load i64, i64* %7, align 8, !tbaa !15, !noalias !44
  store i64 %272, i64* %55, align 8, !tbaa !13, !alias.scope !44
  %273 = load i8*, i8** %53, align 8, !tbaa !3, !alias.scope !44
  %274 = getelementptr inbounds i8, i8* %273, i64 %272
  store i8 0, i8* %274, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #7, !noalias !44
  %275 = load i8*, i8** %53, align 8, !tbaa !3
  %276 = icmp eq i8* %275, %51
  br i1 %276, label %277, label %291

277:                                              ; preds = %271
  %278 = load i64, i64* %55, align 8, !tbaa !13
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %286, label %280

280:                                              ; preds = %277
  %281 = load i8*, i8** %56, align 8, !tbaa !3
  %282 = icmp eq i64 %278, 1
  br i1 %282, label %283, label %285

283:                                              ; preds = %280
  %284 = load i8, i8* %51, align 8, !tbaa !16
  store i8 %284, i8* %281, align 1, !tbaa !16
  br label %286

285:                                              ; preds = %280
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %281, i8* nonnull align 8 %51, i64 %278, i1 false) #7
  br label %286

286:                                              ; preds = %285, %283, %277
  %287 = load i64, i64* %55, align 8, !tbaa !13
  store i64 %287, i64* %46, align 8, !tbaa !13
  %288 = load i8*, i8** %56, align 8, !tbaa !3
  %289 = getelementptr inbounds i8, i8* %288, i64 %287
  store i8 0, i8* %289, align 1, !tbaa !16
  %290 = load i8*, i8** %53, align 8, !tbaa !3
  br label %302

291:                                              ; preds = %271
  %292 = load i8*, i8** %56, align 8, !tbaa !3
  %293 = icmp eq i8* %292, %47
  %294 = load i64, i64* %57, align 8
  store i8* %275, i8** %56, align 8, !tbaa !3
  %295 = bitcast i64* %55 to <2 x i64>*
  %296 = load <2 x i64>, <2 x i64>* %295, align 8, !tbaa !16
  %297 = bitcast i64* %46 to <2 x i64>*
  store <2 x i64> %296, <2 x i64>* %297, align 8, !tbaa !16
  %298 = icmp eq i8* %292, null
  %299 = or i1 %293, %298
  br i1 %299, label %301, label %300

300:                                              ; preds = %291
  store i8* %292, i8** %53, align 8, !tbaa !3
  store i64 %294, i64* %54, align 8, !tbaa !16
  br label %302

301:                                              ; preds = %291
  store %union.anon* %49, %union.anon** %50, align 8, !tbaa !3
  br label %302

302:                                              ; preds = %286, %300, %301
  %303 = phi i8* [ %290, %286 ], [ %292, %300 ], [ %51, %301 ]
  store i64 0, i64* %55, align 8, !tbaa !13
  store i8 0, i8* %303, align 1, !tbaa !16
  %304 = load i8*, i8** %53, align 8, !tbaa !3
  %305 = icmp eq i8* %304, %51
  br i1 %305, label %307, label %306

306:                                              ; preds = %302
  call void @_ZdlPv(i8* %304) #7
  br label %307

307:                                              ; preds = %302, %306
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #7
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #7
  %308 = load i8*, i8** %56, align 8, !tbaa !3, !noalias !47
  %309 = ptrtoint i8* %308 to i64
  %310 = load i64, i64* %46, align 8, !tbaa !13, !noalias !47
  %311 = getelementptr inbounds i8, i8* %308, i64 %310
  store %union.anon* %59, %union.anon** %60, align 8, !tbaa !14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #7
  store i64 %310, i64* %6, align 8, !tbaa !15
  %312 = icmp ugt i64 %310, 15
  br i1 %312, label %313, label %317

313:                                              ; preds = %307
  %314 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %16, i64* nonnull align 8 dereferenceable(8) %6, i64 0)
          to label %315 unwind label %478

315:                                              ; preds = %313
  store i8* %314, i8** %63, align 8, !tbaa !3
  %316 = load i64, i64* %6, align 8, !tbaa !15
  store i64 %316, i64* %64, align 8, !tbaa !16
  br label %319

317:                                              ; preds = %307
  %318 = icmp eq i64 %310, 0
  br i1 %318, label %429, label %319

319:                                              ; preds = %315, %317
  %320 = phi i8* [ %314, %315 ], [ %62, %317 ]
  %321 = icmp ult i64 %310, 4
  br i1 %321, label %376, label %322

322:                                              ; preds = %319
  %323 = getelementptr i8, i8* %320, i64 %310
  %324 = icmp ult i8* %320, %311
  %325 = icmp ult i8* %308, %323
  %326 = and i1 %324, %325
  br i1 %326, label %376, label %327

327:                                              ; preds = %322
  %328 = icmp ult i64 %310, 32
  br i1 %328, label %357, label %329

329:                                              ; preds = %327
  %330 = and i64 %310, -32
  br label %331

331:                                              ; preds = %331, %329
  %332 = phi i64 [ 0, %329 ], [ %347, %331 ]
  %333 = getelementptr i8, i8* %320, i64 %332
  %334 = xor i64 %332, -1
  %335 = getelementptr i8, i8* %311, i64 %334
  %336 = getelementptr inbounds i8, i8* %335, i64 -15
  %337 = bitcast i8* %336 to <16 x i8>*
  %338 = load <16 x i8>, <16 x i8>* %337, align 1, !tbaa !16, !alias.scope !50
  %339 = shufflevector <16 x i8> %338, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %340 = getelementptr inbounds i8, i8* %335, i64 -31
  %341 = bitcast i8* %340 to <16 x i8>*
  %342 = load <16 x i8>, <16 x i8>* %341, align 1, !tbaa !16, !alias.scope !50
  %343 = shufflevector <16 x i8> %342, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %344 = bitcast i8* %333 to <16 x i8>*
  store <16 x i8> %339, <16 x i8>* %344, align 1, !tbaa !16, !alias.scope !53, !noalias !50
  %345 = getelementptr i8, i8* %333, i64 16
  %346 = bitcast i8* %345 to <16 x i8>*
  store <16 x i8> %343, <16 x i8>* %346, align 1, !tbaa !16, !alias.scope !53, !noalias !50
  %347 = add nuw i64 %332, 32
  %348 = icmp eq i64 %347, %330
  br i1 %348, label %349, label %331, !llvm.loop !55

349:                                              ; preds = %331
  %350 = icmp eq i64 %310, %330
  br i1 %350, label %426, label %351

351:                                              ; preds = %349
  %352 = getelementptr i8, i8* %320, i64 %330
  %353 = sub i64 0, %330
  %354 = getelementptr i8, i8* %311, i64 %353
  %355 = and i64 %310, 28
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %376, label %357

357:                                              ; preds = %327, %351
  %358 = phi i64 [ %330, %351 ], [ 0, %327 ]
  %359 = and i64 %310, -4
  %360 = sub i64 0, %359
  %361 = getelementptr i8, i8* %311, i64 %360
  %362 = getelementptr i8, i8* %320, i64 %359
  br label %363

363:                                              ; preds = %363, %357
  %364 = phi i64 [ %358, %357 ], [ %372, %363 ]
  %365 = getelementptr i8, i8* %320, i64 %364
  %366 = sub nuw nsw i64 -4, %364
  %367 = getelementptr i8, i8* %311, i64 %366
  %368 = bitcast i8* %367 to <4 x i8>*
  %369 = load <4 x i8>, <4 x i8>* %368, align 1, !tbaa !16
  %370 = shufflevector <4 x i8> %369, <4 x i8> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %371 = bitcast i8* %365 to <4 x i8>*
  store <4 x i8> %370, <4 x i8>* %371, align 1, !tbaa !16
  %372 = add nuw i64 %364, 4
  %373 = icmp eq i64 %372, %359
  br i1 %373, label %374, label %363, !llvm.loop !56

374:                                              ; preds = %363
  %375 = icmp eq i64 %310, %359
  br i1 %375, label %426, label %376

376:                                              ; preds = %322, %319, %351, %374
  %377 = phi i8* [ %311, %319 ], [ %311, %322 ], [ %354, %351 ], [ %361, %374 ]
  %378 = phi i8* [ %320, %319 ], [ %320, %322 ], [ %352, %351 ], [ %362, %374 ]
  %379 = ptrtoint i8* %377 to i64
  %380 = sub i64 %379, %309
  %381 = xor i64 %309, -1
  %382 = add i64 %381, %379
  %383 = and i64 %380, 7
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %394, label %385

385:                                              ; preds = %376, %385
  %386 = phi i8* [ %389, %385 ], [ %377, %376 ]
  %387 = phi i8* [ %391, %385 ], [ %378, %376 ]
  %388 = phi i64 [ %392, %385 ], [ %383, %376 ]
  %389 = getelementptr inbounds i8, i8* %386, i64 -1
  %390 = load i8, i8* %389, align 1, !tbaa !16
  store i8 %390, i8* %387, align 1, !tbaa !16
  %391 = getelementptr inbounds i8, i8* %387, i64 1
  %392 = add i64 %388, -1
  %393 = icmp eq i64 %392, 0
  br i1 %393, label %394, label %385, !llvm.loop !57

394:                                              ; preds = %385, %376
  %395 = phi i8* [ %377, %376 ], [ %389, %385 ]
  %396 = phi i8* [ %378, %376 ], [ %391, %385 ]
  %397 = icmp ult i64 %382, 7
  br i1 %397, label %426, label %398

398:                                              ; preds = %394, %398
  %399 = phi i8* [ %422, %398 ], [ %395, %394 ]
  %400 = phi i8* [ %424, %398 ], [ %396, %394 ]
  %401 = getelementptr inbounds i8, i8* %399, i64 -1
  %402 = load i8, i8* %401, align 1, !tbaa !16
  store i8 %402, i8* %400, align 1, !tbaa !16
  %403 = getelementptr inbounds i8, i8* %400, i64 1
  %404 = getelementptr inbounds i8, i8* %399, i64 -2
  %405 = load i8, i8* %404, align 1, !tbaa !16
  store i8 %405, i8* %403, align 1, !tbaa !16
  %406 = getelementptr inbounds i8, i8* %400, i64 2
  %407 = getelementptr inbounds i8, i8* %399, i64 -3
  %408 = load i8, i8* %407, align 1, !tbaa !16
  store i8 %408, i8* %406, align 1, !tbaa !16
  %409 = getelementptr inbounds i8, i8* %400, i64 3
  %410 = getelementptr inbounds i8, i8* %399, i64 -4
  %411 = load i8, i8* %410, align 1, !tbaa !16
  store i8 %411, i8* %409, align 1, !tbaa !16
  %412 = getelementptr inbounds i8, i8* %400, i64 4
  %413 = getelementptr inbounds i8, i8* %399, i64 -5
  %414 = load i8, i8* %413, align 1, !tbaa !16
  store i8 %414, i8* %412, align 1, !tbaa !16
  %415 = getelementptr inbounds i8, i8* %400, i64 5
  %416 = getelementptr inbounds i8, i8* %399, i64 -6
  %417 = load i8, i8* %416, align 1, !tbaa !16
  store i8 %417, i8* %415, align 1, !tbaa !16
  %418 = getelementptr inbounds i8, i8* %400, i64 6
  %419 = getelementptr inbounds i8, i8* %399, i64 -7
  %420 = load i8, i8* %419, align 1, !tbaa !16
  store i8 %420, i8* %418, align 1, !tbaa !16
  %421 = getelementptr inbounds i8, i8* %400, i64 7
  %422 = getelementptr inbounds i8, i8* %399, i64 -8
  %423 = load i8, i8* %422, align 1, !tbaa !16
  store i8 %423, i8* %421, align 1, !tbaa !16
  %424 = getelementptr inbounds i8, i8* %400, i64 8
  %425 = icmp eq i8* %422, %308
  br i1 %425, label %426, label %398, !llvm.loop !58

426:                                              ; preds = %394, %398, %374, %349
  %427 = load i64, i64* %6, align 8, !tbaa !15
  %428 = load i8*, i8** %63, align 8, !tbaa !3
  br label %429

429:                                              ; preds = %426, %317
  %430 = phi i8* [ %428, %426 ], [ %62, %317 ]
  %431 = phi i64 [ %427, %426 ], [ %310, %317 ]
  store i64 %431, i64* %65, align 8, !tbaa !13
  %432 = getelementptr inbounds i8, i8* %430, i64 %431
  store i8 0, i8* %432, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !59)
  store %union.anon* %66, %union.anon** %67, align 8, !tbaa !14, !alias.scope !59
  %433 = load i8*, i8** %23, align 8, !tbaa !3, !noalias !59
  %434 = load i64, i64* %18, align 8, !tbaa !13, !noalias !59
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #7, !noalias !59
  store i64 %434, i64* %5, align 8, !tbaa !15, !noalias !59
  %435 = icmp ugt i64 %434, 15
  br i1 %435, label %436, label %440

436:                                              ; preds = %429
  %437 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
          to label %438 unwind label %480

438:                                              ; preds = %436
  store i8* %437, i8** %70, align 8, !tbaa !3, !alias.scope !59
  %439 = load i64, i64* %5, align 8, !tbaa !15, !noalias !59
  store i64 %439, i64* %71, align 8, !tbaa !16, !alias.scope !59
  br label %440

440:                                              ; preds = %429, %438
  %441 = phi i8* [ %437, %438 ], [ %69, %429 ]
  switch i64 %434, label %444 [
    i64 1, label %442
    i64 0, label %445
  ]

442:                                              ; preds = %440
  %443 = load i8, i8* %433, align 1, !tbaa !16
  store i8 %443, i8* %441, align 1, !tbaa !16
  br label %445

444:                                              ; preds = %440
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %441, i8* align 1 %433, i64 %434, i1 false) #7
  br label %445

445:                                              ; preds = %444, %442, %440
  %446 = load i64, i64* %5, align 8, !tbaa !15, !noalias !59
  store i64 %446, i64* %72, align 8, !tbaa !13, !alias.scope !59
  %447 = load i8*, i8** %70, align 8, !tbaa !3, !alias.scope !59
  %448 = getelementptr inbounds i8, i8* %447, i64 %446
  store i8 0, i8* %448, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #7, !noalias !59
  %449 = load i8*, i8** %63, align 8, !tbaa !3, !noalias !59
  %450 = load i64, i64* %65, align 8, !tbaa !13, !noalias !59
  %451 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %449, i64 %450)
          to label %457 unwind label %452

452:                                              ; preds = %445
  %453 = landingpad { i8*, i32 }
          cleanup
  %454 = load i8*, i8** %70, align 8, !tbaa !3, !alias.scope !59
  %455 = icmp eq i8* %454, %69
  br i1 %455, label %482, label %456

456:                                              ; preds = %452
  call void @_ZdlPv(i8* %454) #7
  br label %482

457:                                              ; preds = %445
  %458 = load i8*, i8** %63, align 8, !tbaa !3
  %459 = icmp eq i8* %458, %62
  br i1 %459, label %461, label %460

460:                                              ; preds = %457
  call void @_ZdlPv(i8* %458) #7
  br label %461

461:                                              ; preds = %457, %460
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #7
  %462 = load i8*, i8** %56, align 8, !tbaa !3
  %463 = icmp eq i8* %462, %47
  br i1 %463, label %465, label %464

464:                                              ; preds = %461
  call void @_ZdlPv(i8* %462) #7
  br label %465

465:                                              ; preds = %461, %464
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #7
  %466 = load i8*, i8** %25, align 8, !tbaa !3
  %467 = icmp eq i8* %466, %22
  br i1 %467, label %688, label %468

468:                                              ; preds = %465
  call void @_ZdlPv(i8* %466) #7
  br label %688

469:                                              ; preds = %97
  %470 = landingpad { i8*, i32 }
          cleanup
  br label %503

471:                                              ; preds = %115
  %472 = landingpad { i8*, i32 }
          cleanup
  %473 = load i8*, i8** %32, align 8, !tbaa !3
  %474 = icmp eq i8* %473, %31
  br i1 %474, label %503, label %475

475:                                              ; preds = %471
  call void @_ZdlPv(i8* %473) #7
  br label %503

476:                                              ; preds = %261
  %477 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #7
  br label %489

478:                                              ; preds = %313
  %479 = landingpad { i8*, i32 }
          cleanup
  br label %487

480:                                              ; preds = %436
  %481 = landingpad { i8*, i32 }
          cleanup
  br label %482

482:                                              ; preds = %452, %456, %480
  %483 = phi { i8*, i32 } [ %481, %480 ], [ %453, %456 ], [ %453, %452 ]
  %484 = load i8*, i8** %63, align 8, !tbaa !3
  %485 = icmp eq i8* %484, %62
  br i1 %485, label %487, label %486

486:                                              ; preds = %482
  call void @_ZdlPv(i8* %484) #7
  br label %487

487:                                              ; preds = %486, %482, %478
  %488 = phi { i8*, i32 } [ %479, %478 ], [ %483, %482 ], [ %483, %486 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #7
  br label %489

489:                                              ; preds = %487, %476
  %490 = phi { i8*, i32 } [ %488, %487 ], [ %477, %476 ]
  %491 = load i8*, i8** %56, align 8, !tbaa !3
  %492 = icmp eq i8* %491, %47
  br i1 %492, label %494, label %493

493:                                              ; preds = %489
  call void @_ZdlPv(i8* %491) #7
  br label %494

494:                                              ; preds = %489, %493
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #7
  br label %503

495:                                              ; preds = %254
  %496 = load i8*, i8** %25, align 8, !tbaa !3
  %497 = icmp eq i8* %496, %22
  br i1 %497, label %499, label %498

498:                                              ; preds = %495
  call void @_ZdlPv(i8* %496) #7
  br label %499

499:                                              ; preds = %498, %495
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #7
  %500 = add i64 %76, 1
  %501 = load i64, i64* %18, align 8, !tbaa !13
  %502 = icmp ugt i64 %501, %500
  br i1 %502, label %75, label %509, !llvm.loop !62

503:                                              ; preds = %475, %471, %494, %469
  %504 = phi { i8*, i32 } [ %490, %494 ], [ %470, %469 ], [ %472, %471 ], [ %472, %475 ]
  %505 = load i8*, i8** %25, align 8, !tbaa !3
  %506 = icmp eq i8* %505, %22
  br i1 %506, label %508, label %507

507:                                              ; preds = %503
  call void @_ZdlPv(i8* %505) #7
  br label %508

508:                                              ; preds = %503, %507
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #7
  br label %690

509:                                              ; preds = %499, %2
  %510 = phi i64 [ 0, %2 ], [ %501, %499 ]
  %511 = bitcast %"class.std::__cxx11::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %511) #7
  %512 = load i8*, i8** %23, align 8, !tbaa !3, !noalias !63
  %513 = ptrtoint i8* %512 to i64
  %514 = getelementptr inbounds i8, i8* %512, i64 %510
  %515 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %17, i64 0, i32 2
  %516 = bitcast %"class.std::__cxx11::basic_string"* %17 to %union.anon**
  store %union.anon* %515, %union.anon** %516, align 8, !tbaa !14
  %517 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %517) #7
  store i64 %510, i64* %4, align 8, !tbaa !15
  %518 = icmp ugt i64 %510, 15
  br i1 %518, label %519, label %525

519:                                              ; preds = %509
  %520 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %17, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %521 unwind label %676

521:                                              ; preds = %519
  %522 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %17, i64 0, i32 0, i32 0
  store i8* %520, i8** %522, align 8, !tbaa !3
  %523 = load i64, i64* %4, align 8, !tbaa !15
  %524 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %17, i64 0, i32 2, i32 0
  store i64 %523, i64* %524, align 8, !tbaa !16
  br label %528

525:                                              ; preds = %509
  %526 = bitcast %union.anon* %515 to i8*
  %527 = icmp eq i64 %510, 0
  br i1 %527, label %639, label %528

528:                                              ; preds = %521, %525
  %529 = phi i8* [ %520, %521 ], [ %526, %525 ]
  %530 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %17, i64 0, i32 0, i32 0
  %531 = icmp ult i64 %510, 4
  br i1 %531, label %586, label %532

532:                                              ; preds = %528
  %533 = getelementptr i8, i8* %529, i64 %510
  %534 = icmp ult i8* %529, %514
  %535 = icmp ult i8* %512, %533
  %536 = and i1 %534, %535
  br i1 %536, label %586, label %537

537:                                              ; preds = %532
  %538 = icmp ult i64 %510, 32
  br i1 %538, label %567, label %539

539:                                              ; preds = %537
  %540 = and i64 %510, -32
  br label %541

541:                                              ; preds = %541, %539
  %542 = phi i64 [ 0, %539 ], [ %557, %541 ]
  %543 = getelementptr i8, i8* %529, i64 %542
  %544 = xor i64 %542, -1
  %545 = getelementptr i8, i8* %514, i64 %544
  %546 = getelementptr inbounds i8, i8* %545, i64 -15
  %547 = bitcast i8* %546 to <16 x i8>*
  %548 = load <16 x i8>, <16 x i8>* %547, align 1, !tbaa !16, !alias.scope !66
  %549 = shufflevector <16 x i8> %548, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %550 = getelementptr inbounds i8, i8* %545, i64 -31
  %551 = bitcast i8* %550 to <16 x i8>*
  %552 = load <16 x i8>, <16 x i8>* %551, align 1, !tbaa !16, !alias.scope !66
  %553 = shufflevector <16 x i8> %552, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %554 = bitcast i8* %543 to <16 x i8>*
  store <16 x i8> %549, <16 x i8>* %554, align 1, !tbaa !16, !alias.scope !69, !noalias !66
  %555 = getelementptr i8, i8* %543, i64 16
  %556 = bitcast i8* %555 to <16 x i8>*
  store <16 x i8> %553, <16 x i8>* %556, align 1, !tbaa !16, !alias.scope !69, !noalias !66
  %557 = add nuw i64 %542, 32
  %558 = icmp eq i64 %557, %540
  br i1 %558, label %559, label %541, !llvm.loop !71

559:                                              ; preds = %541
  %560 = icmp eq i64 %510, %540
  br i1 %560, label %636, label %561

561:                                              ; preds = %559
  %562 = getelementptr i8, i8* %529, i64 %540
  %563 = sub i64 0, %540
  %564 = getelementptr i8, i8* %514, i64 %563
  %565 = and i64 %510, 28
  %566 = icmp eq i64 %565, 0
  br i1 %566, label %586, label %567

567:                                              ; preds = %537, %561
  %568 = phi i64 [ %540, %561 ], [ 0, %537 ]
  %569 = and i64 %510, -4
  %570 = sub i64 0, %569
  %571 = getelementptr i8, i8* %514, i64 %570
  %572 = getelementptr i8, i8* %529, i64 %569
  br label %573

573:                                              ; preds = %573, %567
  %574 = phi i64 [ %568, %567 ], [ %582, %573 ]
  %575 = getelementptr i8, i8* %529, i64 %574
  %576 = sub nuw nsw i64 -4, %574
  %577 = getelementptr i8, i8* %514, i64 %576
  %578 = bitcast i8* %577 to <4 x i8>*
  %579 = load <4 x i8>, <4 x i8>* %578, align 1, !tbaa !16
  %580 = shufflevector <4 x i8> %579, <4 x i8> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %581 = bitcast i8* %575 to <4 x i8>*
  store <4 x i8> %580, <4 x i8>* %581, align 1, !tbaa !16
  %582 = add nuw i64 %574, 4
  %583 = icmp eq i64 %582, %569
  br i1 %583, label %584, label %573, !llvm.loop !72

584:                                              ; preds = %573
  %585 = icmp eq i64 %510, %569
  br i1 %585, label %636, label %586

586:                                              ; preds = %532, %528, %561, %584
  %587 = phi i8* [ %514, %528 ], [ %514, %532 ], [ %564, %561 ], [ %571, %584 ]
  %588 = phi i8* [ %529, %528 ], [ %529, %532 ], [ %562, %561 ], [ %572, %584 ]
  %589 = ptrtoint i8* %587 to i64
  %590 = sub i64 %589, %513
  %591 = xor i64 %513, -1
  %592 = add i64 %591, %589
  %593 = and i64 %590, 7
  %594 = icmp eq i64 %593, 0
  br i1 %594, label %604, label %595

595:                                              ; preds = %586, %595
  %596 = phi i8* [ %599, %595 ], [ %587, %586 ]
  %597 = phi i8* [ %601, %595 ], [ %588, %586 ]
  %598 = phi i64 [ %602, %595 ], [ %593, %586 ]
  %599 = getelementptr inbounds i8, i8* %596, i64 -1
  %600 = load i8, i8* %599, align 1, !tbaa !16
  store i8 %600, i8* %597, align 1, !tbaa !16
  %601 = getelementptr inbounds i8, i8* %597, i64 1
  %602 = add i64 %598, -1
  %603 = icmp eq i64 %602, 0
  br i1 %603, label %604, label %595, !llvm.loop !73

604:                                              ; preds = %595, %586
  %605 = phi i8* [ %587, %586 ], [ %599, %595 ]
  %606 = phi i8* [ %588, %586 ], [ %601, %595 ]
  %607 = icmp ult i64 %592, 7
  br i1 %607, label %636, label %608

608:                                              ; preds = %604, %608
  %609 = phi i8* [ %632, %608 ], [ %605, %604 ]
  %610 = phi i8* [ %634, %608 ], [ %606, %604 ]
  %611 = getelementptr inbounds i8, i8* %609, i64 -1
  %612 = load i8, i8* %611, align 1, !tbaa !16
  store i8 %612, i8* %610, align 1, !tbaa !16
  %613 = getelementptr inbounds i8, i8* %610, i64 1
  %614 = getelementptr inbounds i8, i8* %609, i64 -2
  %615 = load i8, i8* %614, align 1, !tbaa !16
  store i8 %615, i8* %613, align 1, !tbaa !16
  %616 = getelementptr inbounds i8, i8* %610, i64 2
  %617 = getelementptr inbounds i8, i8* %609, i64 -3
  %618 = load i8, i8* %617, align 1, !tbaa !16
  store i8 %618, i8* %616, align 1, !tbaa !16
  %619 = getelementptr inbounds i8, i8* %610, i64 3
  %620 = getelementptr inbounds i8, i8* %609, i64 -4
  %621 = load i8, i8* %620, align 1, !tbaa !16
  store i8 %621, i8* %619, align 1, !tbaa !16
  %622 = getelementptr inbounds i8, i8* %610, i64 4
  %623 = getelementptr inbounds i8, i8* %609, i64 -5
  %624 = load i8, i8* %623, align 1, !tbaa !16
  store i8 %624, i8* %622, align 1, !tbaa !16
  %625 = getelementptr inbounds i8, i8* %610, i64 5
  %626 = getelementptr inbounds i8, i8* %609, i64 -6
  %627 = load i8, i8* %626, align 1, !tbaa !16
  store i8 %627, i8* %625, align 1, !tbaa !16
  %628 = getelementptr inbounds i8, i8* %610, i64 6
  %629 = getelementptr inbounds i8, i8* %609, i64 -7
  %630 = load i8, i8* %629, align 1, !tbaa !16
  store i8 %630, i8* %628, align 1, !tbaa !16
  %631 = getelementptr inbounds i8, i8* %610, i64 7
  %632 = getelementptr inbounds i8, i8* %609, i64 -8
  %633 = load i8, i8* %632, align 1, !tbaa !16
  store i8 %633, i8* %631, align 1, !tbaa !16
  %634 = getelementptr inbounds i8, i8* %610, i64 8
  %635 = icmp eq i8* %632, %512
  br i1 %635, label %636, label %608, !llvm.loop !74

636:                                              ; preds = %604, %608, %584, %559
  %637 = load i64, i64* %4, align 8, !tbaa !15
  %638 = load i8*, i8** %530, align 8, !tbaa !3
  br label %639

639:                                              ; preds = %636, %525
  %640 = phi i8* [ %638, %636 ], [ %526, %525 ]
  %641 = phi i64 [ %637, %636 ], [ 0, %525 ]
  %642 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %17, i64 0, i32 0, i32 0
  %643 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %17, i64 0, i32 1
  store i64 %641, i64* %643, align 8, !tbaa !13
  %644 = getelementptr inbounds i8, i8* %640, i64 %641
  store i8 0, i8* %644, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %517) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !75)
  store %union.anon* %66, %union.anon** %67, align 8, !tbaa !14, !alias.scope !75
  %645 = load i8*, i8** %23, align 8, !tbaa !3, !noalias !75
  %646 = load i64, i64* %18, align 8, !tbaa !13, !noalias !75
  %647 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %647) #7, !noalias !75
  store i64 %646, i64* %3, align 8, !tbaa !15, !noalias !75
  %648 = icmp ugt i64 %646, 15
  br i1 %648, label %649, label %653

649:                                              ; preds = %639
  %650 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %651 unwind label %678

651:                                              ; preds = %649
  store i8* %650, i8** %70, align 8, !tbaa !3, !alias.scope !75
  %652 = load i64, i64* %3, align 8, !tbaa !15, !noalias !75
  store i64 %652, i64* %71, align 8, !tbaa !16, !alias.scope !75
  br label %653

653:                                              ; preds = %639, %651
  %654 = phi i8* [ %650, %651 ], [ %69, %639 ]
  switch i64 %646, label %657 [
    i64 1, label %655
    i64 0, label %658
  ]

655:                                              ; preds = %653
  %656 = load i8, i8* %645, align 1, !tbaa !16
  store i8 %656, i8* %654, align 1, !tbaa !16
  br label %658

657:                                              ; preds = %653
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %654, i8* align 1 %645, i64 %646, i1 false) #7
  br label %658

658:                                              ; preds = %657, %655, %653
  %659 = load i64, i64* %3, align 8, !tbaa !15, !noalias !75
  store i64 %659, i64* %72, align 8, !tbaa !13, !alias.scope !75
  %660 = load i8*, i8** %70, align 8, !tbaa !3, !alias.scope !75
  %661 = getelementptr inbounds i8, i8* %660, i64 %659
  store i8 0, i8* %661, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %647) #7, !noalias !75
  %662 = load i8*, i8** %642, align 8, !tbaa !3, !noalias !75
  %663 = load i64, i64* %643, align 8, !tbaa !13, !noalias !75
  %664 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %662, i64 %663)
          to label %670 unwind label %665

665:                                              ; preds = %658
  %666 = landingpad { i8*, i32 }
          cleanup
  %667 = load i8*, i8** %70, align 8, !tbaa !3, !alias.scope !75
  %668 = icmp eq i8* %667, %69
  br i1 %668, label %680, label %669

669:                                              ; preds = %665
  call void @_ZdlPv(i8* %667) #7
  br label %680

670:                                              ; preds = %658
  %671 = load i8*, i8** %642, align 8, !tbaa !3
  %672 = bitcast %union.anon* %515 to i8*
  %673 = icmp eq i8* %671, %672
  br i1 %673, label %675, label %674

674:                                              ; preds = %670
  call void @_ZdlPv(i8* %671) #7
  br label %675

675:                                              ; preds = %670, %674
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %511) #7
  br label %689

676:                                              ; preds = %519
  %677 = landingpad { i8*, i32 }
          cleanup
  br label %686

678:                                              ; preds = %649
  %679 = landingpad { i8*, i32 }
          cleanup
  br label %680

680:                                              ; preds = %665, %669, %678
  %681 = phi { i8*, i32 } [ %679, %678 ], [ %666, %669 ], [ %666, %665 ]
  %682 = load i8*, i8** %642, align 8, !tbaa !3
  %683 = bitcast %union.anon* %515 to i8*
  %684 = icmp eq i8* %682, %683
  br i1 %684, label %686, label %685

685:                                              ; preds = %680
  call void @_ZdlPv(i8* %682) #7
  br label %686

686:                                              ; preds = %685, %680, %676
  %687 = phi { i8*, i32 } [ %677, %676 ], [ %681, %680 ], [ %681, %685 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %511) #7
  br label %690

688:                                              ; preds = %468, %465
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #7
  br label %689

689:                                              ; preds = %688, %675
  ret void

690:                                              ; preds = %686, %508
  %691 = phi { i8*, i32 } [ %504, %508 ], [ %687, %686 ]
  resume { i8*, i32 } %691
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #6

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly nofree nounwind readonly willreturn }
attributes #6 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !6, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv: argument 0"}
!12 = distinct !{!12, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv"}
!13 = !{!4, !9, i64 8}
!14 = !{!5, !6, i64 0}
!15 = !{!9, !9, i64 0}
!16 = !{!7, !7, i64 0}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !23, !24}
!23 = !{!"llvm.loop.mustprogress"}
!24 = !{!"llvm.loop.isvectorized", i32 1}
!25 = distinct !{!25, !23, !24}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.unroll.disable"}
!28 = distinct !{!28, !23, !24}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!31 = distinct !{!31, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv: argument 0"}
!34 = distinct !{!34, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv"}
!35 = !{!36}
!36 = distinct !{!36, !37}
!37 = distinct !{!37, !"LVerDomain"}
!38 = !{!39}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !23, !24}
!41 = distinct !{!41, !23, !24}
!42 = distinct !{!42, !27}
!43 = distinct !{!43, !23, !24}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!46 = distinct !{!46, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv: argument 0"}
!49 = distinct !{!49, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv"}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !23, !24}
!56 = distinct !{!56, !23, !24}
!57 = distinct !{!57, !27}
!58 = distinct !{!58, !23, !24}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!61 = distinct !{!61, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!62 = distinct !{!62, !23}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv: argument 0"}
!65 = distinct !{!65, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv"}
!66 = !{!67}
!67 = distinct !{!67, !68}
!68 = distinct !{!68, !"LVerDomain"}
!69 = !{!70}
!70 = distinct !{!70, !68}
!71 = distinct !{!71, !23, !24}
!72 = distinct !{!72, !23, !24}
!73 = distinct !{!73, !27}
!74 = distinct !{!74, !23, !24}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!77 = distinct !{!77, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
