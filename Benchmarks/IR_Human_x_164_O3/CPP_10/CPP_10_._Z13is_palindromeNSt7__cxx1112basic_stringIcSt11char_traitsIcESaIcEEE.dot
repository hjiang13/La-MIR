digraph "CFG for '_Z13is_palindromeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function" {
	label="CFG for '_Z13is_palindromeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function";

	Node0x559e335060a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%1:\l  %2 = alloca i64, align 8\l  %3 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %4 = bitcast %\"class.std::__cxx11::basic_string\"* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #7\l  %5 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %6 = load i8*, i8** %5, align 8, !tbaa !3, !noalias !10\l  %7 = ptrtoint i8* %6 to i64\l  %8 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  %9 = load i64, i64* %8, align 8, !tbaa !13, !noalias !10\l  %10 = getelementptr inbounds i8, i8* %6, i64 %9\l  %11 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 2\l  %12 = bitcast %\"class.std::__cxx11::basic_string\"* %3 to %union.anon**\l  store %union.anon* %11, %union.anon** %12, align 8, !tbaa !14\l  %13 = bitcast i64* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7\l  store i64 %9, i64* %2, align 8, !tbaa !15\l  %14 = icmp ugt i64 %9, 15\l  br i1 %14, label %15, label %20\l|{<s0>T|<s1>F}}"];
	Node0x559e335060a0:s0 -> Node0x559e33509920;
	Node0x559e335060a0:s1 -> Node0x559e335099b0;
	Node0x559e33509920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%15:\l15:                                               \l  %16 = call i8*\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%\"class.s\l...td::__cxx11::basic_string\"* nonnull align 8 dereferenceable(32) %3, i64*\l... nonnull align 8 dereferenceable(8) %2, i64 0)\l  %17 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 0, i32 0\l  store i8* %16, i8** %17, align 8, !tbaa !3\l  %18 = load i64, i64* %2, align 8, !tbaa !15\l  %19 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 2, i32 0\l  store i64 %18, i64* %19, align 8, !tbaa !16\l  br label %23\l}"];
	Node0x559e33509920 -> Node0x559e33509af0;
	Node0x559e335099b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%20:\l20:                                               \l  %21 = bitcast %union.anon* %11 to i8*\l  %22 = icmp eq i64 %9, 0\l  br i1 %22, label %134, label %23\l|{<s0>T|<s1>F}}"];
	Node0x559e335099b0:s0 -> Node0x559e3350ad20;
	Node0x559e335099b0:s1 -> Node0x559e33509af0;
	Node0x559e33509af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%23:\l23:                                               \l  %24 = phi i8* [ %16, %15 ], [ %21, %20 ]\l  %25 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 0, i32 0\l  %26 = icmp ult i64 %9, 4\l  br i1 %26, label %81, label %27\l|{<s0>T|<s1>F}}"];
	Node0x559e33509af0:s0 -> Node0x559e3350b070;
	Node0x559e33509af0:s1 -> Node0x559e3350b0c0;
	Node0x559e3350b0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%27:\l27:                                               \l  %28 = getelementptr i8, i8* %24, i64 %9\l  %29 = icmp ult i8* %24, %10\l  %30 = icmp ult i8* %6, %28\l  %31 = and i1 %29, %30\l  br i1 %31, label %81, label %32\l|{<s0>T|<s1>F}}"];
	Node0x559e3350b0c0:s0 -> Node0x559e3350b070;
	Node0x559e3350b0c0:s1 -> Node0x559e3350b450;
	Node0x559e3350b450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%32:\l32:                                               \l  %33 = icmp ult i64 %9, 32\l  br i1 %33, label %62, label %34\l|{<s0>T|<s1>F}}"];
	Node0x559e3350b450:s0 -> Node0x559e3350b7f0;
	Node0x559e3350b450:s1 -> Node0x559e3350b840;
	Node0x559e3350b840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%34:\l34:                                               \l  %35 = and i64 %9, -32\l  br label %36\l}"];
	Node0x559e3350b840 -> Node0x559e3350ba40;
	Node0x559e3350ba40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%36:\l36:                                               \l  %37 = phi i64 [ 0, %34 ], [ %52, %36 ]\l  %38 = getelementptr i8, i8* %24, i64 %37\l  %39 = xor i64 %37, -1\l  %40 = getelementptr i8, i8* %10, i64 %39\l  %41 = getelementptr inbounds i8, i8* %40, i64 -15\l  %42 = bitcast i8* %41 to \<16 x i8\>*\l  %43 = load \<16 x i8\>, \<16 x i8\>* %42, align 1, !tbaa !16, !alias.scope !17\l  %44 = shufflevector \<16 x i8\> %43, \<16 x i8\> poison, \<16 x i32\> \<i32 15, i32\l... 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4,\l... i32 3, i32 2, i32 1, i32 0\>\l  %45 = getelementptr inbounds i8, i8* %40, i64 -31\l  %46 = bitcast i8* %45 to \<16 x i8\>*\l  %47 = load \<16 x i8\>, \<16 x i8\>* %46, align 1, !tbaa !16, !alias.scope !17\l  %48 = shufflevector \<16 x i8\> %47, \<16 x i8\> poison, \<16 x i32\> \<i32 15, i32\l... 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4,\l... i32 3, i32 2, i32 1, i32 0\>\l  %49 = bitcast i8* %38 to \<16 x i8\>*\l  store \<16 x i8\> %44, \<16 x i8\>* %49, align 1, !tbaa !16, !alias.scope !20,\l... !noalias !17\l  %50 = getelementptr i8, i8* %38, i64 16\l  %51 = bitcast i8* %50 to \<16 x i8\>*\l  store \<16 x i8\> %48, \<16 x i8\>* %51, align 1, !tbaa !16, !alias.scope !20,\l... !noalias !17\l  %52 = add nuw i64 %37, 32\l  %53 = icmp eq i64 %52, %35\l  br i1 %53, label %54, label %36, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x559e3350ba40:s0 -> Node0x559e3350eab0;
	Node0x559e3350ba40:s1 -> Node0x559e3350ba40;
	Node0x559e3350eab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%54:\l54:                                               \l  %55 = icmp eq i64 %9, %35\l  br i1 %55, label %131, label %56\l|{<s0>T|<s1>F}}"];
	Node0x559e3350eab0:s0 -> Node0x559e3350ed60;
	Node0x559e3350eab0:s1 -> Node0x559e3350edb0;
	Node0x559e3350edb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%56:\l56:                                               \l  %57 = getelementptr i8, i8* %24, i64 %35\l  %58 = sub i64 0, %35\l  %59 = getelementptr i8, i8* %10, i64 %58\l  %60 = and i64 %9, 28\l  %61 = icmp eq i64 %60, 0\l  br i1 %61, label %81, label %62\l|{<s0>T|<s1>F}}"];
	Node0x559e3350edb0:s0 -> Node0x559e3350b070;
	Node0x559e3350edb0:s1 -> Node0x559e3350b7f0;
	Node0x559e3350b7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%62:\l62:                                               \l  %63 = phi i64 [ %35, %56 ], [ 0, %32 ]\l  %64 = and i64 %9, -4\l  %65 = sub i64 0, %64\l  %66 = getelementptr i8, i8* %10, i64 %65\l  %67 = getelementptr i8, i8* %24, i64 %64\l  br label %68\l}"];
	Node0x559e3350b7f0 -> Node0x559e3350f9e0;
	Node0x559e3350f9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%68:\l68:                                               \l  %69 = phi i64 [ %63, %62 ], [ %77, %68 ]\l  %70 = getelementptr i8, i8* %24, i64 %69\l  %71 = sub nuw nsw i64 -4, %69\l  %72 = getelementptr i8, i8* %10, i64 %71\l  %73 = bitcast i8* %72 to \<4 x i8\>*\l  %74 = load \<4 x i8\>, \<4 x i8\>* %73, align 1, !tbaa !16\l  %75 = shufflevector \<4 x i8\> %74, \<4 x i8\> poison, \<4 x i32\> \<i32 3, i32 2,\l... i32 1, i32 0\>\l  %76 = bitcast i8* %70 to \<4 x i8\>*\l  store \<4 x i8\> %75, \<4 x i8\>* %76, align 1, !tbaa !16\l  %77 = add nuw i64 %69, 4\l  %78 = icmp eq i64 %77, %64\l  br i1 %78, label %79, label %68, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x559e3350f9e0:s0 -> Node0x559e33510150;
	Node0x559e3350f9e0:s1 -> Node0x559e3350f9e0;
	Node0x559e33510150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%79:\l79:                                               \l  %80 = icmp eq i64 %9, %64\l  br i1 %80, label %131, label %81\l|{<s0>T|<s1>F}}"];
	Node0x559e33510150:s0 -> Node0x559e3350ed60;
	Node0x559e33510150:s1 -> Node0x559e3350b070;
	Node0x559e3350b070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%81:\l81:                                               \l  %82 = phi i8* [ %10, %23 ], [ %10, %27 ], [ %59, %56 ], [ %66, %79 ]\l  %83 = phi i8* [ %24, %23 ], [ %24, %27 ], [ %57, %56 ], [ %67, %79 ]\l  %84 = ptrtoint i8* %82 to i64\l  %85 = sub i64 %84, %7\l  %86 = xor i64 %7, -1\l  %87 = add i64 %86, %84\l  %88 = and i64 %85, 7\l  %89 = icmp eq i64 %88, 0\l  br i1 %89, label %99, label %90\l|{<s0>T|<s1>F}}"];
	Node0x559e3350b070:s0 -> Node0x559e335109f0;
	Node0x559e3350b070:s1 -> Node0x559e33510a40;
	Node0x559e33510a40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  %91 = phi i8* [ %94, %90 ], [ %82, %81 ]\l  %92 = phi i8* [ %96, %90 ], [ %83, %81 ]\l  %93 = phi i64 [ %97, %90 ], [ %88, %81 ]\l  %94 = getelementptr inbounds i8, i8* %91, i64 -1\l  %95 = load i8, i8* %94, align 1, !tbaa !16\l  store i8 %95, i8* %92, align 1, !tbaa !16\l  %96 = getelementptr inbounds i8, i8* %92, i64 1\l  %97 = add i64 %93, -1\l  %98 = icmp eq i64 %97, 0\l  br i1 %98, label %99, label %90, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x559e33510a40:s0 -> Node0x559e335109f0;
	Node0x559e33510a40:s1 -> Node0x559e33510a40;
	Node0x559e335109f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%99:\l99:                                               \l  %100 = phi i8* [ %82, %81 ], [ %94, %90 ]\l  %101 = phi i8* [ %83, %81 ], [ %96, %90 ]\l  %102 = icmp ult i64 %87, 7\l  br i1 %102, label %131, label %103\l|{<s0>T|<s1>F}}"];
	Node0x559e335109f0:s0 -> Node0x559e3350ed60;
	Node0x559e335109f0:s1 -> Node0x559e33511500;
	Node0x559e33511500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%103:\l103:                                              \l  %104 = phi i8* [ %127, %103 ], [ %100, %99 ]\l  %105 = phi i8* [ %129, %103 ], [ %101, %99 ]\l  %106 = getelementptr inbounds i8, i8* %104, i64 -1\l  %107 = load i8, i8* %106, align 1, !tbaa !16\l  store i8 %107, i8* %105, align 1, !tbaa !16\l  %108 = getelementptr inbounds i8, i8* %105, i64 1\l  %109 = getelementptr inbounds i8, i8* %104, i64 -2\l  %110 = load i8, i8* %109, align 1, !tbaa !16\l  store i8 %110, i8* %108, align 1, !tbaa !16\l  %111 = getelementptr inbounds i8, i8* %105, i64 2\l  %112 = getelementptr inbounds i8, i8* %104, i64 -3\l  %113 = load i8, i8* %112, align 1, !tbaa !16\l  store i8 %113, i8* %111, align 1, !tbaa !16\l  %114 = getelementptr inbounds i8, i8* %105, i64 3\l  %115 = getelementptr inbounds i8, i8* %104, i64 -4\l  %116 = load i8, i8* %115, align 1, !tbaa !16\l  store i8 %116, i8* %114, align 1, !tbaa !16\l  %117 = getelementptr inbounds i8, i8* %105, i64 4\l  %118 = getelementptr inbounds i8, i8* %104, i64 -5\l  %119 = load i8, i8* %118, align 1, !tbaa !16\l  store i8 %119, i8* %117, align 1, !tbaa !16\l  %120 = getelementptr inbounds i8, i8* %105, i64 5\l  %121 = getelementptr inbounds i8, i8* %104, i64 -6\l  %122 = load i8, i8* %121, align 1, !tbaa !16\l  store i8 %122, i8* %120, align 1, !tbaa !16\l  %123 = getelementptr inbounds i8, i8* %105, i64 6\l  %124 = getelementptr inbounds i8, i8* %104, i64 -7\l  %125 = load i8, i8* %124, align 1, !tbaa !16\l  store i8 %125, i8* %123, align 1, !tbaa !16\l  %126 = getelementptr inbounds i8, i8* %105, i64 7\l  %127 = getelementptr inbounds i8, i8* %104, i64 -8\l  %128 = load i8, i8* %127, align 1, !tbaa !16\l  store i8 %128, i8* %126, align 1, !tbaa !16\l  %129 = getelementptr inbounds i8, i8* %105, i64 8\l  %130 = icmp eq i8* %127, %6\l  br i1 %130, label %131, label %103, !llvm.loop !28\l|{<s0>T|<s1>F}}"];
	Node0x559e33511500:s0 -> Node0x559e3350ed60;
	Node0x559e33511500:s1 -> Node0x559e33511500;
	Node0x559e3350ed60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%131:\l131:                                              \l  %132 = load i64, i64* %2, align 8, !tbaa !15\l  %133 = load i8*, i8** %25, align 8, !tbaa !3\l  br label %134\l}"];
	Node0x559e3350ed60 -> Node0x559e3350ad20;
	Node0x559e3350ad20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%134:\l134:                                              \l  %135 = phi i8* [ %133, %131 ], [ %21, %20 ]\l  %136 = phi i64 [ %132, %131 ], [ 0, %20 ]\l  %137 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 0, i32 0\l  %138 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 1\l  store i64 %136, i64* %138, align 8, !tbaa !13\l  %139 = getelementptr inbounds i8, i8* %135, i64 %136\l  store i8 0, i8* %139, align 1, !tbaa !16\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7\l  %140 = load i64, i64* %138, align 8, !tbaa !13\l  %141 = load i64, i64* %8, align 8, !tbaa !13\l  %142 = icmp eq i64 %140, %141\l  br i1 %142, label %143, label %150\l|{<s0>T|<s1>F}}"];
	Node0x559e3350ad20:s0 -> Node0x559e33514550;
	Node0x559e3350ad20:s1 -> Node0x559e335145a0;
	Node0x559e33514550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%143:\l143:                                              \l  %144 = icmp eq i64 %140, 0\l  br i1 %144, label %150, label %145\l|{<s0>T|<s1>F}}"];
	Node0x559e33514550:s0 -> Node0x559e335145a0;
	Node0x559e33514550:s1 -> Node0x559e33514730;
	Node0x559e33514730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%145:\l145:                                              \l  %146 = load i8*, i8** %5, align 8, !tbaa !3\l  %147 = load i8*, i8** %137, align 8, !tbaa !3\l  %148 = call i32 @bcmp(i8* %147, i8* %146, i64 %140) #7\l  %149 = icmp eq i32 %148, 0\l  br label %150\l}"];
	Node0x559e33514730 -> Node0x559e335145a0;
	Node0x559e335145a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%150:\l150:                                              \l  %151 = phi i1 [ false, %134 ], [ %149, %145 ], [ true, %143 ]\l  %152 = load i8*, i8** %137, align 8, !tbaa !3\l  %153 = bitcast %union.anon* %11 to i8*\l  %154 = icmp eq i8* %152, %153\l  br i1 %154, label %156, label %155\l|{<s0>T|<s1>F}}"];
	Node0x559e335145a0:s0 -> Node0x559e33514f10;
	Node0x559e335145a0:s1 -> Node0x559e33514f60;
	Node0x559e33514f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%155:\l155:                                              \l  call void @_ZdlPv(i8* %152) #7\l  br label %156\l}"];
	Node0x559e33514f60 -> Node0x559e33514f10;
	Node0x559e33514f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%156:\l156:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #7\l  ret i1 %151\l}"];
}
