; ModuleID = '../../Human_xBenchmarks_164/CPP_143/CPP_143.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_143/CPP_143.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$__clang_call_terminate = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: uwtable
define dso_local void @_Z17words_in_sentenceNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = alloca %"class.std::__cxx11::basic_string", align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %11, %union.anon** %12, align 8, !tbaa !3
  %13 = bitcast %union.anon* %11 to i8*
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %15, align 8, !tbaa !8
  store i8 0, i8* %13, align 8, !tbaa !11
  %16 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #7
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %18 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  store %union.anon* %17, %union.anon** %18, align 8, !tbaa !3
  %19 = bitcast %union.anon* %17 to i8*
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  store i64 0, i64* %21, align 8, !tbaa !8
  store i8 0, i8* %19, align 8, !tbaa !11
  %22 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !12)
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %24 = bitcast %"class.std::__cxx11::basic_string"* %7 to %union.anon**
  store %union.anon* %23, %union.anon** %24, align 8, !tbaa !3, !alias.scope !12
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8, !tbaa !15, !noalias !12
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %28 = load i64, i64* %27, align 8, !tbaa !8, !noalias !12
  %29 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #7, !noalias !12
  store i64 %28, i64* %5, align 8, !tbaa !16, !noalias !12
  %30 = icmp ugt i64 %28, 15
  br i1 %30, label %33, label %31

31:                                               ; preds = %2
  %32 = bitcast %union.anon* %23 to i8*
  br label %39

33:                                               ; preds = %2
  %34 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
          to label %35 unwind label %132

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  store i8* %34, i8** %36, align 8, !tbaa !15, !alias.scope !12
  %37 = load i64, i64* %5, align 8, !tbaa !16, !noalias !12
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 0
  store i64 %37, i64* %38, align 8, !tbaa !11, !alias.scope !12
  br label %39

39:                                               ; preds = %35, %31
  %40 = phi i8* [ %32, %31 ], [ %34, %35 ]
  switch i64 %28, label %43 [
    i64 1, label %41
    i64 0, label %44
  ]

41:                                               ; preds = %39
  %42 = load i8, i8* %26, align 1, !tbaa !11
  store i8 %42, i8* %40, align 1, !tbaa !11
  br label %44

43:                                               ; preds = %39
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* align 1 %26, i64 %28, i1 false) #7
  br label %44

44:                                               ; preds = %43, %41, %39
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %46 = load i64, i64* %5, align 8, !tbaa !16, !noalias !12
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  store i64 %46, i64* %47, align 8, !tbaa !8, !alias.scope !12
  %48 = load i8*, i8** %45, align 8, !tbaa !15, !alias.scope !12
  %49 = getelementptr inbounds i8, i8* %48, i64 %46
  store i8 0, i8* %49, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #7, !noalias !12
  %50 = load i64, i64* %47, align 8, !tbaa !8, !alias.scope !12
  %51 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i64 %50, i64 0, i64 1, i8 signext 32)
          to label %58 unwind label %52

52:                                               ; preds = %44
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = load i8*, i8** %45, align 8, !tbaa !15, !alias.scope !12
  %55 = bitcast %union.anon* %23 to i8*
  %56 = icmp eq i8* %54, %55
  br i1 %56, label %134, label %57

57:                                               ; preds = %52
  call void @_ZdlPv(i8* %54) #7
  br label %134

58:                                               ; preds = %44
  %59 = load i8*, i8** %45, align 8, !tbaa !15
  %60 = bitcast %union.anon* %23 to i8*
  %61 = icmp eq i8* %59, %60
  br i1 %61, label %62, label %76

62:                                               ; preds = %58
  %63 = load i64, i64* %47, align 8, !tbaa !8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %71, label %65

65:                                               ; preds = %62
  %66 = load i8*, i8** %25, align 8, !tbaa !15
  %67 = icmp eq i64 %63, 1
  br i1 %67, label %68, label %70

68:                                               ; preds = %65
  %69 = load i8, i8* %60, align 8, !tbaa !11
  store i8 %69, i8* %66, align 1, !tbaa !11
  br label %71

70:                                               ; preds = %65
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* nonnull align 8 %60, i64 %63, i1 false) #7
  br label %71

71:                                               ; preds = %70, %68, %62
  %72 = load i64, i64* %47, align 8, !tbaa !8
  store i64 %72, i64* %27, align 8, !tbaa !8
  %73 = load i8*, i8** %25, align 8, !tbaa !15
  %74 = getelementptr inbounds i8, i8* %73, i64 %72
  store i8 0, i8* %74, align 1, !tbaa !11
  %75 = load i8*, i8** %45, align 8, !tbaa !15
  br label %91

76:                                               ; preds = %58
  %77 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 2
  %78 = bitcast %union.anon* %77 to i8*
  %79 = load i8*, i8** %25, align 8, !tbaa !15
  %80 = icmp eq i8* %79, %78
  %81 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 2, i32 0
  %82 = load i64, i64* %81, align 8
  store i8* %59, i8** %25, align 8, !tbaa !15
  %83 = bitcast i64* %47 to <2 x i64>*
  %84 = load <2 x i64>, <2 x i64>* %83, align 8, !tbaa !11
  %85 = bitcast i64* %27 to <2 x i64>*
  store <2 x i64> %84, <2 x i64>* %85, align 8, !tbaa !11
  %86 = icmp eq i8* %79, null
  %87 = or i1 %80, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %76
  store i8* %79, i8** %45, align 8, !tbaa !15
  %89 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 0
  store i64 %82, i64* %89, align 8, !tbaa !11
  br label %91

90:                                               ; preds = %76
  store %union.anon* %23, %union.anon** %24, align 8, !tbaa !15
  br label %91

91:                                               ; preds = %71, %88, %90
  %92 = phi i8* [ %75, %71 ], [ %79, %88 ], [ %60, %90 ]
  store i64 0, i64* %47, align 8, !tbaa !8
  store i8 0, i8* %92, align 1, !tbaa !11
  %93 = load i8*, i8** %45, align 8, !tbaa !15
  %94 = icmp eq i8* %93, %60
  br i1 %94, label %96, label %95

95:                                               ; preds = %91
  call void @_ZdlPv(i8* %93) #7
  br label %96

96:                                               ; preds = %91, %95
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #7
  %97 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  %98 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %99 = bitcast %"class.std::__cxx11::basic_string"* %8 to %union.anon**
  %100 = bitcast i64* %4 to i8*
  %101 = bitcast %union.anon* %98 to i8*
  %102 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %103 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  %104 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 1
  %105 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %106 = bitcast %"class.std::__cxx11::basic_string"* %9 to i8*
  %107 = bitcast %"class.std::__cxx11::basic_string"* %10 to i8*
  %108 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2
  %109 = bitcast %"class.std::__cxx11::basic_string"* %10 to %union.anon**
  %110 = bitcast i64* %3 to i8*
  %111 = bitcast %union.anon* %108 to i8*
  %112 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2, i32 0
  %114 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 1
  %115 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2
  %116 = bitcast %"class.std::__cxx11::basic_string"* %9 to %union.anon**
  %117 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2, i32 0
  %119 = bitcast %union.anon* %115 to i8*
  %120 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 1
  %121 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %122 = load i64, i64* %27, align 8, !tbaa !8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %129, label %124

124:                                              ; preds = %96
  %125 = bitcast i64* %104 to <2 x i64>*
  %126 = bitcast i64* %21 to <2 x i64>*
  %127 = bitcast i64* %120 to <2 x i64>*
  %128 = bitcast i64* %15 to <2 x i64>*
  br label %136

129:                                              ; preds = %313, %96
  %130 = load i64, i64* %15, align 8, !tbaa !8
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %322, label %317

132:                                              ; preds = %33
  %133 = landingpad { i8*, i32 }
          cleanup
  br label %134

134:                                              ; preds = %52, %57, %132
  %135 = phi { i8*, i32 } [ %133, %132 ], [ %53, %57 ], [ %53, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #7
  br label %327

136:                                              ; preds = %124, %313
  %137 = phi i64 [ %314, %313 ], [ 0, %124 ]
  %138 = load i8*, i8** %25, align 8, !tbaa !15
  %139 = getelementptr inbounds i8, i8* %138, i64 %137
  %140 = load i8, i8* %139, align 1, !tbaa !11
  %141 = icmp eq i8 %140, 32
  br i1 %141, label %202, label %142

142:                                              ; preds = %136
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %97) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !17)
  store %union.anon* %98, %union.anon** %99, align 8, !tbaa !3, !alias.scope !17
  %143 = load i8*, i8** %20, align 8, !tbaa !15, !noalias !17
  %144 = load i64, i64* %21, align 8, !tbaa !8, !noalias !17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #7, !noalias !17
  store i64 %144, i64* %4, align 8, !tbaa !16, !noalias !17
  %145 = icmp ugt i64 %144, 15
  br i1 %145, label %146, label %150

146:                                              ; preds = %142
  %147 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %148 unwind label %198

148:                                              ; preds = %146
  store i8* %147, i8** %102, align 8, !tbaa !15, !alias.scope !17
  %149 = load i64, i64* %4, align 8, !tbaa !16, !noalias !17
  store i64 %149, i64* %103, align 8, !tbaa !11, !alias.scope !17
  br label %150

150:                                              ; preds = %142, %148
  %151 = phi i8* [ %147, %148 ], [ %101, %142 ]
  switch i64 %144, label %154 [
    i64 1, label %152
    i64 0, label %155
  ]

152:                                              ; preds = %150
  %153 = load i8, i8* %143, align 1, !tbaa !11
  store i8 %153, i8* %151, align 1, !tbaa !11
  br label %155

154:                                              ; preds = %150
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %151, i8* align 1 %143, i64 %144, i1 false) #7
  br label %155

155:                                              ; preds = %154, %152, %150
  %156 = load i64, i64* %4, align 8, !tbaa !16, !noalias !17
  store i64 %156, i64* %104, align 8, !tbaa !8, !alias.scope !17
  %157 = load i8*, i8** %102, align 8, !tbaa !15, !alias.scope !17
  %158 = getelementptr inbounds i8, i8* %157, i64 %156
  store i8 0, i8* %158, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #7, !noalias !17
  %159 = load i64, i64* %104, align 8, !tbaa !8, !alias.scope !17
  %160 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64 %159, i64 0, i64 1, i8 signext %140)
          to label %166 unwind label %161

161:                                              ; preds = %155
  %162 = landingpad { i8*, i32 }
          cleanup
  %163 = load i8*, i8** %102, align 8, !tbaa !15, !alias.scope !17
  %164 = icmp eq i8* %163, %101
  br i1 %164, label %200, label %165

165:                                              ; preds = %161
  call void @_ZdlPv(i8* %163) #7
  br label %200

166:                                              ; preds = %155
  %167 = load i8*, i8** %102, align 8, !tbaa !15
  %168 = icmp eq i8* %167, %101
  br i1 %168, label %169, label %183

169:                                              ; preds = %166
  %170 = load i64, i64* %104, align 8, !tbaa !8
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %178, label %172

172:                                              ; preds = %169
  %173 = load i8*, i8** %20, align 8, !tbaa !15
  %174 = icmp eq i64 %170, 1
  br i1 %174, label %175, label %177

175:                                              ; preds = %172
  %176 = load i8, i8* %101, align 8, !tbaa !11
  store i8 %176, i8* %173, align 1, !tbaa !11
  br label %178

177:                                              ; preds = %172
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %173, i8* nonnull align 8 %101, i64 %170, i1 false) #7
  br label %178

178:                                              ; preds = %177, %175, %169
  %179 = load i64, i64* %104, align 8, !tbaa !8
  store i64 %179, i64* %21, align 8, !tbaa !8
  %180 = load i8*, i8** %20, align 8, !tbaa !15
  %181 = getelementptr inbounds i8, i8* %180, i64 %179
  store i8 0, i8* %181, align 1, !tbaa !11
  %182 = load i8*, i8** %102, align 8, !tbaa !15
  br label %192

183:                                              ; preds = %166
  %184 = load i8*, i8** %20, align 8, !tbaa !15
  %185 = icmp eq i8* %184, %19
  %186 = load i64, i64* %105, align 8
  store i8* %167, i8** %20, align 8, !tbaa !15
  %187 = load <2 x i64>, <2 x i64>* %125, align 8, !tbaa !11
  store <2 x i64> %187, <2 x i64>* %126, align 8, !tbaa !11
  %188 = icmp eq i8* %184, null
  %189 = or i1 %185, %188
  br i1 %189, label %191, label %190

190:                                              ; preds = %183
  store i8* %184, i8** %102, align 8, !tbaa !15
  store i64 %186, i64* %103, align 8, !tbaa !11
  br label %192

191:                                              ; preds = %183
  store %union.anon* %98, %union.anon** %99, align 8, !tbaa !15
  br label %192

192:                                              ; preds = %178, %190, %191
  %193 = phi i8* [ %182, %178 ], [ %184, %190 ], [ %101, %191 ]
  store i64 0, i64* %104, align 8, !tbaa !8
  store i8 0, i8* %193, align 1, !tbaa !11
  %194 = load i8*, i8** %102, align 8, !tbaa !15
  %195 = icmp eq i8* %194, %101
  br i1 %195, label %197, label %196

196:                                              ; preds = %192
  call void @_ZdlPv(i8* %194) #7
  br label %197

197:                                              ; preds = %192, %196
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #7
  br label %313

198:                                              ; preds = %146
  %199 = landingpad { i8*, i32 }
          cleanup
  br label %200

200:                                              ; preds = %161, %165, %198
  %201 = phi { i8*, i32 } [ %199, %198 ], [ %162, %165 ], [ %162, %161 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #7
  br label %327

202:                                              ; preds = %136
  %203 = load i64, i64* %21, align 8, !tbaa !8
  %204 = trunc i64 %203 to i32
  %205 = icmp sgt i32 %204, 1
  %206 = zext i1 %205 to i8
  %207 = icmp slt i32 %204, 4
  br i1 %207, label %208, label %212

208:                                              ; preds = %212, %202
  %209 = phi i8 [ %206, %202 ], [ %217, %212 ]
  %210 = and i8 %209, 1
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %308, label %221

212:                                              ; preds = %202, %212
  %213 = phi i32 [ %218, %212 ], [ 2, %202 ]
  %214 = phi i8 [ %217, %212 ], [ %206, %202 ]
  %215 = srem i32 %204, %213
  %216 = icmp eq i32 %215, 0
  %217 = select i1 %216, i8 0, i8 %214
  %218 = add nuw nsw i32 %213, 1
  %219 = mul nsw i32 %218, %218
  %220 = icmp sgt i32 %219, %204
  br i1 %220, label %208, label %212, !llvm.loop !20

221:                                              ; preds = %208
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %106) #7
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %107) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !22)
  store %union.anon* %108, %union.anon** %109, align 8, !tbaa !3, !alias.scope !22
  %222 = load i8*, i8** %14, align 8, !tbaa !15, !noalias !22
  %223 = load i64, i64* %15, align 8, !tbaa !8, !noalias !22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #7, !noalias !22
  store i64 %223, i64* %3, align 8, !tbaa !16, !noalias !22
  %224 = icmp ugt i64 %223, 15
  br i1 %224, label %225, label %229

225:                                              ; preds = %221
  %226 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %227 unwind label %299

227:                                              ; preds = %225
  store i8* %226, i8** %112, align 8, !tbaa !15, !alias.scope !22
  %228 = load i64, i64* %3, align 8, !tbaa !16, !noalias !22
  store i64 %228, i64* %113, align 8, !tbaa !11, !alias.scope !22
  br label %229

229:                                              ; preds = %221, %227
  %230 = phi i8* [ %226, %227 ], [ %111, %221 ]
  switch i64 %223, label %233 [
    i64 1, label %231
    i64 0, label %234
  ]

231:                                              ; preds = %229
  %232 = load i8, i8* %222, align 1, !tbaa !11
  store i8 %232, i8* %230, align 1, !tbaa !11
  br label %234

233:                                              ; preds = %229
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %230, i8* align 1 %222, i64 %223, i1 false) #7
  br label %234

234:                                              ; preds = %233, %231, %229
  %235 = load i64, i64* %3, align 8, !tbaa !16, !noalias !22
  store i64 %235, i64* %114, align 8, !tbaa !8, !alias.scope !22
  %236 = load i8*, i8** %112, align 8, !tbaa !15, !alias.scope !22
  %237 = getelementptr inbounds i8, i8* %236, i64 %235
  store i8 0, i8* %237, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #7, !noalias !22
  %238 = load i8*, i8** %20, align 8, !tbaa !15, !noalias !22
  %239 = load i64, i64* %21, align 8, !tbaa !8, !noalias !22
  %240 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i8* %238, i64 %239)
          to label %246 unwind label %241

241:                                              ; preds = %234
  %242 = landingpad { i8*, i32 }
          cleanup
  %243 = load i8*, i8** %112, align 8, !tbaa !15, !alias.scope !22
  %244 = icmp eq i8* %243, %111
  br i1 %244, label %306, label %245

245:                                              ; preds = %241
  call void @_ZdlPv(i8* %243) #7
  br label %306

246:                                              ; preds = %234
  call void @llvm.experimental.noalias.scope.decl(metadata !25)
  %247 = load i64, i64* %114, align 8, !tbaa !8, !noalias !25
  %248 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i64 %247, i64 0, i64 1, i8 signext 32)
          to label %249 unwind label %301

249:                                              ; preds = %246
  store %union.anon* %115, %union.anon** %116, align 8, !tbaa !3, !alias.scope !25
  %250 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %248, i64 0, i32 0, i32 0
  %251 = load i8*, i8** %250, align 8, !tbaa !15
  %252 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %248, i64 0, i32 2
  %253 = bitcast %union.anon* %252 to i8*
  %254 = icmp eq i8* %251, %253
  br i1 %254, label %255, label %256

255:                                              ; preds = %249
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %119, i8* noundef nonnull align 8 dereferenceable(16) %251, i64 16, i1 false) #7
  br label %259

256:                                              ; preds = %249
  store i8* %251, i8** %117, align 8, !tbaa !15, !alias.scope !25
  %257 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %248, i64 0, i32 2, i32 0
  %258 = load i64, i64* %257, align 8, !tbaa !11
  store i64 %258, i64* %118, align 8, !tbaa !11, !alias.scope !25
  br label %259

259:                                              ; preds = %256, %255
  %260 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %248, i64 0, i32 1
  %261 = load i64, i64* %260, align 8, !tbaa !8
  store i64 %261, i64* %120, align 8, !tbaa !8, !alias.scope !25
  %262 = bitcast %"class.std::__cxx11::basic_string"* %248 to %union.anon**
  store %union.anon* %252, %union.anon** %262, align 8, !tbaa !15
  store i64 0, i64* %260, align 8, !tbaa !8
  store i8 0, i8* %253, align 8, !tbaa !11
  %263 = load i8*, i8** %117, align 8, !tbaa !15
  %264 = icmp eq i8* %263, %119
  br i1 %264, label %265, label %279

265:                                              ; preds = %259
  %266 = load i64, i64* %120, align 8, !tbaa !8
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %274, label %268

268:                                              ; preds = %265
  %269 = load i8*, i8** %14, align 8, !tbaa !15
  %270 = icmp eq i64 %266, 1
  br i1 %270, label %271, label %273

271:                                              ; preds = %268
  %272 = load i8, i8* %119, align 8, !tbaa !11
  store i8 %272, i8* %269, align 1, !tbaa !11
  br label %274

273:                                              ; preds = %268
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %269, i8* nonnull align 8 %119, i64 %266, i1 false) #7
  br label %274

274:                                              ; preds = %273, %271, %265
  %275 = load i64, i64* %120, align 8, !tbaa !8
  store i64 %275, i64* %15, align 8, !tbaa !8
  %276 = load i8*, i8** %14, align 8, !tbaa !15
  %277 = getelementptr inbounds i8, i8* %276, i64 %275
  store i8 0, i8* %277, align 1, !tbaa !11
  %278 = load i8*, i8** %117, align 8, !tbaa !15
  br label %288

279:                                              ; preds = %259
  %280 = load i8*, i8** %14, align 8, !tbaa !15
  %281 = icmp eq i8* %280, %13
  %282 = load i64, i64* %121, align 8
  store i8* %263, i8** %14, align 8, !tbaa !15
  %283 = load <2 x i64>, <2 x i64>* %127, align 8, !tbaa !11
  store <2 x i64> %283, <2 x i64>* %128, align 8, !tbaa !11
  %284 = icmp eq i8* %280, null
  %285 = or i1 %281, %284
  br i1 %285, label %287, label %286

286:                                              ; preds = %279
  store i8* %280, i8** %117, align 8, !tbaa !15
  store i64 %282, i64* %118, align 8, !tbaa !11
  br label %288

287:                                              ; preds = %279
  store %union.anon* %115, %union.anon** %116, align 8, !tbaa !15
  br label %288

288:                                              ; preds = %274, %286, %287
  %289 = phi i8* [ %278, %274 ], [ %280, %286 ], [ %119, %287 ]
  store i64 0, i64* %120, align 8, !tbaa !8
  store i8 0, i8* %289, align 1, !tbaa !11
  %290 = load i8*, i8** %117, align 8, !tbaa !15
  %291 = icmp eq i8* %290, %119
  br i1 %291, label %293, label %292

292:                                              ; preds = %288
  call void @_ZdlPv(i8* %290) #7
  br label %293

293:                                              ; preds = %288, %292
  %294 = load i8*, i8** %112, align 8, !tbaa !15
  %295 = icmp eq i8* %294, %111
  br i1 %295, label %297, label %296

296:                                              ; preds = %293
  call void @_ZdlPv(i8* %294) #7
  br label %297

297:                                              ; preds = %293, %296
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %107) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %106) #7
  %298 = load i64, i64* %21, align 8, !tbaa !8
  br label %308

299:                                              ; preds = %225
  %300 = landingpad { i8*, i32 }
          cleanup
  br label %306

301:                                              ; preds = %246
  %302 = landingpad { i8*, i32 }
          cleanup
  %303 = load i8*, i8** %112, align 8, !tbaa !15
  %304 = icmp eq i8* %303, %111
  br i1 %304, label %306, label %305

305:                                              ; preds = %301
  call void @_ZdlPv(i8* %303) #7
  br label %306

306:                                              ; preds = %305, %301, %299, %245, %241
  %307 = phi { i8*, i32 } [ %300, %299 ], [ %242, %245 ], [ %242, %241 ], [ %302, %301 ], [ %302, %305 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %107) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %106) #7
  br label %327

308:                                              ; preds = %297, %208
  %309 = phi i64 [ %298, %297 ], [ %203, %208 ]
  %310 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64 0, i64 %309, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0)
          to label %313 unwind label %311

311:                                              ; preds = %308
  %312 = landingpad { i8*, i32 }
          cleanup
  br label %327

313:                                              ; preds = %308, %197
  %314 = add nuw i64 %137, 1
  %315 = load i64, i64* %27, align 8, !tbaa !8
  %316 = icmp ugt i64 %315, %314
  br i1 %316, label %136, label %129, !llvm.loop !28

317:                                              ; preds = %129
  %318 = add i64 %130, -1
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64 %318, i64 1)
          to label %322 unwind label %319

319:                                              ; preds = %317
  %320 = landingpad { i8*, i32 }
          catch i8* null
  %321 = extractvalue { i8*, i32 } %320, 0
  call void @__clang_call_terminate(i8* %321) #8
  unreachable

322:                                              ; preds = %317, %129
  %323 = load i8*, i8** %20, align 8, !tbaa !15
  %324 = icmp eq i8* %323, %19
  br i1 %324, label %326, label %325

325:                                              ; preds = %322
  call void @_ZdlPv(i8* %323) #7
  br label %326

326:                                              ; preds = %322, %325
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #7
  ret void

327:                                              ; preds = %200, %311, %306, %134
  %328 = phi { i8*, i32 } [ %135, %134 ], [ %201, %200 ], [ %312, %311 ], [ %307, %306 ]
  %329 = load i8*, i8** %20, align 8, !tbaa !15
  %330 = icmp eq i8* %329, %19
  br i1 %330, label %332, label %331

331:                                              ; preds = %327
  call void @_ZdlPv(i8* %329) #7
  br label %332

332:                                              ; preds = %331, %327
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #7
  %333 = load i8*, i8** %14, align 8, !tbaa !15
  %334 = icmp eq i8* %333, %13
  br i1 %334, label %336, label %335

335:                                              ; preds = %332
  call void @_ZdlPv(i8* %333) #7
  br label %336

336:                                              ; preds = %335, %332
  resume { i8*, i32 } %328
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #2 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #7
  tail call void @_ZSt9terminatev() #8
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #3

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i8*, i64) local_unnamed_addr #4

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64) local_unnamed_addr #4

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #6

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { noinline noreturn nounwind }
attributes #3 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #6 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!14 = distinct !{!14, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!15 = !{!9, !5, i64 0}
!16 = !{!10, !10, i64 0}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!19 = distinct !{!19, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.mustprogress"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!24 = distinct !{!24, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_: argument 0"}
!27 = distinct !{!27, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_"}
!28 = distinct !{!28, !21}
