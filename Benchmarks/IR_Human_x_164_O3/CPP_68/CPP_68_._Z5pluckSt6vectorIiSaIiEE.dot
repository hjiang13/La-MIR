digraph "CFG for '_Z5pluckSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z5pluckSt6vectorIiSaIiEE' function";

	Node0x5579252250f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%2:\l  %3 = alloca i64, align 8\l  %4 = bitcast i64* %3 to [2 x i32]*\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %6 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %7 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %8 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %9 = bitcast i64* %3 to i8*\l  %10 = bitcast i64* %3 to i32*\l  %11 = getelementptr inbounds [2 x i32], [2 x i32]* %4, i64 0, i64 1\l  %12 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %13 = bitcast %\"class.std::vector\"* %0 to i8**\l  %14 = bitcast i32** %7 to i8**\l  %15 = bitcast i32** %12 to i8**\l  %16 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %16, i8 0, i64 24, i1 false)\l  %17 = load i32*, i32** %5, align 8, !tbaa !3\l  %18 = load i32*, i32** %6, align 8, !tbaa !8\l  %19 = icmp eq i32* %17, %18\l  br i1 %19, label %98, label %20\l|{<s0>T|<s1>F}}"];
	Node0x5579252250f0:s0 -> Node0x557925227930;
	Node0x5579252250f0:s1 -> Node0x5579252279c0;
	Node0x5579252279c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = phi i32* [ %89, %88 ], [ %18, %2 ]\l  %22 = phi i32* [ %90, %88 ], [ %17, %2 ]\l  %23 = phi i32* [ %91, %88 ], [ null, %2 ]\l  %24 = phi i64 [ %92, %88 ], [ 0, %2 ]\l  %25 = getelementptr inbounds i32, i32* %21, i64 %24\l  %26 = load i32, i32* %25, align 4, !tbaa !9\l  %27 = and i32 %26, 1\l  %28 = icmp eq i32 %27, 0\l  br i1 %28, label %29, label %88\l|{<s0>T|<s1>F}}"];
	Node0x5579252279c0:s0 -> Node0x557925228310;
	Node0x5579252279c0:s1 -> Node0x557925227b00;
	Node0x557925228310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%29:\l29:                                               \l  %30 = load i32*, i32** %8, align 8, !tbaa !8\l  %31 = ptrtoint i32* %23 to i64\l  %32 = ptrtoint i32* %30 to i64\l  %33 = sub i64 %31, %32\l  %34 = ashr exact i64 %33, 2\l  %35 = icmp eq i64 %33, 0\l  br i1 %35, label %39, label %36\l|{<s0>T|<s1>F}}"];
	Node0x557925228310:s0 -> Node0x557925228fa0;
	Node0x557925228310:s1 -> Node0x557925228ff0;
	Node0x557925228ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%36:\l36:                                               \l  %37 = load i32, i32* %30, align 4, !tbaa !9\l  %38 = icmp slt i32 %26, %37\l  br i1 %38, label %39, label %88\l|{<s0>T|<s1>F}}"];
	Node0x557925228ff0:s0 -> Node0x557925228fa0;
	Node0x557925228ff0:s1 -> Node0x557925227b00;
	Node0x557925228fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%39:\l39:                                               \l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6\l  store i32 %26, i32* %10, align 8, !tbaa !9\l  %40 = trunc i64 %24 to i32\l  store i32 %40, i32* %11, align 4, !tbaa !9\l  %41 = load i32*, i32** %12, align 8, !tbaa !11\l  %42 = ptrtoint i32* %41 to i64\l  %43 = sub i64 %42, %32\l  %44 = ashr exact i64 %43, 2\l  %45 = icmp ult i64 %44, 2\l  br i1 %45, label %46, label %57\l|{<s0>T|<s1>F}}"];
	Node0x557925228fa0:s0 -> Node0x55792522a0f0;
	Node0x557925228fa0:s1 -> Node0x55792522a180;
	Node0x55792522a0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%46:\l46:                                               \l  %47 = invoke noalias nonnull i8* @_Znwm(i64 8) #7\l          to label %48 unwind label %82\l}"];
	Node0x55792522a0f0 -> Node0x55792522a2c0;
	Node0x55792522a0f0 -> Node0x55792522a310;
	Node0x55792522a2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%48:\l48:                                               \l  %49 = bitcast i8* %47 to i64*\l  %50 = load i64, i64* %3, align 8\l  store i64 %50, i64* %49, align 4\l  %51 = icmp eq i32* %30, null\l  br i1 %51, label %54, label %52\l|{<s0>T|<s1>F}}"];
	Node0x55792522a2c0:s0 -> Node0x55792522a750;
	Node0x55792522a2c0:s1 -> Node0x55792522a7a0;
	Node0x55792522a7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%52:\l52:                                               \l  %53 = bitcast i32* %30 to i8*\l  tail call void @_ZdlPv(i8* nonnull %53) #6\l  br label %54\l}"];
	Node0x55792522a7a0 -> Node0x55792522a750;
	Node0x55792522a750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%54:\l54:                                               \l  store i8* %47, i8** %13, align 8, !tbaa !8\l  %55 = getelementptr inbounds i8, i8* %47, i64 8\l  store i8* %55, i8** %14, align 8, !tbaa !3\l  store i8* %55, i8** %15, align 8, !tbaa !11\l  %56 = bitcast i8* %55 to i32*\l  br label %78\l}"];
	Node0x55792522a750 -> Node0x55792522bad0;
	Node0x55792522a180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%57:\l57:                                               \l  %58 = icmp ult i64 %34, 2\l  br i1 %58, label %65, label %59\l|{<s0>T|<s1>F}}"];
	Node0x55792522a180:s0 -> Node0x55792522bc20;
	Node0x55792522a180:s1 -> Node0x55792522bc70;
	Node0x55792522bc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%59:\l59:                                               \l  %60 = bitcast i32* %30 to i64*\l  %61 = load i64, i64* %3, align 8\l  store i64 %61, i64* %60, align 4\l  %62 = getelementptr inbounds i32, i32* %30, i64 2\l  %63 = icmp eq i32* %23, %62\l  br i1 %63, label %78, label %64\l|{<s0>T|<s1>F}}"];
	Node0x55792522bc70:s0 -> Node0x55792522bad0;
	Node0x55792522bc70:s1 -> Node0x55792522c010;
	Node0x55792522c010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%64:\l64:                                               \l  store i32* %62, i32** %7, align 8, !tbaa !3\l  br label %78\l}"];
	Node0x55792522c010 -> Node0x55792522bad0;
	Node0x55792522bc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%65:\l65:                                               \l  %66 = getelementptr inbounds i32, i32* %10, i64 %34\l  %67 = icmp eq i64 %33, 0\l  br i1 %67, label %72, label %68\l|{<s0>T|<s1>F}}"];
	Node0x55792522bc20:s0 -> Node0x55792522c750;
	Node0x55792522bc20:s1 -> Node0x55792522c7a0;
	Node0x55792522c7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%68:\l68:                                               \l  %69 = bitcast i32* %30 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* nonnull align 8\l... %9, i64 %33, i1 false) #6\l  %70 = mul nsw i64 %34, -4\l  %71 = add nsw i64 %70, 8\l  br label %72\l}"];
	Node0x55792522c7a0 -> Node0x55792522c750;
	Node0x55792522c750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%72:\l72:                                               \l  %73 = phi i64 [ %71, %68 ], [ 8, %65 ]\l  %74 = bitcast i32* %23 to i8*\l  %75 = bitcast i32* %66 to i8*\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %74, i8* nonnull align 4\l... %75, i64 %73, i1 false) #6\l  %76 = lshr exact i64 %73, 2\l  %77 = getelementptr inbounds i32, i32* %23, i64 %76\l  store i32* %77, i32** %7, align 8, !tbaa !3\l  br label %78\l}"];
	Node0x55792522c750 -> Node0x55792522bad0;
	Node0x55792522bad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%78:\l78:                                               \l  %79 = phi i32* [ %56, %54 ], [ %23, %59 ], [ %62, %64 ], [ %77, %72 ]\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6\l  %80 = load i32*, i32** %5, align 8, !tbaa !3\l  %81 = load i32*, i32** %6, align 8, !tbaa !8\l  br label %88\l}"];
	Node0x55792522bad0 -> Node0x557925227b00;
	Node0x55792522a310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%82:\l82:                                               \l  %83 = landingpad \{ i8*, i32 \}\l          cleanup\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6\l  %84 = icmp eq i32* %30, null\l  br i1 %84, label %87, label %85\l|{<s0>T|<s1>F}}"];
	Node0x55792522a310:s0 -> Node0x55792522dc20;
	Node0x55792522a310:s1 -> Node0x55792522dc70;
	Node0x55792522dc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%85:\l85:                                               \l  %86 = bitcast i32* %30 to i8*\l  tail call void @_ZdlPv(i8* nonnull %86) #6\l  br label %87\l}"];
	Node0x55792522dc70 -> Node0x55792522dc20;
	Node0x55792522dc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%87:\l87:                                               \l  resume \{ i8*, i32 \} %83\l}"];
	Node0x557925227b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  %89 = phi i32* [ %21, %20 ], [ %21, %36 ], [ %81, %78 ]\l  %90 = phi i32* [ %22, %20 ], [ %22, %36 ], [ %80, %78 ]\l  %91 = phi i32* [ %23, %20 ], [ %23, %36 ], [ %79, %78 ]\l  %92 = add nuw i64 %24, 1\l  %93 = ptrtoint i32* %90 to i64\l  %94 = ptrtoint i32* %89 to i64\l  %95 = sub i64 %93, %94\l  %96 = ashr exact i64 %95, 2\l  %97 = icmp ugt i64 %96, %92\l  br i1 %97, label %20, label %98, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x557925227b00:s0 -> Node0x5579252279c0;
	Node0x557925227b00:s1 -> Node0x557925227930;
	Node0x557925227930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%98:\l98:                                               \l  ret void\l}"];
}
