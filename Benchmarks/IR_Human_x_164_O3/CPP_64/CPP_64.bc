; ModuleID = '../../Human_xBenchmarks_164/CPP_64/CPP_64.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_64/CPP_64.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@.str = private unnamed_addr constant [11 x i8] c"aeiouAEIOU\00", align 1

; Function Attrs: uwtable
define dso_local i32 @_Z12vowels_countNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nocapture readonly %0) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = bitcast %"class.std::__cxx11::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #3
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 2
  %5 = bitcast %"class.std::__cxx11::basic_string"* %2 to %union.anon**
  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !3
  %6 = bitcast %union.anon* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(10) %6, i8* noundef nonnull align 1 dereferenceable(10) getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i1 false) #3
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  store i64 10, i64* %7, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 2, i32 1, i64 2
  store i8 0, i8* %8, align 2, !tbaa !11
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !8
  %11 = icmp eq i64 %10, 0
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8, !tbaa !12
  br i1 %11, label %43, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 2, i32 1, i64 0
  %16 = load i8, i8* %15, align 8
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 2, i32 1, i64 1
  %18 = load i8, i8* %17, align 1
  br label %19

19:                                               ; preds = %14, %36
  %20 = phi i64 [ 0, %14 ], [ %41, %36 ]
  %21 = phi i32 [ 0, %14 ], [ %40, %36 ]
  %22 = getelementptr inbounds i8, i8* %13, i64 %20
  %23 = load i8, i8* %22, align 1, !tbaa !11
  switch i8 %23, label %24 [
    i8 97, label %36
    i8 101, label %29
    i8 105, label %30
    i8 111, label %31
    i8 117, label %32
    i8 65, label %33
    i8 69, label %34
    i8 73, label %35
  ]

24:                                               ; preds = %19
  %25 = icmp eq i8 %16, %23
  br i1 %25, label %36, label %26

26:                                               ; preds = %24
  %27 = icmp eq i8 %18, %23
  %28 = select i1 %27, i64 9, i64 10
  br label %36

29:                                               ; preds = %19
  br label %36

30:                                               ; preds = %19
  br label %36

31:                                               ; preds = %19
  br label %36

32:                                               ; preds = %19
  br label %36

33:                                               ; preds = %19
  br label %36

34:                                               ; preds = %19
  br label %36

35:                                               ; preds = %19
  br label %36

36:                                               ; preds = %26, %19, %35, %34, %33, %32, %31, %30, %29, %24
  %37 = phi i64 [ 8, %24 ], [ 0, %19 ], [ 1, %29 ], [ 2, %30 ], [ 3, %31 ], [ 4, %32 ], [ %28, %26 ], [ 5, %33 ], [ 6, %34 ], [ 7, %35 ]
  %38 = icmp ne i64 %37, 10
  %39 = zext i1 %38 to i32
  %40 = add nuw nsw i32 %21, %39
  %41 = add nuw nsw i64 %20, 1
  %42 = icmp eq i64 %41, %10
  br i1 %42, label %43, label %19, !llvm.loop !13

43:                                               ; preds = %36, %1
  %44 = phi i32 [ 0, %1 ], [ %40, %36 ]
  %45 = add i64 %10, -1
  %46 = getelementptr inbounds i8, i8* %13, i64 %45
  %47 = load i8, i8* %46, align 1, !tbaa !11
  switch i8 %47, label %50 [
    i8 121, label %48
    i8 89, label %48
  ]

48:                                               ; preds = %43, %43
  %49 = add nuw nsw i32 %44, 1
  br label %50

50:                                               ; preds = %48, %43
  %51 = phi i32 [ %49, %48 ], [ %44, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #3
  ret i32 %51
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.mustprogress"}
