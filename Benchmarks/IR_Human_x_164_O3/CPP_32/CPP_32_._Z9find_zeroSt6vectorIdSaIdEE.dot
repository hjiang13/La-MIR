digraph "CFG for '_Z9find_zeroSt6vectorIdSaIdEE' function" {
	label="CFG for '_Z9find_zeroSt6vectorIdSaIdEE' function";

	Node0x5654cfe0ea70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%1:\l  %2 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %3 = load double*, double** %2, align 8, !tbaa !3\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = load double*, double** %4, align 8, !tbaa !8\l  %6 = ptrtoint double* %3 to i64\l  %7 = ptrtoint double* %5 to i64\l  %8 = sub i64 %6, %7\l  %9 = icmp eq i64 %8, 0\l  br i1 %9, label %23, label %10\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe0ea70:s0 -> Node0x5654cfe0edb0;
	Node0x5654cfe0ea70:s1 -> Node0x5654cfe0f100;
	Node0x5654cfe0f100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%10:\l10:                                               \l  %11 = ashr exact i64 %8, 3\l  %12 = icmp ugt i64 %11, 1152921504606846975\l  br i1 %12, label %13, label %14\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe0f100:s0 -> Node0x5654cfe0f360;
	Node0x5654cfe0f100:s1 -> Node0x5654cfe0f3b0;
	Node0x5654cfe0f360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%13:\l13:                                               \l  tail call void @_ZSt17__throw_bad_allocv() #8\l  unreachable\l}"];
	Node0x5654cfe0f3b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%14:\l14:                                               \l  %15 = tail call noalias nonnull i8* @_Znwm(i64 %8) #9\l  %16 = bitcast i8* %15 to double*\l  %17 = load double*, double** %4, align 8, !tbaa !9\l  %18 = load double*, double** %2, align 8, !tbaa !9\l  %19 = ptrtoint double* %18 to i64\l  %20 = ptrtoint double* %17 to i64\l  %21 = sub i64 %19, %20\l  %22 = icmp eq i64 %21, 0\l  br i1 %22, label %96, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe0f3b0:s0 -> Node0x5654cfe10330;
	Node0x5654cfe0f3b0:s1 -> Node0x5654cfe103c0;
	Node0x5654cfe0edb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%23:\l23:                                               \l  %24 = sub i64 %6, %7\l  %25 = icmp eq i64 %24, 0\l  br i1 %25, label %100, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe0edb0:s0 -> Node0x5654cfe10620;
	Node0x5654cfe0edb0:s1 -> Node0x5654cfe103c0;
	Node0x5654cfe103c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%26:\l26:                                               \l  %27 = phi i64 [ %24, %23 ], [ %21, %14 ]\l  %28 = phi double* [ null, %23 ], [ %16, %14 ]\l  %29 = phi double* [ %5, %23 ], [ %17, %14 ]\l  %30 = bitcast double* %28 to i8*\l  %31 = bitcast double* %29 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31,\l... i64 %27, i1 false) #10\l  %32 = ashr exact i64 %27, 3\l  %33 = call i64 @llvm.umax.i64(i64 %32, i64 1)\l  %34 = add i64 %33, -1\l  %35 = and i64 %33, 3\l  %36 = icmp ult i64 %34, 3\l  br i1 %36, label %77, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe103c0:s0 -> Node0x5654cfe11410;
	Node0x5654cfe103c0:s1 -> Node0x5654cfe114a0;
	Node0x5654cfe114a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%37:\l37:                                               \l  %38 = and i64 %33, -4\l  br label %39\l}"];
	Node0x5654cfe114a0 -> Node0x5654cfe116a0;
	Node0x5654cfe116a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%39:\l39:                                               \l  %40 = phi i64 [ 0, %37 ], [ %74, %39 ]\l  %41 = phi double [ 0.000000e+00, %37 ], [ %73, %39 ]\l  %42 = phi i64 [ %38, %37 ], [ %75, %39 ]\l  %43 = getelementptr inbounds double, double* %28, i64 %40\l  %44 = load double, double* %43, align 8, !tbaa !10\l  %45 = trunc i64 %40 to i32\l  %46 = sitofp i32 %45 to double\l  %47 = tail call double @pow(double 0.000000e+00, double %46) #10\l  %48 = fmul double %44, %47\l  %49 = fadd double %41, %48\l  %50 = or i64 %40, 1\l  %51 = getelementptr inbounds double, double* %28, i64 %50\l  %52 = load double, double* %51, align 8, !tbaa !10\l  %53 = trunc i64 %50 to i32\l  %54 = sitofp i32 %53 to double\l  %55 = tail call double @pow(double 0.000000e+00, double %54) #10\l  %56 = fmul double %52, %55\l  %57 = fadd double %49, %56\l  %58 = or i64 %40, 2\l  %59 = getelementptr inbounds double, double* %28, i64 %58\l  %60 = load double, double* %59, align 8, !tbaa !10\l  %61 = trunc i64 %58 to i32\l  %62 = sitofp i32 %61 to double\l  %63 = tail call double @pow(double 0.000000e+00, double %62) #10\l  %64 = fmul double %60, %63\l  %65 = fadd double %57, %64\l  %66 = or i64 %40, 3\l  %67 = getelementptr inbounds double, double* %28, i64 %66\l  %68 = load double, double* %67, align 8, !tbaa !10\l  %69 = trunc i64 %66 to i32\l  %70 = sitofp i32 %69 to double\l  %71 = tail call double @pow(double 0.000000e+00, double %70) #10\l  %72 = fmul double %68, %71\l  %73 = fadd double %65, %72\l  %74 = add nuw nsw i64 %40, 4\l  %75 = add i64 %42, -4\l  %76 = icmp eq i64 %75, 0\l  br i1 %76, label %77, label %39, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe116a0:s0 -> Node0x5654cfe11410;
	Node0x5654cfe116a0:s1 -> Node0x5654cfe116a0;
	Node0x5654cfe11410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%77:\l77:                                               \l  %78 = phi double [ undef, %26 ], [ %73, %39 ]\l  %79 = phi i64 [ 0, %26 ], [ %74, %39 ]\l  %80 = phi double [ 0.000000e+00, %26 ], [ %73, %39 ]\l  %81 = icmp eq i64 %35, 0\l  br i1 %81, label %96, label %82\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe11410:s0 -> Node0x5654cfe10330;
	Node0x5654cfe11410:s1 -> Node0x5654cfe146a0;
	Node0x5654cfe146a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%82:\l82:                                               \l  %83 = phi i64 [ %93, %82 ], [ %79, %77 ]\l  %84 = phi double [ %92, %82 ], [ %80, %77 ]\l  %85 = phi i64 [ %94, %82 ], [ %35, %77 ]\l  %86 = getelementptr inbounds double, double* %28, i64 %83\l  %87 = load double, double* %86, align 8, !tbaa !10\l  %88 = trunc i64 %83 to i32\l  %89 = sitofp i32 %88 to double\l  %90 = tail call double @pow(double 0.000000e+00, double %89) #10\l  %91 = fmul double %87, %90\l  %92 = fadd double %84, %91\l  %93 = add nuw nsw i64 %83, 1\l  %94 = add i64 %85, -1\l  %95 = icmp eq i64 %94, 0\l  br i1 %95, label %96, label %82, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe146a0:s0 -> Node0x5654cfe10330;
	Node0x5654cfe146a0:s1 -> Node0x5654cfe146a0;
	Node0x5654cfe10330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%96:\l96:                                               \l  %97 = phi double* [ %16, %14 ], [ %28, %82 ], [ %28, %77 ]\l  %98 = phi double [ 0.000000e+00, %14 ], [ %78, %77 ], [ %92, %82 ]\l  %99 = bitcast double* %97 to i8*\l  tail call void @_ZdlPv(i8* nonnull %99) #10\l  br label %100\l}"];
	Node0x5654cfe10330 -> Node0x5654cfe10620;
	Node0x5654cfe10620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%100:\l100:                                              \l  %101 = phi double [ %98, %96 ], [ 0.000000e+00, %23 ]\l  %102 = tail call double @llvm.fabs.f64(double %101) #10\l  %103 = fcmp ogt double %102, 0x3EB0C6F7A0B5ED8D\l  br i1 %103, label %104, label %241\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe10620:s0 -> Node0x5654cfe158e0;
	Node0x5654cfe10620:s1 -> Node0x5654cfe15930;
	Node0x5654cfe158e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%104:\l104:                                              \l  %105 = phi double [ %238, %237 ], [ %101, %100 ]\l  %106 = phi double [ %121, %237 ], [ 0.000000e+00, %100 ]\l  %107 = load double*, double** %2, align 8, !tbaa !3\l  %108 = load double*, double** %4, align 8, !tbaa !8\l  %109 = ptrtoint double* %107 to i64\l  %110 = ptrtoint double* %108 to i64\l  %111 = sub i64 %109, %110\l  %112 = ashr exact i64 %111, 3\l  %113 = icmp ugt i64 %112, 1\l  br i1 %113, label %191, label %114\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe158e0:s0 -> Node0x5654cfe16000;
	Node0x5654cfe158e0:s1 -> Node0x5654cfe16090;
	Node0x5654cfe16090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%114:\l114:                                              \l  %115 = phi double* [ %107, %104 ], [ %207, %191 ]\l  %116 = phi double* [ %108, %104 ], [ %208, %191 ]\l  %117 = phi double [ 0.000000e+00, %104 ], [ %205, %191 ]\l  %118 = phi i64 [ %111, %104 ], [ %211, %191 ]\l  %119 = phi i64 [ %112, %104 ], [ %212, %191 ]\l  %120 = fdiv double %105, %117\l  %121 = fsub double %106, %120\l  %122 = icmp eq i64 %118, 0\l  br i1 %122, label %135, label %123\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe16090:s0 -> Node0x5654cfe168e0;
	Node0x5654cfe16090:s1 -> Node0x5654cfe16930;
	Node0x5654cfe16930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%123:\l123:                                              \l  %124 = icmp ugt i64 %119, 1152921504606846975\l  br i1 %124, label %125, label %126\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe16930:s0 -> Node0x5654cfe16b00;
	Node0x5654cfe16930:s1 -> Node0x5654cfe16b50;
	Node0x5654cfe16b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%125:\l125:                                              \l  tail call void @_ZSt17__throw_bad_allocv() #8\l  unreachable\l}"];
	Node0x5654cfe16b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%126:\l126:                                              \l  %127 = tail call noalias nonnull i8* @_Znwm(i64 %118) #9\l  %128 = bitcast i8* %127 to double*\l  %129 = load double*, double** %4, align 8, !tbaa !9\l  %130 = load double*, double** %2, align 8, !tbaa !9\l  %131 = ptrtoint double* %130 to i64\l  %132 = ptrtoint double* %129 to i64\l  %133 = sub i64 %131, %132\l  %134 = icmp eq i64 %133, 0\l  br i1 %134, label %233, label %140\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe16b50:s0 -> Node0x5654cfe17a70;
	Node0x5654cfe16b50:s1 -> Node0x5654cfe17ac0;
	Node0x5654cfe168e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%135:\l135:                                              \l  %136 = ptrtoint double* %115 to i64\l  %137 = ptrtoint double* %116 to i64\l  %138 = sub i64 %136, %137\l  %139 = icmp eq i64 %138, 0\l  br i1 %139, label %237, label %140\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe168e0:s0 -> Node0x5654cfe15a30;
	Node0x5654cfe168e0:s1 -> Node0x5654cfe17ac0;
	Node0x5654cfe17ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%140:\l140:                                              \l  %141 = phi i64 [ %138, %135 ], [ %133, %126 ]\l  %142 = phi double* [ null, %135 ], [ %128, %126 ]\l  %143 = phi double* [ %116, %135 ], [ %129, %126 ]\l  %144 = bitcast double* %142 to i8*\l  %145 = bitcast double* %143 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8\l... %145, i64 %141, i1 false) #10\l  %146 = ashr exact i64 %141, 3\l  %147 = call i64 @llvm.umax.i64(i64 %146, i64 1)\l  %148 = add i64 %147, -1\l  %149 = and i64 %147, 3\l  %150 = icmp ult i64 %148, 3\l  br i1 %150, label %214, label %151\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe17ac0:s0 -> Node0x5654cfe18640;
	Node0x5654cfe17ac0:s1 -> Node0x5654cfe18690;
	Node0x5654cfe18690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%151:\l151:                                              \l  %152 = and i64 %147, -4\l  br label %153\l}"];
	Node0x5654cfe18690 -> Node0x5654cfe18820;
	Node0x5654cfe18820 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%153:\l153:                                              \l  %154 = phi i64 [ 0, %151 ], [ %188, %153 ]\l  %155 = phi double [ 0.000000e+00, %151 ], [ %187, %153 ]\l  %156 = phi i64 [ %152, %151 ], [ %189, %153 ]\l  %157 = getelementptr inbounds double, double* %142, i64 %154\l  %158 = load double, double* %157, align 8, !tbaa !10\l  %159 = trunc i64 %154 to i32\l  %160 = sitofp i32 %159 to double\l  %161 = tail call double @pow(double %121, double %160) #10\l  %162 = fmul double %158, %161\l  %163 = fadd double %155, %162\l  %164 = or i64 %154, 1\l  %165 = getelementptr inbounds double, double* %142, i64 %164\l  %166 = load double, double* %165, align 8, !tbaa !10\l  %167 = trunc i64 %164 to i32\l  %168 = sitofp i32 %167 to double\l  %169 = tail call double @pow(double %121, double %168) #10\l  %170 = fmul double %166, %169\l  %171 = fadd double %163, %170\l  %172 = or i64 %154, 2\l  %173 = getelementptr inbounds double, double* %142, i64 %172\l  %174 = load double, double* %173, align 8, !tbaa !10\l  %175 = trunc i64 %172 to i32\l  %176 = sitofp i32 %175 to double\l  %177 = tail call double @pow(double %121, double %176) #10\l  %178 = fmul double %174, %177\l  %179 = fadd double %171, %178\l  %180 = or i64 %154, 3\l  %181 = getelementptr inbounds double, double* %142, i64 %180\l  %182 = load double, double* %181, align 8, !tbaa !10\l  %183 = trunc i64 %180 to i32\l  %184 = sitofp i32 %183 to double\l  %185 = tail call double @pow(double %121, double %184) #10\l  %186 = fmul double %182, %185\l  %187 = fadd double %179, %186\l  %188 = add nuw nsw i64 %154, 4\l  %189 = add i64 %156, -4\l  %190 = icmp eq i64 %189, 0\l  br i1 %190, label %214, label %153, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe18820:s0 -> Node0x5654cfe18640;
	Node0x5654cfe18820:s1 -> Node0x5654cfe18820;
	Node0x5654cfe16000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%191:\l191:                                              \l  %192 = phi i64 [ %206, %191 ], [ 1, %104 ]\l  %193 = phi double* [ %208, %191 ], [ %108, %104 ]\l  %194 = phi double [ %205, %191 ], [ 0.000000e+00, %104 ]\l  %195 = getelementptr inbounds double, double* %193, i64 %192\l  %196 = load double, double* %195, align 8, !tbaa !10\l  %197 = trunc i64 %192 to i32\l  %198 = add i32 %197, -1\l  %199 = sitofp i32 %198 to double\l  %200 = tail call double @pow(double %106, double %199) #10\l  %201 = fmul double %196, %200\l  %202 = trunc i64 %192 to i32\l  %203 = sitofp i32 %202 to double\l  %204 = fmul double %201, %203\l  %205 = fadd double %194, %204\l  %206 = add nuw nsw i64 %192, 1\l  %207 = load double*, double** %2, align 8, !tbaa !3\l  %208 = load double*, double** %4, align 8, !tbaa !8\l  %209 = ptrtoint double* %207 to i64\l  %210 = ptrtoint double* %208 to i64\l  %211 = sub i64 %209, %210\l  %212 = ashr exact i64 %211, 3\l  %213 = icmp ugt i64 %212, %206\l  br i1 %213, label %191, label %114, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe16000:s0 -> Node0x5654cfe16000;
	Node0x5654cfe16000:s1 -> Node0x5654cfe16090;
	Node0x5654cfe18640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%214:\l214:                                              \l  %215 = phi double [ undef, %140 ], [ %187, %153 ]\l  %216 = phi i64 [ 0, %140 ], [ %188, %153 ]\l  %217 = phi double [ 0.000000e+00, %140 ], [ %187, %153 ]\l  %218 = icmp eq i64 %149, 0\l  br i1 %218, label %233, label %219\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe18640:s0 -> Node0x5654cfe17a70;
	Node0x5654cfe18640:s1 -> Node0x5654cfe1b0d0;
	Node0x5654cfe1b0d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%219:\l219:                                              \l  %220 = phi i64 [ %230, %219 ], [ %216, %214 ]\l  %221 = phi double [ %229, %219 ], [ %217, %214 ]\l  %222 = phi i64 [ %231, %219 ], [ %149, %214 ]\l  %223 = getelementptr inbounds double, double* %142, i64 %220\l  %224 = load double, double* %223, align 8, !tbaa !10\l  %225 = trunc i64 %220 to i32\l  %226 = sitofp i32 %225 to double\l  %227 = tail call double @pow(double %121, double %226) #10\l  %228 = fmul double %224, %227\l  %229 = fadd double %221, %228\l  %230 = add nuw nsw i64 %220, 1\l  %231 = add i64 %222, -1\l  %232 = icmp eq i64 %231, 0\l  br i1 %232, label %233, label %219, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe1b0d0:s0 -> Node0x5654cfe17a70;
	Node0x5654cfe1b0d0:s1 -> Node0x5654cfe1b0d0;
	Node0x5654cfe17a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%233:\l233:                                              \l  %234 = phi double* [ %128, %126 ], [ %142, %219 ], [ %142, %214 ]\l  %235 = phi double [ 0.000000e+00, %126 ], [ %215, %214 ], [ %229, %219 ]\l  %236 = bitcast double* %234 to i8*\l  tail call void @_ZdlPv(i8* nonnull %236) #10\l  br label %237\l}"];
	Node0x5654cfe17a70 -> Node0x5654cfe15a30;
	Node0x5654cfe15a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%237:\l237:                                              \l  %238 = phi double [ %235, %233 ], [ 0.000000e+00, %135 ]\l  %239 = tail call double @llvm.fabs.f64(double %238) #10\l  %240 = fcmp ogt double %239, 0x3EB0C6F7A0B5ED8D\l  br i1 %240, label %104, label %241, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x5654cfe15a30:s0 -> Node0x5654cfe158e0;
	Node0x5654cfe15a30:s1 -> Node0x5654cfe15930;
	Node0x5654cfe15930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%241:\l241:                                              \l  %242 = phi double [ 0.000000e+00, %100 ], [ %121, %237 ]\l  ret double %242\l}"];
}
