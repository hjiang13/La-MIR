digraph "CFG for '_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_' function" {
	label="CFG for '_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE17_M_construct_nodeIJRKS8_EEEvPSt13_Rb_tree_nodeIS8_EDpOT_' function";

	Node0x56222ab644b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca i64, align 8\l  %5 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %1, i64 0, i32 1\l  %6 = bitcast %\"struct.__gnu_cxx::__aligned_membuf\"* %5 to i32*\l  %7 = getelementptr inbounds %\"struct.std::pair\", %\"struct.std::pair\"* %2,\l... i64 0, i32 0\l  %8 = load i32, i32* %7, align 8, !tbaa !3\l  store i32 %8, i32* %6, align 8, !tbaa !3\l  %9 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %1, i64 0, i32 1, i32 0, i64 8\l  %10 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %1, i64 0, i32 1, i32 0, i64 24\l  %11 = bitcast i8* %9 to i8**\l  store i8* %10, i8** %11, align 8, !tbaa !12\l  %12 = getelementptr inbounds %\"struct.std::pair\", %\"struct.std::pair\"* %2,\l... i64 0, i32 1, i32 0, i32 0\l  %13 = load i8*, i8** %12, align 8, !tbaa !13\l  %14 = getelementptr inbounds %\"struct.std::pair\", %\"struct.std::pair\"* %2,\l... i64 0, i32 1, i32 1\l  %15 = load i64, i64* %14, align 8, !tbaa !14\l  %16 = bitcast i64* %4 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13\l  store i64 %15, i64* %4, align 8, !tbaa !15\l  %17 = icmp ugt i64 %15, 15\l  br i1 %17, label %18, label %24\l|{<s0>T|<s1>F}}"];
	Node0x56222ab644b0:s0 -> Node0x56222ab67090;
	Node0x56222ab644b0:s1 -> Node0x56222ab670e0;
	Node0x56222ab67090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%18:\l18:                                               \l  %19 = bitcast i8* %9 to %\"class.std::__cxx11::basic_string\"*\l  %20 = invoke i8*\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%\"class.s\l...td::__cxx11::basic_string\"* nonnull align 8 dereferenceable(32) %19, i64*\l... nonnull align 8 dereferenceable(8) %4, i64 0)\l          to label %21 unwind label %29\l}"];
	Node0x56222ab67090 -> Node0x56222ab672a0;
	Node0x56222ab67090 -> Node0x56222ab672f0;
	Node0x56222ab672a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%21:\l21:                                               \l  store i8* %20, i8** %11, align 8, !tbaa !13\l  %22 = load i64, i64* %4, align 8, !tbaa !15\l  %23 = bitcast i8* %10 to i64*\l  store i64 %22, i64* %23, align 8, !tbaa !16\l  br label %24\l}"];
	Node0x56222ab672a0 -> Node0x56222ab670e0;
	Node0x56222ab670e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i8* [ %20, %21 ], [ %10, %3 ]\l  switch i64 %15, label %28 [\l    i64 1, label %26\l    i64 0, label %36\l  ]\l|{<s0>def|<s1>1|<s2>0}}"];
	Node0x56222ab670e0:s0 -> Node0x56222ab67720;
	Node0x56222ab670e0:s1 -> Node0x56222ab67770;
	Node0x56222ab670e0:s2 -> Node0x56222ab677c0;
	Node0x56222ab67770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%26:\l26:                                               \l  %27 = load i8, i8* %13, align 1, !tbaa !16\l  store i8 %27, i8* %25, align 1, !tbaa !16\l  br label %36\l}"];
	Node0x56222ab67770 -> Node0x56222ab677c0;
	Node0x56222ab67720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%28:\l28:                                               \l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %13, i64\l... %15, i1 false) #13\l  br label %36\l}"];
	Node0x56222ab67720 -> Node0x56222ab677c0;
	Node0x56222ab672f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%29:\l29:                                               \l  %30 = landingpad \{ i8*, i32 \}\l          catch i8* null\l  %31 = extractvalue \{ i8*, i32 \} %30, 0\l  %32 = call i8* @__cxa_begin_catch(i8* %31) #13\l  %33 = bitcast %\"struct.std::_Rb_tree_node\"* %1 to i8*\l  call void @_ZdlPv(i8* %33) #13\l  invoke void @__cxa_rethrow() #14\l          to label %46 unwind label %34\l}"];
	Node0x56222ab672f0 -> Node0x56222ab67f50;
	Node0x56222ab672f0 -> Node0x56222ab67fa0;
	Node0x56222ab67fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%34:\l34:                                               \l  %35 = landingpad \{ i8*, i32 \}\l          cleanup\l  invoke void @__cxa_end_catch()\l          to label %42 unwind label %43\l}"];
	Node0x56222ab67fa0 -> Node0x56222ab68170;
	Node0x56222ab67fa0 -> Node0x56222ab681c0;
	Node0x56222ab677c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = load i64, i64* %4, align 8, !tbaa !15\l  %38 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %1, i64 0, i32 1, i32 0, i64 16\l  %39 = bitcast i8* %38 to i64*\l  store i64 %37, i64* %39, align 8, !tbaa !14\l  %40 = load i8*, i8** %11, align 8, !tbaa !13\l  %41 = getelementptr inbounds i8, i8* %40, i64 %37\l  store i8 0, i8* %41, align 1, !tbaa !16\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13\l  ret void\l}"];
	Node0x56222ab68170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%42:\l42:                                               \l  resume \{ i8*, i32 \} %35\l}"];
	Node0x56222ab681c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%43:\l43:                                               \l  %44 = landingpad \{ i8*, i32 \}\l          catch i8* null\l  %45 = extractvalue \{ i8*, i32 \} %44, 0\l  call void @__clang_call_terminate(i8* %45) #15\l  unreachable\l}"];
	Node0x56222ab67f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%46:\l46:                                               \l  unreachable\l}"];
}
