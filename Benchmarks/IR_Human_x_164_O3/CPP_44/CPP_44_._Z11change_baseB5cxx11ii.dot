digraph "CFG for '_Z11change_baseB5cxx11ii' function" {
	label="CFG for '_Z11change_baseB5cxx11ii' function";

	Node0x561c18a113b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%3:\l  %4 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %5 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %6 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2\l  %7 = bitcast %\"class.std::__cxx11::basic_string\"* %0 to %union.anon**\l  store %union.anon* %6, %union.anon** %7, align 8, !tbaa !3\l  %8 = bitcast %union.anon* %6 to i8*\l  %9 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %10 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  store i64 0, i64* %10, align 8, !tbaa !8\l  store i8 0, i8* %8, align 8, !tbaa !11\l  %11 = bitcast %\"class.std::__cxx11::basic_string\"* %4 to i8*\l  %12 = bitcast %\"class.std::__cxx11::basic_string\"* %5 to i8*\l  %13 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2\l  %14 = bitcast %\"class.std::__cxx11::basic_string\"* %4 to %union.anon**\l  %15 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 0, i32 0\l  %16 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2, i32 0\l  %17 = bitcast %union.anon* %13 to i8*\l  %18 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 1\l  %19 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2, i32 0\l  %20 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %5, i64 0, i32 0, i32 0\l  %21 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %5, i64 0, i32 2\l  %22 = bitcast %union.anon* %21 to i8*\l  %23 = icmp sgt i32 %1, 0\l  br i1 %23, label %24, label %97\l|{<s0>T|<s1>F}}"];
	Node0x561c18a113b0:s0 -> Node0x561c18a11ac0;
	Node0x561c18a113b0:s1 -> Node0x561c18a13330;
	Node0x561c18a11ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%24:\l24:                                               \l  %25 = bitcast i64* %18 to \<2 x i64\>*\l  %26 = bitcast i64* %10 to \<2 x i64\>*\l  br label %27\l}"];
	Node0x561c18a11ac0 -> Node0x561c18a13b60;
	Node0x561c18a13b60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i32 [ %30, %83 ], [ %1, %24 ]\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #8\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #8\l  %29 = srem i32 %28, %2\l  %30 = sdiv i32 %28, %2\l  invoke void (%\"class.std::__cxx11::basic_string\"*, i32 (i8*, i64, i8*,\l... %struct.__va_list_tag*)*, i64, i8*, ...)\l... @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc\l...EEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%\"class.std::__cxx11::basic_string\"\l...* nonnull sret(%\"class.std::__cxx11::basic_string\") align 8 %5, i32 (i8*, i64,\l... i8*, %struct.__va_list_tag*)* nonnull @vsnprintf, i64 16, i8* getelementptr\l... inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32 %29)\l          to label %31 unwind label %85\l}"];
	Node0x561c18a13b60 -> Node0x561c18a145d0;
	Node0x561c18a13b60 -> Node0x561c18a14620;
	Node0x561c18a145d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  call void @llvm.experimental.noalias.scope.decl(metadata !12)\l  %32 = load i8*, i8** %9, align 8, !tbaa !15, !noalias !12\l  %33 = load i64, i64* %10, align 8, !tbaa !8, !noalias !12\l  %34 = invoke nonnull align 8 dereferenceable(32)\l... %\"class.std::__cxx11::basic_string\"*\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%\"class.\l...std::__cxx11::basic_string\"* nonnull align 8 dereferenceable(32) %5, i8* %32,\l... i64 %33)\l          to label %35 unwind label %87\l}"];
	Node0x561c18a145d0 -> Node0x561c18a161f0;
	Node0x561c18a145d0 -> Node0x561c18a16280;
	Node0x561c18a161f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  store %union.anon* %13, %union.anon** %14, align 8, !tbaa !3, !alias.scope\l... !12\l  %36 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %34, i64 0, i32 0, i32 0\l  %37 = load i8*, i8** %36, align 8, !tbaa !15\l  %38 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %34, i64 0, i32 2\l  %39 = bitcast %union.anon* %38 to i8*\l  %40 = icmp eq i8* %37, %39\l  br i1 %40, label %41, label %42\l|{<s0>T|<s1>F}}"];
	Node0x561c18a161f0:s0 -> Node0x561c18a16150;
	Node0x561c18a161f0:s1 -> Node0x561c18a17600;
	Node0x561c18a16150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%41:\l41:                                               \l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %17, i8* noundef nonnull align 8 dereferenceable(16) %37,\l... i64 16, i1 false) #8\l  br label %45\l}"];
	Node0x561c18a16150 -> Node0x561c18a17ac0;
	Node0x561c18a17600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%42:\l42:                                               \l  store i8* %37, i8** %15, align 8, !tbaa !15, !alias.scope !12\l  %43 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %34, i64 0, i32 2, i32 0\l  %44 = load i64, i64* %43, align 8, !tbaa !11\l  store i64 %44, i64* %16, align 8, !tbaa !11, !alias.scope !12\l  br label %45\l}"];
	Node0x561c18a17600 -> Node0x561c18a17ac0;
	Node0x561c18a17ac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  %46 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %34, i64 0, i32 1\l  %47 = load i64, i64* %46, align 8, !tbaa !8\l  store i64 %47, i64* %18, align 8, !tbaa !8, !alias.scope !12\l  %48 = bitcast %\"class.std::__cxx11::basic_string\"* %34 to %union.anon**\l  store %union.anon* %38, %union.anon** %48, align 8, !tbaa !15\l  store i64 0, i64* %46, align 8, !tbaa !8\l  store i8 0, i8* %39, align 8, !tbaa !11\l  %49 = load i8*, i8** %15, align 8, !tbaa !15\l  %50 = icmp eq i8* %49, %17\l  br i1 %50, label %51, label %65\l|{<s0>T|<s1>F}}"];
	Node0x561c18a17ac0:s0 -> Node0x561c18a18990;
	Node0x561c18a17ac0:s1 -> Node0x561c18a18a20;
	Node0x561c18a18990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%51:\l51:                                               \l  %52 = load i64, i64* %18, align 8, !tbaa !8\l  %53 = icmp eq i64 %52, 0\l  br i1 %53, label %60, label %54\l|{<s0>T|<s1>F}}"];
	Node0x561c18a18990:s0 -> Node0x561c18a18c60;
	Node0x561c18a18990:s1 -> Node0x561c18a18cb0;
	Node0x561c18a18cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%54:\l54:                                               \l  %55 = load i8*, i8** %9, align 8, !tbaa !15\l  %56 = icmp eq i64 %52, 1\l  br i1 %56, label %57, label %59\l|{<s0>T|<s1>F}}"];
	Node0x561c18a18cb0:s0 -> Node0x561c18a18ef0;
	Node0x561c18a18cb0:s1 -> Node0x561c18a18f40;
	Node0x561c18a18ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%57:\l57:                                               \l  %58 = load i8, i8* %17, align 8, !tbaa !11\l  store i8 %58, i8* %55, align 1, !tbaa !11\l  br label %60\l}"];
	Node0x561c18a18ef0 -> Node0x561c18a18c60;
	Node0x561c18a18f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%59:\l59:                                               \l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %55, i8* nonnull align 8\l... %17, i64 %52, i1 false) #8\l  br label %60\l}"];
	Node0x561c18a18f40 -> Node0x561c18a18c60;
	Node0x561c18a18c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%60:\l60:                                               \l  %61 = load i64, i64* %18, align 8, !tbaa !8\l  store i64 %61, i64* %10, align 8, !tbaa !8\l  %62 = load i8*, i8** %9, align 8, !tbaa !15\l  %63 = getelementptr inbounds i8, i8* %62, i64 %61\l  store i8 0, i8* %63, align 1, !tbaa !11\l  %64 = load i8*, i8** %15, align 8, !tbaa !15\l  br label %74\l}"];
	Node0x561c18a18c60 -> Node0x561c18a19ba0;
	Node0x561c18a18a20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%65:\l65:                                               \l  %66 = load i8*, i8** %9, align 8, !tbaa !15\l  %67 = icmp eq i8* %66, %8\l  %68 = load i64, i64* %19, align 8\l  store i8* %49, i8** %9, align 8, !tbaa !15\l  %69 = load \<2 x i64\>, \<2 x i64\>* %25, align 8, !tbaa !11\l  store \<2 x i64\> %69, \<2 x i64\>* %26, align 8, !tbaa !11\l  %70 = icmp eq i8* %66, null\l  %71 = or i1 %67, %70\l  br i1 %71, label %73, label %72\l|{<s0>T|<s1>F}}"];
	Node0x561c18a18a20:s0 -> Node0x561c18a1a080;
	Node0x561c18a18a20:s1 -> Node0x561c18a1a0d0;
	Node0x561c18a1a0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%72:\l72:                                               \l  store i8* %66, i8** %15, align 8, !tbaa !15\l  store i64 %68, i64* %16, align 8, !tbaa !11\l  br label %74\l}"];
	Node0x561c18a1a0d0 -> Node0x561c18a19ba0;
	Node0x561c18a1a080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%73:\l73:                                               \l  store %union.anon* %13, %union.anon** %14, align 8, !tbaa !15\l  br label %74\l}"];
	Node0x561c18a1a080 -> Node0x561c18a19ba0;
	Node0x561c18a19ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = phi i8* [ %64, %60 ], [ %66, %72 ], [ %17, %73 ]\l  store i64 0, i64* %18, align 8, !tbaa !8\l  store i8 0, i8* %75, align 1, !tbaa !11\l  %76 = load i8*, i8** %15, align 8, !tbaa !15\l  %77 = icmp eq i8* %76, %17\l  br i1 %77, label %79, label %78\l|{<s0>T|<s1>F}}"];
	Node0x561c18a19ba0:s0 -> Node0x561c18a1a750;
	Node0x561c18a19ba0:s1 -> Node0x561c18a1a7a0;
	Node0x561c18a1a7a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%78:\l78:                                               \l  call void @_ZdlPv(i8* %76) #8\l  br label %79\l}"];
	Node0x561c18a1a7a0 -> Node0x561c18a1a750;
	Node0x561c18a1a750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%79:\l79:                                               \l  %80 = load i8*, i8** %20, align 8, !tbaa !15\l  %81 = icmp eq i8* %80, %22\l  br i1 %81, label %83, label %82\l|{<s0>T|<s1>F}}"];
	Node0x561c18a1a750:s0 -> Node0x561c18a13c50;
	Node0x561c18a1a750:s1 -> Node0x561c18a1ac10;
	Node0x561c18a1ac10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%82:\l82:                                               \l  call void @_ZdlPv(i8* %80) #8\l  br label %83\l}"];
	Node0x561c18a1ac10 -> Node0x561c18a13c50;
	Node0x561c18a13c50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%83:\l83:                                               \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #8\l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #8\l  %84 = icmp sgt i32 %30, 0\l  br i1 %84, label %27, label %97, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x561c18a13c50:s0 -> Node0x561c18a13b60;
	Node0x561c18a13c50:s1 -> Node0x561c18a13330;
	Node0x561c18a14620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%85:\l85:                                               \l  %86 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %92\l}"];
	Node0x561c18a14620 -> Node0x561c18a1b490;
	Node0x561c18a16280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%87:\l87:                                               \l  %88 = landingpad \{ i8*, i32 \}\l          cleanup\l  %89 = load i8*, i8** %20, align 8, !tbaa !15\l  %90 = icmp eq i8* %89, %22\l  br i1 %90, label %92, label %91\l|{<s0>T|<s1>F}}"];
	Node0x561c18a16280:s0 -> Node0x561c18a1b490;
	Node0x561c18a16280:s1 -> Node0x561c18a1b6c0;
	Node0x561c18a1b6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%91:\l91:                                               \l  call void @_ZdlPv(i8* %89) #8\l  br label %92\l}"];
	Node0x561c18a1b6c0 -> Node0x561c18a1b490;
	Node0x561c18a1b490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%92:\l92:                                               \l  %93 = phi \{ i8*, i32 \} [ %86, %85 ], [ %88, %87 ], [ %88, %91 ]\l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #8\l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #8\l  %94 = load i8*, i8** %9, align 8, !tbaa !15\l  %95 = icmp eq i8* %94, %8\l  br i1 %95, label %98, label %96\l|{<s0>T|<s1>F}}"];
	Node0x561c18a1b490:s0 -> Node0x561c18a1bdb0;
	Node0x561c18a1b490:s1 -> Node0x561c18a1be00;
	Node0x561c18a1be00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%96:\l96:                                               \l  call void @_ZdlPv(i8* %94) #8\l  br label %98\l}"];
	Node0x561c18a1be00 -> Node0x561c18a1bdb0;
	Node0x561c18a13330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%97:\l97:                                               \l  ret void\l}"];
	Node0x561c18a1bdb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%98:\l98:                                               \l  resume \{ i8*, i32 \} %93\l}"];
}
