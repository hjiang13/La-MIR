; ModuleID = '../../Human_xBenchmarks_164/CPP_48/CPP_48.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_48/CPP_48.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: uwtable
define dso_local zeroext i1 @_Z13is_palindromeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nocapture readonly %0) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca i64, align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #5
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8, !tbaa !3, !noalias !10
  %7 = ptrtoint i8* %6 to i64
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8, !tbaa !13, !noalias !10
  %10 = getelementptr inbounds i8, i8* %6, i64 %9
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %12 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  store %union.anon* %11, %union.anon** %12, align 8, !tbaa !14
  %13 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #5
  store i64 %9, i64* %2, align 8, !tbaa !15
  %14 = icmp ugt i64 %9, 15
  br i1 %14, label %15, label %20

15:                                               ; preds = %1
  %16 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3, i64* nonnull align 8 dereferenceable(8) %2, i64 0)
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8, !tbaa !3
  %18 = load i64, i64* %2, align 8, !tbaa !15
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2, i32 0
  store i64 %18, i64* %19, align 8, !tbaa !16
  br label %23

20:                                               ; preds = %1
  %21 = bitcast %union.anon* %11 to i8*
  %22 = icmp eq i64 %9, 0
  br i1 %22, label %134, label %23

23:                                               ; preds = %15, %20
  %24 = phi i8* [ %16, %15 ], [ %21, %20 ]
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %26 = icmp ult i64 %9, 4
  br i1 %26, label %81, label %27

27:                                               ; preds = %23
  %28 = getelementptr i8, i8* %24, i64 %9
  %29 = icmp ult i8* %24, %10
  %30 = icmp ult i8* %6, %28
  %31 = and i1 %29, %30
  br i1 %31, label %81, label %32

32:                                               ; preds = %27
  %33 = icmp ult i64 %9, 32
  br i1 %33, label %62, label %34

34:                                               ; preds = %32
  %35 = and i64 %9, -32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %52, %36 ]
  %38 = getelementptr i8, i8* %24, i64 %37
  %39 = xor i64 %37, -1
  %40 = getelementptr i8, i8* %10, i64 %39
  %41 = getelementptr inbounds i8, i8* %40, i64 -15
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1, !tbaa !16, !alias.scope !17
  %44 = shufflevector <16 x i8> %43, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %45 = getelementptr inbounds i8, i8* %40, i64 -31
  %46 = bitcast i8* %45 to <16 x i8>*
  %47 = load <16 x i8>, <16 x i8>* %46, align 1, !tbaa !16, !alias.scope !17
  %48 = shufflevector <16 x i8> %47, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %49 = bitcast i8* %38 to <16 x i8>*
  store <16 x i8> %44, <16 x i8>* %49, align 1, !tbaa !16, !alias.scope !20, !noalias !17
  %50 = getelementptr i8, i8* %38, i64 16
  %51 = bitcast i8* %50 to <16 x i8>*
  store <16 x i8> %48, <16 x i8>* %51, align 1, !tbaa !16, !alias.scope !20, !noalias !17
  %52 = add nuw i64 %37, 32
  %53 = icmp eq i64 %52, %35
  br i1 %53, label %54, label %36, !llvm.loop !22

54:                                               ; preds = %36
  %55 = icmp eq i64 %9, %35
  br i1 %55, label %131, label %56

56:                                               ; preds = %54
  %57 = getelementptr i8, i8* %24, i64 %35
  %58 = sub i64 0, %35
  %59 = getelementptr i8, i8* %10, i64 %58
  %60 = and i64 %9, 28
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %81, label %62

62:                                               ; preds = %32, %56
  %63 = phi i64 [ %35, %56 ], [ 0, %32 ]
  %64 = and i64 %9, -4
  %65 = sub i64 0, %64
  %66 = getelementptr i8, i8* %10, i64 %65
  %67 = getelementptr i8, i8* %24, i64 %64
  br label %68

68:                                               ; preds = %68, %62
  %69 = phi i64 [ %63, %62 ], [ %77, %68 ]
  %70 = getelementptr i8, i8* %24, i64 %69
  %71 = sub nuw nsw i64 -4, %69
  %72 = getelementptr i8, i8* %10, i64 %71
  %73 = bitcast i8* %72 to <4 x i8>*
  %74 = load <4 x i8>, <4 x i8>* %73, align 1, !tbaa !16
  %75 = shufflevector <4 x i8> %74, <4 x i8> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %76 = bitcast i8* %70 to <4 x i8>*
  store <4 x i8> %75, <4 x i8>* %76, align 1, !tbaa !16
  %77 = add nuw i64 %69, 4
  %78 = icmp eq i64 %77, %64
  br i1 %78, label %79, label %68, !llvm.loop !25

79:                                               ; preds = %68
  %80 = icmp eq i64 %9, %64
  br i1 %80, label %131, label %81

81:                                               ; preds = %27, %23, %56, %79
  %82 = phi i8* [ %10, %23 ], [ %10, %27 ], [ %59, %56 ], [ %66, %79 ]
  %83 = phi i8* [ %24, %23 ], [ %24, %27 ], [ %57, %56 ], [ %67, %79 ]
  %84 = ptrtoint i8* %82 to i64
  %85 = sub i64 %84, %7
  %86 = xor i64 %7, -1
  %87 = add i64 %86, %84
  %88 = and i64 %85, 7
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %99, label %90

90:                                               ; preds = %81, %90
  %91 = phi i8* [ %94, %90 ], [ %82, %81 ]
  %92 = phi i8* [ %96, %90 ], [ %83, %81 ]
  %93 = phi i64 [ %97, %90 ], [ %88, %81 ]
  %94 = getelementptr inbounds i8, i8* %91, i64 -1
  %95 = load i8, i8* %94, align 1, !tbaa !16
  store i8 %95, i8* %92, align 1, !tbaa !16
  %96 = getelementptr inbounds i8, i8* %92, i64 1
  %97 = add i64 %93, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %90, !llvm.loop !26

99:                                               ; preds = %90, %81
  %100 = phi i8* [ %82, %81 ], [ %94, %90 ]
  %101 = phi i8* [ %83, %81 ], [ %96, %90 ]
  %102 = icmp ult i64 %87, 7
  br i1 %102, label %131, label %103

103:                                              ; preds = %99, %103
  %104 = phi i8* [ %127, %103 ], [ %100, %99 ]
  %105 = phi i8* [ %129, %103 ], [ %101, %99 ]
  %106 = getelementptr inbounds i8, i8* %104, i64 -1
  %107 = load i8, i8* %106, align 1, !tbaa !16
  store i8 %107, i8* %105, align 1, !tbaa !16
  %108 = getelementptr inbounds i8, i8* %105, i64 1
  %109 = getelementptr inbounds i8, i8* %104, i64 -2
  %110 = load i8, i8* %109, align 1, !tbaa !16
  store i8 %110, i8* %108, align 1, !tbaa !16
  %111 = getelementptr inbounds i8, i8* %105, i64 2
  %112 = getelementptr inbounds i8, i8* %104, i64 -3
  %113 = load i8, i8* %112, align 1, !tbaa !16
  store i8 %113, i8* %111, align 1, !tbaa !16
  %114 = getelementptr inbounds i8, i8* %105, i64 3
  %115 = getelementptr inbounds i8, i8* %104, i64 -4
  %116 = load i8, i8* %115, align 1, !tbaa !16
  store i8 %116, i8* %114, align 1, !tbaa !16
  %117 = getelementptr inbounds i8, i8* %105, i64 4
  %118 = getelementptr inbounds i8, i8* %104, i64 -5
  %119 = load i8, i8* %118, align 1, !tbaa !16
  store i8 %119, i8* %117, align 1, !tbaa !16
  %120 = getelementptr inbounds i8, i8* %105, i64 5
  %121 = getelementptr inbounds i8, i8* %104, i64 -6
  %122 = load i8, i8* %121, align 1, !tbaa !16
  store i8 %122, i8* %120, align 1, !tbaa !16
  %123 = getelementptr inbounds i8, i8* %105, i64 6
  %124 = getelementptr inbounds i8, i8* %104, i64 -7
  %125 = load i8, i8* %124, align 1, !tbaa !16
  store i8 %125, i8* %123, align 1, !tbaa !16
  %126 = getelementptr inbounds i8, i8* %105, i64 7
  %127 = getelementptr inbounds i8, i8* %104, i64 -8
  %128 = load i8, i8* %127, align 1, !tbaa !16
  store i8 %128, i8* %126, align 1, !tbaa !16
  %129 = getelementptr inbounds i8, i8* %105, i64 8
  %130 = icmp eq i8* %127, %6
  br i1 %130, label %131, label %103, !llvm.loop !28

131:                                              ; preds = %99, %103, %79, %54
  %132 = load i64, i64* %2, align 8, !tbaa !15
  %133 = load i8*, i8** %25, align 8, !tbaa !3
  br label %134

134:                                              ; preds = %131, %20
  %135 = phi i8* [ %133, %131 ], [ %21, %20 ]
  %136 = phi i64 [ %132, %131 ], [ 0, %20 ]
  %137 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %138 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  store i64 %136, i64* %138, align 8, !tbaa !13
  %139 = getelementptr inbounds i8, i8* %135, i64 %136
  store i8 0, i8* %139, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #5
  %140 = load i64, i64* %138, align 8, !tbaa !13
  %141 = load i64, i64* %8, align 8, !tbaa !13
  %142 = icmp eq i64 %140, %141
  br i1 %142, label %143, label %150

143:                                              ; preds = %134
  %144 = icmp eq i64 %140, 0
  br i1 %144, label %150, label %145

145:                                              ; preds = %143
  %146 = load i8*, i8** %5, align 8, !tbaa !3
  %147 = load i8*, i8** %137, align 8, !tbaa !3
  %148 = call i32 @bcmp(i8* %147, i8* %146, i64 %140) #5
  %149 = icmp eq i32 %148, 0
  br label %150

150:                                              ; preds = %134, %143, %145
  %151 = phi i1 [ false, %134 ], [ %149, %145 ], [ true, %143 ]
  %152 = load i8*, i8** %137, align 8, !tbaa !3
  %153 = bitcast %union.anon* %11 to i8*
  %154 = icmp eq i8* %152, %153
  br i1 %154, label %156, label %155

155:                                              ; preds = %150
  call void @_ZdlPv(i8* %152) #5
  br label %156

156:                                              ; preds = %150, %155
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #5
  ret i1 %151
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly nofree nounwind readonly willreturn }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !6, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv: argument 0"}
!12 = distinct !{!12, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv"}
!13 = !{!4, !9, i64 8}
!14 = !{!5, !6, i64 0}
!15 = !{!9, !9, i64 0}
!16 = !{!7, !7, i64 0}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !23, !24}
!23 = !{!"llvm.loop.mustprogress"}
!24 = !{!"llvm.loop.isvectorized", i32 1}
!25 = distinct !{!25, !23, !24}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.unroll.disable"}
!28 = distinct !{!28, !23, !24}
