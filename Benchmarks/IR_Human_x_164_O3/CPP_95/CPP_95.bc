; ModuleID = '../../Human_xBenchmarks_164/CPP_95/CPP_95.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_95/CPP_95.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>>>, std::less<std::__cxx11::basic_string<char>>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>>>, std::less<std::__cxx11::basic_string<char>>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: uwtable
define dso_local zeroext i1 @_Z15check_dict_caseSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEE(%"class.std::map"* %0) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca i64, align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = getelementptr inbounds %"class.std::map", %"class.std::map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds i8, i8* %4, i64 40
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !3
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %80, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds i8, i8* %4, i64 24
  %11 = bitcast i8* %10 to %"struct.std::_Rb_tree_node_base"**
  %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8, !tbaa !11
  %13 = getelementptr inbounds i8, i8* %4, i64 8
  %14 = bitcast i8* %13 to %"struct.std::_Rb_tree_node_base"*
  %15 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %17 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  %18 = bitcast i64* %2 to i8*
  %19 = bitcast %union.anon* %16 to i8*
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2, i32 0
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  %23 = icmp eq %"struct.std::_Rb_tree_node_base"* %12, %14
  br i1 %23, label %80, label %24

24:                                               ; preds = %9, %77
  %25 = phi i32 [ %73, %77 ], [ 0, %9 ]
  %26 = phi i32 [ %71, %77 ], [ 0, %9 ]
  %27 = phi %"struct.std::_Rb_tree_node_base"* [ %78, %77 ], [ %12, %9 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #6
  %28 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %27, i64 1
  store %union.anon* %16, %union.anon** %17, align 8, !tbaa !12
  %29 = bitcast %"struct.std::_Rb_tree_node_base"* %28 to i8**
  %30 = load i8*, i8** %29, align 8, !tbaa !14
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %27, i64 1, i32 1
  %32 = bitcast %"struct.std::_Rb_tree_node_base"** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  store i64 %33, i64* %2, align 8, !tbaa !17
  %34 = icmp ugt i64 %33, 15
  br i1 %34, label %35, label %38

35:                                               ; preds = %24
  %36 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3, i64* nonnull align 8 dereferenceable(8) %2, i64 0)
  store i8* %36, i8** %20, align 8, !tbaa !14
  %37 = load i64, i64* %2, align 8, !tbaa !17
  store i64 %37, i64* %21, align 8, !tbaa !18
  br label %38

38:                                               ; preds = %24, %35
  %39 = phi i8* [ %36, %35 ], [ %19, %24 ]
  switch i64 %33, label %42 [
    i64 1, label %40
    i64 0, label %43
  ]

40:                                               ; preds = %38
  %41 = load i8, i8* %30, align 1, !tbaa !18
  store i8 %41, i8* %39, align 1, !tbaa !18
  br label %43

42:                                               ; preds = %38
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %30, i64 %33, i1 false) #6
  br label %43

43:                                               ; preds = %38, %40, %42
  %44 = load i64, i64* %2, align 8, !tbaa !17
  store i64 %44, i64* %22, align 8, !tbaa !16
  %45 = load i8*, i8** %20, align 8, !tbaa !14
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  store i8 0, i8* %46, align 1, !tbaa !18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  %47 = load i64, i64* %22, align 8, !tbaa !16
  %48 = load i8*, i8** %20, align 8
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %70, label %52

50:                                               ; preds = %64
  %51 = icmp eq i64 %69, %47
  br i1 %51, label %70, label %52, !llvm.loop !19

52:                                               ; preds = %43, %50
  %53 = phi i64 [ %69, %50 ], [ 0, %43 ]
  %54 = phi i32 [ %66, %50 ], [ %25, %43 ]
  %55 = phi i32 [ %65, %50 ], [ %26, %43 ]
  %56 = getelementptr inbounds i8, i8* %48, i64 %53
  %57 = load i8, i8* %56, align 1, !tbaa !18
  %58 = icmp slt i8 %57, 65
  br i1 %58, label %70, label %59

59:                                               ; preds = %52
  %60 = icmp sgt i8 %57, 90
  br i1 %60, label %61, label %64

61:                                               ; preds = %59
  %62 = add nsw i8 %57, -97
  %63 = icmp ugt i8 %62, 25
  br i1 %63, label %70, label %64

64:                                               ; preds = %61, %59
  %65 = phi i32 [ 1, %59 ], [ %55, %61 ]
  %66 = phi i32 [ %54, %59 ], [ 1, %61 ]
  %67 = add nsw i32 %66, %65
  %68 = icmp eq i32 %67, 2
  %69 = add nuw i64 %53, 1
  br i1 %68, label %70, label %50

70:                                               ; preds = %50, %61, %52, %64, %43
  %71 = phi i32 [ %26, %43 ], [ %65, %64 ], [ %55, %52 ], [ %55, %61 ], [ %65, %50 ]
  %72 = phi i1 [ true, %43 ], [ false, %64 ], [ false, %52 ], [ false, %61 ], [ true, %50 ]
  %73 = phi i32 [ %25, %43 ], [ %66, %64 ], [ %54, %52 ], [ %54, %61 ], [ %66, %50 ]
  %74 = icmp eq i8* %48, %19
  br i1 %74, label %76, label %75

75:                                               ; preds = %70
  call void @_ZdlPv(i8* %48) #6
  br label %76

76:                                               ; preds = %70, %75
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #6
  br i1 %72, label %77, label %80

77:                                               ; preds = %76
  %78 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %27) #7
  %79 = icmp eq %"struct.std::_Rb_tree_node_base"* %78, %14
  br i1 %79, label %80, label %24, !llvm.loop !21

80:                                               ; preds = %76, %77, %9, %1
  %81 = phi i1 [ false, %1 ], [ true, %9 ], [ %72, %77 ], [ %72, %76 ]
  ret i1 %81
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) local_unnamed_addr #4

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #5

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #3 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !10, i64 32}
!4 = !{!"_ZTSSt15_Rb_tree_header", !5, i64 0, !10, i64 32}
!5 = !{!"_ZTSSt18_Rb_tree_node_base", !6, i64 0, !9, i64 8, !9, i64 16, !9, i64 24}
!6 = !{!"_ZTSSt14_Rb_tree_color", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"any pointer", !7, i64 0}
!10 = !{!"long", !7, i64 0}
!11 = !{!4, !9, i64 16}
!12 = !{!13, !9, i64 0}
!13 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !9, i64 0}
!14 = !{!15, !9, i64 0}
!15 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !13, i64 0, !10, i64 8, !7, i64 16}
!16 = !{!15, !10, i64 8}
!17 = !{!10, !10, i64 0}
!18 = !{!7, !7, i64 0}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.mustprogress"}
!21 = distinct !{!21, !20}
