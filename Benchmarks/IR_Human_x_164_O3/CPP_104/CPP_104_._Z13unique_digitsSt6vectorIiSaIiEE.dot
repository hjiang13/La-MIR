digraph "CFG for '_Z13unique_digitsSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z13unique_digitsSt6vectorIiSaIiEE' function";

	Node0x557b4bb39640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %6 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %7 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %8 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %8, i8 0, i64 24, i1 false)\l  %9 = load i32*, i32** %3, align 8, !tbaa !3\l  %10 = load i32*, i32** %4, align 8, !tbaa !8\l  %11 = icmp eq i32* %9, %10\l  br i1 %11, label %111, label %23\l|{<s0>T|<s1>F}}"];
	Node0x557b4bb39640:s0 -> Node0x557b4bb3b500;
	Node0x557b4bb39640:s1 -> Node0x557b4bb3b590;
	Node0x557b4bb3b6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%12:\l12:                                               \l  %13 = icmp eq i32* %100, %102\l  br i1 %13, label %111, label %14\l|{<s0>T|<s1>F}}"];
	Node0x557b4bb3b6d0:s0 -> Node0x557b4bb3b500;
	Node0x557b4bb3b6d0:s1 -> Node0x557b4bb3b860;
	Node0x557b4bb3b860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%14:\l14:                                               \l  %15 = ptrtoint i32* %102 to i64\l  %16 = ptrtoint i32* %100 to i64\l  %17 = sub i64 %15, %16\l  %18 = ashr exact i64 %17, 2\l  %19 = tail call i64 @llvm.ctlz.i64(i64 %18, i1 true) #8, !range !9\l  %20 = shl nuw nsw i64 %19, 1\l  %21 = xor i64 %20, 126\l  invoke void\l... @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElN\l...S0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i32* %100, i32* %102, i64 %21)\l          to label %22 unwind label %109\l}"];
	Node0x557b4bb3b860 -> Node0x557b4bb3c0c0;
	Node0x557b4bb3b860 -> Node0x557b4bb3c150;
	Node0x557b4bb3c0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%22:\l22:                                               \l  invoke void\l... @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIi\l...EEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* %100, i32* %102)\l          to label %111 unwind label %109\l}"];
	Node0x557b4bb3c0c0 -> Node0x557b4bb3b500;
	Node0x557b4bb3c0c0 -> Node0x557b4bb3c150;
	Node0x557b4bb3b590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%23:\l23:                                               \l  %24 = phi i32* [ %98, %97 ], [ %10, %2 ]\l  %25 = phi i32* [ %99, %97 ], [ %9, %2 ]\l  %26 = phi i32* [ %100, %97 ], [ null, %2 ]\l  %27 = phi i32* [ %101, %97 ], [ null, %2 ]\l  %28 = phi i32* [ %102, %97 ], [ null, %2 ]\l  %29 = phi i64 [ %103, %97 ], [ 0, %2 ]\l  %30 = getelementptr inbounds i32, i32* %24, i64 %29\l  %31 = load i32, i32* %30, align 4, !tbaa !10\l  %32 = icmp ne i32 %31, 0\l  %33 = icmp sgt i32 %31, 0\l  br i1 %33, label %34, label %47\l|{<s0>T|<s1>F}}"];
	Node0x557b4bb3b590:s0 -> Node0x557b4bb3d2b0;
	Node0x557b4bb3b590:s1 -> Node0x557b4bb3d340;
	Node0x557b4bb3d2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%34:\l34:                                               \l  %35 = zext i1 %32 to i8\l  br label %36\l}"];
	Node0x557b4bb3d2b0 -> Node0x557b4bb3d4f0;
	Node0x557b4bb3d4f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = phi i8 [ %41, %36 ], [ %35, %34 ]\l  %38 = phi i32 [ %42, %36 ], [ %31, %34 ]\l  %39 = and i32 %38, 1\l  %40 = icmp eq i32 %39, 0\l  %41 = select i1 %40, i8 0, i8 %37\l  %42 = udiv i32 %38, 10\l  %43 = icmp ugt i32 %38, 9\l  %44 = and i8 %41, 1\l  %45 = icmp ne i8 %44, 0\l  %46 = select i1 %43, i1 %45, i1 false\l  br i1 %46, label %36, label %47, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x557b4bb3d4f0:s0 -> Node0x557b4bb3d4f0;
	Node0x557b4bb3d4f0:s1 -> Node0x557b4bb3d340;
	Node0x557b4bb3d340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%47:\l47:                                               \l  %48 = phi i1 [ %32, %23 ], [ %45, %36 ]\l  br i1 %48, label %49, label %97\l|{<s0>T|<s1>F}}"];
	Node0x557b4bb3d340:s0 -> Node0x557b4bb3dea0;
	Node0x557b4bb3d340:s1 -> Node0x557b4bb3c830;
	Node0x557b4bb3dea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%49:\l49:                                               \l  %50 = icmp eq i32* %28, %27\l  br i1 %50, label %53, label %51\l|{<s0>T|<s1>F}}"];
	Node0x557b4bb3dea0:s0 -> Node0x557b4bb3e030;
	Node0x557b4bb3dea0:s1 -> Node0x557b4bb3e080;
	Node0x557b4bb3e080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%51:\l51:                                               \l  store i32 %31, i32* %28, align 4, !tbaa !10\l  %52 = getelementptr inbounds i32, i32* %28, i64 1\l  store i32* %52, i32** %5, align 8, !tbaa !3\l  br label %97\l}"];
	Node0x557b4bb3e080 -> Node0x557b4bb3c830;
	Node0x557b4bb3e030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%53:\l53:                                               \l  %54 = ptrtoint i32* %27 to i64\l  %55 = ptrtoint i32* %26 to i64\l  %56 = sub i64 %54, %55\l  %57 = ashr exact i64 %56, 2\l  %58 = icmp eq i64 %56, 9223372036854775804\l  br i1 %58, label %59, label %61\l|{<s0>T|<s1>F}}"];
	Node0x557b4bb3e030:s0 -> Node0x557b4bb3f2f0;
	Node0x557b4bb3e030:s1 -> Node0x557b4bb3f340;
	Node0x557b4bb3f2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%59:\l59:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #9\l          to label %60 unwind label %95\l}"];
	Node0x557b4bb3f2f0 -> Node0x557b4bb3f500;
	Node0x557b4bb3f2f0 -> Node0x557b4bb3f550;
	Node0x557b4bb3f500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%60:\l60:                                               \l  unreachable\l}"];
	Node0x557b4bb3f340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%61:\l61:                                               \l  %62 = icmp eq i64 %56, 0\l  %63 = select i1 %62, i64 1, i64 %57\l  %64 = add nsw i64 %63, %57\l  %65 = icmp ult i64 %64, %57\l  %66 = icmp ugt i64 %64, 2305843009213693951\l  %67 = or i1 %65, %66\l  %68 = select i1 %67, i64 2305843009213693951, i64 %64\l  %69 = icmp eq i64 %68, 0\l  br i1 %69, label %76, label %70\l|{<s0>T|<s1>F}}"];
	Node0x557b4bb3f340:s0 -> Node0x557b4bb400c0;
	Node0x557b4bb3f340:s1 -> Node0x557b4bb40110;
	Node0x557b4bb40110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%70:\l70:                                               \l  %71 = shl nuw nsw i64 %68, 2\l  %72 = invoke noalias nonnull i8* @_Znwm(i64 %71) #10\l          to label %73 unwind label %93\l}"];
	Node0x557b4bb40110 -> Node0x557b4bb402a0;
	Node0x557b4bb40110 -> Node0x557b4bb402f0;
	Node0x557b4bb402a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%73:\l73:                                               \l  %74 = bitcast i8* %72 to i32*\l  %75 = load i32, i32* %30, align 4, !tbaa !10\l  br label %76\l}"];
	Node0x557b4bb402a0 -> Node0x557b4bb400c0;
	Node0x557b4bb400c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%76:\l76:                                               \l  %77 = phi i32 [ %75, %73 ], [ %31, %61 ]\l  %78 = phi i32* [ %74, %73 ], [ null, %61 ]\l  %79 = getelementptr inbounds i32, i32* %78, i64 %57\l  store i32 %77, i32* %79, align 4, !tbaa !10\l  %80 = icmp sgt i64 %56, 0\l  br i1 %80, label %81, label %84\l|{<s0>T|<s1>F}}"];
	Node0x557b4bb400c0:s0 -> Node0x557b4bb409d0;
	Node0x557b4bb400c0:s1 -> Node0x557b4bb40a20;
	Node0x557b4bb409d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%81:\l81:                                               \l  %82 = bitcast i32* %78 to i8*\l  %83 = bitcast i32* %26 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 %83,\l... i64 %56, i1 false) #8\l  br label %84\l}"];
	Node0x557b4bb409d0 -> Node0x557b4bb40a20;
	Node0x557b4bb40a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%84:\l84:                                               \l  %85 = getelementptr inbounds i32, i32* %79, i64 1\l  %86 = icmp eq i32* %26, null\l  br i1 %86, label %89, label %87\l|{<s0>T|<s1>F}}"];
	Node0x557b4bb40a20:s0 -> Node0x557b4bb410b0;
	Node0x557b4bb40a20:s1 -> Node0x557b4bb41100;
	Node0x557b4bb41100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%87:\l87:                                               \l  %88 = bitcast i32* %26 to i8*\l  tail call void @_ZdlPv(i8* nonnull %88) #8\l  br label %89\l}"];
	Node0x557b4bb41100 -> Node0x557b4bb410b0;
	Node0x557b4bb410b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%89:\l89:                                               \l  store i32* %78, i32** %7, align 8, !tbaa !8\l  store i32* %85, i32** %5, align 8, !tbaa !3\l  %90 = getelementptr inbounds i32, i32* %78, i64 %68\l  store i32* %90, i32** %6, align 8, !tbaa !14\l  %91 = load i32*, i32** %3, align 8, !tbaa !3\l  %92 = load i32*, i32** %4, align 8, !tbaa !8\l  br label %97\l}"];
	Node0x557b4bb410b0 -> Node0x557b4bb3c830;
	Node0x557b4bb402f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%93:\l93:                                               \l  %94 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %112\l}"];
	Node0x557b4bb402f0 -> Node0x557b4bb41fe0;
	Node0x557b4bb3f550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%95:\l95:                                               \l  %96 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %112\l}"];
	Node0x557b4bb3f550 -> Node0x557b4bb41fe0;
	Node0x557b4bb3c830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%97:\l97:                                               \l  %98 = phi i32* [ %92, %89 ], [ %24, %51 ], [ %24, %47 ]\l  %99 = phi i32* [ %91, %89 ], [ %25, %51 ], [ %25, %47 ]\l  %100 = phi i32* [ %78, %89 ], [ %26, %51 ], [ %26, %47 ]\l  %101 = phi i32* [ %90, %89 ], [ %27, %51 ], [ %27, %47 ]\l  %102 = phi i32* [ %85, %89 ], [ %52, %51 ], [ %28, %47 ]\l  %103 = add nuw i64 %29, 1\l  %104 = ptrtoint i32* %99 to i64\l  %105 = ptrtoint i32* %98 to i64\l  %106 = sub i64 %104, %105\l  %107 = ashr exact i64 %106, 2\l  %108 = icmp ugt i64 %107, %103\l  br i1 %108, label %23, label %12, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x557b4bb3c830:s0 -> Node0x557b4bb3b590;
	Node0x557b4bb3c830:s1 -> Node0x557b4bb3b6d0;
	Node0x557b4bb3c150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%109:\l109:                                              \l  %110 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %112\l}"];
	Node0x557b4bb3c150 -> Node0x557b4bb41fe0;
	Node0x557b4bb3b500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%111:\l111:                                              \l  ret void\l}"];
	Node0x557b4bb41fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%112:\l112:                                              \l  %113 = phi i32* [ %100, %109 ], [ %26, %93 ], [ %26, %95 ]\l  %114 = phi \{ i8*, i32 \} [ %110, %109 ], [ %94, %93 ], [ %96, %95 ]\l  %115 = icmp eq i32* %113, null\l  br i1 %115, label %118, label %116\l|{<s0>T|<s1>F}}"];
	Node0x557b4bb41fe0:s0 -> Node0x557b4bb42d60;
	Node0x557b4bb41fe0:s1 -> Node0x557b4bb42db0;
	Node0x557b4bb42db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%116:\l116:                                              \l  %117 = bitcast i32* %113 to i8*\l  tail call void @_ZdlPv(i8* nonnull %117) #8\l  br label %118\l}"];
	Node0x557b4bb42db0 -> Node0x557b4bb42d60;
	Node0x557b4bb42d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%118:\l118:                                              \l  resume \{ i8*, i32 \} %114\l}"];
}
