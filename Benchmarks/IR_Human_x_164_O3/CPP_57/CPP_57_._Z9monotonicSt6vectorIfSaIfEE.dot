digraph "CFG for '_Z9monotonicSt6vectorIfSaIfEE' function" {
	label="CFG for '_Z9monotonicSt6vectorIfSaIfEE' function";

	Node0x559d90ae6820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%1:\l  %2 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %3 = load float*, float** %2, align 8, !tbaa !3\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = load float*, float** %4, align 8, !tbaa !8\l  %6 = ptrtoint float* %3 to i64\l  %7 = ptrtoint float* %5 to i64\l  %8 = sub i64 %6, %7\l  %9 = ashr exact i64 %8, 2\l  %10 = icmp ugt i64 %9, 1\l  br i1 %10, label %11, label %42\l|{<s0>T|<s1>F}}"];
	Node0x559d90ae6820:s0 -> Node0x559d90ae7cd0;
	Node0x559d90ae6820:s1 -> Node0x559d90ae8220;
	Node0x559d90ae7cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%11:\l11:                                               \l  %12 = load float, float* %5, align 4, !tbaa !9\l  %13 = add nsw i64 %9, -1\l  %14 = add nsw i64 %9, -2\l  %15 = and i64 %13, 3\l  %16 = icmp ult i64 %14, 3\l  br i1 %16, label %19, label %17\l|{<s0>T|<s1>F}}"];
	Node0x559d90ae7cd0:s0 -> Node0x559d90ae8780;
	Node0x559d90ae7cd0:s1 -> Node0x559d90ae8810;
	Node0x559d90ae8810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%17:\l17:                                               \l  %18 = and i64 %13, -4\l  br label %47\l}"];
	Node0x559d90ae8810 -> Node0x559d90ae8980;
	Node0x559d90ae8780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%19:\l19:                                               \l  %20 = phi i32 [ undef, %11 ], [ %74, %47 ]\l  %21 = phi i32 [ undef, %11 ], [ %79, %47 ]\l  %22 = phi float [ %12, %11 ], [ %69, %47 ]\l  %23 = phi i64 [ 1, %11 ], [ %80, %47 ]\l  %24 = phi i32 [ 0, %11 ], [ %79, %47 ]\l  %25 = phi i32 [ 0, %11 ], [ %74, %47 ]\l  %26 = icmp eq i64 %15, 0\l  br i1 %26, label %42, label %27\l|{<s0>T|<s1>F}}"];
	Node0x559d90ae8780:s0 -> Node0x559d90ae8220;
	Node0x559d90ae8780:s1 -> Node0x559d90ae9440;
	Node0x559d90ae9440 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi float [ %34, %27 ], [ %22, %19 ]\l  %29 = phi i64 [ %39, %27 ], [ %23, %19 ]\l  %30 = phi i32 [ %38, %27 ], [ %24, %19 ]\l  %31 = phi i32 [ %36, %27 ], [ %25, %19 ]\l  %32 = phi i64 [ %40, %27 ], [ %15, %19 ]\l  %33 = getelementptr inbounds float, float* %5, i64 %29\l  %34 = load float, float* %33, align 4, !tbaa !9\l  %35 = fcmp ogt float %34, %28\l  %36 = select i1 %35, i32 1, i32 %31\l  %37 = fcmp olt float %34, %28\l  %38 = select i1 %37, i32 1, i32 %30\l  %39 = add nuw nsw i64 %29, 1\l  %40 = add i64 %32, -1\l  %41 = icmp eq i64 %40, 0\l  br i1 %41, label %42, label %27, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x559d90ae9440:s0 -> Node0x559d90ae8220;
	Node0x559d90ae9440:s1 -> Node0x559d90ae9440;
	Node0x559d90ae8220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%42:\l42:                                               \l  %43 = phi i32 [ 0, %1 ], [ %20, %19 ], [ %36, %27 ]\l  %44 = phi i32 [ 0, %1 ], [ %21, %19 ], [ %38, %27 ]\l  %45 = add nsw i32 %44, %43\l  %46 = icmp ne i32 %45, 2\l  ret i1 %46\l}"];
	Node0x559d90ae8980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%47:\l47:                                               \l  %48 = phi float [ %12, %17 ], [ %69, %47 ]\l  %49 = phi i64 [ 1, %17 ], [ %80, %47 ]\l  %50 = phi i32 [ 0, %17 ], [ %79, %47 ]\l  %51 = phi i32 [ 0, %17 ], [ %74, %47 ]\l  %52 = phi i64 [ %18, %17 ], [ %81, %47 ]\l  %53 = getelementptr inbounds float, float* %5, i64 %49\l  %54 = load float, float* %53, align 4, !tbaa !9\l  %55 = fcmp ogt float %54, %48\l  %56 = fcmp olt float %54, %48\l  %57 = add nuw nsw i64 %49, 1\l  %58 = getelementptr inbounds float, float* %5, i64 %57\l  %59 = load float, float* %58, align 4, !tbaa !9\l  %60 = fcmp ogt float %59, %54\l  %61 = fcmp olt float %59, %54\l  %62 = add nuw nsw i64 %49, 2\l  %63 = getelementptr inbounds float, float* %5, i64 %62\l  %64 = load float, float* %63, align 4, !tbaa !9\l  %65 = fcmp ogt float %64, %59\l  %66 = fcmp olt float %64, %59\l  %67 = add nuw nsw i64 %49, 3\l  %68 = getelementptr inbounds float, float* %5, i64 %67\l  %69 = load float, float* %68, align 4, !tbaa !9\l  %70 = fcmp ogt float %69, %64\l  %71 = select i1 %70, i1 true, i1 %65\l  %72 = select i1 %71, i1 true, i1 %60\l  %73 = select i1 %72, i1 true, i1 %55\l  %74 = select i1 %73, i32 1, i32 %51\l  %75 = fcmp olt float %69, %64\l  %76 = select i1 %75, i1 true, i1 %66\l  %77 = select i1 %76, i1 true, i1 %61\l  %78 = select i1 %77, i1 true, i1 %56\l  %79 = select i1 %78, i32 1, i32 %50\l  %80 = add nuw nsw i64 %49, 4\l  %81 = add i64 %52, -4\l  %82 = icmp eq i64 %81, 0\l  br i1 %82, label %19, label %47, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x559d90ae8980:s0 -> Node0x559d90ae8780;
	Node0x559d90ae8980:s1 -> Node0x559d90ae8980;
}
