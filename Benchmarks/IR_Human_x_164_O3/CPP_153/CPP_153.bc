; ModuleID = '../../Human_xBenchmarks_164/CPP_153/CPP_153.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_153/CPP_153.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }

; Function Attrs: uwtable
define dso_local void @_Z19Strongest_ExtensionNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS4_SaIS4_EE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1, %"class.std::vector"* nocapture readonly %2) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %9 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  store %union.anon* %8, %union.anon** %9, align 8, !tbaa !3
  %10 = bitcast %union.anon* %8 to i8*
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  store i64 0, i64* %12, align 8, !tbaa !8
  store i8 0, i8* %10, align 8, !tbaa !11
  %13 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %13, align 8, !tbaa !12
  %16 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %14, align 8, !tbaa !14
  %17 = icmp eq %"class.std::__cxx11::basic_string"* %15, %16
  br i1 %17, label %68, label %18

18:                                               ; preds = %3, %129
  %19 = phi %"class.std::__cxx11::basic_string"* [ %130, %129 ], [ %16, %3 ]
  %20 = phi %"class.std::__cxx11::basic_string"* [ %131, %129 ], [ %15, %3 ]
  %21 = phi i64 [ %133, %129 ], [ 0, %3 ]
  %22 = phi i32 [ %132, %129 ], [ -1000, %3 ]
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 %21
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 %21, i32 1
  %25 = load i64, i64* %24, align 8, !tbaa !8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %105, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %23, i64 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8, !tbaa !15
  %30 = icmp ult i64 %25, 8
  br i1 %30, label %65, label %31

31:                                               ; preds = %27
  %32 = and i64 %25, -8
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi i64 [ 0, %31 ], [ %59, %33 ]
  %35 = phi <4 x i32> [ zeroinitializer, %31 ], [ %57, %33 ]
  %36 = phi <4 x i32> [ zeroinitializer, %31 ], [ %58, %33 ]
  %37 = getelementptr inbounds i8, i8* %29, i64 %34
  %38 = bitcast i8* %37 to <4 x i8>*
  %39 = load <4 x i8>, <4 x i8>* %38, align 1, !tbaa !11
  %40 = getelementptr inbounds i8, i8* %37, i64 4
  %41 = bitcast i8* %40 to <4 x i8>*
  %42 = load <4 x i8>, <4 x i8>* %41, align 1, !tbaa !11
  %43 = add <4 x i8> %39, <i8 -65, i8 -65, i8 -65, i8 -65>
  %44 = add <4 x i8> %42, <i8 -65, i8 -65, i8 -65, i8 -65>
  %45 = icmp ult <4 x i8> %43, <i8 26, i8 26, i8 26, i8 26>
  %46 = icmp ult <4 x i8> %44, <i8 26, i8 26, i8 26, i8 26>
  %47 = zext <4 x i1> %45 to <4 x i32>
  %48 = zext <4 x i1> %46 to <4 x i32>
  %49 = add <4 x i32> %35, %47
  %50 = add <4 x i32> %36, %48
  %51 = add <4 x i8> %39, <i8 -97, i8 -97, i8 -97, i8 -97>
  %52 = add <4 x i8> %42, <i8 -97, i8 -97, i8 -97, i8 -97>
  %53 = icmp ult <4 x i8> %51, <i8 26, i8 26, i8 26, i8 26>
  %54 = icmp ult <4 x i8> %52, <i8 26, i8 26, i8 26, i8 26>
  %55 = sext <4 x i1> %53 to <4 x i32>
  %56 = sext <4 x i1> %54 to <4 x i32>
  %57 = add <4 x i32> %49, %55
  %58 = add <4 x i32> %50, %56
  %59 = add nuw i64 %34, 8
  %60 = icmp eq i64 %59, %32
  br i1 %60, label %61, label %33, !llvm.loop !16

61:                                               ; preds = %33
  %62 = add <4 x i32> %58, %57
  %63 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %62)
  %64 = icmp eq i64 %25, %32
  br i1 %64, label %105, label %65

65:                                               ; preds = %27, %61
  %66 = phi i64 [ 0, %27 ], [ %32, %61 ]
  %67 = phi i32 [ 0, %27 ], [ %63, %61 ]
  br label %108

68:                                               ; preds = %129, %3
  %69 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !19)
  %70 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %71 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  store %union.anon* %70, %union.anon** %71, align 8, !tbaa !3, !alias.scope !19
  %72 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8, !tbaa !15, !noalias !19
  %74 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %75 = load i64, i64* %74, align 8, !tbaa !8, !noalias !19
  %76 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #7, !noalias !19
  store i64 %75, i64* %4, align 8, !tbaa !22, !noalias !19
  %77 = icmp ugt i64 %75, 15
  br i1 %77, label %80, label %78

78:                                               ; preds = %68
  %79 = bitcast %union.anon* %70 to i8*
  br label %86

80:                                               ; preds = %68
  %81 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %82 unwind label %172

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  store i8* %81, i8** %83, align 8, !tbaa !15, !alias.scope !19
  %84 = load i64, i64* %4, align 8, !tbaa !22, !noalias !19
  %85 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  store i64 %84, i64* %85, align 8, !tbaa !11, !alias.scope !19
  br label %86

86:                                               ; preds = %82, %78
  %87 = phi i8* [ %79, %78 ], [ %81, %82 ]
  switch i64 %75, label %90 [
    i64 1, label %88
    i64 0, label %91
  ]

88:                                               ; preds = %86
  %89 = load i8, i8* %73, align 1, !tbaa !11
  store i8 %89, i8* %87, align 1, !tbaa !11
  br label %91

90:                                               ; preds = %86
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %73, i64 %75, i1 false) #7
  br label %91

91:                                               ; preds = %90, %88, %86
  %92 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %93 = load i64, i64* %4, align 8, !tbaa !22, !noalias !19
  %94 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  store i64 %93, i64* %94, align 8, !tbaa !8, !alias.scope !19
  %95 = load i8*, i8** %92, align 8, !tbaa !15, !alias.scope !19
  %96 = getelementptr inbounds i8, i8* %95, i64 %93
  store i8 0, i8* %96, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #7, !noalias !19
  %97 = load i64, i64* %94, align 8, !tbaa !8, !alias.scope !19
  %98 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64 %97, i64 0, i64 1, i8 signext 46)
          to label %139 unwind label %99

99:                                               ; preds = %91
  %100 = landingpad { i8*, i32 }
          cleanup
  %101 = load i8*, i8** %92, align 8, !tbaa !15, !alias.scope !19
  %102 = bitcast %union.anon* %70 to i8*
  %103 = icmp eq i8* %101, %102
  br i1 %103, label %180, label %104

104:                                              ; preds = %99
  call void @_ZdlPv(i8* %101) #7
  br label %180

105:                                              ; preds = %108, %61, %18
  %106 = phi i32 [ 0, %18 ], [ %63, %61 ], [ %120, %108 ]
  %107 = icmp sgt i32 %106, %22
  br i1 %107, label %123, label %129

108:                                              ; preds = %65, %108
  %109 = phi i64 [ %121, %108 ], [ %66, %65 ]
  %110 = phi i32 [ %120, %108 ], [ %67, %65 ]
  %111 = getelementptr inbounds i8, i8* %29, i64 %109
  %112 = load i8, i8* %111, align 1, !tbaa !11
  %113 = add i8 %112, -65
  %114 = icmp ult i8 %113, 26
  %115 = zext i1 %114 to i32
  %116 = add nsw i32 %110, %115
  %117 = add i8 %112, -97
  %118 = icmp ult i8 %117, 26
  %119 = sext i1 %118 to i32
  %120 = add nsw i32 %116, %119
  %121 = add nuw nsw i64 %109, 1
  %122 = icmp eq i64 %121, %25
  br i1 %122, label %105, label %108, !llvm.loop !23

123:                                              ; preds = %105
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %23)
          to label %124 unwind label %127

124:                                              ; preds = %123
  %125 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %13, align 8, !tbaa !12
  %126 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %14, align 8, !tbaa !14
  br label %129

127:                                              ; preds = %123
  %128 = landingpad { i8*, i32 }
          cleanup
  br label %182

129:                                              ; preds = %124, %105
  %130 = phi %"class.std::__cxx11::basic_string"* [ %19, %105 ], [ %126, %124 ]
  %131 = phi %"class.std::__cxx11::basic_string"* [ %20, %105 ], [ %125, %124 ]
  %132 = phi i32 [ %22, %105 ], [ %106, %124 ]
  %133 = add nuw i64 %21, 1
  %134 = ptrtoint %"class.std::__cxx11::basic_string"* %131 to i64
  %135 = ptrtoint %"class.std::__cxx11::basic_string"* %130 to i64
  %136 = sub i64 %134, %135
  %137 = ashr exact i64 %136, 5
  %138 = icmp ugt i64 %137, %133
  br i1 %138, label %18, label %68, !llvm.loop !25

139:                                              ; preds = %91
  call void @llvm.experimental.noalias.scope.decl(metadata !26)
  %140 = load i8*, i8** %11, align 8, !tbaa !15, !noalias !26
  %141 = load i64, i64* %12, align 8, !tbaa !8, !noalias !26
  %142 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i8* %140, i64 %141)
          to label %143 unwind label %174

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %145 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %144, %union.anon** %145, align 8, !tbaa !3, !alias.scope !26
  %146 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %142, i64 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8, !tbaa !15
  %148 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %142, i64 0, i32 2
  %149 = bitcast %union.anon* %148 to i8*
  %150 = icmp eq i8* %147, %149
  br i1 %150, label %151, label %153

151:                                              ; preds = %143
  %152 = bitcast %union.anon* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %152, i8* noundef nonnull align 8 dereferenceable(16) %147, i64 16, i1 false) #7
  br label %158

153:                                              ; preds = %143
  %154 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %147, i8** %154, align 8, !tbaa !15, !alias.scope !26
  %155 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %142, i64 0, i32 2, i32 0
  %156 = load i64, i64* %155, align 8, !tbaa !11
  %157 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %156, i64* %157, align 8, !tbaa !11, !alias.scope !26
  br label %158

158:                                              ; preds = %153, %151
  %159 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %142, i64 0, i32 1
  %160 = load i64, i64* %159, align 8, !tbaa !8
  %161 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %160, i64* %161, align 8, !tbaa !8, !alias.scope !26
  %162 = bitcast %"class.std::__cxx11::basic_string"* %142 to %union.anon**
  store %union.anon* %148, %union.anon** %162, align 8, !tbaa !15
  store i64 0, i64* %159, align 8, !tbaa !8
  store i8 0, i8* %149, align 8, !tbaa !11
  %163 = load i8*, i8** %92, align 8, !tbaa !15
  %164 = bitcast %union.anon* %70 to i8*
  %165 = icmp eq i8* %163, %164
  br i1 %165, label %167, label %166

166:                                              ; preds = %158
  call void @_ZdlPv(i8* %163) #7
  br label %167

167:                                              ; preds = %158, %166
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #7
  %168 = load i8*, i8** %11, align 8, !tbaa !15
  %169 = icmp eq i8* %168, %10
  br i1 %169, label %171, label %170

170:                                              ; preds = %167
  call void @_ZdlPv(i8* %168) #7
  br label %171

171:                                              ; preds = %167, %170
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #7
  ret void

172:                                              ; preds = %80
  %173 = landingpad { i8*, i32 }
          cleanup
  br label %180

174:                                              ; preds = %139
  %175 = landingpad { i8*, i32 }
          cleanup
  %176 = load i8*, i8** %92, align 8, !tbaa !15
  %177 = bitcast %union.anon* %70 to i8*
  %178 = icmp eq i8* %176, %177
  br i1 %178, label %180, label %179

179:                                              ; preds = %174
  call void @_ZdlPv(i8* %176) #7
  br label %180

180:                                              ; preds = %179, %174, %172, %104, %99
  %181 = phi { i8*, i32 } [ %173, %172 ], [ %100, %104 ], [ %100, %99 ], [ %175, %174 ], [ %175, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #7
  br label %182

182:                                              ; preds = %180, %127
  %183 = phi { i8*, i32 } [ %128, %127 ], [ %181, %180 ]
  %184 = load i8*, i8** %11, align 8, !tbaa !15
  %185 = icmp eq i8* %184, %10
  br i1 %185, label %187, label %186

186:                                              ; preds = %182
  call void @_ZdlPv(i8* %184) #7
  br label %187

187:                                              ; preds = %186, %182
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #7
  resume { i8*, i32 } %183
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) local_unnamed_addr #3

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #3

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #3

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #5

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #6

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #6 = { nofree nosync nounwind readnone willreturn }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!13, !5, i64 8}
!13 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!14 = !{!13, !5, i64 0}
!15 = !{!9, !5, i64 0}
!16 = distinct !{!16, !17, !18}
!17 = !{!"llvm.loop.mustprogress"}
!18 = !{!"llvm.loop.isvectorized", i32 1}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!21 = distinct !{!21, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!22 = !{!10, !10, i64 0}
!23 = distinct !{!23, !17, !24, !18}
!24 = !{!"llvm.loop.unroll.runtime.disable"}
!25 = distinct !{!25, !17}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_: argument 0"}
!28 = distinct !{!28, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_"}
