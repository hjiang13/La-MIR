digraph "CFG for '_Z9incr_listSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z9incr_listSt6vectorIiSaIiEE' function";

	Node0x55b6c3947ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = load i32*, i32** %3, align 8, !tbaa !3\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %6 = load i32*, i32** %5, align 8, !tbaa !8\l  %7 = ptrtoint i32* %4 to i64\l  %8 = ptrtoint i32* %6 to i64\l  %9 = sub i64 %7, %8\l  %10 = icmp eq i64 %9, 0\l  br i1 %10, label %69, label %11\l|{<s0>T|<s1>F}}"];
	Node0x55b6c3947ef0:s0 -> Node0x55b6c3949280;
	Node0x55b6c3947ef0:s1 -> Node0x55b6c3949830;
	Node0x55b6c3949830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%11:\l11:                                               \l  %12 = ashr exact i64 %9, 2\l  %13 = call i64 @llvm.umax.i64(i64 %12, i64 1)\l  %14 = icmp ult i64 %13, 8\l  br i1 %14, label %67, label %15\l|{<s0>T|<s1>F}}"];
	Node0x55b6c3949830:s0 -> Node0x55b6c3949d60;
	Node0x55b6c3949830:s1 -> Node0x55b6c3949db0;
	Node0x55b6c3949db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%15:\l15:                                               \l  %16 = and i64 %13, -8\l  %17 = add i64 %16, -8\l  %18 = lshr exact i64 %17, 3\l  %19 = add nuw nsw i64 %18, 1\l  %20 = and i64 %19, 1\l  %21 = icmp eq i64 %17, 0\l  br i1 %21, label %51, label %22\l|{<s0>T|<s1>F}}"];
	Node0x55b6c3949db0:s0 -> Node0x55b6c394a220;
	Node0x55b6c3949db0:s1 -> Node0x55b6c394a270;
	Node0x55b6c394a270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%22:\l22:                                               \l  %23 = and i64 %19, 4611686018427387902\l  br label %24\l}"];
	Node0x55b6c394a270 -> Node0x55b6c394a470;
	Node0x55b6c394a470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%24:\l24:                                               \l  %25 = phi i64 [ 0, %22 ], [ %48, %24 ]\l  %26 = phi i64 [ %23, %22 ], [ %49, %24 ]\l  %27 = getelementptr inbounds i32, i32* %6, i64 %25\l  %28 = bitcast i32* %27 to \<4 x i32\>*\l  %29 = load \<4 x i32\>, \<4 x i32\>* %28, align 4, !tbaa !9\l  %30 = getelementptr inbounds i32, i32* %27, i64 4\l  %31 = bitcast i32* %30 to \<4 x i32\>*\l  %32 = load \<4 x i32\>, \<4 x i32\>* %31, align 4, !tbaa !9\l  %33 = add nsw \<4 x i32\> %29, \<i32 1, i32 1, i32 1, i32 1\>\l  %34 = add nsw \<4 x i32\> %32, \<i32 1, i32 1, i32 1, i32 1\>\l  %35 = bitcast i32* %27 to \<4 x i32\>*\l  store \<4 x i32\> %33, \<4 x i32\>* %35, align 4, !tbaa !9\l  %36 = bitcast i32* %30 to \<4 x i32\>*\l  store \<4 x i32\> %34, \<4 x i32\>* %36, align 4, !tbaa !9\l  %37 = or i64 %25, 8\l  %38 = getelementptr inbounds i32, i32* %6, i64 %37\l  %39 = bitcast i32* %38 to \<4 x i32\>*\l  %40 = load \<4 x i32\>, \<4 x i32\>* %39, align 4, !tbaa !9\l  %41 = getelementptr inbounds i32, i32* %38, i64 4\l  %42 = bitcast i32* %41 to \<4 x i32\>*\l  %43 = load \<4 x i32\>, \<4 x i32\>* %42, align 4, !tbaa !9\l  %44 = add nsw \<4 x i32\> %40, \<i32 1, i32 1, i32 1, i32 1\>\l  %45 = add nsw \<4 x i32\> %43, \<i32 1, i32 1, i32 1, i32 1\>\l  %46 = bitcast i32* %38 to \<4 x i32\>*\l  store \<4 x i32\> %44, \<4 x i32\>* %46, align 4, !tbaa !9\l  %47 = bitcast i32* %41 to \<4 x i32\>*\l  store \<4 x i32\> %45, \<4 x i32\>* %47, align 4, !tbaa !9\l  %48 = add nuw i64 %25, 16\l  %49 = add i64 %26, -2\l  %50 = icmp eq i64 %49, 0\l  br i1 %50, label %51, label %24, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x55b6c394a470:s0 -> Node0x55b6c394a220;
	Node0x55b6c394a470:s1 -> Node0x55b6c394a470;
	Node0x55b6c394a220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%51:\l51:                                               \l  %52 = phi i64 [ 0, %15 ], [ %48, %24 ]\l  %53 = icmp eq i64 %20, 0\l  br i1 %53, label %65, label %54\l|{<s0>T|<s1>F}}"];
	Node0x55b6c394a220:s0 -> Node0x55b6c394c900;
	Node0x55b6c394a220:s1 -> Node0x55b6c394c950;
	Node0x55b6c394c950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%54:\l54:                                               \l  %55 = getelementptr inbounds i32, i32* %6, i64 %52\l  %56 = bitcast i32* %55 to \<4 x i32\>*\l  %57 = load \<4 x i32\>, \<4 x i32\>* %56, align 4, !tbaa !9\l  %58 = getelementptr inbounds i32, i32* %55, i64 4\l  %59 = bitcast i32* %58 to \<4 x i32\>*\l  %60 = load \<4 x i32\>, \<4 x i32\>* %59, align 4, !tbaa !9\l  %61 = add nsw \<4 x i32\> %57, \<i32 1, i32 1, i32 1, i32 1\>\l  %62 = add nsw \<4 x i32\> %60, \<i32 1, i32 1, i32 1, i32 1\>\l  %63 = bitcast i32* %55 to \<4 x i32\>*\l  store \<4 x i32\> %61, \<4 x i32\>* %63, align 4, !tbaa !9\l  %64 = bitcast i32* %58 to \<4 x i32\>*\l  store \<4 x i32\> %62, \<4 x i32\>* %64, align 4, !tbaa !9\l  br label %65\l}"];
	Node0x55b6c394c950 -> Node0x55b6c394c900;
	Node0x55b6c394c900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%65:\l65:                                               \l  %66 = icmp eq i64 %13, %16\l  br i1 %66, label %69, label %67\l|{<s0>T|<s1>F}}"];
	Node0x55b6c394c900:s0 -> Node0x55b6c3949280;
	Node0x55b6c394c900:s1 -> Node0x55b6c3949d60;
	Node0x55b6c3949d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%67:\l67:                                               \l  %68 = phi i64 [ 0, %11 ], [ %16, %65 ]\l  br label %76\l}"];
	Node0x55b6c3949d60 -> Node0x55b6c394d720;
	Node0x55b6c3949280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%69:\l69:                                               \l  %70 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  store i32* %6, i32** %70, align 8, !tbaa !8\l  %71 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  store i32* %4, i32** %71, align 8, !tbaa !3\l  %72 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %73 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %74 = load i32*, i32** %73, align 8, !tbaa !14\l  store i32* %74, i32** %72, align 8, !tbaa !14\l  %75 = bitcast %\"class.std::vector\"* %1 to i8*\l  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %75, i8 0, i64 24, i1 false) #3\l  ret void\l}"];
	Node0x55b6c394d720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  %77 = phi i64 [ %81, %76 ], [ %68, %67 ]\l  %78 = getelementptr inbounds i32, i32* %6, i64 %77\l  %79 = load i32, i32* %78, align 4, !tbaa !9\l  %80 = add nsw i32 %79, 1\l  store i32 %80, i32* %78, align 4, !tbaa !9\l  %81 = add nuw nsw i64 %77, 1\l  %82 = icmp eq i64 %81, %13\l  br i1 %82, label %69, label %76, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x55b6c394d720:s0 -> Node0x55b6c3949280;
	Node0x55b6c394d720:s1 -> Node0x55b6c394d720;
}
