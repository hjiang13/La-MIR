digraph "CFG for '_Z3trii' function" {
	label="CFG for '_Z3trii' function";

	Node0x563f14d45680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%2:\l  %3 = tail call noalias nonnull i8* @_Znwm(i64 8) #6\l  %4 = bitcast i8* %3 to i32*\l  %5 = getelementptr inbounds i8, i8* %3, i64 8\l  %6 = bitcast i8* %5 to i32*\l  store i32 1, i32* %4, align 4\l  %7 = getelementptr inbounds i8, i8* %3, i64 4\l  %8 = bitcast i8* %7 to i32*\l  store i32 3, i32* %8, align 4\l  %9 = icmp eq i32 %1, 0\l  br i1 %9, label %15, label %10\l|{<s0>T|<s1>F}}"];
	Node0x563f14d45680:s0 -> Node0x563f14d46050;
	Node0x563f14d45680:s1 -> Node0x563f14d46590;
	Node0x563f14d46590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%10:\l10:                                               \l  %11 = icmp slt i32 %1, 2\l  br i1 %11, label %20, label %12\l|{<s0>T|<s1>F}}"];
	Node0x563f14d46590:s0 -> Node0x563f14d46790;
	Node0x563f14d46590:s1 -> Node0x563f14d467e0;
	Node0x563f14d467e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%12:\l12:                                               \l  %13 = add nuw i32 %1, 1\l  %14 = zext i32 %13 to i64\l  br label %27\l}"];
	Node0x563f14d467e0 -> Node0x563f14d46a20;
	Node0x563f14d46050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%15:\l15:                                               \l  %16 = bitcast %\"class.std::vector\"* %0 to i8*\l  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %16, i8 0, i64 24, i1 false) #7\l  %17 = invoke noalias nonnull i8* @_Znwm(i64 4) #6\l          to label %136 unwind label %18\l}"];
	Node0x563f14d46050 -> Node0x563f14d46e90;
	Node0x563f14d46050 -> Node0x563f14d46ee0;
	Node0x563f14d46ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%18:\l18:                                               \l  %19 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %152\l}"];
	Node0x563f14d46ee0 -> Node0x563f14d47240;
	Node0x563f14d46790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%20:\l20:                                               \l  %21 = phi i32* [ %6, %10 ], [ %131, %130 ]\l  %22 = phi i32* [ %6, %10 ], [ %132, %130 ]\l  %23 = phi i32* [ %4, %10 ], [ %133, %130 ]\l  %24 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  store i32* %23, i32** %24, align 8, !tbaa !3\l  %25 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  store i32* %22, i32** %25, align 8, !tbaa !8\l  %26 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  store i32* %21, i32** %26, align 8, !tbaa !9\l  br label %144\l}"];
	Node0x563f14d46790 -> Node0x563f14d48930;
	Node0x563f14d46a20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i64 [ 2, %12 ], [ %134, %130 ]\l  %29 = phi i32* [ %4, %12 ], [ %133, %130 ]\l  %30 = phi i32* [ %6, %12 ], [ %132, %130 ]\l  %31 = phi i32* [ %6, %12 ], [ %131, %130 ]\l  %32 = trunc i64 %28 to i32\l  %33 = and i32 %32, 1\l  %34 = icmp eq i32 %33, 0\l  br i1 %34, label %35, label %77\l|{<s0>T|<s1>F}}"];
	Node0x563f14d46a20:s0 -> Node0x563f14d490f0;
	Node0x563f14d46a20:s1 -> Node0x563f14d49180;
	Node0x563f14d490f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%35:\l35:                                               \l  %36 = lshr i32 %32, 1\l  %37 = add nuw nsw i32 %36, 1\l  %38 = icmp eq i32* %30, %31\l  br i1 %38, label %41, label %39\l|{<s0>T|<s1>F}}"];
	Node0x563f14d490f0:s0 -> Node0x563f14d49470;
	Node0x563f14d490f0:s1 -> Node0x563f14d494c0;
	Node0x563f14d494c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%39:\l39:                                               \l  store i32 %37, i32* %30, align 4, !tbaa !10\l  %40 = getelementptr inbounds i32, i32* %30, i64 1\l  br label %130\l}"];
	Node0x563f14d494c0 -> Node0x563f14d47300;
	Node0x563f14d49470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%41:\l41:                                               \l  %42 = ptrtoint i32* %30 to i64\l  %43 = ptrtoint i32* %29 to i64\l  %44 = sub i64 %42, %43\l  %45 = ashr exact i64 %44, 2\l  %46 = icmp eq i64 %44, 9223372036854775804\l  br i1 %46, label %47, label %49\l|{<s0>T|<s1>F}}"];
	Node0x563f14d49470:s0 -> Node0x563f14d49b90;
	Node0x563f14d49470:s1 -> Node0x563f14d49be0;
	Node0x563f14d49b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%47:\l47:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str.1, i64 0, i64 0)) #8\l          to label %48 unwind label %147\l}"];
	Node0x563f14d49b90 -> Node0x563f14d49de0;
	Node0x563f14d49b90 -> Node0x563f14d49e30;
	Node0x563f14d49de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%48:\l48:                                               \l  unreachable\l}"];
	Node0x563f14d49be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%49:\l49:                                               \l  %50 = icmp eq i64 %44, 0\l  %51 = select i1 %50, i64 1, i64 %45\l  %52 = add nsw i64 %51, %45\l  %53 = icmp ult i64 %52, %45\l  %54 = icmp ugt i64 %52, 2305843009213693951\l  %55 = or i1 %53, %54\l  %56 = select i1 %55, i64 2305843009213693951, i64 %52\l  %57 = icmp eq i64 %56, 0\l  br i1 %57, label %63, label %58\l|{<s0>T|<s1>F}}"];
	Node0x563f14d49be0:s0 -> Node0x563f14d4a590;
	Node0x563f14d49be0:s1 -> Node0x563f14d4a5e0;
	Node0x563f14d4a5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%58:\l58:                                               \l  %59 = shl nuw nsw i64 %56, 2\l  %60 = invoke noalias nonnull i8* @_Znwm(i64 %59) #6\l          to label %61 unwind label %145\l}"];
	Node0x563f14d4a5e0 -> Node0x563f14d4a770;
	Node0x563f14d4a5e0 -> Node0x563f14d4a7c0;
	Node0x563f14d4a770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%61:\l61:                                               \l  %62 = bitcast i8* %60 to i32*\l  br label %63\l}"];
	Node0x563f14d4a770 -> Node0x563f14d4a590;
	Node0x563f14d4a590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%63:\l63:                                               \l  %64 = phi i32* [ %62, %61 ], [ null, %49 ]\l  %65 = getelementptr inbounds i32, i32* %64, i64 %45\l  store i32 %37, i32* %65, align 4, !tbaa !10\l  %66 = icmp sgt i64 %44, 0\l  br i1 %66, label %67, label %70\l|{<s0>T|<s1>F}}"];
	Node0x563f14d4a590:s0 -> Node0x563f14d4b630;
	Node0x563f14d4a590:s1 -> Node0x563f14d4b680;
	Node0x563f14d4b630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%67:\l67:                                               \l  %68 = bitcast i32* %64 to i8*\l  %69 = bitcast i32* %29 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %69,\l... i64 %44, i1 false) #7\l  br label %70\l}"];
	Node0x563f14d4b630 -> Node0x563f14d4b680;
	Node0x563f14d4b680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%70:\l70:                                               \l  %71 = getelementptr inbounds i32, i32* %65, i64 1\l  %72 = icmp eq i32* %29, null\l  br i1 %72, label %75, label %73\l|{<s0>T|<s1>F}}"];
	Node0x563f14d4b680:s0 -> Node0x563f14d4bd30;
	Node0x563f14d4b680:s1 -> Node0x563f14d4bd80;
	Node0x563f14d4bd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%73:\l73:                                               \l  %74 = bitcast i32* %29 to i8*\l  tail call void @_ZdlPv(i8* nonnull %74) #7\l  br label %75\l}"];
	Node0x563f14d4bd80 -> Node0x563f14d4bd30;
	Node0x563f14d4bd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%75:\l75:                                               \l  %76 = getelementptr inbounds i32, i32* %64, i64 %56\l  br label %130\l}"];
	Node0x563f14d4bd30 -> Node0x563f14d47300;
	Node0x563f14d49180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%77:\l77:                                               \l  %78 = add nsw i64 %28, -1\l  %79 = getelementptr inbounds i32, i32* %29, i64 %78\l  %80 = load i32, i32* %79, align 4, !tbaa !10\l  %81 = add nsw i64 %28, -2\l  %82 = getelementptr inbounds i32, i32* %29, i64 %81\l  %83 = load i32, i32* %82, align 4, !tbaa !10\l  %84 = trunc i64 %28 to i32\l  %85 = add i32 %84, 1\l  %86 = lshr i32 %85, 1\l  %87 = add nuw nsw i32 %86, 1\l  %88 = add i32 %87, %80\l  %89 = add i32 %88, %83\l  %90 = icmp eq i32* %30, %31\l  br i1 %90, label %93, label %91\l|{<s0>T|<s1>F}}"];
	Node0x563f14d49180:s0 -> Node0x563f14d4ca00;
	Node0x563f14d49180:s1 -> Node0x563f14d4ca50;
	Node0x563f14d4ca50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%91:\l91:                                               \l  store i32 %89, i32* %30, align 4, !tbaa !10\l  %92 = getelementptr inbounds i32, i32* %30, i64 1\l  br label %130\l}"];
	Node0x563f14d4ca50 -> Node0x563f14d47300;
	Node0x563f14d4ca00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%93:\l93:                                               \l  %94 = ptrtoint i32* %30 to i64\l  %95 = ptrtoint i32* %29 to i64\l  %96 = sub i64 %94, %95\l  %97 = ashr exact i64 %96, 2\l  %98 = icmp eq i64 %96, 9223372036854775804\l  br i1 %98, label %99, label %101\l|{<s0>T|<s1>F}}"];
	Node0x563f14d4ca00:s0 -> Node0x563f14d4cf80;
	Node0x563f14d4ca00:s1 -> Node0x563f14d4cfd0;
	Node0x563f14d4cf80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%99:\l99:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str.1, i64 0, i64 0)) #8\l          to label %100 unwind label %128\l}"];
	Node0x563f14d4cf80 -> Node0x563f14d4d100;
	Node0x563f14d4cf80 -> Node0x563f14d4d150;
	Node0x563f14d4d100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%100:\l100:                                              \l  unreachable\l}"];
	Node0x563f14d4cfd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%101:\l101:                                              \l  %102 = icmp eq i64 %96, 0\l  %103 = select i1 %102, i64 1, i64 %97\l  %104 = add nsw i64 %103, %97\l  %105 = icmp ult i64 %104, %97\l  %106 = icmp ugt i64 %104, 2305843009213693951\l  %107 = or i1 %105, %106\l  %108 = select i1 %107, i64 2305843009213693951, i64 %104\l  %109 = icmp eq i64 %108, 0\l  br i1 %109, label %115, label %110\l|{<s0>T|<s1>F}}"];
	Node0x563f14d4cfd0:s0 -> Node0x563f14d4d790;
	Node0x563f14d4cfd0:s1 -> Node0x563f14d4d7e0;
	Node0x563f14d4d7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%110:\l110:                                              \l  %111 = shl nuw nsw i64 %108, 2\l  %112 = invoke noalias nonnull i8* @_Znwm(i64 %111) #6\l          to label %113 unwind label %126\l}"];
	Node0x563f14d4d7e0 -> Node0x563f14d4d970;
	Node0x563f14d4d7e0 -> Node0x563f14d4d9c0;
	Node0x563f14d4d970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%113:\l113:                                              \l  %114 = bitcast i8* %112 to i32*\l  br label %115\l}"];
	Node0x563f14d4d970 -> Node0x563f14d4d790;
	Node0x563f14d4d790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%115:\l115:                                              \l  %116 = phi i32* [ %114, %113 ], [ null, %101 ]\l  %117 = getelementptr inbounds i32, i32* %116, i64 %97\l  store i32 %89, i32* %117, align 4, !tbaa !10\l  %118 = icmp sgt i64 %96, 0\l  br i1 %118, label %119, label %122\l|{<s0>T|<s1>F}}"];
	Node0x563f14d4d790:s0 -> Node0x563f14d4def0;
	Node0x563f14d4d790:s1 -> Node0x563f14d4df40;
	Node0x563f14d4def0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%119:\l119:                                              \l  %120 = bitcast i32* %116 to i8*\l  %121 = bitcast i32* %29 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %120, i8* align 4\l... %121, i64 %96, i1 false) #7\l  br label %122\l}"];
	Node0x563f14d4def0 -> Node0x563f14d4df40;
	Node0x563f14d4df40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%122:\l122:                                              \l  %123 = bitcast i32* %29 to i8*\l  %124 = getelementptr inbounds i32, i32* %117, i64 1\l  tail call void @_ZdlPv(i8* nonnull %123) #7\l  %125 = getelementptr inbounds i32, i32* %116, i64 %108\l  br label %130\l}"];
	Node0x563f14d4df40 -> Node0x563f14d47300;
	Node0x563f14d4d9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%126:\l126:                                              \l  %127 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %152\l}"];
	Node0x563f14d4d9c0 -> Node0x563f14d47240;
	Node0x563f14d4d150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%128:\l128:                                              \l  %129 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %152\l}"];
	Node0x563f14d4d150 -> Node0x563f14d47240;
	Node0x563f14d47300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%130:\l130:                                              \l  %131 = phi i32* [ %76, %75 ], [ %31, %39 ], [ %125, %122 ], [ %31, %91 ]\l  %132 = phi i32* [ %71, %75 ], [ %40, %39 ], [ %124, %122 ], [ %92, %91 ]\l  %133 = phi i32* [ %64, %75 ], [ %29, %39 ], [ %116, %122 ], [ %29, %91 ]\l  %134 = add nuw nsw i64 %28, 1\l  %135 = icmp eq i64 %134, %14\l  br i1 %135, label %20, label %27, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x563f14d47300:s0 -> Node0x563f14d46790;
	Node0x563f14d47300:s1 -> Node0x563f14d46a20;
	Node0x563f14d46e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%136:\l136:                                              \l  %137 = bitcast i8* %17 to i32*\l  %138 = bitcast %\"class.std::vector\"* %0 to i8**\l  store i8* %17, i8** %138, align 8, !tbaa !3\l  %139 = getelementptr inbounds i8, i8* %17, i64 4\l  %140 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 2\l  %141 = bitcast i32** %140 to i8**\l  store i8* %139, i8** %141, align 8, !tbaa !9\l  store i32 1, i32* %137, align 4\l  %142 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 1\l  %143 = bitcast i32** %142 to i8**\l  store i8* %139, i8** %143, align 8, !tbaa !8\l  tail call void @_ZdlPv(i8* nonnull %3) #7\l  br label %144\l}"];
	Node0x563f14d46e90 -> Node0x563f14d48930;
	Node0x563f14d48930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%144:\l144:                                              \l  ret void\l}"];
	Node0x563f14d4a7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%145:\l145:                                              \l  %146 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %149\l}"];
	Node0x563f14d4a7c0 -> Node0x563f14d51060;
	Node0x563f14d49e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%147:\l147:                                              \l  %148 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %149\l}"];
	Node0x563f14d49e30 -> Node0x563f14d51060;
	Node0x563f14d51060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%149:\l149:                                              \l  %150 = phi \{ i8*, i32 \} [ %146, %145 ], [ %148, %147 ]\l  %151 = icmp eq i32* %29, null\l  br i1 %151, label %156, label %152\l|{<s0>T|<s1>F}}"];
	Node0x563f14d51060:s0 -> Node0x563f14d51320;
	Node0x563f14d51060:s1 -> Node0x563f14d47240;
	Node0x563f14d47240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%152:\l152:                                              \l  %153 = phi \{ i8*, i32 \} [ %150, %149 ], [ %19, %18 ], [ %127, %126 ], [\l... %129, %128 ]\l  %154 = phi i32* [ %29, %149 ], [ %4, %18 ], [ %29, %126 ], [ %29, %128 ]\l  %155 = bitcast i32* %154 to i8*\l  tail call void @_ZdlPv(i8* nonnull %155) #7\l  br label %156\l}"];
	Node0x563f14d47240 -> Node0x563f14d51320;
	Node0x563f14d51320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%156:\l156:                                              \l  %157 = phi \{ i8*, i32 \} [ %150, %149 ], [ %153, %152 ]\l  resume \{ i8*, i32 \} %157\l}"];
}
