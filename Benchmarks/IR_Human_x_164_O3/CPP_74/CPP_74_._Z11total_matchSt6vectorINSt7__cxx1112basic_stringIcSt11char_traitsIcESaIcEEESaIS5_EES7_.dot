digraph "CFG for '_Z11total_matchSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EES7_' function" {
	label="CFG for '_Z11total_matchSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EES7_' function";

	Node0x55e76232c7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%3:\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %5 = load %\"class.std::__cxx11::basic_string\"*,\l... %\"class.std::__cxx11::basic_string\"** %4, align 8, !tbaa !3\l  %6 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %7 = load %\"class.std::__cxx11::basic_string\"*,\l... %\"class.std::__cxx11::basic_string\"** %6, align 8, !tbaa !8\l  %8 = ptrtoint %\"class.std::__cxx11::basic_string\"* %5 to i64\l  %9 = ptrtoint %\"class.std::__cxx11::basic_string\"* %7 to i64\l  %10 = sub i64 %8, %9\l  %11 = icmp eq i64 %10, 0\l  br i1 %11, label %36, label %12\l|{<s0>T|<s1>F}}"];
	Node0x55e76232c7c0:s0 -> Node0x55e76232d010;
	Node0x55e76232c7c0:s1 -> Node0x55e76232e090;
	Node0x55e76232e090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%12:\l12:                                               \l  %13 = ashr exact i64 %10, 5\l  %14 = call i64 @llvm.umax.i64(i64 %13, i64 1)\l  %15 = add i64 %14, -1\l  %16 = and i64 %14, 3\l  %17 = icmp ult i64 %15, 3\l  br i1 %17, label %20, label %18\l|{<s0>T|<s1>F}}"];
	Node0x55e76232e090:s0 -> Node0x55e76232e680;
	Node0x55e76232e090:s1 -> Node0x55e76232e6d0;
	Node0x55e76232e6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%18:\l18:                                               \l  %19 = and i64 %14, -4\l  br label %54\l}"];
	Node0x55e76232e6d0 -> Node0x55e76232e8d0;
	Node0x55e76232e680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%20:\l20:                                               \l  %21 = phi i32 [ undef, %12 ], [ %76, %54 ]\l  %22 = phi i64 [ 0, %12 ], [ %77, %54 ]\l  %23 = phi i32 [ 0, %12 ], [ %76, %54 ]\l  %24 = icmp eq i64 %16, 0\l  br i1 %24, label %36, label %25\l|{<s0>T|<s1>F}}"];
	Node0x55e76232e680:s0 -> Node0x55e76232d010;
	Node0x55e76232e680:s1 -> Node0x55e76232f0e0;
	Node0x55e76232f0e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i64 [ %33, %25 ], [ %22, %20 ]\l  %27 = phi i32 [ %32, %25 ], [ %23, %20 ]\l  %28 = phi i64 [ %34, %25 ], [ %16, %20 ]\l  %29 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %7, i64 %26, i32 1\l  %30 = load i64, i64* %29, align 8, !tbaa !9\l  %31 = trunc i64 %30 to i32\l  %32 = add i32 %27, %31\l  %33 = add nuw nsw i64 %26, 1\l  %34 = add i64 %28, -1\l  %35 = icmp eq i64 %34, 0\l  br i1 %35, label %36, label %25, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x55e76232f0e0:s0 -> Node0x55e76232d010;
	Node0x55e76232f0e0:s1 -> Node0x55e76232f0e0;
	Node0x55e76232d010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%36:\l36:                                               \l  %37 = phi i32 [ 0, %3 ], [ %21, %20 ], [ %32, %25 ]\l  %38 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %2,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %39 = load %\"class.std::__cxx11::basic_string\"*,\l... %\"class.std::__cxx11::basic_string\"** %38, align 8, !tbaa !3\l  %40 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %2,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %41 = load %\"class.std::__cxx11::basic_string\"*,\l... %\"class.std::__cxx11::basic_string\"** %40, align 8, !tbaa !8\l  %42 = ptrtoint %\"class.std::__cxx11::basic_string\"* %39 to i64\l  %43 = ptrtoint %\"class.std::__cxx11::basic_string\"* %41 to i64\l  %44 = sub i64 %42, %43\l  %45 = icmp eq i64 %44, 0\l  br i1 %45, label %122, label %46\l|{<s0>T|<s1>F}}"];
	Node0x55e76232d010:s0 -> Node0x55e762330f90;
	Node0x55e76232d010:s1 -> Node0x55e762330fe0;
	Node0x55e762330fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%46:\l46:                                               \l  %47 = ashr exact i64 %44, 5\l  %48 = call i64 @llvm.umax.i64(i64 %47, i64 1)\l  %49 = add i64 %48, -1\l  %50 = and i64 %48, 3\l  %51 = icmp ult i64 %49, 3\l  br i1 %51, label %106, label %52\l|{<s0>T|<s1>F}}"];
	Node0x55e762330fe0:s0 -> Node0x55e762331470;
	Node0x55e762330fe0:s1 -> Node0x55e7623314c0;
	Node0x55e7623314c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%52:\l52:                                               \l  %53 = and i64 %48, -4\l  br label %80\l}"];
	Node0x55e7623314c0 -> Node0x55e762331690;
	Node0x55e76232e8d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%54:\l54:                                               \l  %55 = phi i64 [ 0, %18 ], [ %77, %54 ]\l  %56 = phi i32 [ 0, %18 ], [ %76, %54 ]\l  %57 = phi i64 [ %19, %18 ], [ %78, %54 ]\l  %58 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %7, i64 %55, i32 1\l  %59 = load i64, i64* %58, align 8, !tbaa !9\l  %60 = trunc i64 %59 to i32\l  %61 = add i32 %56, %60\l  %62 = or i64 %55, 1\l  %63 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %7, i64 %62, i32 1\l  %64 = load i64, i64* %63, align 8, !tbaa !9\l  %65 = trunc i64 %64 to i32\l  %66 = add i32 %61, %65\l  %67 = or i64 %55, 2\l  %68 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %7, i64 %67, i32 1\l  %69 = load i64, i64* %68, align 8, !tbaa !9\l  %70 = trunc i64 %69 to i32\l  %71 = add i32 %66, %70\l  %72 = or i64 %55, 3\l  %73 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %7, i64 %72, i32 1\l  %74 = load i64, i64* %73, align 8, !tbaa !9\l  %75 = trunc i64 %74 to i32\l  %76 = add i32 %71, %75\l  %77 = add nuw nsw i64 %55, 4\l  %78 = add i64 %57, -4\l  %79 = icmp eq i64 %78, 0\l  br i1 %79, label %20, label %54, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x55e76232e8d0:s0 -> Node0x55e76232e680;
	Node0x55e76232e8d0:s1 -> Node0x55e76232e8d0;
	Node0x55e762331690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%80:\l80:                                               \l  %81 = phi i64 [ 0, %52 ], [ %103, %80 ]\l  %82 = phi i32 [ 0, %52 ], [ %102, %80 ]\l  %83 = phi i64 [ %53, %52 ], [ %104, %80 ]\l  %84 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %41, i64 %81, i32 1\l  %85 = load i64, i64* %84, align 8, !tbaa !9\l  %86 = trunc i64 %85 to i32\l  %87 = add i32 %82, %86\l  %88 = or i64 %81, 1\l  %89 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %41, i64 %88, i32 1\l  %90 = load i64, i64* %89, align 8, !tbaa !9\l  %91 = trunc i64 %90 to i32\l  %92 = add i32 %87, %91\l  %93 = or i64 %81, 2\l  %94 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %41, i64 %93, i32 1\l  %95 = load i64, i64* %94, align 8, !tbaa !9\l  %96 = trunc i64 %95 to i32\l  %97 = add i32 %92, %96\l  %98 = or i64 %81, 3\l  %99 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %41, i64 %98, i32 1\l  %100 = load i64, i64* %99, align 8, !tbaa !9\l  %101 = trunc i64 %100 to i32\l  %102 = add i32 %97, %101\l  %103 = add nuw nsw i64 %81, 4\l  %104 = add i64 %83, -4\l  %105 = icmp eq i64 %104, 0\l  br i1 %105, label %106, label %80, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x55e762331690:s0 -> Node0x55e762331470;
	Node0x55e762331690:s1 -> Node0x55e762331690;
	Node0x55e762331470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%106:\l106:                                              \l  %107 = phi i32 [ undef, %46 ], [ %102, %80 ]\l  %108 = phi i64 [ 0, %46 ], [ %103, %80 ]\l  %109 = phi i32 [ 0, %46 ], [ %102, %80 ]\l  %110 = icmp eq i64 %50, 0\l  br i1 %110, label %122, label %111\l|{<s0>T|<s1>F}}"];
	Node0x55e762331470:s0 -> Node0x55e762330f90;
	Node0x55e762331470:s1 -> Node0x55e762334310;
	Node0x55e762334310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%111:\l111:                                              \l  %112 = phi i64 [ %119, %111 ], [ %108, %106 ]\l  %113 = phi i32 [ %118, %111 ], [ %109, %106 ]\l  %114 = phi i64 [ %120, %111 ], [ %50, %106 ]\l  %115 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %41, i64 %112, i32 1\l  %116 = load i64, i64* %115, align 8, !tbaa !9\l  %117 = trunc i64 %116 to i32\l  %118 = add i32 %113, %117\l  %119 = add nuw nsw i64 %112, 1\l  %120 = add i64 %114, -1\l  %121 = icmp eq i64 %120, 0\l  br i1 %121, label %122, label %111, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x55e762334310:s0 -> Node0x55e762330f90;
	Node0x55e762334310:s1 -> Node0x55e762334310;
	Node0x55e762330f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%122:\l122:                                              \l  %123 = phi i32 [ 0, %36 ], [ %107, %106 ], [ %118, %111 ]\l  %124 = icmp sgt i32 %37, %123\l  %125 = select i1 %124, %\"class.std::vector\"* %2, %\"class.std::vector\"* %1\l  %126 = select i1 %124, %\"class.std::__cxx11::basic_string\"* %41,\l... %\"class.std::__cxx11::basic_string\"* %7\l  %127 = select i1 %124, %\"class.std::__cxx11::basic_string\"* %39,\l... %\"class.std::__cxx11::basic_string\"* %5\l  %128 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %125, i64 0, i32 0, i32 0, i32 0, i32 2\l  %129 = load %\"class.std::__cxx11::basic_string\"*,\l... %\"class.std::__cxx11::basic_string\"** %128, align 8, !tbaa !19\l  %130 = bitcast %\"class.std::vector\"* %125 to i8*\l  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %130, i8 0, i64 24, i1 false) #3\l  %131 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 0\l  store %\"class.std::__cxx11::basic_string\"* %126,\l... %\"class.std::__cxx11::basic_string\"** %131, align 8\l  %132 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 1\l  store %\"class.std::__cxx11::basic_string\"* %127,\l... %\"class.std::__cxx11::basic_string\"** %132, align 8\l  %133 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 2\l  store %\"class.std::__cxx11::basic_string\"* %129,\l... %\"class.std::__cxx11::basic_string\"** %133, align 8\l  ret void\l}"];
}
