; ModuleID = '../../Human_xBenchmarks_164/CPP_11/CPP_11.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_11/CPP_11.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: uwtable
define dso_local void @_Z10string_xorNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1, %"class.std::__cxx11::basic_string"* nocapture readonly %2) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !3
  %6 = bitcast %union.anon* %4 to i8*
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %8, align 8, !tbaa !8
  store i8 0, i8* %6, align 8, !tbaa !11
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %14 = load i64, i64* %9, align 8, !tbaa !8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %57, label %16

16:                                               ; preds = %3, %48
  %17 = phi i64 [ %54, %48 ], [ 0, %3 ]
  %18 = load i64, i64* %10, align 8, !tbaa !8
  %19 = icmp ugt i64 %18, %17
  br i1 %19, label %20, label %57

20:                                               ; preds = %16
  %21 = load i8*, i8** %11, align 8, !tbaa !12
  %22 = getelementptr inbounds i8, i8* %21, i64 %17
  %23 = load i8, i8* %22, align 1, !tbaa !11
  %24 = load i8*, i8** %12, align 8, !tbaa !12
  %25 = getelementptr inbounds i8, i8* %24, i64 %17
  %26 = load i8, i8* %25, align 1, !tbaa !11
  %27 = icmp eq i8 %23, %26
  %28 = load i64, i64* %8, align 8, !tbaa !8
  %29 = add i64 %28, 1
  %30 = load i8*, i8** %7, align 8, !tbaa !12
  %31 = icmp eq i8* %30, %6
  %32 = load i64, i64* %13, align 8
  %33 = select i1 %31, i64 15, i64 %32
  %34 = icmp ugt i64 %29, %33
  br i1 %27, label %35, label %44

35:                                               ; preds = %20
  br i1 %34, label %36, label %48

36:                                               ; preds = %35
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64 %28, i64 0, i8* null, i64 1)
          to label %37 unwind label %39

37:                                               ; preds = %36
  %38 = load i8*, i8** %7, align 8, !tbaa !12
  br label %48

39:                                               ; preds = %45, %36
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = load i8*, i8** %7, align 8, !tbaa !12
  %42 = icmp eq i8* %41, %6
  br i1 %42, label %58, label %43

43:                                               ; preds = %39
  tail call void @_ZdlPv(i8* %41) #3
  br label %58

44:                                               ; preds = %20
  br i1 %34, label %45, label %48

45:                                               ; preds = %44
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64 %28, i64 0, i8* null, i64 1)
          to label %46 unwind label %39

46:                                               ; preds = %45
  %47 = load i8*, i8** %7, align 8, !tbaa !12
  br label %48

48:                                               ; preds = %46, %44, %37, %35
  %49 = phi i8* [ %38, %37 ], [ %30, %35 ], [ %47, %46 ], [ %30, %44 ]
  %50 = phi i8 [ 48, %37 ], [ 48, %35 ], [ 49, %46 ], [ 49, %44 ]
  %51 = getelementptr inbounds i8, i8* %49, i64 %28
  store i8 %50, i8* %51, align 1, !tbaa !11
  store i64 %29, i64* %8, align 8, !tbaa !8
  %52 = load i8*, i8** %7, align 8, !tbaa !12
  %53 = getelementptr inbounds i8, i8* %52, i64 %29
  store i8 0, i8* %53, align 1, !tbaa !11
  %54 = add nuw i64 %17, 1
  %55 = load i64, i64* %9, align 8, !tbaa !8
  %56 = icmp ugt i64 %55, %54
  br i1 %56, label %16, label %57, !llvm.loop !13

57:                                               ; preds = %48, %16, %3
  ret void

58:                                               ; preds = %43, %39
  resume { i8*, i32 } %40
}

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #1

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i8*, i64) local_unnamed_addr #2

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.mustprogress"}
