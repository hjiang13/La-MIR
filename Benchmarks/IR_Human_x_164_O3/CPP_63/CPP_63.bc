; ModuleID = '../../Human_xBenchmarks_164/CPP_63/CPP_63.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_63/CPP_63.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: mustprogress nofree nosync nounwind readnone uwtable willreturn
define dso_local i32 @_Z6fibfibi(i32 %0) local_unnamed_addr #0 {
  %2 = alloca [100 x i32], align 16
  %3 = bitcast [100 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 400, i8* nonnull %3) #2
  %4 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 0
  store i32 0, i32* %4, align 16, !tbaa !3
  %5 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 1
  store i32 0, i32* %5, align 4, !tbaa !3
  %6 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 2
  store i32 1, i32* %6, align 8, !tbaa !3
  %7 = icmp slt i32 %0, 3
  br i1 %7, label %31, label %8

8:                                                ; preds = %1
  %9 = add nuw i32 %0, 1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 3
  store i32 1, i32* %11, align 4, !tbaa !3
  %12 = icmp eq i32 %9, 4
  br i1 %12, label %31, label %13, !llvm.loop !7

13:                                               ; preds = %8
  %14 = and i64 %10, 1
  %15 = icmp eq i32 %9, 5
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = add nsw i64 %10, -4
  %18 = and i64 %17, -2
  br label %35

19:                                               ; preds = %35, %13
  %20 = phi i64 [ 4, %13 ], [ %54, %35 ]
  %21 = phi i32 [ 1, %13 ], [ %52, %35 ]
  %22 = phi i64 [ 2, %13 ], [ %36, %35 ]
  %23 = phi i32 [ 0, %13 ], [ %50, %35 ]
  %24 = icmp eq i64 %14, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %22
  %27 = load i32, i32* %26, align 8, !tbaa !3
  %28 = add nsw i32 %27, %21
  %29 = add nsw i32 %28, %23
  %30 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %20
  store i32 %29, i32* %30, align 4, !tbaa !3
  br label %31

31:                                               ; preds = %25, %19, %8, %1
  %32 = sext i32 %0 to i64
  %33 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %32
  %34 = load i32, i32* %33, align 4, !tbaa !3
  call void @llvm.lifetime.end.p0i8(i64 400, i8* nonnull %3) #2
  ret i32 %34

35:                                               ; preds = %35, %16
  %36 = phi i64 [ 4, %16 ], [ %54, %35 ]
  %37 = phi i32 [ 1, %16 ], [ %52, %35 ]
  %38 = phi i64 [ 3, %16 ], [ %47, %35 ]
  %39 = phi i32 [ 0, %16 ], [ %50, %35 ]
  %40 = phi i64 [ %18, %16 ], [ %55, %35 ]
  %41 = add nsw i64 %38, -1
  %42 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %41
  %43 = load i32, i32* %42, align 8, !tbaa !3
  %44 = add nsw i32 %43, %37
  %45 = add nsw i32 %44, %39
  %46 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %36
  store i32 %45, i32* %46, align 8, !tbaa !3
  %47 = or i64 %36, 1
  %48 = add nsw i64 %36, -1
  %49 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %48
  %50 = load i32, i32* %49, align 4, !tbaa !3
  %51 = add nsw i32 %50, %45
  %52 = add nsw i32 %51, %43
  %53 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %47
  store i32 %52, i32* %53, align 4, !tbaa !3
  %54 = add nuw nsw i64 %36, 2
  %55 = add i64 %40, -2
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %19, label %35, !llvm.loop !7
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { mustprogress nofree nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"int", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.mustprogress"}
