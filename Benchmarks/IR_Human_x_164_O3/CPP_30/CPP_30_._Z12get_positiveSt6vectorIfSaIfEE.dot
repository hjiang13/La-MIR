digraph "CFG for '_Z12get_positiveSt6vectorIfSaIfEE' function" {
	label="CFG for '_Z12get_positiveSt6vectorIfSaIfEE' function";

	Node0x559eb12db700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %6 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %7 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %8 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %8, i8 0, i64 24, i1 false)\l  %9 = load float*, float** %3, align 8, !tbaa !3\l  %10 = load float*, float** %4, align 8, !tbaa !8\l  %11 = icmp eq float* %9, %10\l  br i1 %11, label %88, label %12\l|{<s0>T|<s1>F}}"];
	Node0x559eb12db700:s0 -> Node0x559eb12dd5c0;
	Node0x559eb12db700:s1 -> Node0x559eb12dd650;
	Node0x559eb12dd650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l12:                                               \l  %13 = phi float* [ %77, %76 ], [ %10, %2 ]\l  %14 = phi float* [ %78, %76 ], [ %9, %2 ]\l  %15 = phi float* [ %79, %76 ], [ null, %2 ]\l  %16 = phi float* [ %80, %76 ], [ null, %2 ]\l  %17 = phi float* [ %81, %76 ], [ null, %2 ]\l  %18 = phi i64 [ %82, %76 ], [ 0, %2 ]\l  %19 = getelementptr inbounds float, float* %13, i64 %18\l  %20 = load float, float* %19, align 4, !tbaa !9\l  %21 = fcmp ogt float %20, 0.000000e+00\l  br i1 %21, label %22, label %76\l|{<s0>T|<s1>F}}"];
	Node0x559eb12dd650:s0 -> Node0x559eb12deb10;
	Node0x559eb12dd650:s1 -> Node0x559eb12dd790;
	Node0x559eb12deb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%22:\l22:                                               \l  %23 = icmp eq float* %17, %16\l  br i1 %23, label %26, label %24\l|{<s0>T|<s1>F}}"];
	Node0x559eb12deb10:s0 -> Node0x559eb12dece0;
	Node0x559eb12deb10:s1 -> Node0x559eb12ded30;
	Node0x559eb12ded30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%24:\l24:                                               \l  store float %20, float* %17, align 4, !tbaa !9\l  %25 = getelementptr inbounds float, float* %17, i64 1\l  store float* %25, float** %5, align 8, !tbaa !3\l  br label %76\l}"];
	Node0x559eb12ded30 -> Node0x559eb12dd790;
	Node0x559eb12dece0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%26:\l26:                                               \l  %27 = ptrtoint float* %16 to i64\l  %28 = ptrtoint float* %15 to i64\l  %29 = sub i64 %27, %28\l  %30 = ashr exact i64 %29, 2\l  %31 = icmp eq i64 %29, 9223372036854775804\l  br i1 %31, label %32, label %34\l|{<s0>T|<s1>F}}"];
	Node0x559eb12dece0:s0 -> Node0x559eb12e0000;
	Node0x559eb12dece0:s1 -> Node0x559eb12e0050;
	Node0x559eb12e0000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%32:\l32:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #6\l          to label %33 unwind label %68\l}"];
	Node0x559eb12e0000 -> Node0x559eb12e0420;
	Node0x559eb12e0000 -> Node0x559eb12e0470;
	Node0x559eb12e0420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%33:\l33:                                               \l  unreachable\l}"];
	Node0x559eb12e0050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%34:\l34:                                               \l  %35 = icmp eq i64 %29, 0\l  %36 = select i1 %35, i64 1, i64 %30\l  %37 = add nsw i64 %36, %30\l  %38 = icmp ult i64 %37, %30\l  %39 = icmp ugt i64 %37, 2305843009213693951\l  %40 = or i1 %38, %39\l  %41 = select i1 %40, i64 2305843009213693951, i64 %37\l  %42 = icmp eq i64 %41, 0\l  br i1 %42, label %49, label %43\l|{<s0>T|<s1>F}}"];
	Node0x559eb12e0050:s0 -> Node0x559eb12e0bd0;
	Node0x559eb12e0050:s1 -> Node0x559eb12e0c20;
	Node0x559eb12e0c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%43:\l43:                                               \l  %44 = shl nuw nsw i64 %41, 2\l  %45 = invoke noalias nonnull i8* @_Znwm(i64 %44) #7\l          to label %46 unwind label %66\l}"];
	Node0x559eb12e0c20 -> Node0x559eb12e0db0;
	Node0x559eb12e0c20 -> Node0x559eb12e0e00;
	Node0x559eb12e0db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%46:\l46:                                               \l  %47 = bitcast i8* %45 to float*\l  %48 = load float, float* %19, align 4, !tbaa !9\l  br label %49\l}"];
	Node0x559eb12e0db0 -> Node0x559eb12e0bd0;
	Node0x559eb12e0bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%49:\l49:                                               \l  %50 = phi float [ %48, %46 ], [ %20, %34 ]\l  %51 = phi float* [ %47, %46 ], [ null, %34 ]\l  %52 = getelementptr inbounds float, float* %51, i64 %30\l  store float %50, float* %52, align 4, !tbaa !9\l  %53 = icmp sgt i64 %29, 0\l  br i1 %53, label %54, label %57\l|{<s0>T|<s1>F}}"];
	Node0x559eb12e0bd0:s0 -> Node0x559eb12e14e0;
	Node0x559eb12e0bd0:s1 -> Node0x559eb12e1530;
	Node0x559eb12e14e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%54:\l54:                                               \l  %55 = bitcast float* %51 to i8*\l  %56 = bitcast float* %15 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %56,\l... i64 %29, i1 false) #8\l  br label %57\l}"];
	Node0x559eb12e14e0 -> Node0x559eb12e1530;
	Node0x559eb12e1530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%57:\l57:                                               \l  %58 = getelementptr inbounds float, float* %52, i64 1\l  %59 = icmp eq float* %15, null\l  br i1 %59, label %62, label %60\l|{<s0>T|<s1>F}}"];
	Node0x559eb12e1530:s0 -> Node0x559eb12e1bc0;
	Node0x559eb12e1530:s1 -> Node0x559eb12e1c10;
	Node0x559eb12e1c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%60:\l60:                                               \l  %61 = bitcast float* %15 to i8*\l  tail call void @_ZdlPv(i8* nonnull %61) #8\l  br label %62\l}"];
	Node0x559eb12e1c10 -> Node0x559eb12e1bc0;
	Node0x559eb12e1bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%62:\l62:                                               \l  store float* %51, float** %7, align 8, !tbaa !8\l  store float* %58, float** %5, align 8, !tbaa !3\l  %63 = getelementptr inbounds float, float* %51, i64 %41\l  store float* %63, float** %6, align 8, !tbaa !11\l  %64 = load float*, float** %3, align 8, !tbaa !3\l  %65 = load float*, float** %4, align 8, !tbaa !8\l  br label %76\l}"];
	Node0x559eb12e1bc0 -> Node0x559eb12dd790;
	Node0x559eb12e0e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%66:\l66:                                               \l  %67 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %70\l}"];
	Node0x559eb12e0e00 -> Node0x559eb12e2f00;
	Node0x559eb12e0470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%68:\l68:                                               \l  %69 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %70\l}"];
	Node0x559eb12e0470 -> Node0x559eb12e2f00;
	Node0x559eb12e2f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%70:\l70:                                               \l  %71 = phi \{ i8*, i32 \} [ %67, %66 ], [ %69, %68 ]\l  %72 = icmp eq float* %15, null\l  br i1 %72, label %75, label %73\l|{<s0>T|<s1>F}}"];
	Node0x559eb12e2f00:s0 -> Node0x559eb12e31e0;
	Node0x559eb12e2f00:s1 -> Node0x559eb12e3230;
	Node0x559eb12e3230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%73:\l73:                                               \l  %74 = bitcast float* %15 to i8*\l  tail call void @_ZdlPv(i8* nonnull %74) #8\l  br label %75\l}"];
	Node0x559eb12e3230 -> Node0x559eb12e31e0;
	Node0x559eb12e31e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%75:\l75:                                               \l  resume \{ i8*, i32 \} %71\l}"];
	Node0x559eb12dd790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  %77 = phi float* [ %65, %62 ], [ %13, %24 ], [ %13, %12 ]\l  %78 = phi float* [ %64, %62 ], [ %14, %24 ], [ %14, %12 ]\l  %79 = phi float* [ %51, %62 ], [ %15, %24 ], [ %15, %12 ]\l  %80 = phi float* [ %63, %62 ], [ %16, %24 ], [ %16, %12 ]\l  %81 = phi float* [ %58, %62 ], [ %25, %24 ], [ %17, %12 ]\l  %82 = add nuw i64 %18, 1\l  %83 = ptrtoint float* %78 to i64\l  %84 = ptrtoint float* %77 to i64\l  %85 = sub i64 %83, %84\l  %86 = ashr exact i64 %85, 2\l  %87 = icmp ugt i64 %86, %82\l  br i1 %87, label %12, label %88, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x559eb12dd790:s0 -> Node0x559eb12dd650;
	Node0x559eb12dd790:s1 -> Node0x559eb12dd5c0;
	Node0x559eb12dd5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%88:\l88:                                               \l  ret void\l}"];
}
