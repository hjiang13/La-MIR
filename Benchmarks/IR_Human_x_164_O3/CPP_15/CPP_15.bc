; ModuleID = '../../Human_xBenchmarks_164/CPP_15/CPP_15.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_15/CPP_15.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z = comdat any

@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z15string_sequenceB5cxx11i(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %7, %union.anon** %8, align 8, !tbaa !3
  %9 = bitcast %union.anon* %7 to i8*
  store i8 48, i8* %9, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 1, i64* %11, align 8, !tbaa !9
  %12 = getelementptr inbounds i8, i8* %9, i64 1
  store i8 0, i8* %12, align 1, !tbaa !8
  %13 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  %14 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %16 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  %17 = bitcast i64* %3 to i8*
  %18 = bitcast %union.anon* %15 to i8*
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  %22 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %26 = bitcast %union.anon* %25 to i8*
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %29 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %32 = bitcast %union.anon* %28 to i8*
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %34 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %35 = icmp slt i32 %1, 1
  br i1 %35, label %170, label %36

36:                                               ; preds = %2
  %37 = bitcast i64* %33 to <2 x i64>*
  %38 = bitcast i64* %11 to <2 x i64>*
  br label %39

39:                                               ; preds = %36, %147
  %40 = phi i64 [ %150, %147 ], [ 1, %36 ]
  %41 = phi i8* [ %149, %147 ], [ %9, %36 ]
  %42 = phi i32 [ %148, %147 ], [ 1, %36 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #9
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #9
  call void @llvm.experimental.noalias.scope.decl(metadata !12)
  store %union.anon* %15, %union.anon** %16, align 8, !tbaa !3, !alias.scope !12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9, !noalias !12
  store i64 %40, i64* %3, align 8, !tbaa !15, !noalias !12
  %43 = icmp ugt i64 %40, 15
  br i1 %43, label %44, label %48

44:                                               ; preds = %39
  %45 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %46 unwind label %151

46:                                               ; preds = %44
  store i8* %45, i8** %19, align 8, !tbaa !16, !alias.scope !12
  %47 = load i64, i64* %3, align 8, !tbaa !15, !noalias !12
  store i64 %47, i64* %20, align 8, !tbaa !8, !alias.scope !12
  br label %48

48:                                               ; preds = %39, %46
  %49 = phi i8* [ %45, %46 ], [ %18, %39 ]
  switch i64 %40, label %52 [
    i64 1, label %50
    i64 0, label %53
  ]

50:                                               ; preds = %48
  %51 = load i8, i8* %41, align 1, !tbaa !8
  store i8 %51, i8* %49, align 1, !tbaa !8
  br label %53

52:                                               ; preds = %48
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 %41, i64 %40, i1 false) #9
  br label %53

53:                                               ; preds = %52, %50, %48
  %54 = load i64, i64* %3, align 8, !tbaa !15, !noalias !12
  store i64 %54, i64* %21, align 8, !tbaa !9, !alias.scope !12
  %55 = load i8*, i8** %19, align 8, !tbaa !16, !alias.scope !12
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1, !tbaa !8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9, !noalias !12
  %57 = load i64, i64* %21, align 8, !tbaa !9, !alias.scope !12
  %58 = icmp eq i64 %57, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %53
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)) #10
          to label %60 unwind label %65

60:                                               ; preds = %59
  unreachable

61:                                               ; preds = %53
  %62 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1)
          to label %72 unwind label %63

63:                                               ; preds = %61
  %64 = landingpad { i8*, i32 }
          cleanup
  br label %67

65:                                               ; preds = %59
  %66 = landingpad { i8*, i32 }
          cleanup
  br label %67

67:                                               ; preds = %65, %63
  %68 = phi { i8*, i32 } [ %64, %63 ], [ %66, %65 ]
  %69 = load i8*, i8** %19, align 8, !tbaa !16, !alias.scope !12
  %70 = icmp eq i8* %69, %18
  br i1 %70, label %165, label %71

71:                                               ; preds = %67
  call void @_ZdlPv(i8* %69) #9
  br label %165

72:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #9
  invoke void (%"class.std::__cxx11::basic_string"*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i64, i8*, ...) @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %6, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* nonnull @vsnprintf, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i32 %42)
          to label %73 unwind label %153

73:                                               ; preds = %72
  call void @llvm.experimental.noalias.scope.decl(metadata !17)
  %74 = load i64, i64* %21, align 8, !tbaa !9, !noalias !17
  %75 = load i64, i64* %23, align 8, !tbaa !9, !noalias !17
  %76 = add i64 %75, %74
  %77 = load i8*, i8** %19, align 8, !tbaa !16, !noalias !17
  %78 = icmp eq i8* %77, %18
  %79 = load i64, i64* %20, align 8, !noalias !17
  %80 = select i1 %78, i64 15, i64 %79
  %81 = icmp ugt i64 %76, %80
  %82 = load i8*, i8** %24, align 8, !tbaa !16, !noalias !17
  br i1 %81, label %83, label %90

83:                                               ; preds = %73
  %84 = icmp eq i8* %82, %26
  %85 = load i64, i64* %27, align 8, !noalias !17
  %86 = select i1 %84, i64 15, i64 %85
  %87 = icmp ugt i64 %76, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %83
  %89 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64 0, i64 0, i8* %77, i64 %74)
          to label %92 unwind label %155

90:                                               ; preds = %83, %73
  %91 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i8* %82, i64 %75)
          to label %92 unwind label %155

92:                                               ; preds = %90, %88
  %93 = phi %"class.std::__cxx11::basic_string"* [ %89, %88 ], [ %91, %90 ]
  store %union.anon* %28, %union.anon** %29, align 8, !tbaa !3, !alias.scope !17
  %94 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8, !tbaa !16
  %96 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 2
  %97 = bitcast %union.anon* %96 to i8*
  %98 = icmp eq i8* %95, %97
  br i1 %98, label %99, label %100

99:                                               ; preds = %92
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %32, i8* noundef nonnull align 8 dereferenceable(16) %95, i64 16, i1 false) #9
  br label %103

100:                                              ; preds = %92
  store i8* %95, i8** %30, align 8, !tbaa !16, !alias.scope !17
  %101 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 2, i32 0
  %102 = load i64, i64* %101, align 8, !tbaa !8
  store i64 %102, i64* %31, align 8, !tbaa !8, !alias.scope !17
  br label %103

103:                                              ; preds = %100, %99
  %104 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 1
  %105 = load i64, i64* %104, align 8, !tbaa !9
  store i64 %105, i64* %33, align 8, !tbaa !9, !alias.scope !17
  %106 = bitcast %"class.std::__cxx11::basic_string"* %93 to %union.anon**
  store %union.anon* %96, %union.anon** %106, align 8, !tbaa !16
  store i64 0, i64* %104, align 8, !tbaa !9
  store i8 0, i8* %97, align 8, !tbaa !8
  %107 = load i8*, i8** %30, align 8, !tbaa !16
  %108 = icmp eq i8* %107, %32
  br i1 %108, label %109, label %123

109:                                              ; preds = %103
  %110 = load i64, i64* %33, align 8, !tbaa !9
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %118, label %112

112:                                              ; preds = %109
  %113 = load i8*, i8** %10, align 8, !tbaa !16
  %114 = icmp eq i64 %110, 1
  br i1 %114, label %115, label %117

115:                                              ; preds = %112
  %116 = load i8, i8* %32, align 8, !tbaa !8
  store i8 %116, i8* %113, align 1, !tbaa !8
  br label %118

117:                                              ; preds = %112
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %113, i8* nonnull align 8 %32, i64 %110, i1 false) #9
  br label %118

118:                                              ; preds = %117, %115, %109
  %119 = load i64, i64* %33, align 8, !tbaa !9
  store i64 %119, i64* %11, align 8, !tbaa !9
  %120 = load i8*, i8** %10, align 8, !tbaa !16
  %121 = getelementptr inbounds i8, i8* %120, i64 %119
  store i8 0, i8* %121, align 1, !tbaa !8
  %122 = load i8*, i8** %30, align 8, !tbaa !16
  br label %132

123:                                              ; preds = %103
  %124 = load i8*, i8** %10, align 8, !tbaa !16
  %125 = icmp eq i8* %124, %9
  %126 = load i64, i64* %34, align 8
  store i8* %107, i8** %10, align 8, !tbaa !16
  %127 = load <2 x i64>, <2 x i64>* %37, align 8, !tbaa !8
  store <2 x i64> %127, <2 x i64>* %38, align 8, !tbaa !8
  %128 = icmp eq i8* %124, null
  %129 = or i1 %125, %128
  br i1 %129, label %131, label %130

130:                                              ; preds = %123
  store i8* %124, i8** %30, align 8, !tbaa !16
  store i64 %126, i64* %31, align 8, !tbaa !8
  br label %132

131:                                              ; preds = %123
  store %union.anon* %28, %union.anon** %29, align 8, !tbaa !16
  br label %132

132:                                              ; preds = %118, %130, %131
  %133 = phi i8* [ %122, %118 ], [ %124, %130 ], [ %32, %131 ]
  store i64 0, i64* %33, align 8, !tbaa !9
  store i8 0, i8* %133, align 1, !tbaa !8
  %134 = load i8*, i8** %30, align 8, !tbaa !16
  %135 = icmp eq i8* %134, %32
  br i1 %135, label %137, label %136

136:                                              ; preds = %132
  call void @_ZdlPv(i8* %134) #9
  br label %137

137:                                              ; preds = %132, %136
  %138 = load i8*, i8** %24, align 8, !tbaa !16
  %139 = icmp eq i8* %138, %26
  br i1 %139, label %141, label %140

140:                                              ; preds = %137
  call void @_ZdlPv(i8* %138) #9
  br label %141

141:                                              ; preds = %137, %140
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #9
  %142 = load i8*, i8** %19, align 8, !tbaa !16
  %143 = icmp eq i8* %142, %18
  br i1 %143, label %145, label %144

144:                                              ; preds = %141
  call void @_ZdlPv(i8* %142) #9
  br label %145

145:                                              ; preds = %141, %144
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #9
  %146 = icmp eq i32 %42, %1
  br i1 %146, label %170, label %147, !llvm.loop !20

147:                                              ; preds = %145
  %148 = add nuw i32 %42, 1
  %149 = load i8*, i8** %10, align 8, !tbaa !16, !noalias !12
  %150 = load i64, i64* %11, align 8, !tbaa !9, !noalias !12
  br label %39

151:                                              ; preds = %44
  %152 = landingpad { i8*, i32 }
          cleanup
  br label %165

153:                                              ; preds = %72
  %154 = landingpad { i8*, i32 }
          cleanup
  br label %160

155:                                              ; preds = %90, %88
  %156 = landingpad { i8*, i32 }
          cleanup
  %157 = load i8*, i8** %24, align 8, !tbaa !16
  %158 = icmp eq i8* %157, %26
  br i1 %158, label %160, label %159

159:                                              ; preds = %155
  call void @_ZdlPv(i8* %157) #9
  br label %160

160:                                              ; preds = %159, %155, %153
  %161 = phi { i8*, i32 } [ %154, %153 ], [ %156, %155 ], [ %156, %159 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #9
  %162 = load i8*, i8** %19, align 8, !tbaa !16
  %163 = icmp eq i8* %162, %18
  br i1 %163, label %165, label %164

164:                                              ; preds = %160
  call void @_ZdlPv(i8* %162) #9
  br label %165

165:                                              ; preds = %164, %160, %151, %71, %67
  %166 = phi { i8*, i32 } [ %152, %151 ], [ %68, %71 ], [ %68, %67 ], [ %161, %160 ], [ %161, %164 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #9
  %167 = load i8*, i8** %10, align 8, !tbaa !16
  %168 = icmp eq i8* %167, %9
  br i1 %168, label %171, label %169

169:                                              ; preds = %165
  call void @_ZdlPv(i8* %167) #9
  br label %171

170:                                              ; preds = %145, %2
  ret void

171:                                              ; preds = %169, %165
  resume { i8*, i32 } %166
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* %1, i64 %2, i8* %3, ...) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca i64, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = alloca i8, i64 %2, align 16
  %8 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %8)
  %10 = call i32 %1(i8* nonnull %7, i64 %2, i8* %3, %struct.__va_list_tag* nonnull %9)
  call void @llvm.va_end(i8* nonnull %8)
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3
  %14 = bitcast %union.anon* %12 to i8*
  %15 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  store i64 %11, i64* %5, align 8, !tbaa !15
  %16 = icmp ugt i32 %10, 15
  br i1 %16, label %17, label %22

17:                                               ; preds = %4
  %18 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8, !tbaa !16
  %20 = load i64, i64* %5, align 8, !tbaa !15
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %20, i64* %21, align 8, !tbaa !8
  br label %22

22:                                               ; preds = %17, %4
  %23 = phi i8* [ %18, %17 ], [ %14, %4 ]
  switch i64 %11, label %26 [
    i64 1, label %24
    i64 0, label %27
  ]

24:                                               ; preds = %22
  %25 = load i8, i8* %7, align 16, !tbaa !8
  store i8 %25, i8* %23, align 1, !tbaa !8
  br label %27

26:                                               ; preds = %22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* nonnull align 16 %7, i64 %11, i1 false) #9
  br label %27

27:                                               ; preds = %26, %24, %22
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %29 = load i64, i64* %5, align 8, !tbaa !15
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %29, i64* %30, align 8, !tbaa !9
  %31 = load i8*, i8** %28, align 8, !tbaa !16
  %32 = getelementptr inbounds i8, i8* %31, i64 %29
  store i8 0, i8* %32, align 1, !tbaa !8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @vsnprintf(i8* nocapture noundef, i64 noundef, i8* nocapture noundef readonly, %struct.__va_list_tag* noundef) #2

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #3

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #3

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #6

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #7

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i8*, i64) local_unnamed_addr #4

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #8

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nofree nosync nounwind willreturn }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #6 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #9 = { nounwind }
attributes #10 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!6, !6, i64 0}
!9 = !{!10, !11, i64 8}
!10 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !11, i64 8, !6, i64 16}
!11 = !{!"long", !6, i64 0}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_: argument 0"}
!14 = distinct !{!14, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"}
!15 = !{!11, !11, i64 0}
!16 = !{!10, !5, i64 0}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_: argument 0"}
!19 = distinct !{!19, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_"}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.mustprogress"}
