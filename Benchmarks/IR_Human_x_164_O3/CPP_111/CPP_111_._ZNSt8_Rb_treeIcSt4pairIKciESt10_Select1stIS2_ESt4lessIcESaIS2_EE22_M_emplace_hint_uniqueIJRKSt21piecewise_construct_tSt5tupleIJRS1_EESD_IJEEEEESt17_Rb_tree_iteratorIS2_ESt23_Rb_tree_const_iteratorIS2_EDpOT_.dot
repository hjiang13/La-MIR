digraph "CFG for '_ZNSt8_Rb_treeIcSt4pairIKciESt10_Select1stIS2_ESt4lessIcESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_' function" {
	label="CFG for '_ZNSt8_Rb_treeIcSt4pairIKciESt10_Select1stIS2_ESt4lessIcESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_' function";

	Node0x556dcd4dffb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call noalias nonnull i8* @_Znwm(i64 40) #10\l  %7 = getelementptr inbounds %\"class.std::tuple\", %\"class.std::tuple\"* %3,\l... i64 0, i32 0, i32 0, i32 0\l  %8 = load i8*, i8** %7, align 8, !tbaa !3\l  %9 = getelementptr inbounds i8, i8* %6, i64 32\l  %10 = load i8, i8* %8, align 1, !tbaa !8\l  store i8 %10, i8* %9, align 4, !tbaa !9\l  %11 = getelementptr inbounds i8, i8* %6, i64 36\l  %12 = bitcast i8* %11 to i32*\l  store i32 0, i32* %12, align 4, !tbaa !12\l  %13 = invoke \{ %\"struct.std::_Rb_tree_node_base\"*,\l... %\"struct.std::_Rb_tree_node_base\"* \}\l... @_ZNSt8_Rb_treeIcSt4pairIKciESt10_Select1stIS2_ESt4lessIcESaIS2_EE29_M_get_ins\l...ert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%\"class.std::_Rb_tree\"\l...* nonnull align 8 dereferenceable(48) %0, %\"struct.std::_Rb_tree_node_base\"*\l... %1, i8* nonnull align 1 dereferenceable(1) %9)\l          to label %14 unwind label %41\l}"];
	Node0x556dcd4dffb0 -> Node0x556dcd4dfc10;
	Node0x556dcd4dffb0 -> Node0x556dcd4e2440;
	Node0x556dcd4dfc10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l14:                                               \l  %15 = extractvalue \{ %\"struct.std::_Rb_tree_node_base\"*,\l... %\"struct.std::_Rb_tree_node_base\"* \} %13, 0\l  %16 = extractvalue \{ %\"struct.std::_Rb_tree_node_base\"*,\l... %\"struct.std::_Rb_tree_node_base\"* \} %13, 1\l  %17 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %16, null\l  br i1 %17, label %45, label %18\l|{<s0>T|<s1>F}}"];
	Node0x556dcd4dfc10:s0 -> Node0x556dcd4e2860;
	Node0x556dcd4dfc10:s1 -> Node0x556dcd4e28b0;
	Node0x556dcd4e28b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%18:\l18:                                               \l  %19 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %15, null\l  br i1 %19, label %20, label %31\l|{<s0>T|<s1>F}}"];
	Node0x556dcd4e28b0:s0 -> Node0x556dcd4e2a80;
	Node0x556dcd4e28b0:s1 -> Node0x556dcd4e2ad0;
	Node0x556dcd4e2a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%20:\l20:                                               \l  %21 = getelementptr inbounds %\"class.std::_Rb_tree\", %\"class.std::_Rb_tree\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 0\l  %22 = getelementptr inbounds i8, i8* %21, i64 8\l  %23 = bitcast i8* %22 to %\"struct.std::_Rb_tree_node_base\"*\l  %24 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %16, %23\l  br i1 %24, label %31, label %25\l|{<s0>T|<s1>F}}"];
	Node0x556dcd4e2a80:s0 -> Node0x556dcd4e2ad0;
	Node0x556dcd4e2a80:s1 -> Node0x556dcd4e2ed0;
	Node0x556dcd4e2ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%25:\l25:                                               \l  %26 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\",\l... %\"struct.std::_Rb_tree_node_base\"* %16, i64 1\l  %27 = bitcast %\"struct.std::_Rb_tree_node_base\"* %26 to i8*\l  %28 = load i8, i8* %9, align 1, !tbaa !8\l  %29 = load i8, i8* %27, align 1, !tbaa !8\l  %30 = icmp slt i8 %28, %29\l  br label %31\l}"];
	Node0x556dcd4e2ed0 -> Node0x556dcd4e2ad0;
	Node0x556dcd4e2ad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%31:\l31:                                               \l  %32 = phi i1 [ true, %20 ], [ %30, %25 ], [ true, %18 ]\l  %33 = bitcast i8* %6 to %\"struct.std::_Rb_tree_node_base\"*\l  %34 = getelementptr inbounds %\"class.std::_Rb_tree\", %\"class.std::_Rb_tree\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 0\l  %35 = getelementptr inbounds i8, i8* %34, i64 8\l  %36 = bitcast i8* %35 to %\"struct.std::_Rb_tree_node_base\"*\l  tail call void\l... @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext\l... %32, %\"struct.std::_Rb_tree_node_base\"* nonnull %33,\l... %\"struct.std::_Rb_tree_node_base\"* nonnull %16,\l... %\"struct.std::_Rb_tree_node_base\"* nonnull align 8 dereferenceable(32) %36)\l... #11\l  %37 = getelementptr inbounds i8, i8* %34, i64 40\l  %38 = bitcast i8* %37 to i64*\l  %39 = load i64, i64* %38, align 8, !tbaa !13\l  %40 = add i64 %39, 1\l  store i64 %40, i64* %38, align 8, !tbaa !13\l  br label %46\l}"];
	Node0x556dcd4e2ad0 -> Node0x556dcd4e3870;
	Node0x556dcd4e2440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%41:\l41:                                               \l  %42 = landingpad \{ i8*, i32 \}\l          catch i8* null\l  %43 = extractvalue \{ i8*, i32 \} %42, 0\l  %44 = tail call i8* @__cxa_begin_catch(i8* %43) #11\l  tail call void @_ZdlPv(i8* nonnull %6) #11\l  invoke void @__cxa_rethrow() #12\l          to label %54 unwind label %48\l}"];
	Node0x556dcd4e2440 -> Node0x556dcd4e4250;
	Node0x556dcd4e2440 -> Node0x556dcd4e42a0;
	Node0x556dcd4e2860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%45:\l45:                                               \l  tail call void @_ZdlPv(i8* nonnull %6) #11\l  br label %46\l}"];
	Node0x556dcd4e2860 -> Node0x556dcd4e3870;
	Node0x556dcd4e3870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi %\"struct.std::_Rb_tree_node_base\"* [ %15, %45 ], [ %33, %31 ]\l  ret %\"struct.std::_Rb_tree_node_base\"* %47\l}"];
	Node0x556dcd4e42a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%48:\l48:                                               \l  %49 = landingpad \{ i8*, i32 \}\l          cleanup\l  invoke void @__cxa_end_catch()\l          to label %50 unwind label %51\l}"];
	Node0x556dcd4e42a0 -> Node0x556dcd4e47e0;
	Node0x556dcd4e42a0 -> Node0x556dcd4e4830;
	Node0x556dcd4e47e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%50:\l50:                                               \l  resume \{ i8*, i32 \} %49\l}"];
	Node0x556dcd4e4830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%51:\l51:                                               \l  %52 = landingpad \{ i8*, i32 \}\l          catch i8* null\l  %53 = extractvalue \{ i8*, i32 \} %52, 0\l  tail call void @__clang_call_terminate(i8* %53) #13\l  unreachable\l}"];
	Node0x556dcd4e4250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4f69d970",label="{%54:\l54:                                               \l  unreachable\l}"];
}
