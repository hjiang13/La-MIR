digraph "CFG for '_Z6digitsi' function" {
	label="CFG for '_Z6digitsi' function";

	Node0x55d69b9a0e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%1:\l  %2 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %3 = bitcast %\"class.std::__cxx11::basic_string\"* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #7\l  call void (%\"class.std::__cxx11::basic_string\"*, i32 (i8*, i64, i8*,\l... %struct.__va_list_tag*)*, i64, i8*, ...)\l... @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc\l...EEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%\"class.std::__cxx11::basic_string\"\l...* nonnull sret(%\"class.std::__cxx11::basic_string\") align 8 %2, i32 (i8*, i64,\l... i8*, %struct.__va_list_tag*)* nonnull @vsnprintf, i64 16, i8* getelementptr\l... inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %0)\l  %4 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 1\l  %5 = load i64, i64* %4, align 8, !tbaa !3\l  %6 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 0, i32 0\l  %7 = load i8*, i8** %6, align 8\l  %8 = icmp eq i64 %5, 0\l  br i1 %8, label %31, label %9\l|{<s0>T|<s1>F}}"];
	Node0x55d69b9a0e50:s0 -> Node0x55d69b9a1fb0;
	Node0x55d69b9a0e50:s1 -> Node0x55d69b9a2cc0;
	Node0x55d69b9a2cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%9:\l9:                                                \l  %10 = and i64 %5, 1\l  %11 = icmp eq i64 %5, 1\l  br i1 %11, label %14, label %12\l|{<s0>T|<s1>F}}"];
	Node0x55d69b9a2cc0:s0 -> Node0x55d69b9a2f50;
	Node0x55d69b9a2cc0:s1 -> Node0x55d69b9a2fa0;
	Node0x55d69b9a2fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%12:\l12:                                               \l  %13 = and i64 %5, -2\l  br label %41\l}"];
	Node0x55d69b9a2fa0 -> Node0x55d69b9a31a0;
	Node0x55d69b9a2f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%14:\l14:                                               \l  %15 = phi i32 [ undef, %9 ], [ %62, %41 ]\l  %16 = phi i32 [ undef, %9 ], [ %64, %41 ]\l  %17 = phi i64 [ 0, %9 ], [ %65, %41 ]\l  %18 = phi i32 [ 0, %9 ], [ %64, %41 ]\l  %19 = phi i32 [ 1, %9 ], [ %62, %41 ]\l  %20 = icmp eq i64 %10, 0\l  br i1 %20, label %31, label %21\l|{<s0>T|<s1>F}}"];
	Node0x55d69b9a2f50:s0 -> Node0x55d69b9a1fb0;
	Node0x55d69b9a2f50:s1 -> Node0x55d69b9a3af0;
	Node0x55d69b9a3af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%21:\l21:                                               \l  %22 = getelementptr inbounds i8, i8* %7, i64 %17\l  %23 = load i8, i8* %22, align 1, !tbaa !10\l  %24 = srem i8 %23, 2\l  %25 = icmp eq i8 %24, 1\l  %26 = select i1 %25, i32 1, i32 %18\l  %27 = sext i8 %23 to i32\l  %28 = add nsw i32 %27, -48\l  %29 = select i1 %25, i32 %28, i32 1\l  %30 = mul nsw i32 %29, %19\l  br label %31\l}"];
	Node0x55d69b9a3af0 -> Node0x55d69b9a1fb0;
	Node0x55d69b9a1fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%31:\l31:                                               \l  %32 = phi i32 [ 1, %1 ], [ %15, %14 ], [ %30, %21 ]\l  %33 = phi i32 [ 0, %1 ], [ %16, %14 ], [ %26, %21 ]\l  %34 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 2\l  %35 = bitcast %union.anon* %34 to i8*\l  %36 = icmp eq i8* %7, %35\l  br i1 %36, label %38, label %37\l|{<s0>T|<s1>F}}"];
	Node0x55d69b9a1fb0:s0 -> Node0x55d69b9a48d0;
	Node0x55d69b9a1fb0:s1 -> Node0x55d69b9a4920;
	Node0x55d69b9a4920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%37:\l37:                                               \l  call void @_ZdlPv(i8* %7) #7\l  br label %38\l}"];
	Node0x55d69b9a4920 -> Node0x55d69b9a48d0;
	Node0x55d69b9a48d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%38:\l38:                                               \l  %39 = icmp eq i32 %33, 0\l  %40 = select i1 %39, i32 0, i32 %32\l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #7\l  ret i32 %40\l}"];
	Node0x55d69b9a31a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = phi i64 [ 0, %12 ], [ %65, %41 ]\l  %43 = phi i32 [ 0, %12 ], [ %64, %41 ]\l  %44 = phi i32 [ 1, %12 ], [ %62, %41 ]\l  %45 = phi i64 [ %13, %12 ], [ %66, %41 ]\l  %46 = getelementptr inbounds i8, i8* %7, i64 %42\l  %47 = load i8, i8* %46, align 1, !tbaa !10\l  %48 = sext i8 %47 to i32\l  %49 = srem i8 %47, 2\l  %50 = icmp eq i8 %49, 1\l  %51 = add nsw i32 %48, -48\l  %52 = select i1 %50, i32 %51, i32 1\l  %53 = mul nsw i32 %52, %44\l  %54 = or i64 %42, 1\l  %55 = getelementptr inbounds i8, i8* %7, i64 %54\l  %56 = load i8, i8* %55, align 1, !tbaa !10\l  %57 = sext i8 %56 to i32\l  %58 = srem i8 %56, 2\l  %59 = icmp eq i8 %58, 1\l  %60 = add nsw i32 %57, -48\l  %61 = select i1 %59, i32 %60, i32 1\l  %62 = mul nsw i32 %61, %53\l  %63 = select i1 %59, i1 true, i1 %50\l  %64 = select i1 %63, i32 1, i32 %43\l  %65 = add nuw nsw i64 %42, 2\l  %66 = add i64 %45, -2\l  %67 = icmp eq i64 %66, 0\l  br i1 %67, label %14, label %41, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x55d69b9a31a0:s0 -> Node0x55d69b9a2f50;
	Node0x55d69b9a31a0:s1 -> Node0x55d69b9a31a0;
}
