digraph "CFG for '_Z6medianSt6vectorIfSaIfEE' function" {
	label="CFG for '_Z6medianSt6vectorIfSaIfEE' function";

	Node0x56403d8076d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1:\l  %2 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %3 = load float*, float** %2, align 8, !tbaa !3\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %5 = load float*, float** %4, align 8, !tbaa !3\l  %6 = icmp eq float* %3, %5\l  br i1 %6, label %17, label %7\l|{<s0>T|<s1>F}}"];
	Node0x56403d8076d0:s0 -> Node0x56403d8091f0;
	Node0x56403d8076d0:s1 -> Node0x56403d809280;
	Node0x56403d809280 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e97a5f70",label="{%7:\l7:                                                \l  %8 = ptrtoint float* %5 to i64\l  %9 = ptrtoint float* %3 to i64\l  %10 = sub i64 %8, %9\l  %11 = ashr exact i64 %10, 2\l  %12 = tail call i64 @llvm.ctlz.i64(i64 %11, i1 true) #4, !range !7\l  %13 = shl nuw nsw i64 %12, 1\l  %14 = xor i64 %13, 126\l  tail call void\l... @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEElN\l...S0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(float* %3, float* %5, i64 %14)\l  tail call void\l... @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIf\l...EEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(float* %3, float* %5)\l  %15 = load float*, float** %4, align 8, !tbaa !8\l  %16 = load float*, float** %2, align 8, !tbaa !10\l  br label %17\l}"];
	Node0x56403d809280 -> Node0x56403d8091f0;
	Node0x56403d8091f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = phi float* [ %3, %1 ], [ %16, %7 ]\l  %19 = phi float* [ %3, %1 ], [ %15, %7 ]\l  %20 = ptrtoint float* %19 to i64\l  %21 = ptrtoint float* %18 to i64\l  %22 = sub i64 %20, %21\l  %23 = ashr exact i64 %22, 2\l  %24 = and i64 %22, 4\l  %25 = icmp eq i64 %24, 0\l  %26 = lshr i64 %23, 1\l  %27 = getelementptr inbounds float, float* %18, i64 %26\l  %28 = load float, float* %27, align 4, !tbaa !11\l  br i1 %25, label %29, label %35\l|{<s0>T|<s1>F}}"];
	Node0x56403d8091f0:s0 -> Node0x56403d80a930;
	Node0x56403d8091f0:s1 -> Node0x56403d80a9c0;
	Node0x56403d80a930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = add nsw i64 %26, -1\l  %31 = getelementptr inbounds float, float* %18, i64 %30\l  %32 = load float, float* %31, align 4, !tbaa !11\l  %33 = fadd float %28, %32\l  %34 = fmul float %33, 5.000000e-01\l  br label %35\l}"];
	Node0x56403d80a930 -> Node0x56403d80a9c0;
	Node0x56403d80a9c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi float [ %34, %29 ], [ %28, %17 ]\l  ret float %36\l}"];
}
