digraph "CFG for '_Z12add_elementsSt6vectorIiSaIiEEi' function" {
	label="CFG for '_Z12add_elementsSt6vectorIiSaIiEEi' function";

	Node0x559331ee4dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%2:\l  %3 = icmp sgt i32 %1, 0\l  br i1 %3, label %4, label %86\l|{<s0>T|<s1>F}}"];
	Node0x559331ee4dd0:s0 -> Node0x559331ee5530;
	Node0x559331ee4dd0:s1 -> Node0x559331ee5580;
	Node0x559331ee5530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%4:\l4:                                                \l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %6 = load i32*, i32** %5, align 8, !tbaa !3\l  %7 = zext i32 %1 to i64\l  %8 = icmp ult i32 %1, 8\l  br i1 %8, label %83, label %9\l|{<s0>T|<s1>F}}"];
	Node0x559331ee5530:s0 -> Node0x559331ee56c0;
	Node0x559331ee5530:s1 -> Node0x559331ee6570;
	Node0x559331ee6570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%9:\l9:                                                \l  %10 = and i64 %7, 4294967288\l  %11 = add nsw i64 %10, -8\l  %12 = lshr exact i64 %11, 3\l  %13 = add nuw nsw i64 %12, 1\l  %14 = and i64 %13, 1\l  %15 = icmp eq i64 %11, 0\l  br i1 %15, label %55, label %16\l|{<s0>T|<s1>F}}"];
	Node0x559331ee6570:s0 -> Node0x559331ee6ad0;
	Node0x559331ee6570:s1 -> Node0x559331ee6b20;
	Node0x559331ee6b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%16:\l16:                                               \l  %17 = and i64 %13, 4611686018427387902\l  br label %18\l}"];
	Node0x559331ee6b20 -> Node0x559331ee6c90;
	Node0x559331ee6c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%18:\l18:                                               \l  %19 = phi i64 [ 0, %16 ], [ %52, %18 ]\l  %20 = phi \<4 x i32\> [ zeroinitializer, %16 ], [ %50, %18 ]\l  %21 = phi \<4 x i32\> [ zeroinitializer, %16 ], [ %51, %18 ]\l  %22 = phi i64 [ %17, %16 ], [ %53, %18 ]\l  %23 = getelementptr inbounds i32, i32* %6, i64 %19\l  %24 = bitcast i32* %23 to \<4 x i32\>*\l  %25 = load \<4 x i32\>, \<4 x i32\>* %24, align 4, !tbaa !8\l  %26 = getelementptr inbounds i32, i32* %23, i64 4\l  %27 = bitcast i32* %26 to \<4 x i32\>*\l  %28 = load \<4 x i32\>, \<4 x i32\>* %27, align 4, !tbaa !8\l  %29 = add \<4 x i32\> %25, \<i32 99, i32 99, i32 99, i32 99\>\l  %30 = add \<4 x i32\> %28, \<i32 99, i32 99, i32 99, i32 99\>\l  %31 = icmp ult \<4 x i32\> %29, \<i32 199, i32 199, i32 199, i32 199\>\l  %32 = icmp ult \<4 x i32\> %30, \<i32 199, i32 199, i32 199, i32 199\>\l  %33 = select \<4 x i1\> %31, \<4 x i32\> %25, \<4 x i32\> zeroinitializer\l  %34 = select \<4 x i1\> %32, \<4 x i32\> %28, \<4 x i32\> zeroinitializer\l  %35 = add \<4 x i32\> %33, %20\l  %36 = add \<4 x i32\> %34, %21\l  %37 = or i64 %19, 8\l  %38 = getelementptr inbounds i32, i32* %6, i64 %37\l  %39 = bitcast i32* %38 to \<4 x i32\>*\l  %40 = load \<4 x i32\>, \<4 x i32\>* %39, align 4, !tbaa !8\l  %41 = getelementptr inbounds i32, i32* %38, i64 4\l  %42 = bitcast i32* %41 to \<4 x i32\>*\l  %43 = load \<4 x i32\>, \<4 x i32\>* %42, align 4, !tbaa !8\l  %44 = add \<4 x i32\> %40, \<i32 99, i32 99, i32 99, i32 99\>\l  %45 = add \<4 x i32\> %43, \<i32 99, i32 99, i32 99, i32 99\>\l  %46 = icmp ult \<4 x i32\> %44, \<i32 199, i32 199, i32 199, i32 199\>\l  %47 = icmp ult \<4 x i32\> %45, \<i32 199, i32 199, i32 199, i32 199\>\l  %48 = select \<4 x i1\> %46, \<4 x i32\> %40, \<4 x i32\> zeroinitializer\l  %49 = select \<4 x i1\> %47, \<4 x i32\> %43, \<4 x i32\> zeroinitializer\l  %50 = add \<4 x i32\> %48, %35\l  %51 = add \<4 x i32\> %49, %36\l  %52 = add nuw i64 %19, 16\l  %53 = add i64 %22, -2\l  %54 = icmp eq i64 %53, 0\l  br i1 %54, label %55, label %18, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x559331ee6c90:s0 -> Node0x559331ee6ad0;
	Node0x559331ee6c90:s1 -> Node0x559331ee6c90;
	Node0x559331ee6ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%55:\l55:                                               \l  %56 = phi \<4 x i32\> [ undef, %9 ], [ %50, %18 ]\l  %57 = phi \<4 x i32\> [ undef, %9 ], [ %51, %18 ]\l  %58 = phi i64 [ 0, %9 ], [ %52, %18 ]\l  %59 = phi \<4 x i32\> [ zeroinitializer, %9 ], [ %50, %18 ]\l  %60 = phi \<4 x i32\> [ zeroinitializer, %9 ], [ %51, %18 ]\l  %61 = icmp eq i64 %14, 0\l  br i1 %61, label %77, label %62\l|{<s0>T|<s1>F}}"];
	Node0x559331ee6ad0:s0 -> Node0x559331eea2b0;
	Node0x559331ee6ad0:s1 -> Node0x559331eea300;
	Node0x559331eea300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%62:\l62:                                               \l  %63 = getelementptr inbounds i32, i32* %6, i64 %58\l  %64 = bitcast i32* %63 to \<4 x i32\>*\l  %65 = load \<4 x i32\>, \<4 x i32\>* %64, align 4, !tbaa !8\l  %66 = getelementptr inbounds i32, i32* %63, i64 4\l  %67 = bitcast i32* %66 to \<4 x i32\>*\l  %68 = load \<4 x i32\>, \<4 x i32\>* %67, align 4, !tbaa !8\l  %69 = add \<4 x i32\> %68, \<i32 99, i32 99, i32 99, i32 99\>\l  %70 = icmp ult \<4 x i32\> %69, \<i32 199, i32 199, i32 199, i32 199\>\l  %71 = select \<4 x i1\> %70, \<4 x i32\> %68, \<4 x i32\> zeroinitializer\l  %72 = add \<4 x i32\> %71, %60\l  %73 = add \<4 x i32\> %65, \<i32 99, i32 99, i32 99, i32 99\>\l  %74 = icmp ult \<4 x i32\> %73, \<i32 199, i32 199, i32 199, i32 199\>\l  %75 = select \<4 x i1\> %74, \<4 x i32\> %65, \<4 x i32\> zeroinitializer\l  %76 = add \<4 x i32\> %75, %59\l  br label %77\l}"];
	Node0x559331eea300 -> Node0x559331eea2b0;
	Node0x559331eea2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%77:\l77:                                               \l  %78 = phi \<4 x i32\> [ %56, %55 ], [ %76, %62 ]\l  %79 = phi \<4 x i32\> [ %57, %55 ], [ %72, %62 ]\l  %80 = add \<4 x i32\> %79, %78\l  %81 = call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %80)\l  %82 = icmp eq i64 %10, %7\l  br i1 %82, label %86, label %83\l|{<s0>T|<s1>F}}"];
	Node0x559331eea2b0:s0 -> Node0x559331ee5580;
	Node0x559331eea2b0:s1 -> Node0x559331ee56c0;
	Node0x559331ee56c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%83:\l83:                                               \l  %84 = phi i64 [ 0, %4 ], [ %10, %77 ]\l  %85 = phi i32 [ 0, %4 ], [ %81, %77 ]\l  br label %88\l}"];
	Node0x559331ee56c0 -> Node0x559331eeb700;
	Node0x559331ee5580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%86:\l86:                                               \l  %87 = phi i32 [ 0, %2 ], [ %81, %77 ], [ %96, %88 ]\l  ret i32 %87\l}"];
	Node0x559331eeb700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  %89 = phi i64 [ %97, %88 ], [ %84, %83 ]\l  %90 = phi i32 [ %96, %88 ], [ %85, %83 ]\l  %91 = getelementptr inbounds i32, i32* %6, i64 %89\l  %92 = load i32, i32* %91, align 4, !tbaa !8\l  %93 = add i32 %92, 99\l  %94 = icmp ult i32 %93, 199\l  %95 = select i1 %94, i32 %92, i32 0\l  %96 = add nsw i32 %95, %90\l  %97 = add nuw nsw i64 %89, 1\l  %98 = icmp eq i64 %97, %7\l  br i1 %98, label %86, label %88, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x559331eeb700:s0 -> Node0x559331ee5580;
	Node0x559331eeb700:s1 -> Node0x559331eeb700;
}
