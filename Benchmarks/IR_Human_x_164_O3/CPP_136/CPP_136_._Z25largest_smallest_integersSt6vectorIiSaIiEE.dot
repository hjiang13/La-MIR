digraph "CFG for '_Z25largest_smallest_integersSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z25largest_smallest_integersSt6vectorIiSaIiEE' function";

	Node0x561ccebbc090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = load i32*, i32** %3, align 8, !tbaa !3\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %6 = load i32*, i32** %5, align 8, !tbaa !8\l  %7 = ptrtoint i32* %4 to i64\l  %8 = ptrtoint i32* %6 to i64\l  %9 = sub i64 %7, %8\l  %10 = icmp eq i64 %9, 0\l  br i1 %10, label %14, label %11\l|{<s0>T|<s1>F}}"];
	Node0x561ccebbc090:s0 -> Node0x561ccebbd410;
	Node0x561ccebbc090:s1 -> Node0x561ccebbd9c0;
	Node0x561ccebbd9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%11:\l11:                                               \l  %12 = ashr exact i64 %9, 2\l  %13 = call i64 @llvm.umax.i64(i64 %12, i64 1)\l  br label %28\l}"];
	Node0x561ccebbd9c0 -> Node0x561ccebbde30;
	Node0x561ccebbd410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%14:\l14:                                               \l  %15 = phi i32 [ 0, %2 ], [ %49, %47 ]\l  %16 = phi i32 [ 0, %2 ], [ %48, %47 ]\l  %17 = bitcast %\"class.std::vector\"* %0 to i8*\l  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %17, i8 0, i64 24, i1 false) #4\l  %18 = call noalias nonnull i8* @_Znwm(i64 8) #5\l  %19 = bitcast i8* %18 to i32*\l  %20 = bitcast %\"class.std::vector\"* %0 to i8**\l  store i8* %18, i8** %20, align 8, !tbaa !8\l  %21 = getelementptr inbounds i8, i8* %18, i64 8\l  %22 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %23 = bitcast i32** %22 to i8**\l  store i8* %21, i8** %23, align 8, !tbaa !9\l  store i32 %16, i32* %19, align 4\l  %24 = getelementptr inbounds i8, i8* %18, i64 4\l  %25 = bitcast i8* %24 to i32*\l  store i32 %15, i32* %25, align 4\l  %26 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %27 = bitcast i32** %26 to i8**\l  store i8* %21, i8** %27, align 8, !tbaa !3\l  ret void\l}"];
	Node0x561ccebbde30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i64 [ 0, %11 ], [ %50, %47 ]\l  %30 = phi i32 [ 0, %11 ], [ %48, %47 ]\l  %31 = phi i32 [ 0, %11 ], [ %49, %47 ]\l  %32 = getelementptr inbounds i32, i32* %6, i64 %29\l  %33 = load i32, i32* %32, align 4, !tbaa !10\l  %34 = icmp slt i32 %33, 0\l  br i1 %34, label %35, label %40\l|{<s0>T|<s1>F}}"];
	Node0x561ccebbde30:s0 -> Node0x561ccebc04f0;
	Node0x561ccebbde30:s1 -> Node0x561ccebc0580;
	Node0x561ccebc04f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%35:\l35:                                               \l  %36 = icmp eq i32 %30, 0\l  %37 = icmp sgt i32 %33, %30\l  %38 = select i1 %36, i1 true, i1 %37\l  %39 = select i1 %38, i32 %33, i32 %30\l  br label %47\l}"];
	Node0x561ccebc04f0 -> Node0x561ccebbdf20;
	Node0x561ccebc0580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%40:\l40:                                               \l  %41 = icmp eq i32 %33, 0\l  br i1 %41, label %47, label %42\l|{<s0>T|<s1>F}}"];
	Node0x561ccebc0580:s0 -> Node0x561ccebbdf20;
	Node0x561ccebc0580:s1 -> Node0x561ccebc0a70;
	Node0x561ccebc0a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%42:\l42:                                               \l  %43 = icmp eq i32 %31, 0\l  %44 = icmp slt i32 %33, %31\l  %45 = select i1 %43, i1 true, i1 %44\l  %46 = select i1 %45, i32 %33, i32 %31\l  br label %47\l}"];
	Node0x561ccebc0a70 -> Node0x561ccebbdf20;
	Node0x561ccebbdf20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = phi i32 [ %30, %40 ], [ %39, %35 ], [ %30, %42 ]\l  %49 = phi i32 [ %31, %40 ], [ %31, %35 ], [ %46, %42 ]\l  %50 = add nuw nsw i64 %29, 1\l  %51 = icmp eq i64 %50, %13\l  br i1 %51, label %14, label %28, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x561ccebbdf20:s0 -> Node0x561ccebbd410;
	Node0x561ccebbdf20:s1 -> Node0x561ccebbde30;
}
