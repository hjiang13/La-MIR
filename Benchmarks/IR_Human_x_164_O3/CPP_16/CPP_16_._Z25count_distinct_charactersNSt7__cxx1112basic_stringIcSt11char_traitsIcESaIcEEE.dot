digraph "CFG for '_Z25count_distinct_charactersNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function" {
	label="CFG for '_Z25count_distinct_charactersNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function";

	Node0x557a8289af90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%1:\l  %2 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %3 = load i8*, i8** %2, align 8, !tbaa !3\l  %4 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  %5 = load i64, i64* %4, align 8, !tbaa !10\l  %6 = getelementptr inbounds i8, i8* %3, i64 %5\l  %7 = icmp eq i64 %5, 0\l  br i1 %7, label %41, label %8\l|{<s0>T|<s1>F}}"];
	Node0x557a8289af90:s0 -> Node0x557a8289c5e0;
	Node0x557a8289af90:s1 -> Node0x557a8289c670;
	Node0x557a8289c670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%8:\l8:                                                \l  %9 = phi i8* [ %14, %8 ], [ %3, %1 ]\l  %10 = load i8, i8* %9, align 1, !tbaa !11\l  %11 = sext i8 %10 to i32\l  %12 = tail call i32 @tolower(i32 %11)\l  %13 = trunc i32 %12 to i8\l  store i8 %13, i8* %9, align 1, !tbaa !11\l  %14 = getelementptr inbounds i8, i8* %9, i64 1\l  %15 = icmp eq i8* %14, %6\l  br i1 %15, label %16, label %8, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x557a8289c670:s0 -> Node0x557a8289d4e0;
	Node0x557a8289c670:s1 -> Node0x557a8289c670;
	Node0x557a8289d4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%16:\l16:                                               \l  %17 = load i64, i64* %4, align 8, !tbaa !10\l  %18 = icmp eq i64 %17, 0\l  br i1 %18, label %41, label %19\l|{<s0>T|<s1>F}}"];
	Node0x557a8289d4e0:s0 -> Node0x557a8289c5e0;
	Node0x557a8289d4e0:s1 -> Node0x557a8289dd60;
	Node0x557a8289dd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%19:\l19:                                               \l  %20 = phi i64 [ %140, %136 ], [ 0, %16 ]\l  %21 = phi i8* [ %139, %136 ], [ null, %16 ]\l  %22 = phi i8* [ %138, %136 ], [ null, %16 ]\l  %23 = phi i8* [ %137, %136 ], [ null, %16 ]\l  %24 = ptrtoint i8* %22 to i64\l  %25 = ptrtoint i8* %23 to i64\l  %26 = sub i64 %24, %25\l  %27 = icmp eq i64 %26, 0\l  %28 = load i8*, i8** %2, align 8, !tbaa !3\l  %29 = getelementptr inbounds i8, i8* %28, i64 %20\l  br i1 %27, label %98, label %30\l|{<s0>T|<s1>F}}"];
	Node0x557a8289dd60:s0 -> Node0x557a8289ec40;
	Node0x557a8289dd60:s1 -> Node0x557a8289ecd0;
	Node0x557a8289ecd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%30:\l30:                                               \l  %31 = load i8, i8* %29, align 1, !tbaa !11\l  %32 = xor i64 %25, -1\l  %33 = add i64 %32, %24\l  %34 = and i64 %26, 3\l  %35 = icmp ult i64 %33, 3\l  br i1 %35, label %48, label %36\l|{<s0>T|<s1>F}}"];
	Node0x557a8289ecd0:s0 -> Node0x557a8289f330;
	Node0x557a8289ecd0:s1 -> Node0x557a8289f380;
	Node0x557a8289f380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%36:\l36:                                               \l  %37 = and i64 %26, -4\l  br label %68\l}"];
	Node0x557a8289f380 -> Node0x557a8289f580;
	Node0x557a8289f640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%38:\l38:                                               \l  %39 = icmp eq i8* %137, null\l  br i1 %39, label %41, label %40\l|{<s0>T|<s1>F}}"];
	Node0x557a8289f640:s0 -> Node0x557a8289c5e0;
	Node0x557a8289f640:s1 -> Node0x557a8289f760;
	Node0x557a8289f760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%40:\l40:                                               \l  tail call void @_ZdlPv(i8* nonnull %137) #6\l  br label %41\l}"];
	Node0x557a8289f760 -> Node0x557a8289c5e0;
	Node0x557a8289c5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%41:\l41:                                               \l  %42 = phi i8* [ %138, %38 ], [ %138, %40 ], [ null, %16 ], [ null, %1 ]\l  %43 = phi i8* [ null, %38 ], [ %137, %40 ], [ null, %16 ], [ null, %1 ]\l  %44 = ptrtoint i8* %42 to i64\l  %45 = ptrtoint i8* %43 to i64\l  %46 = sub i64 %44, %45\l  %47 = trunc i64 %46 to i32\l  ret i32 %47\l}"];
	Node0x557a8289f330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%48:\l48:                                               \l  %49 = phi i8 [ undef, %30 ], [ %90, %68 ]\l  %50 = phi i64 [ 0, %30 ], [ %91, %68 ]\l  %51 = phi i8 [ 0, %30 ], [ %90, %68 ]\l  %52 = icmp eq i64 %34, 0\l  br i1 %52, label %64, label %53\l|{<s0>T|<s1>F}}"];
	Node0x557a8289f330:s0 -> Node0x557a828a06b0;
	Node0x557a8289f330:s1 -> Node0x557a828a0740;
	Node0x557a828a0740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = phi i64 [ %61, %53 ], [ %50, %48 ]\l  %55 = phi i8 [ %60, %53 ], [ %51, %48 ]\l  %56 = phi i64 [ %62, %53 ], [ %34, %48 ]\l  %57 = getelementptr inbounds i8, i8* %23, i64 %54\l  %58 = load i8, i8* %57, align 1, !tbaa !11\l  %59 = icmp eq i8 %58, %31\l  %60 = select i1 %59, i8 1, i8 %55\l  %61 = add nuw nsw i64 %54, 1\l  %62 = add i64 %56, -1\l  %63 = icmp eq i64 %62, 0\l  br i1 %63, label %64, label %53, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x557a828a0740:s0 -> Node0x557a828a06b0;
	Node0x557a828a0740:s1 -> Node0x557a828a0740;
	Node0x557a828a06b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%64:\l64:                                               \l  %65 = phi i8 [ %49, %48 ], [ %60, %53 ]\l  %66 = and i8 %65, 1\l  %67 = icmp eq i8 %66, 0\l  br i1 %67, label %94, label %136\l|{<s0>T|<s1>F}}"];
	Node0x557a828a06b0:s0 -> Node0x557a828a1700;
	Node0x557a828a06b0:s1 -> Node0x557a8289de60;
	Node0x557a8289f580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%68:\l68:                                               \l  %69 = phi i64 [ 0, %36 ], [ %91, %68 ]\l  %70 = phi i8 [ 0, %36 ], [ %90, %68 ]\l  %71 = phi i64 [ %37, %36 ], [ %92, %68 ]\l  %72 = getelementptr inbounds i8, i8* %23, i64 %69\l  %73 = load i8, i8* %72, align 1, !tbaa !11\l  %74 = icmp eq i8 %73, %31\l  %75 = or i64 %69, 1\l  %76 = getelementptr inbounds i8, i8* %23, i64 %75\l  %77 = load i8, i8* %76, align 1, !tbaa !11\l  %78 = icmp eq i8 %77, %31\l  %79 = or i64 %69, 2\l  %80 = getelementptr inbounds i8, i8* %23, i64 %79\l  %81 = load i8, i8* %80, align 1, !tbaa !11\l  %82 = icmp eq i8 %81, %31\l  %83 = or i64 %69, 3\l  %84 = getelementptr inbounds i8, i8* %23, i64 %83\l  %85 = load i8, i8* %84, align 1, !tbaa !11\l  %86 = icmp eq i8 %85, %31\l  %87 = select i1 %86, i1 true, i1 %82\l  %88 = select i1 %87, i1 true, i1 %78\l  %89 = select i1 %88, i1 true, i1 %74\l  %90 = select i1 %89, i8 1, i8 %70\l  %91 = add nuw nsw i64 %69, 4\l  %92 = add i64 %71, -4\l  %93 = icmp eq i64 %92, 0\l  br i1 %93, label %48, label %68, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x557a8289f580:s0 -> Node0x557a8289f330;
	Node0x557a8289f580:s1 -> Node0x557a8289f580;
	Node0x557a828a1700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%94:\l94:                                               \l  %95 = load i8*, i8** %2, align 8, !tbaa !3\l  %96 = getelementptr inbounds i8, i8* %95, i64 %20\l  %97 = icmp eq i8* %22, %21\l  br i1 %97, label %104, label %100\l|{<s0>T|<s1>F}}"];
	Node0x557a828a1700:s0 -> Node0x557a828a29a0;
	Node0x557a828a1700:s1 -> Node0x557a828a29f0;
	Node0x557a8289ec40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%98:\l98:                                               \l  %99 = icmp eq i8* %22, %21\l  br i1 %99, label %108, label %100\l|{<s0>T|<s1>F}}"];
	Node0x557a8289ec40:s0 -> Node0x557a828a2b80;
	Node0x557a8289ec40:s1 -> Node0x557a828a29f0;
	Node0x557a828a29f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%100:\l100:                                              \l  %101 = phi i8* [ %29, %98 ], [ %96, %94 ]\l  %102 = load i8, i8* %101, align 1, !tbaa !11\l  store i8 %102, i8* %22, align 1, !tbaa !11\l  %103 = getelementptr inbounds i8, i8* %22, i64 1\l  br label %136\l}"];
	Node0x557a828a29f0 -> Node0x557a8289de60;
	Node0x557a828a29a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%104:\l104:                                              \l  %105 = icmp eq i64 %26, 9223372036854775807\l  br i1 %105, label %106, label %108\l|{<s0>T|<s1>F}}"];
	Node0x557a828a29a0:s0 -> Node0x557a828a2ff0;
	Node0x557a828a29a0:s1 -> Node0x557a828a2b80;
	Node0x557a828a2ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%106:\l106:                                              \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #7\l          to label %107 unwind label %131\l}"];
	Node0x557a828a2ff0 -> Node0x557a828a3180;
	Node0x557a828a2ff0 -> Node0x557a828a31d0;
	Node0x557a828a3180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%107:\l107:                                              \l  unreachable\l}"];
	Node0x557a828a2b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%108:\l108:                                              \l  %109 = phi i64 [ 1, %98 ], [ %26, %104 ]\l  %110 = phi i8* [ %29, %98 ], [ %96, %104 ]\l  %111 = add i64 %109, %26\l  %112 = icmp ult i64 %111, %26\l  %113 = icmp slt i64 %111, 0\l  %114 = or i1 %112, %113\l  %115 = select i1 %114, i64 9223372036854775807, i64 %111\l  %116 = icmp eq i64 %115, 0\l  br i1 %116, label %119, label %117\l|{<s0>T|<s1>F}}"];
	Node0x557a828a2b80:s0 -> Node0x557a828a3910;
	Node0x557a828a2b80:s1 -> Node0x557a828a3960;
	Node0x557a828a3960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%117:\l117:                                              \l  %118 = invoke noalias nonnull i8* @_Znwm(i64 %115) #8\l          to label %119 unwind label %133\l}"];
	Node0x557a828a3960 -> Node0x557a828a3910;
	Node0x557a828a3960 -> Node0x557a828a3a60;
	Node0x557a828a3910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%119:\l119:                                              \l  %120 = phi i8* [ null, %108 ], [ %118, %117 ]\l  %121 = getelementptr inbounds i8, i8* %120, i64 %26\l  %122 = load i8, i8* %110, align 1, !tbaa !11\l  store i8 %122, i8* %121, align 1, !tbaa !11\l  %123 = icmp sgt i64 %26, 0\l  br i1 %123, label %124, label %125\l|{<s0>T|<s1>F}}"];
	Node0x557a828a3910:s0 -> Node0x557a828a3f40;
	Node0x557a828a3910:s1 -> Node0x557a828a3f90;
	Node0x557a828a3f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%124:\l124:                                              \l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %120, i8*\l... align 1 %23, i64 %26, i1 false) #6\l  br label %125\l}"];
	Node0x557a828a3f40 -> Node0x557a828a3f90;
	Node0x557a828a3f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%125:\l125:                                              \l  %126 = getelementptr inbounds i8, i8* %121, i64 1\l  %127 = icmp eq i8* %23, null\l  br i1 %127, label %129, label %128\l|{<s0>T|<s1>F}}"];
	Node0x557a828a3f90:s0 -> Node0x557a828a45c0;
	Node0x557a828a3f90:s1 -> Node0x557a828a4610;
	Node0x557a828a4610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%128:\l128:                                              \l  tail call void @_ZdlPv(i8* nonnull %23) #6\l  br label %129\l}"];
	Node0x557a828a4610 -> Node0x557a828a45c0;
	Node0x557a828a45c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%129:\l129:                                              \l  %130 = getelementptr inbounds i8, i8* %120, i64 %115\l  br label %136\l}"];
	Node0x557a828a45c0 -> Node0x557a8289de60;
	Node0x557a828a31d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%131:\l131:                                              \l  %132 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %143\l}"];
	Node0x557a828a31d0 -> Node0x557a828a5220;
	Node0x557a828a3a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%133:\l133:                                              \l  %134 = landingpad \{ i8*, i32 \}\l          cleanup\l  %135 = icmp eq i8* %23, null\l  br i1 %135, label %145, label %143\l|{<s0>T|<s1>F}}"];
	Node0x557a828a3a60:s0 -> Node0x557a828a53e0;
	Node0x557a828a3a60:s1 -> Node0x557a828a5220;
	Node0x557a8289de60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%136:\l136:                                              \l  %137 = phi i8* [ %23, %64 ], [ %120, %129 ], [ %23, %100 ]\l  %138 = phi i8* [ %22, %64 ], [ %126, %129 ], [ %103, %100 ]\l  %139 = phi i8* [ %21, %64 ], [ %130, %129 ], [ %21, %100 ]\l  %140 = add nuw i64 %20, 1\l  %141 = load i64, i64* %4, align 8, !tbaa !10\l  %142 = icmp ugt i64 %141, %140\l  br i1 %142, label %19, label %38, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x557a8289de60:s0 -> Node0x557a8289dd60;
	Node0x557a8289de60:s1 -> Node0x557a8289f640;
	Node0x557a828a5220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%143:\l143:                                              \l  %144 = phi \{ i8*, i32 \} [ %132, %131 ], [ %134, %133 ]\l  tail call void @_ZdlPv(i8* nonnull %23) #6\l  br label %145\l}"];
	Node0x557a828a5220 -> Node0x557a828a53e0;
	Node0x557a828a53e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%145:\l145:                                              \l  %146 = phi \{ i8*, i32 \} [ %134, %133 ], [ %144, %143 ]\l  resume \{ i8*, i32 \} %146\l}"];
}
