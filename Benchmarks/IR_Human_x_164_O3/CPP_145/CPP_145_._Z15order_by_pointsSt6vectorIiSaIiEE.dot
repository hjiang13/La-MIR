digraph "CFG for '_Z15order_by_pointsSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z15order_by_pointsSt6vectorIiSaIiEE' function";

	Node0x56438fb78760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%2:\l  %3 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %6 = bitcast %\"class.std::__cxx11::basic_string\"* %3 to i8*\l  %7 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 1\l  %8 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 0, i32 0\l  %9 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 2\l  %10 = bitcast %union.anon* %9 to i8*\l  %11 = load i32*, i32** %4, align 8, !tbaa !3\l  %12 = load i32*, i32** %5, align 8, !tbaa !8\l  %13 = icmp eq i32* %11, %12\l  br i1 %13, label %221, label %37\l|{<s0>T|<s1>F}}"];
	Node0x56438fb78760:s0 -> Node0x56438fb79020;
	Node0x56438fb78760:s1 -> Node0x56438fb7a200;
	Node0x56438fb7a340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%14:\l14:                                               \l  %15 = icmp ult i64 %213, 2\l  br i1 %15, label %221, label %16\l|{<s0>T|<s1>F}}"];
	Node0x56438fb7a340:s0 -> Node0x56438fb79020;
	Node0x56438fb7a340:s1 -> Node0x56438fb7a4c0;
	Node0x56438fb7a4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%16:\l16:                                               \l  %17 = phi i64 [ %35, %34 ], [ 0, %14 ]\l  br label %18\l}"];
	Node0x56438fb7a4c0 -> Node0x56438fb7a770;
	Node0x56438fb7a770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%18:\l18:                                               \l  %19 = phi i64 [ 1, %16 ], [ %32, %31 ]\l  %20 = add nsw i64 %19, -1\l  %21 = getelementptr inbounds i32, i32* %199, i64 %20\l  %22 = load i32, i32* %21, align 4, !tbaa !9\l  %23 = getelementptr inbounds i32, i32* %199, i64 %19\l  %24 = load i32, i32* %23, align 4, !tbaa !9\l  %25 = icmp sgt i32 %22, %24\l  br i1 %25, label %26, label %31\l|{<s0>T|<s1>F}}"];
	Node0x56438fb7a770:s0 -> Node0x56438fb7b490;
	Node0x56438fb7a770:s1 -> Node0x56438fb7a8d0;
	Node0x56438fb7b490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%26:\l26:                                               \l  store i32 %22, i32* %23, align 4, !tbaa !9\l  store i32 %24, i32* %21, align 4, !tbaa !9\l  %27 = getelementptr inbounds i32, i32* %209, i64 %19\l  %28 = load i32, i32* %27, align 4, !tbaa !9\l  %29 = getelementptr inbounds i32, i32* %209, i64 %20\l  %30 = load i32, i32* %29, align 4, !tbaa !9\l  store i32 %30, i32* %27, align 4, !tbaa !9\l  store i32 %28, i32* %29, align 4, !tbaa !9\l  br label %31\l}"];
	Node0x56438fb7b490 -> Node0x56438fb7a8d0;
	Node0x56438fb7a8d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = add nuw nsw i64 %19, 1\l  %33 = icmp eq i64 %32, %213\l  br i1 %33, label %34, label %18, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x56438fb7a8d0:s0 -> Node0x56438fb7a630;
	Node0x56438fb7a8d0:s1 -> Node0x56438fb7a770;
	Node0x56438fb7a630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%34:\l34:                                               \l  %35 = add nuw nsw i64 %17, 1\l  %36 = icmp eq i64 %35, %213\l  br i1 %36, label %221, label %16, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x56438fb7a630:s0 -> Node0x56438fb79020;
	Node0x56438fb7a630:s1 -> Node0x56438fb7a4c0;
	Node0x56438fb7a200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%37:\l37:                                               \l  %38 = phi i64 [ %207, %206 ], [ 0, %2 ]\l  %39 = phi i32* [ %209, %206 ], [ %12, %2 ]\l  %40 = phi i32* [ %201, %206 ], [ null, %2 ]\l  %41 = phi i32* [ %202, %206 ], [ null, %2 ]\l  %42 = phi i32* [ %199, %206 ], [ null, %2 ]\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12\l  %43 = getelementptr inbounds i32, i32* %39, i64 %38\l  %44 = load i32, i32* %43, align 4, !tbaa !9\l  %45 = call i32 @llvm.abs.i32(i32 %44, i1 true)\l  invoke void (%\"class.std::__cxx11::basic_string\"*, i32 (i8*, i64, i8*,\l... %struct.__va_list_tag*)*, i64, i8*, ...)\l... @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc\l...EEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%\"class.std::__cxx11::basic_string\"\l...* nonnull sret(%\"class.std::__cxx11::basic_string\") align 8 %3, i32 (i8*, i64,\l... i8*, %struct.__va_list_tag*)* nonnull @vsnprintf, i64 16, i8* getelementptr\l... inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %45)\l          to label %46 unwind label %141\l}"];
	Node0x56438fb7a200 -> Node0x56438fb7cff0;
	Node0x56438fb7a200 -> Node0x56438fb7d080;
	Node0x56438fb7cff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%46:\l46:                                               \l  %47 = load i64, i64* %7, align 8, !tbaa !14\l  %48 = load i8*, i8** %8, align 8\l  %49 = icmp ugt i64 %47, 1\l  br i1 %49, label %50, label %127\l|{<s0>T|<s1>F}}"];
	Node0x56438fb7cff0:s0 -> Node0x56438fb7d610;
	Node0x56438fb7cff0:s1 -> Node0x56438fb7d6a0;
	Node0x56438fb7d610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%50:\l50:                                               \l  %51 = add i64 %47, -1\l  %52 = icmp ult i64 %51, 8\l  br i1 %52, label %124, label %53\l|{<s0>T|<s1>F}}"];
	Node0x56438fb7d610:s0 -> Node0x56438fb7d930;
	Node0x56438fb7d610:s1 -> Node0x56438fb7d980;
	Node0x56438fb7d980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%53:\l53:                                               \l  %54 = and i64 %51, -8\l  %55 = or i64 %54, 1\l  %56 = add i64 %54, -8\l  %57 = lshr exact i64 %56, 3\l  %58 = add nuw nsw i64 %57, 1\l  %59 = and i64 %58, 1\l  %60 = icmp eq i64 %56, 0\l  br i1 %60, label %97, label %61\l|{<s0>T|<s1>F}}"];
	Node0x56438fb7d980:s0 -> Node0x56438fb7df10;
	Node0x56438fb7d980:s1 -> Node0x56438fb7df60;
	Node0x56438fb7df60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%61:\l61:                                               \l  %62 = and i64 %58, 4611686018427387902\l  br label %63\l}"];
	Node0x56438fb7df60 -> Node0x56438fb7e160;
	Node0x56438fb7e160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%63:\l63:                                               \l  %64 = phi i64 [ 0, %61 ], [ %94, %63 ]\l  %65 = phi \<4 x i32\> [ zeroinitializer, %61 ], [ %92, %63 ]\l  %66 = phi \<4 x i32\> [ zeroinitializer, %61 ], [ %93, %63 ]\l  %67 = phi i64 [ %62, %61 ], [ %95, %63 ]\l  %68 = or i64 %64, 1\l  %69 = getelementptr inbounds i8, i8* %48, i64 %68\l  %70 = bitcast i8* %69 to \<4 x i8\>*\l  %71 = load \<4 x i8\>, \<4 x i8\>* %70, align 1, !tbaa !18\l  %72 = getelementptr inbounds i8, i8* %69, i64 4\l  %73 = bitcast i8* %72 to \<4 x i8\>*\l  %74 = load \<4 x i8\>, \<4 x i8\>* %73, align 1, !tbaa !18\l  %75 = sext \<4 x i8\> %71 to \<4 x i32\>\l  %76 = sext \<4 x i8\> %74 to \<4 x i32\>\l  %77 = add \<4 x i32\> %65, \<i32 -48, i32 -48, i32 -48, i32 -48\>\l  %78 = add \<4 x i32\> %66, \<i32 -48, i32 -48, i32 -48, i32 -48\>\l  %79 = add \<4 x i32\> %77, %75\l  %80 = add \<4 x i32\> %78, %76\l  %81 = or i64 %64, 9\l  %82 = getelementptr inbounds i8, i8* %48, i64 %81\l  %83 = bitcast i8* %82 to \<4 x i8\>*\l  %84 = load \<4 x i8\>, \<4 x i8\>* %83, align 1, !tbaa !18\l  %85 = getelementptr inbounds i8, i8* %82, i64 4\l  %86 = bitcast i8* %85 to \<4 x i8\>*\l  %87 = load \<4 x i8\>, \<4 x i8\>* %86, align 1, !tbaa !18\l  %88 = sext \<4 x i8\> %84 to \<4 x i32\>\l  %89 = sext \<4 x i8\> %87 to \<4 x i32\>\l  %90 = add \<4 x i32\> %79, \<i32 -48, i32 -48, i32 -48, i32 -48\>\l  %91 = add \<4 x i32\> %80, \<i32 -48, i32 -48, i32 -48, i32 -48\>\l  %92 = add \<4 x i32\> %90, %88\l  %93 = add \<4 x i32\> %91, %89\l  %94 = add nuw i64 %64, 16\l  %95 = add i64 %67, -2\l  %96 = icmp eq i64 %95, 0\l  br i1 %96, label %97, label %63, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x56438fb7e160:s0 -> Node0x56438fb7df10;
	Node0x56438fb7e160:s1 -> Node0x56438fb7e160;
	Node0x56438fb7df10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%97:\l97:                                               \l  %98 = phi \<4 x i32\> [ undef, %53 ], [ %92, %63 ]\l  %99 = phi \<4 x i32\> [ undef, %53 ], [ %93, %63 ]\l  %100 = phi i64 [ 0, %53 ], [ %94, %63 ]\l  %101 = phi \<4 x i32\> [ zeroinitializer, %53 ], [ %92, %63 ]\l  %102 = phi \<4 x i32\> [ zeroinitializer, %53 ], [ %93, %63 ]\l  %103 = icmp eq i64 %59, 0\l  br i1 %103, label %118, label %104\l|{<s0>T|<s1>F}}"];
	Node0x56438fb7df10:s0 -> Node0x56438fb81550;
	Node0x56438fb7df10:s1 -> Node0x56438fb815a0;
	Node0x56438fb815a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%104:\l104:                                              \l  %105 = or i64 %100, 1\l  %106 = getelementptr inbounds i8, i8* %48, i64 %105\l  %107 = add \<4 x i32\> %102, \<i32 -48, i32 -48, i32 -48, i32 -48\>\l  %108 = getelementptr inbounds i8, i8* %106, i64 4\l  %109 = bitcast i8* %108 to \<4 x i8\>*\l  %110 = load \<4 x i8\>, \<4 x i8\>* %109, align 1, !tbaa !18\l  %111 = sext \<4 x i8\> %110 to \<4 x i32\>\l  %112 = add \<4 x i32\> %107, %111\l  %113 = add \<4 x i32\> %101, \<i32 -48, i32 -48, i32 -48, i32 -48\>\l  %114 = bitcast i8* %106 to \<4 x i8\>*\l  %115 = load \<4 x i8\>, \<4 x i8\>* %114, align 1, !tbaa !18\l  %116 = sext \<4 x i8\> %115 to \<4 x i32\>\l  %117 = add \<4 x i32\> %113, %116\l  br label %118\l}"];
	Node0x56438fb815a0 -> Node0x56438fb81550;
	Node0x56438fb81550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%118:\l118:                                              \l  %119 = phi \<4 x i32\> [ %98, %97 ], [ %117, %104 ]\l  %120 = phi \<4 x i32\> [ %99, %97 ], [ %112, %104 ]\l  %121 = add \<4 x i32\> %120, %119\l  %122 = call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %121)\l  %123 = icmp eq i64 %51, %54\l  br i1 %123, label %127, label %124\l|{<s0>T|<s1>F}}"];
	Node0x56438fb81550:s0 -> Node0x56438fb7d6a0;
	Node0x56438fb81550:s1 -> Node0x56438fb7d930;
	Node0x56438fb7d930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%124:\l124:                                              \l  %125 = phi i64 [ 1, %50 ], [ %55, %118 ]\l  %126 = phi i32 [ 0, %50 ], [ %122, %118 ]\l  br label %143\l}"];
	Node0x56438fb7d930 -> Node0x56438fb82450;
	Node0x56438fb7d6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%127:\l127:                                              \l  %128 = phi i32 [ 0, %46 ], [ %122, %118 ], [ %150, %143 ]\l  %129 = load i32*, i32** %5, align 8, !tbaa !8\l  %130 = getelementptr inbounds i32, i32* %129, i64 %38\l  %131 = load i32, i32* %130, align 4, !tbaa !9\l  %132 = icmp sgt i32 %131, 0\l  %133 = load i8, i8* %48, align 1, !tbaa !18\l  %134 = sext i8 %133 to i32\l  %135 = add i32 %128, 48\l  %136 = sub i32 %135, %134\l  %137 = add i32 %128, -48\l  %138 = add i32 %137, %134\l  %139 = select i1 %132, i32 %138, i32 %136\l  %140 = icmp eq i32* %41, %40\l  br i1 %140, label %163, label %162\l|{<s0>T|<s1>F}}"];
	Node0x56438fb7d6a0:s0 -> Node0x56438fb83aa0;
	Node0x56438fb7d6a0:s1 -> Node0x56438fb83af0;
	Node0x56438fb7d080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%141:\l141:                                              \l  %142 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %215\l}"];
	Node0x56438fb7d080 -> Node0x56438fb83c40;
	Node0x56438fb82450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%143:\l143:                                              \l  %144 = phi i64 [ %151, %143 ], [ %125, %124 ]\l  %145 = phi i32 [ %150, %143 ], [ %126, %124 ]\l  %146 = getelementptr inbounds i8, i8* %48, i64 %144\l  %147 = load i8, i8* %146, align 1, !tbaa !18\l  %148 = sext i8 %147 to i32\l  %149 = add i32 %145, -48\l  %150 = add i32 %149, %148\l  %151 = add nuw nsw i64 %144, 1\l  %152 = icmp eq i64 %151, %47\l  br i1 %152, label %127, label %143, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x56438fb82450:s0 -> Node0x56438fb7d6a0;
	Node0x56438fb82450:s1 -> Node0x56438fb82450;
	Node0x56438fb843a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%153:\l153:                                              \l  %154 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %157\l}"];
	Node0x56438fb843a0 -> Node0x56438fb84460;
	Node0x56438fb84520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%155:\l155:                                              \l  %156 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %157\l}"];
	Node0x56438fb84520 -> Node0x56438fb84460;
	Node0x56438fb84460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%157:\l157:                                              \l  %158 = phi \{ i8*, i32 \} [ %154, %153 ], [ %156, %155 ]\l  %159 = load i8*, i8** %8, align 8, !tbaa !23\l  %160 = icmp eq i8* %159, %10\l  br i1 %160, label %215, label %161\l|{<s0>T|<s1>F}}"];
	Node0x56438fb84460:s0 -> Node0x56438fb83c40;
	Node0x56438fb84460:s1 -> Node0x56438fb848e0;
	Node0x56438fb848e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%161:\l161:                                              \l  call void @_ZdlPv(i8* %159) #12\l  br label %215\l}"];
	Node0x56438fb848e0 -> Node0x56438fb83c40;
	Node0x56438fb83af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%162:\l162:                                              \l  store i32 %139, i32* %41, align 4, !tbaa !9\l  br label %198\l}"];
	Node0x56438fb83af0 -> Node0x56438fb84d40;
	Node0x56438fb83aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%163:\l163:                                              \l  %164 = ptrtoint i32* %40 to i64\l  %165 = ptrtoint i32* %42 to i64\l  %166 = sub i64 %164, %165\l  %167 = ashr exact i64 %166, 2\l  %168 = icmp eq i64 %166, 9223372036854775804\l  br i1 %168, label %169, label %171\l|{<s0>T|<s1>F}}"];
	Node0x56438fb83aa0:s0 -> Node0x56438fb85090;
	Node0x56438fb83aa0:s1 -> Node0x56438fb850e0;
	Node0x56438fb85090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%169:\l169:                                              \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str.2, i64 0, i64 0)) #13\l          to label %170 unwind label %155\l}"];
	Node0x56438fb85090 -> Node0x56438fb852a0;
	Node0x56438fb85090 -> Node0x56438fb84520;
	Node0x56438fb852a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%170:\l170:                                              \l  unreachable\l}"];
	Node0x56438fb850e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%171:\l171:                                              \l  %172 = icmp eq i64 %166, 0\l  %173 = select i1 %172, i64 1, i64 %167\l  %174 = add nsw i64 %173, %167\l  %175 = icmp ult i64 %174, %167\l  %176 = icmp ugt i64 %174, 2305843009213693951\l  %177 = or i1 %175, %176\l  %178 = select i1 %177, i64 2305843009213693951, i64 %174\l  %179 = icmp eq i64 %178, 0\l  br i1 %179, label %185, label %180\l|{<s0>T|<s1>F}}"];
	Node0x56438fb850e0:s0 -> Node0x56438fb859c0;
	Node0x56438fb850e0:s1 -> Node0x56438fb85a10;
	Node0x56438fb85a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%180:\l180:                                              \l  %181 = shl nuw nsw i64 %178, 2\l  %182 = invoke noalias nonnull i8* @_Znwm(i64 %181) #14\l          to label %183 unwind label %153\l}"];
	Node0x56438fb85a10 -> Node0x56438fb85ba0;
	Node0x56438fb85a10 -> Node0x56438fb843a0;
	Node0x56438fb85ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%183:\l183:                                              \l  %184 = bitcast i8* %182 to i32*\l  br label %185\l}"];
	Node0x56438fb85ba0 -> Node0x56438fb859c0;
	Node0x56438fb859c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%185:\l185:                                              \l  %186 = phi i32* [ %184, %183 ], [ null, %171 ]\l  %187 = getelementptr inbounds i32, i32* %186, i64 %167\l  store i32 %139, i32* %187, align 4, !tbaa !9\l  %188 = icmp sgt i64 %166, 0\l  br i1 %188, label %189, label %192\l|{<s0>T|<s1>F}}"];
	Node0x56438fb859c0:s0 -> Node0x56438fb86120;
	Node0x56438fb859c0:s1 -> Node0x56438fb86170;
	Node0x56438fb86120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%189:\l189:                                              \l  %190 = bitcast i32* %186 to i8*\l  %191 = bitcast i32* %42 to i8*\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %190, i8* align 4 %191,\l... i64 %166, i1 false) #12\l  br label %192\l}"];
	Node0x56438fb86120 -> Node0x56438fb86170;
	Node0x56438fb86170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%192:\l192:                                              \l  %193 = icmp eq i32* %42, null\l  br i1 %193, label %196, label %194\l|{<s0>T|<s1>F}}"];
	Node0x56438fb86170:s0 -> Node0x56438fb86790;
	Node0x56438fb86170:s1 -> Node0x56438fb867e0;
	Node0x56438fb867e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%194:\l194:                                              \l  %195 = bitcast i32* %42 to i8*\l  call void @_ZdlPv(i8* nonnull %195) #12\l  br label %196\l}"];
	Node0x56438fb867e0 -> Node0x56438fb86790;
	Node0x56438fb86790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%196:\l196:                                              \l  %197 = getelementptr inbounds i32, i32* %186, i64 %178\l  br label %198\l}"];
	Node0x56438fb86790 -> Node0x56438fb84d40;
	Node0x56438fb84d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%198:\l198:                                              \l  %199 = phi i32* [ %186, %196 ], [ %42, %162 ]\l  %200 = phi i32* [ %187, %196 ], [ %41, %162 ]\l  %201 = phi i32* [ %197, %196 ], [ %40, %162 ]\l  %202 = getelementptr inbounds i32, i32* %200, i64 1\l  %203 = load i8*, i8** %8, align 8, !tbaa !23\l  %204 = icmp eq i8* %203, %10\l  br i1 %204, label %206, label %205\l|{<s0>T|<s1>F}}"];
	Node0x56438fb84d40:s0 -> Node0x56438fb7c1c0;
	Node0x56438fb84d40:s1 -> Node0x56438fb875c0;
	Node0x56438fb875c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%205:\l205:                                              \l  call void @_ZdlPv(i8* %203) #12\l  br label %206\l}"];
	Node0x56438fb875c0 -> Node0x56438fb7c1c0;
	Node0x56438fb7c1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%206:\l206:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12\l  %207 = add nuw i64 %38, 1\l  %208 = load i32*, i32** %4, align 8, !tbaa !3\l  %209 = load i32*, i32** %5, align 8, !tbaa !8\l  %210 = ptrtoint i32* %208 to i64\l  %211 = ptrtoint i32* %209 to i64\l  %212 = sub i64 %210, %211\l  %213 = ashr exact i64 %212, 2\l  %214 = icmp ugt i64 %213, %207\l  br i1 %214, label %37, label %14, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x56438fb7c1c0:s0 -> Node0x56438fb7a200;
	Node0x56438fb7c1c0:s1 -> Node0x56438fb7a340;
	Node0x56438fb83c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%215:\l215:                                              \l  %216 = phi \{ i8*, i32 \} [ %142, %141 ], [ %158, %157 ], [ %158, %161 ]\l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12\l  %217 = icmp eq i32* %42, null\l  br i1 %217, label %220, label %218\l|{<s0>T|<s1>F}}"];
	Node0x56438fb83c40:s0 -> Node0x56438fb88850;
	Node0x56438fb83c40:s1 -> Node0x56438fb888a0;
	Node0x56438fb888a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%218:\l218:                                              \l  %219 = bitcast i32* %42 to i8*\l  call void @_ZdlPv(i8* nonnull %219) #12\l  br label %220\l}"];
	Node0x56438fb888a0 -> Node0x56438fb88850;
	Node0x56438fb88850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%220:\l220:                                              \l  resume \{ i8*, i32 \} %216\l}"];
	Node0x56438fb79020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%221:\l221:                                              \l  %222 = phi i32* [ %12, %2 ], [ %209, %14 ], [ %209, %34 ]\l  %223 = phi i32* [ %11, %2 ], [ %208, %14 ], [ %208, %34 ]\l  %224 = phi i32* [ null, %2 ], [ %199, %14 ], [ %199, %34 ]\l  %225 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 0\l  store i32* %222, i32** %225, align 8, !tbaa !8\l  %226 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 1\l  store i32* %223, i32** %226, align 8, !tbaa !3\l  %227 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 2\l  %228 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %1, i64 0, i32 0, i32 0, i32 0, i32 2\l  %229 = load i32*, i32** %228, align 8, !tbaa !25\l  store i32* %229, i32** %227, align 8, !tbaa !25\l  %230 = bitcast %\"class.std::vector\"* %1 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %230, i8 0, i64 24, i1 false) #12\l  %231 = icmp eq i32* %224, null\l  br i1 %231, label %234, label %232\l|{<s0>T|<s1>F}}"];
	Node0x56438fb79020:s0 -> Node0x56438fb89f20;
	Node0x56438fb79020:s1 -> Node0x56438fb89f70;
	Node0x56438fb89f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%232:\l232:                                              \l  %233 = bitcast i32* %224 to i8*\l  call void @_ZdlPv(i8* nonnull %233) #12\l  br label %234\l}"];
	Node0x56438fb89f70 -> Node0x56438fb89f20;
	Node0x56438fb89f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%234:\l234:                                              \l  ret void\l}"];
}
