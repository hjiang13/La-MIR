digraph "CFG for '_Z17generate_integersii' function" {
	label="CFG for '_Z17generate_integersii' function";

	Node0x559cfbd36300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%3:\l  %4 = icmp slt i32 %2, %1\l  %5 = select i1 %4, i32 %1, i32 %2\l  %6 = select i1 %4, i32 %2, i32 %1\l  %7 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %8 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %9 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %10 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %10, i8 0, i64 24, i1 false)\l  br label %12\l}"];
	Node0x559cfbd36300 -> Node0x559cfbd373e0;
	Node0x559cfbd374a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%11:\l11:                                               \l  ret void\l}"];
	Node0x559cfbd373e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l12:                                               \l  %13 = phi i32* [ null, %3 ], [ %72, %71 ]\l  %14 = phi i32* [ null, %3 ], [ %73, %71 ]\l  %15 = phi i32* [ null, %3 ], [ %74, %71 ]\l  %16 = phi i32 [ %6, %3 ], [ %75, %71 ]\l  %17 = icmp slt i32 %16, 10\l  %18 = and i32 %16, 1\l  %19 = icmp eq i32 %18, 0\l  %20 = and i1 %17, %19\l  br i1 %20, label %21, label %71\l|{<s0>T|<s1>F}}"];
	Node0x559cfbd373e0:s0 -> Node0x559cfbd37bc0;
	Node0x559cfbd373e0:s1 -> Node0x559cfbd37580;
	Node0x559cfbd37bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%21:\l21:                                               \l  %22 = icmp eq i32* %15, %14\l  br i1 %22, label %25, label %23\l|{<s0>T|<s1>F}}"];
	Node0x559cfbd37bc0:s0 -> Node0x559cfbd37d90;
	Node0x559cfbd37bc0:s1 -> Node0x559cfbd37de0;
	Node0x559cfbd37de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%23:\l23:                                               \l  store i32 %16, i32* %15, align 4, !tbaa !3\l  %24 = getelementptr inbounds i32, i32* %15, i64 1\l  store i32* %24, i32** %7, align 8, !tbaa !7\l  br label %71\l}"];
	Node0x559cfbd37de0 -> Node0x559cfbd37580;
	Node0x559cfbd37d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%25:\l25:                                               \l  %26 = ptrtoint i32* %14 to i64\l  %27 = ptrtoint i32* %13 to i64\l  %28 = sub i64 %26, %27\l  %29 = ashr exact i64 %28, 2\l  %30 = icmp eq i64 %28, 9223372036854775804\l  br i1 %30, label %31, label %33\l|{<s0>T|<s1>F}}"];
	Node0x559cfbd37d90:s0 -> Node0x559cfbd390a0;
	Node0x559cfbd37d90:s1 -> Node0x559cfbd390f0;
	Node0x559cfbd390a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%31:\l31:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #6\l          to label %32 unwind label %63\l}"];
	Node0x559cfbd390a0 -> Node0x559cfbd392f0;
	Node0x559cfbd390a0 -> Node0x559cfbd39340;
	Node0x559cfbd392f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%32:\l32:                                               \l  unreachable\l}"];
	Node0x559cfbd390f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%33:\l33:                                               \l  %34 = icmp eq i64 %28, 0\l  %35 = select i1 %34, i64 1, i64 %29\l  %36 = add nsw i64 %35, %29\l  %37 = icmp ult i64 %36, %29\l  %38 = icmp ugt i64 %36, 2305843009213693951\l  %39 = or i1 %37, %38\l  %40 = select i1 %39, i64 2305843009213693951, i64 %36\l  %41 = icmp eq i64 %40, 0\l  br i1 %41, label %47, label %42\l|{<s0>T|<s1>F}}"];
	Node0x559cfbd390f0:s0 -> Node0x559cfbd39cb0;
	Node0x559cfbd390f0:s1 -> Node0x559cfbd39d00;
	Node0x559cfbd39d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%42:\l42:                                               \l  %43 = shl nuw nsw i64 %40, 2\l  %44 = invoke noalias nonnull i8* @_Znwm(i64 %43) #7\l          to label %45 unwind label %61\l}"];
	Node0x559cfbd39d00 -> Node0x559cfbd39e90;
	Node0x559cfbd39d00 -> Node0x559cfbd39ee0;
	Node0x559cfbd39e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%45:\l45:                                               \l  %46 = bitcast i8* %44 to i32*\l  br label %47\l}"];
	Node0x559cfbd39e90 -> Node0x559cfbd39cb0;
	Node0x559cfbd39cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%47:\l47:                                               \l  %48 = phi i32* [ %46, %45 ], [ null, %33 ]\l  %49 = getelementptr inbounds i32, i32* %48, i64 %29\l  store i32 %16, i32* %49, align 4, !tbaa !3\l  %50 = icmp sgt i64 %28, 0\l  br i1 %50, label %51, label %54\l|{<s0>T|<s1>F}}"];
	Node0x559cfbd39cb0:s0 -> Node0x559cfbd3aab0;
	Node0x559cfbd39cb0:s1 -> Node0x559cfbd3ab00;
	Node0x559cfbd3aab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%51:\l51:                                               \l  %52 = bitcast i32* %48 to i8*\l  %53 = bitcast i32* %13 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %53,\l... i64 %28, i1 false) #8\l  br label %54\l}"];
	Node0x559cfbd3aab0 -> Node0x559cfbd3ab00;
	Node0x559cfbd3ab00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%54:\l54:                                               \l  %55 = getelementptr inbounds i32, i32* %49, i64 1\l  %56 = icmp eq i32* %13, null\l  br i1 %56, label %59, label %57\l|{<s0>T|<s1>F}}"];
	Node0x559cfbd3ab00:s0 -> Node0x559cfbd3b190;
	Node0x559cfbd3ab00:s1 -> Node0x559cfbd3b1e0;
	Node0x559cfbd3b1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%57:\l57:                                               \l  %58 = bitcast i32* %13 to i8*\l  tail call void @_ZdlPv(i8* nonnull %58) #8\l  br label %59\l}"];
	Node0x559cfbd3b1e0 -> Node0x559cfbd3b190;
	Node0x559cfbd3b190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%59:\l59:                                               \l  store i32* %48, i32** %9, align 8, !tbaa !10\l  store i32* %55, i32** %7, align 8, !tbaa !7\l  %60 = getelementptr inbounds i32, i32* %48, i64 %40\l  store i32* %60, i32** %8, align 8, !tbaa !11\l  br label %71\l}"];
	Node0x559cfbd3b190 -> Node0x559cfbd37580;
	Node0x559cfbd39ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%61:\l61:                                               \l  %62 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %65\l}"];
	Node0x559cfbd39ee0 -> Node0x559cfbd3c310;
	Node0x559cfbd39340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%63:\l63:                                               \l  %64 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %65\l}"];
	Node0x559cfbd39340 -> Node0x559cfbd3c310;
	Node0x559cfbd3c310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%65:\l65:                                               \l  %66 = phi \{ i8*, i32 \} [ %62, %61 ], [ %64, %63 ]\l  %67 = icmp eq i32* %13, null\l  br i1 %67, label %70, label %68\l|{<s0>T|<s1>F}}"];
	Node0x559cfbd3c310:s0 -> Node0x559cfbd3ca00;
	Node0x559cfbd3c310:s1 -> Node0x559cfbd3ca50;
	Node0x559cfbd3ca50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%68:\l68:                                               \l  %69 = bitcast i32* %13 to i8*\l  tail call void @_ZdlPv(i8* nonnull %69) #8\l  br label %70\l}"];
	Node0x559cfbd3ca50 -> Node0x559cfbd3ca00;
	Node0x559cfbd3ca00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%70:\l70:                                               \l  resume \{ i8*, i32 \} %66\l}"];
	Node0x559cfbd37580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = phi i32* [ %48, %59 ], [ %13, %23 ], [ %13, %12 ]\l  %73 = phi i32* [ %60, %59 ], [ %14, %23 ], [ %14, %12 ]\l  %74 = phi i32* [ %55, %59 ], [ %24, %23 ], [ %15, %12 ]\l  %75 = add i32 %16, 1\l  %76 = icmp eq i32 %16, %5\l  br i1 %76, label %11, label %12, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x559cfbd37580:s0 -> Node0x559cfbd374a0;
	Node0x559cfbd37580:s1 -> Node0x559cfbd373e0;
}
