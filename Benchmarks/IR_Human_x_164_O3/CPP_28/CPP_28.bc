; ModuleID = '../../Human_xBenchmarks_164/CPP_28/CPP_28.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_28/CPP_28.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }

; Function Attrs: uwtable
define dso_local void @_Z11concatenateSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::vector"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !3
  %7 = bitcast %union.anon* %5 to i8*
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %9, align 8, !tbaa !8
  store i8 0, i8* %7, align 8, !tbaa !11
  %10 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %14 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  %15 = bitcast i64* %3 to i8*
  %16 = bitcast %union.anon* %13 to i8*
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %21 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %10, align 8, !tbaa !12
  %22 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %11, align 8, !tbaa !14
  %23 = icmp eq %"class.std::__cxx11::basic_string"* %21, %22
  br i1 %23, label %106, label %24

24:                                               ; preds = %2
  %25 = bitcast i64* %19 to <2 x i64>*
  %26 = bitcast i64* %9 to <2 x i64>*
  br label %27

27:                                               ; preds = %24, %96
  %28 = phi i64 [ %98, %96 ], [ 0, %24 ]
  %29 = phi i8* [ %97, %96 ], [ %7, %24 ]
  %30 = phi i64 [ %88, %96 ], [ 0, %24 ]
  %31 = phi %"class.std::__cxx11::basic_string"* [ %90, %96 ], [ %22, %24 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #6
  call void @llvm.experimental.noalias.scope.decl(metadata !15)
  store %union.anon* %13, %union.anon** %14, align 8, !tbaa !3, !alias.scope !15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6, !noalias !15
  store i64 %28, i64* %3, align 8, !tbaa !18, !noalias !15
  %32 = icmp ugt i64 %28, 15
  br i1 %32, label %33, label %37

33:                                               ; preds = %27
  %34 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %4, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %35 unwind label %99

35:                                               ; preds = %33
  store i8* %34, i8** %17, align 8, !tbaa !19, !alias.scope !15
  %36 = load i64, i64* %3, align 8, !tbaa !18, !noalias !15
  store i64 %36, i64* %18, align 8, !tbaa !11, !alias.scope !15
  br label %37

37:                                               ; preds = %27, %35
  %38 = phi i8* [ %34, %35 ], [ %16, %27 ]
  switch i64 %28, label %41 [
    i64 1, label %39
    i64 0, label %42
  ]

39:                                               ; preds = %37
  %40 = load i8, i8* %29, align 1, !tbaa !11
  store i8 %40, i8* %38, align 1, !tbaa !11
  br label %42

41:                                               ; preds = %37
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %29, i64 %28, i1 false) #6
  br label %42

42:                                               ; preds = %41, %39, %37
  %43 = load i64, i64* %3, align 8, !tbaa !18, !noalias !15
  store i64 %43, i64* %19, align 8, !tbaa !8, !alias.scope !15
  %44 = load i8*, i8** %17, align 8, !tbaa !19, !alias.scope !15
  %45 = getelementptr inbounds i8, i8* %44, i64 %43
  store i8 0, i8* %45, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6, !noalias !15
  %46 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %31, i64 %30, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8, !tbaa !19, !noalias !15
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %31, i64 %30, i32 1
  %49 = load i64, i64* %48, align 8, !tbaa !8, !noalias !15
  %50 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %4, i8* %47, i64 %49)
          to label %56 unwind label %51

51:                                               ; preds = %42
  %52 = landingpad { i8*, i32 }
          cleanup
  %53 = load i8*, i8** %17, align 8, !tbaa !19, !alias.scope !15
  %54 = icmp eq i8* %53, %16
  br i1 %54, label %101, label %55

55:                                               ; preds = %51
  call void @_ZdlPv(i8* %53) #6
  br label %101

56:                                               ; preds = %42
  %57 = load i8*, i8** %17, align 8, !tbaa !19
  %58 = icmp eq i8* %57, %16
  br i1 %58, label %59, label %73

59:                                               ; preds = %56
  %60 = load i64, i64* %19, align 8, !tbaa !8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %59
  %63 = load i8*, i8** %8, align 8, !tbaa !19
  %64 = icmp eq i64 %60, 1
  br i1 %64, label %65, label %67

65:                                               ; preds = %62
  %66 = load i8, i8* %16, align 8, !tbaa !11
  store i8 %66, i8* %63, align 1, !tbaa !11
  br label %68

67:                                               ; preds = %62
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %63, i8* nonnull align 8 %16, i64 %60, i1 false) #6
  br label %68

68:                                               ; preds = %67, %65, %59
  %69 = load i64, i64* %19, align 8, !tbaa !8
  store i64 %69, i64* %9, align 8, !tbaa !8
  %70 = load i8*, i8** %8, align 8, !tbaa !19
  %71 = getelementptr inbounds i8, i8* %70, i64 %69
  store i8 0, i8* %71, align 1, !tbaa !11
  %72 = load i8*, i8** %17, align 8, !tbaa !19
  br label %82

73:                                               ; preds = %56
  %74 = load i8*, i8** %8, align 8, !tbaa !19
  %75 = icmp eq i8* %74, %7
  %76 = load i64, i64* %20, align 8
  store i8* %57, i8** %8, align 8, !tbaa !19
  %77 = load <2 x i64>, <2 x i64>* %25, align 8, !tbaa !11
  store <2 x i64> %77, <2 x i64>* %26, align 8, !tbaa !11
  %78 = icmp eq i8* %74, null
  %79 = or i1 %75, %78
  br i1 %79, label %81, label %80

80:                                               ; preds = %73
  store i8* %74, i8** %17, align 8, !tbaa !19
  store i64 %76, i64* %18, align 8, !tbaa !11
  br label %82

81:                                               ; preds = %73
  store %union.anon* %13, %union.anon** %14, align 8, !tbaa !19
  br label %82

82:                                               ; preds = %68, %80, %81
  %83 = phi i8* [ %72, %68 ], [ %74, %80 ], [ %16, %81 ]
  store i64 0, i64* %19, align 8, !tbaa !8
  store i8 0, i8* %83, align 1, !tbaa !11
  %84 = load i8*, i8** %17, align 8, !tbaa !19
  %85 = icmp eq i8* %84, %16
  br i1 %85, label %87, label %86

86:                                               ; preds = %82
  call void @_ZdlPv(i8* %84) #6
  br label %87

87:                                               ; preds = %82, %86
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #6
  %88 = add nuw i64 %30, 1
  %89 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %10, align 8, !tbaa !12
  %90 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %11, align 8, !tbaa !14
  %91 = ptrtoint %"class.std::__cxx11::basic_string"* %89 to i64
  %92 = ptrtoint %"class.std::__cxx11::basic_string"* %90 to i64
  %93 = sub i64 %91, %92
  %94 = ashr exact i64 %93, 5
  %95 = icmp ugt i64 %94, %88
  br i1 %95, label %96, label %106, !llvm.loop !20

96:                                               ; preds = %87
  %97 = load i8*, i8** %8, align 8, !tbaa !19, !noalias !15
  %98 = load i64, i64* %9, align 8, !tbaa !8, !noalias !15
  br label %27

99:                                               ; preds = %33
  %100 = landingpad { i8*, i32 }
          cleanup
  br label %101

101:                                              ; preds = %51, %55, %99
  %102 = phi { i8*, i32 } [ %100, %99 ], [ %52, %55 ], [ %52, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #6
  %103 = load i8*, i8** %8, align 8, !tbaa !19
  %104 = icmp eq i8* %103, %7
  br i1 %104, label %107, label %105

105:                                              ; preds = %101
  call void @_ZdlPv(i8* %103) #6
  br label %107

106:                                              ; preds = %87, %2
  ret void

107:                                              ; preds = %105, %101
  resume { i8*, i32 } %102
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #3

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #5

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!13, !5, i64 8}
!13 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!14 = !{!13, !5, i64 0}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!17 = distinct !{!17, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!18 = !{!10, !10, i64 0}
!19 = !{!9, !5, i64 0}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.mustprogress"}
