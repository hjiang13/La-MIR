digraph "CFG for '_Z14even_odd_counti' function" {
	label="CFG for '_Z14even_odd_counti' function";

	Node0x55644835e230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%2:\l  %3 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %4 = bitcast %\"class.std::__cxx11::basic_string\"* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #11\l  %5 = tail call i32 @llvm.abs.i32(i32 %1, i1 true)\l  call void (%\"class.std::__cxx11::basic_string\"*, i32 (i8*, i64, i8*,\l... %struct.__va_list_tag*)*, i64, i8*, ...)\l... @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc\l...EEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%\"class.std::__cxx11::basic_string\"\l...* nonnull sret(%\"class.std::__cxx11::basic_string\") align 8 %3, i32 (i8*, i64,\l... i8*, %struct.__va_list_tag*)* nonnull @vsnprintf, i64 16, i8* getelementptr\l... inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %5)\l  %6 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 1\l  %7 = load i64, i64* %6, align 8, !tbaa !3\l  %8 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 0, i32 0\l  %9 = load i8*, i8** %8, align 8\l  %10 = icmp eq i64 %7, 0\l  br i1 %10, label %53, label %11\l|{<s0>T|<s1>F}}"];
	Node0x55644835e230:s0 -> Node0x55644835e9e0;
	Node0x55644835e230:s1 -> Node0x5564483602d0;
	Node0x5564483602d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%11:\l11:                                               \l  %12 = icmp ult i64 %7, 8\l  br i1 %12, label %49, label %13\l|{<s0>T|<s1>F}}"];
	Node0x5564483602d0:s0 -> Node0x5564483604d0;
	Node0x5564483602d0:s1 -> Node0x556448360520;
	Node0x556448360520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%13:\l13:                                               \l  %14 = and i64 %7, -8\l  br label %15\l}"];
	Node0x556448360520 -> Node0x556448360720;
	Node0x556448360720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%15:\l15:                                               \l  %16 = phi i64 [ 0, %13 ], [ %41, %15 ]\l  %17 = phi \<4 x i32\> [ zeroinitializer, %13 ], [ %39, %15 ]\l  %18 = phi \<4 x i32\> [ zeroinitializer, %13 ], [ %40, %15 ]\l  %19 = phi \<4 x i32\> [ zeroinitializer, %13 ], [ %35, %15 ]\l  %20 = phi \<4 x i32\> [ zeroinitializer, %13 ], [ %36, %15 ]\l  %21 = getelementptr inbounds i8, i8* %9, i64 %16\l  %22 = bitcast i8* %21 to \<4 x i8\>*\l  %23 = load \<4 x i8\>, \<4 x i8\>* %22, align 1, !tbaa !10\l  %24 = getelementptr inbounds i8, i8* %21, i64 4\l  %25 = bitcast i8* %24 to \<4 x i8\>*\l  %26 = load \<4 x i8\>, \<4 x i8\>* %25, align 1, !tbaa !10\l  %27 = srem \<4 x i8\> %23, \<i8 2, i8 2, i8 2, i8 2\>\l  %28 = srem \<4 x i8\> %26, \<i8 2, i8 2, i8 2, i8 2\>\l  %29 = icmp eq \<4 x i8\> %27, \<i8 1, i8 1, i8 1, i8 1\>\l  %30 = icmp eq \<4 x i8\> %28, \<i8 1, i8 1, i8 1, i8 1\>\l  %31 = xor \<4 x i1\> %29, \<i1 true, i1 true, i1 true, i1 true\>\l  %32 = xor \<4 x i1\> %30, \<i1 true, i1 true, i1 true, i1 true\>\l  %33 = zext \<4 x i1\> %31 to \<4 x i32\>\l  %34 = zext \<4 x i1\> %32 to \<4 x i32\>\l  %35 = add \<4 x i32\> %19, %33\l  %36 = add \<4 x i32\> %20, %34\l  %37 = zext \<4 x i1\> %29 to \<4 x i32\>\l  %38 = zext \<4 x i1\> %30 to \<4 x i32\>\l  %39 = add \<4 x i32\> %17, %37\l  %40 = add \<4 x i32\> %18, %38\l  %41 = add nuw i64 %16, 8\l  %42 = icmp eq i64 %41, %14\l  br i1 %42, label %43, label %15, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x556448360720:s0 -> Node0x556448362f90;
	Node0x556448360720:s1 -> Node0x556448360720;
	Node0x556448362f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%43:\l43:                                               \l  %44 = add \<4 x i32\> %36, %35\l  %45 = call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %44)\l  %46 = add \<4 x i32\> %40, %39\l  %47 = call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %46)\l  %48 = icmp eq i64 %7, %14\l  br i1 %48, label %53, label %49\l|{<s0>T|<s1>F}}"];
	Node0x556448362f90:s0 -> Node0x55644835e9e0;
	Node0x556448362f90:s1 -> Node0x5564483604d0;
	Node0x5564483604d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%49:\l49:                                               \l  %50 = phi i64 [ 0, %11 ], [ %14, %43 ]\l  %51 = phi i32 [ 0, %11 ], [ %47, %43 ]\l  %52 = phi i32 [ 0, %11 ], [ %45, %43 ]\l  br label %58\l}"];
	Node0x5564483604d0 -> Node0x556448363890;
	Node0x55644835e9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%53:\l53:                                               \l  %54 = phi i32 [ 0, %2 ], [ %45, %43 ], [ %68, %58 ]\l  %55 = phi i32 [ 0, %2 ], [ %47, %43 ], [ %70, %58 ]\l  %56 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %56, i8 0, i64 24, i1 false) #11\l  %57 = invoke noalias nonnull i8* @_Znwm(i64 8) #12\l          to label %73 unwind label %89\l}"];
	Node0x55644835e9e0 -> Node0x556448363f00;
	Node0x55644835e9e0 -> Node0x556448363f50;
	Node0x556448363890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = phi i64 [ %71, %58 ], [ %50, %49 ]\l  %60 = phi i32 [ %70, %58 ], [ %51, %49 ]\l  %61 = phi i32 [ %68, %58 ], [ %52, %49 ]\l  %62 = getelementptr inbounds i8, i8* %9, i64 %59\l  %63 = load i8, i8* %62, align 1, !tbaa !10\l  %64 = srem i8 %63, 2\l  %65 = icmp eq i8 %64, 1\l  %66 = xor i1 %65, true\l  %67 = zext i1 %66 to i32\l  %68 = add nuw nsw i32 %61, %67\l  %69 = zext i1 %65 to i32\l  %70 = add nuw nsw i32 %60, %69\l  %71 = add nuw nsw i64 %59, 1\l  %72 = icmp eq i64 %71, %7\l  br i1 %72, label %53, label %58, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x556448363890:s0 -> Node0x55644835e9e0;
	Node0x556448363890:s1 -> Node0x556448363890;
	Node0x556448363f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%73:\l73:                                               \l  %74 = bitcast i8* %57 to i32*\l  %75 = bitcast %\"class.std::vector\"* %0 to i8**\l  store i8* %57, i8** %75, align 8, !tbaa !16\l  %76 = getelementptr inbounds i8, i8* %57, i64 8\l  %77 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %78 = bitcast i32** %77 to i8**\l  store i8* %76, i8** %78, align 8, !tbaa !18\l  store i32 %54, i32* %74, align 4\l  %79 = getelementptr inbounds i8, i8* %57, i64 4\l  %80 = bitcast i8* %79 to i32*\l  store i32 %55, i32* %80, align 4\l  %81 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %82 = bitcast i32** %81 to i8**\l  store i8* %76, i8** %82, align 8, !tbaa !19\l  %83 = load i8*, i8** %8, align 8, !tbaa !20\l  %84 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 2\l  %85 = bitcast %union.anon* %84 to i8*\l  %86 = icmp eq i8* %83, %85\l  br i1 %86, label %88, label %87\l|{<s0>T|<s1>F}}"];
	Node0x556448363f00:s0 -> Node0x556448365d60;
	Node0x556448363f00:s1 -> Node0x556448365df0;
	Node0x556448365df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%87:\l87:                                               \l  call void @_ZdlPv(i8* %83) #11\l  br label %88\l}"];
	Node0x556448365df0 -> Node0x556448365d60;
	Node0x556448365d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%88:\l88:                                               \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #11\l  ret void\l}"];
	Node0x556448363f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%89:\l89:                                               \l  %90 = landingpad \{ i8*, i32 \}\l          cleanup\l  %91 = load i8*, i8** %8, align 8, !tbaa !20\l  %92 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 2\l  %93 = bitcast %union.anon* %92 to i8*\l  %94 = icmp eq i8* %91, %93\l  br i1 %94, label %96, label %95\l|{<s0>T|<s1>F}}"];
	Node0x556448363f50:s0 -> Node0x556448366d40;
	Node0x556448363f50:s1 -> Node0x556448366d90;
	Node0x556448366d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%95:\l95:                                               \l  call void @_ZdlPv(i8* %91) #11\l  br label %96\l}"];
	Node0x556448366d90 -> Node0x556448366d40;
	Node0x556448366d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%96:\l96:                                               \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #11\l  resume \{ i8*, i32 \} %90\l}"];
}
