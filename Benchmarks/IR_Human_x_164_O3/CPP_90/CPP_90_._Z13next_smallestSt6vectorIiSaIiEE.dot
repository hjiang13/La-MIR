digraph "CFG for '_Z13next_smallestSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z13next_smallestSt6vectorIiSaIiEE' function";

	Node0x55c752a0a660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%1:\l  %2 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %3 = load i32*, i32** %2, align 8, !tbaa !3\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %5 = load i32*, i32** %4, align 8, !tbaa !3\l  %6 = icmp eq i32* %3, %5\l  br i1 %6, label %17, label %7\l|{<s0>T|<s1>F}}"];
	Node0x55c752a0a660:s0 -> Node0x55c752a0c180;
	Node0x55c752a0a660:s1 -> Node0x55c752a0c210;
	Node0x55c752a0c210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%7:\l7:                                                \l  %8 = ptrtoint i32* %5 to i64\l  %9 = ptrtoint i32* %3 to i64\l  %10 = sub i64 %8, %9\l  %11 = ashr exact i64 %10, 2\l  %12 = tail call i64 @llvm.ctlz.i64(i64 %11, i1 true) #4, !range !7\l  %13 = shl nuw nsw i64 %12, 1\l  %14 = xor i64 %13, 126\l  tail call void\l... @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElN\l...S0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i32* %3, i32* %5, i64 %14)\l  tail call void\l... @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIi\l...EEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* %3, i32* %5)\l  %15 = load i32*, i32** %4, align 8, !tbaa !8\l  %16 = load i32*, i32** %2, align 8, !tbaa !10\l  br label %17\l}"];
	Node0x55c752a0c210 -> Node0x55c752a0c180;
	Node0x55c752a0c180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%17:\l17:                                               \l  %18 = phi i32* [ %3, %1 ], [ %16, %7 ]\l  %19 = phi i32* [ %3, %1 ], [ %15, %7 ]\l  %20 = ptrtoint i32* %19 to i64\l  %21 = ptrtoint i32* %18 to i64\l  %22 = sub i64 %20, %21\l  %23 = ashr exact i64 %22, 2\l  %24 = icmp ugt i64 %23, 1\l  br i1 %24, label %25, label %35\l|{<s0>T|<s1>F}}"];
	Node0x55c752a0c180:s0 -> Node0x55c752a0d5e0;
	Node0x55c752a0c180:s1 -> Node0x55c752a0d630;
	Node0x55c752a0d5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%25:\l25:                                               \l  %26 = load i32, i32* %18, align 4, !tbaa !11\l  br label %29\l}"];
	Node0x55c752a0d5e0 -> Node0x55c752a0d8c0;
	Node0x55c752a0d9c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%27:\l27:                                               \l  %28 = icmp eq i64 %34, %23\l  br i1 %28, label %35, label %29, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x55c752a0d9c0:s0 -> Node0x55c752a0d630;
	Node0x55c752a0d9c0:s1 -> Node0x55c752a0d8c0;
	Node0x55c752a0d8c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i64 [ 1, %25 ], [ %34, %27 ]\l  %31 = getelementptr inbounds i32, i32* %18, i64 %30\l  %32 = load i32, i32* %31, align 4, !tbaa !11\l  %33 = icmp eq i32 %32, %26\l  %34 = add nuw i64 %30, 1\l  br i1 %33, label %27, label %35\l|{<s0>T|<s1>F}}"];
	Node0x55c752a0d8c0:s0 -> Node0x55c752a0d9c0;
	Node0x55c752a0d8c0:s1 -> Node0x55c752a0d630;
	Node0x55c752a0d630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%35:\l35:                                               \l  %36 = phi i32 [ -1, %17 ], [ %32, %29 ], [ -1, %27 ]\l  ret i32 %36\l}"];
}
