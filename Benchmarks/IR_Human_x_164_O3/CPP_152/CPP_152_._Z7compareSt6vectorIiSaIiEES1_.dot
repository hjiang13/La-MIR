digraph "CFG for '_Z7compareSt6vectorIiSaIiEES1_' function" {
	label="CFG for '_Z7compareSt6vectorIiSaIiEES1_' function";

	Node0x555efdd687c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%3:\l  %4 = bitcast %\"class.std::vector\"* %0 to i8*\l  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %4, i8 0, i64 24, i1 false) #7\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %6 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %7 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %2,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %8 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %9 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %10 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %11 = load i32*, i32** %5, align 8, !tbaa !3\l  %12 = load i32*, i32** %6, align 8, !tbaa !8\l  %13 = icmp eq i32* %11, %12\l  br i1 %13, label %91, label %14\l|{<s0>T|<s1>F}}"];
	Node0x555efdd687c0:s0 -> Node0x555efdd688c0;
	Node0x555efdd687c0:s1 -> Node0x555efdd6a7f0;
	Node0x555efdd6a7f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l14:                                               \l  %15 = phi i32* [ %70, %69 ], [ %12, %3 ]\l  %16 = phi i32* [ %71, %69 ], [ %11, %3 ]\l  %17 = phi i32* [ %72, %69 ], [ null, %3 ]\l  %18 = phi i32* [ %73, %69 ], [ null, %3 ]\l  %19 = phi i32* [ %74, %69 ], [ null, %3 ]\l  %20 = phi i64 [ %75, %69 ], [ 0, %3 ]\l  %21 = getelementptr inbounds i32, i32* %15, i64 %20\l  %22 = load i32, i32* %21, align 4, !tbaa !9\l  %23 = load i32*, i32** %7, align 8, !tbaa !8\l  %24 = getelementptr inbounds i32, i32* %23, i64 %20\l  %25 = load i32, i32* %24, align 4, !tbaa !9\l  %26 = sub nsw i32 %22, %25\l  %27 = tail call i32 @llvm.abs.i32(i32 %26, i1 true)\l  %28 = icmp eq i32* %19, %18\l  br i1 %28, label %31, label %29\l|{<s0>T|<s1>F}}"];
	Node0x555efdd6a7f0:s0 -> Node0x555efdd6c360;
	Node0x555efdd6a7f0:s1 -> Node0x555efdd6c3f0;
	Node0x555efdd6c3f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%29:\l29:                                               \l  store i32 %27, i32* %19, align 4, !tbaa !9\l  %30 = getelementptr inbounds i32, i32* %19, i64 1\l  store i32* %30, i32** %8, align 8, !tbaa !3\l  br label %69\l}"];
	Node0x555efdd6c3f0 -> Node0x555efdd6a960;
	Node0x555efdd6c360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%31:\l31:                                               \l  %32 = ptrtoint i32* %18 to i64\l  %33 = ptrtoint i32* %17 to i64\l  %34 = sub i64 %32, %33\l  %35 = ashr exact i64 %34, 2\l  %36 = icmp eq i64 %34, 9223372036854775804\l  br i1 %36, label %37, label %39\l|{<s0>T|<s1>F}}"];
	Node0x555efdd6c360:s0 -> Node0x555efdd6d2a0;
	Node0x555efdd6c360:s1 -> Node0x555efdd6d2f0;
	Node0x555efdd6d2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%37:\l37:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #8\l          to label %38 unwind label %83\l}"];
	Node0x555efdd6d2a0 -> Node0x555efdd6d4b0;
	Node0x555efdd6d2a0 -> Node0x555efdd6d500;
	Node0x555efdd6d4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%38:\l38:                                               \l  unreachable\l}"];
	Node0x555efdd6d2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%39:\l39:                                               \l  %40 = icmp eq i64 %34, 0\l  %41 = select i1 %40, i64 1, i64 %35\l  %42 = add nsw i64 %41, %35\l  %43 = icmp ult i64 %42, %35\l  %44 = icmp ugt i64 %42, 2305843009213693951\l  %45 = or i1 %43, %44\l  %46 = select i1 %45, i64 2305843009213693951, i64 %42\l  %47 = icmp eq i64 %46, 0\l  br i1 %47, label %53, label %48\l|{<s0>T|<s1>F}}"];
	Node0x555efdd6d2f0:s0 -> Node0x555efdd6dc40;
	Node0x555efdd6d2f0:s1 -> Node0x555efdd6dc90;
	Node0x555efdd6dc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%48:\l48:                                               \l  %49 = shl nuw nsw i64 %46, 2\l  %50 = invoke noalias nonnull i8* @_Znwm(i64 %49) #9\l          to label %51 unwind label %81\l}"];
	Node0x555efdd6dc90 -> Node0x555efdd6de20;
	Node0x555efdd6dc90 -> Node0x555efdd6de70;
	Node0x555efdd6de20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%51:\l51:                                               \l  %52 = bitcast i8* %50 to i32*\l  br label %53\l}"];
	Node0x555efdd6de20 -> Node0x555efdd6dc40;
	Node0x555efdd6dc40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%53:\l53:                                               \l  %54 = phi i32* [ %52, %51 ], [ null, %39 ]\l  %55 = getelementptr inbounds i32, i32* %54, i64 %35\l  store i32 %27, i32* %55, align 4, !tbaa !9\l  %56 = icmp sgt i64 %34, 0\l  br i1 %56, label %57, label %60\l|{<s0>T|<s1>F}}"];
	Node0x555efdd6dc40:s0 -> Node0x555efdd6e430;
	Node0x555efdd6dc40:s1 -> Node0x555efdd6e480;
	Node0x555efdd6e430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%57:\l57:                                               \l  %58 = bitcast i32* %54 to i8*\l  %59 = bitcast i32* %17 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %59,\l... i64 %34, i1 false) #7\l  br label %60\l}"];
	Node0x555efdd6e430 -> Node0x555efdd6e480;
	Node0x555efdd6e480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%60:\l60:                                               \l  %61 = getelementptr inbounds i32, i32* %55, i64 1\l  %62 = icmp eq i32* %17, null\l  br i1 %62, label %65, label %63\l|{<s0>T|<s1>F}}"];
	Node0x555efdd6e480:s0 -> Node0x555efdd6eb10;
	Node0x555efdd6e480:s1 -> Node0x555efdd6eb60;
	Node0x555efdd6eb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%63:\l63:                                               \l  %64 = bitcast i32* %17 to i8*\l  tail call void @_ZdlPv(i8* nonnull %64) #7\l  br label %65\l}"];
	Node0x555efdd6eb60 -> Node0x555efdd6eb10;
	Node0x555efdd6eb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%65:\l65:                                               \l  store i32* %54, i32** %10, align 8, !tbaa !8\l  store i32* %61, i32** %8, align 8, !tbaa !3\l  %66 = getelementptr inbounds i32, i32* %54, i64 %46\l  store i32* %66, i32** %9, align 8, !tbaa !11\l  %67 = load i32*, i32** %5, align 8, !tbaa !3\l  %68 = load i32*, i32** %6, align 8, !tbaa !8\l  br label %69\l}"];
	Node0x555efdd6eb10 -> Node0x555efdd6a960;
	Node0x555efdd6a960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  %70 = phi i32* [ %68, %65 ], [ %15, %29 ]\l  %71 = phi i32* [ %67, %65 ], [ %16, %29 ]\l  %72 = phi i32* [ %54, %65 ], [ %17, %29 ]\l  %73 = phi i32* [ %66, %65 ], [ %18, %29 ]\l  %74 = phi i32* [ %61, %65 ], [ %30, %29 ]\l  %75 = add nuw i64 %20, 1\l  %76 = ptrtoint i32* %71 to i64\l  %77 = ptrtoint i32* %70 to i64\l  %78 = sub i64 %76, %77\l  %79 = ashr exact i64 %78, 2\l  %80 = icmp ugt i64 %79, %75\l  br i1 %80, label %14, label %91, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x555efdd6a960:s0 -> Node0x555efdd6a7f0;
	Node0x555efdd6a960:s1 -> Node0x555efdd688c0;
	Node0x555efdd6de70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%81:\l81:                                               \l  %82 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %85\l}"];
	Node0x555efdd6de70 -> Node0x555efdd70020;
	Node0x555efdd6d500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%83:\l83:                                               \l  %84 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %85\l}"];
	Node0x555efdd6d500 -> Node0x555efdd70020;
	Node0x555efdd70020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%85:\l85:                                               \l  %86 = phi \{ i8*, i32 \} [ %82, %81 ], [ %84, %83 ]\l  %87 = icmp eq i32* %17, null\l  br i1 %87, label %90, label %88\l|{<s0>T|<s1>F}}"];
	Node0x555efdd70020:s0 -> Node0x555efdd70300;
	Node0x555efdd70020:s1 -> Node0x555efdd70350;
	Node0x555efdd70350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%88:\l88:                                               \l  %89 = bitcast i32* %17 to i8*\l  tail call void @_ZdlPv(i8* nonnull %89) #7\l  br label %90\l}"];
	Node0x555efdd70350 -> Node0x555efdd70300;
	Node0x555efdd70300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%90:\l90:                                               \l  resume \{ i8*, i32 \} %86\l}"];
	Node0x555efdd688c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%91:\l91:                                               \l  ret void\l}"];
}
