digraph "CFG for '_Z10valid_dateNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function" {
	label="CFG for '_Z10valid_dateNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function";

	Node0x55fb8ac0a090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1:\l  %2 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %3 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %4 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %5 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  %6 = load i64, i64* %5, align 8, !tbaa !3\l  %7 = icmp eq i64 %6, 10\l  br i1 %7, label %8, label %92\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac0a090:s0 -> Node0x55fb8ac0bd90;
	Node0x55fb8ac0a090:s1 -> Node0x55fb8ac0be20;
	Node0x55fb8ac0bd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%8:\l8:                                                \l  %9 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %10 = load i8*, i8** %9, align 8, !tbaa !10\l  %11 = load i8, i8* %10, align 1, !tbaa !11\l  %12 = add i8 %11, -48\l  %13 = icmp ugt i8 %12, 9\l  br i1 %13, label %92, label %94\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac0bd90:s0 -> Node0x55fb8ac0be20;
	Node0x55fb8ac0bd90:s1 -> Node0x55fb8ac0b080;
	Node0x55fb8ac0c550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%14:\l14:                                               \l  %15 = bitcast %\"class.std::__cxx11::basic_string\"* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #7\l  %16 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 2\l  %17 = bitcast %\"class.std::__cxx11::basic_string\"* %2 to %union.anon**\l  store %union.anon* %16, %union.anon** %17, align 8, !tbaa !12, !alias.scope\l... !13\l  %18 = bitcast %union.anon* %16 to i8*\l  %19 = bitcast i8* %10 to i16*\l  %20 = bitcast %union.anon* %16 to i16*\l  %21 = load i16, i16* %19, align 1\l  store i16 %21, i16* %20, align 8\l  %22 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 0, i32 0\l  %23 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 1\l  store i64 2, i64* %23, align 8, !tbaa !3, !alias.scope !13\l  %24 = getelementptr inbounds i8, i8* %18, i64 2\l  store i8 0, i8* %24, align 2, !tbaa !11\l  %25 = call i64 @strtol(i8* nocapture nonnull %18, i8** null, i32 10) #7\l  %26 = trunc i64 %25 to i32\l  %27 = load i8*, i8** %22, align 8, !tbaa !10\l  %28 = icmp eq i8* %27, %18\l  br i1 %28, label %30, label %29\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac0c550:s0 -> Node0x55fb8ac0ee70;
	Node0x55fb8ac0c550:s1 -> Node0x55fb8ac0ef00;
	Node0x55fb8ac0ef00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%29:\l29:                                               \l  call void @_ZdlPv(i8* %27) #7\l  br label %30\l}"];
	Node0x55fb8ac0ef00 -> Node0x55fb8ac0ee70;
	Node0x55fb8ac0ee70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%30:\l30:                                               \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #7\l  %31 = bitcast %\"class.std::__cxx11::basic_string\"* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #7\l  call void @llvm.experimental.noalias.scope.decl(metadata !16)\l  %32 = load i64, i64* %5, align 8, !tbaa !3, !noalias !16\l  %33 = icmp ult i64 %32, 3\l  br i1 %33, label %34, label %35\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac0ee70:s0 -> Node0x55fb8ac10780;
	Node0x55fb8ac0ee70:s1 -> Node0x55fb8ac10810;
	Node0x55fb8ac10780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%34:\l34:                                               \l  call void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr\l... inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr\l... inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 3, i64 %32) #8,\l... !noalias !16\l  unreachable\l}"];
	Node0x55fb8ac10810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%35:\l35:                                               \l  %36 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 2\l  %37 = bitcast %\"class.std::__cxx11::basic_string\"* %3 to %union.anon**\l  store %union.anon* %36, %union.anon** %37, align 8, !tbaa !12, !alias.scope\l... !16\l  %38 = bitcast %union.anon* %36 to i8*\l  %39 = load i8*, i8** %9, align 8, !tbaa !10, !noalias !16\l  %40 = getelementptr inbounds i8, i8* %39, i64 3\l  %41 = add i64 %32, -3\l  %42 = icmp ult i64 %41, 2\l  %43 = select i1 %42, i64 %41, i64 2\l  switch i64 %43, label %46 [\l    i64 1, label %44\l    i64 0, label %47\l  ]\l|{<s0>def|<s1>1|<s2>0}}"];
	Node0x55fb8ac10810:s0 -> Node0x55fb8ac11ae0;
	Node0x55fb8ac10810:s1 -> Node0x55fb8ac11ba0;
	Node0x55fb8ac10810:s2 -> Node0x55fb8ac11c30;
	Node0x55fb8ac11ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%44:\l44:                                               \l  %45 = load i8, i8* %40, align 1, !tbaa !11\l  store i8 %45, i8* %38, align 8, !tbaa !11\l  br label %47\l}"];
	Node0x55fb8ac11ba0 -> Node0x55fb8ac11c30;
	Node0x55fb8ac11ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%46:\l46:                                               \l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull\l... align 1 %40, i64 %43, i1 false) #7\l  br label %47\l}"];
	Node0x55fb8ac11ae0 -> Node0x55fb8ac11c30;
	Node0x55fb8ac11c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%47:\l47:                                               \l  %48 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 0, i32 0\l  %49 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 1\l  store i64 %43, i64* %49, align 8, !tbaa !3, !alias.scope !16\l  %50 = getelementptr inbounds i8, i8* %38, i64 %43\l  store i8 0, i8* %50, align 1, !tbaa !11\l  %51 = call i64 @strtol(i8* nocapture nonnull %38, i8** null, i32 10) #7\l  %52 = trunc i64 %51 to i32\l  %53 = load i8*, i8** %48, align 8, !tbaa !10\l  %54 = icmp eq i8* %53, %38\l  br i1 %54, label %56, label %55\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac11c30:s0 -> Node0x55fb8ac128e0;
	Node0x55fb8ac11c30:s1 -> Node0x55fb8ac12930;
	Node0x55fb8ac12930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%55:\l55:                                               \l  call void @_ZdlPv(i8* %53) #7\l  br label %56\l}"];
	Node0x55fb8ac12930 -> Node0x55fb8ac128e0;
	Node0x55fb8ac128e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%56:\l56:                                               \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #7\l  %57 = bitcast %\"class.std::__cxx11::basic_string\"* %4 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57) #7\l  call void @llvm.experimental.noalias.scope.decl(metadata !19)\l  %58 = load i64, i64* %5, align 8, !tbaa !3, !noalias !19\l  %59 = icmp ult i64 %58, 6\l  br i1 %59, label %60, label %61\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac128e0:s0 -> Node0x55fb8ac137a0;
	Node0x55fb8ac128e0:s1 -> Node0x55fb8ac13830;
	Node0x55fb8ac137a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%60:\l60:                                               \l  call void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr\l... inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr\l... inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 6, i64 %58) #8,\l... !noalias !19\l  unreachable\l}"];
	Node0x55fb8ac13830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%61:\l61:                                               \l  %62 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2\l  %63 = bitcast %\"class.std::__cxx11::basic_string\"* %4 to %union.anon**\l  store %union.anon* %62, %union.anon** %63, align 8, !tbaa !12, !alias.scope\l... !19\l  %64 = add i64 %58, -6\l  %65 = icmp ult i64 %64, 4\l  %66 = select i1 %65, i64 %64, i64 4\l  %67 = icmp ult i64 %66, 2\l  br i1 %67, label %72, label %68\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac13830:s0 -> Node0x55fb8ac14390;
	Node0x55fb8ac13830:s1 -> Node0x55fb8ac143e0;
	Node0x55fb8ac143e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%68:\l68:                                               \l  %69 = load i8*, i8** %9, align 8, !tbaa !10, !noalias !19\l  %70 = getelementptr inbounds i8, i8* %69, i64 6\l  %71 = bitcast %union.anon* %62 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull\l... align 1 %70, i64 %66, i1 false) #7\l  br label %72\l}"];
	Node0x55fb8ac143e0 -> Node0x55fb8ac14390;
	Node0x55fb8ac14390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%72:\l72:                                               \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #7\l  %73 = add i32 %26, -1\l  %74 = icmp ugt i32 %73, 11\l  %75 = add i32 %52, -1\l  %76 = icmp ugt i32 %75, 30\l  %77 = select i1 %74, i1 true, i1 %76\l  br i1 %77, label %92, label %78\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac14390:s0 -> Node0x55fb8ac0be20;
	Node0x55fb8ac14390:s1 -> Node0x55fb8ac14d80;
	Node0x55fb8ac14d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%78:\l78:                                               \l  %79 = icmp eq i32 %52, 31\l  br i1 %79, label %80, label %83\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac14d80:s0 -> Node0x55fb8ac14f40;
	Node0x55fb8ac14d80:s1 -> Node0x55fb8ac14f90;
	Node0x55fb8ac14f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%80:\l80:                                               \l  %81 = add i32 %26, -2\l  %82 = icmp ult i32 %81, 10\l  br i1 %82, label %87, label %83\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac14f40:s0 -> Node0x55fb8ac15220;
	Node0x55fb8ac14f40:s1 -> Node0x55fb8ac14f90;
	Node0x55fb8ac14f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%83:\l83:                                               \l  %84 = icmp ne i32 %52, 30\l  %85 = icmp ne i32 %26, 2\l  %86 = select i1 %84, i1 true, i1 %85\l  br label %92\l}"];
	Node0x55fb8ac14f90 -> Node0x55fb8ac0be20;
	Node0x55fb8ac15220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%87:\l87:                                               \l  %88 = trunc i32 %81 to i16\l  %89 = lshr i16 661, %88\l  %90 = and i16 %89, 1\l  %91 = icmp eq i16 %90, 0\l  br i1 %91, label %83, label %92\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac15220:s0 -> Node0x55fb8ac14f90;
	Node0x55fb8ac15220:s1 -> Node0x55fb8ac0be20;
	Node0x55fb8ac0be20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%92:\l92:                                               \l  %93 = phi i1 [ false, %1 ], [ false, %72 ], [ %86, %83 ], [ false, %132 ], [\l... false, %127 ], [ false, %122 ], [ false, %117 ], [ false, %113 ], [ false,\l... %108 ], [ false, %103 ], [ false, %99 ], [ false, %94 ], [ false, %8 ], [\l... false, %87 ]\l  ret i1 %93\l}"];
	Node0x55fb8ac0b080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%94:\l94:                                               \l  %95 = getelementptr inbounds i8, i8* %10, i64 1\l  %96 = load i8, i8* %95, align 1, !tbaa !11\l  %97 = add i8 %96, -48\l  %98 = icmp ugt i8 %97, 9\l  br i1 %98, label %92, label %99\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac0b080:s0 -> Node0x55fb8ac0be20;
	Node0x55fb8ac0b080:s1 -> Node0x55fb8ac15bf0;
	Node0x55fb8ac15bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%99:\l99:                                               \l  %100 = getelementptr inbounds i8, i8* %10, i64 2\l  %101 = load i8, i8* %100, align 1, !tbaa !11\l  %102 = icmp eq i8 %101, 45\l  br i1 %102, label %103, label %92\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac15bf0:s0 -> Node0x55fb8ac15b60;
	Node0x55fb8ac15bf0:s1 -> Node0x55fb8ac0be20;
	Node0x55fb8ac15b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%103:\l103:                                              \l  %104 = getelementptr inbounds i8, i8* %10, i64 3\l  %105 = load i8, i8* %104, align 1, !tbaa !11\l  %106 = add i8 %105, -48\l  %107 = icmp ugt i8 %106, 9\l  br i1 %107, label %92, label %108\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac15b60:s0 -> Node0x55fb8ac0be20;
	Node0x55fb8ac15b60:s1 -> Node0x55fb8ac15ad0;
	Node0x55fb8ac15ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%108:\l108:                                              \l  %109 = getelementptr inbounds i8, i8* %10, i64 4\l  %110 = load i8, i8* %109, align 1, !tbaa !11\l  %111 = add i8 %110, -48\l  %112 = icmp ugt i8 %111, 9\l  br i1 %112, label %92, label %113\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac15ad0:s0 -> Node0x55fb8ac0be20;
	Node0x55fb8ac15ad0:s1 -> Node0x55fb8ac15a40;
	Node0x55fb8ac15a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%113:\l113:                                              \l  %114 = getelementptr inbounds i8, i8* %10, i64 5\l  %115 = load i8, i8* %114, align 1, !tbaa !11\l  %116 = icmp eq i8 %115, 45\l  br i1 %116, label %117, label %92\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac15a40:s0 -> Node0x55fb8ac159b0;
	Node0x55fb8ac15a40:s1 -> Node0x55fb8ac0be20;
	Node0x55fb8ac159b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%117:\l117:                                              \l  %118 = getelementptr inbounds i8, i8* %10, i64 6\l  %119 = load i8, i8* %118, align 1, !tbaa !11\l  %120 = add i8 %119, -48\l  %121 = icmp ugt i8 %120, 9\l  br i1 %121, label %92, label %122\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac159b0:s0 -> Node0x55fb8ac0be20;
	Node0x55fb8ac159b0:s1 -> Node0x55fb8ac15960;
	Node0x55fb8ac15960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%122:\l122:                                              \l  %123 = getelementptr inbounds i8, i8* %10, i64 7\l  %124 = load i8, i8* %123, align 1, !tbaa !11\l  %125 = add i8 %124, -48\l  %126 = icmp ugt i8 %125, 9\l  br i1 %126, label %92, label %127\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac15960:s0 -> Node0x55fb8ac0be20;
	Node0x55fb8ac15960:s1 -> Node0x55fb8ac15910;
	Node0x55fb8ac15910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%127:\l127:                                              \l  %128 = getelementptr inbounds i8, i8* %10, i64 8\l  %129 = load i8, i8* %128, align 1, !tbaa !11\l  %130 = add i8 %129, -48\l  %131 = icmp ugt i8 %130, 9\l  br i1 %131, label %92, label %132\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac15910:s0 -> Node0x55fb8ac0be20;
	Node0x55fb8ac15910:s1 -> Node0x55fb8ac158c0;
	Node0x55fb8ac158c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%132:\l132:                                              \l  %133 = getelementptr inbounds i8, i8* %10, i64 9\l  %134 = load i8, i8* %133, align 1, !tbaa !11\l  %135 = add i8 %134, -48\l  %136 = icmp ugt i8 %135, 9\l  br i1 %136, label %92, label %14\l|{<s0>T|<s1>F}}"];
	Node0x55fb8ac158c0:s0 -> Node0x55fb8ac0be20;
	Node0x55fb8ac158c0:s1 -> Node0x55fb8ac0c550;
}
