digraph "CFG for '_Z3fibi' function" {
	label="CFG for '_Z3fibi' function";

	Node0x5629b125d2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%1:\l  %2 = alloca [1000 x i32], align 16\l  %3 = bitcast [1000 x i32]* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4000, i8* nonnull %3) #2\l  %4 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 0\l  store i32 0, i32* %4, align 16, !tbaa !3\l  %5 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 1\l  store i32 1, i32* %5, align 4, !tbaa !3\l  %6 = icmp slt i32 %0, 2\l  br i1 %6, label %37, label %7\l|{<s0>T|<s1>F}}"];
	Node0x5629b125d2c0:s0 -> Node0x5629b125f810;
	Node0x5629b125d2c0:s1 -> Node0x5629b125f8a0;
	Node0x5629b125f8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%7:\l7:                                                \l  %8 = add nuw i32 %0, 1\l  %9 = zext i32 %8 to i64\l  %10 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 2\l  store i32 1, i32* %10, align 8, !tbaa !3\l  %11 = icmp eq i32 %8, 3\l  br i1 %11, label %37, label %12, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x5629b125f8a0:s0 -> Node0x5629b125f810;
	Node0x5629b125f8a0:s1 -> Node0x5629b125e410;
	Node0x5629b125e410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%12:\l12:                                               \l  %13 = add nsw i64 %9, -3\l  %14 = add nsw i64 %9, -4\l  %15 = and i64 %13, 3\l  %16 = icmp ult i64 %14, 3\l  br i1 %16, label %19, label %17\l|{<s0>T|<s1>F}}"];
	Node0x5629b125e410:s0 -> Node0x5629b1260230;
	Node0x5629b125e410:s1 -> Node0x5629b1260280;
	Node0x5629b1260280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%17:\l17:                                               \l  %18 = and i64 %13, -4\l  br label %41\l}"];
	Node0x5629b1260280 -> Node0x5629b12603c0;
	Node0x5629b1260230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%19:\l19:                                               \l  %20 = phi i64 [ 3, %12 ], [ %67, %41 ]\l  %21 = phi i32 [ 1, %12 ], [ %65, %41 ]\l  %22 = phi i64 [ 2, %12 ], [ %62, %41 ]\l  %23 = icmp eq i64 %15, 0\l  br i1 %23, label %37, label %24\l|{<s0>T|<s1>F}}"];
	Node0x5629b1260230:s0 -> Node0x5629b125f810;
	Node0x5629b1260230:s1 -> Node0x5629b1260830;
	Node0x5629b1260830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i64 [ %34, %24 ], [ %20, %19 ]\l  %26 = phi i32 [ %32, %24 ], [ %21, %19 ]\l  %27 = phi i64 [ %25, %24 ], [ %22, %19 ]\l  %28 = phi i64 [ %35, %24 ], [ %15, %19 ]\l  %29 = add nsw i64 %27, -1\l  %30 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %29\l  %31 = load i32, i32* %30, align 4, !tbaa !3\l  %32 = add nsw i32 %31, %26\l  %33 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %25\l  store i32 %32, i32* %33, align 4, !tbaa !3\l  %34 = add nuw nsw i64 %25, 1\l  %35 = add i64 %28, -1\l  %36 = icmp eq i64 %35, 0\l  br i1 %36, label %37, label %24, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x5629b1260830:s0 -> Node0x5629b125f810;
	Node0x5629b1260830:s1 -> Node0x5629b1260830;
	Node0x5629b125f810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%37:\l37:                                               \l  %38 = sext i32 %0 to i64\l  %39 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %38\l  %40 = load i32, i32* %39, align 4, !tbaa !3\l  call void @llvm.lifetime.end.p0i8(i64 4000, i8* nonnull %3) #2\l  ret i32 %40\l}"];
	Node0x5629b12603c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%41:\l41:                                               \l  %42 = phi i64 [ 3, %17 ], [ %67, %41 ]\l  %43 = phi i32 [ 1, %17 ], [ %65, %41 ]\l  %44 = phi i64 [ 2, %17 ], [ %62, %41 ]\l  %45 = phi i64 [ %18, %17 ], [ %68, %41 ]\l  %46 = add nsw i64 %44, -1\l  %47 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %46\l  %48 = load i32, i32* %47, align 4, !tbaa !3\l  %49 = add nsw i32 %48, %43\l  %50 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %42\l  store i32 %49, i32* %50, align 4, !tbaa !3\l  %51 = add nuw nsw i64 %42, 1\l  %52 = add nsw i64 %42, -1\l  %53 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %52\l  %54 = load i32, i32* %53, align 4, !tbaa !3\l  %55 = add nsw i32 %54, %49\l  %56 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %51\l  store i32 %55, i32* %56, align 4, !tbaa !3\l  %57 = add nuw nsw i64 %42, 2\l  %58 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %42\l  %59 = load i32, i32* %58, align 4, !tbaa !3\l  %60 = add nsw i32 %59, %55\l  %61 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %57\l  store i32 %60, i32* %61, align 4, !tbaa !3\l  %62 = add nuw nsw i64 %42, 3\l  %63 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %51\l  %64 = load i32, i32* %63, align 4, !tbaa !3\l  %65 = add nsw i32 %64, %60\l  %66 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %62\l  store i32 %65, i32* %66, align 4, !tbaa !3\l  %67 = add nuw nsw i64 %42, 4\l  %68 = add i64 %45, -4\l  %69 = icmp eq i64 %68, 0\l  br i1 %69, label %19, label %41, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x5629b12603c0:s0 -> Node0x5629b1260230;
	Node0x5629b12603c0:s1 -> Node0x5629b12603c0;
}
