digraph "CFG for '_Z15starts_one_endsi' function" {
	label="CFG for '_Z15starts_one_endsi' function";

	Node0x5598970e4f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%1:\l  %2 = icmp slt i32 %0, 1\l  br i1 %2, label %57, label %3\l|{<s0>T|<s1>F}}"];
	Node0x5598970e4f40:s0 -> Node0x5598970e5660;
	Node0x5598970e4f40:s1 -> Node0x5598970e56b0;
	Node0x5598970e56b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%3:\l3:                                                \l  %4 = icmp eq i32 %0, 1\l  br i1 %4, label %57, label %5\l|{<s0>T|<s1>F}}"];
	Node0x5598970e56b0:s0 -> Node0x5598970e5660;
	Node0x5598970e56b0:s1 -> Node0x5598970e5890;
	Node0x5598970e5890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%5:\l5:                                                \l  %6 = icmp sgt i32 %0, 2\l  br i1 %6, label %7, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5598970e5890:s0 -> Node0x5598970e5a20;
	Node0x5598970e5890:s1 -> Node0x5598970e5660;
	Node0x5598970e5a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%7:\l7:                                                \l  %8 = add i32 %0, -2\l  %9 = icmp ult i32 %8, 8\l  br i1 %9, label %48, label %10\l|{<s0>T|<s1>F}}"];
	Node0x5598970e5a20:s0 -> Node0x5598970e5840;
	Node0x5598970e5a20:s1 -> Node0x5598970e5d30;
	Node0x5598970e5d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%10:\l10:                                               \l  %11 = and i32 %8, -8\l  %12 = or i32 %11, 2\l  %13 = add i32 %11, -8\l  %14 = lshr exact i32 %13, 3\l  %15 = add nuw nsw i32 %14, 1\l  %16 = and i32 %15, 7\l  %17 = icmp ult i32 %13, 56\l  br i1 %17, label %28, label %18\l|{<s0>T|<s1>F}}"];
	Node0x5598970e5d30:s0 -> Node0x5598970e6290;
	Node0x5598970e5d30:s1 -> Node0x5598970e62e0;
	Node0x5598970e62e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%18:\l18:                                               \l  %19 = and i32 %15, 1073741816\l  br label %20\l}"];
	Node0x5598970e62e0 -> Node0x5598970e64e0;
	Node0x5598970e64e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%20:\l20:                                               \l  %21 = phi \<4 x i32\> [ \<i32 18, i32 1, i32 1, i32 1\>, %18 ], [ %24, %20 ]\l  %22 = phi \<4 x i32\> [ \<i32 1, i32 1, i32 1, i32 1\>, %18 ], [ %25, %20 ]\l  %23 = phi i32 [ %19, %18 ], [ %26, %20 ]\l  %24 = mul \<4 x i32\> %21, \<i32 100000000, i32 100000000, i32 100000000, i32\l... 100000000\>\l  %25 = mul \<4 x i32\> %22, \<i32 100000000, i32 100000000, i32 100000000, i32\l... 100000000\>\l  %26 = add i32 %23, -8\l  %27 = icmp eq i32 %26, 0\l  br i1 %27, label %28, label %20, !llvm.loop !3\l|{<s0>T|<s1>F}}"];
	Node0x5598970e64e0:s0 -> Node0x5598970e6290;
	Node0x5598970e64e0:s1 -> Node0x5598970e64e0;
	Node0x5598970e6290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%28:\l28:                                               \l  %29 = phi \<4 x i32\> [ undef, %10 ], [ %24, %20 ]\l  %30 = phi \<4 x i32\> [ undef, %10 ], [ %25, %20 ]\l  %31 = phi \<4 x i32\> [ \<i32 18, i32 1, i32 1, i32 1\>, %10 ], [ %24, %20 ]\l  %32 = phi \<4 x i32\> [ \<i32 1, i32 1, i32 1, i32 1\>, %10 ], [ %25, %20 ]\l  %33 = icmp eq i32 %16, 0\l  br i1 %33, label %42, label %34\l|{<s0>T|<s1>F}}"];
	Node0x5598970e6290:s0 -> Node0x5598970e8850;
	Node0x5598970e6290:s1 -> Node0x5598970e88a0;
	Node0x5598970e88a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%34:\l34:                                               \l  %35 = phi \<4 x i32\> [ %38, %34 ], [ %31, %28 ]\l  %36 = phi \<4 x i32\> [ %39, %34 ], [ %32, %28 ]\l  %37 = phi i32 [ %40, %34 ], [ %16, %28 ]\l  %38 = mul \<4 x i32\> %35, \<i32 10, i32 10, i32 10, i32 10\>\l  %39 = mul \<4 x i32\> %36, \<i32 10, i32 10, i32 10, i32 10\>\l  %40 = add i32 %37, -1\l  %41 = icmp eq i32 %40, 0\l  br i1 %41, label %42, label %34, !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x5598970e88a0:s0 -> Node0x5598970e8850;
	Node0x5598970e88a0:s1 -> Node0x5598970e88a0;
	Node0x5598970e8850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%42:\l42:                                               \l  %43 = phi \<4 x i32\> [ %29, %28 ], [ %38, %34 ]\l  %44 = phi \<4 x i32\> [ %30, %28 ], [ %39, %34 ]\l  %45 = mul \<4 x i32\> %44, %43\l  %46 = call i32 @llvm.vector.reduce.mul.v4i32(\<4 x i32\> %45)\l  %47 = icmp eq i32 %8, %11\l  br i1 %47, label %57, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5598970e8850:s0 -> Node0x5598970e5660;
	Node0x5598970e8850:s1 -> Node0x5598970e5840;
	Node0x5598970e5840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%48:\l48:                                               \l  %49 = phi i32 [ 2, %7 ], [ %12, %42 ]\l  %50 = phi i32 [ 18, %7 ], [ %46, %42 ]\l  br label %51\l}"];
	Node0x5598970e5840 -> Node0x5598970e9750;
	Node0x5598970e9750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi i32 [ %55, %51 ], [ %49, %48 ]\l  %53 = phi i32 [ %54, %51 ], [ %50, %48 ]\l  %54 = mul nsw i32 %53, 10\l  %55 = add nuw nsw i32 %52, 1\l  %56 = icmp eq i32 %55, %0\l  br i1 %56, label %57, label %51, !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x5598970e9750:s0 -> Node0x5598970e5660;
	Node0x5598970e9750:s1 -> Node0x5598970e9750;
	Node0x5598970e5660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%57:\l57:                                               \l  %58 = phi i32 [ 0, %1 ], [ 1, %3 ], [ 18, %5 ], [ %46, %42 ], [ %54, %51 ]\l  ret i32 %58\l}"];
}
