; ModuleID = '../../Human_xBenchmarks_164/CPP_91/CPP_91.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_91/CPP_91.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local i32 @_Z8is_boredNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8, !tbaa !3
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8, !tbaa !10
  %8 = and i64 %3, 1
  %9 = icmp eq i64 %3, 1
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = and i64 %3, -2
  br label %26

12:                                               ; preds = %59, %5
  %13 = phi i32 [ undef, %5 ], [ %51, %59 ]
  %14 = phi i64 [ 0, %5 ], [ %61, %59 ]
  %15 = phi i32 [ 0, %5 ], [ %51, %59 ]
  %16 = phi i32 [ 0, %5 ], [ %56, %59 ]
  %17 = icmp eq i64 %8, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds i8, i8* %7, i64 %14
  %20 = load i8, i8* %19, align 1, !tbaa !11
  %21 = icmp eq i8 %20, 32
  %22 = select i1 %21, i32 %16, i32 0
  %23 = add nuw nsw i32 %22, %15
  br label %24

24:                                               ; preds = %18, %12, %1
  %25 = phi i32 [ 0, %1 ], [ %13, %12 ], [ %23, %18 ]
  ret i32 %25

26:                                               ; preds = %59, %10
  %27 = phi i64 [ 0, %10 ], [ %61, %59 ]
  %28 = phi i32 [ 0, %10 ], [ %51, %59 ]
  %29 = phi i32 [ 0, %10 ], [ %56, %59 ]
  %30 = phi i8 [ 1, %10 ], [ %60, %59 ]
  %31 = phi i64 [ %11, %10 ], [ %62, %59 ]
  %32 = getelementptr inbounds i8, i8* %7, i64 %27
  %33 = load i8, i8* %32, align 1, !tbaa !11
  %34 = icmp eq i8 %33, 32
  %35 = select i1 %34, i32 %29, i32 0
  %36 = add nuw nsw i32 %35, %28
  %37 = icmp eq i8 %33, 73
  %38 = and i8 %30, 1
  %39 = icmp ne i8 %38, 0
  %40 = select i1 %34, i8 %30, i8 0
  switch i8 %33, label %42 [
    i8 46, label %41
    i8 63, label %41
    i8 33, label %41
  ]

41:                                               ; preds = %26, %26, %26
  br label %42

42:                                               ; preds = %26, %41
  %43 = phi i8 [ 1, %41 ], [ %40, %26 ]
  %44 = or i64 %27, 1
  %45 = getelementptr inbounds i8, i8* %7, i64 %44
  %46 = load i8, i8* %45, align 1, !tbaa !11
  %47 = icmp eq i8 %46, 32
  %48 = select i1 %47, i1 %37, i1 false
  %49 = select i1 %48, i1 %39, i1 false
  %50 = zext i1 %49 to i32
  %51 = add nuw nsw i32 %36, %50
  %52 = icmp eq i8 %46, 73
  %53 = and i8 %43, 1
  %54 = icmp ne i8 %53, 0
  %55 = select i1 %52, i1 %54, i1 false
  %56 = zext i1 %55 to i32
  %57 = select i1 %47, i8 %43, i8 0
  switch i8 %46, label %59 [
    i8 46, label %58
    i8 63, label %58
    i8 33, label %58
  ]

58:                                               ; preds = %42, %42, %42
  br label %59

59:                                               ; preds = %58, %42
  %60 = phi i8 [ 1, %58 ], [ %57, %42 ]
  %61 = add nuw nsw i64 %27, 2
  %62 = add i64 %31, -2
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %12, label %26, !llvm.loop !12
}

attributes #0 = { mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!4, !6, i64 0}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.mustprogress"}
