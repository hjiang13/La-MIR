; ModuleID = '../../Human_xBenchmarks_164/CPP_117/CPP_117.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_117/CPP_117.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ = comdat any

@.str = private unnamed_addr constant [11 x i8] c"aeiouAEIOU\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z12select_wordsNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(%"class.std::vector"* noalias sret(%"class.std::vector") align 8 %0, %"class.std::__cxx11::basic_string"* %1, i32 %2) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = alloca %"class.std::__cxx11::basic_string", align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %7 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3
  %14 = bitcast %union.anon* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(10) %14, i8* noundef nonnull align 1 dereferenceable(10) getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i1 false) #11
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  store i64 10, i64* %16, align 8, !tbaa !8
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 1, i64 2
  store i8 0, i8* %17, align 2, !tbaa !11
  %18 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %20 = bitcast %"class.std::__cxx11::basic_string"* %8 to %union.anon**
  store %union.anon* %19, %union.anon** %20, align 8, !tbaa !3
  %21 = bitcast %union.anon* %19 to i8*
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 1
  store i64 0, i64* %23, align 8, !tbaa !8
  store i8 0, i8* %21, align 8, !tbaa !11
  %24 = bitcast %"class.std::__cxx11::basic_string"* %9 to i8*
  %25 = bitcast %"class.std::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %25, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  call void @llvm.experimental.noalias.scope.decl(metadata !12)
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2
  %27 = bitcast %"class.std::__cxx11::basic_string"* %9 to %union.anon**
  store %union.anon* %26, %union.anon** %27, align 8, !tbaa !3, !alias.scope !12
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8, !tbaa !15, !noalias !12
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %31 = load i64, i64* %30, align 8, !tbaa !8, !noalias !12
  %32 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11, !noalias !12
  store i64 %31, i64* %6, align 8, !tbaa !16, !noalias !12
  %33 = icmp ugt i64 %31, 15
  br i1 %33, label %36, label %34

34:                                               ; preds = %3
  %35 = bitcast %union.anon* %26 to i8*
  br label %42

36:                                               ; preds = %3
  %37 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %9, i64* nonnull align 8 dereferenceable(8) %6, i64 0)
          to label %38 unwind label %117

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  store i8* %37, i8** %39, align 8, !tbaa !15, !alias.scope !12
  %40 = load i64, i64* %6, align 8, !tbaa !16, !noalias !12
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2, i32 0
  store i64 %40, i64* %41, align 8, !tbaa !11, !alias.scope !12
  br label %42

42:                                               ; preds = %38, %34
  %43 = phi i8* [ %35, %34 ], [ %37, %38 ]
  switch i64 %31, label %46 [
    i64 1, label %44
    i64 0, label %47
  ]

44:                                               ; preds = %42
  %45 = load i8, i8* %29, align 1, !tbaa !11
  store i8 %45, i8* %43, align 1, !tbaa !11
  br label %47

46:                                               ; preds = %42
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %43, i8* align 1 %29, i64 %31, i1 false) #11
  br label %47

47:                                               ; preds = %46, %44, %42
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  %49 = load i64, i64* %6, align 8, !tbaa !16, !noalias !12
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 1
  store i64 %49, i64* %50, align 8, !tbaa !8, !alias.scope !12
  %51 = load i8*, i8** %48, align 8, !tbaa !15, !alias.scope !12
  %52 = getelementptr inbounds i8, i8* %51, i64 %49
  store i8 0, i8* %52, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11, !noalias !12
  %53 = load i64, i64* %50, align 8, !tbaa !8, !alias.scope !12
  %54 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %9, i64 %53, i64 0, i64 1, i8 signext 32)
          to label %61 unwind label %55

55:                                               ; preds = %47
  %56 = landingpad { i8*, i32 }
          cleanup
  %57 = load i8*, i8** %48, align 8, !tbaa !15, !alias.scope !12
  %58 = bitcast %union.anon* %26 to i8*
  %59 = icmp eq i8* %57, %58
  br i1 %59, label %119, label %60

60:                                               ; preds = %55
  call void @_ZdlPv(i8* %57) #11
  br label %119

61:                                               ; preds = %47
  %62 = load i8*, i8** %48, align 8, !tbaa !15
  %63 = bitcast %union.anon* %26 to i8*
  %64 = icmp eq i8* %62, %63
  br i1 %64, label %65, label %79

65:                                               ; preds = %61
  %66 = load i64, i64* %50, align 8, !tbaa !8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %65
  %69 = load i8*, i8** %28, align 8, !tbaa !15
  %70 = icmp eq i64 %66, 1
  br i1 %70, label %71, label %73

71:                                               ; preds = %68
  %72 = load i8, i8* %63, align 8, !tbaa !11
  store i8 %72, i8* %69, align 1, !tbaa !11
  br label %74

73:                                               ; preds = %68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* nonnull align 8 %63, i64 %66, i1 false) #11
  br label %74

74:                                               ; preds = %73, %71, %65
  %75 = load i64, i64* %50, align 8, !tbaa !8
  store i64 %75, i64* %30, align 8, !tbaa !8
  %76 = load i8*, i8** %28, align 8, !tbaa !15
  %77 = getelementptr inbounds i8, i8* %76, i64 %75
  store i8 0, i8* %77, align 1, !tbaa !11
  %78 = load i8*, i8** %48, align 8, !tbaa !15
  br label %94

79:                                               ; preds = %61
  %80 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 2
  %81 = bitcast %union.anon* %80 to i8*
  %82 = load i8*, i8** %28, align 8, !tbaa !15
  %83 = icmp eq i8* %82, %81
  %84 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 2, i32 0
  %85 = load i64, i64* %84, align 8
  store i8* %62, i8** %28, align 8, !tbaa !15
  %86 = bitcast i64* %50 to <2 x i64>*
  %87 = load <2 x i64>, <2 x i64>* %86, align 8, !tbaa !11
  %88 = bitcast i64* %30 to <2 x i64>*
  store <2 x i64> %87, <2 x i64>* %88, align 8, !tbaa !11
  %89 = icmp eq i8* %82, null
  %90 = or i1 %83, %89
  br i1 %90, label %93, label %91

91:                                               ; preds = %79
  store i8* %82, i8** %48, align 8, !tbaa !15
  %92 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2, i32 0
  store i64 %85, i64* %92, align 8, !tbaa !11
  br label %94

93:                                               ; preds = %79
  store %union.anon* %26, %union.anon** %27, align 8, !tbaa !15
  br label %94

94:                                               ; preds = %74, %91, %93
  %95 = phi i8* [ %78, %74 ], [ %82, %91 ], [ %63, %93 ]
  store i64 0, i64* %50, align 8, !tbaa !8
  store i8 0, i8* %95, align 1, !tbaa !11
  %96 = load i8*, i8** %48, align 8, !tbaa !15
  %97 = icmp eq i8* %96, %63
  br i1 %97, label %99, label %98

98:                                               ; preds = %94
  call void @_ZdlPv(i8* %96) #11
  br label %99

99:                                               ; preds = %94, %98
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  %100 = bitcast %"class.std::__cxx11::basic_string"* %10 to i8*
  %101 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2
  %102 = bitcast %"class.std::__cxx11::basic_string"* %10 to %union.anon**
  %103 = bitcast i64* %4 to i8*
  %104 = bitcast %union.anon* %101 to i8*
  %105 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 0, i32 0
  %106 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2, i32 0
  %107 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 1
  %108 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  %109 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %111 = bitcast i64* %5 to i8*
  %112 = load i64, i64* %30, align 8, !tbaa !8
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %306, label %114

114:                                              ; preds = %99
  %115 = bitcast i64* %107 to <2 x i64>*
  %116 = bitcast i64* %23 to <2 x i64>*
  br label %121

117:                                              ; preds = %36
  %118 = landingpad { i8*, i32 }
          cleanup
  br label %119

119:                                              ; preds = %55, %60, %117
  %120 = phi { i8*, i32 } [ %118, %117 ], [ %56, %60 ], [ %56, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  br label %301

121:                                              ; preds = %114, %296
  %122 = phi i64 [ %298, %296 ], [ 0, %114 ]
  %123 = phi i32 [ %297, %296 ], [ 0, %114 ]
  %124 = load i8*, i8** %28, align 8, !tbaa !15
  %125 = getelementptr inbounds i8, i8* %124, i64 %122
  %126 = load i8, i8* %125, align 1, !tbaa !11
  %127 = icmp eq i8 %126, 32
  br i1 %127, label %128, label %167

128:                                              ; preds = %121
  %129 = icmp eq i32 %123, %2
  br i1 %129, label %130, label %164

130:                                              ; preds = %128
  %131 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %109, align 8, !tbaa !17
  %132 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %110, align 8, !tbaa !19
  %133 = icmp eq %"class.std::__cxx11::basic_string"* %131, %132
  br i1 %133, label %161, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %131, i64 0, i32 2
  %136 = bitcast %"class.std::__cxx11::basic_string"* %131 to %union.anon**
  store %union.anon* %135, %union.anon** %136, align 8, !tbaa !3
  %137 = load i8*, i8** %22, align 8, !tbaa !15
  %138 = load i64, i64* %23, align 8, !tbaa !8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #11
  store i64 %138, i64* %5, align 8, !tbaa !16
  %139 = icmp ugt i64 %138, 15
  br i1 %139, label %142, label %140

140:                                              ; preds = %134
  %141 = bitcast %union.anon* %135 to i8*
  br label %148

142:                                              ; preds = %134
  %143 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %131, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
          to label %144 unwind label %162

144:                                              ; preds = %142
  %145 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %131, i64 0, i32 0, i32 0
  store i8* %143, i8** %145, align 8, !tbaa !15
  %146 = load i64, i64* %5, align 8, !tbaa !16
  %147 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %131, i64 0, i32 2, i32 0
  store i64 %146, i64* %147, align 8, !tbaa !11
  br label %148

148:                                              ; preds = %144, %140
  %149 = phi i8* [ %141, %140 ], [ %143, %144 ]
  switch i64 %138, label %152 [
    i64 1, label %150
    i64 0, label %153
  ]

150:                                              ; preds = %148
  %151 = load i8, i8* %137, align 1, !tbaa !11
  store i8 %151, i8* %149, align 1, !tbaa !11
  br label %153

152:                                              ; preds = %148
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %149, i8* align 1 %137, i64 %138, i1 false) #11
  br label %153

153:                                              ; preds = %152, %150, %148
  %154 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %131, i64 0, i32 0, i32 0
  %155 = load i64, i64* %5, align 8, !tbaa !16
  %156 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %131, i64 0, i32 1
  store i64 %155, i64* %156, align 8, !tbaa !8
  %157 = load i8*, i8** %154, align 8, !tbaa !15
  %158 = getelementptr inbounds i8, i8* %157, i64 %155
  store i8 0, i8* %158, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #11
  %159 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %109, align 8, !tbaa !17
  %160 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %159, i64 1
  store %"class.std::__cxx11::basic_string"* %160, %"class.std::__cxx11::basic_string"** %109, align 8, !tbaa !17
  br label %164

161:                                              ; preds = %130
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %"class.std::__cxx11::basic_string"* %131, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8)
          to label %164 unwind label %162

162:                                              ; preds = %164, %161, %142
  %163 = landingpad { i8*, i32 }
          cleanup
  br label %301

164:                                              ; preds = %153, %161, %128
  %165 = load i64, i64* %23, align 8, !tbaa !8
  %166 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64 0, i64 %165, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 0)
          to label %296 unwind label %162

167:                                              ; preds = %121
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #11
  call void @llvm.experimental.noalias.scope.decl(metadata !20)
  store %union.anon* %101, %union.anon** %102, align 8, !tbaa !3, !alias.scope !20
  %168 = load i8*, i8** %22, align 8, !tbaa !15, !noalias !20
  %169 = load i64, i64* %23, align 8, !tbaa !8, !noalias !20
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #11, !noalias !20
  store i64 %169, i64* %4, align 8, !tbaa !16, !noalias !20
  %170 = icmp ugt i64 %169, 15
  br i1 %170, label %171, label %175

171:                                              ; preds = %167
  %172 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %173 unwind label %292

173:                                              ; preds = %171
  store i8* %172, i8** %105, align 8, !tbaa !15, !alias.scope !20
  %174 = load i64, i64* %4, align 8, !tbaa !16, !noalias !20
  store i64 %174, i64* %106, align 8, !tbaa !11, !alias.scope !20
  br label %175

175:                                              ; preds = %167, %173
  %176 = phi i8* [ %172, %173 ], [ %104, %167 ]
  switch i64 %169, label %179 [
    i64 1, label %177
    i64 0, label %180
  ]

177:                                              ; preds = %175
  %178 = load i8, i8* %168, align 1, !tbaa !11
  store i8 %178, i8* %176, align 1, !tbaa !11
  br label %180

179:                                              ; preds = %175
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %176, i8* align 1 %168, i64 %169, i1 false) #11
  br label %180

180:                                              ; preds = %179, %177, %175
  %181 = load i64, i64* %4, align 8, !tbaa !16, !noalias !20
  store i64 %181, i64* %107, align 8, !tbaa !8, !alias.scope !20
  %182 = load i8*, i8** %105, align 8, !tbaa !15, !alias.scope !20
  %183 = getelementptr inbounds i8, i8* %182, i64 %181
  store i8 0, i8* %183, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #11, !noalias !20
  %184 = load i64, i64* %107, align 8, !tbaa !8, !alias.scope !20
  %185 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i64 %184, i64 0, i64 1, i8 signext %126)
          to label %191 unwind label %186

186:                                              ; preds = %180
  %187 = landingpad { i8*, i32 }
          cleanup
  %188 = load i8*, i8** %105, align 8, !tbaa !15, !alias.scope !20
  %189 = icmp eq i8* %188, %104
  br i1 %189, label %294, label %190

190:                                              ; preds = %186
  call void @_ZdlPv(i8* %188) #11
  br label %294

191:                                              ; preds = %180
  %192 = load i8*, i8** %105, align 8, !tbaa !15
  %193 = icmp eq i8* %192, %104
  br i1 %193, label %194, label %208

194:                                              ; preds = %191
  %195 = load i64, i64* %107, align 8, !tbaa !8
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %203, label %197

197:                                              ; preds = %194
  %198 = load i8*, i8** %22, align 8, !tbaa !15
  %199 = icmp eq i64 %195, 1
  br i1 %199, label %200, label %202

200:                                              ; preds = %197
  %201 = load i8, i8* %104, align 8, !tbaa !11
  store i8 %201, i8* %198, align 1, !tbaa !11
  br label %203

202:                                              ; preds = %197
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %198, i8* nonnull align 8 %104, i64 %195, i1 false) #11
  br label %203

203:                                              ; preds = %202, %200, %194
  %204 = load i64, i64* %107, align 8, !tbaa !8
  store i64 %204, i64* %23, align 8, !tbaa !8
  %205 = load i8*, i8** %22, align 8, !tbaa !15
  %206 = getelementptr inbounds i8, i8* %205, i64 %204
  store i8 0, i8* %206, align 1, !tbaa !11
  %207 = load i8*, i8** %105, align 8, !tbaa !15
  br label %217

208:                                              ; preds = %191
  %209 = load i8*, i8** %22, align 8, !tbaa !15
  %210 = icmp eq i8* %209, %21
  %211 = load i64, i64* %108, align 8
  store i8* %192, i8** %22, align 8, !tbaa !15
  %212 = load <2 x i64>, <2 x i64>* %115, align 8, !tbaa !11
  store <2 x i64> %212, <2 x i64>* %116, align 8, !tbaa !11
  %213 = icmp eq i8* %209, null
  %214 = or i1 %210, %213
  br i1 %214, label %216, label %215

215:                                              ; preds = %208
  store i8* %209, i8** %105, align 8, !tbaa !15
  store i64 %211, i64* %106, align 8, !tbaa !11
  br label %217

216:                                              ; preds = %208
  store %union.anon* %101, %union.anon** %102, align 8, !tbaa !15
  br label %217

217:                                              ; preds = %203, %215, %216
  %218 = phi i8* [ %207, %203 ], [ %209, %215 ], [ %104, %216 ]
  store i64 0, i64* %107, align 8, !tbaa !8
  store i8 0, i8* %218, align 1, !tbaa !11
  %219 = load i8*, i8** %105, align 8, !tbaa !15
  %220 = icmp eq i8* %219, %104
  br i1 %220, label %222, label %221

221:                                              ; preds = %217
  call void @_ZdlPv(i8* %219) #11
  br label %222

222:                                              ; preds = %217, %221
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #11
  %223 = load i8*, i8** %28, align 8, !tbaa !15
  %224 = getelementptr inbounds i8, i8* %223, i64 %122
  %225 = load i8, i8* %224, align 1, !tbaa !11
  %226 = icmp sgt i8 %225, 64
  br i1 %226, label %227, label %296

227:                                              ; preds = %222
  %228 = icmp slt i8 %225, 91
  %229 = add nsw i8 %225, -97
  %230 = icmp ult i8 %229, 26
  %231 = or i1 %228, %230
  br i1 %231, label %232, label %296

232:                                              ; preds = %227
  %233 = load i8*, i8** %15, align 8, !tbaa !15
  %234 = load i64, i64* %16, align 8, !tbaa !8
  %235 = getelementptr inbounds i8, i8* %233, i64 %234
  %236 = ptrtoint i8* %235 to i64
  %237 = icmp sgt i64 %234, 3
  br i1 %237, label %238, label %261

238:                                              ; preds = %232
  %239 = lshr i64 %234, 2
  br label %240

240:                                              ; preds = %257, %238
  %241 = phi i64 [ %239, %238 ], [ %259, %257 ]
  %242 = phi i8* [ %233, %238 ], [ %258, %257 ]
  %243 = load i8, i8* %242, align 1, !tbaa !11
  %244 = icmp eq i8 %243, %225
  br i1 %244, label %287, label %245

245:                                              ; preds = %240
  %246 = getelementptr inbounds i8, i8* %242, i64 1
  %247 = load i8, i8* %246, align 1, !tbaa !11
  %248 = icmp eq i8 %247, %225
  br i1 %248, label %285, label %249

249:                                              ; preds = %245
  %250 = getelementptr inbounds i8, i8* %242, i64 2
  %251 = load i8, i8* %250, align 1, !tbaa !11
  %252 = icmp eq i8 %251, %225
  br i1 %252, label %283, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds i8, i8* %242, i64 3
  %255 = load i8, i8* %254, align 1, !tbaa !11
  %256 = icmp eq i8 %255, %225
  br i1 %256, label %281, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds i8, i8* %242, i64 4
  %259 = add nsw i64 %241, -1
  %260 = icmp sgt i64 %241, 1
  br i1 %260, label %240, label %261, !llvm.loop !23

261:                                              ; preds = %257, %232
  %262 = phi i8* [ %233, %232 ], [ %258, %257 ]
  %263 = ptrtoint i8* %262 to i64
  %264 = sub i64 %236, %263
  switch i64 %264, label %280 [
    i64 3, label %265
    i64 2, label %270
    i64 1, label %276
  ]

265:                                              ; preds = %261
  %266 = load i8, i8* %262, align 1, !tbaa !11
  %267 = icmp eq i8 %266, %225
  br i1 %267, label %287, label %268

268:                                              ; preds = %265
  %269 = getelementptr inbounds i8, i8* %262, i64 1
  br label %270

270:                                              ; preds = %261, %268
  %271 = phi i8* [ %269, %268 ], [ %262, %261 ]
  %272 = load i8, i8* %271, align 1, !tbaa !11
  %273 = icmp eq i8 %272, %225
  br i1 %273, label %287, label %274

274:                                              ; preds = %270
  %275 = getelementptr inbounds i8, i8* %271, i64 1
  br label %276

276:                                              ; preds = %261, %274
  %277 = phi i8* [ %275, %274 ], [ %262, %261 ]
  %278 = load i8, i8* %277, align 1, !tbaa !11
  %279 = icmp eq i8 %278, %225
  br i1 %279, label %287, label %280

280:                                              ; preds = %276, %261
  br label %287

281:                                              ; preds = %253
  %282 = getelementptr inbounds i8, i8* %242, i64 3
  br label %287

283:                                              ; preds = %249
  %284 = getelementptr inbounds i8, i8* %242, i64 2
  br label %287

285:                                              ; preds = %245
  %286 = getelementptr inbounds i8, i8* %242, i64 1
  br label %287

287:                                              ; preds = %240, %281, %283, %285, %280, %276, %270, %265
  %288 = phi i8* [ %235, %280 ], [ %262, %265 ], [ %271, %270 ], [ %277, %276 ], [ %282, %281 ], [ %284, %283 ], [ %286, %285 ], [ %242, %240 ]
  %289 = icmp eq i8* %288, %235
  %290 = zext i1 %289 to i32
  %291 = add nsw i32 %123, %290
  br label %296

292:                                              ; preds = %171
  %293 = landingpad { i8*, i32 }
          cleanup
  br label %294

294:                                              ; preds = %186, %190, %292
  %295 = phi { i8*, i32 } [ %293, %292 ], [ %187, %190 ], [ %187, %186 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #11
  br label %301

296:                                              ; preds = %227, %222, %164, %287
  %297 = phi i32 [ %291, %287 ], [ 0, %164 ], [ %123, %222 ], [ %123, %227 ]
  %298 = add nuw i64 %122, 1
  %299 = load i64, i64* %30, align 8, !tbaa !8
  %300 = icmp ugt i64 %299, %298
  br i1 %300, label %121, label %306, !llvm.loop !25

301:                                              ; preds = %162, %294, %119
  %302 = phi { i8*, i32 } [ %120, %119 ], [ %163, %162 ], [ %295, %294 ]
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #11
  %303 = load i8*, i8** %22, align 8, !tbaa !15
  %304 = icmp eq i8* %303, %21
  br i1 %304, label %315, label %305

305:                                              ; preds = %301
  call void @_ZdlPv(i8* %303) #11
  br label %315

306:                                              ; preds = %296, %99
  %307 = load i8*, i8** %22, align 8, !tbaa !15
  %308 = icmp eq i8* %307, %21
  br i1 %308, label %310, label %309

309:                                              ; preds = %306
  call void @_ZdlPv(i8* %307) #11
  br label %310

310:                                              ; preds = %306, %309
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #11
  %311 = load i8*, i8** %15, align 8, !tbaa !15
  %312 = icmp eq i8* %311, %14
  br i1 %312, label %314, label %313

313:                                              ; preds = %310
  call void @_ZdlPv(i8* %311) #11
  br label %314

314:                                              ; preds = %310, %313
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  ret void

315:                                              ; preds = %305, %301
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #11
  %316 = load i8*, i8** %15, align 8, !tbaa !15
  %317 = icmp eq i8* %316, %14
  br i1 %317, label %319, label %318

318:                                              ; preds = %315
  call void @_ZdlPv(i8* %316) #11
  br label %319

319:                                              ; preds = %318, %315
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  resume { i8*, i32 } %302
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8, !tbaa !26
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8, !tbaa !17
  %6 = icmp eq %"class.std::__cxx11::basic_string"* %3, %5
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %15
  %8 = phi %"class.std::__cxx11::basic_string"* [ %16, %15 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !tbaa !15
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %12 = bitcast %union.anon* %11 to i8*
  %13 = icmp eq i8* %10, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %7
  tail call void @_ZdlPv(i8* %10) #11
  br label %15

15:                                               ; preds = %14, %7
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 1
  %17 = icmp eq %"class.std::__cxx11::basic_string"* %16, %5
  br i1 %17, label %18, label %7, !llvm.loop !27

18:                                               ; preds = %15
  %19 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8, !tbaa !26
  br label %20

20:                                               ; preds = %18, %1
  %21 = phi %"class.std::__cxx11::basic_string"* [ %19, %18 ], [ %3, %1 ]
  %22 = icmp eq %"class.std::__cxx11::basic_string"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = bitcast %"class.std::__cxx11::basic_string"* %21 to i8*
  tail call void @_ZdlPv(i8* nonnull %24) #11
  br label %25

25:                                               ; preds = %20, %23
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #4 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #11
  tail call void @_ZSt9terminatev() #12
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #5

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #6

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #6

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8, !tbaa !17
  %7 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8, !tbaa !26
  %9 = ptrtoint %"class.std::__cxx11::basic_string"* %6 to i64
  %10 = ptrtoint %"class.std::__cxx11::basic_string"* %8 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 5
  %13 = icmp eq i64 %11, 9223372036854775776
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable

15:                                               ; preds = %3
  %16 = icmp eq i64 %11, 0
  %17 = select i1 %16, i64 1, i64 %12
  %18 = add nsw i64 %17, %12
  %19 = icmp ult i64 %18, %12
  %20 = icmp ugt i64 %18, 288230376151711743
  %21 = or i1 %19, %20
  %22 = select i1 %21, i64 288230376151711743, i64 %18
  %23 = ptrtoint %"class.std::__cxx11::basic_string"* %1 to i64
  %24 = sub i64 %23, %10
  %25 = ashr exact i64 %24, 5
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %15
  %28 = shl nuw nsw i64 %22, 5
  %29 = tail call noalias nonnull i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.std::__cxx11::basic_string"*
  br label %31

31:                                               ; preds = %15, %27
  %32 = phi %"class.std::__cxx11::basic_string"* [ %30, %27 ], [ null, %15 ]
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %32, i64 %25
  %34 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %32, i64 %25, i32 2
  %35 = bitcast %"class.std::__cxx11::basic_string"* %33 to %union.anon**
  store %union.anon* %34, %union.anon** %35, align 8, !tbaa !3
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8, !tbaa !15
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  %39 = load i64, i64* %38, align 8, !tbaa !8
  %40 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #11
  store i64 %39, i64* %4, align 8, !tbaa !16
  %41 = icmp ugt i64 %39, 15
  br i1 %41, label %44, label %42

42:                                               ; preds = %31
  %43 = bitcast %union.anon* %34 to i8*
  br label %50

44:                                               ; preds = %31
  %45 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %33, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %46 unwind label %126

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %33, i64 0, i32 0, i32 0
  store i8* %45, i8** %47, align 8, !tbaa !15
  %48 = load i64, i64* %4, align 8, !tbaa !16
  %49 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %32, i64 %25, i32 2, i32 0
  store i64 %48, i64* %49, align 8, !tbaa !11
  br label %50

50:                                               ; preds = %46, %42
  %51 = phi i8* [ %43, %42 ], [ %45, %46 ]
  switch i64 %39, label %54 [
    i64 1, label %52
    i64 0, label %55
  ]

52:                                               ; preds = %50
  %53 = load i8, i8* %37, align 1, !tbaa !11
  store i8 %53, i8* %51, align 1, !tbaa !11
  br label %55

54:                                               ; preds = %50
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %37, i64 %39, i1 false) #11
  br label %55

55:                                               ; preds = %54, %52, %50
  %56 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %33, i64 0, i32 0, i32 0
  %57 = load i64, i64* %4, align 8, !tbaa !16
  %58 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %32, i64 %25, i32 1
  store i64 %57, i64* %58, align 8, !tbaa !8
  %59 = load i8*, i8** %56, align 8, !tbaa !15
  %60 = getelementptr inbounds i8, i8* %59, i64 %57
  store i8 0, i8* %60, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #11
  %61 = icmp eq %"class.std::__cxx11::basic_string"* %8, %1
  br i1 %61, label %87, label %62

62:                                               ; preds = %55, %79
  %63 = phi %"class.std::__cxx11::basic_string"* [ %85, %79 ], [ %32, %55 ]
  %64 = phi %"class.std::__cxx11::basic_string"* [ %84, %79 ], [ %8, %55 ]
  %65 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %63, i64 0, i32 2
  %66 = bitcast %"class.std::__cxx11::basic_string"* %63 to %union.anon**
  store %union.anon* %65, %union.anon** %66, align 8, !tbaa !3
  %67 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8, !tbaa !15
  %69 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 2
  %70 = bitcast %union.anon* %69 to i8*
  %71 = icmp eq i8* %68, %70
  br i1 %71, label %72, label %74

72:                                               ; preds = %62
  %73 = bitcast %union.anon* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %73, i8* noundef nonnull align 8 dereferenceable(16) %68, i64 16, i1 false) #11
  br label %79

74:                                               ; preds = %62
  %75 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %63, i64 0, i32 0, i32 0
  store i8* %68, i8** %75, align 8, !tbaa !15
  %76 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 2, i32 0
  %77 = load i64, i64* %76, align 8, !tbaa !11
  %78 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %63, i64 0, i32 2, i32 0
  store i64 %77, i64* %78, align 8, !tbaa !11
  br label %79

79:                                               ; preds = %74, %72
  %80 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 1
  %81 = load i64, i64* %80, align 8, !tbaa !8
  %82 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %63, i64 0, i32 1
  store i64 %81, i64* %82, align 8, !tbaa !8
  %83 = bitcast %"class.std::__cxx11::basic_string"* %64 to %union.anon**
  store %union.anon* %69, %union.anon** %83, align 8, !tbaa !15
  store i64 0, i64* %80, align 8, !tbaa !8
  store i8 0, i8* %70, align 8, !tbaa !11
  %84 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 1
  %85 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %63, i64 1
  %86 = icmp eq %"class.std::__cxx11::basic_string"* %84, %1
  br i1 %86, label %87, label %62, !llvm.loop !28

87:                                               ; preds = %79, %55
  %88 = phi %"class.std::__cxx11::basic_string"* [ %32, %55 ], [ %85, %79 ]
  %89 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %88, i64 1
  %90 = icmp eq %"class.std::__cxx11::basic_string"* %6, %1
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %108
  %92 = phi %"class.std::__cxx11::basic_string"* [ %114, %108 ], [ %89, %87 ]
  %93 = phi %"class.std::__cxx11::basic_string"* [ %113, %108 ], [ %1, %87 ]
  %94 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %92, i64 0, i32 2
  %95 = bitcast %"class.std::__cxx11::basic_string"* %92 to %union.anon**
  store %union.anon* %94, %union.anon** %95, align 8, !tbaa !3
  %96 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8, !tbaa !15
  %98 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 2
  %99 = bitcast %union.anon* %98 to i8*
  %100 = icmp eq i8* %97, %99
  br i1 %100, label %101, label %103

101:                                              ; preds = %91
  %102 = bitcast %union.anon* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %102, i8* noundef nonnull align 8 dereferenceable(16) %97, i64 16, i1 false) #11
  br label %108

103:                                              ; preds = %91
  %104 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %92, i64 0, i32 0, i32 0
  store i8* %97, i8** %104, align 8, !tbaa !15
  %105 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 2, i32 0
  %106 = load i64, i64* %105, align 8, !tbaa !11
  %107 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %92, i64 0, i32 2, i32 0
  store i64 %106, i64* %107, align 8, !tbaa !11
  br label %108

108:                                              ; preds = %103, %101
  %109 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 1
  %110 = load i64, i64* %109, align 8, !tbaa !8
  %111 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %92, i64 0, i32 1
  store i64 %110, i64* %111, align 8, !tbaa !8
  %112 = bitcast %"class.std::__cxx11::basic_string"* %93 to %union.anon**
  store %union.anon* %98, %union.anon** %112, align 8, !tbaa !15
  store i64 0, i64* %109, align 8, !tbaa !8
  store i8 0, i8* %99, align 8, !tbaa !11
  %113 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 1
  %114 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %92, i64 1
  %115 = icmp eq %"class.std::__cxx11::basic_string"* %113, %6
  br i1 %115, label %116, label %91, !llvm.loop !28

116:                                              ; preds = %108, %87
  %117 = phi %"class.std::__cxx11::basic_string"* [ %89, %87 ], [ %114, %108 ]
  %118 = icmp eq %"class.std::__cxx11::basic_string"* %8, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %116
  %120 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  call void @_ZdlPv(i8* nonnull %120) #11
  br label %121

121:                                              ; preds = %116, %119
  %122 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* %32, %"class.std::__cxx11::basic_string"** %7, align 8, !tbaa !26
  store %"class.std::__cxx11::basic_string"* %117, %"class.std::__cxx11::basic_string"** %5, align 8, !tbaa !17
  %123 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %32, i64 %22
  store %"class.std::__cxx11::basic_string"* %123, %"class.std::__cxx11::basic_string"** %122, align 8, !tbaa !19
  ret void

124:                                              ; preds = %126
  %125 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %131 unwind label %132

126:                                              ; preds = %44
  %127 = landingpad { i8*, i32 }
          catch i8* null
  %128 = extractvalue { i8*, i32 } %127, 0
  %129 = call i8* @__cxa_begin_catch(i8* %128) #11
  %130 = bitcast %"class.std::__cxx11::basic_string"* %32 to i8*
  call void @_ZdlPv(i8* nonnull %130) #11
  invoke void @__cxa_rethrow() #13
          to label %135 unwind label %124

131:                                              ; preds = %124
  resume { i8*, i32 } %125

132:                                              ; preds = %124
  %133 = landingpad { i8*, i32 }
          catch i8* null
  %134 = extractvalue { i8*, i32 } %133, 0
  call void @__clang_call_terminate(i8* %134) #12
  unreachable

135:                                              ; preds = %126
  unreachable
}

declare dso_local void @__cxa_rethrow() local_unnamed_addr

declare dso_local void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #8

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i8*, i64) local_unnamed_addr #6

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #10

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #3 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { noinline noreturn nounwind }
attributes #5 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #8 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { noreturn }
attributes #14 = { allocsize(0) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!14 = distinct !{!14, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!15 = !{!9, !5, i64 0}
!16 = !{!10, !10, i64 0}
!17 = !{!18, !5, i64 8}
!18 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!19 = !{!18, !5, i64 16}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!22 = distinct !{!22, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.mustprogress"}
!25 = distinct !{!25, !24}
!26 = !{!18, !5, i64 0}
!27 = distinct !{!27, !24}
!28 = distinct !{!28, !24}
