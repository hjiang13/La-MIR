digraph "CFG for '_Z13move_one_ballSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z13move_one_ballSt6vectorIiSaIiEE' function";

	Node0x55bd78b47840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%1:\l  %2 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %3 = load i32*, i32** %2, align 8, !tbaa !3\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = load i32*, i32** %4, align 8, !tbaa !8\l  %6 = ptrtoint i32* %3 to i64\l  %7 = ptrtoint i32* %5 to i64\l  %8 = sub i64 %6, %7\l  %9 = ashr exact i64 %8, 2\l  %10 = icmp eq i64 %8, 0\l  br i1 %10, label %72, label %11\l|{<s0>T|<s1>F}}"];
	Node0x55bd78b47840:s0 -> Node0x55bd78b48cf0;
	Node0x55bd78b47840:s1 -> Node0x55bd78b49210;
	Node0x55bd78b49210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%11:\l11:                                               \l  %12 = icmp ugt i64 %9, 1\l  %13 = load i32, i32* %5, align 4, !tbaa !9\l  br i1 %12, label %14, label %52\l|{<s0>T|<s1>F}}"];
	Node0x55bd78b49210:s0 -> Node0x55bd78b49560;
	Node0x55bd78b49210:s1 -> Node0x55bd78b495f0;
	Node0x55bd78b49560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%14:\l14:                                               \l  %15 = add nsw i64 %9, -1\l  %16 = icmp ult i64 %15, 8\l  br i1 %16, label %48, label %17\l|{<s0>T|<s1>F}}"];
	Node0x55bd78b49560:s0 -> Node0x55bd78b498b0;
	Node0x55bd78b49560:s1 -> Node0x55bd78b49900;
	Node0x55bd78b49900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%17:\l17:                                               \l  %18 = and i64 %15, -8\l  %19 = or i64 %18, 1\l  %20 = insertelement \<4 x i32\> poison, i32 %13, i32 3\l  br label %21\l}"];
	Node0x55bd78b49900 -> Node0x55bd78b4a620;
	Node0x55bd78b4a620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%21:\l21:                                               \l  %22 = phi i64 [ 0, %17 ], [ %41, %21 ]\l  %23 = phi \<4 x i32\> [ %20, %17 ], [ %32, %21 ]\l  %24 = phi \<4 x i32\> [ zeroinitializer, %17 ], [ %39, %21 ]\l  %25 = phi \<4 x i32\> [ zeroinitializer, %17 ], [ %40, %21 ]\l  %26 = or i64 %22, 1\l  %27 = getelementptr inbounds i32, i32* %5, i64 %26\l  %28 = bitcast i32* %27 to \<4 x i32\>*\l  %29 = load \<4 x i32\>, \<4 x i32\>* %28, align 4, !tbaa !9\l  %30 = getelementptr inbounds i32, i32* %27, i64 4\l  %31 = bitcast i32* %30 to \<4 x i32\>*\l  %32 = load \<4 x i32\>, \<4 x i32\>* %31, align 4, !tbaa !9\l  %33 = shufflevector \<4 x i32\> %23, \<4 x i32\> %29, \<4 x i32\> \<i32 3, i32 4,\l... i32 5, i32 6\>\l  %34 = shufflevector \<4 x i32\> %29, \<4 x i32\> %32, \<4 x i32\> \<i32 3, i32 4,\l... i32 5, i32 6\>\l  %35 = icmp slt \<4 x i32\> %29, %33\l  %36 = icmp slt \<4 x i32\> %32, %34\l  %37 = zext \<4 x i1\> %35 to \<4 x i32\>\l  %38 = zext \<4 x i1\> %36 to \<4 x i32\>\l  %39 = add \<4 x i32\> %24, %37\l  %40 = add \<4 x i32\> %25, %38\l  %41 = add nuw i64 %22, 8\l  %42 = icmp eq i64 %41, %18\l  br i1 %42, label %43, label %21, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x55bd78b4a620:s0 -> Node0x55bd78b4c240;
	Node0x55bd78b4a620:s1 -> Node0x55bd78b4a620;
	Node0x55bd78b4c240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%43:\l43:                                               \l  %44 = add \<4 x i32\> %40, %39\l  %45 = call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %44)\l  %46 = icmp eq i64 %15, %18\l  %47 = extractelement \<4 x i32\> %32, i32 3\l  br i1 %46, label %52, label %48\l|{<s0>T|<s1>F}}"];
	Node0x55bd78b4c240:s0 -> Node0x55bd78b495f0;
	Node0x55bd78b4c240:s1 -> Node0x55bd78b498b0;
	Node0x55bd78b498b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%48:\l48:                                               \l  %49 = phi i32 [ %47, %43 ], [ %13, %14 ]\l  %50 = phi i64 [ %19, %43 ], [ 1, %14 ]\l  %51 = phi i32 [ %45, %43 ], [ 0, %14 ]\l  br label %61\l}"];
	Node0x55bd78b498b0 -> Node0x55bd78b4ca50;
	Node0x55bd78b495f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%52:\l52:                                               \l  %53 = phi i32 [ 0, %11 ], [ %45, %43 ], [ %69, %61 ]\l  %54 = add nsw i64 %9, -1\l  %55 = getelementptr inbounds i32, i32* %5, i64 %54\l  %56 = load i32, i32* %55, align 4, !tbaa !9\l  %57 = icmp sgt i32 %56, %13\l  %58 = zext i1 %57 to i32\l  %59 = add nuw nsw i32 %53, %58\l  %60 = icmp ult i32 %59, 2\l  br label %72\l}"];
	Node0x55bd78b495f0 -> Node0x55bd78b48cf0;
	Node0x55bd78b4ca50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  %62 = phi i32 [ %66, %61 ], [ %49, %48 ]\l  %63 = phi i64 [ %70, %61 ], [ %50, %48 ]\l  %64 = phi i32 [ %69, %61 ], [ %51, %48 ]\l  %65 = getelementptr inbounds i32, i32* %5, i64 %63\l  %66 = load i32, i32* %65, align 4, !tbaa !9\l  %67 = icmp slt i32 %66, %62\l  %68 = zext i1 %67 to i32\l  %69 = add nuw nsw i32 %64, %68\l  %70 = add nuw nsw i64 %63, 1\l  %71 = icmp eq i64 %70, %9\l  br i1 %71, label %52, label %61, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x55bd78b4ca50:s0 -> Node0x55bd78b495f0;
	Node0x55bd78b4ca50:s1 -> Node0x55bd78b4ca50;
	Node0x55bd78b48cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%72:\l72:                                               \l  %73 = phi i1 [ true, %1 ], [ %60, %52 ]\l  ret i1 %73\l}"];
}
