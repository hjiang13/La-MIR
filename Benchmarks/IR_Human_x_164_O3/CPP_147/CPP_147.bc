; ModuleID = '../../Human_xBenchmarks_164/CPP_147/CPP_147.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_147/CPP_147.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<std::vector<int>, std::allocator<std::vector<int>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<int>, std::allocator<std::vector<int>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<int>, std::allocator<std::vector<int>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<int>, std::allocator<std::vector<int>>>::_Vector_impl_data" = type { %"class.std::vector"*, %"class.std::vector"*, %"class.std::vector"* }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEaSERKS3_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt6vectorIiSaIiEEPS4_EET0_T_S9_S8_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIiSaIiEES4_IS6_SaIS6_EEEEPS6_EET0_T_SE_SD_ = comdat any

$_ZNSt6vectorIiSaIiEEaSERKS1_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIiSaIiEES5_EET0_T_S7_S6_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE20_M_allocate_and_copyIPKS1_EEPS1_mT_S8_ = comdat any

@.str = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1

; Function Attrs: uwtable
define dso_local i32 @_Z18get_matrix_triplesi(i32 %0) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0", align 8
  %3 = alloca [1 x %"class.std::vector"], align 8
  %4 = alloca %"class.std::vector.0", align 8
  %5 = alloca [1 x %"class.std::vector"], align 8
  %6 = alloca [1 x %"class.std::vector"], align 8
  %7 = bitcast %"class.std::vector.0"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = bitcast [1 x %"class.std::vector"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %3, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false) #11
  %10 = invoke noalias nonnull i8* @_Znwm(i64 12) #12
          to label %13 unwind label %11

11:                                               ; preds = %1
  %12 = landingpad { i8*, i32 }
          cleanup
  br label %114

13:                                               ; preds = %1
  %14 = bitcast i8* %10 to i32*
  %15 = bitcast [1 x %"class.std::vector"]* %3 to i8**
  store i8* %10, i8** %15, align 8, !tbaa !3
  %16 = getelementptr inbounds i8, i8* %10, i64 12
  %17 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = bitcast i32** %17 to i8**
  store i8* %16, i8** %18, align 8, !tbaa !8
  store i32 0, i32* %14, align 4
  %19 = getelementptr inbounds i8, i8* %10, i64 4
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %10, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast i32** %23 to i8**
  store i8* %16, i8** %24, align 8, !tbaa !9
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false) #11
  %25 = invoke noalias nonnull i8* @_Znwm(i64 24) #12
          to label %26 unwind label %35

26:                                               ; preds = %13
  %27 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %3, i64 0, i64 1
  %28 = bitcast i8* %25 to %"class.std::vector"*
  %29 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.std::vector.0"* %2 to i8**
  store i8* %25, i8** %30, align 8, !tbaa !10
  %31 = getelementptr inbounds i8, i8* %25, i64 24
  %32 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %33 = bitcast %"class.std::vector"** %32 to i8**
  store i8* %31, i8** %33, align 8, !tbaa !12
  %34 = invoke %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt6vectorIiSaIiEEPS4_EET0_T_S9_S8_(%"class.std::vector"* nonnull %9, %"class.std::vector"* nonnull %27, %"class.std::vector"* nonnull %28)
          to label %42 unwind label %35

35:                                               ; preds = %26, %13
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.std::vector"*, %"class.std::vector"** %37, align 8, !tbaa !10
  %39 = icmp eq %"class.std::vector"* %38, null
  br i1 %39, label %108, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.std::vector"* %38 to i8*
  call void @_ZdlPv(i8* nonnull %41) #11
  br label %108

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"class.std::vector"* %34, %"class.std::vector"** %43, align 8, !tbaa !13
  %44 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8, !tbaa !3
  %46 = icmp eq i32* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %42
  %48 = bitcast i32* %45 to i8*
  call void @_ZdlPv(i8* nonnull %48) #11
  br label %49

49:                                               ; preds = %47, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  %50 = bitcast %"class.std::vector.0"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #11
  %51 = bitcast [1 x %"class.std::vector"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #11
  %52 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %51, i8 0, i64 24, i1 false) #11
  %53 = invoke noalias nonnull i8* @_Znwm(i64 12) #12
          to label %59 unwind label %54

54:                                               ; preds = %49
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8, !tbaa !3
  %58 = icmp eq i32* %57, null
  br i1 %58, label %124, label %120

59:                                               ; preds = %49
  %60 = bitcast i8* %53 to i32*
  %61 = bitcast [1 x %"class.std::vector"]* %5 to i8**
  store i8* %53, i8** %61, align 8, !tbaa !3
  %62 = getelementptr inbounds i8, i8* %53, i64 12
  %63 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0, i32 2
  %64 = bitcast i32** %63 to i8**
  store i8* %62, i8** %64, align 8, !tbaa !8
  store i32 0, i32* %60, align 4
  %65 = getelementptr inbounds i8, i8* %53, i64 4
  %66 = bitcast i8* %65 to i32*
  store i32 0, i32* %66, align 4
  %67 = getelementptr inbounds i8, i8* %53, i64 8
  %68 = bitcast i8* %67 to i32*
  store i32 0, i32* %68, align 4
  %69 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0, i32 1
  %70 = bitcast i32** %69 to i8**
  store i8* %62, i8** %70, align 8, !tbaa !9
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %50, i8 0, i64 24, i1 false) #11
  %71 = invoke noalias nonnull i8* @_Znwm(i64 24) #12
          to label %72 unwind label %81

72:                                               ; preds = %59
  %73 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %5, i64 0, i64 1
  %74 = bitcast i8* %71 to %"class.std::vector"*
  %75 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.std::vector.0"* %4 to i8**
  store i8* %71, i8** %76, align 8, !tbaa !10
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %79 = bitcast %"class.std::vector"** %78 to i8**
  store i8* %77, i8** %79, align 8, !tbaa !12
  %80 = invoke %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt6vectorIiSaIiEEPS4_EET0_T_S9_S8_(%"class.std::vector"* nonnull %52, %"class.std::vector"* nonnull %73, %"class.std::vector"* nonnull %74)
          to label %88 unwind label %81

81:                                               ; preds = %72, %59
  %82 = landingpad { i8*, i32 }
          cleanup
  %83 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %"class.std::vector"*, %"class.std::vector"** %83, align 8, !tbaa !10
  %85 = icmp eq %"class.std::vector"* %84, null
  br i1 %85, label %116, label %86

86:                                               ; preds = %81
  %87 = bitcast %"class.std::vector"* %84 to i8*
  call void @_ZdlPv(i8* nonnull %87) #11
  br label %116

88:                                               ; preds = %72
  %89 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"class.std::vector"* %80, %"class.std::vector"** %89, align 8, !tbaa !13
  %90 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8, !tbaa !3
  %92 = icmp eq i32* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %88
  %94 = bitcast i32* %91 to i8*
  call void @_ZdlPv(i8* nonnull %94) #11
  br label %95

95:                                               ; preds = %93, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #11
  %96 = icmp slt i32 %0, 1
  %97 = add i32 %0, 1
  br i1 %96, label %98, label %102

98:                                               ; preds = %95
  %99 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0, i32 2
  %100 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0, i32 1
  %101 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %6, i64 0, i64 1
  br label %297

102:                                              ; preds = %95
  %103 = zext i32 %97 to i64
  br label %126

104:                                              ; preds = %229
  %105 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0, i32 2
  %106 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0, i32 1
  %107 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %6, i64 0, i64 1
  br i1 %96, label %297, label %251

108:                                              ; preds = %35, %40
  %109 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i32*, i32** %109, align 8, !tbaa !3
  %111 = icmp eq i32* %110, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %108
  %113 = bitcast i32* %110 to i8*
  call void @_ZdlPv(i8* nonnull %113) #11
  br label %114

114:                                              ; preds = %108, %112, %11
  %115 = phi { i8*, i32 } [ %12, %11 ], [ %36, %112 ], [ %36, %108 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  br label %446

116:                                              ; preds = %81, %86
  %117 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i32*, i32** %117, align 8, !tbaa !3
  %119 = icmp eq i32* %118, null
  br i1 %119, label %124, label %120

120:                                              ; preds = %116, %54
  %121 = phi i32* [ %57, %54 ], [ %118, %116 ]
  %122 = phi { i8*, i32 } [ %55, %54 ], [ %82, %116 ]
  %123 = bitcast i32* %121 to i8*
  call void @_ZdlPv(i8* nonnull %123) #11
  br label %124

124:                                              ; preds = %120, %116, %54
  %125 = phi { i8*, i32 } [ %55, %54 ], [ %82, %116 ], [ %122, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #11
  br label %440

126:                                              ; preds = %102, %229
  %127 = phi i64 [ 1, %102 ], [ %240, %229 ]
  %128 = phi i32 [ 1, %102 ], [ %241, %229 ]
  %129 = phi i32* [ null, %102 ], [ %177, %229 ]
  %130 = phi i32* [ null, %102 ], [ %178, %229 ]
  %131 = phi i32* [ null, %102 ], [ %175, %229 ]
  %132 = mul nsw i64 %127, %127
  %133 = sub nsw i32 1, %128
  %134 = trunc i64 %132 to i32
  %135 = add i32 %133, %134
  %136 = srem i32 %135, 3
  %137 = icmp eq i32* %130, %131
  br i1 %137, label %139, label %138

138:                                              ; preds = %126
  store i32 %136, i32* %130, align 4, !tbaa !14
  br label %174

139:                                              ; preds = %126
  %140 = ptrtoint i32* %130 to i64
  %141 = ptrtoint i32* %129 to i64
  %142 = sub i64 %140, %141
  %143 = ashr exact i64 %142, 2
  %144 = icmp eq i64 %142, 9223372036854775804
  br i1 %144, label %145, label %147

145:                                              ; preds = %139
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #13
          to label %146 unwind label %245

146:                                              ; preds = %145
  unreachable

147:                                              ; preds = %139
  %148 = icmp eq i64 %142, 0
  %149 = select i1 %148, i64 1, i64 %143
  %150 = add nsw i64 %149, %143
  %151 = icmp ult i64 %150, %143
  %152 = icmp ugt i64 %150, 2305843009213693951
  %153 = or i1 %151, %152
  %154 = select i1 %153, i64 2305843009213693951, i64 %150
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %161, label %156

156:                                              ; preds = %147
  %157 = shl nuw nsw i64 %154, 2
  %158 = invoke noalias nonnull i8* @_Znwm(i64 %157) #12
          to label %159 unwind label %243

159:                                              ; preds = %156
  %160 = bitcast i8* %158 to i32*
  br label %161

161:                                              ; preds = %159, %147
  %162 = phi i32* [ %160, %159 ], [ null, %147 ]
  %163 = getelementptr inbounds i32, i32* %162, i64 %143
  store i32 %136, i32* %163, align 4, !tbaa !14
  %164 = icmp sgt i64 %142, 0
  br i1 %164, label %165, label %168

165:                                              ; preds = %161
  %166 = bitcast i32* %162 to i8*
  %167 = bitcast i32* %129 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %166, i8* align 4 %167, i64 %142, i1 false) #11
  br label %168

168:                                              ; preds = %161, %165
  %169 = icmp eq i32* %129, null
  br i1 %169, label %172, label %170

170:                                              ; preds = %168
  %171 = bitcast i32* %129 to i8*
  call void @_ZdlPv(i8* nonnull %171) #11
  br label %172

172:                                              ; preds = %170, %168
  %173 = getelementptr inbounds i32, i32* %162, i64 %154
  br label %174

174:                                              ; preds = %172, %138
  %175 = phi i32* [ %173, %172 ], [ %131, %138 ]
  %176 = phi i32* [ %163, %172 ], [ %130, %138 ]
  %177 = phi i32* [ %162, %172 ], [ %129, %138 ]
  %178 = getelementptr inbounds i32, i32* %176, i64 1
  %179 = load %"class.std::vector"*, %"class.std::vector"** %43, align 8, !tbaa !13
  %180 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8, !tbaa !10
  %181 = ptrtoint %"class.std::vector"* %179 to i64
  %182 = ptrtoint %"class.std::vector"* %180 to i64
  %183 = sub i64 %181, %182
  %184 = sdiv exact i64 %183, 24
  %185 = add nsw i64 %184, -1
  %186 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %180, i64 %185
  %187 = load %"class.std::vector"*, %"class.std::vector"** %32, align 8, !tbaa !12
  %188 = icmp eq %"class.std::vector"* %179, %187
  br i1 %188, label %228, label %189

189:                                              ; preds = %174
  %190 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %180, i64 %185, i32 0, i32 0, i32 0, i32 1
  %191 = load i32*, i32** %190, align 8, !tbaa !9
  %192 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %186, i64 0, i32 0, i32 0, i32 0, i32 0
  %193 = load i32*, i32** %192, align 8, !tbaa !3
  %194 = ptrtoint i32* %191 to i64
  %195 = ptrtoint i32* %193 to i64
  %196 = sub i64 %194, %195
  %197 = ashr exact i64 %196, 2
  %198 = bitcast %"class.std::vector"* %179 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %198, i8 0, i64 24, i1 false) #11
  %199 = icmp eq i64 %196, 0
  br i1 %199, label %208, label %200

200:                                              ; preds = %189
  %201 = icmp ugt i64 %197, 2305843009213693951
  br i1 %201, label %202, label %204

202:                                              ; preds = %200
  invoke void @_ZSt17__throw_bad_allocv() #13
          to label %203 unwind label %249

203:                                              ; preds = %202
  unreachable

204:                                              ; preds = %200
  %205 = invoke noalias nonnull i8* @_Znwm(i64 %196) #12
          to label %206 unwind label %247

206:                                              ; preds = %204
  %207 = bitcast i8* %205 to i32*
  br label %208

208:                                              ; preds = %206, %189
  %209 = phi i32* [ %207, %206 ], [ null, %189 ]
  %210 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %179, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* %209, i32** %210, align 8, !tbaa !3
  %211 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %179, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32* %209, i32** %211, align 8, !tbaa !9
  %212 = getelementptr inbounds i32, i32* %209, i64 %197
  %213 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %179, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32* %212, i32** %213, align 8, !tbaa !8
  %214 = load i32*, i32** %192, align 8, !tbaa !16
  %215 = load i32*, i32** %190, align 8, !tbaa !16
  %216 = ptrtoint i32* %215 to i64
  %217 = ptrtoint i32* %214 to i64
  %218 = sub i64 %216, %217
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %223, label %220

220:                                              ; preds = %208
  %221 = bitcast i32* %209 to i8*
  %222 = bitcast i32* %214 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %221, i8* align 4 %222, i64 %218, i1 false) #11
  br label %223

223:                                              ; preds = %220, %208
  %224 = ashr exact i64 %218, 2
  %225 = getelementptr inbounds i32, i32* %209, i64 %224
  store i32* %225, i32** %211, align 8, !tbaa !9
  %226 = load %"class.std::vector"*, %"class.std::vector"** %43, align 8, !tbaa !13
  %227 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %226, i64 1
  store %"class.std::vector"* %227, %"class.std::vector"** %43, align 8, !tbaa !13
  br label %229

228:                                              ; preds = %174
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %2, %"class.std::vector"* %179, %"class.std::vector"* nonnull align 8 dereferenceable(24) %186)
          to label %229 unwind label %247

229:                                              ; preds = %223, %228
  %230 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8, !tbaa !10
  %231 = add nsw i64 %127, -1
  %232 = getelementptr inbounds i32, i32* %177, i64 %231
  %233 = load i32, i32* %232, align 4, !tbaa !14
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %230, i64 %127, i32 0, i32 0, i32 0, i32 0
  %236 = load i32*, i32** %235, align 8, !tbaa !3
  %237 = getelementptr inbounds i32, i32* %236, i64 %234
  %238 = load i32, i32* %237, align 4, !tbaa !14
  %239 = add nsw i32 %238, 1
  store i32 %239, i32* %237, align 4, !tbaa !14
  %240 = add nuw nsw i64 %127, 1
  %241 = add nuw nsw i32 %128, 1
  %242 = icmp eq i64 %240, %103
  br i1 %242, label %104, label %126, !llvm.loop !17

243:                                              ; preds = %156
  %244 = landingpad { i8*, i32 }
          cleanup
  br label %437

245:                                              ; preds = %145
  %246 = landingpad { i8*, i32 }
          cleanup
  br label %437

247:                                              ; preds = %204, %228
  %248 = landingpad { i8*, i32 }
          cleanup
  br label %437

249:                                              ; preds = %202
  %250 = landingpad { i8*, i32 }
          cleanup
  br label %437

251:                                              ; preds = %104
  %252 = zext i32 %97 to i64
  %253 = load %"class.std::vector"*, %"class.std::vector"** %75, align 8, !tbaa !10
  br label %308

254:                                              ; preds = %553, %261
  %255 = phi %"class.std::vector"* [ %262, %261 ], [ %559, %553 ]
  %256 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %255, i64 0, i32 0, i32 0, i32 0, i32 0
  %257 = load i32*, i32** %256, align 8, !tbaa !3
  %258 = icmp eq i32* %257, null
  br i1 %258, label %261, label %259

259:                                              ; preds = %254
  %260 = bitcast i32* %257 to i8*
  call void @_ZdlPv(i8* nonnull %260) #11
  br label %261

261:                                              ; preds = %259, %254
  %262 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %255, i64 1
  %263 = icmp eq %"class.std::vector"* %262, %560
  br i1 %263, label %264, label %254, !llvm.loop !19

264:                                              ; preds = %261
  %265 = load %"class.std::vector"*, %"class.std::vector"** %75, align 8, !tbaa !10
  br label %266

266:                                              ; preds = %264, %553
  %267 = phi %"class.std::vector"* [ %265, %264 ], [ %559, %553 ]
  %268 = icmp eq %"class.std::vector"* %267, null
  br i1 %268, label %271, label %269

269:                                              ; preds = %266
  %270 = bitcast %"class.std::vector"* %267 to i8*
  call void @_ZdlPv(i8* nonnull %270) #11
  br label %271

271:                                              ; preds = %266, %269
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #11
  %272 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8, !tbaa !10
  %273 = load %"class.std::vector"*, %"class.std::vector"** %43, align 8, !tbaa !13
  %274 = icmp eq %"class.std::vector"* %272, %273
  br i1 %274, label %287, label %275

275:                                              ; preds = %271, %282
  %276 = phi %"class.std::vector"* [ %283, %282 ], [ %272, %271 ]
  %277 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %276, i64 0, i32 0, i32 0, i32 0, i32 0
  %278 = load i32*, i32** %277, align 8, !tbaa !3
  %279 = icmp eq i32* %278, null
  br i1 %279, label %282, label %280

280:                                              ; preds = %275
  %281 = bitcast i32* %278 to i8*
  call void @_ZdlPv(i8* nonnull %281) #11
  br label %282

282:                                              ; preds = %280, %275
  %283 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %276, i64 1
  %284 = icmp eq %"class.std::vector"* %283, %273
  br i1 %284, label %285, label %275, !llvm.loop !19

285:                                              ; preds = %282
  %286 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8, !tbaa !10
  br label %287

287:                                              ; preds = %285, %271
  %288 = phi %"class.std::vector"* [ %286, %285 ], [ %272, %271 ]
  %289 = icmp eq %"class.std::vector"* %288, null
  br i1 %289, label %292, label %290

290:                                              ; preds = %287
  %291 = bitcast %"class.std::vector"* %288 to i8*
  call void @_ZdlPv(i8* nonnull %291) #11
  br label %292

292:                                              ; preds = %287, %290
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  %293 = icmp eq i32* %301, null
  br i1 %293, label %296, label %294

294:                                              ; preds = %292
  %295 = bitcast i32* %301 to i8*
  call void @_ZdlPv(i8* nonnull %295) #11
  br label %296

296:                                              ; preds = %292, %294
  ret i32 %558

297:                                              ; preds = %361, %98, %104
  %298 = phi %"class.std::vector"* [ %101, %98 ], [ %107, %104 ], [ %107, %361 ]
  %299 = phi i32** [ %100, %98 ], [ %106, %104 ], [ %106, %361 ]
  %300 = phi i32** [ %99, %98 ], [ %105, %104 ], [ %105, %361 ]
  %301 = phi i32* [ null, %98 ], [ %177, %104 ], [ %177, %361 ]
  %302 = bitcast [1 x %"class.std::vector"]* %6 to i8*
  %303 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %6, i64 0, i64 0
  %304 = bitcast [1 x %"class.std::vector"]* %6 to i8**
  %305 = bitcast i32** %300 to i8**
  %306 = bitcast i32** %299 to i8**
  %307 = invoke nonnull align 8 dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEaSERKS3_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %2, %"class.std::vector.0"* nonnull align 8 dereferenceable(24) %4)
          to label %403 unwind label %424

308:                                              ; preds = %251, %361
  %309 = phi %"class.std::vector"* [ %253, %251 ], [ %366, %361 ]
  %310 = phi i64 [ 1, %251 ], [ %395, %361 ]
  %311 = load %"class.std::vector"*, %"class.std::vector"** %89, align 8, !tbaa !13
  %312 = ptrtoint %"class.std::vector"* %311 to i64
  %313 = ptrtoint %"class.std::vector"* %309 to i64
  %314 = sub i64 %312, %313
  %315 = sdiv exact i64 %314, 24
  %316 = add nsw i64 %315, -1
  %317 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %309, i64 %316
  %318 = load %"class.std::vector"*, %"class.std::vector"** %78, align 8, !tbaa !12
  %319 = icmp eq %"class.std::vector"* %311, %318
  br i1 %319, label %360, label %320

320:                                              ; preds = %308
  %321 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %309, i64 %316, i32 0, i32 0, i32 0, i32 1
  %322 = load i32*, i32** %321, align 8, !tbaa !9
  %323 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %317, i64 0, i32 0, i32 0, i32 0, i32 0
  %324 = load i32*, i32** %323, align 8, !tbaa !3
  %325 = ptrtoint i32* %322 to i64
  %326 = ptrtoint i32* %324 to i64
  %327 = sub i64 %325, %326
  %328 = ashr exact i64 %327, 2
  %329 = bitcast %"class.std::vector"* %311 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %329, i8 0, i64 24, i1 false) #11
  %330 = icmp eq i64 %327, 0
  br i1 %330, label %340, label %331

331:                                              ; preds = %320
  %332 = icmp ugt i64 %328, 2305843009213693951
  br i1 %332, label %333, label %336

333:                                              ; preds = %331, %474
  %334 = phi i32* [ %301, %474 ], [ %177, %331 ]
  invoke void @_ZSt17__throw_bad_allocv() #13
          to label %335 unwind label %401

335:                                              ; preds = %333
  unreachable

336:                                              ; preds = %331
  %337 = invoke noalias nonnull i8* @_Znwm(i64 %327) #12
          to label %338 unwind label %397

338:                                              ; preds = %336
  %339 = bitcast i8* %337 to i32*
  br label %340

340:                                              ; preds = %338, %320
  %341 = phi i32* [ %339, %338 ], [ null, %320 ]
  %342 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %311, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* %341, i32** %342, align 8, !tbaa !3
  %343 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %311, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32* %341, i32** %343, align 8, !tbaa !9
  %344 = getelementptr inbounds i32, i32* %341, i64 %328
  %345 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %311, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32* %344, i32** %345, align 8, !tbaa !8
  %346 = load i32*, i32** %323, align 8, !tbaa !16
  %347 = load i32*, i32** %321, align 8, !tbaa !16
  %348 = ptrtoint i32* %347 to i64
  %349 = ptrtoint i32* %346 to i64
  %350 = sub i64 %348, %349
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %355, label %352

352:                                              ; preds = %340
  %353 = bitcast i32* %341 to i8*
  %354 = bitcast i32* %346 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %353, i8* align 4 %354, i64 %350, i1 false) #11
  br label %355

355:                                              ; preds = %352, %340
  %356 = ashr exact i64 %350, 2
  %357 = getelementptr inbounds i32, i32* %341, i64 %356
  store i32* %357, i32** %343, align 8, !tbaa !9
  %358 = load %"class.std::vector"*, %"class.std::vector"** %89, align 8, !tbaa !13
  %359 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %358, i64 1
  store %"class.std::vector"* %359, %"class.std::vector"** %89, align 8, !tbaa !13
  br label %361

360:                                              ; preds = %308
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %4, %"class.std::vector"* %311, %"class.std::vector"* nonnull align 8 dereferenceable(24) %317)
          to label %361 unwind label %397

361:                                              ; preds = %360, %355
  %362 = add nsw i64 %310, -1
  %363 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8, !tbaa !10
  %364 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %363, i64 %362, i32 0, i32 0, i32 0, i32 0
  %365 = load i32*, i32** %364, align 8, !tbaa !3
  %366 = load %"class.std::vector"*, %"class.std::vector"** %75, align 8, !tbaa !10
  %367 = getelementptr inbounds i32, i32* %177, i64 %362
  %368 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %366, i64 %310, i32 0, i32 0, i32 0, i32 0
  %369 = load i32*, i32** %368, align 8, !tbaa !3
  %370 = load i32, i32* %365, align 4, !tbaa !14
  %371 = load i32, i32* %367, align 4, !tbaa !14
  %372 = srem i32 %371, 3
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds i32, i32* %369, i64 %373
  %375 = load i32, i32* %374, align 4, !tbaa !14
  %376 = add nsw i32 %375, %370
  store i32 %376, i32* %374, align 4, !tbaa !14
  %377 = getelementptr inbounds i32, i32* %365, i64 1
  %378 = load i32, i32* %377, align 4, !tbaa !14
  %379 = load i32, i32* %367, align 4, !tbaa !14
  %380 = add nsw i32 %379, 1
  %381 = srem i32 %380, 3
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds i32, i32* %369, i64 %382
  %384 = load i32, i32* %383, align 4, !tbaa !14
  %385 = add nsw i32 %384, %378
  store i32 %385, i32* %383, align 4, !tbaa !14
  %386 = getelementptr inbounds i32, i32* %365, i64 2
  %387 = load i32, i32* %386, align 4, !tbaa !14
  %388 = load i32, i32* %367, align 4, !tbaa !14
  %389 = add nsw i32 %388, 2
  %390 = srem i32 %389, 3
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds i32, i32* %369, i64 %391
  %393 = load i32, i32* %392, align 4, !tbaa !14
  %394 = add nsw i32 %393, %387
  store i32 %394, i32* %392, align 4, !tbaa !14
  %395 = add nuw nsw i64 %310, 1
  %396 = icmp eq i64 %395, %252
  br i1 %396, label %297, label %308, !llvm.loop !20

397:                                              ; preds = %360, %336
  %398 = landingpad { i8*, i32 }
          cleanup
  br label %437

399:                                              ; preds = %476, %500
  %400 = landingpad { i8*, i32 }
          cleanup
  br label %437

401:                                              ; preds = %333
  %402 = landingpad { i8*, i32 }
          cleanup
  br label %437

403:                                              ; preds = %297
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %302) #11
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %302, i8 0, i64 24, i1 false) #11
  %404 = invoke noalias nonnull i8* @_Znwm(i64 12) #12
          to label %410 unwind label %405

405:                                              ; preds = %539, %403
  %406 = landingpad { i8*, i32 }
          cleanup
  %407 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %408 = load i32*, i32** %407, align 8, !tbaa !3
  %409 = icmp eq i32* %408, null
  br i1 %409, label %435, label %431

410:                                              ; preds = %403
  %411 = bitcast i8* %404 to i32*
  store i8* %404, i8** %304, align 8, !tbaa !3
  %412 = getelementptr inbounds i8, i8* %404, i64 12
  store i8* %412, i8** %305, align 8, !tbaa !8
  store i32 0, i32* %411, align 4
  %413 = getelementptr inbounds i8, i8* %404, i64 4
  %414 = bitcast i8* %413 to i32*
  store i32 0, i32* %414, align 4
  %415 = getelementptr inbounds i8, i8* %404, i64 8
  %416 = bitcast i8* %415 to i32*
  store i32 0, i32* %416, align 4
  store i8* %412, i8** %306, align 8, !tbaa !9
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %4, %"class.std::vector"* nonnull %303, %"class.std::vector"* nonnull %298)
          to label %417 unwind label %426

417:                                              ; preds = %410
  %418 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %419 = load i32*, i32** %418, align 8, !tbaa !3
  %420 = icmp eq i32* %419, null
  br i1 %420, label %423, label %421

421:                                              ; preds = %417
  %422 = bitcast i32* %419 to i8*
  call void @_ZdlPv(i8* nonnull %422) #11
  br label %423

423:                                              ; preds = %421, %417
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %302) #11
  br i1 %96, label %537, label %448

424:                                              ; preds = %537, %297
  %425 = landingpad { i8*, i32 }
          cleanup
  br label %437

426:                                              ; preds = %541, %410
  %427 = landingpad { i8*, i32 }
          cleanup
  %428 = getelementptr inbounds [1 x %"class.std::vector"], [1 x %"class.std::vector"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %429 = load i32*, i32** %428, align 8, !tbaa !3
  %430 = icmp eq i32* %429, null
  br i1 %430, label %435, label %431

431:                                              ; preds = %426, %405
  %432 = phi i32* [ %408, %405 ], [ %429, %426 ]
  %433 = phi { i8*, i32 } [ %406, %405 ], [ %427, %426 ]
  %434 = bitcast i32* %432 to i8*
  call void @_ZdlPv(i8* nonnull %434) #11
  br label %435

435:                                              ; preds = %431, %426, %405
  %436 = phi { i8*, i32 } [ %406, %405 ], [ %427, %426 ], [ %433, %431 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %302) #11
  br label %437

437:                                              ; preds = %397, %399, %401, %247, %249, %243, %245, %424, %435
  %438 = phi i32* [ %301, %435 ], [ %301, %424 ], [ %129, %243 ], [ %129, %245 ], [ %177, %247 ], [ %177, %249 ], [ %334, %401 ], [ %177, %397 ], [ %301, %399 ]
  %439 = phi { i8*, i32 } [ %436, %435 ], [ %425, %424 ], [ %244, %243 ], [ %246, %245 ], [ %248, %247 ], [ %250, %249 ], [ %402, %401 ], [ %398, %397 ], [ %400, %399 ]
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %4) #11
  br label %440

440:                                              ; preds = %124, %437
  %441 = phi i32* [ %438, %437 ], [ null, %124 ]
  %442 = phi { i8*, i32 } [ %439, %437 ], [ %125, %124 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #11
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %2) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  %443 = icmp eq i32* %441, null
  br i1 %443, label %446, label %444

444:                                              ; preds = %440
  %445 = bitcast i32* %441 to i8*
  call void @_ZdlPv(i8* nonnull %445) #11
  br label %446

446:                                              ; preds = %114, %440, %444
  %447 = phi { i8*, i32 } [ %115, %114 ], [ %442, %440 ], [ %442, %444 ]
  resume { i8*, i32 } %447

448:                                              ; preds = %423
  %449 = zext i32 %97 to i64
  %450 = load %"class.std::vector"*, %"class.std::vector"** %75, align 8, !tbaa !10
  br label %451

451:                                              ; preds = %501, %448
  %452 = phi %"class.std::vector"* [ %450, %448 ], [ %506, %501 ]
  %453 = phi i64 [ 1, %448 ], [ %535, %501 ]
  %454 = load %"class.std::vector"*, %"class.std::vector"** %89, align 8, !tbaa !13
  %455 = ptrtoint %"class.std::vector"* %454 to i64
  %456 = ptrtoint %"class.std::vector"* %452 to i64
  %457 = sub i64 %455, %456
  %458 = sdiv exact i64 %457, 24
  %459 = add nsw i64 %458, -1
  %460 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %452, i64 %459
  %461 = load %"class.std::vector"*, %"class.std::vector"** %78, align 8, !tbaa !12
  %462 = icmp eq %"class.std::vector"* %454, %461
  br i1 %462, label %500, label %463

463:                                              ; preds = %451
  %464 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %452, i64 %459, i32 0, i32 0, i32 0, i32 1
  %465 = load i32*, i32** %464, align 8, !tbaa !9
  %466 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %460, i64 0, i32 0, i32 0, i32 0, i32 0
  %467 = load i32*, i32** %466, align 8, !tbaa !3
  %468 = ptrtoint i32* %465 to i64
  %469 = ptrtoint i32* %467 to i64
  %470 = sub i64 %468, %469
  %471 = ashr exact i64 %470, 2
  %472 = bitcast %"class.std::vector"* %454 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %472, i8 0, i64 24, i1 false) #11
  %473 = icmp eq i64 %470, 0
  br i1 %473, label %480, label %474

474:                                              ; preds = %463
  %475 = icmp ugt i64 %471, 2305843009213693951
  br i1 %475, label %333, label %476

476:                                              ; preds = %474
  %477 = invoke noalias nonnull i8* @_Znwm(i64 %470) #12
          to label %478 unwind label %399

478:                                              ; preds = %476
  %479 = bitcast i8* %477 to i32*
  br label %480

480:                                              ; preds = %478, %463
  %481 = phi i32* [ %479, %478 ], [ null, %463 ]
  %482 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %454, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* %481, i32** %482, align 8, !tbaa !3
  %483 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %454, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32* %481, i32** %483, align 8, !tbaa !9
  %484 = getelementptr inbounds i32, i32* %481, i64 %471
  %485 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %454, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32* %484, i32** %485, align 8, !tbaa !8
  %486 = load i32*, i32** %466, align 8, !tbaa !16
  %487 = load i32*, i32** %464, align 8, !tbaa !16
  %488 = ptrtoint i32* %487 to i64
  %489 = ptrtoint i32* %486 to i64
  %490 = sub i64 %488, %489
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %495, label %492

492:                                              ; preds = %480
  %493 = bitcast i32* %481 to i8*
  %494 = bitcast i32* %486 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %493, i8* align 4 %494, i64 %490, i1 false) #11
  br label %495

495:                                              ; preds = %492, %480
  %496 = ashr exact i64 %490, 2
  %497 = getelementptr inbounds i32, i32* %481, i64 %496
  store i32* %497, i32** %483, align 8, !tbaa !9
  %498 = load %"class.std::vector"*, %"class.std::vector"** %89, align 8, !tbaa !13
  %499 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %498, i64 1
  store %"class.std::vector"* %499, %"class.std::vector"** %89, align 8, !tbaa !13
  br label %501

500:                                              ; preds = %451
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %4, %"class.std::vector"* %454, %"class.std::vector"* nonnull align 8 dereferenceable(24) %460)
          to label %501 unwind label %399

501:                                              ; preds = %500, %495
  %502 = add nsw i64 %453, -1
  %503 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8, !tbaa !10
  %504 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %503, i64 %502, i32 0, i32 0, i32 0, i32 0
  %505 = load i32*, i32** %504, align 8, !tbaa !3
  %506 = load %"class.std::vector"*, %"class.std::vector"** %75, align 8, !tbaa !10
  %507 = getelementptr inbounds i32, i32* %301, i64 %502
  %508 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %506, i64 %453, i32 0, i32 0, i32 0, i32 0
  %509 = load i32*, i32** %508, align 8, !tbaa !3
  %510 = load i32, i32* %505, align 4, !tbaa !14
  %511 = load i32, i32* %507, align 4, !tbaa !14
  %512 = srem i32 %511, 3
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds i32, i32* %509, i64 %513
  %515 = load i32, i32* %514, align 4, !tbaa !14
  %516 = add nsw i32 %515, %510
  store i32 %516, i32* %514, align 4, !tbaa !14
  %517 = getelementptr inbounds i32, i32* %505, i64 1
  %518 = load i32, i32* %517, align 4, !tbaa !14
  %519 = load i32, i32* %507, align 4, !tbaa !14
  %520 = add nsw i32 %519, 1
  %521 = srem i32 %520, 3
  %522 = sext i32 %521 to i64
  %523 = getelementptr inbounds i32, i32* %509, i64 %522
  %524 = load i32, i32* %523, align 4, !tbaa !14
  %525 = add nsw i32 %524, %518
  store i32 %525, i32* %523, align 4, !tbaa !14
  %526 = getelementptr inbounds i32, i32* %505, i64 2
  %527 = load i32, i32* %526, align 4, !tbaa !14
  %528 = load i32, i32* %507, align 4, !tbaa !14
  %529 = add nsw i32 %528, 2
  %530 = srem i32 %529, 3
  %531 = sext i32 %530 to i64
  %532 = getelementptr inbounds i32, i32* %509, i64 %531
  %533 = load i32, i32* %532, align 4, !tbaa !14
  %534 = add nsw i32 %533, %527
  store i32 %534, i32* %532, align 4, !tbaa !14
  %535 = add nuw nsw i64 %453, 1
  %536 = icmp eq i64 %535, %449
  br i1 %536, label %537, label %451, !llvm.loop !20

537:                                              ; preds = %501, %423
  %538 = invoke nonnull align 8 dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEaSERKS3_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %2, %"class.std::vector.0"* nonnull align 8 dereferenceable(24) %4)
          to label %539 unwind label %424

539:                                              ; preds = %537
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %302) #11
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %302, i8 0, i64 24, i1 false) #11
  %540 = invoke noalias nonnull i8* @_Znwm(i64 12) #12
          to label %541 unwind label %405

541:                                              ; preds = %539
  %542 = bitcast i8* %540 to i32*
  store i8* %540, i8** %304, align 8, !tbaa !3
  %543 = getelementptr inbounds i8, i8* %540, i64 12
  store i8* %543, i8** %305, align 8, !tbaa !8
  store i32 0, i32* %542, align 4
  %544 = getelementptr inbounds i8, i8* %540, i64 4
  %545 = bitcast i8* %544 to i32*
  store i32 0, i32* %545, align 4
  %546 = getelementptr inbounds i8, i8* %540, i64 8
  %547 = bitcast i8* %546 to i32*
  store i32 0, i32* %547, align 4
  store i8* %543, i8** %306, align 8, !tbaa !9
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %4, %"class.std::vector"* nonnull %303, %"class.std::vector"* nonnull %298)
          to label %548 unwind label %426

548:                                              ; preds = %541
  %549 = load i32*, i32** %418, align 8, !tbaa !3
  %550 = icmp eq i32* %549, null
  br i1 %550, label %553, label %551

551:                                              ; preds = %548
  %552 = bitcast i32* %549 to i8*
  call void @_ZdlPv(i8* nonnull %552) #11
  br label %553

553:                                              ; preds = %548, %551
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %302) #11
  %554 = sext i32 %0 to i64
  %555 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8, !tbaa !10
  %556 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %555, i64 %554, i32 0, i32 0, i32 0, i32 0
  %557 = load i32*, i32** %556, align 8, !tbaa !3
  %558 = load i32, i32* %557, align 4, !tbaa !14
  %559 = load %"class.std::vector"*, %"class.std::vector"** %75, align 8, !tbaa !10
  %560 = load %"class.std::vector"*, %"class.std::vector"** %89, align 8, !tbaa !13
  %561 = icmp eq %"class.std::vector"* %559, %560
  br i1 %561, label %266, label %254
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEaSERKS3_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %0, %"class.std::vector.0"* nonnull align 8 dereferenceable(24) %1) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = icmp eq %"class.std::vector.0"* %1, %0
  br i1 %3, label %120, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8, !tbaa !13
  %7 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8, !tbaa !10
  %9 = ptrtoint %"class.std::vector"* %6 to i64
  %10 = ptrtoint %"class.std::vector"* %8 to i64
  %11 = sub i64 %9, %10
  %12 = sdiv exact i64 %11, 24
  %13 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %14 = load %"class.std::vector"*, %"class.std::vector"** %13, align 8, !tbaa !12
  %15 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.std::vector"*, %"class.std::vector"** %15, align 8, !tbaa !10
  %17 = ptrtoint %"class.std::vector"* %14 to i64
  %18 = ptrtoint %"class.std::vector"* %16 to i64
  %19 = sub i64 %17, %18
  %20 = sdiv exact i64 %19, 24
  %21 = icmp ugt i64 %12, %20
  br i1 %21, label %22, label %47

22:                                               ; preds = %4
  %23 = tail call %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %0, i64 %12, %"class.std::vector"* %8, %"class.std::vector"* %6)
  %24 = load %"class.std::vector"*, %"class.std::vector"** %15, align 8, !tbaa !10
  %25 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = load %"class.std::vector"*, %"class.std::vector"** %25, align 8, !tbaa !13
  %27 = icmp eq %"class.std::vector"* %24, %26
  br i1 %27, label %40, label %28

28:                                               ; preds = %22, %35
  %29 = phi %"class.std::vector"* [ %36, %35 ], [ %24, %22 ]
  %30 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8, !tbaa !3
  %32 = icmp eq i32* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  %34 = bitcast i32* %31 to i8*
  tail call void @_ZdlPv(i8* nonnull %34) #11
  br label %35

35:                                               ; preds = %33, %28
  %36 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %29, i64 1
  %37 = icmp eq %"class.std::vector"* %36, %26
  br i1 %37, label %38, label %28, !llvm.loop !19

38:                                               ; preds = %35
  %39 = load %"class.std::vector"*, %"class.std::vector"** %15, align 8, !tbaa !10
  br label %40

40:                                               ; preds = %38, %22
  %41 = phi %"class.std::vector"* [ %39, %38 ], [ %24, %22 ]
  %42 = icmp eq %"class.std::vector"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.std::vector"* %41 to i8*
  tail call void @_ZdlPv(i8* nonnull %44) #11
  br label %45

45:                                               ; preds = %40, %43
  store %"class.std::vector"* %23, %"class.std::vector"** %15, align 8, !tbaa !10
  %46 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %23, i64 %12
  store %"class.std::vector"* %46, %"class.std::vector"** %13, align 8, !tbaa !12
  br label %116

47:                                               ; preds = %4
  %48 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %49 = load %"class.std::vector"*, %"class.std::vector"** %48, align 8, !tbaa !13
  %50 = ptrtoint %"class.std::vector"* %49 to i64
  %51 = sub i64 %50, %18
  %52 = sdiv exact i64 %51, 24
  %53 = icmp ult i64 %52, %12
  br i1 %53, label %87, label %54

54:                                               ; preds = %47
  %55 = icmp sgt i64 %11, 0
  br i1 %55, label %56, label %70

56:                                               ; preds = %54
  %57 = udiv exact i64 %11, 24
  br label %58

58:                                               ; preds = %58, %56
  %59 = phi i64 [ %65, %58 ], [ %57, %56 ]
  %60 = phi %"class.std::vector"* [ %64, %58 ], [ %16, %56 ]
  %61 = phi %"class.std::vector"* [ %63, %58 ], [ %8, %56 ]
  %62 = tail call nonnull align 8 dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIiSaIiEEaSERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %60, %"class.std::vector"* nonnull align 8 dereferenceable(24) %61)
  %63 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %61, i64 1
  %64 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %60, i64 1
  %65 = add nsw i64 %59, -1
  %66 = icmp sgt i64 %59, 1
  br i1 %66, label %58, label %67, !llvm.loop !21

67:                                               ; preds = %58
  %68 = load %"class.std::vector"*, %"class.std::vector"** %48, align 8, !tbaa !16
  %69 = ptrtoint %"class.std::vector"* %64 to i64
  br label %70

70:                                               ; preds = %67, %54
  %71 = phi i64 [ %69, %67 ], [ %18, %54 ]
  %72 = phi %"class.std::vector"* [ %68, %67 ], [ %49, %54 ]
  %73 = sub i64 %71, %18
  %74 = sdiv exact i64 %73, 24
  %75 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %16, i64 %74
  %76 = icmp eq %"class.std::vector"* %75, %72
  br i1 %76, label %116, label %77

77:                                               ; preds = %70, %84
  %78 = phi %"class.std::vector"* [ %85, %84 ], [ %75, %70 ]
  %79 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %78, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i32*, i32** %79, align 8, !tbaa !3
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* nonnull %83) #11
  br label %84

84:                                               ; preds = %82, %77
  %85 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %78, i64 1
  %86 = icmp eq %"class.std::vector"* %85, %72
  br i1 %86, label %116, label %77, !llvm.loop !22

87:                                               ; preds = %47
  %88 = icmp sgt i64 %51, 0
  br i1 %88, label %89, label %109

89:                                               ; preds = %87
  %90 = udiv exact i64 %51, 24
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ %98, %91 ], [ %90, %89 ]
  %93 = phi %"class.std::vector"* [ %97, %91 ], [ %16, %89 ]
  %94 = phi %"class.std::vector"* [ %96, %91 ], [ %8, %89 ]
  %95 = tail call nonnull align 8 dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIiSaIiEEaSERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %93, %"class.std::vector"* nonnull align 8 dereferenceable(24) %94)
  %96 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %94, i64 1
  %97 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %93, i64 1
  %98 = add nsw i64 %92, -1
  %99 = icmp sgt i64 %92, 1
  br i1 %99, label %91, label %100, !llvm.loop !23

100:                                              ; preds = %91
  %101 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8, !tbaa !10
  %102 = load %"class.std::vector"*, %"class.std::vector"** %48, align 8, !tbaa !13
  %103 = load %"class.std::vector"*, %"class.std::vector"** %15, align 8, !tbaa !10
  %104 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8, !tbaa !13
  %105 = ptrtoint %"class.std::vector"* %102 to i64
  %106 = ptrtoint %"class.std::vector"* %103 to i64
  %107 = sub i64 %105, %106
  %108 = sdiv exact i64 %107, 24
  br label %109

109:                                              ; preds = %100, %87
  %110 = phi i64 [ %108, %100 ], [ %52, %87 ]
  %111 = phi %"class.std::vector"* [ %104, %100 ], [ %6, %87 ]
  %112 = phi %"class.std::vector"* [ %102, %100 ], [ %49, %87 ]
  %113 = phi %"class.std::vector"* [ %101, %100 ], [ %8, %87 ]
  %114 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %113, i64 %110
  %115 = tail call %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIiSaIiEES5_EET0_T_S7_S6_(%"class.std::vector"* %114, %"class.std::vector"* %111, %"class.std::vector"* %112)
  br label %116

116:                                              ; preds = %84, %70, %109, %45
  %117 = load %"class.std::vector"*, %"class.std::vector"** %15, align 8, !tbaa !10
  %118 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %117, i64 %12
  %119 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"class.std::vector"* %118, %"class.std::vector"** %119, align 8, !tbaa !13
  br label %120

120:                                              ; preds = %116, %2
  ret %"class.std::vector.0"* %0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8, !tbaa !10
  %4 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8, !tbaa !13
  %6 = icmp eq %"class.std::vector"* %3, %5
  br i1 %6, label %19, label %7

7:                                                ; preds = %1, %14
  %8 = phi %"class.std::vector"* [ %15, %14 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8, !tbaa !3
  %11 = icmp eq i32* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %7
  %13 = bitcast i32* %10 to i8*
  tail call void @_ZdlPv(i8* nonnull %13) #11
  br label %14

14:                                               ; preds = %12, %7
  %15 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %8, i64 1
  %16 = icmp eq %"class.std::vector"* %15, %5
  br i1 %16, label %17, label %7, !llvm.loop !19

17:                                               ; preds = %14
  %18 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8, !tbaa !10
  br label %19

19:                                               ; preds = %17, %1
  %20 = phi %"class.std::vector"* [ %18, %17 ], [ %3, %1 ]
  %21 = icmp eq %"class.std::vector"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %19
  %23 = bitcast %"class.std::vector"* %20 to i8*
  tail call void @_ZdlPv(i8* nonnull %23) #11
  br label %24

24:                                               ; preds = %19, %22
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #3 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #11
  tail call void @_ZSt9terminatev() #14
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #5

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

; Function Attrs: uwtable
define linkonce_odr dso_local %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt6vectorIiSaIiEEPS4_EET0_T_S9_S8_(%"class.std::vector"* %0, %"class.std::vector"* %1, %"class.std::vector"* %2) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = icmp eq %"class.std::vector"* %0, %1
  br i1 %4, label %67, label %5

5:                                                ; preds = %3, %41
  %6 = phi %"class.std::vector"* [ %45, %41 ], [ %2, %3 ]
  %7 = phi %"class.std::vector"* [ %44, %41 ], [ %0, %3 ]
  %8 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32*, i32** %8, align 8, !tbaa !9
  %10 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8, !tbaa !3
  %12 = ptrtoint i32* %9 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = sub i64 %12, %13
  %15 = ashr exact i64 %14, 2
  %16 = bitcast %"class.std::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %16, i8 0, i64 24, i1 false) #11
  %17 = icmp eq i64 %14, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %5
  %19 = icmp ugt i64 %15, 2305843009213693951
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  invoke void @_ZSt17__throw_bad_allocv() #13
          to label %21 unwind label %49

21:                                               ; preds = %20
  unreachable

22:                                               ; preds = %18
  %23 = invoke noalias nonnull i8* @_Znwm(i64 %14) #12
          to label %24 unwind label %47

24:                                               ; preds = %22
  %25 = bitcast i8* %23 to i32*
  br label %26

26:                                               ; preds = %24, %5
  %27 = phi i32* [ %25, %24 ], [ null, %5 ]
  %28 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* %27, i32** %28, align 8, !tbaa !3
  %29 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32* %27, i32** %29, align 8, !tbaa !9
  %30 = getelementptr inbounds i32, i32* %27, i64 %15
  %31 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32* %30, i32** %31, align 8, !tbaa !8
  %32 = load i32*, i32** %10, align 8, !tbaa !16
  %33 = load i32*, i32** %8, align 8, !tbaa !16
  %34 = ptrtoint i32* %33 to i64
  %35 = ptrtoint i32* %32 to i64
  %36 = sub i64 %34, %35
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %26
  %39 = bitcast i32* %27 to i8*
  %40 = bitcast i32* %32 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 %36, i1 false) #11
  br label %41

41:                                               ; preds = %38, %26
  %42 = ashr exact i64 %36, 2
  %43 = getelementptr inbounds i32, i32* %27, i64 %42
  store i32* %43, i32** %29, align 8, !tbaa !9
  %44 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 1
  %45 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 1
  %46 = icmp eq %"class.std::vector"* %44, %1
  br i1 %46, label %67, label %5, !llvm.loop !24

47:                                               ; preds = %22
  %48 = landingpad { i8*, i32 }
          catch i8* null
  br label %51

49:                                               ; preds = %20
  %50 = landingpad { i8*, i32 }
          catch i8* null
  br label %51

51:                                               ; preds = %49, %47
  %52 = phi { i8*, i32 } [ %48, %47 ], [ %50, %49 ]
  %53 = extractvalue { i8*, i32 } %52, 0
  %54 = tail call i8* @__cxa_begin_catch(i8* %53) #11
  %55 = icmp eq %"class.std::vector"* %6, %2
  br i1 %55, label %66, label %56

56:                                               ; preds = %51, %63
  %57 = phi %"class.std::vector"* [ %64, %63 ], [ %2, %51 ]
  %58 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8, !tbaa !3
  %60 = icmp eq i32* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = bitcast i32* %59 to i8*
  tail call void @_ZdlPv(i8* nonnull %62) #11
  br label %63

63:                                               ; preds = %61, %56
  %64 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %57, i64 1
  %65 = icmp eq %"class.std::vector"* %64, %6
  br i1 %65, label %66, label %56, !llvm.loop !19

66:                                               ; preds = %63, %51
  invoke void @__cxa_rethrow() #13
          to label %75 unwind label %69

67:                                               ; preds = %41, %3
  %68 = phi %"class.std::vector"* [ %2, %3 ], [ %45, %41 ]
  ret %"class.std::vector"* %68

69:                                               ; preds = %66
  %70 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %71 unwind label %72

71:                                               ; preds = %69
  resume { i8*, i32 } %70

72:                                               ; preds = %69
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  tail call void @__clang_call_terminate(i8* %74) #14
  unreachable

75:                                               ; preds = %66
  unreachable
}

declare dso_local void @__cxa_rethrow() local_unnamed_addr

declare dso_local void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %0, %"class.std::vector"* %1, %"class.std::vector"* nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8, !tbaa !13
  %6 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8, !tbaa !10
  %8 = ptrtoint %"class.std::vector"* %5 to i64
  %9 = ptrtoint %"class.std::vector"* %7 to i64
  %10 = sub i64 %8, %9
  %11 = sdiv exact i64 %10, 24
  %12 = icmp eq i64 %10, 9223372036854775800
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #13
  unreachable

14:                                               ; preds = %3
  %15 = icmp eq i64 %10, 0
  %16 = select i1 %15, i64 1, i64 %11
  %17 = add nsw i64 %16, %11
  %18 = icmp ult i64 %17, %11
  %19 = icmp ugt i64 %17, 384307168202282325
  %20 = or i1 %18, %19
  %21 = select i1 %20, i64 384307168202282325, i64 %17
  %22 = ptrtoint %"class.std::vector"* %1 to i64
  %23 = sub i64 %22, %9
  %24 = sdiv exact i64 %23, 24
  %25 = icmp eq i64 %21, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %14
  %27 = mul nuw nsw i64 %21, 24
  %28 = tail call noalias nonnull i8* @_Znwm(i64 %27) #12
  %29 = bitcast i8* %28 to %"class.std::vector"*
  br label %30

30:                                               ; preds = %14, %26
  %31 = phi %"class.std::vector"* [ %29, %26 ], [ null, %14 ]
  %32 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %31, i64 %24
  %33 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i32*, i32** %33, align 8, !tbaa !9
  %35 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8, !tbaa !3
  %37 = ptrtoint i32* %34 to i64
  %38 = ptrtoint i32* %36 to i64
  %39 = sub i64 %37, %38
  %40 = ashr exact i64 %39, 2
  %41 = bitcast %"class.std::vector"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %41, i8 0, i64 24, i1 false) #11
  %42 = icmp eq i64 %39, 0
  br i1 %42, label %56, label %43

43:                                               ; preds = %30
  %44 = icmp ugt i64 %40, 2305843009213693951
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  invoke void @_ZSt17__throw_bad_allocv() #13
          to label %46 unwind label %112

46:                                               ; preds = %45
  unreachable

47:                                               ; preds = %43
  %48 = invoke noalias nonnull i8* @_Znwm(i64 %39) #12
          to label %49 unwind label %112

49:                                               ; preds = %47
  %50 = bitcast i8* %48 to i32*
  %51 = load i32*, i32** %35, align 8, !tbaa !16
  %52 = load i32*, i32** %33, align 8, !tbaa !16
  %53 = ptrtoint i32* %52 to i64
  %54 = ptrtoint i32* %51 to i64
  %55 = sub i64 %53, %54
  br label %56

56:                                               ; preds = %49, %30
  %57 = phi i64 [ %55, %49 ], [ 0, %30 ]
  %58 = phi i32* [ %51, %49 ], [ %36, %30 ]
  %59 = phi i32* [ %50, %49 ], [ null, %30 ]
  %60 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* %59, i32** %60, align 8, !tbaa !3
  %61 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %31, i64 %24, i32 0, i32 0, i32 0, i32 1
  store i32* %59, i32** %61, align 8, !tbaa !9
  %62 = getelementptr inbounds i32, i32* %59, i64 %40
  %63 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %31, i64 %24, i32 0, i32 0, i32 0, i32 2
  store i32* %62, i32** %63, align 8, !tbaa !8
  %64 = icmp eq i64 %57, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %56
  %66 = bitcast i32* %59 to i8*
  %67 = bitcast i32* %58 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %67, i64 %57, i1 false) #11
  br label %68

68:                                               ; preds = %65, %56
  %69 = ashr exact i64 %57, 2
  %70 = getelementptr inbounds i32, i32* %59, i64 %69
  store i32* %70, i32** %61, align 8, !tbaa !9
  %71 = icmp eq %"class.std::vector"* %7, %1
  br i1 %71, label %85, label %72

72:                                               ; preds = %68, %72
  %73 = phi %"class.std::vector"* [ %83, %72 ], [ %31, %68 ]
  %74 = phi %"class.std::vector"* [ %82, %72 ], [ %7, %68 ]
  %75 = bitcast %"class.std::vector"* %74 to <2 x i32*>*
  %76 = load <2 x i32*>, <2 x i32*>* %75, align 8, !tbaa !16
  %77 = bitcast %"class.std::vector"* %73 to <2 x i32*>*
  store <2 x i32*> %76, <2 x i32*>* %77, align 8, !tbaa !16
  %78 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %73, i64 0, i32 0, i32 0, i32 0, i32 2
  %79 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %74, i64 0, i32 0, i32 0, i32 0, i32 2
  %80 = load i32*, i32** %79, align 8, !tbaa !8
  store i32* %80, i32** %78, align 8, !tbaa !8
  %81 = bitcast %"class.std::vector"* %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %81, i8 0, i64 24, i1 false) #11
  %82 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %74, i64 1
  %83 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %73, i64 1
  %84 = icmp eq %"class.std::vector"* %82, %1
  br i1 %84, label %85, label %72, !llvm.loop !25

85:                                               ; preds = %72, %68
  %86 = phi %"class.std::vector"* [ %31, %68 ], [ %83, %72 ]
  %87 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %86, i64 1
  %88 = icmp eq %"class.std::vector"* %5, %1
  br i1 %88, label %102, label %89

89:                                               ; preds = %85, %89
  %90 = phi %"class.std::vector"* [ %100, %89 ], [ %87, %85 ]
  %91 = phi %"class.std::vector"* [ %99, %89 ], [ %1, %85 ]
  %92 = bitcast %"class.std::vector"* %91 to <2 x i32*>*
  %93 = load <2 x i32*>, <2 x i32*>* %92, align 8, !tbaa !16
  %94 = bitcast %"class.std::vector"* %90 to <2 x i32*>*
  store <2 x i32*> %93, <2 x i32*>* %94, align 8, !tbaa !16
  %95 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %90, i64 0, i32 0, i32 0, i32 0, i32 2
  %96 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %91, i64 0, i32 0, i32 0, i32 0, i32 2
  %97 = load i32*, i32** %96, align 8, !tbaa !8
  store i32* %97, i32** %95, align 8, !tbaa !8
  %98 = bitcast %"class.std::vector"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %98, i8 0, i64 24, i1 false) #11
  %99 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %91, i64 1
  %100 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %90, i64 1
  %101 = icmp eq %"class.std::vector"* %99, %5
  br i1 %101, label %102, label %89, !llvm.loop !25

102:                                              ; preds = %89, %85
  %103 = phi %"class.std::vector"* [ %87, %85 ], [ %100, %89 ]
  %104 = icmp eq %"class.std::vector"* %7, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = bitcast %"class.std::vector"* %7 to i8*
  tail call void @_ZdlPv(i8* nonnull %106) #11
  br label %107

107:                                              ; preds = %102, %105
  %108 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store %"class.std::vector"* %31, %"class.std::vector"** %6, align 8, !tbaa !10
  store %"class.std::vector"* %103, %"class.std::vector"** %4, align 8, !tbaa !13
  %109 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %31, i64 %21
  store %"class.std::vector"* %109, %"class.std::vector"** %108, align 8, !tbaa !12
  ret void

110:                                              ; preds = %112
  %111 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %117 unwind label %118

112:                                              ; preds = %45, %47
  %113 = landingpad { i8*, i32 }
          catch i8* null
  %114 = extractvalue { i8*, i32 } %113, 0
  %115 = tail call i8* @__cxa_begin_catch(i8* %114) #11
  %116 = bitcast %"class.std::vector"* %31 to i8*
  tail call void @_ZdlPv(i8* nonnull %116) #11
  invoke void @__cxa_rethrow() #13
          to label %121 unwind label %110

117:                                              ; preds = %110
  resume { i8*, i32 } %111

118:                                              ; preds = %110
  %119 = landingpad { i8*, i32 }
          catch i8* null
  %120 = extractvalue { i8*, i32 } %119, 0
  tail call void @__clang_call_terminate(i8* %120) #14
  unreachable

121:                                              ; preds = %112
  unreachable
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %0, i64 %1, %"class.std::vector"* %2, %"class.std::vector"* %3) local_unnamed_addr #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %4
  %7 = icmp ugt i64 %1, 384307168202282325
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void @_ZSt17__throw_bad_allocv() #13
  unreachable

9:                                                ; preds = %6
  %10 = mul nuw nsw i64 %1, 24
  %11 = tail call noalias nonnull i8* @_Znwm(i64 %10) #12
  %12 = bitcast i8* %11 to %"class.std::vector"*
  br label %13

13:                                               ; preds = %4, %9
  %14 = phi %"class.std::vector"* [ %12, %9 ], [ null, %4 ]
  %15 = invoke %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIiSaIiEES4_IS6_SaIS6_EEEEPS6_EET0_T_SE_SD_(%"class.std::vector"* %2, %"class.std::vector"* %3, %"class.std::vector"* %14)
          to label %16 unwind label %17

16:                                               ; preds = %13
  ret %"class.std::vector"* %14

17:                                               ; preds = %13
  %18 = landingpad { i8*, i32 }
          catch i8* null
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = tail call i8* @__cxa_begin_catch(i8* %19) #11
  %21 = icmp eq %"class.std::vector"* %14, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.std::vector"* %14 to i8*
  tail call void @_ZdlPv(i8* nonnull %23) #11
  br label %24

24:                                               ; preds = %22, %17
  invoke void @__cxa_rethrow() #13
          to label %31 unwind label %25

25:                                               ; preds = %24
  %26 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %27 unwind label %28

27:                                               ; preds = %25
  resume { i8*, i32 } %26

28:                                               ; preds = %25
  %29 = landingpad { i8*, i32 }
          catch i8* null
  %30 = extractvalue { i8*, i32 } %29, 0
  tail call void @__clang_call_terminate(i8* %30) #14
  unreachable

31:                                               ; preds = %24
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIiSaIiEES4_IS6_SaIS6_EEEEPS6_EET0_T_SE_SD_(%"class.std::vector"* %0, %"class.std::vector"* %1, %"class.std::vector"* %2) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = icmp eq %"class.std::vector"* %0, %1
  br i1 %4, label %67, label %5

5:                                                ; preds = %3, %41
  %6 = phi %"class.std::vector"* [ %45, %41 ], [ %2, %3 ]
  %7 = phi %"class.std::vector"* [ %44, %41 ], [ %0, %3 ]
  %8 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32*, i32** %8, align 8, !tbaa !9
  %10 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8, !tbaa !3
  %12 = ptrtoint i32* %9 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = sub i64 %12, %13
  %15 = ashr exact i64 %14, 2
  %16 = bitcast %"class.std::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %16, i8 0, i64 24, i1 false) #11
  %17 = icmp eq i64 %14, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %5
  %19 = icmp ugt i64 %15, 2305843009213693951
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  invoke void @_ZSt17__throw_bad_allocv() #13
          to label %21 unwind label %49

21:                                               ; preds = %20
  unreachable

22:                                               ; preds = %18
  %23 = invoke noalias nonnull i8* @_Znwm(i64 %14) #12
          to label %24 unwind label %47

24:                                               ; preds = %22
  %25 = bitcast i8* %23 to i32*
  br label %26

26:                                               ; preds = %24, %5
  %27 = phi i32* [ %25, %24 ], [ null, %5 ]
  %28 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* %27, i32** %28, align 8, !tbaa !3
  %29 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32* %27, i32** %29, align 8, !tbaa !9
  %30 = getelementptr inbounds i32, i32* %27, i64 %15
  %31 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32* %30, i32** %31, align 8, !tbaa !8
  %32 = load i32*, i32** %10, align 8, !tbaa !16
  %33 = load i32*, i32** %8, align 8, !tbaa !16
  %34 = ptrtoint i32* %33 to i64
  %35 = ptrtoint i32* %32 to i64
  %36 = sub i64 %34, %35
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %26
  %39 = bitcast i32* %27 to i8*
  %40 = bitcast i32* %32 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 %36, i1 false) #11
  br label %41

41:                                               ; preds = %38, %26
  %42 = ashr exact i64 %36, 2
  %43 = getelementptr inbounds i32, i32* %27, i64 %42
  store i32* %43, i32** %29, align 8, !tbaa !9
  %44 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 1
  %45 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 1
  %46 = icmp eq %"class.std::vector"* %44, %1
  br i1 %46, label %67, label %5, !llvm.loop !26

47:                                               ; preds = %22
  %48 = landingpad { i8*, i32 }
          catch i8* null
  br label %51

49:                                               ; preds = %20
  %50 = landingpad { i8*, i32 }
          catch i8* null
  br label %51

51:                                               ; preds = %49, %47
  %52 = phi { i8*, i32 } [ %48, %47 ], [ %50, %49 ]
  %53 = extractvalue { i8*, i32 } %52, 0
  %54 = tail call i8* @__cxa_begin_catch(i8* %53) #11
  %55 = icmp eq %"class.std::vector"* %6, %2
  br i1 %55, label %66, label %56

56:                                               ; preds = %51, %63
  %57 = phi %"class.std::vector"* [ %64, %63 ], [ %2, %51 ]
  %58 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8, !tbaa !3
  %60 = icmp eq i32* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = bitcast i32* %59 to i8*
  tail call void @_ZdlPv(i8* nonnull %62) #11
  br label %63

63:                                               ; preds = %61, %56
  %64 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %57, i64 1
  %65 = icmp eq %"class.std::vector"* %64, %6
  br i1 %65, label %66, label %56, !llvm.loop !19

66:                                               ; preds = %63, %51
  invoke void @__cxa_rethrow() #13
          to label %75 unwind label %69

67:                                               ; preds = %41, %3
  %68 = phi %"class.std::vector"* [ %2, %3 ], [ %45, %41 ]
  ret %"class.std::vector"* %68

69:                                               ; preds = %66
  %70 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %71 unwind label %72

71:                                               ; preds = %69
  resume { i8*, i32 } %70

72:                                               ; preds = %69
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  tail call void @__clang_call_terminate(i8* %74) #14
  unreachable

75:                                               ; preds = %66
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIiSaIiEEaSERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %"class.std::vector"* nonnull align 8 dereferenceable(24) %1) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = icmp eq %"class.std::vector"* %1, %0
  br i1 %3, label %81, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8, !tbaa !9
  %7 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8, !tbaa !3
  %9 = ptrtoint i32* %6 to i64
  %10 = ptrtoint i32* %8 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 2
  %13 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %14 = load i32*, i32** %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8, !tbaa !3
  %17 = ptrtoint i32* %14 to i64
  %18 = ptrtoint i32* %16 to i64
  %19 = sub i64 %17, %18
  %20 = ashr exact i64 %19, 2
  %21 = icmp ugt i64 %12, %20
  br i1 %21, label %22, label %39

22:                                               ; preds = %4
  %23 = icmp ugt i64 %12, 2305843009213693951
  br i1 %23, label %24, label %25

24:                                               ; preds = %22
  tail call void @_ZSt17__throw_bad_allocv() #13
  unreachable

25:                                               ; preds = %22
  %26 = tail call noalias nonnull i8* @_Znwm(i64 %11) #12
  %27 = bitcast i8* %26 to i32*
  %28 = icmp eq i64 %11, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = bitcast i32* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %26, i8* align 4 %30, i64 %11, i1 false) #11
  br label %31

31:                                               ; preds = %25, %29
  %32 = load i32*, i32** %15, align 8, !tbaa !3
  %33 = icmp eq i32* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = bitcast i32* %32 to i8*
  tail call void @_ZdlPv(i8* nonnull %35) #11
  br label %36

36:                                               ; preds = %31, %34
  %37 = bitcast %"class.std::vector"* %0 to i8**
  store i8* %26, i8** %37, align 8, !tbaa !3
  %38 = getelementptr inbounds i32, i32* %27, i64 %12
  store i32* %38, i32** %13, align 8, !tbaa !8
  br label %77

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i32*, i32** %40, align 8, !tbaa !9
  %42 = ptrtoint i32* %41 to i64
  %43 = sub i64 %42, %18
  %44 = ashr exact i64 %43, 2
  %45 = icmp ult i64 %44, %12
  br i1 %45, label %51, label %46

46:                                               ; preds = %39
  %47 = icmp eq i64 %11, 0
  br i1 %47, label %77, label %48

48:                                               ; preds = %46
  %49 = bitcast i32* %16 to i8*
  %50 = bitcast i32* %8 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %50, i64 %11, i1 false) #11
  br label %77

51:                                               ; preds = %39
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %65, label %53

53:                                               ; preds = %51
  %54 = bitcast i32* %16 to i8*
  %55 = bitcast i32* %8 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %54, i8* align 4 %55, i64 %43, i1 false) #11
  %56 = load i32*, i32** %7, align 8, !tbaa !3
  %57 = load i32*, i32** %40, align 8, !tbaa !9
  %58 = load i32*, i32** %15, align 8, !tbaa !3
  %59 = load i32*, i32** %5, align 8, !tbaa !9
  %60 = ptrtoint i32* %57 to i64
  %61 = ptrtoint i32* %58 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 2
  %64 = ptrtoint i32* %59 to i64
  br label %65

65:                                               ; preds = %51, %53
  %66 = phi i64 [ %9, %51 ], [ %64, %53 ]
  %67 = phi i64 [ 0, %51 ], [ %63, %53 ]
  %68 = phi i32* [ %41, %51 ], [ %57, %53 ]
  %69 = phi i32* [ %8, %51 ], [ %56, %53 ]
  %70 = getelementptr inbounds i32, i32* %69, i64 %67
  %71 = ptrtoint i32* %70 to i64
  %72 = sub i64 %66, %71
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %65
  %75 = bitcast i32* %68 to i8*
  %76 = bitcast i32* %70 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %76, i64 %72, i1 false) #11
  br label %77

77:                                               ; preds = %74, %65, %48, %46, %36
  %78 = load i32*, i32** %15, align 8, !tbaa !3
  %79 = getelementptr inbounds i32, i32* %78, i64 %12
  %80 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32* %79, i32** %80, align 8, !tbaa !9
  br label %81

81:                                               ; preds = %77, %2
  ret %"class.std::vector"* %0
}

; Function Attrs: uwtable
define linkonce_odr dso_local %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIiSaIiEES5_EET0_T_S7_S6_(%"class.std::vector"* %0, %"class.std::vector"* %1, %"class.std::vector"* %2) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = icmp eq %"class.std::vector"* %0, %1
  br i1 %4, label %67, label %5

5:                                                ; preds = %3, %41
  %6 = phi %"class.std::vector"* [ %45, %41 ], [ %2, %3 ]
  %7 = phi %"class.std::vector"* [ %44, %41 ], [ %0, %3 ]
  %8 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32*, i32** %8, align 8, !tbaa !9
  %10 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8, !tbaa !3
  %12 = ptrtoint i32* %9 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = sub i64 %12, %13
  %15 = ashr exact i64 %14, 2
  %16 = bitcast %"class.std::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %16, i8 0, i64 24, i1 false) #11
  %17 = icmp eq i64 %14, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %5
  %19 = icmp ugt i64 %15, 2305843009213693951
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  invoke void @_ZSt17__throw_bad_allocv() #13
          to label %21 unwind label %49

21:                                               ; preds = %20
  unreachable

22:                                               ; preds = %18
  %23 = invoke noalias nonnull i8* @_Znwm(i64 %14) #12
          to label %24 unwind label %47

24:                                               ; preds = %22
  %25 = bitcast i8* %23 to i32*
  br label %26

26:                                               ; preds = %24, %5
  %27 = phi i32* [ %25, %24 ], [ null, %5 ]
  %28 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* %27, i32** %28, align 8, !tbaa !3
  %29 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32* %27, i32** %29, align 8, !tbaa !9
  %30 = getelementptr inbounds i32, i32* %27, i64 %15
  %31 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32* %30, i32** %31, align 8, !tbaa !8
  %32 = load i32*, i32** %10, align 8, !tbaa !16
  %33 = load i32*, i32** %8, align 8, !tbaa !16
  %34 = ptrtoint i32* %33 to i64
  %35 = ptrtoint i32* %32 to i64
  %36 = sub i64 %34, %35
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %26
  %39 = bitcast i32* %27 to i8*
  %40 = bitcast i32* %32 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 %36, i1 false) #11
  br label %41

41:                                               ; preds = %38, %26
  %42 = ashr exact i64 %36, 2
  %43 = getelementptr inbounds i32, i32* %27, i64 %42
  store i32* %43, i32** %29, align 8, !tbaa !9
  %44 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %7, i64 1
  %45 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %6, i64 1
  %46 = icmp eq %"class.std::vector"* %44, %1
  br i1 %46, label %67, label %5, !llvm.loop !27

47:                                               ; preds = %22
  %48 = landingpad { i8*, i32 }
          catch i8* null
  br label %51

49:                                               ; preds = %20
  %50 = landingpad { i8*, i32 }
          catch i8* null
  br label %51

51:                                               ; preds = %49, %47
  %52 = phi { i8*, i32 } [ %48, %47 ], [ %50, %49 ]
  %53 = extractvalue { i8*, i32 } %52, 0
  %54 = tail call i8* @__cxa_begin_catch(i8* %53) #11
  %55 = icmp eq %"class.std::vector"* %6, %2
  br i1 %55, label %66, label %56

56:                                               ; preds = %51, %63
  %57 = phi %"class.std::vector"* [ %64, %63 ], [ %2, %51 ]
  %58 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8, !tbaa !3
  %60 = icmp eq i32* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = bitcast i32* %59 to i8*
  tail call void @_ZdlPv(i8* nonnull %62) #11
  br label %63

63:                                               ; preds = %61, %56
  %64 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %57, i64 1
  %65 = icmp eq %"class.std::vector"* %64, %6
  br i1 %65, label %66, label %56, !llvm.loop !19

66:                                               ; preds = %63, %51
  invoke void @__cxa_rethrow() #13
          to label %75 unwind label %69

67:                                               ; preds = %41, %3
  %68 = phi %"class.std::vector"* [ %2, %3 ], [ %45, %41 ]
  ret %"class.std::vector"* %68

69:                                               ; preds = %66
  %70 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %71 unwind label %72

71:                                               ; preds = %69
  resume { i8*, i32 } %70

72:                                               ; preds = %69
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  tail call void @__clang_call_terminate(i8* %74) #14
  unreachable

75:                                               ; preds = %66
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %0, %"class.std::vector"* %1, %"class.std::vector"* %2) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = ptrtoint %"class.std::vector"* %2 to i64
  %5 = ptrtoint %"class.std::vector"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8, !tbaa !12
  %10 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.std::vector"*, %"class.std::vector"** %10, align 8, !tbaa !10
  %12 = ptrtoint %"class.std::vector"* %9 to i64
  %13 = ptrtoint %"class.std::vector"* %11 to i64
  %14 = sub i64 %12, %13
  %15 = sdiv exact i64 %14, 24
  %16 = icmp ugt i64 %7, %15
  br i1 %16, label %17, label %45

17:                                               ; preds = %3
  %18 = icmp ugt i64 %7, 384307168202282325
  br i1 %18, label %19, label %20

19:                                               ; preds = %17
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

20:                                               ; preds = %17
  %21 = tail call %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE20_M_allocate_and_copyIPKS1_EEPS1_mT_S8_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %0, i64 %7, %"class.std::vector"* %1, %"class.std::vector"* %2)
  %22 = load %"class.std::vector"*, %"class.std::vector"** %10, align 8, !tbaa !10
  %23 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = load %"class.std::vector"*, %"class.std::vector"** %23, align 8, !tbaa !13
  %25 = icmp eq %"class.std::vector"* %22, %24
  br i1 %25, label %38, label %26

26:                                               ; preds = %20, %33
  %27 = phi %"class.std::vector"* [ %34, %33 ], [ %22, %20 ]
  %28 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8, !tbaa !3
  %30 = icmp eq i32* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  %32 = bitcast i32* %29 to i8*
  tail call void @_ZdlPv(i8* nonnull %32) #11
  br label %33

33:                                               ; preds = %31, %26
  %34 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %27, i64 1
  %35 = icmp eq %"class.std::vector"* %34, %24
  br i1 %35, label %36, label %26, !llvm.loop !19

36:                                               ; preds = %33
  %37 = load %"class.std::vector"*, %"class.std::vector"** %10, align 8, !tbaa !10
  br label %38

38:                                               ; preds = %36, %20
  %39 = phi %"class.std::vector"* [ %37, %36 ], [ %22, %20 ]
  %40 = icmp eq %"class.std::vector"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %38
  %42 = bitcast %"class.std::vector"* %39 to i8*
  tail call void @_ZdlPv(i8* nonnull %42) #11
  br label %43

43:                                               ; preds = %38, %41
  store %"class.std::vector"* %21, %"class.std::vector"** %10, align 8, !tbaa !10
  %44 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %21, i64 %7
  store %"class.std::vector"* %44, %"class.std::vector"** %23, align 8, !tbaa !13
  store %"class.std::vector"* %44, %"class.std::vector"** %8, align 8, !tbaa !12
  br label %101

45:                                               ; preds = %3
  %46 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %47 = load %"class.std::vector"*, %"class.std::vector"** %46, align 8, !tbaa !13
  %48 = ptrtoint %"class.std::vector"* %47 to i64
  %49 = sub i64 %48, %13
  %50 = sdiv exact i64 %49, 24
  %51 = icmp ult i64 %50, %7
  br i1 %51, label %82, label %52

52:                                               ; preds = %45
  %53 = icmp sgt i64 %6, 0
  br i1 %53, label %54, label %67

54:                                               ; preds = %52
  %55 = udiv exact i64 %6, 24
  br label %56

56:                                               ; preds = %56, %54
  %57 = phi i64 [ %63, %56 ], [ %55, %54 ]
  %58 = phi %"class.std::vector"* [ %62, %56 ], [ %11, %54 ]
  %59 = phi %"class.std::vector"* [ %61, %56 ], [ %1, %54 ]
  %60 = tail call nonnull align 8 dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIiSaIiEEaSERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %58, %"class.std::vector"* nonnull align 8 dereferenceable(24) %59)
  %61 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %59, i64 1
  %62 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %58, i64 1
  %63 = add nsw i64 %57, -1
  %64 = icmp sgt i64 %57, 1
  br i1 %64, label %56, label %65, !llvm.loop !21

65:                                               ; preds = %56
  %66 = load %"class.std::vector"*, %"class.std::vector"** %46, align 8, !tbaa !13
  br label %67

67:                                               ; preds = %65, %52
  %68 = phi %"class.std::vector"* [ %47, %52 ], [ %66, %65 ]
  %69 = phi %"class.std::vector"* [ %11, %52 ], [ %62, %65 ]
  %70 = icmp eq %"class.std::vector"* %68, %69
  br i1 %70, label %101, label %71

71:                                               ; preds = %67, %78
  %72 = phi %"class.std::vector"* [ %79, %78 ], [ %69, %67 ]
  %73 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8, !tbaa !3
  %75 = icmp eq i32* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %71
  %77 = bitcast i32* %74 to i8*
  tail call void @_ZdlPv(i8* nonnull %77) #11
  br label %78

78:                                               ; preds = %76, %71
  %79 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %72, i64 1
  %80 = icmp eq %"class.std::vector"* %79, %68
  br i1 %80, label %81, label %71, !llvm.loop !19

81:                                               ; preds = %78
  store %"class.std::vector"* %69, %"class.std::vector"** %46, align 8, !tbaa !13
  br label %101

82:                                               ; preds = %45
  %83 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 %50
  %84 = icmp sgt i64 %49, 0
  br i1 %84, label %85, label %98

85:                                               ; preds = %82
  %86 = udiv exact i64 %49, 24
  br label %87

87:                                               ; preds = %87, %85
  %88 = phi i64 [ %94, %87 ], [ %86, %85 ]
  %89 = phi %"class.std::vector"* [ %93, %87 ], [ %11, %85 ]
  %90 = phi %"class.std::vector"* [ %92, %87 ], [ %1, %85 ]
  %91 = tail call nonnull align 8 dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIiSaIiEEaSERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %89, %"class.std::vector"* nonnull align 8 dereferenceable(24) %90)
  %92 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %90, i64 1
  %93 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %89, i64 1
  %94 = add nsw i64 %88, -1
  %95 = icmp sgt i64 %88, 1
  br i1 %95, label %87, label %96, !llvm.loop !21

96:                                               ; preds = %87
  %97 = load %"class.std::vector"*, %"class.std::vector"** %46, align 8, !tbaa !13
  br label %98

98:                                               ; preds = %96, %82
  %99 = phi %"class.std::vector"* [ %97, %96 ], [ %47, %82 ]
  %100 = tail call %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt6vectorIiSaIiEEPS4_EET0_T_S9_S8_(%"class.std::vector"* %83, %"class.std::vector"* %2, %"class.std::vector"* %99)
  store %"class.std::vector"* %100, %"class.std::vector"** %46, align 8, !tbaa !13
  br label %101

101:                                              ; preds = %81, %67, %98, %43
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local %"class.std::vector"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE20_M_allocate_and_copyIPKS1_EEPS1_mT_S8_(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %0, i64 %1, %"class.std::vector"* %2, %"class.std::vector"* %3) local_unnamed_addr #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %4
  %7 = icmp ugt i64 %1, 384307168202282325
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void @_ZSt17__throw_bad_allocv() #13
  unreachable

9:                                                ; preds = %6
  %10 = mul nuw nsw i64 %1, 24
  %11 = tail call noalias nonnull i8* @_Znwm(i64 %10) #12
  %12 = bitcast i8* %11 to %"class.std::vector"*
  br label %13

13:                                               ; preds = %4, %9
  %14 = phi %"class.std::vector"* [ %12, %9 ], [ null, %4 ]
  %15 = invoke %"class.std::vector"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt6vectorIiSaIiEEPS4_EET0_T_S9_S8_(%"class.std::vector"* %2, %"class.std::vector"* %3, %"class.std::vector"* %14)
          to label %16 unwind label %17

16:                                               ; preds = %13
  ret %"class.std::vector"* %14

17:                                               ; preds = %13
  %18 = landingpad { i8*, i32 }
          catch i8* null
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = tail call i8* @__cxa_begin_catch(i8* %19) #11
  %21 = icmp eq %"class.std::vector"* %14, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.std::vector"* %14 to i8*
  tail call void @_ZdlPv(i8* nonnull %23) #11
  br label %24

24:                                               ; preds = %22, %17
  invoke void @__cxa_rethrow() #13
          to label %31 unwind label %25

25:                                               ; preds = %24
  %26 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %27 unwind label %28

27:                                               ; preds = %25
  resume { i8*, i32 } %26

28:                                               ; preds = %25
  %29 = landingpad { i8*, i32 }
          catch i8* null
  %30 = extractvalue { i8*, i32 } %29, 0
  tail call void @__clang_call_terminate(i8* %30) #14
  unreachable

31:                                               ; preds = %24
  unreachable
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #10

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { noinline noreturn nounwind }
attributes #4 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #8 = { mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { argmemonly nofree nounwind willreturn writeonly }
attributes #10 = { argmemonly nofree nounwind willreturn }
attributes #11 = { nounwind }
attributes #12 = { allocsize(0) }
attributes #13 = { noreturn }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!4, !5, i64 16}
!9 = !{!4, !5, i64 8}
!10 = !{!11, !5, i64 0}
!11 = !{!"_ZTSNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!12 = !{!11, !5, i64 16}
!13 = !{!11, !5, i64 8}
!14 = !{!15, !15, i64 0}
!15 = !{!"int", !6, i64 0}
!16 = !{!5, !5, i64 0}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.mustprogress"}
!19 = distinct !{!19, !18}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !18}
!22 = distinct !{!22, !18}
!23 = distinct !{!23, !18}
!24 = distinct !{!24, !18}
!25 = distinct !{!25, !18}
!26 = distinct !{!26, !18}
!27 = distinct !{!27, !18}
