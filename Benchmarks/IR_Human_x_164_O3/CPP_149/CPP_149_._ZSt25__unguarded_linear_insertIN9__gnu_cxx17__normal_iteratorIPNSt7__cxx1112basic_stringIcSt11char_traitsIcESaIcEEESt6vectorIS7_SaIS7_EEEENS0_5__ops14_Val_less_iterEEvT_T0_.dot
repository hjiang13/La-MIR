digraph "CFG for '_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_less_iterEEvT_T0_' function" {
	label="CFG for '_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_less_iterEEvT_T0_' function";

	Node0x561b00765df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%1:\l  %2 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %3 = bitcast %\"class.std::__cxx11::basic_string\"* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #16\l  %4 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 2\l  %5 = bitcast %\"class.std::__cxx11::basic_string\"* %2 to %union.anon**\l  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !3\l  %6 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %7 = load i8*, i8** %6, align 8, !tbaa !8\l  %8 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2\l  %9 = bitcast %union.anon* %8 to i8*\l  %10 = icmp eq i8* %7, %9\l  br i1 %10, label %11, label %13\l|{<s0>T|<s1>F}}"];
	Node0x561b00765df0:s0 -> Node0x561b00765f90;
	Node0x561b00765df0:s1 -> Node0x561b00766330;
	Node0x561b00765f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%11:\l11:                                               \l  %12 = bitcast %union.anon* %4 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %12, i8* noundef nonnull align 8 dereferenceable(16) %7,\l... i64 16, i1 false) #16\l  br label %18\l}"];
	Node0x561b00765f90 -> Node0x561b00768470;
	Node0x561b00766330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%13:\l13:                                               \l  %14 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 0, i32 0\l  store i8* %7, i8** %14, align 8, !tbaa !8\l  %15 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2, i32 0\l  %16 = load i64, i64* %15, align 8, !tbaa !11\l  %17 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 2, i32 0\l  store i64 %16, i64* %17, align 8, !tbaa !11\l  br label %18\l}"];
	Node0x561b00766330 -> Node0x561b00768470;
	Node0x561b00768470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%18:\l18:                                               \l  %19 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  %20 = load i64, i64* %19, align 8, !tbaa !12\l  %21 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 1\l  store i64 %20, i64* %21, align 8, !tbaa !12\l  %22 = bitcast %\"class.std::__cxx11::basic_string\"* %0 to %union.anon**\l  store %union.anon* %8, %union.anon** %22, align 8, !tbaa !8\l  store i64 0, i64* %19, align 8, !tbaa !12\l  store i8 0, i8* %9, align 8, !tbaa !11\l  %23 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 0, i32 0\l  br label %24\l}"];
	Node0x561b00768470 -> Node0x561b00768ec0;
	Node0x561b00768ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i64 [ %20, %18 ], [ %88, %86 ]\l  %26 = phi %\"class.std::__cxx11::basic_string\"* [ %0, %18 ], [ %27, %86 ]\l  %27 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %26, i64 -1\l  %28 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %26, i64 -1, i32 1\l  %29 = load i64, i64* %28, align 8, !tbaa !12\l  %30 = icmp ugt i64 %25, %29\l  %31 = select i1 %30, i64 %29, i64 %25\l  %32 = icmp eq i64 %31, 0\l  br i1 %32, label %39, label %33\l|{<s0>T|<s1>F}}"];
	Node0x561b00768ec0:s0 -> Node0x561b00769470;
	Node0x561b00768ec0:s1 -> Node0x561b007694c0;
	Node0x561b007694c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%33:\l33:                                               \l  %34 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %27, i64 0, i32 0, i32 0\l  %35 = load i8*, i8** %34, align 8, !tbaa !8\l  %36 = load i8*, i8** %23, align 8, !tbaa !8\l  %37 = call i32 @memcmp(i8* %36, i8* %35, i64 %31) #16\l  %38 = icmp eq i32 %37, 0\l  br i1 %38, label %39, label %46\l|{<s0>T|<s1>F}}"];
	Node0x561b007694c0:s0 -> Node0x561b00769470;
	Node0x561b007694c0:s1 -> Node0x561b00769960;
	Node0x561b00769470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%39:\l39:                                               \l  %40 = sub i64 %25, %29\l  %41 = icmp sgt i64 %40, -2147483648\l  %42 = select i1 %41, i64 %40, i64 -2147483648\l  %43 = icmp slt i64 %42, 2147483647\l  %44 = select i1 %43, i64 %42, i64 2147483647\l  %45 = trunc i64 %44 to i32\l  br label %46\l}"];
	Node0x561b00769470 -> Node0x561b00769960;
	Node0x561b00769960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi i32 [ %37, %33 ], [ %45, %39 ]\l  %48 = icmp slt i32 %47, 0\l  %49 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %26, i64 0, i32 0, i32 0\l  br i1 %48, label %50, label %89\l|{<s0>T|<s1>F}}"];
	Node0x561b00769960:s0 -> Node0x561b0076a070;
	Node0x561b00769960:s1 -> Node0x561b0076a0c0;
	Node0x561b0076a070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %27, i64 0, i32 0, i32 0\l  %52 = load i8*, i8** %51, align 8, !tbaa !8\l  %53 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %26, i64 -1, i32 2\l  %54 = bitcast %union.anon* %53 to i8*\l  %55 = icmp eq i8* %52, %54\l  br i1 %55, label %56, label %70\l|{<s0>T|<s1>F}}"];
	Node0x561b0076a070:s0 -> Node0x561b0076a4d0;
	Node0x561b0076a070:s1 -> Node0x561b0076a520;
	Node0x561b0076a4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%56:\l56:                                               \l  %57 = icmp eq i64 %29, 0\l  br i1 %57, label %64, label %58\l|{<s0>T|<s1>F}}"];
	Node0x561b0076a4d0:s0 -> Node0x561b0076a6b0;
	Node0x561b0076a4d0:s1 -> Node0x561b0076a700;
	Node0x561b0076a700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%58:\l58:                                               \l  %59 = load i8*, i8** %49, align 8, !tbaa !8\l  %60 = icmp eq i64 %29, 1\l  br i1 %60, label %61, label %63\l|{<s0>T|<s1>F}}"];
	Node0x561b0076a700:s0 -> Node0x561b0076a900;
	Node0x561b0076a700:s1 -> Node0x561b0076a950;
	Node0x561b0076a900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%61:\l61:                                               \l  %62 = load i8, i8* %52, align 1, !tbaa !11\l  store i8 %62, i8* %59, align 1, !tbaa !11\l  br label %64\l}"];
	Node0x561b0076a900 -> Node0x561b0076a6b0;
	Node0x561b0076a950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%63:\l63:                                               \l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %52, i64\l... %29, i1 false) #16\l  br label %64\l}"];
	Node0x561b0076a950 -> Node0x561b0076a6b0;
	Node0x561b0076a6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%64:\l64:                                               \l  %65 = load i64, i64* %28, align 8, !tbaa !12\l  %66 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %26, i64 0, i32 1\l  store i64 %65, i64* %66, align 8, !tbaa !12\l  %67 = load i8*, i8** %49, align 8, !tbaa !8\l  %68 = getelementptr inbounds i8, i8* %67, i64 %65\l  store i8 0, i8* %68, align 1, !tbaa !11\l  %69 = load i8*, i8** %51, align 8, !tbaa !8\l  br label %86\l}"];
	Node0x561b0076a6b0 -> Node0x561b00768f80;
	Node0x561b0076a520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%70:\l70:                                               \l  %71 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %26, i64 0, i32 2\l  %72 = bitcast %union.anon* %71 to i8*\l  %73 = load i8*, i8** %49, align 8, !tbaa !8\l  %74 = icmp eq i8* %73, %72\l  %75 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %26, i64 0, i32 2, i32 0\l  %76 = load i64, i64* %75, align 8\l  store i8* %52, i8** %49, align 8, !tbaa !8\l  %77 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %26, i64 0, i32 1\l  store i64 %29, i64* %77, align 8, !tbaa !12\l  %78 = getelementptr %union.anon, %union.anon* %53, i64 0, i32 0\l  %79 = load i64, i64* %78, align 8, !tbaa !11\l  store i64 %79, i64* %75, align 8, !tbaa !11\l  %80 = icmp eq i8* %73, null\l  %81 = or i1 %74, %80\l  br i1 %81, label %84, label %82\l|{<s0>T|<s1>F}}"];
	Node0x561b0076a520:s0 -> Node0x561b0076ba20;
	Node0x561b0076a520:s1 -> Node0x561b0076ba70;
	Node0x561b0076ba70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%82:\l82:                                               \l  store i8* %73, i8** %51, align 8, !tbaa !8\l  %83 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %26, i64 -1, i32 2, i32 0\l  store i64 %76, i64* %83, align 8, !tbaa !11\l  br label %86\l}"];
	Node0x561b0076ba70 -> Node0x561b00768f80;
	Node0x561b0076ba20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%84:\l84:                                               \l  %85 = bitcast %\"class.std::__cxx11::basic_string\"* %27 to %union.anon**\l  store %union.anon* %53, %union.anon** %85, align 8, !tbaa !8\l  br label %86\l}"];
	Node0x561b0076ba20 -> Node0x561b00768f80;
	Node0x561b00768f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%86:\l86:                                               \l  %87 = phi i8* [ %69, %64 ], [ %73, %82 ], [ %54, %84 ]\l  store i64 0, i64* %28, align 8, !tbaa !12\l  store i8 0, i8* %87, align 1, !tbaa !11\l  %88 = load i64, i64* %21, align 8, !tbaa !12\l  br label %24, !llvm.loop !13\l}"];
	Node0x561b00768f80 -> Node0x561b00768ec0;
	Node0x561b0076a0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%89:\l89:                                               \l  %90 = load i8*, i8** %23, align 8, !tbaa !8\l  %91 = bitcast %union.anon* %4 to i8*\l  %92 = icmp eq i8* %90, %91\l  br i1 %92, label %93, label %107\l|{<s0>T|<s1>F}}"];
	Node0x561b0076a0c0:s0 -> Node0x561b0076c410;
	Node0x561b0076a0c0:s1 -> Node0x561b0076c460;
	Node0x561b0076c410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%93:\l93:                                               \l  %94 = icmp eq i64 %25, 0\l  br i1 %94, label %101, label %95\l|{<s0>T|<s1>F}}"];
	Node0x561b0076c410:s0 -> Node0x561b0076c5f0;
	Node0x561b0076c410:s1 -> Node0x561b0076c640;
	Node0x561b0076c640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%95:\l95:                                               \l  %96 = load i8*, i8** %49, align 8, !tbaa !8\l  %97 = icmp eq i64 %25, 1\l  br i1 %97, label %98, label %100\l|{<s0>T|<s1>F}}"];
	Node0x561b0076c640:s0 -> Node0x561b0076c840;
	Node0x561b0076c640:s1 -> Node0x561b0076c890;
	Node0x561b0076c840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%98:\l98:                                               \l  %99 = load i8, i8* %91, align 8, !tbaa !11\l  store i8 %99, i8* %96, align 1, !tbaa !11\l  br label %101\l}"];
	Node0x561b0076c840 -> Node0x561b0076c5f0;
	Node0x561b0076c890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%100:\l100:                                              \l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* nonnull align 8\l... %91, i64 %25, i1 false) #16\l  br label %101\l}"];
	Node0x561b0076c890 -> Node0x561b0076c5f0;
	Node0x561b0076c5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%101:\l101:                                              \l  %102 = load i64, i64* %21, align 8, !tbaa !12\l  %103 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %26, i64 0, i32 1\l  store i64 %102, i64* %103, align 8, !tbaa !12\l  %104 = load i8*, i8** %49, align 8, !tbaa !8\l  %105 = getelementptr inbounds i8, i8* %104, i64 %102\l  store i8 0, i8* %105, align 1, !tbaa !11\l  %106 = load i8*, i8** %23, align 8, !tbaa !8\l  br label %122\l}"];
	Node0x561b0076c5f0 -> Node0x561b0076d0d0;
	Node0x561b0076c460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%107:\l107:                                              \l  %108 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %26, i64 0, i32 2\l  %109 = bitcast %union.anon* %108 to i8*\l  %110 = load i8*, i8** %49, align 8, !tbaa !8\l  %111 = icmp eq i8* %110, %109\l  %112 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %26, i64 0, i32 2, i32 0\l  %113 = load i64, i64* %112, align 8\l  store i8* %90, i8** %49, align 8, !tbaa !8\l  %114 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %26, i64 0, i32 1\l  store i64 %25, i64* %114, align 8, !tbaa !12\l  %115 = getelementptr %union.anon, %union.anon* %4, i64 0, i32 0\l  %116 = load i64, i64* %115, align 8, !tbaa !11\l  store i64 %116, i64* %112, align 8, !tbaa !11\l  %117 = icmp eq i8* %110, null\l  %118 = or i1 %111, %117\l  br i1 %118, label %121, label %119\l|{<s0>T|<s1>F}}"];
	Node0x561b0076c460:s0 -> Node0x561b007396a0;
	Node0x561b0076c460:s1 -> Node0x561b007396f0;
	Node0x561b007396f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%119:\l119:                                              \l  store i8* %110, i8** %23, align 8, !tbaa !8\l  %120 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 2, i32 0\l  store i64 %113, i64* %120, align 8, !tbaa !11\l  br label %122\l}"];
	Node0x561b007396f0 -> Node0x561b0076d0d0;
	Node0x561b007396a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%121:\l121:                                              \l  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !8\l  br label %122\l}"];
	Node0x561b007396a0 -> Node0x561b0076d0d0;
	Node0x561b0076d0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%122:\l122:                                              \l  %123 = phi i8* [ %106, %101 ], [ %110, %119 ], [ %91, %121 ]\l  store i64 0, i64* %21, align 8, !tbaa !12\l  store i8 0, i8* %123, align 1, !tbaa !11\l  %124 = load i8*, i8** %23, align 8, !tbaa !8\l  %125 = icmp eq i8* %124, %91\l  br i1 %125, label %127, label %126\l|{<s0>T|<s1>F}}"];
	Node0x561b0076d0d0:s0 -> Node0x561b00739e50;
	Node0x561b0076d0d0:s1 -> Node0x561b00739ea0;
	Node0x561b00739ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%126:\l126:                                              \l  call void @_ZdlPv(i8* %124) #16\l  br label %127\l}"];
	Node0x561b00739ea0 -> Node0x561b00739e50;
	Node0x561b00739e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%127:\l127:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #16\l  ret void\l}"];
}
