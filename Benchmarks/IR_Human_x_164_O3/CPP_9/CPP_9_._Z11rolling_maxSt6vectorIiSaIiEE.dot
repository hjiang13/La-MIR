digraph "CFG for '_Z11rolling_maxSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z11rolling_maxSt6vectorIiSaIiEE' function";

	Node0x557804dca570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%2:\l  %3 = bitcast %\"class.std::vector\"* %0 to i8*\l  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %3, i8 0, i64 24, i1 false) #6\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %6 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %7 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %8 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %9 = load i32*, i32** %4, align 8, !tbaa !3\l  %10 = load i32*, i32** %5, align 8, !tbaa !8\l  %11 = icmp eq i32* %9, %10\l  br i1 %11, label %12, label %13\l|{<s0>T|<s1>F}}"];
	Node0x557804dca570:s0 -> Node0x557804dcb1b0;
	Node0x557804dca570:s1 -> Node0x557804dcc4b0;
	Node0x557804dcb1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%12:\l12:                                               \l  ret void\l}"];
	Node0x557804dcc4b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%13:\l13:                                               \l  %14 = phi i32* [ %67, %66 ], [ %10, %2 ]\l  %15 = phi i32* [ %68, %66 ], [ %9, %2 ]\l  %16 = phi i32* [ %69, %66 ], [ null, %2 ]\l  %17 = phi i32* [ %70, %66 ], [ null, %2 ]\l  %18 = phi i32* [ %71, %66 ], [ null, %2 ]\l  %19 = phi i64 [ %72, %66 ], [ 0, %2 ]\l  %20 = phi i32 [ %24, %66 ], [ 0, %2 ]\l  %21 = getelementptr inbounds i32, i32* %14, i64 %19\l  %22 = load i32, i32* %21, align 4, !tbaa !9\l  %23 = icmp sgt i32 %22, %20\l  %24 = select i1 %23, i32 %22, i32 %20\l  %25 = icmp eq i32* %18, %17\l  br i1 %25, label %28, label %26\l|{<s0>T|<s1>F}}"];
	Node0x557804dcc4b0:s0 -> Node0x557804dcd1c0;
	Node0x557804dcc4b0:s1 -> Node0x557804dcd210;
	Node0x557804dcd210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%26:\l26:                                               \l  store i32 %24, i32* %18, align 4, !tbaa !9\l  %27 = getelementptr inbounds i32, i32* %18, i64 1\l  store i32* %27, i32** %6, align 8, !tbaa !3\l  br label %66\l}"];
	Node0x557804dcd210 -> Node0x557804dcc670;
	Node0x557804dcd1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%28:\l28:                                               \l  %29 = ptrtoint i32* %17 to i64\l  %30 = ptrtoint i32* %16 to i64\l  %31 = sub i64 %29, %30\l  %32 = ashr exact i64 %31, 2\l  %33 = icmp eq i64 %31, 9223372036854775804\l  br i1 %33, label %34, label %36\l|{<s0>T|<s1>F}}"];
	Node0x557804dcd1c0:s0 -> Node0x557804dce6c0;
	Node0x557804dcd1c0:s1 -> Node0x557804dce710;
	Node0x557804dce6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%34:\l34:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #7\l          to label %35 unwind label %80\l}"];
	Node0x557804dce6c0 -> Node0x557804dce8d0;
	Node0x557804dce6c0 -> Node0x557804dce920;
	Node0x557804dce8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%35:\l35:                                               \l  unreachable\l}"];
	Node0x557804dce710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%36:\l36:                                               \l  %37 = icmp eq i64 %31, 0\l  %38 = select i1 %37, i64 1, i64 %32\l  %39 = add nsw i64 %38, %32\l  %40 = icmp ult i64 %39, %32\l  %41 = icmp ugt i64 %39, 2305843009213693951\l  %42 = or i1 %40, %41\l  %43 = select i1 %42, i64 2305843009213693951, i64 %39\l  %44 = icmp eq i64 %43, 0\l  br i1 %44, label %50, label %45\l|{<s0>T|<s1>F}}"];
	Node0x557804dce710:s0 -> Node0x557804dcf080;
	Node0x557804dce710:s1 -> Node0x557804dcf0d0;
	Node0x557804dcf0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%45:\l45:                                               \l  %46 = shl nuw nsw i64 %43, 2\l  %47 = invoke noalias nonnull i8* @_Znwm(i64 %46) #8\l          to label %48 unwind label %78\l}"];
	Node0x557804dcf0d0 -> Node0x557804dcf260;
	Node0x557804dcf0d0 -> Node0x557804dcf2b0;
	Node0x557804dcf260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%48:\l48:                                               \l  %49 = bitcast i8* %47 to i32*\l  br label %50\l}"];
	Node0x557804dcf260 -> Node0x557804dcf080;
	Node0x557804dcf080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%50:\l50:                                               \l  %51 = phi i32* [ %49, %48 ], [ null, %36 ]\l  %52 = getelementptr inbounds i32, i32* %51, i64 %32\l  store i32 %24, i32* %52, align 4, !tbaa !9\l  %53 = icmp sgt i64 %31, 0\l  br i1 %53, label %54, label %57\l|{<s0>T|<s1>F}}"];
	Node0x557804dcf080:s0 -> Node0x557804dcf870;
	Node0x557804dcf080:s1 -> Node0x557804dcf8c0;
	Node0x557804dcf870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%54:\l54:                                               \l  %55 = bitcast i32* %51 to i8*\l  %56 = bitcast i32* %16 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %56,\l... i64 %31, i1 false) #6\l  br label %57\l}"];
	Node0x557804dcf870 -> Node0x557804dcf8c0;
	Node0x557804dcf8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%57:\l57:                                               \l  %58 = getelementptr inbounds i32, i32* %52, i64 1\l  %59 = icmp eq i32* %16, null\l  br i1 %59, label %62, label %60\l|{<s0>T|<s1>F}}"];
	Node0x557804dcf8c0:s0 -> Node0x557804dcff50;
	Node0x557804dcf8c0:s1 -> Node0x557804dcffa0;
	Node0x557804dcffa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%60:\l60:                                               \l  %61 = bitcast i32* %16 to i8*\l  tail call void @_ZdlPv(i8* nonnull %61) #6\l  br label %62\l}"];
	Node0x557804dcffa0 -> Node0x557804dcff50;
	Node0x557804dcff50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%62:\l62:                                               \l  store i32* %51, i32** %8, align 8, !tbaa !8\l  store i32* %58, i32** %6, align 8, !tbaa !3\l  %63 = getelementptr inbounds i32, i32* %51, i64 %43\l  store i32* %63, i32** %7, align 8, !tbaa !11\l  %64 = load i32*, i32** %4, align 8, !tbaa !3\l  %65 = load i32*, i32** %5, align 8, !tbaa !8\l  br label %66\l}"];
	Node0x557804dcff50 -> Node0x557804dcc670;
	Node0x557804dcc670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  %67 = phi i32* [ %65, %62 ], [ %14, %26 ]\l  %68 = phi i32* [ %64, %62 ], [ %15, %26 ]\l  %69 = phi i32* [ %51, %62 ], [ %16, %26 ]\l  %70 = phi i32* [ %63, %62 ], [ %17, %26 ]\l  %71 = phi i32* [ %58, %62 ], [ %27, %26 ]\l  %72 = add nuw i64 %19, 1\l  %73 = ptrtoint i32* %68 to i64\l  %74 = ptrtoint i32* %67 to i64\l  %75 = sub i64 %73, %74\l  %76 = ashr exact i64 %75, 2\l  %77 = icmp ugt i64 %76, %72\l  br i1 %77, label %13, label %12, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x557804dcc670:s0 -> Node0x557804dcc4b0;
	Node0x557804dcc670:s1 -> Node0x557804dcb1b0;
	Node0x557804dcf2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%78:\l78:                                               \l  %79 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %82\l}"];
	Node0x557804dcf2b0 -> Node0x557804dd1a70;
	Node0x557804dce920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%80:\l80:                                               \l  %81 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %82\l}"];
	Node0x557804dce920 -> Node0x557804dd1a70;
	Node0x557804dd1a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%82:\l82:                                               \l  %83 = phi \{ i8*, i32 \} [ %79, %78 ], [ %81, %80 ]\l  %84 = icmp eq i32* %16, null\l  br i1 %84, label %87, label %85\l|{<s0>T|<s1>F}}"];
	Node0x557804dd1a70:s0 -> Node0x557804dd1d50;
	Node0x557804dd1a70:s1 -> Node0x557804dd1da0;
	Node0x557804dd1da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%85:\l85:                                               \l  %86 = bitcast i32* %16 to i8*\l  tail call void @_ZdlPv(i8* nonnull %86) #6\l  br label %87\l}"];
	Node0x557804dd1da0 -> Node0x557804dd1d50;
	Node0x557804dd1d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%87:\l87:                                               \l  resume \{ i8*, i32 \} %83\l}"];
}
