digraph "CFG for '_Z1fi' function" {
	label="CFG for '_Z1fi' function";

	Node0x562c8089ce10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %6 = icmp slt i32 %1, 1\l  %7 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %7, i8 0, i64 24, i1 false)\l  br i1 %6, label %117, label %8\l|{<s0>T|<s1>F}}"];
	Node0x562c8089ce10:s0 -> Node0x562c8089ddb0;
	Node0x562c8089ce10:s1 -> Node0x562c8089de00;
	Node0x562c8089de00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l8:                                                \l  %9 = phi i32* [ %111, %110 ], [ null, %2 ]\l  %10 = phi i32* [ %112, %110 ], [ null, %2 ]\l  %11 = phi i32* [ %113, %110 ], [ null, %2 ]\l  %12 = phi i32* [ %114, %110 ], [ null, %2 ]\l  %13 = phi i32 [ %115, %110 ], [ 1, %2 ]\l  %14 = phi i32 [ %17, %110 ], [ 1, %2 ]\l  %15 = phi i32 [ %16, %110 ], [ 0, %2 ]\l  %16 = add nuw nsw i32 %13, %15\l  %17 = mul nsw i32 %13, %14\l  %18 = and i32 %13, 1\l  %19 = icmp eq i32 %18, 0\l  br i1 %19, label %20, label %70\l|{<s0>T|<s1>F}}"];
	Node0x562c8089de00:s0 -> Node0x562c8089e930;
	Node0x562c8089de00:s1 -> Node0x562c8089e980;
	Node0x562c8089e930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%20:\l20:                                               \l  %21 = icmp eq i32* %12, %9\l  br i1 %21, label %24, label %22\l|{<s0>T|<s1>F}}"];
	Node0x562c8089e930:s0 -> Node0x562c8089eb10;
	Node0x562c8089e930:s1 -> Node0x562c8089eb60;
	Node0x562c8089eb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%22:\l22:                                               \l  store i32 %17, i32* %12, align 4, !tbaa !3\l  %23 = getelementptr inbounds i32, i32* %12, i64 1\l  store i32* %23, i32** %3, align 8, !tbaa !7\l  br label %110\l}"];
	Node0x562c8089eb60 -> Node0x562c8089d7e0;
	Node0x562c8089eb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%24:\l24:                                               \l  %25 = ptrtoint i32* %9 to i64\l  %26 = ptrtoint i32* %10 to i64\l  %27 = sub i64 %25, %26\l  %28 = ashr exact i64 %27, 2\l  %29 = icmp eq i64 %27, 9223372036854775804\l  br i1 %29, label %30, label %32\l|{<s0>T|<s1>F}}"];
	Node0x562c8089eb10:s0 -> Node0x562c8089fdc0;
	Node0x562c8089eb10:s1 -> Node0x562c8089fe10;
	Node0x562c8089fdc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%30:\l30:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #6\l          to label %31 unwind label %62\l}"];
	Node0x562c8089fdc0 -> Node0x562c808a0010;
	Node0x562c8089fdc0 -> Node0x562c808a0060;
	Node0x562c808a0010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%31:\l31:                                               \l  unreachable\l}"];
	Node0x562c8089fe10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%32:\l32:                                               \l  %33 = icmp eq i64 %27, 0\l  %34 = select i1 %33, i64 1, i64 %28\l  %35 = add nsw i64 %34, %28\l  %36 = icmp ult i64 %35, %28\l  %37 = icmp ugt i64 %35, 2305843009213693951\l  %38 = or i1 %36, %37\l  %39 = select i1 %38, i64 2305843009213693951, i64 %35\l  %40 = icmp eq i64 %39, 0\l  br i1 %40, label %46, label %41\l|{<s0>T|<s1>F}}"];
	Node0x562c8089fe10:s0 -> Node0x562c808a09d0;
	Node0x562c8089fe10:s1 -> Node0x562c808a0a20;
	Node0x562c808a0a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%41:\l41:                                               \l  %42 = shl nuw nsw i64 %39, 2\l  %43 = invoke noalias nonnull i8* @_Znwm(i64 %42) #7\l          to label %44 unwind label %60\l}"];
	Node0x562c808a0a20 -> Node0x562c808a0bb0;
	Node0x562c808a0a20 -> Node0x562c808a0c00;
	Node0x562c808a0bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%44:\l44:                                               \l  %45 = bitcast i8* %43 to i32*\l  br label %46\l}"];
	Node0x562c808a0bb0 -> Node0x562c808a09d0;
	Node0x562c808a09d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%46:\l46:                                               \l  %47 = phi i32* [ %45, %44 ], [ null, %32 ]\l  %48 = getelementptr inbounds i32, i32* %47, i64 %28\l  store i32 %17, i32* %48, align 4, !tbaa !3\l  %49 = icmp sgt i64 %27, 0\l  br i1 %49, label %50, label %53\l|{<s0>T|<s1>F}}"];
	Node0x562c808a09d0:s0 -> Node0x562c808a17d0;
	Node0x562c808a09d0:s1 -> Node0x562c808a1820;
	Node0x562c808a17d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%50:\l50:                                               \l  %51 = bitcast i32* %47 to i8*\l  %52 = bitcast i32* %10 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %52,\l... i64 %27, i1 false) #8\l  br label %53\l}"];
	Node0x562c808a17d0 -> Node0x562c808a1820;
	Node0x562c808a1820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%53:\l53:                                               \l  %54 = getelementptr inbounds i32, i32* %48, i64 1\l  %55 = icmp eq i32* %10, null\l  br i1 %55, label %58, label %56\l|{<s0>T|<s1>F}}"];
	Node0x562c808a1820:s0 -> Node0x562c808a1eb0;
	Node0x562c808a1820:s1 -> Node0x562c808a1f00;
	Node0x562c808a1f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%56:\l56:                                               \l  %57 = bitcast i32* %10 to i8*\l  tail call void @_ZdlPv(i8* nonnull %57) #8\l  br label %58\l}"];
	Node0x562c808a1f00 -> Node0x562c808a1eb0;
	Node0x562c808a1eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%58:\l58:                                               \l  store i32* %47, i32** %5, align 8, !tbaa !10\l  store i32* %54, i32** %3, align 8, !tbaa !7\l  %59 = getelementptr inbounds i32, i32* %47, i64 %39\l  store i32* %59, i32** %4, align 8, !tbaa !11\l  br label %110\l}"];
	Node0x562c808a1eb0 -> Node0x562c8089d7e0;
	Node0x562c808a0c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%60:\l60:                                               \l  %61 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %64\l}"];
	Node0x562c808a0c00 -> Node0x562c808a3030;
	Node0x562c808a0060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%62:\l62:                                               \l  %63 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %64\l}"];
	Node0x562c808a0060 -> Node0x562c808a3030;
	Node0x562c808a3030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%64:\l64:                                               \l  %65 = phi \{ i8*, i32 \} [ %61, %60 ], [ %63, %62 ]\l  %66 = icmp eq i32* %10, null\l  br i1 %66, label %69, label %67\l|{<s0>T|<s1>F}}"];
	Node0x562c808a3030:s0 -> Node0x562c808a3720;
	Node0x562c808a3030:s1 -> Node0x562c808a3770;
	Node0x562c808a3770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%67:\l67:                                               \l  %68 = bitcast i32* %10 to i8*\l  tail call void @_ZdlPv(i8* nonnull %68) #8\l  br label %69\l}"];
	Node0x562c808a3770 -> Node0x562c808a3720;
	Node0x562c808a3720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%69:\l69:                                               \l  resume \{ i8*, i32 \} %65\l}"];
	Node0x562c8089e980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%70:\l70:                                               \l  %71 = icmp eq i32* %12, %11\l  br i1 %71, label %74, label %72\l|{<s0>T|<s1>F}}"];
	Node0x562c8089e980:s0 -> Node0x562c808a3b80;
	Node0x562c8089e980:s1 -> Node0x562c808a3bd0;
	Node0x562c808a3bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%72:\l72:                                               \l  store i32 %16, i32* %12, align 4, !tbaa !3\l  %73 = getelementptr inbounds i32, i32* %12, i64 1\l  store i32* %73, i32** %3, align 8, !tbaa !7\l  br label %110\l}"];
	Node0x562c808a3bd0 -> Node0x562c8089d7e0;
	Node0x562c808a3b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%74:\l74:                                               \l  %75 = ptrtoint i32* %11 to i64\l  %76 = ptrtoint i32* %10 to i64\l  %77 = sub i64 %75, %76\l  %78 = ashr exact i64 %77, 2\l  %79 = icmp eq i64 %77, 9223372036854775804\l  br i1 %79, label %80, label %82\l|{<s0>T|<s1>F}}"];
	Node0x562c808a3b80:s0 -> Node0x562c808a4190;
	Node0x562c808a3b80:s1 -> Node0x562c808a41e0;
	Node0x562c808a4190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%80:\l80:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #6\l          to label %81 unwind label %62\l}"];
	Node0x562c808a4190 -> Node0x562c808a4310;
	Node0x562c808a4190 -> Node0x562c808a0060;
	Node0x562c808a4310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%81:\l81:                                               \l  unreachable\l}"];
	Node0x562c808a41e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%82:\l82:                                               \l  %83 = icmp eq i64 %77, 0\l  %84 = select i1 %83, i64 1, i64 %78\l  %85 = add nsw i64 %84, %78\l  %86 = icmp ult i64 %85, %78\l  %87 = icmp ugt i64 %85, 2305843009213693951\l  %88 = or i1 %86, %87\l  %89 = select i1 %88, i64 2305843009213693951, i64 %85\l  %90 = icmp eq i64 %89, 0\l  br i1 %90, label %96, label %91\l|{<s0>T|<s1>F}}"];
	Node0x562c808a41e0:s0 -> Node0x562c808a4910;
	Node0x562c808a41e0:s1 -> Node0x562c808a4960;
	Node0x562c808a4960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%91:\l91:                                               \l  %92 = shl nuw nsw i64 %89, 2\l  %93 = invoke noalias nonnull i8* @_Znwm(i64 %92) #7\l          to label %94 unwind label %60\l}"];
	Node0x562c808a4960 -> Node0x562c808a4af0;
	Node0x562c808a4960 -> Node0x562c808a0c00;
	Node0x562c808a4af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%94:\l94:                                               \l  %95 = bitcast i8* %93 to i32*\l  br label %96\l}"];
	Node0x562c808a4af0 -> Node0x562c808a4910;
	Node0x562c808a4910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%96:\l96:                                               \l  %97 = phi i32* [ %95, %94 ], [ null, %82 ]\l  %98 = getelementptr inbounds i32, i32* %97, i64 %78\l  store i32 %16, i32* %98, align 4, !tbaa !3\l  %99 = icmp sgt i64 %77, 0\l  br i1 %99, label %100, label %103\l|{<s0>T|<s1>F}}"];
	Node0x562c808a4910:s0 -> Node0x562c808a4f00;
	Node0x562c808a4910:s1 -> Node0x562c808a4f50;
	Node0x562c808a4f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%100:\l100:                                              \l  %101 = bitcast i32* %97 to i8*\l  %102 = bitcast i32* %10 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4\l... %102, i64 %77, i1 false) #8\l  br label %103\l}"];
	Node0x562c808a4f00 -> Node0x562c808a4f50;
	Node0x562c808a4f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%103:\l103:                                              \l  %104 = getelementptr inbounds i32, i32* %98, i64 1\l  %105 = icmp eq i32* %10, null\l  br i1 %105, label %108, label %106\l|{<s0>T|<s1>F}}"];
	Node0x562c808a4f50:s0 -> Node0x562c808a5460;
	Node0x562c808a4f50:s1 -> Node0x562c808a54b0;
	Node0x562c808a54b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%106:\l106:                                              \l  %107 = bitcast i32* %10 to i8*\l  tail call void @_ZdlPv(i8* nonnull %107) #8\l  br label %108\l}"];
	Node0x562c808a54b0 -> Node0x562c808a5460;
	Node0x562c808a5460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%108:\l108:                                              \l  store i32* %97, i32** %5, align 8, !tbaa !10\l  store i32* %104, i32** %3, align 8, !tbaa !7\l  %109 = getelementptr inbounds i32, i32* %97, i64 %89\l  store i32* %109, i32** %4, align 8, !tbaa !11\l  br label %110\l}"];
	Node0x562c808a5460 -> Node0x562c8089d7e0;
	Node0x562c8089d7e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%110:\l110:                                              \l  %111 = phi i32* [ %109, %108 ], [ %9, %72 ], [ %59, %58 ], [ %9, %22 ]\l  %112 = phi i32* [ %97, %108 ], [ %10, %72 ], [ %47, %58 ], [ %10, %22 ]\l  %113 = phi i32* [ %109, %108 ], [ %11, %72 ], [ %59, %58 ], [ %9, %22 ]\l  %114 = phi i32* [ %104, %108 ], [ %73, %72 ], [ %54, %58 ], [ %23, %22 ]\l  %115 = add nuw i32 %13, 1\l  %116 = icmp eq i32 %13, %1\l  br i1 %116, label %117, label %8, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x562c8089d7e0:s0 -> Node0x562c8089ddb0;
	Node0x562c8089d7e0:s1 -> Node0x562c8089de00;
	Node0x562c8089ddb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%117:\l117:                                              \l  ret void\l}"];
}
