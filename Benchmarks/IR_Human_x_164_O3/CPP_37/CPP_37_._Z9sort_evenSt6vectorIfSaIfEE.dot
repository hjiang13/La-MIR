digraph "CFG for '_Z9sort_evenSt6vectorIfSaIfEE' function" {
	label="CFG for '_Z9sort_evenSt6vectorIfSaIfEE' function";

	Node0x56092185f640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %5, i8 0, i64 24, i1 false)\l  %6 = load float*, float** %3, align 8, !tbaa !3\l  %7 = load float*, float** %4, align 8, !tbaa !8\l  %8 = icmp eq float* %6, %7\l  br i1 %8, label %103, label %30\l|{<s0>T|<s1>F}}"];
	Node0x56092185f640:s0 -> Node0x56092185ffb0;
	Node0x56092185f640:s1 -> Node0x560921861200;
	Node0x560921861340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%9:\l9:                                                \l  %10 = icmp eq float* %83, %86\l  br i1 %10, label %23, label %11\l|{<s0>T|<s1>F}}"];
	Node0x560921861340:s0 -> Node0x5609218614d0;
	Node0x560921861340:s1 -> Node0x560921861560;
	Node0x560921861560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%11:\l11:                                               \l  %12 = ptrtoint float* %86 to i64\l  %13 = ptrtoint float* %83 to i64\l  %14 = sub i64 %12, %13\l  %15 = ashr exact i64 %14, 2\l  %16 = tail call i64 @llvm.ctlz.i64(i64 %15, i1 true) #8, !range !9\l  %17 = shl nuw nsw i64 %16, 1\l  %18 = xor i64 %17, 126\l  invoke void\l... @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEElN\l...S0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(float* %83, float* nonnull %86, i64\l... %18)\l          to label %19 unwind label %104\l}"];
	Node0x560921861560 -> Node0x560921861e00;
	Node0x560921861560 -> Node0x560921861e90;
	Node0x560921861e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%19:\l19:                                               \l  invoke void\l... @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIf\l...EEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(float* %83, float* nonnull %86)\l          to label %20 unwind label %104\l}"];
	Node0x560921861e00 -> Node0x560921862250;
	Node0x560921861e00 -> Node0x560921861e90;
	Node0x560921862250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%20:\l20:                                               \l  %21 = load float*, float** %3, align 8, !tbaa !3\l  %22 = load float*, float** %4, align 8, !tbaa !8\l  br label %23\l}"];
	Node0x560921862250 -> Node0x5609218614d0;
	Node0x5609218614d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%23:\l23:                                               \l  %24 = phi float* [ %22, %20 ], [ %81, %9 ]\l  %25 = phi float* [ %21, %20 ], [ %82, %9 ]\l  %26 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %27 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %28 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %29 = icmp eq float* %25, %24\l  br i1 %29, label %99, label %106\l|{<s0>T|<s1>F}}"];
	Node0x5609218614d0:s0 -> Node0x5609218638e0;
	Node0x5609218614d0:s1 -> Node0x560921863970;
	Node0x560921861200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi float* [ %81, %80 ], [ %7, %2 ]\l  %32 = phi float* [ %82, %80 ], [ %6, %2 ]\l  %33 = phi i64 [ %87, %80 ], [ 0, %2 ]\l  %34 = phi i64 [ %89, %80 ], [ 0, %2 ]\l  %35 = phi float* [ %85, %80 ], [ null, %2 ]\l  %36 = phi float* [ %86, %80 ], [ null, %2 ]\l  %37 = phi float* [ %83, %80 ], [ null, %2 ]\l  %38 = getelementptr inbounds float, float* %31, i64 %34\l  %39 = icmp eq float* %36, %35\l  br i1 %39, label %42, label %40\l|{<s0>T|<s1>F}}"];
	Node0x560921861200:s0 -> Node0x560921864460;
	Node0x560921861200:s1 -> Node0x5609218644f0;
	Node0x5609218644f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%40:\l40:                                               \l  %41 = load float, float* %38, align 4, !tbaa !10\l  store float %41, float* %36, align 4, !tbaa !10\l  br label %80\l}"];
	Node0x5609218644f0 -> Node0x560921863ab0;
	Node0x560921864460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%42:\l42:                                               \l  %43 = ptrtoint float* %35 to i64\l  %44 = ptrtoint float* %37 to i64\l  %45 = sub i64 %43, %44\l  %46 = ashr exact i64 %45, 2\l  %47 = icmp eq i64 %45, 9223372036854775804\l  br i1 %47, label %48, label %50\l|{<s0>T|<s1>F}}"];
	Node0x560921864460:s0 -> Node0x5609218650d0;
	Node0x560921864460:s1 -> Node0x560921865120;
	Node0x5609218650d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%48:\l48:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #9\l          to label %49 unwind label %97\l}"];
	Node0x5609218650d0 -> Node0x560921865320;
	Node0x5609218650d0 -> Node0x560921865370;
	Node0x560921865320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%49:\l49:                                               \l  unreachable\l}"];
	Node0x560921865120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%50:\l50:                                               \l  %51 = icmp eq i64 %45, 0\l  %52 = select i1 %51, i64 1, i64 %46\l  %53 = add nsw i64 %52, %46\l  %54 = icmp ult i64 %53, %46\l  %55 = icmp ugt i64 %53, 2305843009213693951\l  %56 = or i1 %54, %55\l  %57 = select i1 %56, i64 2305843009213693951, i64 %53\l  %58 = icmp eq i64 %57, 0\l  br i1 %58, label %64, label %59\l|{<s0>T|<s1>F}}"];
	Node0x560921865120:s0 -> Node0x560921865ad0;
	Node0x560921865120:s1 -> Node0x560921865b20;
	Node0x560921865b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%59:\l59:                                               \l  %60 = shl nuw nsw i64 %57, 2\l  %61 = invoke noalias nonnull i8* @_Znwm(i64 %60) #10\l          to label %62 unwind label %95\l}"];
	Node0x560921865b20 -> Node0x560921865cb0;
	Node0x560921865b20 -> Node0x560921865d00;
	Node0x560921865cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%62:\l62:                                               \l  %63 = bitcast i8* %61 to float*\l  br label %64\l}"];
	Node0x560921865cb0 -> Node0x560921865ad0;
	Node0x560921865ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%64:\l64:                                               \l  %65 = phi float* [ %63, %62 ], [ null, %50 ]\l  %66 = getelementptr inbounds float, float* %65, i64 %46\l  %67 = load float, float* %38, align 4, !tbaa !10\l  store float %67, float* %66, align 4, !tbaa !10\l  %68 = icmp sgt i64 %45, 0\l  br i1 %68, label %69, label %72\l|{<s0>T|<s1>F}}"];
	Node0x560921865ad0:s0 -> Node0x560921866740;
	Node0x560921865ad0:s1 -> Node0x560921866790;
	Node0x560921866740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%69:\l69:                                               \l  %70 = bitcast float* %65 to i8*\l  %71 = bitcast float* %37 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %70, i8* align 4 %71,\l... i64 %45, i1 false) #8\l  br label %72\l}"];
	Node0x560921866740 -> Node0x560921866790;
	Node0x560921866790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%72:\l72:                                               \l  %73 = icmp eq float* %37, null\l  br i1 %73, label %76, label %74\l|{<s0>T|<s1>F}}"];
	Node0x560921866790:s0 -> Node0x560921866d80;
	Node0x560921866790:s1 -> Node0x560921866dd0;
	Node0x560921866dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%74:\l74:                                               \l  %75 = bitcast float* %37 to i8*\l  tail call void @_ZdlPv(i8* nonnull %75) #8\l  br label %76\l}"];
	Node0x560921866dd0 -> Node0x560921866d80;
	Node0x560921866d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%76:\l76:                                               \l  %77 = getelementptr inbounds float, float* %65, i64 %57\l  %78 = load float*, float** %3, align 8, !tbaa !3\l  %79 = load float*, float** %4, align 8, !tbaa !8\l  br label %80\l}"];
	Node0x560921866d80 -> Node0x560921863ab0;
	Node0x560921863ab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  %81 = phi float* [ %79, %76 ], [ %31, %40 ]\l  %82 = phi float* [ %78, %76 ], [ %32, %40 ]\l  %83 = phi float* [ %65, %76 ], [ %37, %40 ]\l  %84 = phi float* [ %66, %76 ], [ %36, %40 ]\l  %85 = phi float* [ %77, %76 ], [ %35, %40 ]\l  %86 = getelementptr inbounds float, float* %84, i64 1\l  %87 = add nuw i64 %33, 1\l  %88 = shl i64 %87, 1\l  %89 = and i64 %88, 4294967294\l  %90 = ptrtoint float* %82 to i64\l  %91 = ptrtoint float* %81 to i64\l  %92 = sub i64 %90, %91\l  %93 = ashr exact i64 %92, 2\l  %94 = icmp ugt i64 %93, %89\l  br i1 %94, label %30, label %9, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x560921863ab0:s0 -> Node0x560921861200;
	Node0x560921863ab0:s1 -> Node0x560921861340;
	Node0x560921865d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%95:\l95:                                               \l  %96 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %220\l}"];
	Node0x560921865d00 -> Node0x560921867db0;
	Node0x560921865370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%97:\l97:                                               \l  %98 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %220\l}"];
	Node0x560921865370 -> Node0x560921867db0;
	Node0x5609218638e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%99:\l99:                                               \l  %100 = icmp eq float* %83, null\l  br i1 %100, label %103, label %101\l|{<s0>T|<s1>F}}"];
	Node0x5609218638e0:s0 -> Node0x56092185ffb0;
	Node0x5609218638e0:s1 -> Node0x560921867fe0;
	Node0x560921867fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%101:\l101:                                              \l  %102 = bitcast float* %83 to i8*\l  tail call void @_ZdlPv(i8* nonnull %102) #8\l  br label %103\l}"];
	Node0x560921867fe0 -> Node0x56092185ffb0;
	Node0x56092185ffb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%103:\l103:                                              \l  ret void\l}"];
	Node0x560921861e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%104:\l104:                                              \l  %105 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %220\l}"];
	Node0x560921861e90 -> Node0x560921867db0;
	Node0x560921863970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%106:\l106:                                              \l  %107 = phi float* [ %208, %207 ], [ null, %23 ]\l  %108 = phi float* [ %209, %207 ], [ null, %23 ]\l  %109 = phi float* [ %210, %207 ], [ null, %23 ]\l  %110 = phi float* [ %211, %207 ], [ null, %23 ]\l  %111 = phi float* [ %214, %207 ], [ %24, %23 ]\l  %112 = phi i64 [ %212, %207 ], [ 0, %23 ]\l  %113 = and i64 %112, 1\l  %114 = icmp eq i64 %113, 0\l  br i1 %114, label %115, label %164\l|{<s0>T|<s1>F}}"];
	Node0x560921863970:s0 -> Node0x560921868990;
	Node0x560921863970:s1 -> Node0x5609218689e0;
	Node0x560921868990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%115:\l115:                                              \l  %116 = lshr i64 %112, 1\l  %117 = and i64 %116, 2147483647\l  %118 = getelementptr inbounds float, float* %83, i64 %117\l  %119 = icmp eq float* %110, %107\l  br i1 %119, label %123, label %120\l|{<s0>T|<s1>F}}"];
	Node0x560921868990:s0 -> Node0x560921868d60;
	Node0x560921868990:s1 -> Node0x560921868db0;
	Node0x560921868db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%120:\l120:                                              \l  %121 = load float, float* %118, align 4, !tbaa !10\l  store float %121, float* %110, align 4, !tbaa !10\l  %122 = getelementptr inbounds float, float* %110, i64 1\l  store float* %122, float** %26, align 8, !tbaa !3\l  br label %207\l}"];
	Node0x560921868db0 -> Node0x560921868400;
	Node0x560921868d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%123:\l123:                                              \l  %124 = ptrtoint float* %107 to i64\l  %125 = ptrtoint float* %108 to i64\l  %126 = sub i64 %124, %125\l  %127 = ashr exact i64 %126, 2\l  %128 = icmp eq i64 %126, 9223372036854775804\l  br i1 %128, label %129, label %131\l|{<s0>T|<s1>F}}"];
	Node0x560921868d60:s0 -> Node0x560921869c10;
	Node0x560921868d60:s1 -> Node0x560921869c60;
	Node0x560921869c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%129:\l129:                                              \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #9\l          to label %130 unwind label %162\l}"];
	Node0x560921869c10 -> Node0x560921869d90;
	Node0x560921869c10 -> Node0x560921869de0;
	Node0x560921869d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%130:\l130:                                              \l  unreachable\l}"];
	Node0x560921869c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%131:\l131:                                              \l  %132 = icmp eq i64 %126, 0\l  %133 = select i1 %132, i64 1, i64 %127\l  %134 = add nsw i64 %133, %127\l  %135 = icmp ult i64 %134, %127\l  %136 = icmp ugt i64 %134, 2305843009213693951\l  %137 = or i1 %135, %136\l  %138 = select i1 %137, i64 2305843009213693951, i64 %134\l  %139 = icmp eq i64 %138, 0\l  br i1 %139, label %145, label %140\l|{<s0>T|<s1>F}}"];
	Node0x560921869c60:s0 -> Node0x56092186a3e0;
	Node0x560921869c60:s1 -> Node0x56092186a430;
	Node0x56092186a430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%140:\l140:                                              \l  %141 = shl nuw nsw i64 %138, 2\l  %142 = invoke noalias nonnull i8* @_Znwm(i64 %141) #10\l          to label %143 unwind label %160\l}"];
	Node0x56092186a430 -> Node0x56092186a5c0;
	Node0x56092186a430 -> Node0x56092186a610;
	Node0x56092186a5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%143:\l143:                                              \l  %144 = bitcast i8* %142 to float*\l  br label %145\l}"];
	Node0x56092186a5c0 -> Node0x56092186a3e0;
	Node0x56092186a3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%145:\l145:                                              \l  %146 = phi float* [ %144, %143 ], [ null, %131 ]\l  %147 = getelementptr inbounds float, float* %146, i64 %127\l  %148 = load float, float* %118, align 4, !tbaa !10\l  store float %148, float* %147, align 4, !tbaa !10\l  %149 = icmp sgt i64 %126, 0\l  br i1 %149, label %150, label %153\l|{<s0>T|<s1>F}}"];
	Node0x56092186a3e0:s0 -> Node0x56092186aa90;
	Node0x56092186a3e0:s1 -> Node0x56092186aae0;
	Node0x56092186aa90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%150:\l150:                                              \l  %151 = bitcast float* %146 to i8*\l  %152 = bitcast float* %108 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %151, i8* align 4\l... %152, i64 %126, i1 false) #8\l  br label %153\l}"];
	Node0x56092186aa90 -> Node0x56092186aae0;
	Node0x56092186aae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%153:\l153:                                              \l  %154 = getelementptr inbounds float, float* %147, i64 1\l  %155 = icmp eq float* %108, null\l  br i1 %155, label %158, label %156\l|{<s0>T|<s1>F}}"];
	Node0x56092186aae0:s0 -> Node0x56092186aff0;
	Node0x56092186aae0:s1 -> Node0x56092186b040;
	Node0x56092186b040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%156:\l156:                                              \l  %157 = bitcast float* %108 to i8*\l  tail call void @_ZdlPv(i8* nonnull %157) #8\l  br label %158\l}"];
	Node0x56092186b040 -> Node0x56092186aff0;
	Node0x56092186aff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%158:\l158:                                              \l  store float* %146, float** %28, align 8, !tbaa !8\l  store float* %154, float** %26, align 8, !tbaa !3\l  %159 = getelementptr inbounds float, float* %146, i64 %138\l  store float* %159, float** %27, align 8, !tbaa !14\l  br label %207\l}"];
	Node0x56092186aff0 -> Node0x560921868400;
	Node0x56092186a610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%160:\l160:                                              \l  %161 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %220\l}"];
	Node0x56092186a610 -> Node0x560921867db0;
	Node0x560921869de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%162:\l162:                                              \l  %163 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %220\l}"];
	Node0x560921869de0 -> Node0x560921867db0;
	Node0x5609218689e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%164:\l164:                                              \l  %165 = getelementptr inbounds float, float* %111, i64 %112\l  %166 = icmp eq float* %110, %109\l  br i1 %166, label %170, label %167\l|{<s0>T|<s1>F}}"];
	Node0x5609218689e0:s0 -> Node0x56092186b940;
	Node0x5609218689e0:s1 -> Node0x56092186b990;
	Node0x56092186b990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%167:\l167:                                              \l  %168 = load float, float* %165, align 4, !tbaa !10\l  store float %168, float* %110, align 4, !tbaa !10\l  %169 = getelementptr inbounds float, float* %110, i64 1\l  store float* %169, float** %26, align 8, !tbaa !3\l  br label %207\l}"];
	Node0x56092186b990 -> Node0x560921868400;
	Node0x56092186b940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%170:\l170:                                              \l  %171 = ptrtoint float* %109 to i64\l  %172 = ptrtoint float* %108 to i64\l  %173 = sub i64 %171, %172\l  %174 = ashr exact i64 %173, 2\l  %175 = icmp eq i64 %173, 9223372036854775804\l  br i1 %175, label %176, label %178\l|{<s0>T|<s1>F}}"];
	Node0x56092186b940:s0 -> Node0x56092186bfe0;
	Node0x56092186b940:s1 -> Node0x56092186c030;
	Node0x56092186bfe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%176:\l176:                                              \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #9\l          to label %177 unwind label %162\l}"];
	Node0x56092186bfe0 -> Node0x56092186c130;
	Node0x56092186bfe0 -> Node0x560921869de0;
	Node0x56092186c130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%177:\l177:                                              \l  unreachable\l}"];
	Node0x56092186c030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%178:\l178:                                              \l  %179 = icmp eq i64 %173, 0\l  %180 = select i1 %179, i64 1, i64 %174\l  %181 = add nsw i64 %180, %174\l  %182 = icmp ult i64 %181, %174\l  %183 = icmp ugt i64 %181, 2305843009213693951\l  %184 = or i1 %182, %183\l  %185 = select i1 %184, i64 2305843009213693951, i64 %181\l  %186 = icmp eq i64 %185, 0\l  br i1 %186, label %192, label %187\l|{<s0>T|<s1>F}}"];
	Node0x56092186c030:s0 -> Node0x56092186c7e0;
	Node0x56092186c030:s1 -> Node0x56092186c830;
	Node0x56092186c830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%187:\l187:                                              \l  %188 = shl nuw nsw i64 %185, 2\l  %189 = invoke noalias nonnull i8* @_Znwm(i64 %188) #10\l          to label %190 unwind label %160\l}"];
	Node0x56092186c830 -> Node0x56092186c9c0;
	Node0x56092186c830 -> Node0x56092186a610;
	Node0x56092186c9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%190:\l190:                                              \l  %191 = bitcast i8* %189 to float*\l  br label %192\l}"];
	Node0x56092186c9c0 -> Node0x56092186c7e0;
	Node0x56092186c7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%192:\l192:                                              \l  %193 = phi float* [ %191, %190 ], [ null, %178 ]\l  %194 = getelementptr inbounds float, float* %193, i64 %174\l  %195 = load float, float* %165, align 4, !tbaa !10\l  store float %195, float* %194, align 4, !tbaa !10\l  %196 = icmp sgt i64 %173, 0\l  br i1 %196, label %197, label %200\l|{<s0>T|<s1>F}}"];
	Node0x56092186c7e0:s0 -> Node0x56092186cf20;
	Node0x56092186c7e0:s1 -> Node0x56092186cf70;
	Node0x56092186cf20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%197:\l197:                                              \l  %198 = bitcast float* %193 to i8*\l  %199 = bitcast float* %108 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %198, i8* align 4\l... %199, i64 %173, i1 false) #8\l  br label %200\l}"];
	Node0x56092186cf20 -> Node0x56092186cf70;
	Node0x56092186cf70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%200:\l200:                                              \l  %201 = getelementptr inbounds float, float* %194, i64 1\l  %202 = icmp eq float* %108, null\l  br i1 %202, label %205, label %203\l|{<s0>T|<s1>F}}"];
	Node0x56092186cf70:s0 -> Node0x56092186d480;
	Node0x56092186cf70:s1 -> Node0x56092186d4d0;
	Node0x56092186d4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%203:\l203:                                              \l  %204 = bitcast float* %108 to i8*\l  tail call void @_ZdlPv(i8* nonnull %204) #8\l  br label %205\l}"];
	Node0x56092186d4d0 -> Node0x56092186d480;
	Node0x56092186d480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%205:\l205:                                              \l  store float* %193, float** %28, align 8, !tbaa !8\l  store float* %201, float** %26, align 8, !tbaa !3\l  %206 = getelementptr inbounds float, float* %193, i64 %185\l  store float* %206, float** %27, align 8, !tbaa !14\l  br label %207\l}"];
	Node0x56092186d480 -> Node0x560921868400;
	Node0x560921868400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%207:\l207:                                              \l  %208 = phi float* [ %206, %205 ], [ %107, %167 ], [ %107, %120 ], [ %159,\l... %158 ]\l  %209 = phi float* [ %193, %205 ], [ %108, %167 ], [ %108, %120 ], [ %146,\l... %158 ]\l  %210 = phi float* [ %206, %205 ], [ %109, %167 ], [ %107, %120 ], [ %159,\l... %158 ]\l  %211 = phi float* [ %201, %205 ], [ %169, %167 ], [ %122, %120 ], [ %154,\l... %158 ]\l  %212 = add nuw i64 %112, 1\l  %213 = load float*, float** %3, align 8, !tbaa !3\l  %214 = load float*, float** %4, align 8, !tbaa !8\l  %215 = ptrtoint float* %213 to i64\l  %216 = ptrtoint float* %214 to i64\l  %217 = sub i64 %215, %216\l  %218 = ashr exact i64 %217, 2\l  %219 = icmp ugt i64 %218, %212\l  br i1 %219, label %106, label %99, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x560921868400:s0 -> Node0x560921863970;
	Node0x560921868400:s1 -> Node0x5609218638e0;
	Node0x560921867db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%220:\l220:                                              \l  %221 = phi float* [ null, %104 ], [ null, %95 ], [ null, %97 ], [ %108, %160\l... ], [ %108, %162 ]\l  %222 = phi float* [ %83, %104 ], [ %37, %95 ], [ %37, %97 ], [ %83, %160 ],\l... [ %83, %162 ]\l  %223 = phi \{ i8*, i32 \} [ %105, %104 ], [ %96, %95 ], [ %98, %97 ], [ %161,\l... %160 ], [ %163, %162 ]\l  %224 = icmp eq float* %222, null\l  br i1 %224, label %227, label %225\l|{<s0>T|<s1>F}}"];
	Node0x560921867db0:s0 -> Node0x56092186ed90;
	Node0x560921867db0:s1 -> Node0x56092186ede0;
	Node0x56092186ede0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%225:\l225:                                              \l  %226 = bitcast float* %222 to i8*\l  tail call void @_ZdlPv(i8* nonnull %226) #8\l  br label %227\l}"];
	Node0x56092186ede0 -> Node0x56092186ed90;
	Node0x56092186ed90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%227:\l227:                                              \l  %228 = icmp eq float* %221, null\l  br i1 %228, label %231, label %229\l|{<s0>T|<s1>F}}"];
	Node0x56092186ed90:s0 -> Node0x56092186f180;
	Node0x56092186ed90:s1 -> Node0x56092186f1d0;
	Node0x56092186f1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%229:\l229:                                              \l  %230 = bitcast float* %221 to i8*\l  tail call void @_ZdlPv(i8* nonnull %230) #8\l  br label %231\l}"];
	Node0x56092186f1d0 -> Node0x56092186f180;
	Node0x56092186f180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%231:\l231:                                              \l  resume \{ i8*, i32 \} %223\l}"];
}
