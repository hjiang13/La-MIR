; ModuleID = '../../Human_xBenchmarks_164/CPP_89/CPP_89.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_89/CPP_89.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: uwtable
define dso_local void @_Z7encryptNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !3
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %7, align 8, !tbaa !8
  %8 = bitcast %union.anon* %5 to i8*
  store i8 0, i8* %8, align 8, !tbaa !11
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %11 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %15 = bitcast i64* %3 to i8*
  %16 = bitcast %union.anon* %12 to i8*
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %21 = load i64, i64* %9, align 8, !tbaa !8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %105, label %23

23:                                               ; preds = %2
  %24 = bitcast i64* %19 to <2 x i64>*
  %25 = bitcast i64* %7 to <2 x i64>*
  br label %26

26:                                               ; preds = %23, %94
  %27 = phi i64 [ %96, %94 ], [ 0, %23 ]
  %28 = phi i8* [ %95, %94 ], [ %8, %23 ]
  %29 = phi i64 [ %91, %94 ], [ 0, %23 ]
  %30 = load i8*, i8** %10, align 8, !tbaa !12
  %31 = getelementptr inbounds i8, i8* %30, i64 %29
  %32 = load i8, i8* %31, align 1, !tbaa !11
  %33 = sext i8 %32 to i16
  %34 = add nsw i16 %33, -93
  %35 = srem i16 %34, 26
  %36 = trunc i16 %35 to i8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #6
  %37 = add nsw i8 %36, 97
  call void @llvm.experimental.noalias.scope.decl(metadata !13)
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3, !alias.scope !13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6, !noalias !13
  store i64 %27, i64* %3, align 8, !tbaa !16, !noalias !13
  %38 = icmp ugt i64 %27, 15
  br i1 %38, label %39, label %43

39:                                               ; preds = %26
  %40 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %4, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %41 unwind label %97

41:                                               ; preds = %39
  store i8* %40, i8** %17, align 8, !tbaa !12, !alias.scope !13
  %42 = load i64, i64* %3, align 8, !tbaa !16, !noalias !13
  store i64 %42, i64* %18, align 8, !tbaa !11, !alias.scope !13
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i8* [ %40, %41 ], [ %16, %26 ]
  switch i64 %27, label %47 [
    i64 1, label %45
    i64 0, label %48
  ]

45:                                               ; preds = %43
  %46 = load i8, i8* %28, align 1, !tbaa !11
  store i8 %46, i8* %44, align 1, !tbaa !11
  br label %48

47:                                               ; preds = %43
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %28, i64 %27, i1 false) #6
  br label %48

48:                                               ; preds = %47, %45, %43
  %49 = load i64, i64* %3, align 8, !tbaa !16, !noalias !13
  store i64 %49, i64* %19, align 8, !tbaa !8, !alias.scope !13
  %50 = load i8*, i8** %17, align 8, !tbaa !12, !alias.scope !13
  %51 = getelementptr inbounds i8, i8* %50, i64 %49
  store i8 0, i8* %51, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6, !noalias !13
  %52 = load i64, i64* %19, align 8, !tbaa !8, !alias.scope !13
  %53 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %4, i64 %52, i64 0, i64 1, i8 signext %37)
          to label %59 unwind label %54

54:                                               ; preds = %48
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = load i8*, i8** %17, align 8, !tbaa !12, !alias.scope !13
  %57 = icmp eq i8* %56, %16
  br i1 %57, label %99, label %58

58:                                               ; preds = %54
  call void @_ZdlPv(i8* %56) #6
  br label %99

59:                                               ; preds = %48
  %60 = load i8*, i8** %17, align 8, !tbaa !12
  %61 = icmp eq i8* %60, %16
  br i1 %61, label %62, label %76

62:                                               ; preds = %59
  %63 = load i64, i64* %19, align 8, !tbaa !8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %71, label %65

65:                                               ; preds = %62
  %66 = load i8*, i8** %14, align 8, !tbaa !12
  %67 = icmp eq i64 %63, 1
  br i1 %67, label %68, label %70

68:                                               ; preds = %65
  %69 = load i8, i8* %16, align 8, !tbaa !11
  store i8 %69, i8* %66, align 1, !tbaa !11
  br label %71

70:                                               ; preds = %65
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* nonnull align 8 %16, i64 %63, i1 false) #6
  br label %71

71:                                               ; preds = %70, %68, %62
  %72 = load i64, i64* %19, align 8, !tbaa !8
  store i64 %72, i64* %7, align 8, !tbaa !8
  %73 = load i8*, i8** %14, align 8, !tbaa !12
  %74 = getelementptr inbounds i8, i8* %73, i64 %72
  store i8 0, i8* %74, align 1, !tbaa !11
  %75 = load i8*, i8** %17, align 8, !tbaa !12
  br label %85

76:                                               ; preds = %59
  %77 = load i8*, i8** %14, align 8, !tbaa !12
  %78 = icmp eq i8* %77, %8
  %79 = load i64, i64* %20, align 8
  store i8* %60, i8** %14, align 8, !tbaa !12
  %80 = load <2 x i64>, <2 x i64>* %24, align 8, !tbaa !11
  store <2 x i64> %80, <2 x i64>* %25, align 8, !tbaa !11
  %81 = icmp eq i8* %77, null
  %82 = or i1 %78, %81
  br i1 %82, label %84, label %83

83:                                               ; preds = %76
  store i8* %77, i8** %17, align 8, !tbaa !12
  store i64 %79, i64* %18, align 8, !tbaa !11
  br label %85

84:                                               ; preds = %76
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !12
  br label %85

85:                                               ; preds = %71, %83, %84
  %86 = phi i8* [ %75, %71 ], [ %77, %83 ], [ %16, %84 ]
  store i64 0, i64* %19, align 8, !tbaa !8
  store i8 0, i8* %86, align 1, !tbaa !11
  %87 = load i8*, i8** %17, align 8, !tbaa !12
  %88 = icmp eq i8* %87, %16
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  call void @_ZdlPv(i8* %87) #6
  br label %90

90:                                               ; preds = %85, %89
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6
  %91 = add nuw i64 %29, 1
  %92 = load i64, i64* %9, align 8, !tbaa !8
  %93 = icmp ugt i64 %92, %91
  br i1 %93, label %94, label %105, !llvm.loop !17

94:                                               ; preds = %90
  %95 = load i8*, i8** %14, align 8, !tbaa !12, !noalias !13
  %96 = load i64, i64* %7, align 8, !tbaa !8, !noalias !13
  br label %26

97:                                               ; preds = %39
  %98 = landingpad { i8*, i32 }
          cleanup
  br label %99

99:                                               ; preds = %54, %58, %97
  %100 = phi { i8*, i32 } [ %98, %97 ], [ %55, %58 ], [ %55, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6
  %101 = load i8*, i8** %14, align 8, !tbaa !12
  %102 = icmp eq i8* %101, %8
  br i1 %102, label %104, label %103

103:                                              ; preds = %99
  call void @_ZdlPv(i8* %101) #6
  br label %104

104:                                              ; preds = %99, %103
  resume { i8*, i32 } %100

105:                                              ; preds = %90, %2
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #3

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #5

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!15 = distinct !{!15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!16 = !{!10, !10, i64 0}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.mustprogress"}
