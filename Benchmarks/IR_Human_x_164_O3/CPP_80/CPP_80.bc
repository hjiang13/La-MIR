; ModuleID = '../../Human_xBenchmarks_164/CPP_80/CPP_80.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_80/CPP_80.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local zeroext i1 @_Z8is_happyNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8, !tbaa !3
  %4 = icmp ult i64 %3, 3
  br i1 %4, label %32, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8, !tbaa !10
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  %9 = load i8, i8* %8, align 1, !tbaa !11
  %10 = getelementptr inbounds i8, i8* %7, i64 2
  %11 = load i8, i8* %10, align 1, !tbaa !11
  %12 = icmp eq i8 %11, %9
  br i1 %12, label %29, label %20

13:                                               ; preds = %20
  %14 = icmp ugt i64 %3, %28
  %15 = icmp eq i64 %28, %3
  br i1 %15, label %29, label %16, !llvm.loop !12

16:                                               ; preds = %13
  %17 = getelementptr inbounds i8, i8* %7, i64 %28
  %18 = load i8, i8* %17, align 1, !tbaa !11
  %19 = icmp eq i8 %18, %21
  br i1 %19, label %29, label %20, !llvm.loop !12

20:                                               ; preds = %5, %16
  %21 = phi i8 [ %18, %16 ], [ %11, %5 ]
  %22 = phi i1 [ %14, %16 ], [ true, %5 ]
  %23 = phi i64 [ %28, %16 ], [ 2, %5 ]
  %24 = add nsw i64 %23, -2
  %25 = getelementptr inbounds i8, i8* %7, i64 %24
  %26 = load i8, i8* %25, align 1, !tbaa !11
  %27 = icmp eq i8 %21, %26
  %28 = add nuw i64 %23, 1
  br i1 %27, label %29, label %13

29:                                               ; preds = %16, %20, %13, %5
  %30 = phi i1 [ true, %5 ], [ %14, %16 ], [ %22, %20 ], [ %14, %13 ]
  %31 = xor i1 %30, true
  br label %32

32:                                               ; preds = %29, %1
  %33 = phi i1 [ false, %1 ], [ %31, %29 ]
  ret i1 %33
}

attributes #0 = { mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!4, !6, i64 0}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.mustprogress"}
