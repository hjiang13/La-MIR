digraph "CFG for '_Z11count_upperNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function" {
	label="CFG for '_Z11count_upperNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function";

	Node0x55686cc36dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%1:\l  %2 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %3 = bitcast %\"class.std::__cxx11::basic_string\"* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #3\l  %4 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 2\l  %5 = bitcast %\"class.std::__cxx11::basic_string\"* %2 to %union.anon**\l  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !3\l  %6 = bitcast %union.anon* %4 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(5) %6, i8* noundef nonnull align 1 dereferenceable(5)\l... getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5, i1\l... false) #3\l  %7 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 1\l  store i64 5, i64* %7, align 8, !tbaa !8\l  %8 = getelementptr inbounds i8, i8* %6, i64 5\l  store i8 0, i8* %8, align 1, !tbaa !11\l  %9 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  %10 = load i64, i64* %9, align 8, !tbaa !8\l  %11 = icmp eq i64 %10, 0\l  br i1 %11, label %50, label %12\l|{<s0>T|<s1>F}}"];
	Node0x55686cc36dd0:s0 -> Node0x55686cc38330;
	Node0x55686cc36dd0:s1 -> Node0x55686cc3a1b0;
	Node0x55686cc3a1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%12:\l12:                                               \l  %13 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %14 = load i8*, i8** %13, align 8, !tbaa !12\l  %15 = add i64 %10, -1\l  %16 = lshr i64 %15, 1\l  %17 = load i8, i8* %6, align 8, !tbaa !11\l  %18 = getelementptr inbounds i8, i8* %6, i64 1\l  %19 = load i8, i8* %18, align 1\l  %20 = getelementptr inbounds i8, i8* %6, i64 2\l  %21 = load i8, i8* %20, align 2\l  %22 = getelementptr inbounds i8, i8* %6, i64 3\l  %23 = load i8, i8* %22, align 1\l  %24 = getelementptr inbounds i8, i8* %6, i64 4\l  %25 = load i8, i8* %24, align 4\l  br label %26\l}"];
	Node0x55686cc3a1b0 -> Node0x55686cc3b140;
	Node0x55686cc3b140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = phi i64 [ 0, %12 ], [ %47, %42 ]\l  %28 = phi i64 [ 0, %12 ], [ %48, %42 ]\l  %29 = phi i32 [ 0, %12 ], [ %46, %42 ]\l  %30 = getelementptr inbounds i8, i8* %14, i64 %28\l  %31 = load i8, i8* %30, align 1, !tbaa !11\l  %32 = icmp eq i8 %17, %31\l  br i1 %32, label %42, label %33\l|{<s0>T|<s1>F}}"];
	Node0x55686cc3b140:s0 -> Node0x55686cc3b270;
	Node0x55686cc3b140:s1 -> Node0x55686cc3b910;
	Node0x55686cc3b910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%33:\l33:                                               \l  %34 = icmp eq i8 %19, %31\l  br i1 %34, label %42, label %35\l|{<s0>T|<s1>F}}"];
	Node0x55686cc3b910:s0 -> Node0x55686cc3b270;
	Node0x55686cc3b910:s1 -> Node0x55686cc3bae0;
	Node0x55686cc3bae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%35:\l35:                                               \l  %36 = icmp eq i8 %21, %31\l  br i1 %36, label %42, label %37\l|{<s0>T|<s1>F}}"];
	Node0x55686cc3bae0:s0 -> Node0x55686cc3b270;
	Node0x55686cc3bae0:s1 -> Node0x55686cc3bc70;
	Node0x55686cc3bc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%37:\l37:                                               \l  %38 = icmp eq i8 %23, %31\l  br i1 %38, label %42, label %39\l|{<s0>T|<s1>F}}"];
	Node0x55686cc3bc70:s0 -> Node0x55686cc3b270;
	Node0x55686cc3bc70:s1 -> Node0x55686cc3be00;
	Node0x55686cc3be00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%39:\l39:                                               \l  %40 = icmp eq i8 %25, %31\l  %41 = select i1 %40, i64 4, i64 5\l  br label %42\l}"];
	Node0x55686cc3be00 -> Node0x55686cc3b270;
	Node0x55686cc3b270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = phi i64 [ 0, %26 ], [ 3, %37 ], [ 2, %35 ], [ 1, %33 ], [ %41, %39 ]\l  %44 = icmp ne i64 %43, 5\l  %45 = zext i1 %44 to i32\l  %46 = add nuw nsw i32 %29, %45\l  %47 = add nuw nsw i64 %27, 1\l  %48 = shl nuw nsw i64 %47, 1\l  %49 = icmp eq i64 %27, %16\l  br i1 %49, label %50, label %26, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x55686cc3b270:s0 -> Node0x55686cc38330;
	Node0x55686cc3b270:s1 -> Node0x55686cc3b140;
	Node0x55686cc38330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%50:\l50:                                               \l  %51 = phi i32 [ 0, %1 ], [ %46, %42 ]\l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #3\l  ret i32 %51\l}"];
}
