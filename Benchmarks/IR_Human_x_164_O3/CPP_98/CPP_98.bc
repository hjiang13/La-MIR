; ModuleID = '../../Human_xBenchmarks_164/CPP_98/CPP_98.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_98/CPP_98.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@.str = private unnamed_addr constant [6 x i8] c"AEIOU\00", align 1

; Function Attrs: uwtable
define dso_local i32 @_Z11count_upperNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nocapture readonly %0) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = bitcast %"class.std::__cxx11::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #3
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 2
  %5 = bitcast %"class.std::__cxx11::basic_string"* %2 to %union.anon**
  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !3
  %6 = bitcast %union.anon* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(5) %6, i8* noundef nonnull align 1 dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5, i1 false) #3
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  store i64 5, i64* %7, align 8, !tbaa !8
  %8 = getelementptr inbounds i8, i8* %6, i64 5
  store i8 0, i8* %8, align 1, !tbaa !11
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %50, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !tbaa !12
  %15 = add i64 %10, -1
  %16 = lshr i64 %15, 1
  %17 = load i8, i8* %6, align 8, !tbaa !11
  %18 = getelementptr inbounds i8, i8* %6, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = getelementptr inbounds i8, i8* %6, i64 2
  %21 = load i8, i8* %20, align 2
  %22 = getelementptr inbounds i8, i8* %6, i64 3
  %23 = load i8, i8* %22, align 1
  %24 = getelementptr inbounds i8, i8* %6, i64 4
  %25 = load i8, i8* %24, align 4
  br label %26

26:                                               ; preds = %42, %12
  %27 = phi i64 [ 0, %12 ], [ %47, %42 ]
  %28 = phi i64 [ 0, %12 ], [ %48, %42 ]
  %29 = phi i32 [ 0, %12 ], [ %46, %42 ]
  %30 = getelementptr inbounds i8, i8* %14, i64 %28
  %31 = load i8, i8* %30, align 1, !tbaa !11
  %32 = icmp eq i8 %17, %31
  br i1 %32, label %42, label %33

33:                                               ; preds = %26
  %34 = icmp eq i8 %19, %31
  br i1 %34, label %42, label %35

35:                                               ; preds = %33
  %36 = icmp eq i8 %21, %31
  br i1 %36, label %42, label %37

37:                                               ; preds = %35
  %38 = icmp eq i8 %23, %31
  br i1 %38, label %42, label %39

39:                                               ; preds = %37
  %40 = icmp eq i8 %25, %31
  %41 = select i1 %40, i64 4, i64 5
  br label %42

42:                                               ; preds = %39, %33, %35, %37, %26
  %43 = phi i64 [ 0, %26 ], [ 3, %37 ], [ 2, %35 ], [ 1, %33 ], [ %41, %39 ]
  %44 = icmp ne i64 %43, 5
  %45 = zext i1 %44 to i32
  %46 = add nuw nsw i32 %29, %45
  %47 = add nuw nsw i64 %27, 1
  %48 = shl nuw nsw i64 %47, 1
  %49 = icmp eq i64 %27, %16
  br i1 %49, label %50, label %26, !llvm.loop !13

50:                                               ; preds = %42, %1
  %51 = phi i32 [ 0, %1 ], [ %46, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #3
  ret i32 %51
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.mustprogress"}
