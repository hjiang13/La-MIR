; ModuleID = '../../Human_xBenchmarks_164/CPP_113/CPP_113.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_113/CPP_113.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z = comdat any

$__clang_call_terminate = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ = comdat any

@.str = private unnamed_addr constant [57 x i8] c"the number of odd elements in the string i of the input.\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z9odd_countSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE(%"class.std::vector"* noalias sret(%"class.std::vector") align 8 %0, %"class.std::vector"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = alloca %"class.std::__cxx11::basic_string", align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %15 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  %16 = bitcast %union.anon* %14 to i8*
  %17 = bitcast i64* %5 to i8*
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  %21 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %23 = bitcast %"class.std::__cxx11::basic_string"* %7 to %union.anon**
  %24 = bitcast %union.anon* %22 to i8*
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  %27 = bitcast %"class.std::__cxx11::basic_string"* %10 to i8*
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2
  %29 = bitcast %"class.std::__cxx11::basic_string"* %10 to %union.anon**
  %30 = bitcast i64* %3 to i8*
  %31 = bitcast %union.anon* %28 to i8*
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2, i32 0
  %34 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 1
  %35 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 0
  %36 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  %37 = bitcast %"class.std::__cxx11::basic_string"* %9 to i8*
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %39 = bitcast %"class.std::__cxx11::basic_string"* %8 to %union.anon**
  %40 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  %42 = bitcast %union.anon* %38 to i8*
  %43 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 1
  %44 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2
  %46 = bitcast %union.anon* %45 to i8*
  %47 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %49 = bitcast i64* %4 to i8*
  %50 = bitcast %"class.std::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %50, i8 0, i64 24, i1 false)
  %51 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %11, align 8, !tbaa !3
  %52 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8, !tbaa !8
  %53 = icmp eq %"class.std::__cxx11::basic_string"* %51, %52
  br i1 %53, label %320, label %54

54:                                               ; preds = %2
  %55 = bitcast i64* %34 to <2 x i64>*
  %56 = bitcast i64* %26 to <2 x i64>*
  %57 = bitcast i64* %43 to <2 x i64>*
  %58 = bitcast i64* %26 to <2 x i64>*
  br label %59

59:                                               ; preds = %54, %298
  %60 = phi i64 [ %299, %298 ], [ 0, %54 ]
  %61 = phi %"class.std::__cxx11::basic_string"* [ %301, %298 ], [ %52, %54 ]
  %62 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %61, i64 %60, i32 1
  %63 = load i64, i64* %62, align 8, !tbaa !9
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %102, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %61, i64 %60, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8, !tbaa !13
  %68 = icmp ult i64 %63, 8
  br i1 %68, label %99, label %69

69:                                               ; preds = %65
  %70 = and i64 %63, -8
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %93, %71 ]
  %73 = phi <4 x i32> [ zeroinitializer, %69 ], [ %91, %71 ]
  %74 = phi <4 x i32> [ zeroinitializer, %69 ], [ %92, %71 ]
  %75 = getelementptr inbounds i8, i8* %67, i64 %72
  %76 = bitcast i8* %75 to <4 x i8>*
  %77 = load <4 x i8>, <4 x i8>* %76, align 1, !tbaa !14
  %78 = getelementptr inbounds i8, i8* %75, i64 4
  %79 = bitcast i8* %78 to <4 x i8>*
  %80 = load <4 x i8>, <4 x i8>* %79, align 1, !tbaa !14
  %81 = add <4 x i8> %77, <i8 -48, i8 -48, i8 -48, i8 -48>
  %82 = add <4 x i8> %80, <i8 -48, i8 -48, i8 -48, i8 -48>
  %83 = icmp ult <4 x i8> %81, <i8 10, i8 10, i8 10, i8 10>
  %84 = icmp ult <4 x i8> %82, <i8 10, i8 10, i8 10, i8 10>
  %85 = and <4 x i8> %77, <i8 1, i8 1, i8 1, i8 1>
  %86 = and <4 x i8> %80, <i8 1, i8 1, i8 1, i8 1>
  %87 = select <4 x i1> %83, <4 x i8> %85, <4 x i8> zeroinitializer
  %88 = select <4 x i1> %84, <4 x i8> %86, <4 x i8> zeroinitializer
  %89 = zext <4 x i8> %87 to <4 x i32>
  %90 = zext <4 x i8> %88 to <4 x i32>
  %91 = add <4 x i32> %73, %89
  %92 = add <4 x i32> %74, %90
  %93 = add nuw i64 %72, 8
  %94 = icmp eq i64 %93, %70
  br i1 %94, label %95, label %71, !llvm.loop !15

95:                                               ; preds = %71
  %96 = add <4 x i32> %92, %91
  %97 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %96)
  %98 = icmp eq i64 %63, %70
  br i1 %98, label %102, label %99

99:                                               ; preds = %65, %95
  %100 = phi i64 [ 0, %65 ], [ %70, %95 ]
  %101 = phi i32 [ 0, %65 ], [ %97, %95 ]
  br label %110

102:                                              ; preds = %110, %95, %59
  %103 = phi i32 [ 0, %59 ], [ %97, %95 ], [ %120, %110 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #14
  store %union.anon* %14, %union.anon** %15, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  store i64 56, i64* %5, align 8, !tbaa !19
  %104 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
          to label %105 unwind label %155

105:                                              ; preds = %102
  store i8* %104, i8** %18, align 8, !tbaa !13
  %106 = load i64, i64* %5, align 8, !tbaa !19
  store i64 %106, i64* %19, align 8, !tbaa !14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(56) %104, i8* noundef nonnull align 1 dereferenceable(56) getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i64 56, i1 false) #14
  store i64 %106, i64* %20, align 8, !tbaa !9
  %107 = getelementptr inbounds i8, i8* %104, i64 %106
  store i8 0, i8* %107, align 1, !tbaa !14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #14
  store %union.anon* %22, %union.anon** %23, align 8, !tbaa !18
  store i64 0, i64* %26, align 8, !tbaa !9
  store i8 0, i8* %24, align 8, !tbaa !14
  %108 = load i64, i64* %20, align 8, !tbaa !9
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %123, label %157

110:                                              ; preds = %99, %110
  %111 = phi i64 [ %121, %110 ], [ %100, %99 ]
  %112 = phi i32 [ %120, %110 ], [ %101, %99 ]
  %113 = getelementptr inbounds i8, i8* %67, i64 %111
  %114 = load i8, i8* %113, align 1, !tbaa !14
  %115 = add i8 %114, -48
  %116 = icmp ult i8 %115, 10
  %117 = and i8 %114, 1
  %118 = select i1 %116, i8 %117, i8 0
  %119 = zext i8 %118 to i32
  %120 = add nuw nsw i32 %112, %119
  %121 = add nuw nsw i64 %111, 1
  %122 = icmp eq i64 %121, %63
  br i1 %122, label %102, label %110, !llvm.loop !20

123:                                              ; preds = %286, %105
  %124 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %47, align 8, !tbaa !3
  %125 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %48, align 8, !tbaa !22
  %126 = icmp eq %"class.std::__cxx11::basic_string"* %124, %125
  br i1 %126, label %154, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %124, i64 0, i32 2
  %129 = bitcast %"class.std::__cxx11::basic_string"* %124 to %union.anon**
  store %union.anon* %128, %union.anon** %129, align 8, !tbaa !18
  %130 = load i8*, i8** %25, align 8, !tbaa !13
  %131 = load i64, i64* %26, align 8, !tbaa !9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #14
  store i64 %131, i64* %4, align 8, !tbaa !19
  %132 = icmp ugt i64 %131, 15
  br i1 %132, label %135, label %133

133:                                              ; preds = %127
  %134 = bitcast %union.anon* %128 to i8*
  br label %141

135:                                              ; preds = %127
  %136 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %124, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %137 unwind label %307

137:                                              ; preds = %135
  %138 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %124, i64 0, i32 0, i32 0
  store i8* %136, i8** %138, align 8, !tbaa !13
  %139 = load i64, i64* %4, align 8, !tbaa !19
  %140 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %124, i64 0, i32 2, i32 0
  store i64 %139, i64* %140, align 8, !tbaa !14
  br label %141

141:                                              ; preds = %137, %133
  %142 = phi i8* [ %134, %133 ], [ %136, %137 ]
  switch i64 %131, label %145 [
    i64 1, label %143
    i64 0, label %146
  ]

143:                                              ; preds = %141
  %144 = load i8, i8* %130, align 1, !tbaa !14
  store i8 %144, i8* %142, align 1, !tbaa !14
  br label %146

145:                                              ; preds = %141
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %142, i8* align 1 %130, i64 %131, i1 false) #14
  br label %146

146:                                              ; preds = %145, %143, %141
  %147 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %124, i64 0, i32 0, i32 0
  %148 = load i64, i64* %4, align 8, !tbaa !19
  %149 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %124, i64 0, i32 1
  store i64 %148, i64* %149, align 8, !tbaa !9
  %150 = load i8*, i8** %147, align 8, !tbaa !13
  %151 = getelementptr inbounds i8, i8* %150, i64 %148
  store i8 0, i8* %151, align 1, !tbaa !14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #14
  %152 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %47, align 8, !tbaa !3
  %153 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %152, i64 1
  store %"class.std::__cxx11::basic_string"* %153, %"class.std::__cxx11::basic_string"** %47, align 8, !tbaa !3
  br label %290

154:                                              ; preds = %123
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %"class.std::__cxx11::basic_string"* %124, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7)
          to label %290 unwind label %307

155:                                              ; preds = %102
  %156 = landingpad { i8*, i32 }
          cleanup
  br label %318

157:                                              ; preds = %105, %286
  %158 = phi i64 [ %287, %286 ], [ 0, %105 ]
  %159 = load i8*, i8** %18, align 8, !tbaa !13
  %160 = getelementptr inbounds i8, i8* %159, i64 %158
  %161 = load i8, i8* %160, align 1, !tbaa !14
  %162 = icmp eq i8 %161, 105
  br i1 %162, label %163, label %226

163:                                              ; preds = %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #14
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #14
  invoke void (%"class.std::__cxx11::basic_string"*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i64, i8*, ...) @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %9, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* nonnull @vsnprintf, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i32 %103)
          to label %164 unwind label %217

164:                                              ; preds = %163
  call void @llvm.experimental.noalias.scope.decl(metadata !23)
  %165 = load i64, i64* %26, align 8, !tbaa !9, !noalias !23
  %166 = load i8*, i8** %25, align 8, !tbaa !13, !noalias !23
  %167 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %9, i64 0, i64 0, i8* %166, i64 %165)
          to label %168 unwind label %219

168:                                              ; preds = %164
  store %union.anon* %38, %union.anon** %39, align 8, !tbaa !18, !alias.scope !23
  %169 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %167, i64 0, i32 0, i32 0
  %170 = load i8*, i8** %169, align 8, !tbaa !13
  %171 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %167, i64 0, i32 2
  %172 = bitcast %union.anon* %171 to i8*
  %173 = icmp eq i8* %170, %172
  br i1 %173, label %174, label %175

174:                                              ; preds = %168
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %42, i8* noundef nonnull align 8 dereferenceable(16) %170, i64 16, i1 false) #14
  br label %178

175:                                              ; preds = %168
  store i8* %170, i8** %40, align 8, !tbaa !13, !alias.scope !23
  %176 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %167, i64 0, i32 2, i32 0
  %177 = load i64, i64* %176, align 8, !tbaa !14
  store i64 %177, i64* %41, align 8, !tbaa !14, !alias.scope !23
  br label %178

178:                                              ; preds = %175, %174
  %179 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %167, i64 0, i32 1
  %180 = load i64, i64* %179, align 8, !tbaa !9
  store i64 %180, i64* %43, align 8, !tbaa !9, !alias.scope !23
  %181 = bitcast %"class.std::__cxx11::basic_string"* %167 to %union.anon**
  store %union.anon* %171, %union.anon** %181, align 8, !tbaa !13
  store i64 0, i64* %179, align 8, !tbaa !9
  store i8 0, i8* %172, align 8, !tbaa !14
  %182 = load i8*, i8** %40, align 8, !tbaa !13
  %183 = icmp eq i8* %182, %42
  br i1 %183, label %184, label %198

184:                                              ; preds = %178
  %185 = load i64, i64* %43, align 8, !tbaa !9
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %193, label %187

187:                                              ; preds = %184
  %188 = load i8*, i8** %25, align 8, !tbaa !13
  %189 = icmp eq i64 %185, 1
  br i1 %189, label %190, label %192

190:                                              ; preds = %187
  %191 = load i8, i8* %42, align 8, !tbaa !14
  store i8 %191, i8* %188, align 1, !tbaa !14
  br label %193

192:                                              ; preds = %187
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %188, i8* nonnull align 8 %42, i64 %185, i1 false) #14
  br label %193

193:                                              ; preds = %192, %190, %184
  %194 = load i64, i64* %43, align 8, !tbaa !9
  store i64 %194, i64* %26, align 8, !tbaa !9
  %195 = load i8*, i8** %25, align 8, !tbaa !13
  %196 = getelementptr inbounds i8, i8* %195, i64 %194
  store i8 0, i8* %196, align 1, !tbaa !14
  %197 = load i8*, i8** %40, align 8, !tbaa !13
  br label %207

198:                                              ; preds = %178
  %199 = load i8*, i8** %25, align 8, !tbaa !13
  %200 = icmp eq i8* %199, %24
  %201 = load i64, i64* %35, align 8
  store i8* %182, i8** %25, align 8, !tbaa !13
  %202 = load <2 x i64>, <2 x i64>* %57, align 8, !tbaa !14
  store <2 x i64> %202, <2 x i64>* %58, align 8, !tbaa !14
  %203 = icmp eq i8* %199, null
  %204 = or i1 %200, %203
  br i1 %204, label %206, label %205

205:                                              ; preds = %198
  store i8* %199, i8** %40, align 8, !tbaa !13
  store i64 %201, i64* %41, align 8, !tbaa !14
  br label %207

206:                                              ; preds = %198
  store %union.anon* %38, %union.anon** %39, align 8, !tbaa !13
  br label %207

207:                                              ; preds = %193, %205, %206
  %208 = phi i8* [ %197, %193 ], [ %199, %205 ], [ %42, %206 ]
  store i64 0, i64* %43, align 8, !tbaa !9
  store i8 0, i8* %208, align 1, !tbaa !14
  %209 = load i8*, i8** %40, align 8, !tbaa !13
  %210 = icmp eq i8* %209, %42
  br i1 %210, label %212, label %211

211:                                              ; preds = %207
  call void @_ZdlPv(i8* %209) #14
  br label %212

212:                                              ; preds = %207, %211
  %213 = load i8*, i8** %44, align 8, !tbaa !13
  %214 = icmp eq i8* %213, %46
  br i1 %214, label %216, label %215

215:                                              ; preds = %212
  call void @_ZdlPv(i8* %213) #14
  br label %216

216:                                              ; preds = %212, %215
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #14
  br label %286

217:                                              ; preds = %163
  %218 = landingpad { i8*, i32 }
          cleanup
  br label %224

219:                                              ; preds = %164
  %220 = landingpad { i8*, i32 }
          cleanup
  %221 = load i8*, i8** %44, align 8, !tbaa !13
  %222 = icmp eq i8* %221, %46
  br i1 %222, label %224, label %223

223:                                              ; preds = %219
  call void @_ZdlPv(i8* %221) #14
  br label %224

224:                                              ; preds = %223, %219, %217
  %225 = phi { i8*, i32 } [ %218, %217 ], [ %220, %219 ], [ %220, %223 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #14
  br label %309

226:                                              ; preds = %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #14
  call void @llvm.experimental.noalias.scope.decl(metadata !26)
  store %union.anon* %28, %union.anon** %29, align 8, !tbaa !18, !alias.scope !26
  %227 = load i8*, i8** %25, align 8, !tbaa !13, !noalias !26
  %228 = load i64, i64* %26, align 8, !tbaa !9, !noalias !26
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #14, !noalias !26
  store i64 %228, i64* %3, align 8, !tbaa !19, !noalias !26
  %229 = icmp ugt i64 %228, 15
  br i1 %229, label %230, label %234

230:                                              ; preds = %226
  %231 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %232 unwind label %282

232:                                              ; preds = %230
  store i8* %231, i8** %32, align 8, !tbaa !13, !alias.scope !26
  %233 = load i64, i64* %3, align 8, !tbaa !19, !noalias !26
  store i64 %233, i64* %33, align 8, !tbaa !14, !alias.scope !26
  br label %234

234:                                              ; preds = %226, %232
  %235 = phi i8* [ %231, %232 ], [ %31, %226 ]
  switch i64 %228, label %238 [
    i64 1, label %236
    i64 0, label %239
  ]

236:                                              ; preds = %234
  %237 = load i8, i8* %227, align 1, !tbaa !14
  store i8 %237, i8* %235, align 1, !tbaa !14
  br label %239

238:                                              ; preds = %234
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %235, i8* align 1 %227, i64 %228, i1 false) #14
  br label %239

239:                                              ; preds = %238, %236, %234
  %240 = load i64, i64* %3, align 8, !tbaa !19, !noalias !26
  store i64 %240, i64* %34, align 8, !tbaa !9, !alias.scope !26
  %241 = load i8*, i8** %32, align 8, !tbaa !13, !alias.scope !26
  %242 = getelementptr inbounds i8, i8* %241, i64 %240
  store i8 0, i8* %242, align 1, !tbaa !14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #14, !noalias !26
  %243 = load i64, i64* %34, align 8, !tbaa !9, !alias.scope !26
  %244 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i64 %243, i64 0, i64 1, i8 signext %161)
          to label %250 unwind label %245

245:                                              ; preds = %239
  %246 = landingpad { i8*, i32 }
          cleanup
  %247 = load i8*, i8** %32, align 8, !tbaa !13, !alias.scope !26
  %248 = icmp eq i8* %247, %31
  br i1 %248, label %284, label %249

249:                                              ; preds = %245
  call void @_ZdlPv(i8* %247) #14
  br label %284

250:                                              ; preds = %239
  %251 = load i8*, i8** %32, align 8, !tbaa !13
  %252 = icmp eq i8* %251, %31
  br i1 %252, label %253, label %267

253:                                              ; preds = %250
  %254 = load i64, i64* %34, align 8, !tbaa !9
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %262, label %256

256:                                              ; preds = %253
  %257 = load i8*, i8** %25, align 8, !tbaa !13
  %258 = icmp eq i64 %254, 1
  br i1 %258, label %259, label %261

259:                                              ; preds = %256
  %260 = load i8, i8* %31, align 8, !tbaa !14
  store i8 %260, i8* %257, align 1, !tbaa !14
  br label %262

261:                                              ; preds = %256
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %257, i8* nonnull align 8 %31, i64 %254, i1 false) #14
  br label %262

262:                                              ; preds = %261, %259, %253
  %263 = load i64, i64* %34, align 8, !tbaa !9
  store i64 %263, i64* %26, align 8, !tbaa !9
  %264 = load i8*, i8** %25, align 8, !tbaa !13
  %265 = getelementptr inbounds i8, i8* %264, i64 %263
  store i8 0, i8* %265, align 1, !tbaa !14
  %266 = load i8*, i8** %32, align 8, !tbaa !13
  br label %276

267:                                              ; preds = %250
  %268 = load i8*, i8** %25, align 8, !tbaa !13
  %269 = icmp eq i8* %268, %24
  %270 = load i64, i64* %35, align 8
  store i8* %251, i8** %25, align 8, !tbaa !13
  %271 = load <2 x i64>, <2 x i64>* %55, align 8, !tbaa !14
  store <2 x i64> %271, <2 x i64>* %56, align 8, !tbaa !14
  %272 = icmp eq i8* %268, null
  %273 = or i1 %269, %272
  br i1 %273, label %275, label %274

274:                                              ; preds = %267
  store i8* %268, i8** %32, align 8, !tbaa !13
  store i64 %270, i64* %33, align 8, !tbaa !14
  br label %276

275:                                              ; preds = %267
  store %union.anon* %28, %union.anon** %29, align 8, !tbaa !13
  br label %276

276:                                              ; preds = %262, %274, %275
  %277 = phi i8* [ %266, %262 ], [ %268, %274 ], [ %31, %275 ]
  store i64 0, i64* %34, align 8, !tbaa !9
  store i8 0, i8* %277, align 1, !tbaa !14
  %278 = load i8*, i8** %32, align 8, !tbaa !13
  %279 = icmp eq i8* %278, %31
  br i1 %279, label %281, label %280

280:                                              ; preds = %276
  call void @_ZdlPv(i8* %278) #14
  br label %281

281:                                              ; preds = %276, %280
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #14
  br label %286

282:                                              ; preds = %230
  %283 = landingpad { i8*, i32 }
          cleanup
  br label %284

284:                                              ; preds = %245, %249, %282
  %285 = phi { i8*, i32 } [ %283, %282 ], [ %246, %249 ], [ %246, %245 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #14
  br label %309

286:                                              ; preds = %216, %281
  %287 = add nuw i64 %158, 1
  %288 = load i64, i64* %20, align 8, !tbaa !9
  %289 = icmp ugt i64 %288, %287
  br i1 %289, label %157, label %123, !llvm.loop !29

290:                                              ; preds = %146, %154
  %291 = load i8*, i8** %25, align 8, !tbaa !13
  %292 = icmp eq i8* %291, %24
  br i1 %292, label %294, label %293

293:                                              ; preds = %290
  call void @_ZdlPv(i8* %291) #14
  br label %294

294:                                              ; preds = %290, %293
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #14
  %295 = load i8*, i8** %18, align 8, !tbaa !13
  %296 = icmp eq i8* %295, %16
  br i1 %296, label %298, label %297

297:                                              ; preds = %294
  call void @_ZdlPv(i8* %295) #14
  br label %298

298:                                              ; preds = %294, %297
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #14
  %299 = add nuw i64 %60, 1
  %300 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %11, align 8, !tbaa !3
  %301 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8, !tbaa !8
  %302 = ptrtoint %"class.std::__cxx11::basic_string"* %300 to i64
  %303 = ptrtoint %"class.std::__cxx11::basic_string"* %301 to i64
  %304 = sub i64 %302, %303
  %305 = ashr exact i64 %304, 5
  %306 = icmp ugt i64 %305, %299
  br i1 %306, label %59, label %320, !llvm.loop !30

307:                                              ; preds = %154, %135
  %308 = landingpad { i8*, i32 }
          cleanup
  br label %309

309:                                              ; preds = %224, %284, %307
  %310 = phi { i8*, i32 } [ %308, %307 ], [ %225, %224 ], [ %285, %284 ]
  %311 = load i8*, i8** %25, align 8, !tbaa !13
  %312 = icmp eq i8* %311, %24
  br i1 %312, label %314, label %313

313:                                              ; preds = %309
  call void @_ZdlPv(i8* %311) #14
  br label %314

314:                                              ; preds = %313, %309
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #14
  %315 = load i8*, i8** %18, align 8, !tbaa !13
  %316 = icmp eq i8* %315, %16
  br i1 %316, label %318, label %317

317:                                              ; preds = %314
  call void @_ZdlPv(i8* %315) #14
  br label %318

318:                                              ; preds = %317, %314, %155
  %319 = phi { i8*, i32 } [ %156, %155 ], [ %310, %314 ], [ %310, %317 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #14
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #14
  resume { i8*, i32 } %319

320:                                              ; preds = %298, %2
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8, !tbaa !3
  %6 = icmp eq %"class.std::__cxx11::basic_string"* %3, %5
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %15
  %8 = phi %"class.std::__cxx11::basic_string"* [ %16, %15 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !tbaa !13
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %12 = bitcast %union.anon* %11 to i8*
  %13 = icmp eq i8* %10, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %7
  tail call void @_ZdlPv(i8* %10) #14
  br label %15

15:                                               ; preds = %14, %7
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 1
  %17 = icmp eq %"class.std::__cxx11::basic_string"* %16, %5
  br i1 %17, label %18, label %7, !llvm.loop !31

18:                                               ; preds = %15
  %19 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8, !tbaa !8
  br label %20

20:                                               ; preds = %18, %1
  %21 = phi %"class.std::__cxx11::basic_string"* [ %19, %18 ], [ %3, %1 ]
  %22 = icmp eq %"class.std::__cxx11::basic_string"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = bitcast %"class.std::__cxx11::basic_string"* %21 to i8*
  tail call void @_ZdlPv(i8* nonnull %24) #14
  br label %25

25:                                               ; preds = %20, %23
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* %1, i64 %2, i8* %3, ...) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca i64, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = alloca i8, i64 %2, align 16
  %8 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %8)
  %10 = call i32 %1(i8* nonnull %7, i64 %2, i8* %3, %struct.__va_list_tag* nonnull %9)
  call void @llvm.va_end(i8* nonnull %8)
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !18
  %14 = bitcast %union.anon* %12 to i8*
  %15 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #14
  store i64 %11, i64* %5, align 8, !tbaa !19
  %16 = icmp ugt i32 %10, 15
  br i1 %16, label %17, label %22

17:                                               ; preds = %4
  %18 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8, !tbaa !13
  %20 = load i64, i64* %5, align 8, !tbaa !19
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %20, i64* %21, align 8, !tbaa !14
  br label %22

22:                                               ; preds = %17, %4
  %23 = phi i8* [ %18, %17 ], [ %14, %4 ]
  switch i64 %11, label %26 [
    i64 1, label %24
    i64 0, label %27
  ]

24:                                               ; preds = %22
  %25 = load i8, i8* %7, align 16, !tbaa !14
  store i8 %25, i8* %23, align 1, !tbaa !14
  br label %27

26:                                               ; preds = %22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* nonnull align 16 %7, i64 %11, i1 false) #14
  br label %27

27:                                               ; preds = %26, %24, %22
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %29 = load i64, i64* %5, align 8, !tbaa !19
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %29, i64* %30, align 8, !tbaa !9
  %31 = load i8*, i8** %28, align 8, !tbaa !13
  %32 = getelementptr inbounds i8, i8* %31, i64 %29
  store i8 0, i8* %32, align 1, !tbaa !14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @vsnprintf(i8* nocapture noundef, i64 noundef, i8* nocapture noundef readonly, %struct.__va_list_tag* noundef) #4

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #6

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @__cxa_rethrow() local_unnamed_addr

declare dso_local void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #7 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #14
  tail call void @_ZSt9terminatev() #15
  unreachable
}

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #9

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i8*, i64) local_unnamed_addr #6

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #6

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8, !tbaa !3
  %7 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8, !tbaa !8
  %9 = ptrtoint %"class.std::__cxx11::basic_string"* %6 to i64
  %10 = ptrtoint %"class.std::__cxx11::basic_string"* %8 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 5
  %13 = icmp eq i64 %11, 9223372036854775776
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0)) #16
  unreachable

15:                                               ; preds = %3
  %16 = icmp eq i64 %11, 0
  %17 = select i1 %16, i64 1, i64 %12
  %18 = add nsw i64 %17, %12
  %19 = icmp ult i64 %18, %12
  %20 = icmp ugt i64 %18, 288230376151711743
  %21 = or i1 %19, %20
  %22 = select i1 %21, i64 288230376151711743, i64 %18
  %23 = ptrtoint %"class.std::__cxx11::basic_string"* %1 to i64
  %24 = sub i64 %23, %10
  %25 = ashr exact i64 %24, 5
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %15
  %28 = shl nuw nsw i64 %22, 5
  %29 = tail call noalias nonnull i8* @_Znwm(i64 %28) #17
  %30 = bitcast i8* %29 to %"class.std::__cxx11::basic_string"*
  br label %31

31:                                               ; preds = %15, %27
  %32 = phi %"class.std::__cxx11::basic_string"* [ %30, %27 ], [ null, %15 ]
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %32, i64 %25
  %34 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %32, i64 %25, i32 2
  %35 = bitcast %"class.std::__cxx11::basic_string"* %33 to %union.anon**
  store %union.anon* %34, %union.anon** %35, align 8, !tbaa !18
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8, !tbaa !13
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  %39 = load i64, i64* %38, align 8, !tbaa !9
  %40 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #14
  store i64 %39, i64* %4, align 8, !tbaa !19
  %41 = icmp ugt i64 %39, 15
  br i1 %41, label %44, label %42

42:                                               ; preds = %31
  %43 = bitcast %union.anon* %34 to i8*
  br label %50

44:                                               ; preds = %31
  %45 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %33, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %46 unwind label %126

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %33, i64 0, i32 0, i32 0
  store i8* %45, i8** %47, align 8, !tbaa !13
  %48 = load i64, i64* %4, align 8, !tbaa !19
  %49 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %32, i64 %25, i32 2, i32 0
  store i64 %48, i64* %49, align 8, !tbaa !14
  br label %50

50:                                               ; preds = %46, %42
  %51 = phi i8* [ %43, %42 ], [ %45, %46 ]
  switch i64 %39, label %54 [
    i64 1, label %52
    i64 0, label %55
  ]

52:                                               ; preds = %50
  %53 = load i8, i8* %37, align 1, !tbaa !14
  store i8 %53, i8* %51, align 1, !tbaa !14
  br label %55

54:                                               ; preds = %50
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %37, i64 %39, i1 false) #14
  br label %55

55:                                               ; preds = %54, %52, %50
  %56 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %33, i64 0, i32 0, i32 0
  %57 = load i64, i64* %4, align 8, !tbaa !19
  %58 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %32, i64 %25, i32 1
  store i64 %57, i64* %58, align 8, !tbaa !9
  %59 = load i8*, i8** %56, align 8, !tbaa !13
  %60 = getelementptr inbounds i8, i8* %59, i64 %57
  store i8 0, i8* %60, align 1, !tbaa !14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #14
  %61 = icmp eq %"class.std::__cxx11::basic_string"* %8, %1
  br i1 %61, label %87, label %62

62:                                               ; preds = %55, %79
  %63 = phi %"class.std::__cxx11::basic_string"* [ %85, %79 ], [ %32, %55 ]
  %64 = phi %"class.std::__cxx11::basic_string"* [ %84, %79 ], [ %8, %55 ]
  %65 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %63, i64 0, i32 2
  %66 = bitcast %"class.std::__cxx11::basic_string"* %63 to %union.anon**
  store %union.anon* %65, %union.anon** %66, align 8, !tbaa !18
  %67 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8, !tbaa !13
  %69 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 2
  %70 = bitcast %union.anon* %69 to i8*
  %71 = icmp eq i8* %68, %70
  br i1 %71, label %72, label %74

72:                                               ; preds = %62
  %73 = bitcast %union.anon* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %73, i8* noundef nonnull align 8 dereferenceable(16) %68, i64 16, i1 false) #14
  br label %79

74:                                               ; preds = %62
  %75 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %63, i64 0, i32 0, i32 0
  store i8* %68, i8** %75, align 8, !tbaa !13
  %76 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 2, i32 0
  %77 = load i64, i64* %76, align 8, !tbaa !14
  %78 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %63, i64 0, i32 2, i32 0
  store i64 %77, i64* %78, align 8, !tbaa !14
  br label %79

79:                                               ; preds = %74, %72
  %80 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 1
  %81 = load i64, i64* %80, align 8, !tbaa !9
  %82 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %63, i64 0, i32 1
  store i64 %81, i64* %82, align 8, !tbaa !9
  %83 = bitcast %"class.std::__cxx11::basic_string"* %64 to %union.anon**
  store %union.anon* %69, %union.anon** %83, align 8, !tbaa !13
  store i64 0, i64* %80, align 8, !tbaa !9
  store i8 0, i8* %70, align 8, !tbaa !14
  %84 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 1
  %85 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %63, i64 1
  %86 = icmp eq %"class.std::__cxx11::basic_string"* %84, %1
  br i1 %86, label %87, label %62, !llvm.loop !32

87:                                               ; preds = %79, %55
  %88 = phi %"class.std::__cxx11::basic_string"* [ %32, %55 ], [ %85, %79 ]
  %89 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %88, i64 1
  %90 = icmp eq %"class.std::__cxx11::basic_string"* %6, %1
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %108
  %92 = phi %"class.std::__cxx11::basic_string"* [ %114, %108 ], [ %89, %87 ]
  %93 = phi %"class.std::__cxx11::basic_string"* [ %113, %108 ], [ %1, %87 ]
  %94 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %92, i64 0, i32 2
  %95 = bitcast %"class.std::__cxx11::basic_string"* %92 to %union.anon**
  store %union.anon* %94, %union.anon** %95, align 8, !tbaa !18
  %96 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8, !tbaa !13
  %98 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 2
  %99 = bitcast %union.anon* %98 to i8*
  %100 = icmp eq i8* %97, %99
  br i1 %100, label %101, label %103

101:                                              ; preds = %91
  %102 = bitcast %union.anon* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %102, i8* noundef nonnull align 8 dereferenceable(16) %97, i64 16, i1 false) #14
  br label %108

103:                                              ; preds = %91
  %104 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %92, i64 0, i32 0, i32 0
  store i8* %97, i8** %104, align 8, !tbaa !13
  %105 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 2, i32 0
  %106 = load i64, i64* %105, align 8, !tbaa !14
  %107 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %92, i64 0, i32 2, i32 0
  store i64 %106, i64* %107, align 8, !tbaa !14
  br label %108

108:                                              ; preds = %103, %101
  %109 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 0, i32 1
  %110 = load i64, i64* %109, align 8, !tbaa !9
  %111 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %92, i64 0, i32 1
  store i64 %110, i64* %111, align 8, !tbaa !9
  %112 = bitcast %"class.std::__cxx11::basic_string"* %93 to %union.anon**
  store %union.anon* %98, %union.anon** %112, align 8, !tbaa !13
  store i64 0, i64* %109, align 8, !tbaa !9
  store i8 0, i8* %99, align 8, !tbaa !14
  %113 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %93, i64 1
  %114 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %92, i64 1
  %115 = icmp eq %"class.std::__cxx11::basic_string"* %113, %6
  br i1 %115, label %116, label %91, !llvm.loop !32

116:                                              ; preds = %108, %87
  %117 = phi %"class.std::__cxx11::basic_string"* [ %89, %87 ], [ %114, %108 ]
  %118 = icmp eq %"class.std::__cxx11::basic_string"* %8, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %116
  %120 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  call void @_ZdlPv(i8* nonnull %120) #14
  br label %121

121:                                              ; preds = %116, %119
  %122 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* %32, %"class.std::__cxx11::basic_string"** %7, align 8, !tbaa !8
  store %"class.std::__cxx11::basic_string"* %117, %"class.std::__cxx11::basic_string"** %5, align 8, !tbaa !3
  %123 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %32, i64 %22
  store %"class.std::__cxx11::basic_string"* %123, %"class.std::__cxx11::basic_string"** %122, align 8, !tbaa !22
  ret void

124:                                              ; preds = %126
  %125 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %131 unwind label %132

126:                                              ; preds = %44
  %127 = landingpad { i8*, i32 }
          catch i8* null
  %128 = extractvalue { i8*, i32 } %127, 0
  %129 = call i8* @__cxa_begin_catch(i8* %128) #14
  %130 = bitcast %"class.std::__cxx11::basic_string"* %32 to i8*
  call void @_ZdlPv(i8* nonnull %130) #14
  invoke void @__cxa_rethrow() #16
          to label %135 unwind label %124

131:                                              ; preds = %124
  resume { i8*, i32 } %125

132:                                              ; preds = %124
  %133 = landingpad { i8*, i32 }
          catch i8* null
  %134 = extractvalue { i8*, i32 } %133, 0
  call void @__clang_call_terminate(i8* %134) #15
  unreachable

135:                                              ; preds = %126
  unreachable
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #10

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #12

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #13

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #2 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #3 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { mustprogress nofree nosync nounwind willreturn }
attributes #6 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { noinline noreturn nounwind }
attributes #8 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #9 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #13 = { nofree nosync nounwind readnone willreturn }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { noreturn }
attributes #17 = { allocsize(0) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 8}
!4 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!4, !5, i64 0}
!9 = !{!10, !12, i64 8}
!10 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !11, i64 0, !12, i64 8, !6, i64 16}
!11 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!12 = !{!"long", !6, i64 0}
!13 = !{!10, !5, i64 0}
!14 = !{!6, !6, i64 0}
!15 = distinct !{!15, !16, !17}
!16 = !{!"llvm.loop.mustprogress"}
!17 = !{!"llvm.loop.isvectorized", i32 1}
!18 = !{!11, !5, i64 0}
!19 = !{!12, !12, i64 0}
!20 = distinct !{!20, !16, !21, !17}
!21 = !{!"llvm.loop.unroll.runtime.disable"}
!22 = !{!4, !5, i64 16}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_OS8_: argument 0"}
!25 = distinct !{!25, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_OS8_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!28 = distinct !{!28, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!29 = distinct !{!29, !16}
!30 = distinct !{!30, !16}
!31 = distinct !{!31, !16}
!32 = distinct !{!32, !16}
