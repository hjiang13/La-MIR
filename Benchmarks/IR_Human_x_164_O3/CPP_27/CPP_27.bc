; ModuleID = '../../Human_xBenchmarks_164/CPP_27/CPP_27.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_27/CPP_27.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: uwtable
define dso_local void @_Z9filp_caseNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !3
  %7 = bitcast %union.anon* %5 to i8*
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %9, align 8, !tbaa !8
  store i8 0, i8* %7, align 8, !tbaa !11
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %12 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %14 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  %15 = bitcast i64* %3 to i8*
  %16 = bitcast %union.anon* %13 to i8*
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %21 = load i64, i64* %10, align 8, !tbaa !8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %107, label %23

23:                                               ; preds = %2
  %24 = bitcast i64* %19 to <2 x i64>*
  %25 = bitcast i64* %9 to <2 x i64>*
  br label %26

26:                                               ; preds = %23, %96
  %27 = phi i64 [ %97, %96 ], [ 0, %23 ]
  %28 = load i8*, i8** %11, align 8, !tbaa !12
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = load i8, i8* %29, align 1, !tbaa !11
  %31 = add i8 %30, -97
  %32 = icmp ult i8 %31, 26
  br i1 %32, label %33, label %35

33:                                               ; preds = %26
  %34 = add nsw i8 %30, -32
  br label %40

35:                                               ; preds = %26
  %36 = add i8 %30, -65
  %37 = icmp ult i8 %36, 26
  %38 = add i8 %30, 32
  %39 = select i1 %37, i8 %38, i8 %30
  br label %40

40:                                               ; preds = %35, %33
  %41 = phi i8 [ %34, %33 ], [ %39, %35 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #6
  call void @llvm.experimental.noalias.scope.decl(metadata !13)
  store %union.anon* %13, %union.anon** %14, align 8, !tbaa !3, !alias.scope !13
  %42 = load i8*, i8** %8, align 8, !tbaa !12, !noalias !13
  %43 = load i64, i64* %9, align 8, !tbaa !8, !noalias !13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6, !noalias !13
  store i64 %43, i64* %3, align 8, !tbaa !16, !noalias !13
  %44 = icmp ugt i64 %43, 15
  br i1 %44, label %45, label %49

45:                                               ; preds = %40
  %46 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %4, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %47 unwind label %100

47:                                               ; preds = %45
  store i8* %46, i8** %17, align 8, !tbaa !12, !alias.scope !13
  %48 = load i64, i64* %3, align 8, !tbaa !16, !noalias !13
  store i64 %48, i64* %18, align 8, !tbaa !11, !alias.scope !13
  br label %49

49:                                               ; preds = %40, %47
  %50 = phi i8* [ %46, %47 ], [ %16, %40 ]
  switch i64 %43, label %53 [
    i64 1, label %51
    i64 0, label %54
  ]

51:                                               ; preds = %49
  %52 = load i8, i8* %42, align 1, !tbaa !11
  store i8 %52, i8* %50, align 1, !tbaa !11
  br label %54

53:                                               ; preds = %49
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 1 %42, i64 %43, i1 false) #6
  br label %54

54:                                               ; preds = %53, %51, %49
  %55 = load i64, i64* %3, align 8, !tbaa !16, !noalias !13
  store i64 %55, i64* %19, align 8, !tbaa !8, !alias.scope !13
  %56 = load i8*, i8** %17, align 8, !tbaa !12, !alias.scope !13
  %57 = getelementptr inbounds i8, i8* %56, i64 %55
  store i8 0, i8* %57, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6, !noalias !13
  %58 = load i64, i64* %19, align 8, !tbaa !8, !alias.scope !13
  %59 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %4, i64 %58, i64 0, i64 1, i8 signext %41)
          to label %65 unwind label %60

60:                                               ; preds = %54
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = load i8*, i8** %17, align 8, !tbaa !12, !alias.scope !13
  %63 = icmp eq i8* %62, %16
  br i1 %63, label %102, label %64

64:                                               ; preds = %60
  call void @_ZdlPv(i8* %62) #6
  br label %102

65:                                               ; preds = %54
  %66 = load i8*, i8** %17, align 8, !tbaa !12
  %67 = icmp eq i8* %66, %16
  br i1 %67, label %68, label %82

68:                                               ; preds = %65
  %69 = load i64, i64* %19, align 8, !tbaa !8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %68
  %72 = load i8*, i8** %8, align 8, !tbaa !12
  %73 = icmp eq i64 %69, 1
  br i1 %73, label %74, label %76

74:                                               ; preds = %71
  %75 = load i8, i8* %16, align 8, !tbaa !11
  store i8 %75, i8* %72, align 1, !tbaa !11
  br label %77

76:                                               ; preds = %71
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %72, i8* nonnull align 8 %16, i64 %69, i1 false) #6
  br label %77

77:                                               ; preds = %76, %74, %68
  %78 = load i64, i64* %19, align 8, !tbaa !8
  store i64 %78, i64* %9, align 8, !tbaa !8
  %79 = load i8*, i8** %8, align 8, !tbaa !12
  %80 = getelementptr inbounds i8, i8* %79, i64 %78
  store i8 0, i8* %80, align 1, !tbaa !11
  %81 = load i8*, i8** %17, align 8, !tbaa !12
  br label %91

82:                                               ; preds = %65
  %83 = load i8*, i8** %8, align 8, !tbaa !12
  %84 = icmp eq i8* %83, %7
  %85 = load i64, i64* %20, align 8
  store i8* %66, i8** %8, align 8, !tbaa !12
  %86 = load <2 x i64>, <2 x i64>* %24, align 8, !tbaa !11
  store <2 x i64> %86, <2 x i64>* %25, align 8, !tbaa !11
  %87 = icmp eq i8* %83, null
  %88 = or i1 %84, %87
  br i1 %88, label %90, label %89

89:                                               ; preds = %82
  store i8* %83, i8** %17, align 8, !tbaa !12
  store i64 %85, i64* %18, align 8, !tbaa !11
  br label %91

90:                                               ; preds = %82
  store %union.anon* %13, %union.anon** %14, align 8, !tbaa !12
  br label %91

91:                                               ; preds = %77, %89, %90
  %92 = phi i8* [ %81, %77 ], [ %83, %89 ], [ %16, %90 ]
  store i64 0, i64* %19, align 8, !tbaa !8
  store i8 0, i8* %92, align 1, !tbaa !11
  %93 = load i8*, i8** %17, align 8, !tbaa !12
  %94 = icmp eq i8* %93, %16
  br i1 %94, label %96, label %95

95:                                               ; preds = %91
  call void @_ZdlPv(i8* %93) #6
  br label %96

96:                                               ; preds = %91, %95
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #6
  %97 = add nuw i64 %27, 1
  %98 = load i64, i64* %10, align 8, !tbaa !8
  %99 = icmp ugt i64 %98, %97
  br i1 %99, label %26, label %107, !llvm.loop !17

100:                                              ; preds = %45
  %101 = landingpad { i8*, i32 }
          cleanup
  br label %102

102:                                              ; preds = %60, %64, %100
  %103 = phi { i8*, i32 } [ %101, %100 ], [ %61, %64 ], [ %61, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #6
  %104 = load i8*, i8** %8, align 8, !tbaa !12
  %105 = icmp eq i8* %104, %7
  br i1 %105, label %108, label %106

106:                                              ; preds = %102
  call void @_ZdlPv(i8* %104) #6
  br label %108

107:                                              ; preds = %96, %2
  ret void

108:                                              ; preds = %106, %102
  resume { i8*, i32 } %103
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #3

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #5

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!15 = distinct !{!15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!16 = !{!10, !10, i64 0}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.mustprogress"}
