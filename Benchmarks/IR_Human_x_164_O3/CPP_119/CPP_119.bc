; ModuleID = '../../Human_xBenchmarks_164/CPP_119/CPP_119.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_119/CPP_119.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }

@.str.1 = private unnamed_addr constant [4 x i8] c"Yes\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z12match_parensSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::vector"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %8, align 8, !tbaa !3
  tail call void @llvm.experimental.noalias.scope.decl(metadata !8)
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %11 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  store %union.anon* %10, %union.anon** %11, align 8, !tbaa !11, !alias.scope !8
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8, !tbaa !13, !noalias !8
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 1
  %15 = load i64, i64* %14, align 8, !tbaa !16, !noalias !8
  %16 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6, !noalias !8
  store i64 %15, i64* %4, align 8, !tbaa !17, !noalias !8
  %17 = icmp ugt i64 %15, 15
  br i1 %17, label %20, label %18

18:                                               ; preds = %2
  %19 = bitcast %union.anon* %10 to i8*
  br label %25

20:                                               ; preds = %2
  %21 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  store i8* %21, i8** %22, align 8, !tbaa !13, !alias.scope !8
  %23 = load i64, i64* %4, align 8, !tbaa !17, !noalias !8
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  store i64 %23, i64* %24, align 8, !tbaa !18, !alias.scope !8
  br label %25

25:                                               ; preds = %20, %18
  %26 = phi i8* [ %19, %18 ], [ %21, %20 ]
  switch i64 %15, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %25
  %28 = load i8, i8* %13, align 1, !tbaa !18
  store i8 %28, i8* %26, align 1, !tbaa !18
  br label %30

29:                                               ; preds = %25
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %13, i64 %15, i1 false) #6
  br label %30

30:                                               ; preds = %29, %27, %25
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %32 = load i64, i64* %4, align 8, !tbaa !17, !noalias !8
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  store i64 %32, i64* %33, align 8, !tbaa !16, !alias.scope !8
  %34 = load i8*, i8** %31, align 8, !tbaa !13, !alias.scope !8
  %35 = getelementptr inbounds i8, i8* %34, i64 %32
  store i8 0, i8* %35, align 1, !tbaa !18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6, !noalias !8
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 1, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8, !tbaa !13, !noalias !8
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 1, i32 1
  %39 = load i64, i64* %38, align 8, !tbaa !16, !noalias !8
  %40 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i8* %37, i64 %39)
          to label %41 unwind label %50

41:                                               ; preds = %30
  %42 = load i64, i64* %33, align 8, !tbaa !16
  %43 = load i8*, i8** %31, align 8
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %119, label %45

45:                                               ; preds = %41
  %46 = and i64 %42, 1
  %47 = icmp eq i64 %42, 1
  br i1 %47, label %87, label %48

48:                                               ; preds = %45
  %49 = and i64 %42, -2
  br label %58

50:                                               ; preds = %30
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = load i8*, i8** %31, align 8, !tbaa !13, !alias.scope !8
  %53 = bitcast %union.anon* %10 to i8*
  %54 = icmp eq i8* %52, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %50
  call void @_ZdlPv(i8* %52) #6
  br label %56

56:                                               ; preds = %50, %55, %289
  %57 = phi { i8*, i32 } [ %244, %289 ], [ %51, %55 ], [ %51, %50 ]
  resume { i8*, i32 } %57

58:                                               ; preds = %58, %48
  %59 = phi i64 [ 0, %48 ], [ %84, %58 ]
  %60 = phi i8 [ 1, %48 ], [ %83, %58 ]
  %61 = phi i32 [ 0, %48 ], [ %80, %58 ]
  %62 = phi i64 [ %49, %48 ], [ %85, %58 ]
  %63 = getelementptr inbounds i8, i8* %43, i64 %59
  %64 = load i8, i8* %63, align 1, !tbaa !18
  %65 = icmp eq i8 %64, 40
  %66 = zext i1 %65 to i32
  %67 = add nsw i32 %61, %66
  %68 = icmp eq i8 %64, 41
  %69 = sext i1 %68 to i32
  %70 = add nsw i32 %67, %69
  %71 = icmp slt i32 %70, 0
  %72 = or i64 %59, 1
  %73 = getelementptr inbounds i8, i8* %43, i64 %72
  %74 = load i8, i8* %73, align 1, !tbaa !18
  %75 = icmp eq i8 %74, 40
  %76 = zext i1 %75 to i32
  %77 = add nsw i32 %70, %76
  %78 = icmp eq i8 %74, 41
  %79 = sext i1 %78 to i32
  %80 = add nsw i32 %77, %79
  %81 = icmp slt i32 %80, 0
  %82 = select i1 %81, i1 true, i1 %71
  %83 = select i1 %82, i8 0, i8 %60
  %84 = add nuw nsw i64 %59, 2
  %85 = add i64 %62, -2
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %58, !llvm.loop !19

87:                                               ; preds = %58, %45
  %88 = phi i32 [ undef, %45 ], [ %80, %58 ]
  %89 = phi i8 [ undef, %45 ], [ %83, %58 ]
  %90 = phi i64 [ 0, %45 ], [ %84, %58 ]
  %91 = phi i8 [ 1, %45 ], [ %83, %58 ]
  %92 = phi i32 [ 0, %45 ], [ %80, %58 ]
  %93 = icmp eq i64 %46, 0
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds i8, i8* %43, i64 %90
  %96 = load i8, i8* %95, align 1, !tbaa !18
  %97 = icmp eq i8 %96, 40
  %98 = zext i1 %97 to i32
  %99 = add nsw i32 %92, %98
  %100 = icmp eq i8 %96, 41
  %101 = sext i1 %100 to i32
  %102 = add nsw i32 %99, %101
  %103 = icmp slt i32 %102, 0
  %104 = select i1 %103, i8 0, i8 %91
  br label %105

105:                                              ; preds = %87, %94
  %106 = phi i32 [ %88, %87 ], [ %102, %94 ]
  %107 = phi i8 [ %89, %87 ], [ %104, %94 ]
  %108 = icmp eq i32 %106, 0
  br i1 %108, label %116, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %111 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %110, %union.anon** %111, align 8, !tbaa !11
  %112 = bitcast %union.anon* %110 to i16*
  store i16 28494, i16* %112, align 8
  %113 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 2, i64* %113, align 8, !tbaa !16
  %114 = bitcast %union.anon* %110 to i8*
  %115 = getelementptr inbounds i8, i8* %114, i64 2
  store i8 0, i8* %115, align 2, !tbaa !18
  br label %282

116:                                              ; preds = %105
  %117 = and i8 %107, 1
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %41, %116
  %120 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %121 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %120, %union.anon** %121, align 8, !tbaa !11
  %122 = bitcast %union.anon* %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(3) %122, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3, i1 false) #6
  %123 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 3, i64* %123, align 8, !tbaa !16
  %124 = getelementptr inbounds i8, i8* %122, i64 3
  store i8 0, i8* %124, align 1, !tbaa !18
  br label %282

125:                                              ; preds = %116
  %126 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %126) #6
  %127 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %8, align 8, !tbaa !3
  call void @llvm.experimental.noalias.scope.decl(metadata !21)
  %128 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %129 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  store %union.anon* %128, %union.anon** %129, align 8, !tbaa !11, !alias.scope !21
  %130 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %127, i64 1, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8, !tbaa !13, !noalias !21
  %132 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %127, i64 1, i32 1
  %133 = load i64, i64* %132, align 8, !tbaa !16, !noalias !21
  %134 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #6, !noalias !21
  store i64 %133, i64* %3, align 8, !tbaa !17, !noalias !21
  %135 = icmp ugt i64 %133, 15
  br i1 %135, label %138, label %136

136:                                              ; preds = %125
  %137 = bitcast %union.anon* %128 to i8*
  br label %144

138:                                              ; preds = %125
  %139 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %140 unwind label %241

140:                                              ; preds = %138
  %141 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  store i8* %139, i8** %141, align 8, !tbaa !13, !alias.scope !21
  %142 = load i64, i64* %3, align 8, !tbaa !17, !noalias !21
  %143 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  store i64 %142, i64* %143, align 8, !tbaa !18, !alias.scope !21
  br label %144

144:                                              ; preds = %140, %136
  %145 = phi i8* [ %137, %136 ], [ %139, %140 ]
  switch i64 %133, label %148 [
    i64 1, label %146
    i64 0, label %149
  ]

146:                                              ; preds = %144
  %147 = load i8, i8* %131, align 1, !tbaa !18
  store i8 %147, i8* %145, align 1, !tbaa !18
  br label %149

148:                                              ; preds = %144
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %145, i8* align 1 %131, i64 %133, i1 false) #6
  br label %149

149:                                              ; preds = %148, %146, %144
  %150 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %151 = load i64, i64* %3, align 8, !tbaa !17, !noalias !21
  %152 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  store i64 %151, i64* %152, align 8, !tbaa !16, !alias.scope !21
  %153 = load i8*, i8** %150, align 8, !tbaa !13, !alias.scope !21
  %154 = getelementptr inbounds i8, i8* %153, i64 %151
  store i8 0, i8* %154, align 1, !tbaa !18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #6, !noalias !21
  %155 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %127, i64 0, i32 0, i32 0
  %156 = load i8*, i8** %155, align 8, !tbaa !13, !noalias !21
  %157 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %127, i64 0, i32 1
  %158 = load i64, i64* %157, align 8, !tbaa !16, !noalias !21
  %159 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i8* %156, i64 %158)
          to label %166 unwind label %160

160:                                              ; preds = %149
  %161 = landingpad { i8*, i32 }
          cleanup
  %162 = load i8*, i8** %150, align 8, !tbaa !13, !alias.scope !21
  %163 = bitcast %union.anon* %128 to i8*
  %164 = icmp eq i8* %162, %163
  br i1 %164, label %243, label %165

165:                                              ; preds = %160
  call void @_ZdlPv(i8* %162) #6
  br label %243

166:                                              ; preds = %149
  %167 = load i8*, i8** %150, align 8, !tbaa !13
  %168 = bitcast %union.anon* %128 to i8*
  %169 = icmp eq i8* %167, %168
  br i1 %169, label %170, label %184

170:                                              ; preds = %166
  %171 = load i64, i64* %152, align 8, !tbaa !16
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %179, label %173

173:                                              ; preds = %170
  %174 = load i8*, i8** %31, align 8, !tbaa !13
  %175 = icmp eq i64 %171, 1
  br i1 %175, label %176, label %178

176:                                              ; preds = %173
  %177 = load i8, i8* %168, align 8, !tbaa !18
  store i8 %177, i8* %174, align 1, !tbaa !18
  br label %179

178:                                              ; preds = %173
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %174, i8* nonnull align 8 %168, i64 %171, i1 false) #6
  br label %179

179:                                              ; preds = %178, %176, %170
  %180 = load i64, i64* %152, align 8, !tbaa !16
  store i64 %180, i64* %33, align 8, !tbaa !16
  %181 = load i8*, i8** %31, align 8, !tbaa !13
  %182 = getelementptr inbounds i8, i8* %181, i64 %180
  store i8 0, i8* %182, align 1, !tbaa !18
  %183 = load i8*, i8** %150, align 8, !tbaa !13
  br label %198

184:                                              ; preds = %166
  %185 = bitcast %union.anon* %10 to i8*
  %186 = load i8*, i8** %31, align 8, !tbaa !13
  %187 = icmp eq i8* %186, %185
  %188 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %189 = load i64, i64* %188, align 8
  store i8* %167, i8** %31, align 8, !tbaa !13
  %190 = bitcast i64* %152 to <2 x i64>*
  %191 = load <2 x i64>, <2 x i64>* %190, align 8, !tbaa !18
  %192 = bitcast i64* %33 to <2 x i64>*
  store <2 x i64> %191, <2 x i64>* %192, align 8, !tbaa !18
  %193 = icmp eq i8* %186, null
  %194 = or i1 %187, %193
  br i1 %194, label %197, label %195

195:                                              ; preds = %184
  store i8* %186, i8** %150, align 8, !tbaa !13
  %196 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  store i64 %189, i64* %196, align 8, !tbaa !18
  br label %198

197:                                              ; preds = %184
  store %union.anon* %128, %union.anon** %129, align 8, !tbaa !13
  br label %198

198:                                              ; preds = %179, %195, %197
  %199 = phi i8* [ %183, %179 ], [ %186, %195 ], [ %168, %197 ]
  store i64 0, i64* %152, align 8, !tbaa !16
  store i8 0, i8* %199, align 1, !tbaa !18
  %200 = load i8*, i8** %150, align 8, !tbaa !13
  %201 = icmp eq i8* %200, %168
  br i1 %201, label %203, label %202

202:                                              ; preds = %198
  call void @_ZdlPv(i8* %200) #6
  br label %203

203:                                              ; preds = %198, %202
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %126) #6
  %204 = load i64, i64* %33, align 8, !tbaa !16
  %205 = load i8*, i8** %31, align 8
  %206 = icmp eq i64 %204, 0
  br i1 %206, label %269, label %207

207:                                              ; preds = %203
  %208 = and i64 %204, 1
  %209 = icmp eq i64 %204, 1
  br i1 %209, label %248, label %210

210:                                              ; preds = %207
  %211 = and i64 %204, -2
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %238, %212 ]
  %214 = phi i8 [ 1, %210 ], [ %237, %212 ]
  %215 = phi i32 [ 0, %210 ], [ %234, %212 ]
  %216 = phi i64 [ %211, %210 ], [ %239, %212 ]
  %217 = getelementptr inbounds i8, i8* %205, i64 %213
  %218 = load i8, i8* %217, align 1, !tbaa !18
  %219 = icmp eq i8 %218, 40
  %220 = zext i1 %219 to i32
  %221 = add nsw i32 %215, %220
  %222 = icmp eq i8 %218, 41
  %223 = sext i1 %222 to i32
  %224 = add nsw i32 %221, %223
  %225 = icmp slt i32 %224, 0
  %226 = or i64 %213, 1
  %227 = getelementptr inbounds i8, i8* %205, i64 %226
  %228 = load i8, i8* %227, align 1, !tbaa !18
  %229 = icmp eq i8 %228, 40
  %230 = zext i1 %229 to i32
  %231 = add nsw i32 %224, %230
  %232 = icmp eq i8 %228, 41
  %233 = sext i1 %232 to i32
  %234 = add nsw i32 %231, %233
  %235 = icmp slt i32 %234, 0
  %236 = select i1 %235, i1 true, i1 %225
  %237 = select i1 %236, i8 0, i8 %214
  %238 = add nuw nsw i64 %213, 2
  %239 = add i64 %216, -2
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %248, label %212, !llvm.loop !24

241:                                              ; preds = %138
  %242 = landingpad { i8*, i32 }
          cleanup
  br label %243

243:                                              ; preds = %160, %165, %241
  %244 = phi { i8*, i32 } [ %242, %241 ], [ %161, %165 ], [ %161, %160 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %126) #6
  %245 = load i8*, i8** %31, align 8, !tbaa !13
  %246 = bitcast %union.anon* %10 to i8*
  %247 = icmp eq i8* %245, %246
  br i1 %247, label %289, label %288

248:                                              ; preds = %212, %207
  %249 = phi i8 [ undef, %207 ], [ %237, %212 ]
  %250 = phi i64 [ 0, %207 ], [ %238, %212 ]
  %251 = phi i8 [ 1, %207 ], [ %237, %212 ]
  %252 = phi i32 [ 0, %207 ], [ %234, %212 ]
  %253 = icmp eq i64 %208, 0
  br i1 %253, label %265, label %254

254:                                              ; preds = %248
  %255 = getelementptr inbounds i8, i8* %205, i64 %250
  %256 = load i8, i8* %255, align 1, !tbaa !18
  %257 = icmp eq i8 %256, 40
  %258 = zext i1 %257 to i32
  %259 = add nsw i32 %252, %258
  %260 = icmp eq i8 %256, 41
  %261 = sext i1 %260 to i32
  %262 = add nsw i32 %259, %261
  %263 = icmp slt i32 %262, 0
  %264 = select i1 %263, i8 0, i8 %251
  br label %265

265:                                              ; preds = %248, %254
  %266 = phi i8 [ %249, %248 ], [ %264, %254 ]
  %267 = and i8 %266, 1
  %268 = icmp eq i8 %267, 0
  br i1 %268, label %275, label %269

269:                                              ; preds = %203, %265
  %270 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %271 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %270, %union.anon** %271, align 8, !tbaa !11
  %272 = bitcast %union.anon* %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(3) %272, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3, i1 false) #6
  %273 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 3, i64* %273, align 8, !tbaa !16
  %274 = getelementptr inbounds i8, i8* %272, i64 3
  store i8 0, i8* %274, align 1, !tbaa !18
  br label %282

275:                                              ; preds = %265
  %276 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %277 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %276, %union.anon** %277, align 8, !tbaa !11
  %278 = bitcast %union.anon* %276 to i16*
  store i16 28494, i16* %278, align 8
  %279 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 2, i64* %279, align 8, !tbaa !16
  %280 = bitcast %union.anon* %276 to i8*
  %281 = getelementptr inbounds i8, i8* %280, i64 2
  store i8 0, i8* %281, align 2, !tbaa !18
  br label %282

282:                                              ; preds = %275, %269, %119, %109
  %283 = phi i8* [ %205, %275 ], [ %205, %269 ], [ %43, %119 ], [ %43, %109 ]
  %284 = bitcast %union.anon* %10 to i8*
  %285 = icmp eq i8* %283, %284
  br i1 %285, label %287, label %286

286:                                              ; preds = %282
  call void @_ZdlPv(i8* %283) #6
  br label %287

287:                                              ; preds = %282, %286
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #6
  ret void

288:                                              ; preds = %243
  call void @_ZdlPv(i8* %245) #6
  br label %289

289:                                              ; preds = %243, %288
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #6
  br label %56
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #3

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #5

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!10 = distinct !{!10, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!11 = !{!12, !5, i64 0}
!12 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!13 = !{!14, !5, i64 0}
!14 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !12, i64 0, !15, i64 8, !6, i64 16}
!15 = !{!"long", !6, i64 0}
!16 = !{!14, !15, i64 8}
!17 = !{!15, !15, i64 0}
!18 = !{!6, !6, i64 0}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.mustprogress"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!23 = distinct !{!23, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!24 = distinct !{!24, !20}
