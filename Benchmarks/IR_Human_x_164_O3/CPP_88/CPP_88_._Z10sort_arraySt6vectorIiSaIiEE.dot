digraph "CFG for '_Z10sort_arraySt6vectorIiSaIiEE' function" {
	label="CFG for '_Z10sort_arraySt6vectorIiSaIiEE' function";

	Node0x5650ad199620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = load i32*, i32** %3, align 8, !tbaa !3\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %6 = load i32*, i32** %5, align 8, !tbaa !8\l  %7 = ptrtoint i32* %4 to i64\l  %8 = ptrtoint i32* %6 to i64\l  %9 = sub i64 %7, %8\l  %10 = ashr exact i64 %9, 2\l  %11 = icmp eq i64 %9, 0\l  br i1 %11, label %12, label %14\l|{<s0>T|<s1>F}}"];
	Node0x5650ad199620:s0 -> Node0x5650ad19a9b0;
	Node0x5650ad199620:s1 -> Node0x5650ad19aff0;
	Node0x5650ad19a9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%12:\l12:                                               \l  %13 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %13, i8 0, i64 24, i1 false)\l  br label %128\l}"];
	Node0x5650ad19a9b0 -> Node0x5650ad19b570;
	Node0x5650ad19aff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%14:\l14:                                               \l  %15 = load i32, i32* %6, align 4, !tbaa !9\l  %16 = add nsw i64 %10, -1\l  %17 = getelementptr inbounds i32, i32* %6, i64 %16\l  %18 = load i32, i32* %17, align 4, !tbaa !9\l  %19 = add nsw i32 %18, %15\l  %20 = srem i32 %19, 2\l  %21 = icmp eq i32 %20, 1\l  %22 = icmp eq i32* %6, %4\l  br i1 %21, label %23, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5650ad19aff0:s0 -> Node0x5650ad19c0f0;
	Node0x5650ad19aff0:s1 -> Node0x5650ad19c180;
	Node0x5650ad19c0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%23:\l23:                                               \l  %24 = insertelement \<2 x i32*\> poison, i32* %4, i32 0\l  %25 = shufflevector \<2 x i32*\> %24, \<2 x i32*\> poison, \<2 x i32\>\l... zeroinitializer\l  br i1 %22, label %32, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5650ad19c0f0:s0 -> Node0x5650ad19d290;
	Node0x5650ad19c0f0:s1 -> Node0x5650ad19d2e0;
	Node0x5650ad19d2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%26:\l26:                                               \l  %27 = tail call i64 @llvm.ctlz.i64(i64 %10, i1 true) #8, !range !11\l  %28 = shl nuw nsw i64 %27, 1\l  %29 = xor i64 %28, 126\l  tail call void\l... @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElN\l...S0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i32* nonnull %6, i32* %4, i64 %29)\l  tail call void\l... @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIi\l...EEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* nonnull %6, i32* %4)\l  %30 = bitcast %\"class.std::vector\"* %1 to \<2 x i32*\>*\l  %31 = load \<2 x i32*\>, \<2 x i32*\>* %30, align 8, !tbaa !12\l  br label %32\l}"];
	Node0x5650ad19d2e0 -> Node0x5650ad19d290;
	Node0x5650ad19d290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%32:\l32:                                               \l  %33 = phi \<2 x i32*\> [ %25, %23 ], [ %31, %26 ]\l  %34 = bitcast %\"class.std::vector\"* %0 to \<2 x i32*\>*\l  store \<2 x i32*\> %33, \<2 x i32*\>* %34, align 8, !tbaa !12\l  %35 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %36 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %37 = load i32*, i32** %36, align 8, !tbaa !13\l  store i32* %37, i32** %35, align 8, !tbaa !13\l  %38 = bitcast %\"class.std::vector\"* %1 to i8*\l  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %38, i8 0, i64 24, i1 false) #8\l  br label %128\l}"];
	Node0x5650ad19d290 -> Node0x5650ad19b570;
	Node0x5650ad19c180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%39:\l39:                                               \l  br i1 %22, label %48, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5650ad19c180:s0 -> Node0x5650ad19f740;
	Node0x5650ad19c180:s1 -> Node0x5650ad19f790;
	Node0x5650ad19f790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%40:\l40:                                               \l  %41 = tail call i64 @llvm.ctlz.i64(i64 %10, i1 true) #8, !range !11\l  %42 = shl nuw nsw i64 %41, 1\l  %43 = xor i64 %42, 126\l  tail call void\l... @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElN\l...S0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i32* nonnull %6, i32* %4, i64 %43)\l  tail call void\l... @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIi\l...EEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* nonnull %6, i32* %4)\l  %44 = load i32*, i32** %3, align 8, !tbaa !3\l  %45 = load i32*, i32** %5, align 8, !tbaa !8\l  %46 = ptrtoint i32* %44 to i64\l  %47 = ptrtoint i32* %45 to i64\l  br label %48\l}"];
	Node0x5650ad19f790 -> Node0x5650ad19f740;
	Node0x5650ad19f740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%48:\l48:                                               \l  %49 = phi i64 [ %7, %39 ], [ %47, %40 ]\l  %50 = phi i64 [ %7, %39 ], [ %46, %40 ]\l  %51 = phi i32* [ %4, %39 ], [ %45, %40 ]\l  %52 = sub i64 %50, %49\l  %53 = lshr exact i64 %52, 2\l  %54 = trunc i64 %53 to i32\l  %55 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %56 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %57 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %58 = add i32 %54, -1\l  %59 = icmp sgt i32 %58, -1\l  %60 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %60, i8 0, i64 24, i1 false)\l  br i1 %59, label %61, label %128\l|{<s0>T|<s1>F}}"];
	Node0x5650ad19f740:s0 -> Node0x5650ad1a1bf0;
	Node0x5650ad19f740:s1 -> Node0x5650ad19b570;
	Node0x5650ad1a1bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  %62 = phi i32* [ %111, %116 ], [ null, %48 ]\l  %63 = phi i32* [ %112, %116 ], [ null, %48 ]\l  %64 = phi i32* [ %113, %116 ], [ null, %48 ]\l  %65 = phi i32* [ %117, %116 ], [ %51, %48 ]\l  %66 = phi i32 [ %114, %116 ], [ %58, %48 ]\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32* %65, i64 %67\l  %69 = icmp eq i32* %64, %63\l  br i1 %69, label %73, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5650ad1a1bf0:s0 -> Node0x5650ad1a27f0;
	Node0x5650ad1a1bf0:s1 -> Node0x5650ad1a2880;
	Node0x5650ad1a2880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%70:\l70:                                               \l  %71 = load i32, i32* %68, align 4, !tbaa !9\l  store i32 %71, i32* %64, align 4, !tbaa !9\l  %72 = getelementptr inbounds i32, i32* %64, i64 1\l  store i32* %72, i32** %55, align 8, !tbaa !3\l  br label %110\l}"];
	Node0x5650ad1a2880 -> Node0x5650ad1a2bf0;
	Node0x5650ad1a27f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%73:\l73:                                               \l  %74 = ptrtoint i32* %63 to i64\l  %75 = ptrtoint i32* %62 to i64\l  %76 = sub i64 %74, %75\l  %77 = ashr exact i64 %76, 2\l  %78 = icmp eq i64 %76, 9223372036854775804\l  br i1 %78, label %79, label %81\l|{<s0>T|<s1>F}}"];
	Node0x5650ad1a27f0:s0 -> Node0x5650ad1a2f70;
	Node0x5650ad1a27f0:s1 -> Node0x5650ad1a2fc0;
	Node0x5650ad1a2f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%79:\l79:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #9\l          to label %80 unwind label %120\l}"];
	Node0x5650ad1a2f70 -> Node0x5650ad1a31c0;
	Node0x5650ad1a2f70 -> Node0x5650ad1a3210;
	Node0x5650ad1a31c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%80:\l80:                                               \l  unreachable\l}"];
	Node0x5650ad1a2fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%81:\l81:                                               \l  %82 = icmp eq i64 %76, 0\l  %83 = select i1 %82, i64 1, i64 %77\l  %84 = add nsw i64 %83, %77\l  %85 = icmp ult i64 %84, %77\l  %86 = icmp ugt i64 %84, 2305843009213693951\l  %87 = or i1 %85, %86\l  %88 = select i1 %87, i64 2305843009213693951, i64 %84\l  %89 = icmp eq i64 %88, 0\l  br i1 %89, label %95, label %90\l|{<s0>T|<s1>F}}"];
	Node0x5650ad1a2fc0:s0 -> Node0x5650ad1a3970;
	Node0x5650ad1a2fc0:s1 -> Node0x5650ad1a39c0;
	Node0x5650ad1a39c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%90:\l90:                                               \l  %91 = shl nuw nsw i64 %88, 2\l  %92 = invoke noalias nonnull i8* @_Znwm(i64 %91) #10\l          to label %93 unwind label %118\l}"];
	Node0x5650ad1a39c0 -> Node0x5650ad1a3b50;
	Node0x5650ad1a39c0 -> Node0x5650ad1a3ba0;
	Node0x5650ad1a3b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%93:\l93:                                               \l  %94 = bitcast i8* %92 to i32*\l  br label %95\l}"];
	Node0x5650ad1a3b50 -> Node0x5650ad1a3970;
	Node0x5650ad1a3970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%95:\l95:                                               \l  %96 = phi i32* [ %94, %93 ], [ null, %81 ]\l  %97 = getelementptr inbounds i32, i32* %96, i64 %77\l  %98 = load i32, i32* %68, align 4, !tbaa !9\l  store i32 %98, i32* %97, align 4, !tbaa !9\l  %99 = icmp sgt i64 %76, 0\l  br i1 %99, label %100, label %103\l|{<s0>T|<s1>F}}"];
	Node0x5650ad1a3970:s0 -> Node0x5650ad1a41d0;
	Node0x5650ad1a3970:s1 -> Node0x5650ad1a4220;
	Node0x5650ad1a41d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%100:\l100:                                              \l  %101 = bitcast i32* %96 to i8*\l  %102 = bitcast i32* %62 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4\l... %102, i64 %76, i1 false) #8\l  br label %103\l}"];
	Node0x5650ad1a41d0 -> Node0x5650ad1a4220;
	Node0x5650ad1a4220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%103:\l103:                                              \l  %104 = getelementptr inbounds i32, i32* %97, i64 1\l  %105 = icmp eq i32* %62, null\l  br i1 %105, label %108, label %106\l|{<s0>T|<s1>F}}"];
	Node0x5650ad1a4220:s0 -> Node0x5650ad1a48b0;
	Node0x5650ad1a4220:s1 -> Node0x5650ad1a4900;
	Node0x5650ad1a4900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%106:\l106:                                              \l  %107 = bitcast i32* %62 to i8*\l  tail call void @_ZdlPv(i8* nonnull %107) #8\l  br label %108\l}"];
	Node0x5650ad1a4900 -> Node0x5650ad1a48b0;
	Node0x5650ad1a48b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%108:\l108:                                              \l  store i32* %96, i32** %57, align 8, !tbaa !8\l  store i32* %104, i32** %55, align 8, !tbaa !3\l  %109 = getelementptr inbounds i32, i32* %96, i64 %88\l  store i32* %109, i32** %56, align 8, !tbaa !13\l  br label %110\l}"];
	Node0x5650ad1a48b0 -> Node0x5650ad1a2bf0;
	Node0x5650ad1a2bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%110:\l110:                                              \l  %111 = phi i32* [ %62, %70 ], [ %96, %108 ]\l  %112 = phi i32* [ %63, %70 ], [ %109, %108 ]\l  %113 = phi i32* [ %72, %70 ], [ %104, %108 ]\l  %114 = add i32 %66, -1\l  %115 = icmp sgt i32 %114, -1\l  br i1 %115, label %116, label %128\l|{<s0>T|<s1>F}}"];
	Node0x5650ad1a2bf0:s0 -> Node0x5650ad1a1cf0;
	Node0x5650ad1a2bf0:s1 -> Node0x5650ad19b570;
	Node0x5650ad1a1cf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%116:\l116:                                              \l  %117 = load i32*, i32** %5, align 8, !tbaa !8\l  br label %61\l}"];
	Node0x5650ad1a1cf0 -> Node0x5650ad1a1bf0;
	Node0x5650ad1a3ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%118:\l118:                                              \l  %119 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %122\l}"];
	Node0x5650ad1a3ba0 -> Node0x5650ad1a54d0;
	Node0x5650ad1a3210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%120:\l120:                                              \l  %121 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %122\l}"];
	Node0x5650ad1a3210 -> Node0x5650ad1a54d0;
	Node0x5650ad1a54d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%122:\l122:                                              \l  %123 = phi \{ i8*, i32 \} [ %119, %118 ], [ %121, %120 ]\l  %124 = icmp eq i32* %62, null\l  br i1 %124, label %127, label %125\l|{<s0>T|<s1>F}}"];
	Node0x5650ad1a54d0:s0 -> Node0x5650ad1a57b0;
	Node0x5650ad1a54d0:s1 -> Node0x5650ad1a5800;
	Node0x5650ad1a5800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%125:\l125:                                              \l  %126 = bitcast i32* %62 to i8*\l  tail call void @_ZdlPv(i8* nonnull %126) #8\l  br label %127\l}"];
	Node0x5650ad1a5800 -> Node0x5650ad1a57b0;
	Node0x5650ad1a57b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%127:\l127:                                              \l  resume \{ i8*, i32 \} %123\l}"];
	Node0x5650ad19b570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%128:\l128:                                              \l  ret void\l}"];
}
