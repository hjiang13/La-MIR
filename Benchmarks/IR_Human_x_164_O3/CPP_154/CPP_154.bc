; ModuleID = '../../Human_xBenchmarks_164/CPP_154/CPP_154.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_154/CPP_154.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: uwtable
define dso_local zeroext i1 @_Z16cycpattern_checkNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_(%"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %9 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %10 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %12 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  %13 = bitcast %union.anon* %11 to i8*
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %15 = bitcast i64* %4 to i8*
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  %19 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %21 = bitcast %"class.std::__cxx11::basic_string"* %7 to %union.anon**
  %22 = bitcast %union.anon* %20 to i8*
  %23 = bitcast i64* %3 to i8*
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 0
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %28 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %31 = bitcast %union.anon* %27 to i8*
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  %33 = load i64, i64* %8, align 8, !tbaa !3
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %141, label %38

35:                                               ; preds = %124
  %36 = load i64, i64* %8, align 8, !tbaa !3
  %37 = icmp ugt i64 %36, %125
  br i1 %37, label %38, label %139, !llvm.loop !10

38:                                               ; preds = %2, %35
  %39 = phi i64 [ %125, %35 ], [ 0, %2 ]
  %40 = phi i64 [ %36, %35 ], [ %33, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #7
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !12)
  store %union.anon* %11, %union.anon** %12, align 8, !tbaa !15, !alias.scope !12
  %41 = load i8*, i8** %14, align 8, !tbaa !16, !noalias !12
  %42 = getelementptr inbounds i8, i8* %41, i64 %39
  %43 = sub i64 %40, %39
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #7, !noalias !12
  store i64 %43, i64* %4, align 8, !tbaa !17, !noalias !12
  %44 = icmp ugt i64 %43, 15
  br i1 %44, label %45, label %48

45:                                               ; preds = %38
  %46 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
  store i8* %46, i8** %16, align 8, !tbaa !16, !alias.scope !12
  %47 = load i64, i64* %4, align 8, !tbaa !17, !noalias !12
  store i64 %47, i64* %17, align 8, !tbaa !18, !alias.scope !12
  br label %48

48:                                               ; preds = %45, %38
  %49 = phi i8* [ %46, %45 ], [ %13, %38 ]
  switch i64 %43, label %52 [
    i64 1, label %50
    i64 0, label %53
  ]

50:                                               ; preds = %48
  %51 = load i8, i8* %42, align 1, !tbaa !18
  store i8 %51, i8* %49, align 1, !tbaa !18
  br label %53

52:                                               ; preds = %48
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 %42, i64 %43, i1 false) #7
  br label %53

53:                                               ; preds = %48, %50, %52
  %54 = load i64, i64* %4, align 8, !tbaa !17, !noalias !12
  store i64 %54, i64* %18, align 8, !tbaa !3, !alias.scope !12
  %55 = load i8*, i8** %16, align 8, !tbaa !16, !alias.scope !12
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1, !tbaa !18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #7, !noalias !12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !19)
  %57 = load i64, i64* %8, align 8, !tbaa !3, !noalias !19
  store %union.anon* %20, %union.anon** %21, align 8, !tbaa !15, !alias.scope !19
  %58 = load i8*, i8** %14, align 8, !tbaa !16, !noalias !19
  %59 = icmp ugt i64 %57, %39
  %60 = select i1 %59, i64 %39, i64 %57
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #7, !noalias !19
  store i64 %60, i64* %3, align 8, !tbaa !17, !noalias !19
  %61 = icmp ugt i64 %60, 15
  br i1 %61, label %62, label %66

62:                                               ; preds = %53
  %63 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %64 unwind label %126

64:                                               ; preds = %62
  store i8* %63, i8** %24, align 8, !tbaa !16, !alias.scope !19
  %65 = load i64, i64* %3, align 8, !tbaa !17, !noalias !19
  store i64 %65, i64* %25, align 8, !tbaa !18, !alias.scope !19
  br label %66

66:                                               ; preds = %64, %53
  %67 = phi i8* [ %63, %64 ], [ %22, %53 ]
  %68 = trunc i64 %60 to i32
  switch i32 %68, label %71 [
    i32 1, label %69
    i32 0, label %72
  ]

69:                                               ; preds = %66
  %70 = load i8, i8* %58, align 1, !tbaa !18
  store i8 %70, i8* %67, align 1, !tbaa !18
  br label %72

71:                                               ; preds = %66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %67, i8* align 1 %58, i64 %60, i1 false) #7
  br label %72

72:                                               ; preds = %71, %69, %66
  %73 = load i64, i64* %3, align 8, !tbaa !17, !noalias !19
  store i64 %73, i64* %26, align 8, !tbaa !3, !alias.scope !19
  %74 = load i8*, i8** %24, align 8, !tbaa !16, !alias.scope !19
  %75 = getelementptr inbounds i8, i8* %74, i64 %73
  store i8 0, i8* %75, align 1, !tbaa !18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #7, !noalias !19
  call void @llvm.experimental.noalias.scope.decl(metadata !22)
  %76 = load i64, i64* %18, align 8, !tbaa !3, !noalias !22
  %77 = load i64, i64* %26, align 8, !tbaa !3, !noalias !22
  %78 = add i64 %77, %76
  %79 = load i8*, i8** %16, align 8, !tbaa !16, !noalias !22
  %80 = icmp eq i8* %79, %13
  %81 = load i64, i64* %17, align 8, !noalias !22
  %82 = select i1 %80, i64 15, i64 %81
  %83 = icmp ugt i64 %78, %82
  %84 = load i8*, i8** %24, align 8, !tbaa !16, !noalias !22
  br i1 %83, label %85, label %92

85:                                               ; preds = %72
  %86 = icmp eq i8* %84, %22
  %87 = load i64, i64* %25, align 8, !noalias !22
  %88 = select i1 %86, i64 15, i64 %87
  %89 = icmp ugt i64 %78, %88
  br i1 %89, label %92, label %90

90:                                               ; preds = %85
  %91 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i64 0, i64 0, i8* %79, i64 %76)
          to label %94 unwind label %128

92:                                               ; preds = %85, %72
  %93 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i8* %84, i64 %77)
          to label %94 unwind label %128

94:                                               ; preds = %92, %90
  %95 = phi %"class.std::__cxx11::basic_string"* [ %91, %90 ], [ %93, %92 ]
  store %union.anon* %27, %union.anon** %28, align 8, !tbaa !15, !alias.scope !22
  %96 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %95, i64 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8, !tbaa !16
  %98 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %95, i64 0, i32 2
  %99 = bitcast %union.anon* %98 to i8*
  %100 = icmp eq i8* %97, %99
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %31, i8* noundef nonnull align 8 dereferenceable(16) %97, i64 16, i1 false) #7
  br label %105

102:                                              ; preds = %94
  store i8* %97, i8** %29, align 8, !tbaa !16, !alias.scope !22
  %103 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %95, i64 0, i32 2, i32 0
  %104 = load i64, i64* %103, align 8, !tbaa !18
  store i64 %104, i64* %30, align 8, !tbaa !18, !alias.scope !22
  br label %105

105:                                              ; preds = %102, %101
  %106 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %95, i64 0, i32 1
  %107 = load i64, i64* %106, align 8, !tbaa !3
  store i64 %107, i64* %32, align 8, !tbaa !3, !alias.scope !22
  %108 = bitcast %"class.std::__cxx11::basic_string"* %95 to %union.anon**
  store %union.anon* %98, %union.anon** %108, align 8, !tbaa !16
  store i64 0, i64* %106, align 8, !tbaa !3
  store i8 0, i8* %99, align 8, !tbaa !18
  %109 = load i8*, i8** %24, align 8, !tbaa !16
  %110 = icmp eq i8* %109, %22
  br i1 %110, label %112, label %111

111:                                              ; preds = %105
  call void @_ZdlPv(i8* %109) #7
  br label %112

112:                                              ; preds = %105, %111
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #7
  %113 = load i8*, i8** %16, align 8, !tbaa !16
  %114 = icmp eq i8* %113, %13
  br i1 %114, label %116, label %115

115:                                              ; preds = %112
  call void @_ZdlPv(i8* %113) #7
  br label %116

116:                                              ; preds = %112, %115
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #7
  %117 = load i8*, i8** %29, align 8, !tbaa !16
  %118 = load i64, i64* %32, align 8, !tbaa !3
  %119 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %117, i64 0, i64 %118) #7
  %120 = icmp eq i64 %119, -1
  %121 = load i8*, i8** %29, align 8, !tbaa !16
  %122 = icmp eq i8* %121, %31
  br i1 %122, label %124, label %123

123:                                              ; preds = %116
  call void @_ZdlPv(i8* %121) #7
  br label %124

124:                                              ; preds = %116, %123
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #7
  %125 = add i64 %39, 1
  br i1 %120, label %35, label %139

126:                                              ; preds = %62
  %127 = landingpad { i8*, i32 }
          cleanup
  br label %133

128:                                              ; preds = %92, %90
  %129 = landingpad { i8*, i32 }
          cleanup
  %130 = load i8*, i8** %24, align 8, !tbaa !16
  %131 = icmp eq i8* %130, %22
  br i1 %131, label %133, label %132

132:                                              ; preds = %128
  call void @_ZdlPv(i8* %130) #7
  br label %133

133:                                              ; preds = %132, %128, %126
  %134 = phi { i8*, i32 } [ %127, %126 ], [ %129, %128 ], [ %129, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #7
  %135 = load i8*, i8** %16, align 8, !tbaa !16
  %136 = icmp eq i8* %135, %13
  br i1 %136, label %138, label %137

137:                                              ; preds = %133
  call void @_ZdlPv(i8* %135) #7
  br label %138

138:                                              ; preds = %133, %137
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #7
  resume { i8*, i32 } %134

139:                                              ; preds = %35, %124
  %140 = xor i1 %120, true
  br label %141

141:                                              ; preds = %139, %2
  %142 = phi i1 [ false, %2 ], [ %140, %139 ]
  ret i1 %142
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i8*, i64) local_unnamed_addr #3

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare dso_local i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64, i64) local_unnamed_addr #5

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #6

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.mustprogress"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!14 = distinct !{!14, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!15 = !{!5, !6, i64 0}
!16 = !{!4, !6, i64 0}
!17 = !{!9, !9, i64 0}
!18 = !{!7, !7, i64 0}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!21 = distinct !{!21, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_: argument 0"}
!24 = distinct !{!24, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_"}
