; ModuleID = '../../Human_xBenchmarks_164/CPP_54/CPP_54.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_54/CPP_54.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: nofree nosync nounwind readonly uwtable
define dso_local zeroext i1 @_Z10same_charsNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_(%"class.std::__cxx11::basic_string"* nocapture readonly %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8, !tbaa !3
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8, !tbaa !3
  br label %118

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8, !tbaa !10
  %14 = load i64, i64* %11, align 8, !tbaa !3
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  %16 = load i8*, i8** %10, align 8, !tbaa !10
  %17 = ptrtoint i8* %15 to i64
  %18 = icmp sgt i64 %14, 3
  %19 = lshr i64 %14, 2
  br i1 %18, label %20, label %75

20:                                               ; preds = %9, %24
  %21 = phi i64 [ %71, %24 ], [ 0, %9 ]
  %22 = getelementptr inbounds i8, i8* %16, i64 %21
  %23 = load i8, i8* %22, align 1, !tbaa !11
  br label %26

24:                                               ; preds = %68
  %25 = icmp eq i64 %71, %4
  br i1 %25, label %118, label %20, !llvm.loop !12

26:                                               ; preds = %43, %20
  %27 = phi i64 [ %19, %20 ], [ %45, %43 ]
  %28 = phi i8* [ %13, %20 ], [ %44, %43 ]
  %29 = load i8, i8* %28, align 1, !tbaa !11
  %30 = icmp eq i8 %29, %23
  br i1 %30, label %68, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds i8, i8* %28, i64 1
  %33 = load i8, i8* %32, align 1, !tbaa !11
  %34 = icmp eq i8 %33, %23
  br i1 %34, label %62, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds i8, i8* %28, i64 2
  %37 = load i8, i8* %36, align 1, !tbaa !11
  %38 = icmp eq i8 %37, %23
  br i1 %38, label %64, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds i8, i8* %28, i64 3
  %41 = load i8, i8* %40, align 1, !tbaa !11
  %42 = icmp eq i8 %41, %23
  br i1 %42, label %66, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds i8, i8* %28, i64 4
  %45 = add nsw i64 %27, -1
  %46 = icmp sgt i64 %27, 1
  br i1 %46, label %26, label %72, !llvm.loop !14

47:                                               ; preds = %72
  %48 = load i8, i8* %44, align 1, !tbaa !11
  %49 = icmp eq i8 %48, %23
  br i1 %49, label %68, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds i8, i8* %28, i64 5
  br label %52

52:                                               ; preds = %72, %50
  %53 = phi i8* [ %51, %50 ], [ %44, %72 ]
  %54 = load i8, i8* %53, align 1, !tbaa !11
  %55 = icmp eq i8 %54, %23
  br i1 %55, label %68, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds i8, i8* %53, i64 1
  br label %58

58:                                               ; preds = %72, %56
  %59 = phi i8* [ %57, %56 ], [ %44, %72 ]
  %60 = load i8, i8* %59, align 1, !tbaa !11
  %61 = icmp eq i8 %60, %23
  br i1 %61, label %68, label %232

62:                                               ; preds = %31
  %63 = getelementptr inbounds i8, i8* %28, i64 1
  br label %68

64:                                               ; preds = %35
  %65 = getelementptr inbounds i8, i8* %28, i64 2
  br label %68

66:                                               ; preds = %39
  %67 = getelementptr inbounds i8, i8* %28, i64 3
  br label %68

68:                                               ; preds = %26, %62, %64, %66, %58, %52, %47
  %69 = phi i8* [ %44, %47 ], [ %53, %52 ], [ %59, %58 ], [ %63, %62 ], [ %65, %64 ], [ %67, %66 ], [ %28, %26 ]
  %70 = icmp eq i8* %69, %15
  %71 = add nuw i64 %21, 1
  br i1 %70, label %232, label %24

72:                                               ; preds = %43
  %73 = ptrtoint i8* %44 to i64
  %74 = sub i64 %17, %73
  switch i64 %74, label %232 [
    i64 3, label %47
    i64 2, label %52
    i64 1, label %58
  ]

75:                                               ; preds = %9
  %76 = getelementptr inbounds i8, i8* %13, i64 1
  %77 = add i64 %14, -1
  %78 = icmp ult i64 %77, 3
  br i1 %78, label %79, label %232

79:                                               ; preds = %75
  switch i64 %14, label %116 [
    i64 3, label %80
    i64 2, label %100
  ]

80:                                               ; preds = %79
  %81 = load i8, i8* %13, align 1, !tbaa !11
  %82 = getelementptr inbounds i8, i8* %13, i64 2
  br label %83

83:                                               ; preds = %88, %80
  %84 = phi i64 [ %99, %88 ], [ 0, %80 ]
  %85 = getelementptr inbounds i8, i8* %16, i64 %84
  %86 = load i8, i8* %85, align 1, !tbaa !11
  %87 = icmp eq i8 %81, %86
  br i1 %87, label %96, label %90

88:                                               ; preds = %96
  %89 = icmp eq i64 %99, %4
  br i1 %89, label %121, label %83, !llvm.loop !12

90:                                               ; preds = %83
  %91 = load i8, i8* %76, align 1, !tbaa !11
  %92 = icmp eq i8 %91, %86
  br i1 %92, label %96, label %93

93:                                               ; preds = %90
  %94 = load i8, i8* %82, align 1, !tbaa !11
  %95 = icmp eq i8 %94, %86
  br i1 %95, label %96, label %232

96:                                               ; preds = %93, %90, %83
  %97 = phi i8* [ %13, %83 ], [ %76, %90 ], [ %82, %93 ]
  %98 = icmp eq i8* %97, %15
  %99 = add nuw i64 %84, 1
  br i1 %98, label %232, label %88

100:                                              ; preds = %79
  %101 = load i8, i8* %13, align 1, !tbaa !11
  br label %102

102:                                              ; preds = %107, %100
  %103 = phi i64 [ %115, %107 ], [ 0, %100 ]
  %104 = getelementptr inbounds i8, i8* %16, i64 %103
  %105 = load i8, i8* %104, align 1, !tbaa !11
  %106 = icmp eq i8 %101, %105
  br i1 %106, label %112, label %109

107:                                              ; preds = %112
  %108 = icmp eq i64 %115, %4
  br i1 %108, label %121, label %102, !llvm.loop !12

109:                                              ; preds = %102
  %110 = load i8, i8* %76, align 1, !tbaa !11
  %111 = icmp eq i8 %110, %105
  br i1 %111, label %112, label %232

112:                                              ; preds = %109, %102
  %113 = phi i8* [ %13, %102 ], [ %76, %109 ]
  %114 = icmp eq i8* %113, %15
  %115 = add nuw i64 %103, 1
  br i1 %114, label %232, label %107

116:                                              ; preds = %79
  %117 = load i8, i8* %13, align 1, !tbaa !11
  br label %190

118:                                              ; preds = %195, %24, %6
  %119 = phi i64 [ %8, %6 ], [ %14, %24 ], [ %14, %195 ]
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %229, label %121

121:                                              ; preds = %107, %88, %118
  %122 = phi i64 [ %119, %118 ], [ 3, %88 ], [ 2, %107 ]
  %123 = lshr i64 %4, 2
  %124 = icmp sgt i64 %4, 3
  %125 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8, !tbaa !10
  %128 = getelementptr inbounds i8, i8* %127, i64 %4
  %129 = load i8*, i8** %125, align 8, !tbaa !10
  %130 = ptrtoint i8* %128 to i64
  br i1 %124, label %131, label %188

131:                                              ; preds = %121, %136
  %132 = phi i64 [ %184, %136 ], [ 0, %121 ]
  %133 = phi i1 [ %137, %136 ], [ true, %121 ]
  %134 = getelementptr inbounds i8, i8* %129, i64 %132
  %135 = load i8, i8* %134, align 1, !tbaa !11
  br label %139

136:                                              ; preds = %181
  %137 = icmp ugt i64 %122, %184
  %138 = icmp eq i64 %184, %122
  br i1 %138, label %229, label %131, !llvm.loop !15

139:                                              ; preds = %156, %131
  %140 = phi i64 [ %123, %131 ], [ %158, %156 ]
  %141 = phi i8* [ %127, %131 ], [ %157, %156 ]
  %142 = load i8, i8* %141, align 1, !tbaa !11
  %143 = icmp eq i8 %142, %135
  br i1 %143, label %181, label %144

144:                                              ; preds = %139
  %145 = getelementptr inbounds i8, i8* %141, i64 1
  %146 = load i8, i8* %145, align 1, !tbaa !11
  %147 = icmp eq i8 %146, %135
  br i1 %147, label %175, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds i8, i8* %141, i64 2
  %150 = load i8, i8* %149, align 1, !tbaa !11
  %151 = icmp eq i8 %150, %135
  br i1 %151, label %177, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds i8, i8* %141, i64 3
  %154 = load i8, i8* %153, align 1, !tbaa !11
  %155 = icmp eq i8 %154, %135
  br i1 %155, label %179, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds i8, i8* %141, i64 4
  %158 = add nsw i64 %140, -1
  %159 = icmp sgt i64 %140, 1
  br i1 %159, label %139, label %185, !llvm.loop !14

160:                                              ; preds = %185
  %161 = load i8, i8* %157, align 1, !tbaa !11
  %162 = icmp eq i8 %161, %135
  br i1 %162, label %181, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds i8, i8* %141, i64 5
  br label %165

165:                                              ; preds = %185, %163
  %166 = phi i8* [ %164, %163 ], [ %157, %185 ]
  %167 = load i8, i8* %166, align 1, !tbaa !11
  %168 = icmp eq i8 %167, %135
  br i1 %168, label %181, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds i8, i8* %166, i64 1
  br label %171

171:                                              ; preds = %185, %169
  %172 = phi i8* [ %170, %169 ], [ %157, %185 ]
  %173 = load i8, i8* %172, align 1, !tbaa !11
  %174 = icmp eq i8 %173, %135
  br i1 %174, label %181, label %229

175:                                              ; preds = %144
  %176 = getelementptr inbounds i8, i8* %141, i64 1
  br label %181

177:                                              ; preds = %148
  %178 = getelementptr inbounds i8, i8* %141, i64 2
  br label %181

179:                                              ; preds = %152
  %180 = getelementptr inbounds i8, i8* %141, i64 3
  br label %181

181:                                              ; preds = %139, %175, %177, %179, %171, %165, %160
  %182 = phi i8* [ %157, %160 ], [ %166, %165 ], [ %172, %171 ], [ %176, %175 ], [ %178, %177 ], [ %180, %179 ], [ %141, %139 ]
  %183 = icmp eq i8* %182, %128
  %184 = add nuw i64 %132, 1
  br i1 %183, label %229, label %136

185:                                              ; preds = %156
  %186 = ptrtoint i8* %157 to i64
  %187 = sub i64 %130, %186
  switch i64 %187, label %229 [
    i64 3, label %160
    i64 2, label %165
    i64 1, label %171
  ]

188:                                              ; preds = %121
  %189 = getelementptr inbounds i8, i8* %127, i64 1
  br label %201

190:                                              ; preds = %116, %195
  %191 = phi i64 [ 0, %116 ], [ %196, %195 ]
  %192 = getelementptr inbounds i8, i8* %16, i64 %191
  %193 = load i8, i8* %192, align 1, !tbaa !11
  %194 = icmp eq i8 %117, %193
  br i1 %194, label %195, label %232

195:                                              ; preds = %190
  %196 = add nuw i64 %191, 1
  %197 = icmp eq i64 %196, %4
  br i1 %197, label %118, label %190, !llvm.loop !12

198:                                              ; preds = %225
  %199 = icmp ugt i64 %122, %228
  %200 = icmp eq i64 %228, %122
  br i1 %200, label %229, label %201, !llvm.loop !15

201:                                              ; preds = %188, %198
  %202 = phi i64 [ 0, %188 ], [ %228, %198 ]
  %203 = phi i1 [ true, %188 ], [ %199, %198 ]
  %204 = getelementptr inbounds i8, i8* %129, i64 %202
  switch i64 %4, label %229 [
    i64 3, label %209
    i64 2, label %207
    i64 1, label %205
  ]

205:                                              ; preds = %201
  %206 = load i8, i8* %204, align 1, !tbaa !11
  br label %220

207:                                              ; preds = %201
  %208 = load i8, i8* %204, align 1, !tbaa !11
  br label %213

209:                                              ; preds = %201
  %210 = load i8, i8* %127, align 1, !tbaa !11
  %211 = load i8, i8* %204, align 1, !tbaa !11
  %212 = icmp eq i8 %210, %211
  br i1 %212, label %225, label %213

213:                                              ; preds = %209, %207
  %214 = phi i8 [ %208, %207 ], [ %211, %209 ]
  %215 = phi i8* [ %127, %207 ], [ %189, %209 ]
  %216 = load i8, i8* %215, align 1, !tbaa !11
  %217 = icmp eq i8 %216, %214
  br i1 %217, label %225, label %218

218:                                              ; preds = %213
  %219 = getelementptr inbounds i8, i8* %215, i64 1
  br label %220

220:                                              ; preds = %218, %205
  %221 = phi i8 [ %206, %205 ], [ %214, %218 ]
  %222 = phi i8* [ %127, %205 ], [ %219, %218 ]
  %223 = load i8, i8* %222, align 1, !tbaa !11
  %224 = icmp eq i8 %223, %221
  br i1 %224, label %225, label %229

225:                                              ; preds = %209, %213, %220
  %226 = phi i8* [ %127, %209 ], [ %215, %213 ], [ %222, %220 ]
  %227 = icmp eq i8* %226, %128
  %228 = add nuw i64 %202, 1
  br i1 %227, label %229, label %198

229:                                              ; preds = %198, %225, %201, %220, %136, %181, %185, %171, %118
  %230 = phi i1 [ false, %118 ], [ %133, %171 ], [ %133, %185 ], [ %133, %181 ], [ %137, %136 ], [ %203, %220 ], [ true, %201 ], [ %203, %225 ], [ %199, %198 ]
  %231 = xor i1 %230, true
  br label %232

232:                                              ; preds = %109, %112, %96, %93, %190, %68, %58, %72, %75, %229
  %233 = phi i1 [ %231, %229 ], [ false, %75 ], [ false, %72 ], [ false, %58 ], [ false, %68 ], [ false, %190 ], [ false, %93 ], [ false, %96 ], [ false, %112 ], [ false, %109 ]
  ret i1 %233
}

declare dso_local i32 @__gxx_personality_v0(...)

attributes #0 = { nofree nosync nounwind readonly uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!4, !6, i64 0}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.mustprogress"}
!14 = distinct !{!14, !13}
!15 = distinct !{!15, !13}
