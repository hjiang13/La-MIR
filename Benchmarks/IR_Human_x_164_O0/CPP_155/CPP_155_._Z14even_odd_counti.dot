digraph "CFG for '_Z14even_odd_counti' function" {
	label="CFG for '_Z14even_odd_counti' function";

	Node0x55e64c551c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%2:\l  %3 = alloca i8*, align 8\l  %4 = alloca i32, align 4\l  %5 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca i8*, align 8\l  %10 = alloca i32, align 4\l  %11 = alloca %\"class.std::initializer_list\", align 8\l  %12 = alloca [2 x i32], align 4\l  %13 = alloca %\"class.std::allocator\", align 1\l  %14 = bitcast %\"class.std::vector\"* %0 to i8*\l  store i8* %14, i8** %3, align 8\l  store i32 %1, i32* %4, align 4\l  %15 = load i32, i32* %4, align 4\l  %16 = call i32 @abs(i32 %15) #13\l  call void @_ZNSt7__cxx119to_stringEi(%\"class.std::__cxx11::basic_string\"*\l... sret(%\"class.std::__cxx11::basic_string\") align 8 %5, i32 %16)\l  store i32 0, i32* %6, align 4\l  store i32 0, i32* %7, align 4\l  store i32 0, i32* %8, align 4\l  br label %17\l}"];
	Node0x55e64c551c30 -> Node0x55e64c553060;
	Node0x55e64c553060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = load i32, i32* %8, align 4\l  %19 = sext i32 %18 to i64\l  %20 = call i64\l... @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv(%\"class.std::\l...__cxx11::basic_string\"* nonnull align 8 dereferenceable(32) %5) #14\l  %21 = icmp ult i64 %19, %20\l  br i1 %21, label %22, label %45\l|{<s0>T|<s1>F}}"];
	Node0x55e64c553060:s0 -> Node0x55e64c553200;
	Node0x55e64c553060:s1 -> Node0x55e64c553590;
	Node0x55e64c553200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = load i32, i32* %8, align 4\l  %24 = sext i32 %23 to i64\l  %25 = invoke nonnull align 1 dereferenceable(1) i8*\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%\"class.std::__cxx1\l...1::basic_string\"* nonnull align 8 dereferenceable(32) %5, i64 %24)\l          to label %26 unwind label %34\l}"];
	Node0x55e64c553200 -> Node0x55e64c553800;
	Node0x55e64c553200 -> Node0x55e64c553850;
	Node0x55e64c553800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i8, i8* %25, align 1\l  %28 = sext i8 %27 to i32\l  %29 = srem i32 %28, 2\l  %30 = icmp eq i32 %29, 1\l  br i1 %30, label %31, label %38\l|{<s0>T|<s1>F}}"];
	Node0x55e64c553800:s0 -> Node0x55e64c5537b0;
	Node0x55e64c553800:s1 -> Node0x55e64c553e40;
	Node0x55e64c5537b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%31:\l31:                                               \l  %32 = load i32, i32* %6, align 4\l  %33 = add nsw i32 %32, 1\l  store i32 %33, i32* %6, align 4\l  br label %41\l}"];
	Node0x55e64c5537b0 -> Node0x55e64c554320;
	Node0x55e64c553850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%34:\l34:                                               \l  %35 = landingpad \{ i8*, i32 \}\l          cleanup\l  %36 = extractvalue \{ i8*, i32 \} %35, 0\l  store i8* %36, i8** %9, align 8\l  %37 = extractvalue \{ i8*, i32 \} %35, 1\l  store i32 %37, i32* %10, align 4\l  br label %63\l}"];
	Node0x55e64c553850 -> Node0x55e64c554880;
	Node0x55e64c553e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%38:\l38:                                               \l  %39 = load i32, i32* %7, align 4\l  %40 = add nsw i32 %39, 1\l  store i32 %40, i32* %7, align 4\l  br label %41\l}"];
	Node0x55e64c553e40 -> Node0x55e64c554320;
	Node0x55e64c554320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  br label %42\l}"];
	Node0x55e64c554320 -> Node0x55e64c554b40;
	Node0x55e64c554b40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = load i32, i32* %8, align 4\l  %44 = add nsw i32 %43, 1\l  store i32 %44, i32* %8, align 4\l  br label %17, !llvm.loop !4\l}"];
	Node0x55e64c554b40 -> Node0x55e64c553060;
	Node0x55e64c553590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%45:\l45:                                               \l  %46 = getelementptr inbounds [2 x i32], [2 x i32]* %12, i64 0, i64 0\l  %47 = load i32, i32* %7, align 4\l  store i32 %47, i32* %46, align 4\l  %48 = getelementptr inbounds i32, i32* %46, i64 1\l  %49 = load i32, i32* %6, align 4\l  store i32 %49, i32* %48, align 4\l  %50 = getelementptr inbounds %\"class.std::initializer_list\",\l... %\"class.std::initializer_list\"* %11, i32 0, i32 0\l  %51 = getelementptr inbounds [2 x i32], [2 x i32]* %12, i64 0, i64 0\l  store i32* %51, i32** %50, align 8\l  %52 = getelementptr inbounds %\"class.std::initializer_list\",\l... %\"class.std::initializer_list\"* %11, i32 0, i32 1\l  store i64 2, i64* %52, align 8\l  call void @_ZNSaIiEC2Ev(%\"class.std::allocator\"* nonnull align 1\l... dereferenceable(1) %13) #14\l  %53 = bitcast %\"class.std::initializer_list\"* %11 to \{ i32*, i64 \}*\l  %54 = getelementptr inbounds \{ i32*, i64 \}, \{ i32*, i64 \}* %53, i32 0, i32 0\l  %55 = load i32*, i32** %54, align 8\l  %56 = getelementptr inbounds \{ i32*, i64 \}, \{ i32*, i64 \}* %53, i32 0, i32 1\l  %57 = load i64, i64* %56, align 8\l  invoke void\l... @_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_(%\"class.std::vector\"*\l... nonnull align 8 dereferenceable(24) %0, i32* %55, i64 %57,\l... %\"class.std::allocator\"* nonnull align 1 dereferenceable(1) %13)\l          to label %58 unwind label %59\l}"];
	Node0x55e64c553590 -> Node0x55e64c556550;
	Node0x55e64c553590 -> Node0x55e64c5565e0;
	Node0x55e64c556550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%58:\l58:                                               \l  call void @_ZNSaIiED2Ev(%\"class.std::allocator\"* nonnull align 1\l... dereferenceable(1) %13) #14\l  call void\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%\"class.std::__cxx1\l...1::basic_string\"* nonnull align 8 dereferenceable(32) %5) #14\l  ret void\l}"];
	Node0x55e64c5565e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%59:\l59:                                               \l  %60 = landingpad \{ i8*, i32 \}\l          cleanup\l  %61 = extractvalue \{ i8*, i32 \} %60, 0\l  store i8* %61, i8** %9, align 8\l  %62 = extractvalue \{ i8*, i32 \} %60, 1\l  store i32 %62, i32* %10, align 4\l  call void @_ZNSaIiED2Ev(%\"class.std::allocator\"* nonnull align 1\l... dereferenceable(1) %13) #14\l  br label %63\l}"];
	Node0x55e64c5565e0 -> Node0x55e64c554880;
	Node0x55e64c554880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%63:\l63:                                               \l  call void\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%\"class.std::__cxx1\l...1::basic_string\"* nonnull align 8 dereferenceable(32) %5) #14\l  br label %64\l}"];
	Node0x55e64c554880 -> Node0x55e64c557290;
	Node0x55e64c557290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%64:\l64:                                               \l  %65 = load i8*, i8** %9, align 8\l  %66 = load i32, i32* %10, align 4\l  %67 = insertvalue \{ i8*, i32 \} undef, i8* %65, 0\l  %68 = insertvalue \{ i8*, i32 \} %67, i32 %66, 1\l  resume \{ i8*, i32 \} %68\l}"];
}
