digraph "CFG for '_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE5cloneEv' function" {
	label="CFG for '_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE5cloneEv' function";

	Node0x55aa9bb91540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1:\l  %2 = alloca %\"class.boost::exception_detail::clone_impl\"*, align 8\l  %3 = alloca\l... %\"struct.boost::exception_detail::clone_impl\<boost::exception_detail::error_in\l...fo_injector\<boost::bad_any_cast\>\>::clone_tag\", align 1\l  %4 = alloca i8*, align 8\l  %5 = alloca i32, align 4\l  store %\"class.boost::exception_detail::clone_impl\"* %0,\l... %\"class.boost::exception_detail::clone_impl\"** %2, align 8\l  %6 = load %\"class.boost::exception_detail::clone_impl\"*,\l... %\"class.boost::exception_detail::clone_impl\"** %2, align 8\l  %7 = call noalias nonnull i8* @_Znwm(i64 56) #14\l  %8 = bitcast i8* %7 to %\"class.boost::exception_detail::clone_impl\"*\l  invoke void\l... @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_an\l...y_castEEEEC1ERKS5_NS5_9clone_tagE(%\"class.boost::exception_detail::clone_impl\"*\l... nonnull align 8 dereferenceable(44) %8,\l... %\"class.boost::exception_detail::clone_impl\"* nonnull align 8\l... dereferenceable(44) %6)\l          to label %9 unwind label %22\l}"];
	Node0x55aa9bb91540 -> Node0x55aa9bb91600;
	Node0x55aa9bb91540 -> Node0x55aa9bb919a0;
	Node0x55aa9bb91600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l9:                                                \l  %10 = icmp eq %\"class.boost::exception_detail::clone_impl\"* %8, null\l  br i1 %10, label %20, label %11\l|{<s0>T|<s1>F}}"];
	Node0x55aa9bb91600:s0 -> Node0x55aa9bb91d00;
	Node0x55aa9bb91600:s1 -> Node0x55aa9bb91d50;
	Node0x55aa9bb91d50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%11:\l11:                                               \l  %12 = bitcast %\"class.boost::exception_detail::clone_impl\"* %8 to i8**\l  %13 = load i8*, i8** %12, align 8\l  %14 = getelementptr i8, i8* %13, i64 -24\l  %15 = bitcast i8* %14 to i64*\l  %16 = load i64, i64* %15, align 8\l  %17 = bitcast %\"class.boost::exception_detail::clone_impl\"* %8 to i8*\l  %18 = getelementptr inbounds i8, i8* %17, i64 %16\l  %19 = bitcast i8* %18 to %\"class.boost::exception_detail::clone_base\"*\l  br label %20\l}"];
	Node0x55aa9bb91d50 -> Node0x55aa9bb91d00;
	Node0x55aa9bb91d00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = phi %\"class.boost::exception_detail::clone_base\"* [ %19, %11 ], [\l... null, %9 ]\l  ret %\"class.boost::exception_detail::clone_base\"* %21\l}"];
	Node0x55aa9bb919a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%22:\l22:                                               \l  %23 = landingpad \{ i8*, i32 \}\l          cleanup\l  %24 = extractvalue \{ i8*, i32 \} %23, 0\l  store i8* %24, i8** %4, align 8\l  %25 = extractvalue \{ i8*, i32 \} %23, 1\l  store i32 %25, i32* %5, align 4\l  call void @_ZdlPv(i8* %7) #15\l  br label %26\l}"];
	Node0x55aa9bb919a0 -> Node0x55aa9bb926e0;
	Node0x55aa9bb926e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%26:\l26:                                               \l  %27 = load i8*, i8** %4, align 8\l  %28 = load i32, i32* %5, align 4\l  %29 = insertvalue \{ i8*, i32 \} undef, i8* %27, 0\l  %30 = insertvalue \{ i8*, i32 \} %29, i32 %28, 1\l  resume \{ i8*, i32 \} %30\l}"];
}
