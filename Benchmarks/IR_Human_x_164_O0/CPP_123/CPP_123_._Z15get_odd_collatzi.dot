digraph "CFG for '_Z15get_odd_collatzi' function" {
	label="CFG for '_Z15get_odd_collatzi' function";

	Node0x5620e9499a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%2:\l  %3 = alloca i8*, align 8\l  %4 = alloca i32, align 4\l  %5 = alloca i1, align 1\l  %6 = alloca %\"class.std::initializer_list\", align 8\l  %7 = alloca [1 x i32], align 4\l  %8 = alloca %\"class.std::allocator\", align 1\l  %9 = alloca i8*, align 8\l  %10 = alloca i32, align 4\l  %11 = alloca %\"class.__gnu_cxx::__normal_iterator\", align 8\l  %12 = alloca %\"class.__gnu_cxx::__normal_iterator\", align 8\l  %13 = bitcast %\"class.std::vector\"* %0 to i8*\l  store i8* %13, i8** %3, align 8\l  store i32 %1, i32* %4, align 4\l  store i1 false, i1* %5, align 1\l  %14 = getelementptr inbounds [1 x i32], [1 x i32]* %7, i64 0, i64 0\l  store i32 1, i32* %14, align 4\l  %15 = getelementptr inbounds %\"class.std::initializer_list\",\l... %\"class.std::initializer_list\"* %6, i32 0, i32 0\l  %16 = getelementptr inbounds [1 x i32], [1 x i32]* %7, i64 0, i64 0\l  store i32* %16, i32** %15, align 8\l  %17 = getelementptr inbounds %\"class.std::initializer_list\",\l... %\"class.std::initializer_list\"* %6, i32 0, i32 1\l  store i64 1, i64* %17, align 8\l  call void @_ZNSaIiEC2Ev(%\"class.std::allocator\"* nonnull align 1\l... dereferenceable(1) %8) #10\l  %18 = bitcast %\"class.std::initializer_list\"* %6 to \{ i32*, i64 \}*\l  %19 = getelementptr inbounds \{ i32*, i64 \}, \{ i32*, i64 \}* %18, i32 0, i32 0\l  %20 = load i32*, i32** %19, align 8\l  %21 = getelementptr inbounds \{ i32*, i64 \}, \{ i32*, i64 \}* %18, i32 0, i32 1\l  %22 = load i64, i64* %21, align 8\l  invoke void\l... @_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_(%\"class.std::vector\"*\l... nonnull align 8 dereferenceable(24) %0, i32* %20, i64 %22,\l... %\"class.std::allocator\"* nonnull align 1 dereferenceable(1) %8)\l          to label %23 unwind label %36\l}"];
	Node0x5620e9499a40 -> Node0x5620e949b460;
	Node0x5620e9499a40 -> Node0x5620e949b4f0;
	Node0x5620e949b460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%23:\l23:                                               \l  call void @_ZNSaIiED2Ev(%\"class.std::allocator\"* nonnull align 1\l... dereferenceable(1) %8) #10\l  br label %24\l}"];
	Node0x5620e949b460 -> Node0x5620e949baa0;
	Node0x5620e949baa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = load i32, i32* %4, align 4\l  %26 = icmp ne i32 %25, 1\l  br i1 %26, label %27, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5620e949baa0:s0 -> Node0x5620e949bc60;
	Node0x5620e949baa0:s1 -> Node0x5620e949bcb0;
	Node0x5620e949bc60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = load i32, i32* %4, align 4\l  %29 = srem i32 %28, 2\l  %30 = icmp eq i32 %29, 1\l  br i1 %30, label %31, label %44\l|{<s0>T|<s1>F}}"];
	Node0x5620e949bc60:s0 -> Node0x5620e949bec0;
	Node0x5620e949bc60:s1 -> Node0x5620e949bf10;
	Node0x5620e949bec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%31:\l31:                                               \l  invoke void @_ZNSt6vectorIiSaIiEE9push_backERKi(%\"class.std::vector\"*\l... nonnull align 8 dereferenceable(24) %0, i32* nonnull align 4\l... dereferenceable(4) %4)\l          to label %32 unwind label %40\l}"];
	Node0x5620e949bec0 -> Node0x5620e949c0d0;
	Node0x5620e949bec0 -> Node0x5620e949c120;
	Node0x5620e949c0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%32:\l32:                                               \l  %33 = load i32, i32* %4, align 4\l  %34 = mul nsw i32 %33, 3\l  %35 = add nsw i32 %34, 1\l  store i32 %35, i32* %4, align 4\l  br label %47\l}"];
	Node0x5620e949c0d0 -> Node0x5620e949c8a0;
	Node0x5620e949b4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%36:\l36:                                               \l  %37 = landingpad \{ i8*, i32 \}\l          cleanup\l  %38 = extractvalue \{ i8*, i32 \} %37, 0\l  store i8* %38, i8** %9, align 8\l  %39 = extractvalue \{ i8*, i32 \} %37, 1\l  store i32 %39, i32* %10, align 4\l  call void @_ZNSaIiED2Ev(%\"class.std::allocator\"* nonnull align 1\l... dereferenceable(1) %8) #10\l  br label %61\l}"];
	Node0x5620e949b4f0 -> Node0x5620e949cd00;
	Node0x5620e949c120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%40:\l40:                                               \l  %41 = landingpad \{ i8*, i32 \}\l          cleanup\l  %42 = extractvalue \{ i8*, i32 \} %41, 0\l  store i8* %42, i8** %9, align 8\l  %43 = extractvalue \{ i8*, i32 \} %41, 1\l  store i32 %43, i32* %10, align 4\l  call void @_ZNSt6vectorIiSaIiEED2Ev(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0) #10\l  br label %61\l}"];
	Node0x5620e949c120 -> Node0x5620e949cd00;
	Node0x5620e949bf10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%44:\l44:                                               \l  %45 = load i32, i32* %4, align 4\l  %46 = sdiv i32 %45, 2\l  store i32 %46, i32* %4, align 4\l  br label %47\l}"];
	Node0x5620e949bf10 -> Node0x5620e949c8a0;
	Node0x5620e949c8a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  br label %24, !llvm.loop !4\l}"];
	Node0x5620e949c8a0 -> Node0x5620e949baa0;
	Node0x5620e949bcb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%48:\l48:                                               \l  %49 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %0) #10\l  %50 = getelementptr inbounds %\"class.__gnu_cxx::__normal_iterator\",\l... %\"class.__gnu_cxx::__normal_iterator\"* %11, i32 0, i32 0\l  store i32* %49, i32** %50, align 8\l  %51 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %0) #10\l  %52 = getelementptr inbounds %\"class.__gnu_cxx::__normal_iterator\",\l... %\"class.__gnu_cxx::__normal_iterator\"* %12, i32 0, i32 0\l  store i32* %51, i32** %52, align 8\l  %53 = getelementptr inbounds %\"class.__gnu_cxx::__normal_iterator\",\l... %\"class.__gnu_cxx::__normal_iterator\"* %11, i32 0, i32 0\l  %54 = load i32*, i32** %53, align 8\l  %55 = getelementptr inbounds %\"class.__gnu_cxx::__normal_iterator\",\l... %\"class.__gnu_cxx::__normal_iterator\"* %12, i32 0, i32 0\l  %56 = load i32*, i32** %55, align 8\l  invoke void\l... @_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_(i32*\l... %54, i32* %56)\l          to label %57 unwind label %40\l}"];
	Node0x5620e949bcb0 -> Node0x5620e949eaa0;
	Node0x5620e949bcb0 -> Node0x5620e949c120;
	Node0x5620e949eaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%57:\l57:                                               \l  store i1 true, i1* %5, align 1\l  %58 = load i1, i1* %5, align 1\l  br i1 %58, label %60, label %59\l|{<s0>T|<s1>F}}"];
	Node0x5620e949eaa0:s0 -> Node0x5620e949ea50;
	Node0x5620e949eaa0:s1 -> Node0x5620e949eed0;
	Node0x5620e949eed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%59:\l59:                                               \l  call void @_ZNSt6vectorIiSaIiEED2Ev(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0) #10\l  br label %60\l}"];
	Node0x5620e949eed0 -> Node0x5620e949ea50;
	Node0x5620e949ea50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%60:\l60:                                               \l  ret void\l}"];
	Node0x5620e949cd00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%61:\l61:                                               \l  %62 = load i8*, i8** %9, align 8\l  %63 = load i32, i32* %10, align 4\l  %64 = insertvalue \{ i8*, i32 \} undef, i8* %62, 0\l  %65 = insertvalue \{ i8*, i32 \} %64, i32 %63, 1\l  resume \{ i8*, i32 \} %65\l}"];
}
