digraph "CFG for '_Z9sort_evenSt6vectorIfSaIfEE' function" {
	label="CFG for '_Z9sort_evenSt6vectorIfSaIfEE' function";

	Node0x5593546e6750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%2:\l  %3 = alloca i8*, align 8\l  %4 = alloca i1, align 1\l  %5 = alloca %\"class.std::vector\", align 8\l  %6 = alloca i32, align 4\l  %7 = alloca i8*, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca %\"class.__gnu_cxx::__normal_iterator\", align 8\l  %10 = alloca %\"class.__gnu_cxx::__normal_iterator\", align 8\l  %11 = alloca i32, align 4\l  %12 = bitcast %\"class.std::vector\"* %0 to i8*\l  store i8* %12, i8** %3, align 8\l  store i1 false, i1* %4, align 1\l  %13 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false)\l  call void @_ZNSt6vectorIfSaIfEEC2Ev(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0) #10\l  %14 = bitcast %\"class.std::vector\"* %5 to i8*\l  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false)\l  call void @_ZNSt6vectorIfSaIfEEC2Ev(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %5) #10\l  store i32 0, i32* %6, align 4\l  br label %15\l}"];
	Node0x5593546e6750 -> Node0x5593546e7de0;
	Node0x5593546e7de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l15:                                               \l  %16 = load i32, i32* %6, align 4\l  %17 = mul nsw i32 %16, 2\l  %18 = sext i32 %17 to i64\l  %19 = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %1) #10\l  %20 = icmp ult i64 %18, %19\l  br i1 %20, label %21, label %34\l|{<s0>T|<s1>F}}"];
	Node0x5593546e7de0:s0 -> Node0x5593546e82e0;
	Node0x5593546e7de0:s1 -> Node0x5593546e8330;
	Node0x5593546e82e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%21:\l21:                                               \l  %22 = load i32, i32* %6, align 4\l  %23 = mul nsw i32 %22, 2\l  %24 = sext i32 %23 to i64\l  %25 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %1, i64 %24) #10\l  invoke void @_ZNSt6vectorIfSaIfEE9push_backERKf(%\"class.std::vector\"*\l... nonnull align 8 dereferenceable(24) %5, float* nonnull align 4\l... dereferenceable(4) %25)\l          to label %26 unwind label %30\l}"];
	Node0x5593546e82e0 -> Node0x5593546e8820;
	Node0x5593546e82e0 -> Node0x5593546e8870;
	Node0x5593546e8820 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  br label %27\l}"];
	Node0x5593546e8820 -> Node0x5593546e8ba0;
	Node0x5593546e8ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = load i32, i32* %6, align 4\l  %29 = add nsw i32 %28, 1\l  store i32 %29, i32* %6, align 4\l  br label %15, !llvm.loop !4\l}"];
	Node0x5593546e8ba0 -> Node0x5593546e7de0;
	Node0x5593546e8870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%30:\l30:                                               \l  %31 = landingpad \{ i8*, i32 \}\l          cleanup\l  %32 = extractvalue \{ i8*, i32 \} %31, 0\l  store i8* %32, i8** %7, align 8\l  %33 = extractvalue \{ i8*, i32 \} %31, 1\l  store i32 %33, i32* %8, align 4\l  call void @_ZNSt6vectorIfSaIfEED2Ev(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %5) #10\l  call void @_ZNSt6vectorIfSaIfEED2Ev(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0) #10\l  br label %76\l}"];
	Node0x5593546e8870 -> Node0x5593546ea3a0;
	Node0x5593546e8330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%34:\l34:                                               \l  %35 = call float* @_ZNSt6vectorIfSaIfEE5beginEv(%\"class.std::vector\"*\l... nonnull align 8 dereferenceable(24) %5) #10\l  %36 = getelementptr inbounds %\"class.__gnu_cxx::__normal_iterator\",\l... %\"class.__gnu_cxx::__normal_iterator\"* %9, i32 0, i32 0\l  store float* %35, float** %36, align 8\l  %37 = call float* @_ZNSt6vectorIfSaIfEE3endEv(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %5) #10\l  %38 = getelementptr inbounds %\"class.__gnu_cxx::__normal_iterator\",\l... %\"class.__gnu_cxx::__normal_iterator\"* %10, i32 0, i32 0\l  store float* %37, float** %38, align 8\l  %39 = getelementptr inbounds %\"class.__gnu_cxx::__normal_iterator\",\l... %\"class.__gnu_cxx::__normal_iterator\"* %9, i32 0, i32 0\l  %40 = load float*, float** %39, align 8\l  %41 = getelementptr inbounds %\"class.__gnu_cxx::__normal_iterator\",\l... %\"class.__gnu_cxx::__normal_iterator\"* %10, i32 0, i32 0\l  %42 = load float*, float** %41, align 8\l  invoke void\l... @_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEEEvT_S7_(float*\l... %40, float* %42)\l          to label %43 unwind label %30\l}"];
	Node0x5593546e8330 -> Node0x5593546eae40;
	Node0x5593546e8330 -> Node0x5593546e8870;
	Node0x5593546eae40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%43:\l43:                                               \l  store i32 0, i32* %11, align 4\l  br label %44\l}"];
	Node0x5593546eae40 -> Node0x5593546eadf0;
	Node0x5593546eadf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = load i32, i32* %11, align 4\l  %46 = sext i32 %45 to i64\l  %47 = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %1) #10\l  %48 = icmp ult i64 %46, %47\l  br i1 %48, label %49, label %72\l|{<s0>T|<s1>F}}"];
	Node0x5593546eadf0:s0 -> Node0x5593546eb500;
	Node0x5593546eadf0:s1 -> Node0x5593546eb550;
	Node0x5593546eb500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = load i32, i32* %11, align 4\l  %51 = srem i32 %50, 2\l  %52 = icmp eq i32 %51, 0\l  br i1 %52, label %53, label %59\l|{<s0>T|<s1>F}}"];
	Node0x5593546eb500:s0 -> Node0x5593546eb820;
	Node0x5593546eb500:s1 -> Node0x5593546eb870;
	Node0x5593546eb820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%53:\l53:                                               \l  %54 = load i32, i32* %11, align 4\l  %55 = sdiv i32 %54, 2\l  %56 = sext i32 %55 to i64\l  %57 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %5, i64 %56) #10\l  invoke void @_ZNSt6vectorIfSaIfEE9push_backERKf(%\"class.std::vector\"*\l... nonnull align 8 dereferenceable(24) %0, float* nonnull align 4\l... dereferenceable(4) %57)\l          to label %58 unwind label %30\l}"];
	Node0x5593546eb820 -> Node0x5593546ebc70;
	Node0x5593546eb820 -> Node0x5593546e8870;
	Node0x5593546ebc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%58:\l58:                                               \l  br label %59\l}"];
	Node0x5593546ebc70 -> Node0x5593546eb870;
	Node0x5593546eb870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = load i32, i32* %11, align 4\l  %61 = srem i32 %60, 2\l  %62 = icmp eq i32 %61, 1\l  br i1 %62, label %63, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5593546eb870:s0 -> Node0x5593546ec010;
	Node0x5593546eb870:s1 -> Node0x5593546ec060;
	Node0x5593546ec010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%63:\l63:                                               \l  %64 = load i32, i32* %11, align 4\l  %65 = sext i32 %64 to i64\l  %66 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %1, i64 %65) #10\l  invoke void @_ZNSt6vectorIfSaIfEE9push_backERKf(%\"class.std::vector\"*\l... nonnull align 8 dereferenceable(24) %0, float* nonnull align 4\l... dereferenceable(4) %66)\l          to label %67 unwind label %30\l}"];
	Node0x5593546ec010 -> Node0x5593546ec780;
	Node0x5593546ec010 -> Node0x5593546e8870;
	Node0x5593546ec780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%67:\l67:                                               \l  br label %68\l}"];
	Node0x5593546ec780 -> Node0x5593546ec060;
	Node0x5593546ec060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  br label %69\l}"];
	Node0x5593546ec060 -> Node0x5593546ec990;
	Node0x5593546ec990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  %70 = load i32, i32* %11, align 4\l  %71 = add nsw i32 %70, 1\l  store i32 %71, i32* %11, align 4\l  br label %44, !llvm.loop !6\l}"];
	Node0x5593546ec990 -> Node0x5593546eadf0;
	Node0x5593546eb550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%72:\l72:                                               \l  store i1 true, i1* %4, align 1\l  call void @_ZNSt6vectorIfSaIfEED2Ev(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %5) #10\l  %73 = load i1, i1* %4, align 1\l  br i1 %73, label %75, label %74\l|{<s0>T|<s1>F}}"];
	Node0x5593546eb550:s0 -> Node0x5593546ecf10;
	Node0x5593546eb550:s1 -> Node0x5593546ecf60;
	Node0x5593546ecf60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%74:\l74:                                               \l  call void @_ZNSt6vectorIfSaIfEED2Ev(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0) #10\l  br label %75\l}"];
	Node0x5593546ecf60 -> Node0x5593546ecf10;
	Node0x5593546ecf10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%75:\l75:                                               \l  ret void\l}"];
	Node0x5593546ea3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%76:\l76:                                               \l  %77 = load i8*, i8** %7, align 8\l  %78 = load i32, i32* %8, align 4\l  %79 = insertvalue \{ i8*, i32 \} undef, i8* %77, 0\l  %80 = insertvalue \{ i8*, i32 \} %79, i32 %78, 1\l  resume \{ i8*, i32 \} %80\l}"];
}
