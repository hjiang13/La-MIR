digraph "CFG for '_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIfEEPT_PKS3_S6_S4_' function" {
	label="CFG for '_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIfEEPT_PKS3_S6_S4_' function";

	Node0x559354751b10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca float*, align 8\l  %5 = alloca float*, align 8\l  %6 = alloca float*, align 8\l  %7 = alloca i64, align 8\l  store float* %0, float** %4, align 8\l  store float* %1, float** %5, align 8\l  store float* %2, float** %6, align 8\l  %8 = load float*, float** %5, align 8\l  %9 = load float*, float** %4, align 8\l  %10 = ptrtoint float* %8 to i64\l  %11 = ptrtoint float* %9 to i64\l  %12 = sub i64 %10, %11\l  %13 = sdiv exact i64 %12, 4\l  store i64 %13, i64* %7, align 8\l  %14 = load i64, i64* %7, align 8\l  %15 = icmp ne i64 %14, 0\l  br i1 %15, label %16, label %26\l|{<s0>T|<s1>F}}"];
	Node0x559354751b10:s0 -> Node0x559354751b60;
	Node0x559354751b10:s1 -> Node0x559354752240;
	Node0x559354751b60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e8765c70",label="{%16:\l16:                                               \l  %17 = load float*, float** %6, align 8\l  %18 = load i64, i64* %7, align 8\l  %19 = sub i64 0, %18\l  %20 = getelementptr inbounds float, float* %17, i64 %19\l  %21 = bitcast float* %20 to i8*\l  %22 = load float*, float** %4, align 8\l  %23 = bitcast float* %22 to i8*\l  %24 = load i64, i64* %7, align 8\l  %25 = mul i64 4, %24\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %23, i64\l... %25, i1 false)\l  br label %26\l}"];
	Node0x559354751b60 -> Node0x559354752240;
	Node0x559354752240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load float*, float** %6, align 8\l  %28 = load i64, i64* %7, align 8\l  %29 = sub i64 0, %28\l  %30 = getelementptr inbounds float, float* %27, i64 %29\l  ret float* %30\l}"];
}
