digraph "CFG for '_Z13unique_digitsSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z13unique_digitsSt6vectorIiSaIiEE' function";

	Node0x55dc45dca750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%2:\l  %3 = alloca i8*, align 8\l  %4 = alloca i1, align 1\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i8, align 1\l  %8 = alloca i8*, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca %\"class.__gnu_cxx::__normal_iterator\", align 8\l  %11 = alloca %\"class.__gnu_cxx::__normal_iterator\", align 8\l  %12 = bitcast %\"class.std::vector\"* %0 to i8*\l  store i8* %12, i8** %3, align 8\l  store i1 false, i1* %4, align 1\l  %13 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false)\l  call void @_ZNSt6vectorIiSaIiEEC2Ev(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0) #10\l  store i32 0, i32* %5, align 4\l  br label %14\l}"];
	Node0x55dc45dca750 -> Node0x55dc45dcbae0;
	Node0x55dc45dcbae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%14:\l14:                                               \l  %15 = load i32, i32* %5, align 4\l  %16 = sext i32 %15 to i64\l  %17 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %1) #10\l  %18 = icmp ult i64 %16, %17\l  br i1 %18, label %19, label %60\l|{<s0>T|<s1>F}}"];
	Node0x55dc45dcbae0:s0 -> Node0x55dc45dcbf50;
	Node0x55dc45dcbae0:s1 -> Node0x55dc45dcbfa0;
	Node0x55dc45dcbf50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%19:\l19:                                               \l  %20 = load i32, i32* %5, align 4\l  %21 = sext i32 %20 to i64\l  %22 = call nonnull align 4 dereferenceable(4) i32*\l... @_ZNSt6vectorIiSaIiEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %1, i64 %21) #10\l  %23 = load i32, i32* %22, align 4\l  store i32 %23, i32* %6, align 4\l  store i8 1, i8* %7, align 1\l  %24 = load i32, i32* %6, align 4\l  %25 = icmp eq i32 %24, 0\l  br i1 %25, label %26, label %27\l|{<s0>T|<s1>F}}"];
	Node0x55dc45dcbf50:s0 -> Node0x55dc45dcc690;
	Node0x55dc45dcbf50:s1 -> Node0x55dc45dcc6e0;
	Node0x55dc45dcc690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%26:\l26:                                               \l  store i8 0, i8* %7, align 1\l  br label %27\l}"];
	Node0x55dc45dcc690 -> Node0x55dc45dcc6e0;
	Node0x55dc45dcc6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%27:\l27:                                               \l  br label %28\l}"];
	Node0x55dc45dcc6e0 -> Node0x55dc45dcc920;
	Node0x55dc45dcc920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = load i32, i32* %6, align 4\l  %30 = icmp sgt i32 %29, 0\l  br i1 %30, label %31, label %34\l|{<s0>T|<s1>F}}"];
	Node0x55dc45dcc920:s0 -> Node0x55dc45dccae0;
	Node0x55dc45dcc920:s1 -> Node0x55dc45dccb30;
	Node0x55dc45dccae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%31:\l31:                                               \l  %32 = load i8, i8* %7, align 1\l  %33 = trunc i8 %32 to i1\l  br label %34\l}"];
	Node0x55dc45dccae0 -> Node0x55dc45dccb30;
	Node0x55dc45dccb30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = phi i1 [ false, %28 ], [ %33, %31 ]\l  br i1 %35, label %36, label %44\l|{<s0>T|<s1>F}}"];
	Node0x55dc45dccb30:s0 -> Node0x55dc45dcd040;
	Node0x55dc45dccb30:s1 -> Node0x55dc45dcd090;
	Node0x55dc45dcd040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = load i32, i32* %6, align 4\l  %38 = srem i32 %37, 2\l  %39 = icmp eq i32 %38, 0\l  br i1 %39, label %40, label %41\l|{<s0>T|<s1>F}}"];
	Node0x55dc45dcd040:s0 -> Node0x55dc45dcd350;
	Node0x55dc45dcd040:s1 -> Node0x55dc45dcd3a0;
	Node0x55dc45dcd350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%40:\l40:                                               \l  store i8 0, i8* %7, align 1\l  br label %41\l}"];
	Node0x55dc45dcd350 -> Node0x55dc45dcd3a0;
	Node0x55dc45dcd3a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = load i32, i32* %6, align 4\l  %43 = sdiv i32 %42, 10\l  store i32 %43, i32* %6, align 4\l  br label %28, !llvm.loop !4\l}"];
	Node0x55dc45dcd3a0 -> Node0x55dc45dcc920;
	Node0x55dc45dcd090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%44:\l44:                                               \l  %45 = load i8, i8* %7, align 1\l  %46 = trunc i8 %45 to i1\l  br i1 %46, label %47, label %56\l|{<s0>T|<s1>F}}"];
	Node0x55dc45dcd090:s0 -> Node0x55dc45dce380;
	Node0x55dc45dcd090:s1 -> Node0x55dc45dce3d0;
	Node0x55dc45dce380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%47:\l47:                                               \l  %48 = load i32, i32* %5, align 4\l  %49 = sext i32 %48 to i64\l  %50 = call nonnull align 4 dereferenceable(4) i32*\l... @_ZNSt6vectorIiSaIiEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %1, i64 %49) #10\l  invoke void @_ZNSt6vectorIiSaIiEE9push_backERKi(%\"class.std::vector\"*\l... nonnull align 8 dereferenceable(24) %0, i32* nonnull align 4\l... dereferenceable(4) %50)\l          to label %51 unwind label %52\l}"];
	Node0x55dc45dce380 -> Node0x55dc45dce7a0;
	Node0x55dc45dce380 -> Node0x55dc45dce7f0;
	Node0x55dc45dce7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%51:\l51:                                               \l  br label %56\l}"];
	Node0x55dc45dce7a0 -> Node0x55dc45dce3d0;
	Node0x55dc45dce7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%52:\l52:                                               \l  %53 = landingpad \{ i8*, i32 \}\l          cleanup\l  %54 = extractvalue \{ i8*, i32 \} %53, 0\l  store i8* %54, i8** %8, align 8\l  %55 = extractvalue \{ i8*, i32 \} %53, 1\l  store i32 %55, i32* %9, align 4\l  call void @_ZNSt6vectorIiSaIiEED2Ev(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0) #10\l  br label %73\l}"];
	Node0x55dc45dce7f0 -> Node0x55dc45dcf260;
	Node0x55dc45dce3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%56:\l56:                                               \l  br label %57\l}"];
	Node0x55dc45dce3d0 -> Node0x55dc45dcf320;
	Node0x55dc45dcf320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%57:\l57:                                               \l  %58 = load i32, i32* %5, align 4\l  %59 = add nsw i32 %58, 1\l  store i32 %59, i32* %5, align 4\l  br label %14, !llvm.loop !6\l}"];
	Node0x55dc45dcf320 -> Node0x55dc45dcbae0;
	Node0x55dc45dcbfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%60:\l60:                                               \l  %61 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %0) #10\l  %62 = getelementptr inbounds %\"class.__gnu_cxx::__normal_iterator\",\l... %\"class.__gnu_cxx::__normal_iterator\"* %10, i32 0, i32 0\l  store i32* %61, i32** %62, align 8\l  %63 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %0) #10\l  %64 = getelementptr inbounds %\"class.__gnu_cxx::__normal_iterator\",\l... %\"class.__gnu_cxx::__normal_iterator\"* %11, i32 0, i32 0\l  store i32* %63, i32** %64, align 8\l  %65 = getelementptr inbounds %\"class.__gnu_cxx::__normal_iterator\",\l... %\"class.__gnu_cxx::__normal_iterator\"* %10, i32 0, i32 0\l  %66 = load i32*, i32** %65, align 8\l  %67 = getelementptr inbounds %\"class.__gnu_cxx::__normal_iterator\",\l... %\"class.__gnu_cxx::__normal_iterator\"* %11, i32 0, i32 0\l  %68 = load i32*, i32** %67, align 8\l  invoke void\l... @_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_(i32*\l... %66, i32* %68)\l          to label %69 unwind label %52\l}"];
	Node0x55dc45dcbfa0 -> Node0x55dc45dd04a0;
	Node0x55dc45dcbfa0 -> Node0x55dc45dce7f0;
	Node0x55dc45dd04a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%69:\l69:                                               \l  store i1 true, i1* %4, align 1\l  %70 = load i1, i1* %4, align 1\l  br i1 %70, label %72, label %71\l|{<s0>T|<s1>F}}"];
	Node0x55dc45dd04a0:s0 -> Node0x55dc45dd0450;
	Node0x55dc45dd04a0:s1 -> Node0x55dc45dd08d0;
	Node0x55dc45dd08d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%71:\l71:                                               \l  call void @_ZNSt6vectorIiSaIiEED2Ev(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0) #10\l  br label %72\l}"];
	Node0x55dc45dd08d0 -> Node0x55dc45dd0450;
	Node0x55dc45dd0450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%72:\l72:                                               \l  ret void\l}"];
	Node0x55dc45dcf260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%73:\l73:                                               \l  %74 = load i8*, i8** %8, align 8\l  %75 = load i32, i32* %9, align 4\l  %76 = insertvalue \{ i8*, i32 \} undef, i8* %74, 0\l  %77 = insertvalue \{ i8*, i32 \} %76, i32 %75, 1\l  resume \{ i8*, i32 \} %77\l}"];
}
