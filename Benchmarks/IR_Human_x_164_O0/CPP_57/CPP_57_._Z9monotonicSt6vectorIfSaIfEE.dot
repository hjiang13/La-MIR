digraph "CFG for '_Z9monotonicSt6vectorIfSaIfEE' function" {
	label="CFG for '_Z9monotonicSt6vectorIfSaIfEE' function";

	Node0x56015a830080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%1:\l  %2 = alloca i1, align 1\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  store i32 0, i32* %3, align 4\l  store i32 0, i32* %4, align 4\l  store i32 1, i32* %5, align 4\l  br label %6\l}"];
	Node0x56015a830080 -> Node0x56015a830b10;
	Node0x56015a830b10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l6:                                                \l  %7 = load i32, i32* %5, align 4\l  %8 = sext i32 %7 to i64\l  %9 = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %0) #1\l  %10 = icmp ult i64 %8, %9\l  br i1 %10, label %11, label %39\l|{<s0>T|<s1>F}}"];
	Node0x56015a830b10:s0 -> Node0x56015a830fe0;
	Node0x56015a830b10:s1 -> Node0x56015a831030;
	Node0x56015a830fe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%11:\l11:                                               \l  %12 = load i32, i32* %5, align 4\l  %13 = sext i32 %12 to i64\l  %14 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 %13) #1\l  %15 = load float, float* %14, align 4\l  %16 = load i32, i32* %5, align 4\l  %17 = sub nsw i32 %16, 1\l  %18 = sext i32 %17 to i64\l  %19 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 %18) #1\l  %20 = load float, float* %19, align 4\l  %21 = fcmp ogt float %15, %20\l  br i1 %21, label %22, label %23\l|{<s0>T|<s1>F}}"];
	Node0x56015a830fe0:s0 -> Node0x56015a8318f0;
	Node0x56015a830fe0:s1 -> Node0x56015a831940;
	Node0x56015a8318f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%22:\l22:                                               \l  store i32 1, i32* %3, align 4\l  br label %23\l}"];
	Node0x56015a8318f0 -> Node0x56015a831940;
	Node0x56015a831940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%23:\l23:                                               \l  %24 = load i32, i32* %5, align 4\l  %25 = sext i32 %24 to i64\l  %26 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 %25) #1\l  %27 = load float, float* %26, align 4\l  %28 = load i32, i32* %5, align 4\l  %29 = sub nsw i32 %28, 1\l  %30 = sext i32 %29 to i64\l  %31 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 %30) #1\l  %32 = load float, float* %31, align 4\l  %33 = fcmp olt float %27, %32\l  br i1 %33, label %34, label %35\l|{<s0>T|<s1>F}}"];
	Node0x56015a831940:s0 -> Node0x56015a8323b0;
	Node0x56015a831940:s1 -> Node0x56015a832400;
	Node0x56015a8323b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%34:\l34:                                               \l  store i32 1, i32* %4, align 4\l  br label %35\l}"];
	Node0x56015a8323b0 -> Node0x56015a832400;
	Node0x56015a832400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%35:\l35:                                               \l  br label %36\l}"];
	Node0x56015a832400 -> Node0x56015a832600;
	Node0x56015a832600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%36:\l36:                                               \l  %37 = load i32, i32* %5, align 4\l  %38 = add nsw i32 %37, 1\l  store i32 %38, i32* %5, align 4\l  br label %6, !llvm.loop !4\l}"];
	Node0x56015a832600 -> Node0x56015a830b10;
	Node0x56015a831030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%39:\l39:                                               \l  %40 = load i32, i32* %3, align 4\l  %41 = load i32, i32* %4, align 4\l  %42 = add nsw i32 %40, %41\l  %43 = icmp eq i32 %42, 2\l  br i1 %43, label %44, label %45\l|{<s0>T|<s1>F}}"];
	Node0x56015a831030:s0 -> Node0x56015a833550;
	Node0x56015a831030:s1 -> Node0x56015a8335a0;
	Node0x56015a833550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%44:\l44:                                               \l  store i1 false, i1* %2, align 1\l  br label %46\l}"];
	Node0x56015a833550 -> Node0x56015a833770;
	Node0x56015a8335a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%45:\l45:                                               \l  store i1 true, i1* %2, align 1\l  br label %46\l}"];
	Node0x56015a8335a0 -> Node0x56015a833770;
	Node0x56015a833770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%46:\l46:                                               \l  %47 = load i1, i1* %2, align 1\l  ret i1 %47\l}"];
}
