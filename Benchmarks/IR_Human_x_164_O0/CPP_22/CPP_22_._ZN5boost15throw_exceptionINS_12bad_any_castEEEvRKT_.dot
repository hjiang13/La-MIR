digraph "CFG for '_ZN5boost15throw_exceptionINS_12bad_any_castEEEvRKT_' function" {
	label="CFG for '_ZN5boost15throw_exceptionINS_12bad_any_castEEEvRKT_' function";

	Node0x55dea68b3350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1:\l  %2 = alloca %\"class.boost::bad_any_cast\"*, align 8\l  %3 = alloca %\"struct.boost::exception_detail::error_info_injector\", align 8\l  %4 = alloca i8*, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i1, align 1\l  store %\"class.boost::bad_any_cast\"* %0, %\"class.boost::bad_any_cast\"** %2,\l... align 8\l  %7 = load %\"class.boost::bad_any_cast\"*, %\"class.boost::bad_any_cast\"** %2,\l... align 8\l  %8 = bitcast %\"class.boost::bad_any_cast\"* %7 to %\"class.std::exception\"*\l  call void\l... @_ZN5boost36throw_exception_assert_compatibilityERKSt9exception(%\"class.std::e\l...xception\"* nonnull align 8 dereferenceable(8) %8)\l  %9 = call i8* @__cxa_allocate_exception(i64 56) #13\l  store i1 true, i1* %6, align 1\l  %10 = bitcast i8* %9 to %\"class.boost::exception_detail::clone_impl\"*\l  %11 = load %\"class.boost::bad_any_cast\"*, %\"class.boost::bad_any_cast\"** %2,\l... align 8\l  invoke void\l... @_ZN5boost17enable_error_infoINS_12bad_any_castEEENS_16exception_detail29enabl\l...e_error_info_return_typeIT_E4typeERKS4_(%\"struct.boost::exception_detail::error\l..._info_injector\"* sret(%\"struct.boost::exception_detail::error_info_injector\")\l... align 8 %3, %\"class.boost::bad_any_cast\"* nonnull align 8 dereferenceable(8)\l... %11)\l          to label %12 unwind label %14\l}"];
	Node0x55dea68b3350 -> Node0x55dea68b3d90;
	Node0x55dea68b3350 -> Node0x55dea68b3de0;
	Node0x55dea68b3d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%12:\l12:                                               \l  invoke void\l... @_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injecto\l...rINS_12bad_any_castEEEEENS1_10clone_implIT_EERKS6_(%\"class.boost::exception_det\l...ail::clone_impl\"* sret(%\"class.boost::exception_detail::clone_impl\") align 8\l... %10, %\"struct.boost::exception_detail::error_info_injector\"* nonnull align 8\l... dereferenceable(44) %3)\l          to label %13 unwind label %18\l}"];
	Node0x55dea68b3d90 -> Node0x55dea68b41e0;
	Node0x55dea68b3d90 -> Node0x55dea68b4230;
	Node0x55dea68b41e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%13:\l13:                                               \l  store i1 false, i1* %6, align 1\l  invoke void @__cxa_throw(i8* %9, i8* bitcast (\{ i8*, i8*, i32, i32, i8*,\l... i64, i8*, i64 \}*\l... @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_\l...any_castEEEEE to i8*), i8* bitcast (void\l... (%\"class.boost::exception_detail::clone_impl\"*)*\l... @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_an\l...y_castEEEED1Ev to i8*)) #14\l          to label %31 unwind label %18\l}"];
	Node0x55dea68b41e0 -> Node0x55dea68b5670;
	Node0x55dea68b41e0 -> Node0x55dea68b4230;
	Node0x55dea68b3de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%14:\l14:                                               \l  %15 = landingpad \{ i8*, i32 \}\l          cleanup\l  %16 = extractvalue \{ i8*, i32 \} %15, 0\l  store i8* %16, i8** %4, align 8\l  %17 = extractvalue \{ i8*, i32 \} %15, 1\l  store i32 %17, i32* %5, align 4\l  br label %22\l}"];
	Node0x55dea68b3de0 -> Node0x55dea68b5b70;
	Node0x55dea68b4230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%18:\l18:                                               \l  %19 = landingpad \{ i8*, i32 \}\l          cleanup\l  %20 = extractvalue \{ i8*, i32 \} %19, 0\l  store i8* %20, i8** %4, align 8\l  %21 = extractvalue \{ i8*, i32 \} %19, 1\l  store i32 %21, i32* %5, align 4\l  call void\l... @_ZN5boost16exception_detail19error_info_injectorINS_12bad_any_castEED2Ev(%\"st\l...ruct.boost::exception_detail::error_info_injector\"* nonnull align 8\l... dereferenceable(44) %3) #13\l  br label %22\l}"];
	Node0x55dea68b4230 -> Node0x55dea68b5b70;
	Node0x55dea68b5b70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = load i1, i1* %6, align 1\l  br i1 %23, label %24, label %25\l|{<s0>T|<s1>F}}"];
	Node0x55dea68b5b70:s0 -> Node0x55dea68b60b0;
	Node0x55dea68b5b70:s1 -> Node0x55dea68b6100;
	Node0x55dea68b60b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%24:\l24:                                               \l  call void @__cxa_free_exception(i8* %9) #13\l  br label %25\l}"];
	Node0x55dea68b60b0 -> Node0x55dea68b6100;
	Node0x55dea68b6100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  br label %26\l}"];
	Node0x55dea68b6100 -> Node0x55dea68b6490;
	Node0x55dea68b6490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i8*, i8** %4, align 8\l  %28 = load i32, i32* %5, align 4\l  %29 = insertvalue \{ i8*, i32 \} undef, i8* %27, 0\l  %30 = insertvalue \{ i8*, i32 \} %29, i32 %28, 1\l  resume \{ i8*, i32 \} %30\l}"];
	Node0x55dea68b5670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%31:\l31:                                               \l  unreachable\l}"];
}
