digraph "CFG for '_Z19triples_sum_to_zeroSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z19triples_sum_to_zeroSt6vectorIiSaIiEE' function";

	Node0x55fcaca34250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1:\l  %2 = alloca i1, align 1\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  store i32 0, i32* %3, align 4\l  br label %6\l}"];
	Node0x55fcaca34250 -> Node0x55fcaca34bb0;
	Node0x55fcaca34bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%6:\l6:                                                \l  %7 = load i32, i32* %3, align 4\l  %8 = sext i32 %7 to i64\l  %9 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %0) #1\l  %10 = icmp ult i64 %8, %9\l  br i1 %10, label %11, label %56\l|{<s0>T|<s1>F}}"];
	Node0x55fcaca34bb0:s0 -> Node0x55fcaca350e0;
	Node0x55fcaca34bb0:s1 -> Node0x55fcaca35130;
	Node0x55fcaca350e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%11:\l11:                                               \l  %12 = load i32, i32* %3, align 4\l  %13 = add nsw i32 %12, 1\l  store i32 %13, i32* %4, align 4\l  br label %14\l}"];
	Node0x55fcaca350e0 -> Node0x55fcaca35400;
	Node0x55fcaca35400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%14:\l14:                                               \l  %15 = load i32, i32* %4, align 4\l  %16 = sext i32 %15 to i64\l  %17 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %0) #1\l  %18 = icmp ult i64 %16, %17\l  br i1 %18, label %19, label %52\l|{<s0>T|<s1>F}}"];
	Node0x55fcaca35400:s0 -> Node0x55fcaca356e0;
	Node0x55fcaca35400:s1 -> Node0x55fcaca35730;
	Node0x55fcaca356e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%19:\l19:                                               \l  %20 = load i32, i32* %4, align 4\l  %21 = add nsw i32 %20, 1\l  store i32 %21, i32* %5, align 4\l  br label %22\l}"];
	Node0x55fcaca356e0 -> Node0x55fcaca35a00;
	Node0x55fcaca35a00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = load i32, i32* %5, align 4\l  %24 = sext i32 %23 to i64\l  %25 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %0) #1\l  %26 = icmp ult i64 %24, %25\l  br i1 %26, label %27, label %48\l|{<s0>T|<s1>F}}"];
	Node0x55fcaca35a00:s0 -> Node0x55fcaca35d40;
	Node0x55fcaca35a00:s1 -> Node0x55fcaca35d90;
	Node0x55fcaca35d40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = load i32, i32* %3, align 4\l  %29 = sext i32 %28 to i64\l  %30 = call nonnull align 4 dereferenceable(4) i32*\l... @_ZNSt6vectorIiSaIiEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 %29) #1\l  %31 = load i32, i32* %30, align 4\l  %32 = load i32, i32* %4, align 4\l  %33 = sext i32 %32 to i64\l  %34 = call nonnull align 4 dereferenceable(4) i32*\l... @_ZNSt6vectorIiSaIiEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 %33) #1\l  %35 = load i32, i32* %34, align 4\l  %36 = add nsw i32 %31, %35\l  %37 = load i32, i32* %5, align 4\l  %38 = sext i32 %37 to i64\l  %39 = call nonnull align 4 dereferenceable(4) i32*\l... @_ZNSt6vectorIiSaIiEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 %38) #1\l  %40 = load i32, i32* %39, align 4\l  %41 = add nsw i32 %36, %40\l  %42 = icmp eq i32 %41, 0\l  br i1 %42, label %43, label %44\l|{<s0>T|<s1>F}}"];
	Node0x55fcaca35d40:s0 -> Node0x55fcaca36bd0;
	Node0x55fcaca35d40:s1 -> Node0x55fcaca36c20;
	Node0x55fcaca36bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%43:\l43:                                               \l  store i1 true, i1* %2, align 1\l  br label %57\l}"];
	Node0x55fcaca36bd0 -> Node0x55fcaca36df0;
	Node0x55fcaca36c20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%44:\l44:                                               \l  br label %45\l}"];
	Node0x55fcaca36c20 -> Node0x55fcaca36eb0;
	Node0x55fcaca36eb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%45:\l45:                                               \l  %46 = load i32, i32* %5, align 4\l  %47 = add nsw i32 %46, 1\l  store i32 %47, i32* %5, align 4\l  br label %22, !llvm.loop !4\l}"];
	Node0x55fcaca36eb0 -> Node0x55fcaca35a00;
	Node0x55fcaca35d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%48:\l48:                                               \l  br label %49\l}"];
	Node0x55fcaca35d90 -> Node0x55fcaca37c40;
	Node0x55fcaca37c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%49:\l49:                                               \l  %50 = load i32, i32* %4, align 4\l  %51 = add nsw i32 %50, 1\l  store i32 %51, i32* %4, align 4\l  br label %14, !llvm.loop !6\l}"];
	Node0x55fcaca37c40 -> Node0x55fcaca35400;
	Node0x55fcaca35730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%52:\l52:                                               \l  br label %53\l}"];
	Node0x55fcaca35730 -> Node0x55fcaca37fc0;
	Node0x55fcaca37fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%53:\l53:                                               \l  %54 = load i32, i32* %3, align 4\l  %55 = add nsw i32 %54, 1\l  store i32 %55, i32* %3, align 4\l  br label %6, !llvm.loop !7\l}"];
	Node0x55fcaca37fc0 -> Node0x55fcaca34bb0;
	Node0x55fcaca35130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%56:\l56:                                               \l  store i1 false, i1* %2, align 1\l  br label %57\l}"];
	Node0x55fcaca35130 -> Node0x55fcaca36df0;
	Node0x55fcaca36df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%57:\l57:                                               \l  %58 = load i1, i1* %2, align 1\l  ret i1 %58\l}"];
}
