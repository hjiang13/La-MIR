digraph "CFG for '_Z21find_closest_elementsSt6vectorIfSaIfEE' function" {
	label="CFG for '_Z21find_closest_elementsSt6vectorIfSaIfEE' function";

	Node0x559363e01280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%2:\l  %3 = alloca i8*, align 8\l  %4 = alloca i1, align 1\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i8*, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca %\"class.std::initializer_list\", align 8\l  %10 = alloca [2 x float], align 4\l  %11 = alloca %\"class.std::initializer_list\", align 8\l  %12 = alloca [2 x float], align 4\l  %13 = bitcast %\"class.std::vector\"* %0 to i8*\l  store i8* %13, i8** %3, align 8\l  store i1 false, i1* %4, align 1\l  %14 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false)\l  call void @_ZNSt6vectorIfSaIfEEC2Ev(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0) #12\l  store i32 0, i32* %5, align 4\l  br label %15\l}"];
	Node0x559363e01280 -> Node0x559363e02670;
	Node0x559363e02670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%15:\l15:                                               \l  %16 = load i32, i32* %5, align 4\l  %17 = sext i32 %16 to i64\l  %18 = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %1) #12\l  %19 = icmp ult i64 %17, %18\l  br i1 %19, label %20, label %84\l|{<s0>T|<s1>F}}"];
	Node0x559363e02670:s0 -> Node0x559363e02ae0;
	Node0x559363e02670:s1 -> Node0x559363e02b30;
	Node0x559363e02ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%20:\l20:                                               \l  %21 = load i32, i32* %5, align 4\l  %22 = add nsw i32 %21, 1\l  store i32 %22, i32* %6, align 4\l  br label %23\l}"];
	Node0x559363e02ae0 -> Node0x559363e02e00;
	Node0x559363e02e00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = load i32, i32* %6, align 4\l  %25 = sext i32 %24 to i64\l  %26 = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %1) #12\l  %27 = icmp ult i64 %25, %26\l  br i1 %27, label %28, label %80\l|{<s0>T|<s1>F}}"];
	Node0x559363e02e00:s0 -> Node0x559363e03170;
	Node0x559363e02e00:s1 -> Node0x559363e031c0;
	Node0x559363e03170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %0) #12\l  %30 = icmp eq i64 %29, 0\l  br i1 %30, label %51, label %31\l|{<s0>T|<s1>F}}"];
	Node0x559363e03170:s0 -> Node0x559363e034a0;
	Node0x559363e03170:s1 -> Node0x559363e034f0;
	Node0x559363e034f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%31:\l31:                                               \l  %32 = load i32, i32* %5, align 4\l  %33 = sext i32 %32 to i64\l  %34 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %1, i64 %33) #12\l  %35 = load float, float* %34, align 4\l  %36 = load i32, i32* %6, align 4\l  %37 = sext i32 %36 to i64\l  %38 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %1, i64 %37) #12\l  %39 = load float, float* %38, align 4\l  %40 = fsub float %35, %39\l  %41 = invoke float @_ZSt3absf(float %40)\l          to label %42 unwind label %72\l}"];
	Node0x559363e034f0 -> Node0x559363e03fc0;
	Node0x559363e034f0 -> Node0x559363e04010;
	Node0x559363e03fc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%42:\l42:                                               \l  %43 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 0) #12\l  %44 = load float, float* %43, align 4\l  %45 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 1) #12\l  %46 = load float, float* %45, align 4\l  %47 = fsub float %44, %46\l  %48 = invoke float @_ZSt3absf(float %47)\l          to label %49 unwind label %72\l}"];
	Node0x559363e03fc0 -> Node0x559363e04610;
	Node0x559363e03fc0 -> Node0x559363e04010;
	Node0x559363e04610 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%49:\l49:                                               \l  %50 = fcmp olt float %41, %48\l  br i1 %50, label %51, label %76\l|{<s0>T|<s1>F}}"];
	Node0x559363e04610:s0 -> Node0x559363e034a0;
	Node0x559363e04610:s1 -> Node0x559363e04740;
	Node0x559363e034a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%51:\l51:                                               \l  %52 = getelementptr inbounds [2 x float], [2 x float]* %10, i64 0, i64 0\l  %53 = load i32, i32* %5, align 4\l  %54 = sext i32 %53 to i64\l  %55 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %1, i64 %54) #12\l  %56 = load float, float* %55, align 4\l  store float %56, float* %52, align 4\l  %57 = getelementptr inbounds float, float* %52, i64 1\l  %58 = load i32, i32* %6, align 4\l  %59 = sext i32 %58 to i64\l  %60 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %1, i64 %59) #12\l  %61 = load float, float* %60, align 4\l  store float %61, float* %57, align 4\l  %62 = getelementptr inbounds %\"class.std::initializer_list\",\l... %\"class.std::initializer_list\"* %9, i32 0, i32 0\l  %63 = getelementptr inbounds [2 x float], [2 x float]* %10, i64 0, i64 0\l  store float* %63, float** %62, align 8\l  %64 = getelementptr inbounds %\"class.std::initializer_list\",\l... %\"class.std::initializer_list\"* %9, i32 0, i32 1\l  store i64 2, i64* %64, align 8\l  %65 = bitcast %\"class.std::initializer_list\"* %9 to \{ float*, i64 \}*\l  %66 = getelementptr inbounds \{ float*, i64 \}, \{ float*, i64 \}* %65, i32 0,\l... i32 0\l  %67 = load float*, float** %66, align 8\l  %68 = getelementptr inbounds \{ float*, i64 \}, \{ float*, i64 \}* %65, i32 0,\l... i32 1\l  %69 = load i64, i64* %68, align 8\l  %70 = invoke nonnull align 8 dereferenceable(24) %\"class.std::vector\"*\l... @_ZNSt6vectorIfSaIfEEaSESt16initializer_listIfE(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %0, float* %67, i64 %69)\l          to label %71 unwind label %72\l}"];
	Node0x559363e034a0 -> Node0x559363e05a00;
	Node0x559363e034a0 -> Node0x559363e04010;
	Node0x559363e05a00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%71:\l71:                                               \l  br label %76\l}"];
	Node0x559363e05a00 -> Node0x559363e04740;
	Node0x559363e04010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%72:\l72:                                               \l  %73 = landingpad \{ i8*, i32 \}\l          cleanup\l  %74 = extractvalue \{ i8*, i32 \} %73, 0\l  store i8* %74, i8** %7, align 8\l  %75 = extractvalue \{ i8*, i32 \} %73, 1\l  store i32 %75, i32* %8, align 4\l  call void @_ZNSt6vectorIfSaIfEED2Ev(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0) #12\l  br label %111\l}"];
	Node0x559363e04010 -> Node0x559363e062c0;
	Node0x559363e04740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  br label %77\l}"];
	Node0x559363e04740 -> Node0x559363e06380;
	Node0x559363e06380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = load i32, i32* %6, align 4\l  %79 = add nsw i32 %78, 1\l  store i32 %79, i32* %6, align 4\l  br label %23, !llvm.loop !4\l}"];
	Node0x559363e06380 -> Node0x559363e02e00;
	Node0x559363e031c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%80:\l80:                                               \l  br label %81\l}"];
	Node0x559363e031c0 -> Node0x559363e070d0;
	Node0x559363e070d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%81:\l81:                                               \l  %82 = load i32, i32* %5, align 4\l  %83 = add nsw i32 %82, 1\l  store i32 %83, i32* %5, align 4\l  br label %15, !llvm.loop !6\l}"];
	Node0x559363e070d0 -> Node0x559363e02670;
	Node0x559363e02b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%84:\l84:                                               \l  %85 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 0) #12\l  %86 = load float, float* %85, align 4\l  %87 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 1) #12\l  %88 = load float, float* %87, align 4\l  %89 = fcmp ogt float %86, %88\l  br i1 %89, label %90, label %107\l|{<s0>T|<s1>F}}"];
	Node0x559363e02b30:s0 -> Node0x559363e07870;
	Node0x559363e02b30:s1 -> Node0x559363e078c0;
	Node0x559363e07870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%90:\l90:                                               \l  %91 = getelementptr inbounds [2 x float], [2 x float]* %12, i64 0, i64 0\l  %92 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 1) #12\l  %93 = load float, float* %92, align 4\l  store float %93, float* %91, align 4\l  %94 = getelementptr inbounds float, float* %91, i64 1\l  %95 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 0) #12\l  %96 = load float, float* %95, align 4\l  store float %96, float* %94, align 4\l  %97 = getelementptr inbounds %\"class.std::initializer_list\",\l... %\"class.std::initializer_list\"* %11, i32 0, i32 0\l  %98 = getelementptr inbounds [2 x float], [2 x float]* %12, i64 0, i64 0\l  store float* %98, float** %97, align 8\l  %99 = getelementptr inbounds %\"class.std::initializer_list\",\l... %\"class.std::initializer_list\"* %11, i32 0, i32 1\l  store i64 2, i64* %99, align 8\l  %100 = bitcast %\"class.std::initializer_list\"* %11 to \{ float*, i64 \}*\l  %101 = getelementptr inbounds \{ float*, i64 \}, \{ float*, i64 \}* %100, i32 0,\l... i32 0\l  %102 = load float*, float** %101, align 8\l  %103 = getelementptr inbounds \{ float*, i64 \}, \{ float*, i64 \}* %100, i32 0,\l... i32 1\l  %104 = load i64, i64* %103, align 8\l  %105 = invoke nonnull align 8 dereferenceable(24) %\"class.std::vector\"*\l... @_ZNSt6vectorIfSaIfEEaSESt16initializer_listIfE(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %0, float* %102, i64 %104)\l          to label %106 unwind label %72\l}"];
	Node0x559363e07870 -> Node0x559363e085f0;
	Node0x559363e07870 -> Node0x559363e04010;
	Node0x559363e085f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%106:\l106:                                              \l  br label %107\l}"];
	Node0x559363e085f0 -> Node0x559363e078c0;
	Node0x559363e078c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%107:\l107:                                              \l  store i1 true, i1* %4, align 1\l  %108 = load i1, i1* %4, align 1\l  br i1 %108, label %110, label %109\l|{<s0>T|<s1>F}}"];
	Node0x559363e078c0:s0 -> Node0x559363e089a0;
	Node0x559363e078c0:s1 -> Node0x559363e089f0;
	Node0x559363e089f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%109:\l109:                                              \l  call void @_ZNSt6vectorIfSaIfEED2Ev(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0) #12\l  br label %110\l}"];
	Node0x559363e089f0 -> Node0x559363e089a0;
	Node0x559363e089a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%110:\l110:                                              \l  ret void\l}"];
	Node0x559363e062c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%111:\l111:                                              \l  %112 = load i8*, i8** %7, align 8\l  %113 = load i32, i32* %8, align 4\l  %114 = insertvalue \{ i8*, i32 \} undef, i8* %112, 0\l  %115 = insertvalue \{ i8*, i32 \} %114, i32 %113, 1\l  resume \{ i8*, i32 \} %115\l}"];
}
