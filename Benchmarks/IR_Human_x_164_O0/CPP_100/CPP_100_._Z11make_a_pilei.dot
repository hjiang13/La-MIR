digraph "CFG for '_Z11make_a_pilei' function" {
	label="CFG for '_Z11make_a_pilei' function";

	Node0x558b7dd0c9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%2:\l  %3 = alloca i8*, align 8\l  %4 = alloca i32, align 4\l  %5 = alloca i1, align 1\l  %6 = alloca %\"class.std::initializer_list\", align 8\l  %7 = alloca [1 x i32], align 4\l  %8 = alloca %\"class.std::allocator\", align 1\l  %9 = alloca i8*, align 8\l  %10 = alloca i32, align 4\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  %13 = bitcast %\"class.std::vector\"* %0 to i8*\l  store i8* %13, i8** %3, align 8\l  store i32 %1, i32* %4, align 4\l  store i1 false, i1* %5, align 1\l  %14 = getelementptr inbounds [1 x i32], [1 x i32]* %7, i64 0, i64 0\l  %15 = load i32, i32* %4, align 4\l  store i32 %15, i32* %14, align 4\l  %16 = getelementptr inbounds %\"class.std::initializer_list\",\l... %\"class.std::initializer_list\"* %6, i32 0, i32 0\l  %17 = getelementptr inbounds [1 x i32], [1 x i32]* %7, i64 0, i64 0\l  store i32* %17, i32** %16, align 8\l  %18 = getelementptr inbounds %\"class.std::initializer_list\",\l... %\"class.std::initializer_list\"* %6, i32 0, i32 1\l  store i64 1, i64* %18, align 8\l  call void @_ZNSaIiEC2Ev(%\"class.std::allocator\"* nonnull align 1\l... dereferenceable(1) %8) #9\l  %19 = bitcast %\"class.std::initializer_list\"* %6 to \{ i32*, i64 \}*\l  %20 = getelementptr inbounds \{ i32*, i64 \}, \{ i32*, i64 \}* %19, i32 0, i32 0\l  %21 = load i32*, i32** %20, align 8\l  %22 = getelementptr inbounds \{ i32*, i64 \}, \{ i32*, i64 \}* %19, i32 0, i32 1\l  %23 = load i64, i64* %22, align 8\l  invoke void\l... @_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_(%\"class.std::vector\"*\l... nonnull align 8 dereferenceable(24) %0, i32* %21, i64 %23,\l... %\"class.std::allocator\"* nonnull align 1 dereferenceable(1) %8)\l          to label %24 unwind label %39\l}"];
	Node0x558b7dd0c9d0 -> Node0x558b7dd0e460;
	Node0x558b7dd0c9d0 -> Node0x558b7dd0e4f0;
	Node0x558b7dd0e460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%24:\l24:                                               \l  call void @_ZNSaIiED2Ev(%\"class.std::allocator\"* nonnull align 1\l... dereferenceable(1) %8) #9\l  store i32 1, i32* %11, align 4\l  br label %25\l}"];
	Node0x558b7dd0e460 -> Node0x558b7dd0eb30;
	Node0x558b7dd0eb30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = load i32, i32* %11, align 4\l  %27 = load i32, i32* %4, align 4\l  %28 = icmp slt i32 %26, %27\l  br i1 %28, label %29, label %47\l|{<s0>T|<s1>F}}"];
	Node0x558b7dd0eb30:s0 -> Node0x558b7dd0ed60;
	Node0x558b7dd0eb30:s1 -> Node0x558b7dd0edb0;
	Node0x558b7dd0ed60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %0) #9\l  %31 = sub i64 %30, 1\l  %32 = call nonnull align 4 dereferenceable(4) i32*\l... @_ZNSt6vectorIiSaIiEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 %31) #9\l  %33 = load i32, i32* %32, align 4\l  %34 = add nsw i32 %33, 2\l  store i32 %34, i32* %12, align 4\l  invoke void @_ZNSt6vectorIiSaIiEE9push_backEOi(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %0, i32* nonnull align 4 dereferenceable(4) %12)\l          to label %35 unwind label %43\l}"];
	Node0x558b7dd0ed60 -> Node0x558b7dd0f890;
	Node0x558b7dd0ed60 -> Node0x558b7dd0f8e0;
	Node0x558b7dd0f890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  br label %36\l}"];
	Node0x558b7dd0f890 -> Node0x558b7dd0fc10;
	Node0x558b7dd0fc10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = load i32, i32* %11, align 4\l  %38 = add nsw i32 %37, 1\l  store i32 %38, i32* %11, align 4\l  br label %25, !llvm.loop !4\l}"];
	Node0x558b7dd0fc10 -> Node0x558b7dd0eb30;
	Node0x558b7dd0e4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%39:\l39:                                               \l  %40 = landingpad \{ i8*, i32 \}\l          cleanup\l  %41 = extractvalue \{ i8*, i32 \} %40, 0\l  store i8* %41, i8** %9, align 8\l  %42 = extractvalue \{ i8*, i32 \} %40, 1\l  store i32 %42, i32* %10, align 4\l  call void @_ZNSaIiED2Ev(%\"class.std::allocator\"* nonnull align 1\l... dereferenceable(1) %8) #9\l  br label %51\l}"];
	Node0x558b7dd0e4f0 -> Node0x558b7dd10d60;
	Node0x558b7dd0f8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%43:\l43:                                               \l  %44 = landingpad \{ i8*, i32 \}\l          cleanup\l  %45 = extractvalue \{ i8*, i32 \} %44, 0\l  store i8* %45, i8** %9, align 8\l  %46 = extractvalue \{ i8*, i32 \} %44, 1\l  store i32 %46, i32* %10, align 4\l  call void @_ZNSt6vectorIiSaIiEED2Ev(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0) #9\l  br label %51\l}"];
	Node0x558b7dd0f8e0 -> Node0x558b7dd10d60;
	Node0x558b7dd0edb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%47:\l47:                                               \l  store i1 true, i1* %5, align 1\l  %48 = load i1, i1* %5, align 1\l  br i1 %48, label %50, label %49\l|{<s0>T|<s1>F}}"];
	Node0x558b7dd0edb0:s0 -> Node0x558b7dd114a0;
	Node0x558b7dd0edb0:s1 -> Node0x558b7dd114f0;
	Node0x558b7dd114f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%49:\l49:                                               \l  call void @_ZNSt6vectorIiSaIiEED2Ev(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0) #9\l  br label %50\l}"];
	Node0x558b7dd114f0 -> Node0x558b7dd114a0;
	Node0x558b7dd114a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%50:\l50:                                               \l  ret void\l}"];
	Node0x558b7dd10d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%51:\l51:                                               \l  %52 = load i8*, i8** %9, align 8\l  %53 = load i32, i32* %10, align 4\l  %54 = insertvalue \{ i8*, i32 \} undef, i8* %52, 0\l  %55 = insertvalue \{ i8*, i32 \} %54, i32 %53, 1\l  resume \{ i8*, i32 \} %55\l}"];
}
