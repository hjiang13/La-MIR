digraph "CFG for '_Z10count_numsSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z10count_numsSt6vectorIiSaIiEE' function";

	Node0x56339f6c70f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%1:\l  %2 = alloca i32, align 4\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  store i32 0, i32* %2, align 4\l  store i32 0, i32* %3, align 4\l  br label %6\l}"];
	Node0x56339f6c70f0 -> Node0x56339f6c7af0;
	Node0x56339f6c7af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%6:\l6:                                                \l  %7 = load i32, i32* %3, align 4\l  %8 = sext i32 %7 to i64\l  %9 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %0) #2\l  %10 = icmp ult i64 %8, %9\l  br i1 %10, label %11, label %50\l|{<s0>T|<s1>F}}"];
	Node0x56339f6c7af0:s0 -> Node0x56339f6c8020;
	Node0x56339f6c7af0:s1 -> Node0x56339f6c8070;
	Node0x56339f6c8020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%11:\l11:                                               \l  %12 = load i32, i32* %3, align 4\l  %13 = sext i32 %12 to i64\l  %14 = call nonnull align 4 dereferenceable(4) i32*\l... @_ZNSt6vectorIiSaIiEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 %13) #2\l  %15 = load i32, i32* %14, align 4\l  %16 = icmp sgt i32 %15, 0\l  br i1 %16, label %17, label %20\l|{<s0>T|<s1>F}}"];
	Node0x56339f6c8020:s0 -> Node0x56339f6c8680;
	Node0x56339f6c8020:s1 -> Node0x56339f6c86d0;
	Node0x56339f6c8680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%17:\l17:                                               \l  %18 = load i32, i32* %2, align 4\l  %19 = add nsw i32 %18, 1\l  store i32 %19, i32* %2, align 4\l  br label %46\l}"];
	Node0x56339f6c8680 -> Node0x56339f6c8910;
	Node0x56339f6c86d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%20:\l20:                                               \l  store i32 0, i32* %4, align 4\l  %21 = load i32, i32* %3, align 4\l  %22 = sext i32 %21 to i64\l  %23 = call nonnull align 4 dereferenceable(4) i32*\l... @_ZNSt6vectorIiSaIiEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 %22) #2\l  %24 = load i32, i32* %23, align 4\l  %25 = call i32 @abs(i32 %24) #3\l  store i32 %25, i32* %5, align 4\l  br label %26\l}"];
	Node0x56339f6c86d0 -> Node0x56339f6c8f80;
	Node0x56339f6c8f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = load i32, i32* %5, align 4\l  %28 = icmp sge i32 %27, 10\l  br i1 %28, label %29, label %36\l|{<s0>T|<s1>F}}"];
	Node0x56339f6c8f80:s0 -> Node0x56339f6c9140;
	Node0x56339f6c8f80:s1 -> Node0x56339f6c9190;
	Node0x56339f6c9140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = load i32, i32* %5, align 4\l  %31 = srem i32 %30, 10\l  %32 = load i32, i32* %4, align 4\l  %33 = add nsw i32 %32, %31\l  store i32 %33, i32* %4, align 4\l  %34 = load i32, i32* %5, align 4\l  %35 = sdiv i32 %34, 10\l  store i32 %35, i32* %5, align 4\l  br label %26, !llvm.loop !4\l}"];
	Node0x56339f6c9140 -> Node0x56339f6c8f80;
	Node0x56339f6c9190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%36:\l36:                                               \l  %37 = load i32, i32* %5, align 4\l  %38 = load i32, i32* %4, align 4\l  %39 = sub nsw i32 %38, %37\l  store i32 %39, i32* %4, align 4\l  %40 = load i32, i32* %4, align 4\l  %41 = icmp sgt i32 %40, 0\l  br i1 %41, label %42, label %45\l|{<s0>T|<s1>F}}"];
	Node0x56339f6c9190:s0 -> Node0x56339f6ca740;
	Node0x56339f6c9190:s1 -> Node0x56339f6ca790;
	Node0x56339f6ca740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%42:\l42:                                               \l  %43 = load i32, i32* %2, align 4\l  %44 = add nsw i32 %43, 1\l  store i32 %44, i32* %2, align 4\l  br label %45\l}"];
	Node0x56339f6ca740 -> Node0x56339f6ca790;
	Node0x56339f6ca790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%45:\l45:                                               \l  br label %46\l}"];
	Node0x56339f6ca790 -> Node0x56339f6c8910;
	Node0x56339f6c8910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%46:\l46:                                               \l  br label %47\l}"];
	Node0x56339f6c8910 -> Node0x56339f6cab40;
	Node0x56339f6cab40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%47:\l47:                                               \l  %48 = load i32, i32* %3, align 4\l  %49 = add nsw i32 %48, 1\l  store i32 %49, i32* %3, align 4\l  br label %6, !llvm.loop !6\l}"];
	Node0x56339f6cab40 -> Node0x56339f6c7af0;
	Node0x56339f6c8070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%50:\l50:                                               \l  %51 = load i32, i32* %2, align 4\l  ret i32 %51\l}"];
}
