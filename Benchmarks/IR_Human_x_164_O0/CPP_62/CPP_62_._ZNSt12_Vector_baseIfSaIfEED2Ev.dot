digraph "CFG for '_ZNSt12_Vector_baseIfSaIfEED2Ev' function" {
	label="CFG for '_ZNSt12_Vector_baseIfSaIfEED2Ev' function";

	Node0x55a6d7660d20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1:\l  %2 = alloca %\"struct.std::_Vector_base\"*, align 8\l  %3 = alloca i8*, align 8\l  %4 = alloca i32, align 4\l  store %\"struct.std::_Vector_base\"* %0, %\"struct.std::_Vector_base\"** %2,\l... align 8\l  %5 = load %\"struct.std::_Vector_base\"*, %\"struct.std::_Vector_base\"** %2,\l... align 8\l  %6 = getelementptr inbounds %\"struct.std::_Vector_base\",\l... %\"struct.std::_Vector_base\"* %5, i32 0, i32 0\l  %7 = bitcast %\"struct.std::_Vector_base\<float,\l... std::allocator\<float\>\>::_Vector_impl\"* %6 to\l... %\"struct.std::_Vector_base\<float, std::allocator\<float\>\>::_Vector_impl_data\"*\l  %8 = getelementptr inbounds %\"struct.std::_Vector_base\<float,\l... std::allocator\<float\>\>::_Vector_impl_data\", %\"struct.std::_Vector_base\<float,\l... std::allocator\<float\>\>::_Vector_impl_data\"* %7, i32 0, i32 0\l  %9 = load float*, float** %8, align 8\l  %10 = getelementptr inbounds %\"struct.std::_Vector_base\",\l... %\"struct.std::_Vector_base\"* %5, i32 0, i32 0\l  %11 = bitcast %\"struct.std::_Vector_base\<float,\l... std::allocator\<float\>\>::_Vector_impl\"* %10 to\l... %\"struct.std::_Vector_base\<float, std::allocator\<float\>\>::_Vector_impl_data\"*\l  %12 = getelementptr inbounds %\"struct.std::_Vector_base\<float,\l... std::allocator\<float\>\>::_Vector_impl_data\", %\"struct.std::_Vector_base\<float,\l... std::allocator\<float\>\>::_Vector_impl_data\"* %11, i32 0, i32 2\l  %13 = load float*, float** %12, align 8\l  %14 = getelementptr inbounds %\"struct.std::_Vector_base\",\l... %\"struct.std::_Vector_base\"* %5, i32 0, i32 0\l  %15 = bitcast %\"struct.std::_Vector_base\<float,\l... std::allocator\<float\>\>::_Vector_impl\"* %14 to\l... %\"struct.std::_Vector_base\<float, std::allocator\<float\>\>::_Vector_impl_data\"*\l  %16 = getelementptr inbounds %\"struct.std::_Vector_base\<float,\l... std::allocator\<float\>\>::_Vector_impl_data\", %\"struct.std::_Vector_base\<float,\l... std::allocator\<float\>\>::_Vector_impl_data\"* %15, i32 0, i32 0\l  %17 = load float*, float** %16, align 8\l  %18 = ptrtoint float* %13 to i64\l  %19 = ptrtoint float* %17 to i64\l  %20 = sub i64 %18, %19\l  %21 = sdiv exact i64 %20, 4\l  invoke void\l... @_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm(%\"struct.std::_Vector_base\"*\l... nonnull align 8 dereferenceable(24) %5, float* %9, i64 %21)\l          to label %22 unwind label %24\l}"];
	Node0x55a6d7660d20 -> Node0x55a6d7660ec0;
	Node0x55a6d7660d20 -> Node0x55a6d76618a0;
	Node0x55a6d7660ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = getelementptr inbounds %\"struct.std::_Vector_base\",\l... %\"struct.std::_Vector_base\"* %5, i32 0, i32 0\l  call void\l... @_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev(%\"struct.std::_Vector_base\<floa\l...t, std::allocator\<float\>\>::_Vector_impl\"* nonnull align 8 dereferenceable(24)\l... %23) #9\l  ret void\l}"];
	Node0x55a6d76618a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%24:\l24:                                               \l  %25 = landingpad \{ i8*, i32 \}\l          catch i8* null\l  %26 = extractvalue \{ i8*, i32 \} %25, 0\l  store i8* %26, i8** %3, align 8\l  %27 = extractvalue \{ i8*, i32 \} %25, 1\l  store i32 %27, i32* %4, align 4\l  %28 = getelementptr inbounds %\"struct.std::_Vector_base\",\l... %\"struct.std::_Vector_base\"* %5, i32 0, i32 0\l  call void\l... @_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev(%\"struct.std::_Vector_base\<floa\l...t, std::allocator\<float\>\>::_Vector_impl\"* nonnull align 8 dereferenceable(24)\l... %28) #9\l  br label %29\l}"];
	Node0x55a6d76618a0 -> Node0x55a6d76622b0;
	Node0x55a6d76622b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%29:\l29:                                               \l  %30 = load i8*, i8** %3, align 8\l  call void @__clang_call_terminate(i8* %30) #10\l  unreachable\l}"];
}
