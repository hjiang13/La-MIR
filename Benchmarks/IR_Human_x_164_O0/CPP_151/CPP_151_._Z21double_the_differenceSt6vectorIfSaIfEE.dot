digraph "CFG for '_Z21double_the_differenceSt6vectorIfSaIfEE' function" {
	label="CFG for '_Z21double_the_differenceSt6vectorIfSaIfEE' function";

	Node0x56348f2d4590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%1:\l  %2 = alloca i64, align 8\l  %3 = alloca i32, align 4\l  store i64 0, i64* %2, align 8\l  store i32 0, i32* %3, align 4\l  br label %4\l}"];
	Node0x56348f2d4590 -> Node0x56348f2d4eb0;
	Node0x56348f2d4eb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l4:                                                \l  %5 = load i32, i32* %3, align 4\l  %6 = sext i32 %5 to i64\l  %7 = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%\"class.std::vector\"* nonnull\l... align 8 dereferenceable(24) %0) #3\l  %8 = icmp ult i64 %6, %7\l  br i1 %8, label %9, label %59\l|{<s0>T|<s1>F}}"];
	Node0x56348f2d4eb0:s0 -> Node0x56348f2d4f70;
	Node0x56348f2d4eb0:s1 -> Node0x56348f2d53f0;
	Node0x56348f2d4f70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%9:\l9:                                                \l  %10 = load i32, i32* %3, align 4\l  %11 = sext i32 %10 to i64\l  %12 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 %11) #3\l  %13 = load float, float* %12, align 4\l  %14 = load i32, i32* %3, align 4\l  %15 = sext i32 %14 to i64\l  %16 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 %15) #3\l  %17 = load float, float* %16, align 4\l  %18 = call float @_ZSt5roundf(float %17)\l  %19 = fsub float %13, %18\l  %20 = fpext float %19 to double\l  %21 = fcmp olt double %20, 1.000000e-04\l  br i1 %21, label %22, label %55\l|{<s0>T|<s1>F}}"];
	Node0x56348f2d4f70:s0 -> Node0x56348f2d6910;
	Node0x56348f2d4f70:s1 -> Node0x56348f2d69a0;
	Node0x56348f2d6910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%22:\l22:                                               \l  %23 = load i32, i32* %3, align 4\l  %24 = sext i32 %23 to i64\l  %25 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 %24) #3\l  %26 = load float, float* %25, align 4\l  %27 = fcmp ogt float %26, 0.000000e+00\l  br i1 %27, label %28, label %54\l|{<s0>T|<s1>F}}"];
	Node0x56348f2d6910:s0 -> Node0x56348f2d6e20;
	Node0x56348f2d6910:s1 -> Node0x56348f2d6eb0;
	Node0x56348f2d6e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%28:\l28:                                               \l  %29 = load i32, i32* %3, align 4\l  %30 = sext i32 %29 to i64\l  %31 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 %30) #3\l  %32 = load float, float* %31, align 4\l  %33 = call float @_ZSt5roundf(float %32)\l  %34 = fptosi float %33 to i32\l  %35 = srem i32 %34, 2\l  %36 = icmp eq i32 %35, 1\l  br i1 %36, label %37, label %54\l|{<s0>T|<s1>F}}"];
	Node0x56348f2d6e20:s0 -> Node0x56348f2d7700;
	Node0x56348f2d6e20:s1 -> Node0x56348f2d6eb0;
	Node0x56348f2d7700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%37:\l37:                                               \l  %38 = load i32, i32* %3, align 4\l  %39 = sext i32 %38 to i64\l  %40 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 %39) #3\l  %41 = load float, float* %40, align 4\l  %42 = call float @_ZSt5roundf(float %41)\l  %43 = fptosi float %42 to i32\l  %44 = load i32, i32* %3, align 4\l  %45 = sext i32 %44 to i64\l  %46 = call nonnull align 4 dereferenceable(4) float*\l... @_ZNSt6vectorIfSaIfEEixEm(%\"class.std::vector\"* nonnull align 8\l... dereferenceable(24) %0, i64 %45) #3\l  %47 = load float, float* %46, align 4\l  %48 = call float @_ZSt5roundf(float %47)\l  %49 = fptosi float %48 to i32\l  %50 = mul nsw i32 %43, %49\l  %51 = sext i32 %50 to i64\l  %52 = load i64, i64* %2, align 8\l  %53 = add nsw i64 %52, %51\l  store i64 %53, i64* %2, align 8\l  br label %54\l}"];
	Node0x56348f2d7700 -> Node0x56348f2d6eb0;
	Node0x56348f2d6eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%54:\l54:                                               \l  br label %55\l}"];
	Node0x56348f2d6eb0 -> Node0x56348f2d69a0;
	Node0x56348f2d69a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%55:\l55:                                               \l  br label %56\l}"];
	Node0x56348f2d69a0 -> Node0x56348f2d8360;
	Node0x56348f2d8360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%56:\l56:                                               \l  %57 = load i32, i32* %3, align 4\l  %58 = add nsw i32 %57, 1\l  store i32 %58, i32* %3, align 4\l  br label %4, !llvm.loop !4\l}"];
	Node0x56348f2d8360 -> Node0x56348f2d4eb0;
	Node0x56348f2d53f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%59:\l59:                                               \l  %60 = load i64, i64* %2, align 8\l  ret i64 %60\l}"];
}
