; ModuleID = '../../Human_xBenchmarks_164/CPP_151/CPP_151.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_151/CPP_151.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<float, std::allocator<float>>::_Vector_impl" }
%"struct.std::_Vector_base<float, std::allocator<float>>::_Vector_impl" = type { %"struct.std::_Vector_base<float, std::allocator<float>>::_Vector_impl_data" }
%"struct.std::_Vector_base<float, std::allocator<float>>::_Vector_impl_data" = type { float*, float*, float* }

$_ZNKSt6vectorIfSaIfEE4sizeEv = comdat any

$_ZNSt6vectorIfSaIfEEixEm = comdat any

$_ZSt5roundf = comdat any

; Function Attrs: mustprogress noinline uwtable
define dso_local i64 @_Z21double_the_differenceSt6vectorIfSaIfEE(%"class.std::vector"* %0) #0 {
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  store i64 0, i64* %2, align 8
  store i32 0, i32* %3, align 4
  br label %4

4:                                                ; preds = %56, %1
  %5 = load i32, i32* %3, align 4
  %6 = sext i32 %5 to i64
  %7 = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #3
  %8 = icmp ult i64 %6, %7
  br i1 %8, label %9, label %59

9:                                                ; preds = %4
  %10 = load i32, i32* %3, align 4
  %11 = sext i32 %10 to i64
  %12 = call nonnull align 4 dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, i64 %11) #3
  %13 = load float, float* %12, align 4
  %14 = load i32, i32* %3, align 4
  %15 = sext i32 %14 to i64
  %16 = call nonnull align 4 dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, i64 %15) #3
  %17 = load float, float* %16, align 4
  %18 = call float @_ZSt5roundf(float %17)
  %19 = fsub float %13, %18
  %20 = fpext float %19 to double
  %21 = fcmp olt double %20, 1.000000e-04
  br i1 %21, label %22, label %55

22:                                               ; preds = %9
  %23 = load i32, i32* %3, align 4
  %24 = sext i32 %23 to i64
  %25 = call nonnull align 4 dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, i64 %24) #3
  %26 = load float, float* %25, align 4
  %27 = fcmp ogt float %26, 0.000000e+00
  br i1 %27, label %28, label %54

28:                                               ; preds = %22
  %29 = load i32, i32* %3, align 4
  %30 = sext i32 %29 to i64
  %31 = call nonnull align 4 dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, i64 %30) #3
  %32 = load float, float* %31, align 4
  %33 = call float @_ZSt5roundf(float %32)
  %34 = fptosi float %33 to i32
  %35 = srem i32 %34, 2
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %54

37:                                               ; preds = %28
  %38 = load i32, i32* %3, align 4
  %39 = sext i32 %38 to i64
  %40 = call nonnull align 4 dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, i64 %39) #3
  %41 = load float, float* %40, align 4
  %42 = call float @_ZSt5roundf(float %41)
  %43 = fptosi float %42 to i32
  %44 = load i32, i32* %3, align 4
  %45 = sext i32 %44 to i64
  %46 = call nonnull align 4 dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, i64 %45) #3
  %47 = load float, float* %46, align 4
  %48 = call float @_ZSt5roundf(float %47)
  %49 = fptosi float %48 to i32
  %50 = mul nsw i32 %43, %49
  %51 = sext i32 %50 to i64
  %52 = load i64, i64* %2, align 8
  %53 = add nsw i64 %52, %51
  store i64 %53, i64* %2, align 8
  br label %54

54:                                               ; preds = %37, %28, %22
  br label %55

55:                                               ; preds = %54, %9
  br label %56

56:                                               ; preds = %55
  %57 = load i32, i32* %3, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %3, align 4
  br label %4, !llvm.loop !4

59:                                               ; preds = %4
  %60 = load i64, i64* %2, align 8
  ret i64 %60
}

; Function Attrs: mustprogress noinline nounwind uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #1 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<float, std::allocator<float>>::_Vector_impl"* %5 to %"struct.std::_Vector_base<float, std::allocator<float>>::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float>>::_Vector_impl_data", %"struct.std::_Vector_base<float, std::allocator<float>>::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load float*, float** %7, align 8
  %9 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<float, std::allocator<float>>::_Vector_impl"* %10 to %"struct.std::_Vector_base<float, std::allocator<float>>::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float>>::_Vector_impl_data", %"struct.std::_Vector_base<float, std::allocator<float>>::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load float*, float** %12, align 8
  %14 = ptrtoint float* %8 to i64
  %15 = ptrtoint float* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 4
  ret i64 %17
}

; Function Attrs: mustprogress noinline nounwind uwtable
define linkonce_odr dso_local nonnull align 4 dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, i64 %1) #1 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<float, std::allocator<float>>::_Vector_impl"* %7 to %"struct.std::_Vector_base<float, std::allocator<float>>::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float>>::_Vector_impl_data", %"struct.std::_Vector_base<float, std::allocator<float>>::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load float*, float** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds float, float* %10, i64 %11
  ret float* %12
}

; Function Attrs: mustprogress noinline nounwind uwtable
define linkonce_odr dso_local float @_ZSt5roundf(float %0) #1 comdat {
  %2 = alloca float, align 4
  store float %0, float* %2, align 4
  %3 = load float, float* %2, align 4
  %4 = call float @llvm.round.f32(float %3)
  ret float %4
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.round.f32(float) #2

attributes #0 = { mustprogress noinline uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress noinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{i32 7, !"frame-pointer", i32 2}
!3 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.mustprogress"}
