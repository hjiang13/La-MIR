digraph "CFG for '_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE5beginEv' function" {
	label="CFG for '_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE5beginEv' function";

	Node0x561d2df57e10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1:\l  %2 = alloca %\"struct.std::_Rb_tree_iterator\", align 8\l  %3 = alloca %\"class.std::_Rb_tree\"*, align 8\l  store %\"class.std::_Rb_tree\"* %0, %\"class.std::_Rb_tree\"** %3, align 8\l  %4 = load %\"class.std::_Rb_tree\"*, %\"class.std::_Rb_tree\"** %3, align 8\l  %5 = getelementptr inbounds %\"class.std::_Rb_tree\", %\"class.std::_Rb_tree\"*\l... %4, i32 0, i32 0\l  %6 = bitcast %\"struct.std::_Rb_tree\<int, std::pair\<const int,\l... std::__cxx11::basic_string\<char\>\>, std::_Select1st\<std::pair\<const int,\l... std::__cxx11::basic_string\<char\>\>\>, std::less\<int\>\>::_Rb_tree_impl\"* %5 to i8*\l  %7 = getelementptr inbounds i8, i8* %6, i64 8\l  %8 = bitcast i8* %7 to %\"struct.std::_Rb_tree_header\"*\l  %9 = getelementptr inbounds %\"struct.std::_Rb_tree_header\",\l... %\"struct.std::_Rb_tree_header\"* %8, i32 0, i32 0\l  %10 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\",\l... %\"struct.std::_Rb_tree_node_base\"* %9, i32 0, i32 2\l  %11 = load %\"struct.std::_Rb_tree_node_base\"*,\l... %\"struct.std::_Rb_tree_node_base\"** %10, align 8\l  call void\l... @_ZNSt17_Rb_tree_iteratorISt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traits\l...IcESaIcEEEEEC2EPSt18_Rb_tree_node_base(%\"struct.std::_Rb_tree_iterator\"*\l... nonnull align 8 dereferenceable(8) %2, %\"struct.std::_Rb_tree_node_base\"*\l... %11) #15\l  %12 = getelementptr inbounds %\"struct.std::_Rb_tree_iterator\",\l... %\"struct.std::_Rb_tree_iterator\"* %2, i32 0, i32 0\l  %13 = load %\"struct.std::_Rb_tree_node_base\"*,\l... %\"struct.std::_Rb_tree_node_base\"** %12, align 8\l  ret %\"struct.std::_Rb_tree_node_base\"* %13\l}"];
}
