; ModuleID = '../../Human_xBenchmarks_164/CPP_139/CPP_139.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_139/CPP_139.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local i64 @_Z17special_factoriali(i32 %0) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 1
  br i1 %2, label %28, label %3

3:                                                ; preds = %1
  %4 = add nuw i32 %0, 1
  %5 = zext i32 %4 to i64
  %6 = add nsw i64 %5, -1
  %7 = add nsw i64 %5, -2
  %8 = and i64 %6, 7
  %9 = icmp ult i64 %7, 7
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = and i64 %6, -8
  br label %30

12:                                               ; preds = %30, %3
  %13 = phi i64 [ undef, %3 ], [ %57, %30 ]
  %14 = phi i64 [ 1, %3 ], [ %58, %30 ]
  %15 = phi i64 [ 1, %3 ], [ %57, %30 ]
  %16 = phi i64 [ 1, %3 ], [ %56, %30 ]
  %17 = icmp eq i64 %8, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %12, %18
  %19 = phi i64 [ %25, %18 ], [ %14, %12 ]
  %20 = phi i64 [ %24, %18 ], [ %15, %12 ]
  %21 = phi i64 [ %23, %18 ], [ %16, %12 ]
  %22 = phi i64 [ %26, %18 ], [ %8, %12 ]
  %23 = mul nsw i64 %21, %19
  %24 = mul nsw i64 %23, %20
  %25 = add nuw nsw i64 %19, 1
  %26 = add i64 %22, -1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %18, !llvm.loop !3

28:                                               ; preds = %12, %18, %1
  %29 = phi i64 [ 1, %1 ], [ %13, %12 ], [ %24, %18 ]
  ret i64 %29

30:                                               ; preds = %30, %10
  %31 = phi i64 [ 1, %10 ], [ %58, %30 ]
  %32 = phi i64 [ 1, %10 ], [ %57, %30 ]
  %33 = phi i64 [ 1, %10 ], [ %56, %30 ]
  %34 = phi i64 [ %11, %10 ], [ %59, %30 ]
  %35 = mul nsw i64 %33, %31
  %36 = mul nsw i64 %35, %32
  %37 = add nuw nsw i64 %31, 1
  %38 = mul nsw i64 %35, %37
  %39 = mul nsw i64 %38, %36
  %40 = add nuw nsw i64 %31, 2
  %41 = mul nsw i64 %38, %40
  %42 = mul nsw i64 %41, %39
  %43 = add nuw nsw i64 %31, 3
  %44 = mul nsw i64 %41, %43
  %45 = mul nsw i64 %44, %42
  %46 = add nuw nsw i64 %31, 4
  %47 = mul nsw i64 %44, %46
  %48 = mul nsw i64 %47, %45
  %49 = add nuw nsw i64 %31, 5
  %50 = mul nsw i64 %47, %49
  %51 = mul nsw i64 %50, %48
  %52 = add nuw nsw i64 %31, 6
  %53 = mul nsw i64 %50, %52
  %54 = mul nsw i64 %53, %51
  %55 = add nuw nsw i64 %31, 7
  %56 = mul nsw i64 %53, %55
  %57 = mul nsw i64 %56, %54
  %58 = add nuw nsw i64 %31, 8
  %59 = add i64 %34, -8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %12, label %30, !llvm.loop !5
}

attributes #0 = { mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.mustprogress"}
