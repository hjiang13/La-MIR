digraph "CFG for '_Z9sort_evenSt6vectorIfSaIfEE' function" {
	label="CFG for '_Z9sort_evenSt6vectorIfSaIfEE' function";

	Node0x55a5561cd580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %5, i8 0, i64 24, i1 false)\l  %6 = load float*, float** %3, align 8, !tbaa !3\l  %7 = load float*, float** %4, align 8, !tbaa !8\l  %8 = icmp eq float* %6, %7\l  br i1 %8, label %102, label %29\l|{<s0>T|<s1>F}}"];
	Node0x55a5561cd580:s0 -> Node0x55a5561cdef0;
	Node0x55a5561cd580:s1 -> Node0x55a5561cf140;
	Node0x55a5561cf280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%9:\l9:                                                \l  %10 = icmp eq float* %82, %85\l  br i1 %10, label %23, label %11\l|{<s0>T|<s1>F}}"];
	Node0x55a5561cf280:s0 -> Node0x55a5561cf410;
	Node0x55a5561cf280:s1 -> Node0x55a5561cf4a0;
	Node0x55a5561cf4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%11:\l11:                                               \l  %12 = ptrtoint float* %85 to i64\l  %13 = ptrtoint float* %82 to i64\l  %14 = sub i64 %12, %13\l  %15 = ashr exact i64 %14, 2\l  %16 = tail call i64 @llvm.ctlz.i64(i64 %15, i1 true) #7, !range !9\l  %17 = shl nuw nsw i64 %16, 1\l  %18 = xor i64 %17, 126\l  invoke void\l... @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEElN\l...S0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(float* %82, float* nonnull %85, i64\l... %18)\l          to label %19 unwind label %103\l}"];
	Node0x55a5561cf4a0 -> Node0x55a5561cfd40;
	Node0x55a5561cf4a0 -> Node0x55a5561cfdd0;
	Node0x55a5561cfd40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%19:\l19:                                               \l  invoke void\l... @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIf\l...EEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(float* %82, float* nonnull %85)\l          to label %20 unwind label %103\l}"];
	Node0x55a5561cfd40 -> Node0x55a5561d0190;
	Node0x55a5561cfd40 -> Node0x55a5561cfdd0;
	Node0x55a5561d0190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%20:\l20:                                               \l  %21 = load float*, float** %3, align 8, !tbaa !3\l  %22 = load float*, float** %4, align 8, !tbaa !8\l  br label %23\l}"];
	Node0x55a5561d0190 -> Node0x55a5561cf410;
	Node0x55a5561cf410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%23:\l23:                                               \l  %24 = phi float* [ %22, %20 ], [ %80, %9 ]\l  %25 = phi float* [ %21, %20 ], [ %81, %9 ]\l  %26 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %27 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %28 = icmp eq float* %25, %24\l  br i1 %28, label %98, label %105\l|{<s0>T|<s1>F}}"];
	Node0x55a5561cf410:s0 -> Node0x55a5561d1700;
	Node0x55a5561cf410:s1 -> Node0x55a5561d1790;
	Node0x55a5561cf140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi float* [ %80, %79 ], [ %7, %2 ]\l  %31 = phi float* [ %81, %79 ], [ %6, %2 ]\l  %32 = phi i64 [ %86, %79 ], [ 0, %2 ]\l  %33 = phi i64 [ %88, %79 ], [ 0, %2 ]\l  %34 = phi float* [ %84, %79 ], [ null, %2 ]\l  %35 = phi float* [ %85, %79 ], [ null, %2 ]\l  %36 = phi float* [ %82, %79 ], [ null, %2 ]\l  %37 = getelementptr inbounds float, float* %30, i64 %33\l  %38 = icmp eq float* %35, %34\l  br i1 %38, label %41, label %39\l|{<s0>T|<s1>F}}"];
	Node0x55a5561cf140:s0 -> Node0x55a5561d2280;
	Node0x55a5561cf140:s1 -> Node0x55a5561d2310;
	Node0x55a5561d2310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%39:\l39:                                               \l  %40 = load float, float* %37, align 4, !tbaa !10\l  store float %40, float* %35, align 4, !tbaa !10\l  br label %79\l}"];
	Node0x55a5561d2310 -> Node0x55a5561d18d0;
	Node0x55a5561d2280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%41:\l41:                                               \l  %42 = ptrtoint float* %34 to i64\l  %43 = ptrtoint float* %36 to i64\l  %44 = sub i64 %42, %43\l  %45 = ashr exact i64 %44, 2\l  %46 = icmp eq i64 %44, 9223372036854775804\l  br i1 %46, label %47, label %49\l|{<s0>T|<s1>F}}"];
	Node0x55a5561d2280:s0 -> Node0x55a5561d2ef0;
	Node0x55a5561d2280:s1 -> Node0x55a5561d2f40;
	Node0x55a5561d2ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%47:\l47:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #8\l          to label %48 unwind label %96\l}"];
	Node0x55a5561d2ef0 -> Node0x55a5561d3140;
	Node0x55a5561d2ef0 -> Node0x55a5561d3190;
	Node0x55a5561d3140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%48:\l48:                                               \l  unreachable\l}"];
	Node0x55a5561d2f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%49:\l49:                                               \l  %50 = icmp eq i64 %44, 0\l  %51 = select i1 %50, i64 1, i64 %45\l  %52 = add nsw i64 %51, %45\l  %53 = icmp ult i64 %52, %45\l  %54 = icmp ugt i64 %52, 2305843009213693951\l  %55 = or i1 %53, %54\l  %56 = select i1 %55, i64 2305843009213693951, i64 %52\l  %57 = icmp eq i64 %56, 0\l  br i1 %57, label %63, label %58\l|{<s0>T|<s1>F}}"];
	Node0x55a5561d2f40:s0 -> Node0x55a5561d38f0;
	Node0x55a5561d2f40:s1 -> Node0x55a5561d3940;
	Node0x55a5561d3940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%58:\l58:                                               \l  %59 = shl nuw nsw i64 %56, 2\l  %60 = invoke noalias nonnull i8* @_Znwm(i64 %59) #9\l          to label %61 unwind label %94\l}"];
	Node0x55a5561d3940 -> Node0x55a5561d3ad0;
	Node0x55a5561d3940 -> Node0x55a5561d3b20;
	Node0x55a5561d3ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%61:\l61:                                               \l  %62 = bitcast i8* %60 to float*\l  br label %63\l}"];
	Node0x55a5561d3ad0 -> Node0x55a5561d38f0;
	Node0x55a5561d38f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%63:\l63:                                               \l  %64 = phi float* [ %62, %61 ], [ null, %49 ]\l  %65 = getelementptr inbounds float, float* %64, i64 %45\l  %66 = load float, float* %37, align 4, !tbaa !10\l  store float %66, float* %65, align 4, !tbaa !10\l  %67 = icmp sgt i64 %44, 0\l  br i1 %67, label %68, label %71\l|{<s0>T|<s1>F}}"];
	Node0x55a5561d38f0:s0 -> Node0x55a5561d4560;
	Node0x55a5561d38f0:s1 -> Node0x55a5561d45b0;
	Node0x55a5561d4560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%68:\l68:                                               \l  %69 = bitcast float* %64 to i8*\l  %70 = bitcast float* %36 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %70,\l... i64 %44, i1 false) #7\l  br label %71\l}"];
	Node0x55a5561d4560 -> Node0x55a5561d45b0;
	Node0x55a5561d45b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%71:\l71:                                               \l  %72 = icmp eq float* %36, null\l  br i1 %72, label %75, label %73\l|{<s0>T|<s1>F}}"];
	Node0x55a5561d45b0:s0 -> Node0x55a5561d4ba0;
	Node0x55a5561d45b0:s1 -> Node0x55a5561d4bf0;
	Node0x55a5561d4bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%73:\l73:                                               \l  %74 = bitcast float* %36 to i8*\l  tail call void @_ZdlPv(i8* nonnull %74) #7\l  br label %75\l}"];
	Node0x55a5561d4bf0 -> Node0x55a5561d4ba0;
	Node0x55a5561d4ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%75:\l75:                                               \l  %76 = getelementptr inbounds float, float* %64, i64 %56\l  %77 = load float*, float** %3, align 8, !tbaa !3\l  %78 = load float*, float** %4, align 8, !tbaa !8\l  br label %79\l}"];
	Node0x55a5561d4ba0 -> Node0x55a5561d18d0;
	Node0x55a5561d18d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%79:\l79:                                               \l  %80 = phi float* [ %78, %75 ], [ %30, %39 ]\l  %81 = phi float* [ %77, %75 ], [ %31, %39 ]\l  %82 = phi float* [ %64, %75 ], [ %36, %39 ]\l  %83 = phi float* [ %65, %75 ], [ %35, %39 ]\l  %84 = phi float* [ %76, %75 ], [ %34, %39 ]\l  %85 = getelementptr inbounds float, float* %83, i64 1\l  %86 = add nuw i64 %32, 1\l  %87 = shl i64 %86, 1\l  %88 = and i64 %87, 4294967294\l  %89 = ptrtoint float* %81 to i64\l  %90 = ptrtoint float* %80 to i64\l  %91 = sub i64 %89, %90\l  %92 = ashr exact i64 %91, 2\l  %93 = icmp ugt i64 %92, %88\l  br i1 %93, label %29, label %9, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x55a5561d18d0:s0 -> Node0x55a5561cf140;
	Node0x55a5561d18d0:s1 -> Node0x55a5561cf280;
	Node0x55a5561d3b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%94:\l94:                                               \l  %95 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %140\l}"];
	Node0x55a5561d3b20 -> Node0x55a5561d5bd0;
	Node0x55a5561d3190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%96:\l96:                                               \l  %97 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %140\l}"];
	Node0x55a5561d3190 -> Node0x55a5561d5bd0;
	Node0x55a5561d1700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%98:\l98:                                               \l  %99 = icmp eq float* %82, null\l  br i1 %99, label %102, label %100\l|{<s0>T|<s1>F}}"];
	Node0x55a5561d1700:s0 -> Node0x55a5561cdef0;
	Node0x55a5561d1700:s1 -> Node0x55a5561d5e00;
	Node0x55a5561d5e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%100:\l100:                                              \l  %101 = bitcast float* %82 to i8*\l  tail call void @_ZdlPv(i8* nonnull %101) #7\l  br label %102\l}"];
	Node0x55a5561d5e00 -> Node0x55a5561cdef0;
	Node0x55a5561cdef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%102:\l102:                                              \l  ret void\l}"];
	Node0x55a5561cfdd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%103:\l103:                                              \l  %104 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %140\l}"];
	Node0x55a5561cfdd0 -> Node0x55a5561d5bd0;
	Node0x55a5561d1790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%105:\l105:                                              \l  %106 = phi float* [ %134, %131 ], [ %24, %23 ]\l  %107 = phi i64 [ %132, %131 ], [ 0, %23 ]\l  %108 = and i64 %107, 1\l  %109 = icmp eq i64 %108, 0\l  br i1 %109, label %110, label %120\l|{<s0>T|<s1>F}}"];
	Node0x55a5561d1790:s0 -> Node0x55a5561d64f0;
	Node0x55a5561d1790:s1 -> Node0x55a5561d6540;
	Node0x55a5561d64f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%110:\l110:                                              \l  %111 = lshr i64 %107, 1\l  %112 = and i64 %111, 2147483647\l  %113 = getelementptr inbounds float, float* %82, i64 %112\l  %114 = load float*, float** %26, align 8, !tbaa !3\l  %115 = load float*, float** %27, align 8, !tbaa !14\l  %116 = icmp eq float* %114, %115\l  br i1 %116, label %117, label %126\l|{<s0>T|<s1>F}}"];
	Node0x55a5561d64f0:s0 -> Node0x55a5561d6a10;
	Node0x55a5561d64f0:s1 -> Node0x55a5561d6a60;
	Node0x55a5561d6a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%117:\l117:                                              \l  invoke void\l... @_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJRKfEEEvN9__gnu_cxx17__normal_iterato\l...rIPfS1_EEDpOT_(%\"class.std::vector\"* nonnull align 8 dereferenceable(24) %0,\l... float* %114, float* nonnull align 4 dereferenceable(4) %113)\l          to label %131 unwind label %118\l}"];
	Node0x55a5561d6a10 -> Node0x55a5561d6220;
	Node0x55a5561d6a10 -> Node0x55a5561d6c70;
	Node0x55a5561d6c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%118:\l118:                                              \l  %119 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %140\l}"];
	Node0x55a5561d6c70 -> Node0x55a5561d5bd0;
	Node0x55a5561d6540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%120:\l120:                                              \l  %121 = getelementptr inbounds float, float* %106, i64 %107\l  %122 = load float*, float** %26, align 8, !tbaa !3\l  %123 = load float*, float** %27, align 8, !tbaa !14\l  %124 = icmp eq float* %122, %123\l  br i1 %124, label %125, label %126\l|{<s0>T|<s1>F}}"];
	Node0x55a5561d6540:s0 -> Node0x55a5561d7840;
	Node0x55a5561d6540:s1 -> Node0x55a5561d6a60;
	Node0x55a5561d7840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%125:\l125:                                              \l  invoke void\l... @_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJRKfEEEvN9__gnu_cxx17__normal_iterato\l...rIPfS1_EEDpOT_(%\"class.std::vector\"* nonnull align 8 dereferenceable(24) %0,\l... float* %122, float* nonnull align 4 dereferenceable(4) %121)\l          to label %131 unwind label %118\l}"];
	Node0x55a5561d7840 -> Node0x55a5561d6220;
	Node0x55a5561d7840 -> Node0x55a5561d6c70;
	Node0x55a5561d6a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%126:\l126:                                              \l  %127 = phi float* [ %113, %110 ], [ %121, %120 ]\l  %128 = phi float* [ %114, %110 ], [ %122, %120 ]\l  %129 = load float, float* %127, align 4, !tbaa !10\l  store float %129, float* %128, align 4, !tbaa !10\l  %130 = getelementptr inbounds float, float* %128, i64 1\l  store float* %130, float** %26, align 8, !tbaa !3\l  br label %131\l}"];
	Node0x55a5561d6a60 -> Node0x55a5561d6220;
	Node0x55a5561d6220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%131:\l131:                                              \l  %132 = add nuw i64 %107, 1\l  %133 = load float*, float** %3, align 8, !tbaa !3\l  %134 = load float*, float** %4, align 8, !tbaa !8\l  %135 = ptrtoint float* %133 to i64\l  %136 = ptrtoint float* %134 to i64\l  %137 = sub i64 %135, %136\l  %138 = ashr exact i64 %137, 2\l  %139 = icmp ugt i64 %138, %132\l  br i1 %139, label %105, label %98, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x55a5561d6220:s0 -> Node0x55a5561d1790;
	Node0x55a5561d6220:s1 -> Node0x55a5561d1700;
	Node0x55a5561d5bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%140:\l140:                                              \l  %141 = phi float* [ %82, %118 ], [ %82, %103 ], [ %36, %94 ], [ %36, %96 ]\l  %142 = phi \{ i8*, i32 \} [ %119, %118 ], [ %104, %103 ], [ %95, %94 ], [ %97,\l... %96 ]\l  %143 = icmp eq float* %141, null\l  br i1 %143, label %146, label %144\l|{<s0>T|<s1>F}}"];
	Node0x55a5561d5bd0:s0 -> Node0x55a5561d8ea0;
	Node0x55a5561d5bd0:s1 -> Node0x55a5561d8ef0;
	Node0x55a5561d8ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%144:\l144:                                              \l  %145 = bitcast float* %141 to i8*\l  tail call void @_ZdlPv(i8* nonnull %145) #7\l  br label %146\l}"];
	Node0x55a5561d8ef0 -> Node0x55a5561d8ea0;
	Node0x55a5561d8ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%146:\l146:                                              \l  %147 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 0\l  %148 = load float*, float** %147, align 8, !tbaa !8\l  %149 = icmp eq float* %148, null\l  br i1 %149, label %152, label %150\l|{<s0>T|<s1>F}}"];
	Node0x55a5561d8ea0:s0 -> Node0x55a5561d93e0;
	Node0x55a5561d8ea0:s1 -> Node0x55a5561d9430;
	Node0x55a5561d9430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%150:\l150:                                              \l  %151 = bitcast float* %148 to i8*\l  tail call void @_ZdlPv(i8* nonnull %151) #7\l  br label %152\l}"];
	Node0x55a5561d9430 -> Node0x55a5561d93e0;
	Node0x55a5561d93e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%152:\l152:                                              \l  resume \{ i8*, i32 \} %142\l}"];
}
