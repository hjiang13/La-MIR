; ModuleID = '../../Human_xBenchmarks_164/CPP_64/CPP_64.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_64/CPP_64.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@.str = private unnamed_addr constant [11 x i8] c"aeiouAEIOU\00", align 1

; Function Attrs: uwtable
define dso_local i32 @_Z12vowels_countNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nocapture readonly %0) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = bitcast %"class.std::__cxx11::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #3
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 2
  %5 = bitcast %"class.std::__cxx11::basic_string"* %2 to %union.anon**
  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !3
  %6 = bitcast %union.anon* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(10) %6, i8* noundef nonnull align 1 dereferenceable(10) getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i1 false) #3
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  store i64 10, i64* %7, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 2, i32 1, i64 2
  store i8 0, i8* %8, align 2, !tbaa !11
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !8
  %11 = icmp eq i64 %10, 0
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8, !tbaa !12
  br i1 %11, label %19, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 2, i32 1, i64 0
  %16 = load i8, i8* %15, align 8
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 2, i32 1, i64 1
  %18 = load i8, i8* %17, align 1
  br label %24

19:                                               ; preds = %42, %1
  %20 = phi i32 [ 0, %1 ], [ %46, %42 ]
  %21 = add i64 %10, -1
  %22 = getelementptr inbounds i8, i8* %13, i64 %21
  %23 = load i8, i8* %22, align 1, !tbaa !11
  switch i8 %23, label %51 [
    i8 121, label %49
    i8 89, label %49
  ]

24:                                               ; preds = %42, %14
  %25 = phi i64 [ 0, %14 ], [ %47, %42 ]
  %26 = phi i32 [ 0, %14 ], [ %46, %42 ]
  %27 = getelementptr inbounds i8, i8* %13, i64 %25
  %28 = load i8, i8* %27, align 1, !tbaa !11
  switch i8 %28, label %29 [
    i8 97, label %42
    i8 101, label %35
    i8 105, label %36
    i8 111, label %37
    i8 117, label %38
    i8 65, label %39
    i8 69, label %40
    i8 73, label %41
  ]

29:                                               ; preds = %24
  %30 = load i8, i8* %27, align 1, !tbaa !11
  %31 = icmp eq i8 %16, %30
  br i1 %31, label %42, label %32

32:                                               ; preds = %29
  %33 = icmp eq i8 %18, %30
  %34 = select i1 %33, i64 9, i64 10
  br label %42

35:                                               ; preds = %24
  br label %42

36:                                               ; preds = %24
  br label %42

37:                                               ; preds = %24
  br label %42

38:                                               ; preds = %24
  br label %42

39:                                               ; preds = %24
  br label %42

40:                                               ; preds = %24
  br label %42

41:                                               ; preds = %24
  br label %42

42:                                               ; preds = %32, %24, %41, %40, %39, %38, %37, %36, %35, %29
  %43 = phi i64 [ 8, %29 ], [ 0, %24 ], [ 1, %35 ], [ 2, %36 ], [ 3, %37 ], [ 4, %38 ], [ %34, %32 ], [ 5, %39 ], [ 6, %40 ], [ 7, %41 ]
  %44 = icmp ne i64 %43, 10
  %45 = zext i1 %44 to i32
  %46 = add nuw nsw i32 %26, %45
  %47 = add nuw nsw i64 %25, 1
  %48 = icmp eq i64 %47, %10
  br i1 %48, label %19, label %24, !llvm.loop !13

49:                                               ; preds = %19, %19
  %50 = add nuw nsw i32 %20, 1
  br label %51

51:                                               ; preds = %49, %19
  %52 = phi i32 [ %50, %49 ], [ %20, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #3
  ret i32 %52
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.mustprogress"}
