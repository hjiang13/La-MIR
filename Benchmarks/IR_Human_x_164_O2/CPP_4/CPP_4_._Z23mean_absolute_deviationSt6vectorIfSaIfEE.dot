digraph "CFG for '_Z23mean_absolute_deviationSt6vectorIfSaIfEE' function" {
	label="CFG for '_Z23mean_absolute_deviationSt6vectorIfSaIfEE' function";

	Node0x56334cfa73a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%1:\l  %2 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %3 = load float*, float** %2, align 8, !tbaa !3\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = load float*, float** %4, align 8, !tbaa !8\l  %6 = ptrtoint float* %3 to i64\l  %7 = ptrtoint float* %5 to i64\l  %8 = sub i64 %6, %7\l  %9 = ashr exact i64 %8, 2\l  %10 = icmp eq i64 %8, 0\l  br i1 %10, label %11, label %13\l|{<s0>T|<s1>F}}"];
	Node0x56334cfa73a0:s0 -> Node0x56334cfa8840;
	Node0x56334cfa73a0:s1 -> Node0x56334cfa8d60;
	Node0x56334cfa8840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%11:\l11:                                               \l  %12 = uitofp i64 %9 to float\l  br label %129\l}"];
	Node0x56334cfa8840 -> Node0x56334cfa8f10;
	Node0x56334cfa8d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%13:\l13:                                               \l  %14 = call i64 @llvm.umax.i64(i64 %9, i64 1)\l  %15 = add i64 %14, -1\l  %16 = and i64 %14, 7\l  %17 = icmp ult i64 %15, 7\l  br i1 %17, label %58, label %18\l|{<s0>T|<s1>F}}"];
	Node0x56334cfa8d60:s0 -> Node0x56334cfa9390;
	Node0x56334cfa8d60:s1 -> Node0x56334cfa93e0;
	Node0x56334cfa93e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%18:\l18:                                               \l  %19 = and i64 %14, -8\l  br label %20\l}"];
	Node0x56334cfa93e0 -> Node0x56334cfa95e0;
	Node0x56334cfa95e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%20:\l20:                                               \l  %21 = phi i64 [ 0, %18 ], [ %55, %20 ]\l  %22 = phi float [ 0.000000e+00, %18 ], [ %54, %20 ]\l  %23 = phi i64 [ %19, %18 ], [ %56, %20 ]\l  %24 = getelementptr inbounds float, float* %5, i64 %21\l  %25 = load float, float* %24, align 4, !tbaa !9\l  %26 = fadd float %22, %25\l  %27 = or i64 %21, 1\l  %28 = getelementptr inbounds float, float* %5, i64 %27\l  %29 = load float, float* %28, align 4, !tbaa !9\l  %30 = fadd float %26, %29\l  %31 = or i64 %21, 2\l  %32 = getelementptr inbounds float, float* %5, i64 %31\l  %33 = load float, float* %32, align 4, !tbaa !9\l  %34 = fadd float %30, %33\l  %35 = or i64 %21, 3\l  %36 = getelementptr inbounds float, float* %5, i64 %35\l  %37 = load float, float* %36, align 4, !tbaa !9\l  %38 = fadd float %34, %37\l  %39 = or i64 %21, 4\l  %40 = getelementptr inbounds float, float* %5, i64 %39\l  %41 = load float, float* %40, align 4, !tbaa !9\l  %42 = fadd float %38, %41\l  %43 = or i64 %21, 5\l  %44 = getelementptr inbounds float, float* %5, i64 %43\l  %45 = load float, float* %44, align 4, !tbaa !9\l  %46 = fadd float %42, %45\l  %47 = or i64 %21, 6\l  %48 = getelementptr inbounds float, float* %5, i64 %47\l  %49 = load float, float* %48, align 4, !tbaa !9\l  %50 = fadd float %46, %49\l  %51 = or i64 %21, 7\l  %52 = getelementptr inbounds float, float* %5, i64 %51\l  %53 = load float, float* %52, align 4, !tbaa !9\l  %54 = fadd float %50, %53\l  %55 = add nuw nsw i64 %21, 8\l  %56 = add i64 %23, -8\l  %57 = icmp eq i64 %56, 0\l  br i1 %57, label %58, label %20, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x56334cfa95e0:s0 -> Node0x56334cfa9390;
	Node0x56334cfa95e0:s1 -> Node0x56334cfa95e0;
	Node0x56334cfa9390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%58:\l58:                                               \l  %59 = phi float [ undef, %13 ], [ %54, %20 ]\l  %60 = phi i64 [ 0, %13 ], [ %55, %20 ]\l  %61 = phi float [ 0.000000e+00, %13 ], [ %54, %20 ]\l  %62 = icmp eq i64 %16, 0\l  br i1 %62, label %73, label %63\l|{<s0>T|<s1>F}}"];
	Node0x56334cfa9390:s0 -> Node0x56334cfac890;
	Node0x56334cfa9390:s1 -> Node0x56334cfac8e0;
	Node0x56334cfac8e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = phi i64 [ %70, %63 ], [ %60, %58 ]\l  %65 = phi float [ %69, %63 ], [ %61, %58 ]\l  %66 = phi i64 [ %71, %63 ], [ %16, %58 ]\l  %67 = getelementptr inbounds float, float* %5, i64 %64\l  %68 = load float, float* %67, align 4, !tbaa !9\l  %69 = fadd float %65, %68\l  %70 = add nuw nsw i64 %64, 1\l  %71 = add i64 %66, -1\l  %72 = icmp eq i64 %71, 0\l  br i1 %72, label %73, label %63, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x56334cfac8e0:s0 -> Node0x56334cfac890;
	Node0x56334cfac8e0:s1 -> Node0x56334cfac8e0;
	Node0x56334cfac890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%73:\l73:                                               \l  %74 = phi float [ %59, %58 ], [ %69, %63 ]\l  %75 = uitofp i64 %9 to float\l  %76 = fdiv float %74, %75\l  br i1 %10, label %129, label %77\l|{<s0>T|<s1>F}}"];
	Node0x56334cfac890:s0 -> Node0x56334cfa8f10;
	Node0x56334cfac890:s1 -> Node0x56334cfad700;
	Node0x56334cfad700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%77:\l77:                                               \l  %78 = and i64 %14, 3\l  %79 = icmp ult i64 %15, 3\l  br i1 %79, label %112, label %80\l|{<s0>T|<s1>F}}"];
	Node0x56334cfad700:s0 -> Node0x56334cfad920;
	Node0x56334cfad700:s1 -> Node0x56334cfad970;
	Node0x56334cfad970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%80:\l80:                                               \l  %81 = and i64 %14, -4\l  br label %82\l}"];
	Node0x56334cfad970 -> Node0x56334cfadb00;
	Node0x56334cfadb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%82:\l82:                                               \l  %83 = phi i64 [ 0, %80 ], [ %109, %82 ]\l  %84 = phi float [ 0.000000e+00, %80 ], [ %108, %82 ]\l  %85 = phi i64 [ %81, %80 ], [ %110, %82 ]\l  %86 = getelementptr inbounds float, float* %5, i64 %83\l  %87 = load float, float* %86, align 4, !tbaa !9\l  %88 = fsub float %87, %76\l  %89 = tail call float @llvm.fabs.f32(float %88) #2\l  %90 = fadd float %84, %89\l  %91 = or i64 %83, 1\l  %92 = getelementptr inbounds float, float* %5, i64 %91\l  %93 = load float, float* %92, align 4, !tbaa !9\l  %94 = fsub float %93, %76\l  %95 = tail call float @llvm.fabs.f32(float %94) #2\l  %96 = fadd float %90, %95\l  %97 = or i64 %83, 2\l  %98 = getelementptr inbounds float, float* %5, i64 %97\l  %99 = load float, float* %98, align 4, !tbaa !9\l  %100 = fsub float %99, %76\l  %101 = tail call float @llvm.fabs.f32(float %100) #2\l  %102 = fadd float %96, %101\l  %103 = or i64 %83, 3\l  %104 = getelementptr inbounds float, float* %5, i64 %103\l  %105 = load float, float* %104, align 4, !tbaa !9\l  %106 = fsub float %105, %76\l  %107 = tail call float @llvm.fabs.f32(float %106) #2\l  %108 = fadd float %102, %107\l  %109 = add nuw nsw i64 %83, 4\l  %110 = add i64 %85, -4\l  %111 = icmp eq i64 %110, 0\l  br i1 %111, label %112, label %82, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x56334cfadb00:s0 -> Node0x56334cfad920;
	Node0x56334cfadb00:s1 -> Node0x56334cfadb00;
	Node0x56334cfad920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%112:\l112:                                              \l  %113 = phi float [ undef, %77 ], [ %108, %82 ]\l  %114 = phi i64 [ 0, %77 ], [ %109, %82 ]\l  %115 = phi float [ 0.000000e+00, %77 ], [ %108, %82 ]\l  %116 = icmp eq i64 %78, 0\l  br i1 %116, label %129, label %117\l|{<s0>T|<s1>F}}"];
	Node0x56334cfad920:s0 -> Node0x56334cfa8f10;
	Node0x56334cfad920:s1 -> Node0x56334cfaf3f0;
	Node0x56334cfaf3f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%117:\l117:                                              \l  %118 = phi i64 [ %126, %117 ], [ %114, %112 ]\l  %119 = phi float [ %125, %117 ], [ %115, %112 ]\l  %120 = phi i64 [ %127, %117 ], [ %78, %112 ]\l  %121 = getelementptr inbounds float, float* %5, i64 %118\l  %122 = load float, float* %121, align 4, !tbaa !9\l  %123 = fsub float %122, %76\l  %124 = tail call float @llvm.fabs.f32(float %123) #2\l  %125 = fadd float %119, %124\l  %126 = add nuw nsw i64 %118, 1\l  %127 = add i64 %120, -1\l  %128 = icmp eq i64 %127, 0\l  br i1 %128, label %129, label %117, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x56334cfaf3f0:s0 -> Node0x56334cfa8f10;
	Node0x56334cfaf3f0:s1 -> Node0x56334cfaf3f0;
	Node0x56334cfa8f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%129:\l129:                                              \l  %130 = phi float [ %75, %73 ], [ %12, %11 ], [ %75, %117 ], [ %75, %112 ]\l  %131 = phi float [ 0.000000e+00, %73 ], [ 0.000000e+00, %11 ], [ %113, %112\l... ], [ %125, %117 ]\l  %132 = fdiv float %131, %130\l  ret float %132\l}"];
}
