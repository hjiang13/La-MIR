; ModuleID = '../../Human_xBenchmarks_164/CPP_137/CPP_137.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_137/CPP_137.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.boost::any" = type { %"class.boost::any::placeholder"* }
%"class.boost::any::placeholder" = type { i32 (...)** }
%"class.boost::bad_any_cast" = type { %"class.std::bad_cast" }
%"class.std::bad_cast" = type { %"class.std::exception" }
%"class.std::exception" = type { i32 (...)** }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.boost::any::holder.0" = type <{ %"class.boost::any::placeholder", i32, [4 x i8] }>
%"class.boost::any::holder.1" = type { %"class.boost::any::placeholder", double }
%"class.boost::any::holder" = type { %"class.boost::any::placeholder", %"class.std::__cxx11::basic_string" }
%"struct.boost::exception_detail::error_info_injector" = type <{ %"class.boost::bad_any_cast", %"class.boost::exception.base", [4 x i8] }>
%"class.boost::exception.base" = type <{ i32 (...)**, %"class.boost::exception_detail::refcount_ptr", i8*, i8*, i32 }>
%"class.boost::exception_detail::refcount_ptr" = type { %"struct.boost::exception_detail::error_info_container"* }
%"struct.boost::exception_detail::error_info_container" = type { i32 (...)** }
%"class.boost::exception" = type <{ i32 (...)**, %"class.boost::exception_detail::refcount_ptr", i8*, i8*, i32, [4 x i8] }>
%"class.boost::exception_detail::clone_impl" = type { %"struct.boost::exception_detail::error_info_injector.base", %"class.boost::exception_detail::clone_base" }
%"struct.boost::exception_detail::error_info_injector.base" = type <{ %"class.boost::bad_any_cast", %"class.boost::exception.base" }>
%"class.boost::exception_detail::clone_base" = type { i32 (...)** }

$_ZN5boost8any_castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_RNS_3anyE = comdat any

$__clang_call_terminate = comdat any

$_ZN5boost15throw_exceptionINS_12bad_any_castEEEvRKT_ = comdat any

$_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev = comdat any

$_ZN5boost16exception_detail19error_info_injectorINS_12bad_any_castEED2Ev = comdat any

$_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_ = comdat any

$_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED0Ev = comdat any

$_ZNK5boost12bad_any_cast4whatEv = comdat any

$_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE5cloneEv = comdat any

$_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE7rethrowEv = comdat any

$_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev = comdat any

$_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED0Ev = comdat any

$_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE5cloneEv = comdat any

$_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE7rethrowEv = comdat any

$_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev = comdat any

$_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED0Ev = comdat any

$_ZN5boost16exception_detail10clone_baseD2Ev = comdat any

$_ZN5boost16exception_detail10clone_baseD0Ev = comdat any

$_ZN5boost16exception_detail19error_info_injectorINS_12bad_any_castEED0Ev = comdat any

$_ZThn8_N5boost16exception_detail19error_info_injectorINS_12bad_any_castEED1Ev = comdat any

$_ZThn8_N5boost16exception_detail19error_info_injectorINS_12bad_any_castEED0Ev = comdat any

$_ZN5boost12bad_any_castD0Ev = comdat any

$_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEC1ERKS5_NS5_9clone_tagE = comdat any

$_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEC1ERKS5_ = comdat any

$_ZN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev = comdat any

$_ZN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED0Ev = comdat any

$_ZNK5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4typeEv = comdat any

$_ZNK5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5cloneEv = comdat any

$_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZTINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE = comdat any

$_ZTSN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE = comdat any

$_ZTSN5boost12bad_any_castE = comdat any

$_ZTIN5boost12bad_any_castE = comdat any

$_ZTSN5boost9exceptionE = comdat any

$_ZTIN5boost9exceptionE = comdat any

$_ZTIN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE = comdat any

$_ZTSN5boost16exception_detail10clone_baseE = comdat any

$_ZTIN5boost16exception_detail10clone_baseE = comdat any

$_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE = comdat any

$_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE = comdat any

$_ZTVN5boost16exception_detail10clone_baseE = comdat any

$_ZTVN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE = comdat any

$_ZTVN5boost12bad_any_castE = comdat any

$_ZTVN5boost9exceptionE = comdat any

$_ZTVN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE = comdat any

$_ZTSN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE = comdat any

$_ZTSN5boost3any11placeholderE = comdat any

$_ZTIN5boost3any11placeholderE = comdat any

$_ZTIN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE = comdat any

@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = linkonce_odr dso_local constant [53 x i8] c"NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\00", comdat, align 1
@_ZTINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, i32 0, i32 0) }, comdat, align 8
@_ZTIi = external dso_local local_unnamed_addr constant i8*
@_ZTId = external dso_local local_unnamed_addr constant i8*
@_ZTIv = external dso_local local_unnamed_addr constant i8*
@.str.3 = private unnamed_addr constant [55 x i8] c"%s: __pos (which is %zu) > this->size() (which is %zu)\00", align 1
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external dso_local global i8*
@_ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE = linkonce_odr dso_local constant [87 x i8] c"N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE\00", comdat, align 1
@_ZTSN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE = linkonce_odr dso_local constant [68 x i8] c"N5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE\00", comdat, align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTSN5boost12bad_any_castE = linkonce_odr dso_local constant [23 x i8] c"N5boost12bad_any_castE\00", comdat, align 1
@_ZTISt8bad_cast = external dso_local constant i8*
@_ZTIN5boost12bad_any_castE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZTSN5boost12bad_any_castE, i32 0, i32 0), i8* bitcast (i8** @_ZTISt8bad_cast to i8*) }, comdat, align 8
@_ZTSN5boost9exceptionE = linkonce_odr dso_local constant [19 x i8] c"N5boost9exceptionE\00", comdat, align 1
@_ZTIN5boost9exceptionE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZTSN5boost9exceptionE, i32 0, i32 0) }, comdat, align 8
@_ZTIN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE = linkonce_odr dso_local constant { i8*, i8*, i32, i32, i8*, i64, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @_ZTSN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE, i32 0, i32 0), i32 0, i32 2, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5boost12bad_any_castE to i8*), i64 2, i8* bitcast ({ i8*, i8* }* @_ZTIN5boost9exceptionE to i8*), i64 2050 }, comdat, align 8
@_ZTSN5boost16exception_detail10clone_baseE = linkonce_odr dso_local constant [39 x i8] c"N5boost16exception_detail10clone_baseE\00", comdat, align 1
@_ZTIN5boost16exception_detail10clone_baseE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @_ZTSN5boost16exception_detail10clone_baseE, i32 0, i32 0) }, comdat, align 8
@_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE = linkonce_odr dso_local constant { i8*, i8*, i32, i32, i8*, i64, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @_ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i32 0, i32 0), i32 0, i32 2, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE to i8*), i64 2, i8* bitcast ({ i8*, i8* }* @_ZTIN5boost16exception_detail10clone_baseE to i8*), i64 -6141 }, comdat, align 8
@_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE = linkonce_odr dso_local unnamed_addr constant { [8 x i8*], [4 x i8*], [9 x i8*] } { [8 x i8*] [i8* inttoptr (i64 48 to i8*), i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED0Ev to i8*), i8* bitcast (i8* (%"class.boost::bad_any_cast"*)* @_ZNK5boost12bad_any_cast4whatEv to i8*), i8* bitcast (%"class.boost::exception_detail::clone_base"* (%"class.boost::exception_detail::clone_impl"*)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE5cloneEv to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE7rethrowEv to i8*)], [4 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED0Ev to i8*)], [9 x i8*] [i8* inttoptr (i64 -48 to i8*), i8* inttoptr (i64 -48 to i8*), i8* inttoptr (i64 -48 to i8*), i8* inttoptr (i64 -48 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE to i8*), i8* bitcast (%"class.boost::exception_detail::clone_base"* (%"class.boost::exception_detail::clone_impl"*)* @_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE5cloneEv to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE7rethrowEv to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED0Ev to i8*)] }, comdat, align 8
@_ZTVN5boost16exception_detail10clone_baseE = linkonce_odr dso_local unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN5boost16exception_detail10clone_baseE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_base"*)* @_ZN5boost16exception_detail10clone_baseD2Ev to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_base"*)* @_ZN5boost16exception_detail10clone_baseD0Ev to i8*)] }, comdat, align 8
@_ZTVN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*], [4 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE to i8*), i8* bitcast (void (%"struct.boost::exception_detail::error_info_injector"*)* @_ZN5boost16exception_detail19error_info_injectorINS_12bad_any_castEED2Ev to i8*), i8* bitcast (void (%"struct.boost::exception_detail::error_info_injector"*)* @_ZN5boost16exception_detail19error_info_injectorINS_12bad_any_castEED0Ev to i8*), i8* bitcast (i8* (%"class.boost::bad_any_cast"*)* @_ZNK5boost12bad_any_cast4whatEv to i8*)], [4 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE to i8*), i8* bitcast (void (%"struct.boost::exception_detail::error_info_injector"*)* @_ZThn8_N5boost16exception_detail19error_info_injectorINS_12bad_any_castEED1Ev to i8*), i8* bitcast (void (%"struct.boost::exception_detail::error_info_injector"*)* @_ZThn8_N5boost16exception_detail19error_info_injectorINS_12bad_any_castEED0Ev to i8*)] }, comdat, align 8
@_ZTVN5boost12bad_any_castE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5boost12bad_any_castE to i8*), i8* bitcast (void (%"class.std::bad_cast"*)* @_ZNSt8bad_castD2Ev to i8*), i8* bitcast (void (%"class.boost::bad_any_cast"*)* @_ZN5boost12bad_any_castD0Ev to i8*), i8* bitcast (i8* (%"class.boost::bad_any_cast"*)* @_ZNK5boost12bad_any_cast4whatEv to i8*)] }, comdat, align 8
@_ZTVN5boost9exceptionE = linkonce_odr dso_local unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN5boost9exceptionE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [61 x i8] c"boost::bad_any_cast: failed conversion using boost::any_cast\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"basic_string::substr\00", align 1
@_ZTVN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE = linkonce_odr dso_local unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE to i8*), i8* bitcast (void (%"class.boost::any::holder"*)* @_ZN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev to i8*), i8* bitcast (void (%"class.boost::any::holder"*)* @_ZN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED0Ev to i8*), i8* bitcast (%"class.std::type_info"* (%"class.boost::any::holder"*)* @_ZNK5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4typeEv to i8*), i8* bitcast (%"class.boost::any::placeholder"* (%"class.boost::any::holder"*)* @_ZNK5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5cloneEv to i8*)] }, comdat, align 8
@_ZTSN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE = linkonce_odr dso_local constant [74 x i8] c"N5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE\00", comdat, align 1
@_ZTSN5boost3any11placeholderE = linkonce_odr dso_local constant [26 x i8] c"N5boost3any11placeholderE\00", comdat, align 1
@_ZTIN5boost3any11placeholderE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTSN5boost3any11placeholderE, i32 0, i32 0) }, comdat, align 8
@_ZTIN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @_ZTSN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN5boost3any11placeholderE to i8*) }, comdat, align 8

; Function Attrs: uwtable
define dso_local void @_Z11compare_oneN5boost3anyES0_(%"class.boost::any"* noalias nocapture sret(%"class.boost::any") align 8 %0, %"class.boost::any"* %1, %"class.boost::any"* %2) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.boost::bad_any_cast", align 8
  %5 = alloca %"class.boost::bad_any_cast", align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.boost::bad_any_cast", align 8
  %9 = alloca %"class.boost::bad_any_cast", align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.std::__cxx11::basic_string", align 8
  %13 = alloca %"class.std::__cxx11::basic_string", align 8
  %14 = alloca %"class.std::__cxx11::basic_string", align 8
  %15 = alloca %"class.std::__cxx11::basic_string", align 8
  %16 = alloca %"class.std::__cxx11::basic_string", align 8
  %17 = alloca %"class.std::__cxx11::basic_string", align 8
  %18 = alloca %"class.std::__cxx11::basic_string", align 8
  %19 = alloca %"class.std::__cxx11::basic_string", align 8
  %20 = alloca %"class.std::__cxx11::basic_string", align 8
  %21 = alloca %"class.std::__cxx11::basic_string", align 8
  %22 = alloca %"class.std::__cxx11::basic_string", align 8
  %23 = alloca %"class.std::__cxx11::basic_string", align 8
  %24 = alloca %"class.std::__cxx11::basic_string", align 8
  %25 = getelementptr inbounds %"class.boost::any", %"class.boost::any"* %1, i64 0, i32 0
  %26 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %25, align 8, !tbaa !3
  %27 = icmp eq %"class.boost::any::placeholder"* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %3
  %29 = bitcast %"class.boost::any::placeholder"* %26 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %30 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %29, align 8, !tbaa !8
  %31 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %30, i64 2
  %32 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %31, align 8
  %33 = tail call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %32(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %26) #20
  br label %34

34:                                               ; preds = %3, %28
  %35 = phi %"class.std::type_info"* [ %33, %28 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %3 ]
  %36 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %35, i64 0, i32 1
  %37 = load i8*, i8** %36, align 8, !tbaa !10
  %38 = icmp eq i8* %37, getelementptr inbounds ([53 x i8], [53 x i8]* @_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, i64 0, i64 0)
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = load i8, i8* %37, align 1, !tbaa !12
  %41 = icmp eq i8 %40, 42
  br i1 %41, label %376, label %42

42:                                               ; preds = %39
  %43 = tail call i32 @strcmp(i8* noundef nonnull %37, i8* noundef nonnull dereferenceable(53) getelementptr inbounds ([53 x i8], [53 x i8]* @_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, i64 0, i64 0)) #20
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %376

45:                                               ; preds = %34, %42
  %46 = bitcast %"class.std::__cxx11::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #20
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 2
  %48 = bitcast %"class.std::__cxx11::basic_string"* %12 to %union.anon**
  store %union.anon* %47, %union.anon** %48, align 8, !tbaa !13
  %49 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 1
  store i64 0, i64* %49, align 8, !tbaa !15
  %50 = bitcast %union.anon* %47 to i8*
  store i8 0, i8* %50, align 8, !tbaa !12
  %51 = bitcast %"class.std::__cxx11::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #20
  invoke void @_ZN5boost8any_castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_RNS_3anyE(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %13, %"class.boost::any"* nonnull align 8 dereferenceable(8) %1)
          to label %52 unwind label %188

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8, !tbaa !18
  %56 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 2
  %57 = bitcast %union.anon* %56 to i8*
  %58 = icmp eq i8* %55, %57
  br i1 %58, label %59, label %74

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 1
  %61 = load i64, i64* %60, align 8, !tbaa !15
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %69, label %63

63:                                               ; preds = %59
  %64 = load i8*, i8** %53, align 8, !tbaa !18
  %65 = icmp eq i64 %61, 1
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  %67 = load i8, i8* %55, align 1, !tbaa !12
  store i8 %67, i8* %64, align 1, !tbaa !12
  br label %69

68:                                               ; preds = %63
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %64, i8* align 1 %55, i64 %61, i1 false) #20
  br label %69

69:                                               ; preds = %68, %66, %59
  %70 = load i64, i64* %60, align 8, !tbaa !15
  store i64 %70, i64* %49, align 8, !tbaa !15
  %71 = load i8*, i8** %53, align 8, !tbaa !18
  %72 = getelementptr inbounds i8, i8* %71, i64 %70
  store i8 0, i8* %72, align 1, !tbaa !12
  %73 = load i8*, i8** %54, align 8, !tbaa !18
  br label %89

74:                                               ; preds = %52
  %75 = load i8*, i8** %53, align 8, !tbaa !18
  %76 = icmp eq i8* %75, %50
  %77 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 2, i32 0
  %78 = load i64, i64* %77, align 8
  store i8* %55, i8** %53, align 8, !tbaa !18
  %79 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 1
  %80 = bitcast i64* %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8, !tbaa !12
  %82 = bitcast i64* %49 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %82, align 8, !tbaa !12
  %83 = icmp eq i8* %75, null
  %84 = or i1 %76, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %74
  store i8* %75, i8** %54, align 8, !tbaa !18
  %86 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 2, i32 0
  store i64 %78, i64* %86, align 8, !tbaa !12
  br label %89

87:                                               ; preds = %74
  %88 = bitcast %"class.std::__cxx11::basic_string"* %13 to %union.anon**
  store %union.anon* %56, %union.anon** %88, align 8, !tbaa !18
  br label %89

89:                                               ; preds = %69, %85, %87
  %90 = phi i8* [ %73, %69 ], [ %75, %85 ], [ %57, %87 ]
  %91 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 1
  store i64 0, i64* %91, align 8, !tbaa !15
  store i8 0, i8* %90, align 1, !tbaa !12
  %92 = load i8*, i8** %54, align 8, !tbaa !18
  %93 = icmp eq i8* %92, %57
  br i1 %93, label %95, label %94

94:                                               ; preds = %89
  call void @_ZdlPv(i8* %92) #20
  br label %95

95:                                               ; preds = %89, %94
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #20
  %96 = load i8*, i8** %53, align 8, !tbaa !18
  %97 = load i64, i64* %49, align 8, !tbaa !15
  %98 = getelementptr inbounds i8, i8* %96, i64 %97
  %99 = ptrtoint i8* %98 to i64
  %100 = icmp sgt i64 %97, 3
  br i1 %100, label %101, label %124

101:                                              ; preds = %95
  %102 = lshr i64 %97, 2
  br label %103

103:                                              ; preds = %120, %101
  %104 = phi i64 [ %102, %101 ], [ %122, %120 ]
  %105 = phi i8* [ %96, %101 ], [ %121, %120 ]
  %106 = load i8, i8* %105, align 1, !tbaa !12
  %107 = icmp eq i8 %106, 44
  br i1 %107, label %149, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds i8, i8* %105, i64 1
  %110 = load i8, i8* %109, align 1, !tbaa !12
  %111 = icmp eq i8 %110, 44
  br i1 %111, label %147, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds i8, i8* %105, i64 2
  %114 = load i8, i8* %113, align 1, !tbaa !12
  %115 = icmp eq i8 %114, 44
  br i1 %115, label %145, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds i8, i8* %105, i64 3
  %118 = load i8, i8* %117, align 1, !tbaa !12
  %119 = icmp eq i8 %118, 44
  br i1 %119, label %143, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds i8, i8* %105, i64 4
  %122 = add nsw i64 %104, -1
  %123 = icmp sgt i64 %104, 1
  br i1 %123, label %103, label %124, !llvm.loop !19

124:                                              ; preds = %120, %95
  %125 = phi i8* [ %96, %95 ], [ %121, %120 ]
  %126 = ptrtoint i8* %125 to i64
  %127 = sub i64 %99, %126
  switch i64 %127, label %362 [
    i64 3, label %128
    i64 2, label %133
    i64 1, label %139
  ]

128:                                              ; preds = %124
  %129 = load i8, i8* %125, align 1, !tbaa !12
  %130 = icmp eq i8 %129, 44
  br i1 %130, label %149, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds i8, i8* %125, i64 1
  br label %133

133:                                              ; preds = %124, %131
  %134 = phi i8* [ %132, %131 ], [ %125, %124 ]
  %135 = load i8, i8* %134, align 1, !tbaa !12
  %136 = icmp eq i8 %135, 44
  br i1 %136, label %149, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds i8, i8* %134, i64 1
  br label %139

139:                                              ; preds = %124, %137
  %140 = phi i8* [ %138, %137 ], [ %125, %124 ]
  %141 = load i8, i8* %140, align 1, !tbaa !12
  %142 = icmp eq i8 %141, 44
  br i1 %142, label %149, label %362

143:                                              ; preds = %116
  %144 = getelementptr inbounds i8, i8* %105, i64 3
  br label %149

145:                                              ; preds = %112
  %146 = getelementptr inbounds i8, i8* %105, i64 2
  br label %149

147:                                              ; preds = %108
  %148 = getelementptr inbounds i8, i8* %105, i64 1
  br label %149

149:                                              ; preds = %103, %143, %145, %147, %139, %133, %128
  %150 = phi i8* [ %125, %128 ], [ %134, %133 ], [ %140, %139 ], [ %144, %143 ], [ %146, %145 ], [ %148, %147 ], [ %105, %103 ]
  %151 = icmp eq i8* %150, %98
  br i1 %151, label %362, label %152

152:                                              ; preds = %149
  %153 = bitcast %"class.std::__cxx11::basic_string"* %14 to i8*
  %154 = bitcast %"class.std::__cxx11::basic_string"* %15 to i8*
  %155 = bitcast %"class.std::__cxx11::basic_string"* %16 to i8*
  %156 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %16, i64 0, i32 2
  %157 = bitcast %"class.std::__cxx11::basic_string"* %16 to %union.anon**
  %158 = bitcast %union.anon* %156 to i8*
  %159 = bitcast i64* %11 to i8*
  %160 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %16, i64 0, i32 0, i32 0
  %161 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %16, i64 0, i32 2, i32 0
  %162 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %16, i64 0, i32 1
  %163 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 2
  %164 = bitcast %"class.std::__cxx11::basic_string"* %15 to %union.anon**
  %165 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 0, i32 0
  %166 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 2, i32 0
  %167 = bitcast %union.anon* %163 to i8*
  %168 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 1
  %169 = bitcast %"class.std::__cxx11::basic_string"* %17 to i8*
  %170 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %17, i64 0, i32 2
  %171 = bitcast %"class.std::__cxx11::basic_string"* %17 to %union.anon**
  %172 = bitcast %union.anon* %170 to i8*
  %173 = bitcast i64* %10 to i8*
  %174 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %17, i64 0, i32 0, i32 0
  %175 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %17, i64 0, i32 2, i32 0
  %176 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %17, i64 0, i32 1
  %177 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i64 0, i32 2
  %178 = bitcast %"class.std::__cxx11::basic_string"* %14 to %union.anon**
  %179 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i64 0, i32 0, i32 0
  %180 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i64 0, i32 2, i32 0
  %181 = bitcast %union.anon* %177 to i8*
  %182 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i64 0, i32 1
  %183 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 2, i32 0
  %184 = icmp eq i64 %97, 0
  br i1 %184, label %362, label %185

185:                                              ; preds = %152
  %186 = bitcast i64* %182 to <2 x i64>*
  %187 = bitcast i64* %49 to <2 x i64>*
  br label %190

188:                                              ; preds = %45
  %189 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #20
  br label %369

190:                                              ; preds = %185, %357
  %191 = phi i64 [ %359, %357 ], [ %97, %185 ]
  %192 = phi i8* [ %361, %357 ], [ %96, %185 ]
  %193 = phi i64 [ %358, %357 ], [ 0, %185 ]
  %194 = getelementptr inbounds i8, i8* %192, i64 %193
  %195 = load i8, i8* %194, align 1, !tbaa !12
  %196 = icmp eq i8 %195, 44
  br i1 %196, label %199, label %197

197:                                              ; preds = %190
  %198 = add nuw i64 %193, 1
  br label %357

199:                                              ; preds = %190
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %153) #20
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %154) #20
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %155) #20
  call void @llvm.experimental.noalias.scope.decl(metadata !21)
  store %union.anon* %156, %union.anon** %157, align 8, !tbaa !13, !alias.scope !21
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #20, !noalias !21
  store i64 %193, i64* %11, align 8, !tbaa !24, !noalias !21
  %200 = icmp ugt i64 %193, 15
  br i1 %200, label %201, label %205

201:                                              ; preds = %199
  %202 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %16, i64* nonnull align 8 dereferenceable(8) %11, i64 0)
          to label %203 unwind label %332

203:                                              ; preds = %201
  store i8* %202, i8** %160, align 8, !tbaa !18, !alias.scope !21
  %204 = load i64, i64* %11, align 8, !tbaa !24, !noalias !21
  store i64 %204, i64* %161, align 8, !tbaa !12, !alias.scope !21
  br label %205

205:                                              ; preds = %203, %199
  %206 = phi i8* [ %202, %203 ], [ %158, %199 ]
  %207 = trunc i64 %193 to i32
  switch i32 %207, label %210 [
    i32 1, label %208
    i32 0, label %211
  ]

208:                                              ; preds = %205
  %209 = load i8, i8* %192, align 1, !tbaa !12
  store i8 %209, i8* %206, align 1, !tbaa !12
  br label %211

210:                                              ; preds = %205
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %206, i8* nonnull align 1 %192, i64 %193, i1 false) #20
  br label %211

211:                                              ; preds = %210, %208, %205
  %212 = load i64, i64* %11, align 8, !tbaa !24, !noalias !21
  store i64 %212, i64* %162, align 8, !tbaa !15, !alias.scope !21
  %213 = load i8*, i8** %160, align 8, !tbaa !18, !alias.scope !21
  %214 = getelementptr inbounds i8, i8* %213, i64 %212
  store i8 0, i8* %214, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #20, !noalias !21
  call void @llvm.experimental.noalias.scope.decl(metadata !25)
  %215 = load i64, i64* %162, align 8, !tbaa !15, !noalias !25
  %216 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %16, i64 %215, i64 0, i64 1, i8 signext 46)
          to label %217 unwind label %334

217:                                              ; preds = %211
  store %union.anon* %163, %union.anon** %164, align 8, !tbaa !13, !alias.scope !25
  %218 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %216, i64 0, i32 0, i32 0
  %219 = load i8*, i8** %218, align 8, !tbaa !18
  %220 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %216, i64 0, i32 2
  %221 = bitcast %union.anon* %220 to i8*
  %222 = icmp eq i8* %219, %221
  br i1 %222, label %223, label %224

223:                                              ; preds = %217
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %167, i8* noundef nonnull align 8 dereferenceable(16) %219, i64 16, i1 false) #20
  br label %227

224:                                              ; preds = %217
  store i8* %219, i8** %165, align 8, !tbaa !18, !alias.scope !25
  %225 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %216, i64 0, i32 2, i32 0
  %226 = load i64, i64* %225, align 8, !tbaa !12
  store i64 %226, i64* %166, align 8, !tbaa !12, !alias.scope !25
  br label %227

227:                                              ; preds = %224, %223
  %228 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %216, i64 0, i32 1
  %229 = load i64, i64* %228, align 8, !tbaa !15
  store i64 %229, i64* %168, align 8, !tbaa !15, !alias.scope !25
  %230 = bitcast %"class.std::__cxx11::basic_string"* %216 to %union.anon**
  store %union.anon* %220, %union.anon** %230, align 8, !tbaa !18
  store i64 0, i64* %228, align 8, !tbaa !15
  store i8 0, i8* %221, align 8, !tbaa !12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %169) #20
  %231 = add nuw i64 %193, 1
  call void @llvm.experimental.noalias.scope.decl(metadata !28)
  %232 = load i64, i64* %49, align 8, !tbaa !15, !noalias !28
  %233 = icmp ugt i64 %232, %193
  br i1 %233, label %237, label %234

234:                                              ; preds = %227
  %235 = and i64 %231, 4294967295
  invoke void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 %235, i64 %232) #21
          to label %236 unwind label %338

236:                                              ; preds = %234
  unreachable

237:                                              ; preds = %227
  store %union.anon* %170, %union.anon** %171, align 8, !tbaa !13, !alias.scope !28
  %238 = load i8*, i8** %53, align 8, !tbaa !18, !noalias !28
  %239 = getelementptr inbounds i8, i8* %238, i64 %231
  %240 = sub i64 %232, %231
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #20, !noalias !28
  store i64 %240, i64* %10, align 8, !tbaa !24, !noalias !28
  %241 = icmp ugt i64 %240, 15
  br i1 %241, label %242, label %246

242:                                              ; preds = %237
  %243 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %17, i64* nonnull align 8 dereferenceable(8) %10, i64 0)
          to label %244 unwind label %336

244:                                              ; preds = %242
  store i8* %243, i8** %174, align 8, !tbaa !18, !alias.scope !28
  %245 = load i64, i64* %10, align 8, !tbaa !24, !noalias !28
  store i64 %245, i64* %175, align 8, !tbaa !12, !alias.scope !28
  br label %246

246:                                              ; preds = %244, %237
  %247 = phi i8* [ %243, %244 ], [ %172, %237 ]
  switch i64 %240, label %250 [
    i64 1, label %248
    i64 0, label %251
  ]

248:                                              ; preds = %246
  %249 = load i8, i8* %239, align 1, !tbaa !12
  store i8 %249, i8* %247, align 1, !tbaa !12
  br label %251

250:                                              ; preds = %246
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %247, i8* nonnull align 1 %239, i64 %240, i1 false) #20
  br label %251

251:                                              ; preds = %250, %248, %246
  %252 = load i64, i64* %10, align 8, !tbaa !24, !noalias !28
  store i64 %252, i64* %176, align 8, !tbaa !15, !alias.scope !28
  %253 = load i8*, i8** %174, align 8, !tbaa !18, !alias.scope !28
  %254 = getelementptr inbounds i8, i8* %253, i64 %252
  store i8 0, i8* %254, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #20, !noalias !28
  call void @llvm.experimental.noalias.scope.decl(metadata !31)
  %255 = load i64, i64* %168, align 8, !tbaa !15, !noalias !31
  %256 = load i64, i64* %176, align 8, !tbaa !15, !noalias !31
  %257 = add i64 %256, %255
  %258 = load i8*, i8** %165, align 8, !tbaa !18, !noalias !31
  %259 = icmp eq i8* %258, %167
  %260 = load i64, i64* %166, align 8, !noalias !31
  %261 = select i1 %259, i64 15, i64 %260
  %262 = icmp ugt i64 %257, %261
  %263 = load i8*, i8** %174, align 8, !tbaa !18, !noalias !31
  br i1 %262, label %264, label %271

264:                                              ; preds = %251
  %265 = icmp eq i8* %263, %172
  %266 = load i64, i64* %175, align 8, !noalias !31
  %267 = select i1 %265, i64 15, i64 %266
  %268 = icmp ugt i64 %257, %267
  br i1 %268, label %271, label %269

269:                                              ; preds = %264
  %270 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %17, i64 0, i64 0, i8* %258, i64 %255)
          to label %273 unwind label %340

271:                                              ; preds = %264, %251
  %272 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %15, i8* %263, i64 %256)
          to label %273 unwind label %340

273:                                              ; preds = %271, %269
  %274 = phi %"class.std::__cxx11::basic_string"* [ %270, %269 ], [ %272, %271 ]
  store %union.anon* %177, %union.anon** %178, align 8, !tbaa !13, !alias.scope !31
  %275 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %274, i64 0, i32 0, i32 0
  %276 = load i8*, i8** %275, align 8, !tbaa !18
  %277 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %274, i64 0, i32 2
  %278 = bitcast %union.anon* %277 to i8*
  %279 = icmp eq i8* %276, %278
  br i1 %279, label %280, label %281

280:                                              ; preds = %273
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %181, i8* noundef nonnull align 8 dereferenceable(16) %276, i64 16, i1 false) #20
  br label %284

281:                                              ; preds = %273
  store i8* %276, i8** %179, align 8, !tbaa !18, !alias.scope !31
  %282 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %274, i64 0, i32 2, i32 0
  %283 = load i64, i64* %282, align 8, !tbaa !12
  store i64 %283, i64* %180, align 8, !tbaa !12, !alias.scope !31
  br label %284

284:                                              ; preds = %281, %280
  %285 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %274, i64 0, i32 1
  %286 = load i64, i64* %285, align 8, !tbaa !15
  store i64 %286, i64* %182, align 8, !tbaa !15, !alias.scope !31
  %287 = bitcast %"class.std::__cxx11::basic_string"* %274 to %union.anon**
  store %union.anon* %277, %union.anon** %287, align 8, !tbaa !18
  store i64 0, i64* %285, align 8, !tbaa !15
  store i8 0, i8* %278, align 8, !tbaa !12
  %288 = load i8*, i8** %179, align 8, !tbaa !18
  %289 = icmp eq i8* %288, %181
  br i1 %289, label %290, label %304

290:                                              ; preds = %284
  %291 = load i64, i64* %182, align 8, !tbaa !15
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %299, label %293

293:                                              ; preds = %290
  %294 = load i8*, i8** %53, align 8, !tbaa !18
  %295 = icmp eq i64 %291, 1
  br i1 %295, label %296, label %298

296:                                              ; preds = %293
  %297 = load i8, i8* %181, align 8, !tbaa !12
  store i8 %297, i8* %294, align 1, !tbaa !12
  br label %299

298:                                              ; preds = %293
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %294, i8* nonnull align 8 %181, i64 %291, i1 false) #20
  br label %299

299:                                              ; preds = %298, %296, %290
  %300 = load i64, i64* %182, align 8, !tbaa !15
  store i64 %300, i64* %49, align 8, !tbaa !15
  %301 = load i8*, i8** %53, align 8, !tbaa !18
  %302 = getelementptr inbounds i8, i8* %301, i64 %300
  store i8 0, i8* %302, align 1, !tbaa !12
  %303 = load i8*, i8** %179, align 8, !tbaa !18
  br label %313

304:                                              ; preds = %284
  %305 = load i8*, i8** %53, align 8, !tbaa !18
  %306 = icmp eq i8* %305, %50
  %307 = load i64, i64* %183, align 8
  store i8* %288, i8** %53, align 8, !tbaa !18
  %308 = load <2 x i64>, <2 x i64>* %186, align 8, !tbaa !12
  store <2 x i64> %308, <2 x i64>* %187, align 8, !tbaa !12
  %309 = icmp eq i8* %305, null
  %310 = or i1 %306, %309
  br i1 %310, label %312, label %311

311:                                              ; preds = %304
  store i8* %305, i8** %179, align 8, !tbaa !18
  store i64 %307, i64* %180, align 8, !tbaa !12
  br label %313

312:                                              ; preds = %304
  store %union.anon* %177, %union.anon** %178, align 8, !tbaa !18
  br label %313

313:                                              ; preds = %299, %311, %312
  %314 = phi i8* [ %303, %299 ], [ %305, %311 ], [ %181, %312 ]
  store i64 0, i64* %182, align 8, !tbaa !15
  store i8 0, i8* %314, align 1, !tbaa !12
  %315 = load i8*, i8** %179, align 8, !tbaa !18
  %316 = icmp eq i8* %315, %181
  br i1 %316, label %318, label %317

317:                                              ; preds = %313
  call void @_ZdlPv(i8* %315) #20
  br label %318

318:                                              ; preds = %313, %317
  %319 = load i8*, i8** %174, align 8, !tbaa !18
  %320 = icmp eq i8* %319, %172
  br i1 %320, label %322, label %321

321:                                              ; preds = %318
  call void @_ZdlPv(i8* %319) #20
  br label %322

322:                                              ; preds = %318, %321
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %169) #20
  %323 = load i8*, i8** %165, align 8, !tbaa !18
  %324 = icmp eq i8* %323, %167
  br i1 %324, label %326, label %325

325:                                              ; preds = %322
  call void @_ZdlPv(i8* %323) #20
  br label %326

326:                                              ; preds = %322, %325
  %327 = load i8*, i8** %160, align 8, !tbaa !18
  %328 = icmp eq i8* %327, %158
  br i1 %328, label %330, label %329

329:                                              ; preds = %326
  call void @_ZdlPv(i8* %327) #20
  br label %330

330:                                              ; preds = %326, %329
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %155) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %154) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %153) #20
  %331 = load i64, i64* %49, align 8, !tbaa !15
  br label %357

332:                                              ; preds = %201
  %333 = landingpad { i8*, i32 }
          cleanup
  br label %355

334:                                              ; preds = %211
  %335 = landingpad { i8*, i32 }
          cleanup
  br label %350

336:                                              ; preds = %242
  %337 = landingpad { i8*, i32 }
          cleanup
  br label %345

338:                                              ; preds = %234
  %339 = landingpad { i8*, i32 }
          cleanup
  br label %345

340:                                              ; preds = %271, %269
  %341 = landingpad { i8*, i32 }
          cleanup
  %342 = load i8*, i8** %174, align 8, !tbaa !18
  %343 = icmp eq i8* %342, %172
  br i1 %343, label %345, label %344

344:                                              ; preds = %340
  call void @_ZdlPv(i8* %342) #20
  br label %345

345:                                              ; preds = %336, %338, %344, %340
  %346 = phi { i8*, i32 } [ %341, %340 ], [ %341, %344 ], [ %337, %336 ], [ %339, %338 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %169) #20
  %347 = load i8*, i8** %165, align 8, !tbaa !18
  %348 = icmp eq i8* %347, %167
  br i1 %348, label %350, label %349

349:                                              ; preds = %345
  call void @_ZdlPv(i8* %347) #20
  br label %350

350:                                              ; preds = %349, %345, %334
  %351 = phi { i8*, i32 } [ %335, %334 ], [ %346, %345 ], [ %346, %349 ]
  %352 = load i8*, i8** %160, align 8, !tbaa !18
  %353 = icmp eq i8* %352, %158
  br i1 %353, label %355, label %354

354:                                              ; preds = %350
  call void @_ZdlPv(i8* %352) #20
  br label %355

355:                                              ; preds = %354, %350, %332
  %356 = phi { i8*, i32 } [ %333, %332 ], [ %351, %350 ], [ %351, %354 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %155) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %154) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %153) #20
  br label %369

357:                                              ; preds = %197, %330
  %358 = phi i64 [ %198, %197 ], [ %231, %330 ]
  %359 = phi i64 [ %191, %197 ], [ %331, %330 ]
  %360 = icmp ugt i64 %359, %358
  %361 = load i8*, i8** %53, align 8, !tbaa !18
  br i1 %360, label %190, label %362, !llvm.loop !34

362:                                              ; preds = %357, %152, %139, %124, %149
  %363 = phi i8* [ %96, %152 ], [ %96, %139 ], [ %96, %124 ], [ %96, %149 ], [ %361, %357 ]
  %364 = call double @strtod(i8* nocapture nonnull %363, i8** null) #20
  %365 = load i8*, i8** %53, align 8, !tbaa !18
  %366 = icmp eq i8* %365, %50
  br i1 %366, label %368, label %367

367:                                              ; preds = %362
  call void @_ZdlPv(i8* %365) #20
  br label %368

368:                                              ; preds = %362, %367
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #20
  br label %497

369:                                              ; preds = %355, %188
  %370 = phi { i8*, i32 } [ %356, %355 ], [ %189, %188 ]
  %371 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 0, i32 0
  %372 = load i8*, i8** %371, align 8, !tbaa !18
  %373 = icmp eq i8* %372, %50
  br i1 %373, label %375, label %374

374:                                              ; preds = %369
  call void @_ZdlPv(i8* %372) #20
  br label %375

375:                                              ; preds = %369, %374
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #20
  br label %1000

376:                                              ; preds = %39, %42
  %377 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %25, align 8, !tbaa !3
  %378 = icmp eq %"class.boost::any::placeholder"* %377, null
  br i1 %378, label %385, label %379

379:                                              ; preds = %376
  %380 = bitcast %"class.boost::any::placeholder"* %377 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %381 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %380, align 8, !tbaa !8
  %382 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %381, i64 2
  %383 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %382, align 8
  %384 = tail call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %383(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %377) #20
  br label %385

385:                                              ; preds = %376, %379
  %386 = phi %"class.std::type_info"* [ %384, %379 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %376 ]
  %387 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %386, i64 0, i32 1
  %388 = load i8*, i8** %387, align 8, !tbaa !10
  %389 = load i8*, i8** getelementptr inbounds (i8*, i8** @_ZTIi, i64 1), align 8, !tbaa !10
  %390 = icmp eq i8* %388, %389
  br i1 %390, label %397, label %391

391:                                              ; preds = %385
  %392 = load i8, i8* %388, align 1, !tbaa !12
  %393 = icmp eq i8 %392, 42
  br i1 %393, label %436, label %394

394:                                              ; preds = %391
  %395 = tail call i32 @strcmp(i8* noundef nonnull %388, i8* noundef nonnull dereferenceable(1) %389) #20
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %436

397:                                              ; preds = %385, %394
  %398 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %25, align 8, !tbaa !3
  %399 = icmp eq %"class.boost::any::placeholder"* %398, null
  br i1 %399, label %406, label %400

400:                                              ; preds = %397
  %401 = bitcast %"class.boost::any::placeholder"* %398 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %402 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %401, align 8, !tbaa !8
  %403 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %402, i64 2
  %404 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %403, align 8
  %405 = tail call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %404(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %398) #20
  br label %406

406:                                              ; preds = %400, %397
  %407 = phi %"class.std::type_info"* [ %405, %400 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %397 ]
  %408 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %407, i64 0, i32 1
  %409 = load i8*, i8** %408, align 8, !tbaa !10
  %410 = load i8, i8* %409, align 1, !tbaa !12
  %411 = icmp eq i8 %410, 42
  %412 = zext i1 %411 to i64
  %413 = getelementptr i8, i8* %409, i64 %412
  %414 = load i8, i8* %389, align 1, !tbaa !12
  %415 = icmp eq i8 %414, 42
  %416 = zext i1 %415 to i64
  %417 = getelementptr i8, i8* %389, i64 %416
  %418 = icmp eq i8* %413, %417
  br i1 %418, label %429, label %419

419:                                              ; preds = %406
  %420 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %413, i8* noundef nonnull dereferenceable(1) %417) #22
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %429, label %422

422:                                              ; preds = %419
  %423 = bitcast %"class.boost::bad_any_cast"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %423) #20
  %424 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %9, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %424, align 8, !tbaa !8
  invoke void @_ZN5boost15throw_exceptionINS_12bad_any_castEEEvRKT_(%"class.boost::bad_any_cast"* nonnull align 8 dereferenceable(8) %9) #21
          to label %425 unwind label %426

425:                                              ; preds = %422
  unreachable

426:                                              ; preds = %422
  %427 = landingpad { i8*, i32 }
          cleanup
  %428 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %9, i64 0, i32 0
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %428) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %423) #20
  br label %1000

429:                                              ; preds = %406, %419
  %430 = bitcast %"class.boost::any"* %1 to %"class.boost::any::holder.0"**
  %431 = load %"class.boost::any::holder.0"*, %"class.boost::any::holder.0"** %430, align 8, !tbaa !3
  %432 = getelementptr inbounds %"class.boost::any::holder.0", %"class.boost::any::holder.0"* %431, i64 0, i32 1
  %433 = load i32, i32* %432, align 4, !tbaa !35
  %434 = sitofp i32 %433 to double
  %435 = getelementptr %"class.boost::any::holder.0", %"class.boost::any::holder.0"* %431, i64 0, i32 0
  br label %439

436:                                              ; preds = %391, %394
  %437 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %25, align 8, !tbaa !3
  %438 = icmp eq %"class.boost::any::placeholder"* %437, null
  br i1 %438, label %447, label %439

439:                                              ; preds = %429, %436
  %440 = phi double [ %434, %429 ], [ undef, %436 ]
  %441 = phi %"class.boost::any::placeholder"* [ %435, %429 ], [ %437, %436 ]
  %442 = bitcast %"class.boost::any::placeholder"* %441 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %443 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %442, align 8, !tbaa !8
  %444 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %443, i64 2
  %445 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %444, align 8
  %446 = tail call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %445(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %441) #20
  br label %447

447:                                              ; preds = %436, %439
  %448 = phi double [ %440, %439 ], [ undef, %436 ]
  %449 = phi %"class.std::type_info"* [ %446, %439 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %436 ]
  %450 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %449, i64 0, i32 1
  %451 = load i8*, i8** %450, align 8, !tbaa !10
  %452 = load i8*, i8** getelementptr inbounds (i8*, i8** @_ZTId, i64 1), align 8, !tbaa !10
  %453 = icmp eq i8* %451, %452
  br i1 %453, label %460, label %454

454:                                              ; preds = %447
  %455 = load i8, i8* %451, align 1, !tbaa !12
  %456 = icmp eq i8 %455, 42
  br i1 %456, label %497, label %457

457:                                              ; preds = %454
  %458 = tail call i32 @strcmp(i8* noundef nonnull %451, i8* noundef nonnull dereferenceable(1) %452) #20
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %460, label %497

460:                                              ; preds = %447, %457
  %461 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %25, align 8, !tbaa !3
  %462 = icmp eq %"class.boost::any::placeholder"* %461, null
  br i1 %462, label %469, label %463

463:                                              ; preds = %460
  %464 = bitcast %"class.boost::any::placeholder"* %461 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %465 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %464, align 8, !tbaa !8
  %466 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %465, i64 2
  %467 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %466, align 8
  %468 = tail call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %467(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %461) #20
  br label %469

469:                                              ; preds = %463, %460
  %470 = phi %"class.std::type_info"* [ %468, %463 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %460 ]
  %471 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %470, i64 0, i32 1
  %472 = load i8*, i8** %471, align 8, !tbaa !10
  %473 = load i8, i8* %472, align 1, !tbaa !12
  %474 = icmp eq i8 %473, 42
  %475 = zext i1 %474 to i64
  %476 = getelementptr i8, i8* %472, i64 %475
  %477 = load i8, i8* %452, align 1, !tbaa !12
  %478 = icmp eq i8 %477, 42
  %479 = zext i1 %478 to i64
  %480 = getelementptr i8, i8* %452, i64 %479
  %481 = icmp eq i8* %476, %480
  br i1 %481, label %492, label %482

482:                                              ; preds = %469
  %483 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %476, i8* noundef nonnull dereferenceable(1) %480) #22
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %492, label %485

485:                                              ; preds = %482
  %486 = bitcast %"class.boost::bad_any_cast"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %486) #20
  %487 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %8, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %487, align 8, !tbaa !8
  invoke void @_ZN5boost15throw_exceptionINS_12bad_any_castEEEvRKT_(%"class.boost::bad_any_cast"* nonnull align 8 dereferenceable(8) %8) #21
          to label %488 unwind label %489

488:                                              ; preds = %485
  unreachable

489:                                              ; preds = %485
  %490 = landingpad { i8*, i32 }
          cleanup
  %491 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %8, i64 0, i32 0
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %491) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %486) #20
  br label %1000

492:                                              ; preds = %469, %482
  %493 = bitcast %"class.boost::any"* %1 to %"class.boost::any::holder.1"**
  %494 = load %"class.boost::any::holder.1"*, %"class.boost::any::holder.1"** %493, align 8, !tbaa !3
  %495 = getelementptr inbounds %"class.boost::any::holder.1", %"class.boost::any::holder.1"* %494, i64 0, i32 1
  %496 = load double, double* %495, align 8, !tbaa !37
  br label %497

497:                                              ; preds = %454, %492, %457, %368
  %498 = phi double [ %364, %368 ], [ %448, %457 ], [ %496, %492 ], [ %448, %454 ]
  %499 = getelementptr inbounds %"class.boost::any", %"class.boost::any"* %2, i64 0, i32 0
  %500 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %499, align 8, !tbaa !3
  %501 = icmp eq %"class.boost::any::placeholder"* %500, null
  br i1 %501, label %508, label %502

502:                                              ; preds = %497
  %503 = bitcast %"class.boost::any::placeholder"* %500 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %504 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %503, align 8, !tbaa !8
  %505 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %504, i64 2
  %506 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %505, align 8
  %507 = call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %506(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %500) #20
  br label %508

508:                                              ; preds = %497, %502
  %509 = phi %"class.std::type_info"* [ %507, %502 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %497 ]
  %510 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %509, i64 0, i32 1
  %511 = load i8*, i8** %510, align 8, !tbaa !10
  %512 = icmp eq i8* %511, getelementptr inbounds ([53 x i8], [53 x i8]* @_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, i64 0, i64 0)
  br i1 %512, label %519, label %513

513:                                              ; preds = %508
  %514 = load i8, i8* %511, align 1, !tbaa !12
  %515 = icmp eq i8 %514, 42
  br i1 %515, label %850, label %516

516:                                              ; preds = %513
  %517 = call i32 @strcmp(i8* noundef nonnull %511, i8* noundef nonnull dereferenceable(53) getelementptr inbounds ([53 x i8], [53 x i8]* @_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, i64 0, i64 0)) #20
  %518 = icmp eq i32 %517, 0
  br i1 %518, label %519, label %850

519:                                              ; preds = %508, %516
  %520 = bitcast %"class.std::__cxx11::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %520) #20
  %521 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %18, i64 0, i32 2
  %522 = bitcast %"class.std::__cxx11::basic_string"* %18 to %union.anon**
  store %union.anon* %521, %union.anon** %522, align 8, !tbaa !13
  %523 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %18, i64 0, i32 1
  store i64 0, i64* %523, align 8, !tbaa !15
  %524 = bitcast %union.anon* %521 to i8*
  store i8 0, i8* %524, align 8, !tbaa !12
  %525 = bitcast %"class.std::__cxx11::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %525) #20
  invoke void @_ZN5boost8any_castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_RNS_3anyE(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %19, %"class.boost::any"* nonnull align 8 dereferenceable(8) %2)
          to label %526 unwind label %662

526:                                              ; preds = %519
  %527 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %18, i64 0, i32 0, i32 0
  %528 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 0, i32 0, i32 0
  %529 = load i8*, i8** %528, align 8, !tbaa !18
  %530 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 0, i32 2
  %531 = bitcast %union.anon* %530 to i8*
  %532 = icmp eq i8* %529, %531
  br i1 %532, label %533, label %548

533:                                              ; preds = %526
  %534 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 0, i32 1
  %535 = load i64, i64* %534, align 8, !tbaa !15
  %536 = icmp eq i64 %535, 0
  br i1 %536, label %543, label %537

537:                                              ; preds = %533
  %538 = load i8*, i8** %527, align 8, !tbaa !18
  %539 = icmp eq i64 %535, 1
  br i1 %539, label %540, label %542

540:                                              ; preds = %537
  %541 = load i8, i8* %529, align 1, !tbaa !12
  store i8 %541, i8* %538, align 1, !tbaa !12
  br label %543

542:                                              ; preds = %537
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %538, i8* align 1 %529, i64 %535, i1 false) #20
  br label %543

543:                                              ; preds = %542, %540, %533
  %544 = load i64, i64* %534, align 8, !tbaa !15
  store i64 %544, i64* %523, align 8, !tbaa !15
  %545 = load i8*, i8** %527, align 8, !tbaa !18
  %546 = getelementptr inbounds i8, i8* %545, i64 %544
  store i8 0, i8* %546, align 1, !tbaa !12
  %547 = load i8*, i8** %528, align 8, !tbaa !18
  br label %563

548:                                              ; preds = %526
  %549 = load i8*, i8** %527, align 8, !tbaa !18
  %550 = icmp eq i8* %549, %524
  %551 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %18, i64 0, i32 2, i32 0
  %552 = load i64, i64* %551, align 8
  store i8* %529, i8** %527, align 8, !tbaa !18
  %553 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 0, i32 1
  %554 = bitcast i64* %553 to <2 x i64>*
  %555 = load <2 x i64>, <2 x i64>* %554, align 8, !tbaa !12
  %556 = bitcast i64* %523 to <2 x i64>*
  store <2 x i64> %555, <2 x i64>* %556, align 8, !tbaa !12
  %557 = icmp eq i8* %549, null
  %558 = or i1 %550, %557
  br i1 %558, label %561, label %559

559:                                              ; preds = %548
  store i8* %549, i8** %528, align 8, !tbaa !18
  %560 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 0, i32 2, i32 0
  store i64 %552, i64* %560, align 8, !tbaa !12
  br label %563

561:                                              ; preds = %548
  %562 = bitcast %"class.std::__cxx11::basic_string"* %19 to %union.anon**
  store %union.anon* %530, %union.anon** %562, align 8, !tbaa !18
  br label %563

563:                                              ; preds = %543, %559, %561
  %564 = phi i8* [ %547, %543 ], [ %549, %559 ], [ %531, %561 ]
  %565 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 0, i32 1
  store i64 0, i64* %565, align 8, !tbaa !15
  store i8 0, i8* %564, align 1, !tbaa !12
  %566 = load i8*, i8** %528, align 8, !tbaa !18
  %567 = icmp eq i8* %566, %531
  br i1 %567, label %569, label %568

568:                                              ; preds = %563
  call void @_ZdlPv(i8* %566) #20
  br label %569

569:                                              ; preds = %563, %568
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %525) #20
  %570 = load i8*, i8** %527, align 8, !tbaa !18
  %571 = load i64, i64* %523, align 8, !tbaa !15
  %572 = getelementptr inbounds i8, i8* %570, i64 %571
  %573 = ptrtoint i8* %572 to i64
  %574 = icmp sgt i64 %571, 3
  br i1 %574, label %575, label %598

575:                                              ; preds = %569
  %576 = lshr i64 %571, 2
  br label %577

577:                                              ; preds = %594, %575
  %578 = phi i64 [ %576, %575 ], [ %596, %594 ]
  %579 = phi i8* [ %570, %575 ], [ %595, %594 ]
  %580 = load i8, i8* %579, align 1, !tbaa !12
  %581 = icmp eq i8 %580, 44
  br i1 %581, label %623, label %582

582:                                              ; preds = %577
  %583 = getelementptr inbounds i8, i8* %579, i64 1
  %584 = load i8, i8* %583, align 1, !tbaa !12
  %585 = icmp eq i8 %584, 44
  br i1 %585, label %621, label %586

586:                                              ; preds = %582
  %587 = getelementptr inbounds i8, i8* %579, i64 2
  %588 = load i8, i8* %587, align 1, !tbaa !12
  %589 = icmp eq i8 %588, 44
  br i1 %589, label %619, label %590

590:                                              ; preds = %586
  %591 = getelementptr inbounds i8, i8* %579, i64 3
  %592 = load i8, i8* %591, align 1, !tbaa !12
  %593 = icmp eq i8 %592, 44
  br i1 %593, label %617, label %594

594:                                              ; preds = %590
  %595 = getelementptr inbounds i8, i8* %579, i64 4
  %596 = add nsw i64 %578, -1
  %597 = icmp sgt i64 %578, 1
  br i1 %597, label %577, label %598, !llvm.loop !19

598:                                              ; preds = %594, %569
  %599 = phi i8* [ %570, %569 ], [ %595, %594 ]
  %600 = ptrtoint i8* %599 to i64
  %601 = sub i64 %573, %600
  switch i64 %601, label %836 [
    i64 3, label %602
    i64 2, label %607
    i64 1, label %613
  ]

602:                                              ; preds = %598
  %603 = load i8, i8* %599, align 1, !tbaa !12
  %604 = icmp eq i8 %603, 44
  br i1 %604, label %623, label %605

605:                                              ; preds = %602
  %606 = getelementptr inbounds i8, i8* %599, i64 1
  br label %607

607:                                              ; preds = %598, %605
  %608 = phi i8* [ %606, %605 ], [ %599, %598 ]
  %609 = load i8, i8* %608, align 1, !tbaa !12
  %610 = icmp eq i8 %609, 44
  br i1 %610, label %623, label %611

611:                                              ; preds = %607
  %612 = getelementptr inbounds i8, i8* %608, i64 1
  br label %613

613:                                              ; preds = %598, %611
  %614 = phi i8* [ %612, %611 ], [ %599, %598 ]
  %615 = load i8, i8* %614, align 1, !tbaa !12
  %616 = icmp eq i8 %615, 44
  br i1 %616, label %623, label %836

617:                                              ; preds = %590
  %618 = getelementptr inbounds i8, i8* %579, i64 3
  br label %623

619:                                              ; preds = %586
  %620 = getelementptr inbounds i8, i8* %579, i64 2
  br label %623

621:                                              ; preds = %582
  %622 = getelementptr inbounds i8, i8* %579, i64 1
  br label %623

623:                                              ; preds = %577, %617, %619, %621, %613, %607, %602
  %624 = phi i8* [ %599, %602 ], [ %608, %607 ], [ %614, %613 ], [ %618, %617 ], [ %620, %619 ], [ %622, %621 ], [ %579, %577 ]
  %625 = icmp eq i8* %624, %572
  br i1 %625, label %836, label %626

626:                                              ; preds = %623
  %627 = bitcast %"class.std::__cxx11::basic_string"* %20 to i8*
  %628 = bitcast %"class.std::__cxx11::basic_string"* %21 to i8*
  %629 = bitcast %"class.std::__cxx11::basic_string"* %22 to i8*
  %630 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %22, i64 0, i32 2
  %631 = bitcast %"class.std::__cxx11::basic_string"* %22 to %union.anon**
  %632 = bitcast %union.anon* %630 to i8*
  %633 = bitcast i64* %7 to i8*
  %634 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %22, i64 0, i32 0, i32 0
  %635 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %22, i64 0, i32 2, i32 0
  %636 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %22, i64 0, i32 1
  %637 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %21, i64 0, i32 2
  %638 = bitcast %"class.std::__cxx11::basic_string"* %21 to %union.anon**
  %639 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %21, i64 0, i32 0, i32 0
  %640 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %21, i64 0, i32 2, i32 0
  %641 = bitcast %union.anon* %637 to i8*
  %642 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %21, i64 0, i32 1
  %643 = bitcast %"class.std::__cxx11::basic_string"* %23 to i8*
  %644 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %23, i64 0, i32 2
  %645 = bitcast %"class.std::__cxx11::basic_string"* %23 to %union.anon**
  %646 = bitcast %union.anon* %644 to i8*
  %647 = bitcast i64* %6 to i8*
  %648 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %23, i64 0, i32 0, i32 0
  %649 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %23, i64 0, i32 2, i32 0
  %650 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %23, i64 0, i32 1
  %651 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %20, i64 0, i32 2
  %652 = bitcast %"class.std::__cxx11::basic_string"* %20 to %union.anon**
  %653 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %20, i64 0, i32 0, i32 0
  %654 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %20, i64 0, i32 2, i32 0
  %655 = bitcast %union.anon* %651 to i8*
  %656 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %20, i64 0, i32 1
  %657 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %18, i64 0, i32 2, i32 0
  %658 = icmp eq i64 %571, 0
  br i1 %658, label %836, label %659

659:                                              ; preds = %626
  %660 = bitcast i64* %656 to <2 x i64>*
  %661 = bitcast i64* %523 to <2 x i64>*
  br label %664

662:                                              ; preds = %519
  %663 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %525) #20
  br label %843

664:                                              ; preds = %659, %831
  %665 = phi i64 [ %833, %831 ], [ %571, %659 ]
  %666 = phi i8* [ %835, %831 ], [ %570, %659 ]
  %667 = phi i64 [ %832, %831 ], [ 0, %659 ]
  %668 = getelementptr inbounds i8, i8* %666, i64 %667
  %669 = load i8, i8* %668, align 1, !tbaa !12
  %670 = icmp eq i8 %669, 44
  br i1 %670, label %673, label %671

671:                                              ; preds = %664
  %672 = add nuw i64 %667, 1
  br label %831

673:                                              ; preds = %664
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %627) #20
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %628) #20
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %629) #20
  call void @llvm.experimental.noalias.scope.decl(metadata !39)
  store %union.anon* %630, %union.anon** %631, align 8, !tbaa !13, !alias.scope !39
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %633) #20, !noalias !39
  store i64 %667, i64* %7, align 8, !tbaa !24, !noalias !39
  %674 = icmp ugt i64 %667, 15
  br i1 %674, label %675, label %679

675:                                              ; preds = %673
  %676 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %22, i64* nonnull align 8 dereferenceable(8) %7, i64 0)
          to label %677 unwind label %806

677:                                              ; preds = %675
  store i8* %676, i8** %634, align 8, !tbaa !18, !alias.scope !39
  %678 = load i64, i64* %7, align 8, !tbaa !24, !noalias !39
  store i64 %678, i64* %635, align 8, !tbaa !12, !alias.scope !39
  br label %679

679:                                              ; preds = %677, %673
  %680 = phi i8* [ %676, %677 ], [ %632, %673 ]
  %681 = trunc i64 %667 to i32
  switch i32 %681, label %684 [
    i32 1, label %682
    i32 0, label %685
  ]

682:                                              ; preds = %679
  %683 = load i8, i8* %666, align 1, !tbaa !12
  store i8 %683, i8* %680, align 1, !tbaa !12
  br label %685

684:                                              ; preds = %679
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %680, i8* nonnull align 1 %666, i64 %667, i1 false) #20
  br label %685

685:                                              ; preds = %684, %682, %679
  %686 = load i64, i64* %7, align 8, !tbaa !24, !noalias !39
  store i64 %686, i64* %636, align 8, !tbaa !15, !alias.scope !39
  %687 = load i8*, i8** %634, align 8, !tbaa !18, !alias.scope !39
  %688 = getelementptr inbounds i8, i8* %687, i64 %686
  store i8 0, i8* %688, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %633) #20, !noalias !39
  call void @llvm.experimental.noalias.scope.decl(metadata !42)
  %689 = load i64, i64* %636, align 8, !tbaa !15, !noalias !42
  %690 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %22, i64 %689, i64 0, i64 1, i8 signext 46)
          to label %691 unwind label %808

691:                                              ; preds = %685
  store %union.anon* %637, %union.anon** %638, align 8, !tbaa !13, !alias.scope !42
  %692 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %690, i64 0, i32 0, i32 0
  %693 = load i8*, i8** %692, align 8, !tbaa !18
  %694 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %690, i64 0, i32 2
  %695 = bitcast %union.anon* %694 to i8*
  %696 = icmp eq i8* %693, %695
  br i1 %696, label %697, label %698

697:                                              ; preds = %691
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %641, i8* noundef nonnull align 8 dereferenceable(16) %693, i64 16, i1 false) #20
  br label %701

698:                                              ; preds = %691
  store i8* %693, i8** %639, align 8, !tbaa !18, !alias.scope !42
  %699 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %690, i64 0, i32 2, i32 0
  %700 = load i64, i64* %699, align 8, !tbaa !12
  store i64 %700, i64* %640, align 8, !tbaa !12, !alias.scope !42
  br label %701

701:                                              ; preds = %698, %697
  %702 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %690, i64 0, i32 1
  %703 = load i64, i64* %702, align 8, !tbaa !15
  store i64 %703, i64* %642, align 8, !tbaa !15, !alias.scope !42
  %704 = bitcast %"class.std::__cxx11::basic_string"* %690 to %union.anon**
  store %union.anon* %694, %union.anon** %704, align 8, !tbaa !18
  store i64 0, i64* %702, align 8, !tbaa !15
  store i8 0, i8* %695, align 8, !tbaa !12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %643) #20
  %705 = add nuw i64 %667, 1
  call void @llvm.experimental.noalias.scope.decl(metadata !45)
  %706 = load i64, i64* %523, align 8, !tbaa !15, !noalias !45
  %707 = icmp ugt i64 %706, %667
  br i1 %707, label %711, label %708

708:                                              ; preds = %701
  %709 = and i64 %705, 4294967295
  invoke void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i64 %709, i64 %706) #21
          to label %710 unwind label %812

710:                                              ; preds = %708
  unreachable

711:                                              ; preds = %701
  store %union.anon* %644, %union.anon** %645, align 8, !tbaa !13, !alias.scope !45
  %712 = load i8*, i8** %527, align 8, !tbaa !18, !noalias !45
  %713 = getelementptr inbounds i8, i8* %712, i64 %705
  %714 = sub i64 %706, %705
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %647) #20, !noalias !45
  store i64 %714, i64* %6, align 8, !tbaa !24, !noalias !45
  %715 = icmp ugt i64 %714, 15
  br i1 %715, label %716, label %720

716:                                              ; preds = %711
  %717 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %23, i64* nonnull align 8 dereferenceable(8) %6, i64 0)
          to label %718 unwind label %810

718:                                              ; preds = %716
  store i8* %717, i8** %648, align 8, !tbaa !18, !alias.scope !45
  %719 = load i64, i64* %6, align 8, !tbaa !24, !noalias !45
  store i64 %719, i64* %649, align 8, !tbaa !12, !alias.scope !45
  br label %720

720:                                              ; preds = %718, %711
  %721 = phi i8* [ %717, %718 ], [ %646, %711 ]
  switch i64 %714, label %724 [
    i64 1, label %722
    i64 0, label %725
  ]

722:                                              ; preds = %720
  %723 = load i8, i8* %713, align 1, !tbaa !12
  store i8 %723, i8* %721, align 1, !tbaa !12
  br label %725

724:                                              ; preds = %720
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %721, i8* nonnull align 1 %713, i64 %714, i1 false) #20
  br label %725

725:                                              ; preds = %724, %722, %720
  %726 = load i64, i64* %6, align 8, !tbaa !24, !noalias !45
  store i64 %726, i64* %650, align 8, !tbaa !15, !alias.scope !45
  %727 = load i8*, i8** %648, align 8, !tbaa !18, !alias.scope !45
  %728 = getelementptr inbounds i8, i8* %727, i64 %726
  store i8 0, i8* %728, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %647) #20, !noalias !45
  call void @llvm.experimental.noalias.scope.decl(metadata !48)
  %729 = load i64, i64* %642, align 8, !tbaa !15, !noalias !48
  %730 = load i64, i64* %650, align 8, !tbaa !15, !noalias !48
  %731 = add i64 %730, %729
  %732 = load i8*, i8** %639, align 8, !tbaa !18, !noalias !48
  %733 = icmp eq i8* %732, %641
  %734 = load i64, i64* %640, align 8, !noalias !48
  %735 = select i1 %733, i64 15, i64 %734
  %736 = icmp ugt i64 %731, %735
  %737 = load i8*, i8** %648, align 8, !tbaa !18, !noalias !48
  br i1 %736, label %738, label %745

738:                                              ; preds = %725
  %739 = icmp eq i8* %737, %646
  %740 = load i64, i64* %649, align 8, !noalias !48
  %741 = select i1 %739, i64 15, i64 %740
  %742 = icmp ugt i64 %731, %741
  br i1 %742, label %745, label %743

743:                                              ; preds = %738
  %744 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %23, i64 0, i64 0, i8* %732, i64 %729)
          to label %747 unwind label %814

745:                                              ; preds = %738, %725
  %746 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %21, i8* %737, i64 %730)
          to label %747 unwind label %814

747:                                              ; preds = %745, %743
  %748 = phi %"class.std::__cxx11::basic_string"* [ %744, %743 ], [ %746, %745 ]
  store %union.anon* %651, %union.anon** %652, align 8, !tbaa !13, !alias.scope !48
  %749 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %748, i64 0, i32 0, i32 0
  %750 = load i8*, i8** %749, align 8, !tbaa !18
  %751 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %748, i64 0, i32 2
  %752 = bitcast %union.anon* %751 to i8*
  %753 = icmp eq i8* %750, %752
  br i1 %753, label %754, label %755

754:                                              ; preds = %747
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %655, i8* noundef nonnull align 8 dereferenceable(16) %750, i64 16, i1 false) #20
  br label %758

755:                                              ; preds = %747
  store i8* %750, i8** %653, align 8, !tbaa !18, !alias.scope !48
  %756 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %748, i64 0, i32 2, i32 0
  %757 = load i64, i64* %756, align 8, !tbaa !12
  store i64 %757, i64* %654, align 8, !tbaa !12, !alias.scope !48
  br label %758

758:                                              ; preds = %755, %754
  %759 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %748, i64 0, i32 1
  %760 = load i64, i64* %759, align 8, !tbaa !15
  store i64 %760, i64* %656, align 8, !tbaa !15, !alias.scope !48
  %761 = bitcast %"class.std::__cxx11::basic_string"* %748 to %union.anon**
  store %union.anon* %751, %union.anon** %761, align 8, !tbaa !18
  store i64 0, i64* %759, align 8, !tbaa !15
  store i8 0, i8* %752, align 8, !tbaa !12
  %762 = load i8*, i8** %653, align 8, !tbaa !18
  %763 = icmp eq i8* %762, %655
  br i1 %763, label %764, label %778

764:                                              ; preds = %758
  %765 = load i64, i64* %656, align 8, !tbaa !15
  %766 = icmp eq i64 %765, 0
  br i1 %766, label %773, label %767

767:                                              ; preds = %764
  %768 = load i8*, i8** %527, align 8, !tbaa !18
  %769 = icmp eq i64 %765, 1
  br i1 %769, label %770, label %772

770:                                              ; preds = %767
  %771 = load i8, i8* %655, align 8, !tbaa !12
  store i8 %771, i8* %768, align 1, !tbaa !12
  br label %773

772:                                              ; preds = %767
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %768, i8* nonnull align 8 %655, i64 %765, i1 false) #20
  br label %773

773:                                              ; preds = %772, %770, %764
  %774 = load i64, i64* %656, align 8, !tbaa !15
  store i64 %774, i64* %523, align 8, !tbaa !15
  %775 = load i8*, i8** %527, align 8, !tbaa !18
  %776 = getelementptr inbounds i8, i8* %775, i64 %774
  store i8 0, i8* %776, align 1, !tbaa !12
  %777 = load i8*, i8** %653, align 8, !tbaa !18
  br label %787

778:                                              ; preds = %758
  %779 = load i8*, i8** %527, align 8, !tbaa !18
  %780 = icmp eq i8* %779, %524
  %781 = load i64, i64* %657, align 8
  store i8* %762, i8** %527, align 8, !tbaa !18
  %782 = load <2 x i64>, <2 x i64>* %660, align 8, !tbaa !12
  store <2 x i64> %782, <2 x i64>* %661, align 8, !tbaa !12
  %783 = icmp eq i8* %779, null
  %784 = or i1 %780, %783
  br i1 %784, label %786, label %785

785:                                              ; preds = %778
  store i8* %779, i8** %653, align 8, !tbaa !18
  store i64 %781, i64* %654, align 8, !tbaa !12
  br label %787

786:                                              ; preds = %778
  store %union.anon* %651, %union.anon** %652, align 8, !tbaa !18
  br label %787

787:                                              ; preds = %773, %785, %786
  %788 = phi i8* [ %777, %773 ], [ %779, %785 ], [ %655, %786 ]
  store i64 0, i64* %656, align 8, !tbaa !15
  store i8 0, i8* %788, align 1, !tbaa !12
  %789 = load i8*, i8** %653, align 8, !tbaa !18
  %790 = icmp eq i8* %789, %655
  br i1 %790, label %792, label %791

791:                                              ; preds = %787
  call void @_ZdlPv(i8* %789) #20
  br label %792

792:                                              ; preds = %787, %791
  %793 = load i8*, i8** %648, align 8, !tbaa !18
  %794 = icmp eq i8* %793, %646
  br i1 %794, label %796, label %795

795:                                              ; preds = %792
  call void @_ZdlPv(i8* %793) #20
  br label %796

796:                                              ; preds = %792, %795
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %643) #20
  %797 = load i8*, i8** %639, align 8, !tbaa !18
  %798 = icmp eq i8* %797, %641
  br i1 %798, label %800, label %799

799:                                              ; preds = %796
  call void @_ZdlPv(i8* %797) #20
  br label %800

800:                                              ; preds = %796, %799
  %801 = load i8*, i8** %634, align 8, !tbaa !18
  %802 = icmp eq i8* %801, %632
  br i1 %802, label %804, label %803

803:                                              ; preds = %800
  call void @_ZdlPv(i8* %801) #20
  br label %804

804:                                              ; preds = %800, %803
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %629) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %628) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %627) #20
  %805 = load i64, i64* %523, align 8, !tbaa !15
  br label %831

806:                                              ; preds = %675
  %807 = landingpad { i8*, i32 }
          cleanup
  br label %829

808:                                              ; preds = %685
  %809 = landingpad { i8*, i32 }
          cleanup
  br label %824

810:                                              ; preds = %716
  %811 = landingpad { i8*, i32 }
          cleanup
  br label %819

812:                                              ; preds = %708
  %813 = landingpad { i8*, i32 }
          cleanup
  br label %819

814:                                              ; preds = %745, %743
  %815 = landingpad { i8*, i32 }
          cleanup
  %816 = load i8*, i8** %648, align 8, !tbaa !18
  %817 = icmp eq i8* %816, %646
  br i1 %817, label %819, label %818

818:                                              ; preds = %814
  call void @_ZdlPv(i8* %816) #20
  br label %819

819:                                              ; preds = %810, %812, %818, %814
  %820 = phi { i8*, i32 } [ %815, %814 ], [ %815, %818 ], [ %811, %810 ], [ %813, %812 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %643) #20
  %821 = load i8*, i8** %639, align 8, !tbaa !18
  %822 = icmp eq i8* %821, %641
  br i1 %822, label %824, label %823

823:                                              ; preds = %819
  call void @_ZdlPv(i8* %821) #20
  br label %824

824:                                              ; preds = %823, %819, %808
  %825 = phi { i8*, i32 } [ %809, %808 ], [ %820, %819 ], [ %820, %823 ]
  %826 = load i8*, i8** %634, align 8, !tbaa !18
  %827 = icmp eq i8* %826, %632
  br i1 %827, label %829, label %828

828:                                              ; preds = %824
  call void @_ZdlPv(i8* %826) #20
  br label %829

829:                                              ; preds = %828, %824, %806
  %830 = phi { i8*, i32 } [ %807, %806 ], [ %825, %824 ], [ %825, %828 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %629) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %628) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %627) #20
  br label %843

831:                                              ; preds = %671, %804
  %832 = phi i64 [ %672, %671 ], [ %705, %804 ]
  %833 = phi i64 [ %665, %671 ], [ %805, %804 ]
  %834 = icmp ugt i64 %833, %832
  %835 = load i8*, i8** %527, align 8, !tbaa !18
  br i1 %834, label %664, label %836, !llvm.loop !51

836:                                              ; preds = %831, %626, %613, %598, %623
  %837 = phi i8* [ %570, %626 ], [ %570, %613 ], [ %570, %598 ], [ %570, %623 ], [ %835, %831 ]
  %838 = call double @strtod(i8* nocapture nonnull %837, i8** null) #20
  %839 = load i8*, i8** %527, align 8, !tbaa !18
  %840 = icmp eq i8* %839, %524
  br i1 %840, label %842, label %841

841:                                              ; preds = %836
  call void @_ZdlPv(i8* %839) #20
  br label %842

842:                                              ; preds = %836, %841
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %520) #20
  br label %971

843:                                              ; preds = %829, %662
  %844 = phi { i8*, i32 } [ %830, %829 ], [ %663, %662 ]
  %845 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %18, i64 0, i32 0, i32 0
  %846 = load i8*, i8** %845, align 8, !tbaa !18
  %847 = icmp eq i8* %846, %524
  br i1 %847, label %849, label %848

848:                                              ; preds = %843
  call void @_ZdlPv(i8* %846) #20
  br label %849

849:                                              ; preds = %843, %848
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %520) #20
  br label %1000

850:                                              ; preds = %513, %516
  %851 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %499, align 8, !tbaa !3
  %852 = icmp eq %"class.boost::any::placeholder"* %851, null
  br i1 %852, label %859, label %853

853:                                              ; preds = %850
  %854 = bitcast %"class.boost::any::placeholder"* %851 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %855 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %854, align 8, !tbaa !8
  %856 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %855, i64 2
  %857 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %856, align 8
  %858 = call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %857(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %851) #20
  br label %859

859:                                              ; preds = %850, %853
  %860 = phi %"class.std::type_info"* [ %858, %853 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %850 ]
  %861 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %860, i64 0, i32 1
  %862 = load i8*, i8** %861, align 8, !tbaa !10
  %863 = load i8*, i8** getelementptr inbounds (i8*, i8** @_ZTIi, i64 1), align 8, !tbaa !10
  %864 = icmp eq i8* %862, %863
  br i1 %864, label %871, label %865

865:                                              ; preds = %859
  %866 = load i8, i8* %862, align 1, !tbaa !12
  %867 = icmp eq i8 %866, 42
  br i1 %867, label %910, label %868

868:                                              ; preds = %865
  %869 = call i32 @strcmp(i8* noundef nonnull %862, i8* noundef nonnull dereferenceable(1) %863) #20
  %870 = icmp eq i32 %869, 0
  br i1 %870, label %871, label %910

871:                                              ; preds = %859, %868
  %872 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %499, align 8, !tbaa !3
  %873 = icmp eq %"class.boost::any::placeholder"* %872, null
  br i1 %873, label %880, label %874

874:                                              ; preds = %871
  %875 = bitcast %"class.boost::any::placeholder"* %872 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %876 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %875, align 8, !tbaa !8
  %877 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %876, i64 2
  %878 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %877, align 8
  %879 = call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %878(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %872) #20
  br label %880

880:                                              ; preds = %874, %871
  %881 = phi %"class.std::type_info"* [ %879, %874 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %871 ]
  %882 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %881, i64 0, i32 1
  %883 = load i8*, i8** %882, align 8, !tbaa !10
  %884 = load i8, i8* %883, align 1, !tbaa !12
  %885 = icmp eq i8 %884, 42
  %886 = zext i1 %885 to i64
  %887 = getelementptr i8, i8* %883, i64 %886
  %888 = load i8, i8* %863, align 1, !tbaa !12
  %889 = icmp eq i8 %888, 42
  %890 = zext i1 %889 to i64
  %891 = getelementptr i8, i8* %863, i64 %890
  %892 = icmp eq i8* %887, %891
  br i1 %892, label %903, label %893

893:                                              ; preds = %880
  %894 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %887, i8* noundef nonnull dereferenceable(1) %891) #22
  %895 = icmp eq i32 %894, 0
  br i1 %895, label %903, label %896

896:                                              ; preds = %893
  %897 = bitcast %"class.boost::bad_any_cast"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %897) #20
  %898 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %898, align 8, !tbaa !8
  invoke void @_ZN5boost15throw_exceptionINS_12bad_any_castEEEvRKT_(%"class.boost::bad_any_cast"* nonnull align 8 dereferenceable(8) %5) #21
          to label %899 unwind label %900

899:                                              ; preds = %896
  unreachable

900:                                              ; preds = %896
  %901 = landingpad { i8*, i32 }
          cleanup
  %902 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %5, i64 0, i32 0
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %902) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %897) #20
  br label %1000

903:                                              ; preds = %880, %893
  %904 = bitcast %"class.boost::any"* %2 to %"class.boost::any::holder.0"**
  %905 = load %"class.boost::any::holder.0"*, %"class.boost::any::holder.0"** %904, align 8, !tbaa !3
  %906 = getelementptr inbounds %"class.boost::any::holder.0", %"class.boost::any::holder.0"* %905, i64 0, i32 1
  %907 = load i32, i32* %906, align 4, !tbaa !35
  %908 = sitofp i32 %907 to double
  %909 = getelementptr %"class.boost::any::holder.0", %"class.boost::any::holder.0"* %905, i64 0, i32 0
  br label %913

910:                                              ; preds = %865, %868
  %911 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %499, align 8, !tbaa !3
  %912 = icmp eq %"class.boost::any::placeholder"* %911, null
  br i1 %912, label %921, label %913

913:                                              ; preds = %903, %910
  %914 = phi double [ %908, %903 ], [ undef, %910 ]
  %915 = phi %"class.boost::any::placeholder"* [ %909, %903 ], [ %911, %910 ]
  %916 = bitcast %"class.boost::any::placeholder"* %915 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %917 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %916, align 8, !tbaa !8
  %918 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %917, i64 2
  %919 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %918, align 8
  %920 = call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %919(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %915) #20
  br label %921

921:                                              ; preds = %910, %913
  %922 = phi double [ %914, %913 ], [ undef, %910 ]
  %923 = phi %"class.std::type_info"* [ %920, %913 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %910 ]
  %924 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %923, i64 0, i32 1
  %925 = load i8*, i8** %924, align 8, !tbaa !10
  %926 = load i8*, i8** getelementptr inbounds (i8*, i8** @_ZTId, i64 1), align 8, !tbaa !10
  %927 = icmp eq i8* %925, %926
  br i1 %927, label %934, label %928

928:                                              ; preds = %921
  %929 = load i8, i8* %925, align 1, !tbaa !12
  %930 = icmp eq i8 %929, 42
  br i1 %930, label %971, label %931

931:                                              ; preds = %928
  %932 = call i32 @strcmp(i8* noundef nonnull %925, i8* noundef nonnull dereferenceable(1) %926) #20
  %933 = icmp eq i32 %932, 0
  br i1 %933, label %934, label %971

934:                                              ; preds = %921, %931
  %935 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %499, align 8, !tbaa !3
  %936 = icmp eq %"class.boost::any::placeholder"* %935, null
  br i1 %936, label %943, label %937

937:                                              ; preds = %934
  %938 = bitcast %"class.boost::any::placeholder"* %935 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %939 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %938, align 8, !tbaa !8
  %940 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %939, i64 2
  %941 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %940, align 8
  %942 = call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %941(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %935) #20
  br label %943

943:                                              ; preds = %937, %934
  %944 = phi %"class.std::type_info"* [ %942, %937 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %934 ]
  %945 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %944, i64 0, i32 1
  %946 = load i8*, i8** %945, align 8, !tbaa !10
  %947 = load i8, i8* %946, align 1, !tbaa !12
  %948 = icmp eq i8 %947, 42
  %949 = zext i1 %948 to i64
  %950 = getelementptr i8, i8* %946, i64 %949
  %951 = load i8, i8* %926, align 1, !tbaa !12
  %952 = icmp eq i8 %951, 42
  %953 = zext i1 %952 to i64
  %954 = getelementptr i8, i8* %926, i64 %953
  %955 = icmp eq i8* %950, %954
  br i1 %955, label %966, label %956

956:                                              ; preds = %943
  %957 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %950, i8* noundef nonnull dereferenceable(1) %954) #22
  %958 = icmp eq i32 %957, 0
  br i1 %958, label %966, label %959

959:                                              ; preds = %956
  %960 = bitcast %"class.boost::bad_any_cast"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %960) #20
  %961 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %961, align 8, !tbaa !8
  invoke void @_ZN5boost15throw_exceptionINS_12bad_any_castEEEvRKT_(%"class.boost::bad_any_cast"* nonnull align 8 dereferenceable(8) %4) #21
          to label %962 unwind label %963

962:                                              ; preds = %959
  unreachable

963:                                              ; preds = %959
  %964 = landingpad { i8*, i32 }
          cleanup
  %965 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %4, i64 0, i32 0
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %965) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %960) #20
  br label %1000

966:                                              ; preds = %943, %956
  %967 = bitcast %"class.boost::any"* %2 to %"class.boost::any::holder.1"**
  %968 = load %"class.boost::any::holder.1"*, %"class.boost::any::holder.1"** %967, align 8, !tbaa !3
  %969 = getelementptr inbounds %"class.boost::any::holder.1", %"class.boost::any::holder.1"* %968, i64 0, i32 1
  %970 = load double, double* %969, align 8, !tbaa !37
  br label %971

971:                                              ; preds = %928, %966, %931, %842
  %972 = phi double [ %838, %842 ], [ %922, %931 ], [ %970, %966 ], [ %922, %928 ]
  %973 = fcmp oeq double %498, %972
  br i1 %973, label %974, label %990

974:                                              ; preds = %971
  %975 = bitcast %"class.std::__cxx11::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %975) #20
  %976 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %24, i64 0, i32 2
  %977 = bitcast %union.anon* %976 to i8*
  %978 = bitcast %union.anon* %976 to i32*
  store i32 1701736270, i32* %978, align 8
  %979 = getelementptr inbounds i8, i8* %977, i64 4
  store i8 0, i8* %979, align 4, !tbaa !12
  %980 = call noalias nonnull dereferenceable(40) i8* @_Znwm(i64 40) #23
  %981 = bitcast i8* %980 to %"class.boost::any::holder"*
  %982 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %981, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %982, align 8, !tbaa !8
  %983 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %981, i64 0, i32 1
  %984 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %981, i64 0, i32 1, i32 2
  %985 = bitcast %"class.std::__cxx11::basic_string"* %983 to %union.anon**
  store %union.anon* %984, %union.anon** %985, align 8, !tbaa !13
  %986 = bitcast %union.anon* %984 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %986, i8* noundef nonnull align 8 dereferenceable(16) %977, i64 16, i1 false) #20
  %987 = getelementptr inbounds %"class.boost::any", %"class.boost::any"* %0, i64 0, i32 0
  %988 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %981, i64 0, i32 1, i32 1
  store i64 4, i64* %988, align 8, !tbaa !15
  %989 = getelementptr %"class.boost::any::holder", %"class.boost::any::holder"* %981, i64 0, i32 0
  store %"class.boost::any::placeholder"* %989, %"class.boost::any::placeholder"** %987, align 8, !tbaa !3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %975) #20
  br label %999

990:                                              ; preds = %971
  %991 = fcmp olt double %498, %972
  br i1 %991, label %992, label %995

992:                                              ; preds = %990
  %993 = getelementptr inbounds %"class.boost::any", %"class.boost::any"* %0, i64 0, i32 0
  %994 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %499, align 8, !tbaa !3
  store %"class.boost::any::placeholder"* %994, %"class.boost::any::placeholder"** %993, align 8, !tbaa !3
  store %"class.boost::any::placeholder"* null, %"class.boost::any::placeholder"** %499, align 8, !tbaa !3
  br label %999

995:                                              ; preds = %990
  %996 = fcmp ogt double %498, %972
  call void @llvm.assume(i1 %996)
  %997 = getelementptr inbounds %"class.boost::any", %"class.boost::any"* %0, i64 0, i32 0
  %998 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %25, align 8, !tbaa !3
  store %"class.boost::any::placeholder"* %998, %"class.boost::any::placeholder"** %997, align 8, !tbaa !3
  store %"class.boost::any::placeholder"* null, %"class.boost::any::placeholder"** %25, align 8, !tbaa !3
  br label %999

999:                                              ; preds = %974, %992, %995
  ret void

1000:                                             ; preds = %375, %849, %489, %963, %900, %426
  %1001 = phi { i8*, i32 } [ %370, %375 ], [ %844, %849 ], [ %427, %426 ], [ %490, %489 ], [ %901, %900 ], [ %964, %963 ]
  resume { i8*, i32 } %1001
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5boost8any_castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_RNS_3anyE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.boost::any"* nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.boost::bad_any_cast", align 8
  %5 = getelementptr inbounds %"class.boost::any", %"class.boost::any"* %1, i64 0, i32 0
  %6 = load %"class.boost::any::placeholder"*, %"class.boost::any::placeholder"** %5, align 8, !tbaa !3
  %7 = icmp eq %"class.boost::any::placeholder"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.boost::any::placeholder"* %6 to %"class.std::type_info"* (%"class.boost::any::placeholder"*)***
  %10 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)**, %"class.std::type_info"* (%"class.boost::any::placeholder"*)*** %9, align 8, !tbaa !8
  %11 = getelementptr inbounds %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %10, i64 2
  %12 = load %"class.std::type_info"* (%"class.boost::any::placeholder"*)*, %"class.std::type_info"* (%"class.boost::any::placeholder"*)** %11, align 8
  %13 = tail call nonnull align 8 dereferenceable(16) %"class.std::type_info"* %12(%"class.boost::any::placeholder"* nonnull align 8 dereferenceable(8) %6) #20
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi %"class.std::type_info"* [ %13, %8 ], [ bitcast (i8** @_ZTIv to %"class.std::type_info"*), %2 ]
  %16 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %15, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8, !tbaa !10
  %18 = load i8, i8* %17, align 1, !tbaa !12
  %19 = icmp eq i8 %18, 42
  %20 = zext i1 %19 to i64
  %21 = getelementptr i8, i8* %17, i64 %20
  %22 = icmp eq i8* %21, getelementptr inbounds ([53 x i8], [53 x i8]* @_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, i64 0, i64 0)
  br i1 %22, label %33, label %23

23:                                               ; preds = %14
  %24 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %21, i8* noundef nonnull dereferenceable(53) getelementptr inbounds ([53 x i8], [53 x i8]* @_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, i64 0, i64 0)) #22
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.boost::bad_any_cast"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #20
  %28 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8, !tbaa !8
  invoke void @_ZN5boost15throw_exceptionINS_12bad_any_castEEEvRKT_(%"class.boost::bad_any_cast"* nonnull align 8 dereferenceable(8) %4) #21
          to label %29 unwind label %30

29:                                               ; preds = %26
  unreachable

30:                                               ; preds = %26
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %4, i64 0, i32 0
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %32) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #20
  resume { i8*, i32 } %31

33:                                               ; preds = %23, %14
  %34 = bitcast %"class.boost::any"* %1 to %"class.boost::any::holder"**
  %35 = load %"class.boost::any::holder"*, %"class.boost::any::holder"** %34, align 8, !tbaa !3
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %37 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %36, %union.anon** %37, align 8, !tbaa !13
  %38 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %35, i64 0, i32 1, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8, !tbaa !18
  %40 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %35, i64 0, i32 1, i32 1
  %41 = load i64, i64* %40, align 8, !tbaa !15
  %42 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #20
  store i64 %41, i64* %3, align 8, !tbaa !24
  %43 = icmp ugt i64 %41, 15
  br i1 %43, label %46, label %44

44:                                               ; preds = %33
  %45 = bitcast %union.anon* %36 to i8*
  br label %51

46:                                               ; preds = %33
  %47 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %47, i8** %48, align 8, !tbaa !18
  %49 = load i64, i64* %3, align 8, !tbaa !24
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %49, i64* %50, align 8, !tbaa !12
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i8* [ %45, %44 ], [ %47, %46 ]
  switch i64 %41, label %55 [
    i64 1, label %53
    i64 0, label %56
  ]

53:                                               ; preds = %51
  %54 = load i8, i8* %39, align 1, !tbaa !12
  store i8 %54, i8* %52, align 1, !tbaa !12
  br label %56

55:                                               ; preds = %51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %39, i64 %41, i1 false) #20
  br label %56

56:                                               ; preds = %51, %53, %55
  %57 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %58 = load i64, i64* %3, align 8, !tbaa !24
  %59 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %58, i64* %59, align 8, !tbaa !15
  %60 = load i8*, i8** %57, align 8, !tbaa !18
  %61 = getelementptr inbounds i8, i8* %60, i64 %58
  store i8 0, i8* %61, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #20
  ret void
}

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare dso_local i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind willreturn
declare dso_local double @strtod(i8* readonly, i8** nocapture) local_unnamed_addr #3

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #4 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #20
  tail call void @_ZSt9terminatev() #24
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #5

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #6

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i8*, i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare dso_local void @_ZSt24__throw_out_of_range_fmtPKcz(i8*, ...) local_unnamed_addr #8

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #6

; Function Attrs: inlinehint noreturn uwtable
define linkonce_odr dso_local void @_ZN5boost15throw_exceptionINS_12bad_any_castEEEvRKT_(%"class.boost::bad_any_cast"* nonnull align 8 dereferenceable(8) %0) local_unnamed_addr #9 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.boost::exception_detail::error_info_injector", align 8
  %3 = tail call i8* @__cxa_allocate_exception(i64 56) #20
  %4 = bitcast %"struct.boost::exception_detail::error_info_injector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #20
  %5 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %2, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %2, i64 0, i32 1, i32 1, i32 0
  %8 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %2, i64 0, i32 1, i32 4
  %9 = bitcast %"struct.boost::exception_detail::error_info_container"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %9, i8 0, i64 24, i1 false), !alias.scope !52
  store i32 -1, i32* %8, align 8, !tbaa !55, !alias.scope !52
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [4 x i8*] }, { [5 x i8*], [4 x i8*] }* @_ZTVN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !8, !alias.scope !52
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [4 x i8*] }, { [5 x i8*], [4 x i8*] }* @_ZTVN5boost16exception_detail19error_info_injectorINS_12bad_any_castEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !8, !alias.scope !52
  %10 = getelementptr inbounds i8, i8* %3, i64 48
  %11 = bitcast i8* %10 to i32 (...)***
  %12 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8, !tbaa !8, !alias.scope !58
  %13 = getelementptr inbounds i8, i8* %3, i64 8
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !8, !alias.scope !58
  %15 = getelementptr inbounds i8, i8* %3, i64 16
  %16 = bitcast i8* %15 to %"struct.boost::exception_detail::error_info_container"**
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %16, align 8, !tbaa !61, !alias.scope !58
  %17 = getelementptr inbounds i8, i8* %3, i64 24
  %18 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %2, i64 0, i32 1, i32 2
  %19 = bitcast i8** %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(20) %17, i8* noundef nonnull align 8 dereferenceable(20) %19, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %12, align 8, !tbaa !8, !alias.scope !58
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !8, !alias.scope !58
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 2, i64 5) to i32 (...)**), i32 (...)*** %11, align 8, !tbaa !8, !alias.scope !58
  %20 = bitcast i8* %13 to %"class.boost::exception"*
  %21 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %2, i64 0, i32 1
  %22 = bitcast %"class.boost::exception.base"* %21 to %"class.boost::exception"*
  invoke void @_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(%"class.boost::exception"* nonnull %20, %"class.boost::exception"* nonnull %22)
          to label %38 unwind label %23

23:                                               ; preds = %1
  %24 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !8, !alias.scope !58
  %25 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %16, align 8, !tbaa !61, !alias.scope !58
  %26 = icmp eq %"struct.boost::exception_detail::error_info_container"* %25, null
  br i1 %26, label %41, label %27

27:                                               ; preds = %23
  %28 = bitcast %"struct.boost::exception_detail::error_info_container"* %25 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %29 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %28, align 8, !tbaa !8
  %30 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %29, i64 4
  %31 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %30, align 8
  %32 = invoke zeroext i1 %31(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %25)
          to label %33 unwind label %35

33:                                               ; preds = %27
  br i1 %32, label %34, label %41

34:                                               ; preds = %33
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %16, align 8, !tbaa !61, !alias.scope !58
  br label %41

35:                                               ; preds = %27
  %36 = landingpad { i8*, i32 }
          catch i8* null
  %37 = extractvalue { i8*, i32 } %36, 0
  call void @__clang_call_terminate(i8* %37) #24
  unreachable

38:                                               ; preds = %1
  invoke void @__cxa_throw(i8* nonnull %3, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev to i8*)) #21
          to label %45 unwind label %39

39:                                               ; preds = %38
  %40 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN5boost16exception_detail19error_info_injectorINS_12bad_any_castEED2Ev(%"struct.boost::exception_detail::error_info_injector"* nonnull align 8 dereferenceable(44) %2) #20
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #20
  br label %43

41:                                               ; preds = %34, %33, %23
  %42 = bitcast i8* %3 to %"class.std::bad_cast"*
  call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %42) #20
  call void @_ZN5boost16exception_detail19error_info_injectorINS_12bad_any_castEED2Ev(%"struct.boost::exception_detail::error_info_injector"* nonnull align 8 dereferenceable(44) %2) #20
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #20
  call void @__cxa_free_exception(i8* nonnull %3) #20
  br label %43

43:                                               ; preds = %39, %41
  %44 = phi { i8*, i32 } [ %40, %39 ], [ %24, %41 ]
  resume { i8*, i32 } %44

45:                                               ; preds = %38
  unreachable
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #10

; Function Attrs: nounwind
declare dso_local void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8)) unnamed_addr #11

declare dso_local i8* @__cxa_allocate_exception(i64) local_unnamed_addr

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev(%"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !8
  %3 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %4 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %3, align 8, !tbaa !61
  %5 = icmp eq %"struct.boost::exception_detail::error_info_container"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.boost::exception_detail::error_info_container"* %4 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %8 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %7, align 8, !tbaa !8
  %9 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %8, i64 4
  %10 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %9, align 8
  %11 = invoke zeroext i1 %10(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %4)
          to label %12 unwind label %14

12:                                               ; preds = %6
  br i1 %11, label %13, label %17

13:                                               ; preds = %12
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %3, align 8, !tbaa !61
  br label %17

14:                                               ; preds = %6
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  tail call void @__clang_call_terminate(i8* %16) #24
  unreachable

17:                                               ; preds = %1, %12, %13
  %18 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %18) #20
  ret void
}

declare dso_local void @__cxa_throw(i8*, i8*, i8*) local_unnamed_addr

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail19error_info_injectorINS_12bad_any_castEED2Ev(%"struct.boost::exception_detail::error_info_injector"* nonnull align 8 dereferenceable(44) %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !8
  %3 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %0, i64 0, i32 1, i32 1, i32 0
  %4 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %3, align 8, !tbaa !61
  %5 = icmp eq %"struct.boost::exception_detail::error_info_container"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.boost::exception_detail::error_info_container"* %4 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %8 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %7, align 8, !tbaa !8
  %9 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %8, i64 4
  %10 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %9, align 8
  %11 = invoke zeroext i1 %10(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %4)
          to label %12 unwind label %14

12:                                               ; preds = %6
  br i1 %11, label %13, label %17

13:                                               ; preds = %12
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %3, align 8, !tbaa !61
  br label %17

14:                                               ; preds = %6
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  tail call void @__clang_call_terminate(i8* %16) #24
  unreachable

17:                                               ; preds = %1, %12, %13
  %18 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %18) #20
  ret void
}

declare dso_local void @__cxa_free_exception(i8*) local_unnamed_addr

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(%"class.boost::exception"* %0, %"class.boost::exception"* %1) local_unnamed_addr #13 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.boost::exception_detail::refcount_ptr", align 8
  %4 = getelementptr inbounds %"class.boost::exception", %"class.boost::exception"* %1, i64 0, i32 1, i32 0
  %5 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %4, align 8, !tbaa !61
  %6 = icmp eq %"struct.boost::exception_detail::error_info_container"* %5, null
  br i1 %6, label %53, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.boost::exception_detail::refcount_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #20
  %9 = bitcast %"struct.boost::exception_detail::error_info_container"* %5 to void (%"class.boost::exception_detail::refcount_ptr"*, %"struct.boost::exception_detail::error_info_container"*)***
  %10 = load void (%"class.boost::exception_detail::refcount_ptr"*, %"struct.boost::exception_detail::error_info_container"*)**, void (%"class.boost::exception_detail::refcount_ptr"*, %"struct.boost::exception_detail::error_info_container"*)*** %9, align 8, !tbaa !8
  %11 = getelementptr inbounds void (%"class.boost::exception_detail::refcount_ptr"*, %"struct.boost::exception_detail::error_info_container"*)*, void (%"class.boost::exception_detail::refcount_ptr"*, %"struct.boost::exception_detail::error_info_container"*)** %10, i64 5
  %12 = load void (%"class.boost::exception_detail::refcount_ptr"*, %"struct.boost::exception_detail::error_info_container"*)*, void (%"class.boost::exception_detail::refcount_ptr"*, %"struct.boost::exception_detail::error_info_container"*)** %11, align 8
  invoke void %12(%"class.boost::exception_detail::refcount_ptr"* nonnull sret(%"class.boost::exception_detail::refcount_ptr") align 8 %3, %"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %5)
          to label %13 unwind label %35

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.boost::exception_detail::refcount_ptr", %"class.boost::exception_detail::refcount_ptr"* %3, i64 0, i32 0
  %15 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %14, align 8, !tbaa !61
  %16 = icmp eq %"struct.boost::exception_detail::error_info_container"* %15, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %13
  %18 = bitcast %"struct.boost::exception_detail::error_info_container"* %15 to void (%"struct.boost::exception_detail::error_info_container"*)***
  %19 = load void (%"struct.boost::exception_detail::error_info_container"*)**, void (%"struct.boost::exception_detail::error_info_container"*)*** %18, align 8, !tbaa !8
  %20 = getelementptr inbounds void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %19, i64 3
  %21 = load void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %20, align 8
  invoke void %21(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %15)
          to label %22 unwind label %37

22:                                               ; preds = %17
  %23 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %14, align 8, !tbaa !61
  %24 = icmp eq %"struct.boost::exception_detail::error_info_container"* %23, null
  br i1 %24, label %34, label %25

25:                                               ; preds = %22
  %26 = bitcast %"struct.boost::exception_detail::error_info_container"* %23 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %27 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %26, align 8, !tbaa !8
  %28 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %27, i64 4
  %29 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %28, align 8
  %30 = invoke zeroext i1 %29(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %23)
          to label %34 unwind label %31

31:                                               ; preds = %25
  %32 = landingpad { i8*, i32 }
          catch i8* null
  %33 = extractvalue { i8*, i32 } %32, 0
  call void @__clang_call_terminate(i8* %33) #24
  unreachable

34:                                               ; preds = %25, %13, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #20
  br label %53

35:                                               ; preds = %7
  %36 = landingpad { i8*, i32 }
          cleanup
  br label %50

37:                                               ; preds = %17
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %14, align 8, !tbaa !61
  %40 = icmp eq %"struct.boost::exception_detail::error_info_container"* %39, null
  br i1 %40, label %50, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.boost::exception_detail::error_info_container"* %39 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %43 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %42, align 8, !tbaa !8
  %44 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %43, i64 4
  %45 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %44, align 8
  %46 = invoke zeroext i1 %45(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %39)
          to label %50 unwind label %47

47:                                               ; preds = %41
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  call void @__clang_call_terminate(i8* %49) #24
  unreachable

50:                                               ; preds = %41, %37, %35
  %51 = phi %"struct.boost::exception_detail::error_info_container"* [ null, %35 ], [ %15, %37 ], [ %15, %41 ]
  %52 = phi { i8*, i32 } [ %36, %35 ], [ %38, %37 ], [ %38, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #20
  br label %92

53:                                               ; preds = %34, %2
  %54 = phi %"struct.boost::exception_detail::error_info_container"* [ null, %2 ], [ %15, %34 ]
  %55 = getelementptr inbounds %"class.boost::exception", %"class.boost::exception"* %1, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8, !tbaa !62
  %57 = getelementptr inbounds %"class.boost::exception", %"class.boost::exception"* %0, i64 0, i32 3
  store i8* %56, i8** %57, align 8, !tbaa !62
  %58 = getelementptr inbounds %"class.boost::exception", %"class.boost::exception"* %1, i64 0, i32 4
  %59 = load i32, i32* %58, align 8, !tbaa !55
  %60 = getelementptr inbounds %"class.boost::exception", %"class.boost::exception"* %0, i64 0, i32 4
  store i32 %59, i32* %60, align 8, !tbaa !55
  %61 = getelementptr inbounds %"class.boost::exception", %"class.boost::exception"* %1, i64 0, i32 2
  %62 = load i8*, i8** %61, align 8, !tbaa !63
  %63 = getelementptr inbounds %"class.boost::exception", %"class.boost::exception"* %0, i64 0, i32 2
  store i8* %62, i8** %63, align 8, !tbaa !63
  %64 = getelementptr inbounds %"class.boost::exception", %"class.boost::exception"* %0, i64 0, i32 1, i32 0
  %65 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %64, align 8, !tbaa !61
  %66 = icmp eq %"struct.boost::exception_detail::error_info_container"* %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %53
  %68 = bitcast %"struct.boost::exception_detail::error_info_container"* %65 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %69 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %68, align 8, !tbaa !8
  %70 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %69, i64 4
  %71 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %70, align 8
  %72 = invoke zeroext i1 %71(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %65)
          to label %73 unwind label %90

73:                                               ; preds = %67, %53
  store %"struct.boost::exception_detail::error_info_container"* %54, %"struct.boost::exception_detail::error_info_container"** %64, align 8, !tbaa !61
  %74 = icmp eq %"struct.boost::exception_detail::error_info_container"* %54, null
  br i1 %74, label %89, label %75

75:                                               ; preds = %73
  %76 = bitcast %"struct.boost::exception_detail::error_info_container"* %54 to void (%"struct.boost::exception_detail::error_info_container"*)***
  %77 = load void (%"struct.boost::exception_detail::error_info_container"*)**, void (%"struct.boost::exception_detail::error_info_container"*)*** %76, align 8, !tbaa !8
  %78 = getelementptr inbounds void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %77, i64 3
  %79 = load void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %78, align 8
  invoke void %79(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %54)
          to label %80 unwind label %90

80:                                               ; preds = %75
  %81 = bitcast %"struct.boost::exception_detail::error_info_container"* %54 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %82 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %81, align 8, !tbaa !8
  %83 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %82, i64 4
  %84 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %83, align 8
  %85 = invoke zeroext i1 %84(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %54)
          to label %89 unwind label %86

86:                                               ; preds = %80
  %87 = landingpad { i8*, i32 }
          catch i8* null
  %88 = extractvalue { i8*, i32 } %87, 0
  call void @__clang_call_terminate(i8* %88) #24
  unreachable

89:                                               ; preds = %80, %73
  ret void

90:                                               ; preds = %75, %67
  %91 = landingpad { i8*, i32 }
          cleanup
  br label %92

92:                                               ; preds = %90, %50
  %93 = phi %"struct.boost::exception_detail::error_info_container"* [ %54, %90 ], [ %51, %50 ]
  %94 = phi { i8*, i32 } [ %91, %90 ], [ %52, %50 ]
  %95 = icmp eq %"struct.boost::exception_detail::error_info_container"* %93, null
  br i1 %95, label %105, label %96

96:                                               ; preds = %92
  %97 = bitcast %"struct.boost::exception_detail::error_info_container"* %93 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %98 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %97, align 8, !tbaa !8
  %99 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %98, i64 4
  %100 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %99, align 8
  %101 = invoke zeroext i1 %100(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %93)
          to label %105 unwind label %102

102:                                              ; preds = %96
  %103 = landingpad { i8*, i32 }
          catch i8* null
  %104 = extractvalue { i8*, i32 } %103, 0
  call void @__clang_call_terminate(i8* %104) #24
  unreachable

105:                                              ; preds = %96, %92
  resume { i8*, i32 } %94
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED0Ev(%"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !8
  %3 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %4 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %3, align 8, !tbaa !61
  %5 = icmp eq %"struct.boost::exception_detail::error_info_container"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.boost::exception_detail::error_info_container"* %4 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %8 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %7, align 8, !tbaa !8
  %9 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %8, i64 4
  %10 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %9, align 8
  %11 = invoke zeroext i1 %10(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %4)
          to label %12 unwind label %14

12:                                               ; preds = %6
  br i1 %11, label %13, label %17

13:                                               ; preds = %12
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %3, align 8, !tbaa !61
  br label %17

14:                                               ; preds = %6
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  tail call void @__clang_call_terminate(i8* %16) #24
  unreachable

17:                                               ; preds = %1, %12, %13
  %18 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %18) #20
  %19 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to i8*
  tail call void @_ZdlPv(i8* nonnull %19) #25
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr dso_local i8* @_ZNK5boost12bad_any_cast4whatEv(%"class.boost::bad_any_cast"* nonnull align 8 dereferenceable(8) %0) unnamed_addr #14 comdat align 2 {
  ret i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0)
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local %"class.boost::exception_detail::clone_base"* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE5cloneEv(%"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %0) unnamed_addr #15 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = tail call noalias nonnull dereferenceable(56) i8* @_Znwm(i64 56) #23
  %3 = bitcast i8* %2 to %"class.boost::exception_detail::clone_impl"*
  invoke void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEC1ERKS5_NS5_9clone_tagE(%"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %3, %"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %0)
          to label %4 unwind label %12

4:                                                ; preds = %1
  %5 = bitcast i8* %2 to i8**
  %6 = load i8*, i8** %5, align 8, !tbaa !8
  %7 = getelementptr i8, i8* %6, i64 -24
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 %9
  %11 = bitcast i8* %10 to %"class.boost::exception_detail::clone_base"*
  ret %"class.boost::exception_detail::clone_base"* %11

12:                                               ; preds = %1
  %13 = landingpad { i8*, i32 }
          cleanup
  tail call void @_ZdlPv(i8* nonnull %2) #25
  resume { i8*, i32 } %13
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE7rethrowEv(%"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %0) unnamed_addr #15 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = tail call i8* @__cxa_allocate_exception(i64 56) #20
  %3 = bitcast i8* %2 to %"class.boost::exception_detail::clone_impl"*
  invoke void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEC1ERKS5_(%"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %3, %"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %0)
          to label %4 unwind label %5

4:                                                ; preds = %1
  tail call void @__cxa_throw(i8* %2, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev to i8*)) #21
  unreachable

5:                                                ; preds = %1
  %6 = landingpad { i8*, i32 }
          cleanup
  tail call void @__cxa_free_exception(i8* %2) #20
  resume { i8*, i32 } %6
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev(%"class.boost::exception_detail::clone_impl"* %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.boost::exception_detail::clone_base", %"class.boost::exception_detail::clone_base"* %2, i64 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.boost::exception_detail::clone_base", %"class.boost::exception_detail::clone_base"* %2, i64 2
  %5 = bitcast %"class.boost::exception_detail::clone_base"* %4 to %"struct.boost::exception_detail::error_info_container"**
  %6 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %5, align 8, !tbaa !61
  %7 = icmp eq %"struct.boost::exception_detail::error_info_container"* %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %1
  %9 = bitcast %"struct.boost::exception_detail::error_info_container"* %6 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %10 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %9, align 8, !tbaa !8
  %11 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %10, i64 4
  %12 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %11, align 8
  %13 = invoke zeroext i1 %12(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %6)
          to label %14 unwind label %16

14:                                               ; preds = %8
  br i1 %13, label %15, label %19

15:                                               ; preds = %14
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %5, align 8, !tbaa !61
  br label %19

16:                                               ; preds = %8
  %17 = landingpad { i8*, i32 }
          catch i8* null
  %18 = extractvalue { i8*, i32 } %17, 0
  tail call void @__clang_call_terminate(i8* %18) #24
  unreachable

19:                                               ; preds = %1, %14, %15
  %20 = bitcast %"class.boost::exception_detail::clone_base"* %2 to %"class.std::bad_cast"*
  tail call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %20) #20
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED0Ev(%"class.boost::exception_detail::clone_impl"* %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.boost::exception_detail::clone_base", %"class.boost::exception_detail::clone_base"* %2, i64 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.boost::exception_detail::clone_base", %"class.boost::exception_detail::clone_base"* %2, i64 2
  %5 = bitcast %"class.boost::exception_detail::clone_base"* %4 to %"struct.boost::exception_detail::error_info_container"**
  %6 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %5, align 8, !tbaa !61
  %7 = icmp eq %"struct.boost::exception_detail::error_info_container"* %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %1
  %9 = bitcast %"struct.boost::exception_detail::error_info_container"* %6 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %10 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %9, align 8, !tbaa !8
  %11 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %10, i64 4
  %12 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %11, align 8
  %13 = invoke zeroext i1 %12(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %6)
          to label %14 unwind label %16

14:                                               ; preds = %8
  br i1 %13, label %15, label %19

15:                                               ; preds = %14
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %5, align 8, !tbaa !61
  br label %19

16:                                               ; preds = %8
  %17 = landingpad { i8*, i32 }
          catch i8* null
  %18 = extractvalue { i8*, i32 } %17, 0
  tail call void @__clang_call_terminate(i8* %18) #24
  unreachable

19:                                               ; preds = %1, %14, %15
  %20 = bitcast %"class.boost::exception_detail::clone_base"* %2 to %"class.std::bad_cast"*
  tail call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %20) #20
  %21 = bitcast %"class.boost::exception_detail::clone_base"* %2 to i8*
  tail call void @_ZdlPv(i8* nonnull %21) #25
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local %"class.boost::exception_detail::clone_base"* @_ZTv0_n24_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE5cloneEv(%"class.boost::exception_detail::clone_impl"* %0) unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to i8*
  %3 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = tail call noalias nonnull dereferenceable(56) i8* @_Znwm(i64 56) #23
  %10 = bitcast i8* %9 to %"class.boost::exception_detail::clone_impl"*
  %11 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %10, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5boost16exception_detail10clone_baseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8, !tbaa !8
  %12 = bitcast i8* %9 to %"struct.boost::exception_detail::error_info_injector"*
  %13 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8, !tbaa !8
  %14 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %10, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %10, i64 0, i32 0, i32 1, i32 1, i32 0
  %16 = getelementptr inbounds i8, i8* %8, i64 16
  %17 = bitcast i8* %16 to %"struct.boost::exception_detail::error_info_container"**
  %18 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %17, align 8, !tbaa !61
  store %"struct.boost::exception_detail::error_info_container"* %18, %"struct.boost::exception_detail::error_info_container"** %15, align 8, !tbaa !61
  %19 = icmp eq %"struct.boost::exception_detail::error_info_container"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %1
  %21 = bitcast %"struct.boost::exception_detail::error_info_container"* %18 to void (%"struct.boost::exception_detail::error_info_container"*)***
  %22 = load void (%"struct.boost::exception_detail::error_info_container"*)**, void (%"struct.boost::exception_detail::error_info_container"*)*** %21, align 8, !tbaa !8
  %23 = getelementptr inbounds void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %22, i64 3
  %24 = load void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %23, align 8
  invoke void %24(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %18)
          to label %27 unwind label %25

25:                                               ; preds = %20
  %26 = landingpad { i8*, i32 }
          cleanup
  br label %53

27:                                               ; preds = %20, %1
  %28 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %10, i64 0, i32 0, i32 1, i32 2
  %29 = getelementptr inbounds i8, i8* %8, i64 24
  %30 = bitcast i8** %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(20) %30, i8* noundef nonnull align 8 dereferenceable(20) %29, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %13, align 8, !tbaa !8
  %31 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %10, i64 0, i32 0, i32 1
  %32 = getelementptr %"class.boost::exception.base", %"class.boost::exception.base"* %31, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %32, align 8, !tbaa !8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 2, i64 5) to i32 (...)**), i32 (...)*** %11, align 8, !tbaa !8
  %33 = bitcast %"class.boost::exception.base"* %31 to %"class.boost::exception"*
  %34 = getelementptr inbounds i8, i8* %8, i64 8
  %35 = bitcast i8* %34 to %"class.boost::exception"*
  invoke void @_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(%"class.boost::exception"* nonnull %33, %"class.boost::exception"* nonnull %35)
          to label %56 unwind label %36

36:                                               ; preds = %27
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %12, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8, !tbaa !8
  %39 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %12, i64 0, i32 1, i32 1, i32 0
  %40 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %39, align 8, !tbaa !61
  %41 = icmp eq %"struct.boost::exception_detail::error_info_container"* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %36
  %43 = bitcast %"struct.boost::exception_detail::error_info_container"* %40 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %44 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %43, align 8, !tbaa !8
  %45 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %44, i64 4
  %46 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %45, align 8
  %47 = invoke zeroext i1 %46(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %40)
          to label %48 unwind label %50

48:                                               ; preds = %42
  br i1 %47, label %49, label %53

49:                                               ; preds = %48
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %39, align 8, !tbaa !61
  br label %53

50:                                               ; preds = %42
  %51 = landingpad { i8*, i32 }
          catch i8* null
  %52 = extractvalue { i8*, i32 } %51, 0
  tail call void @__clang_call_terminate(i8* %52) #24
  unreachable

53:                                               ; preds = %49, %48, %36, %25
  %54 = phi { i8*, i32 } [ %26, %25 ], [ %37, %36 ], [ %37, %48 ], [ %37, %49 ]
  %55 = bitcast i8* %9 to %"class.std::bad_cast"*
  tail call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %55) #20
  tail call void @_ZdlPv(i8* nonnull %9) #25
  resume { i8*, i32 } %54

56:                                               ; preds = %27
  %57 = bitcast i8* %9 to i8**
  %58 = load i8*, i8** %57, align 8, !tbaa !8
  %59 = getelementptr i8, i8* %58, i64 -24
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds i8, i8* %9, i64 %61
  %63 = bitcast i8* %62 to %"class.boost::exception_detail::clone_base"*
  ret %"class.boost::exception_detail::clone_base"* %63
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZTv0_n32_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEE7rethrowEv(%"class.boost::exception_detail::clone_impl"* %0) unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to i8*
  %3 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -32
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to %"class.boost::exception_detail::clone_impl"*
  %10 = tail call i8* @__cxa_allocate_exception(i64 56) #20
  %11 = bitcast i8* %10 to %"class.boost::exception_detail::clone_impl"*
  invoke void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEC1ERKS5_(%"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %11, %"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %9)
          to label %12 unwind label %13

12:                                               ; preds = %1
  tail call void @__cxa_throw(i8* %10, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE to i8*), i8* bitcast (void (%"class.boost::exception_detail::clone_impl"*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev to i8*)) #21
  unreachable

13:                                               ; preds = %1
  %14 = landingpad { i8*, i32 }
          cleanup
  tail call void @__cxa_free_exception(i8* %10) #20
  resume { i8*, i32 } %14
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED1Ev(%"class.boost::exception_detail::clone_impl"* %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to i8*
  %3 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -40
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8, !tbaa !8
  %11 = getelementptr inbounds i8, i8* %8, i64 16
  %12 = bitcast i8* %11 to %"struct.boost::exception_detail::error_info_container"**
  %13 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %12, align 8, !tbaa !61
  %14 = icmp eq %"struct.boost::exception_detail::error_info_container"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %1
  %16 = bitcast %"struct.boost::exception_detail::error_info_container"* %13 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %17 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %16, align 8, !tbaa !8
  %18 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %17, i64 4
  %19 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %18, align 8
  %20 = invoke zeroext i1 %19(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %13)
          to label %21 unwind label %23

21:                                               ; preds = %15
  br i1 %20, label %22, label %26

22:                                               ; preds = %21
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %12, align 8, !tbaa !61
  br label %26

23:                                               ; preds = %15
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  tail call void @__clang_call_terminate(i8* %25) #24
  unreachable

26:                                               ; preds = %1, %21, %22
  %27 = bitcast i8* %8 to %"class.std::bad_cast"*
  tail call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %27) #20
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZTv0_n40_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEED0Ev(%"class.boost::exception_detail::clone_impl"* %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to i8*
  %3 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -40
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8, !tbaa !8
  %11 = getelementptr inbounds i8, i8* %8, i64 16
  %12 = bitcast i8* %11 to %"struct.boost::exception_detail::error_info_container"**
  %13 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %12, align 8, !tbaa !61
  %14 = icmp eq %"struct.boost::exception_detail::error_info_container"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %1
  %16 = bitcast %"struct.boost::exception_detail::error_info_container"* %13 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %17 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %16, align 8, !tbaa !8
  %18 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %17, i64 4
  %19 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %18, align 8
  %20 = invoke zeroext i1 %19(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %13)
          to label %21 unwind label %23

21:                                               ; preds = %15
  br i1 %20, label %22, label %26

22:                                               ; preds = %21
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %12, align 8, !tbaa !61
  br label %26

23:                                               ; preds = %15
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  tail call void @__clang_call_terminate(i8* %25) #24
  unreachable

26:                                               ; preds = %1, %21, %22
  %27 = bitcast i8* %8 to %"class.std::bad_cast"*
  tail call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %27) #20
  tail call void @_ZdlPv(i8* nonnull %8) #25
  ret void
}

declare dso_local void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail10clone_baseD2Ev(%"class.boost::exception_detail::clone_base"* nonnull align 8 dereferenceable(8) %0) unnamed_addr #12 comdat align 2 {
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail10clone_baseD0Ev(%"class.boost::exception_detail::clone_base"* nonnull align 8 dereferenceable(8) %0) unnamed_addr #12 comdat align 2 {
  tail call void @llvm.trap() #24
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #16

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail19error_info_injectorINS_12bad_any_castEED0Ev(%"struct.boost::exception_detail::error_info_injector"* nonnull align 8 dereferenceable(44) %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !8
  %3 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %0, i64 0, i32 1, i32 1, i32 0
  %4 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %3, align 8, !tbaa !61
  %5 = icmp eq %"struct.boost::exception_detail::error_info_container"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.boost::exception_detail::error_info_container"* %4 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %8 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %7, align 8, !tbaa !8
  %9 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %8, i64 4
  %10 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %9, align 8
  %11 = invoke zeroext i1 %10(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %4)
          to label %12 unwind label %14

12:                                               ; preds = %6
  br i1 %11, label %13, label %17

13:                                               ; preds = %12
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %3, align 8, !tbaa !61
  br label %17

14:                                               ; preds = %6
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  tail call void @__clang_call_terminate(i8* %16) #24
  unreachable

17:                                               ; preds = %1, %12, %13
  %18 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %18) #20
  %19 = bitcast %"struct.boost::exception_detail::error_info_injector"* %0 to i8*
  tail call void @_ZdlPv(i8* nonnull %19) #25
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZThn8_N5boost16exception_detail19error_info_injectorINS_12bad_any_castEED1Ev(%"struct.boost::exception_detail::error_info_injector"* %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %0, i64 -1, i32 1, i32 4
  %3 = getelementptr inbounds i32, i32* %2, i64 2
  %4 = bitcast i32* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !8
  %5 = getelementptr inbounds i32, i32* %2, i64 4
  %6 = bitcast i32* %5 to %"struct.boost::exception_detail::error_info_container"**
  %7 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %6, align 8, !tbaa !61
  %8 = icmp eq %"struct.boost::exception_detail::error_info_container"* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %1
  %10 = bitcast %"struct.boost::exception_detail::error_info_container"* %7 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %11 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %10, align 8, !tbaa !8
  %12 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %11, i64 4
  %13 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %12, align 8
  %14 = invoke zeroext i1 %13(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %7)
          to label %15 unwind label %17

15:                                               ; preds = %9
  br i1 %14, label %16, label %20

16:                                               ; preds = %15
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %6, align 8, !tbaa !61
  br label %20

17:                                               ; preds = %9
  %18 = landingpad { i8*, i32 }
          catch i8* null
  %19 = extractvalue { i8*, i32 } %18, 0
  tail call void @__clang_call_terminate(i8* %19) #24
  unreachable

20:                                               ; preds = %1, %15, %16
  %21 = bitcast i32* %2 to %"class.std::bad_cast"*
  tail call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %21) #20
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZThn8_N5boost16exception_detail19error_info_injectorINS_12bad_any_castEED0Ev(%"struct.boost::exception_detail::error_info_injector"* %0) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.boost::exception_detail::error_info_injector", %"struct.boost::exception_detail::error_info_injector"* %0, i64 -1, i32 1, i32 4
  %3 = getelementptr inbounds i32, i32* %2, i64 2
  %4 = bitcast i32* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !8
  %5 = getelementptr inbounds i32, i32* %2, i64 4
  %6 = bitcast i32* %5 to %"struct.boost::exception_detail::error_info_container"**
  %7 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %6, align 8, !tbaa !61
  %8 = icmp eq %"struct.boost::exception_detail::error_info_container"* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %1
  %10 = bitcast %"struct.boost::exception_detail::error_info_container"* %7 to i1 (%"struct.boost::exception_detail::error_info_container"*)***
  %11 = load i1 (%"struct.boost::exception_detail::error_info_container"*)**, i1 (%"struct.boost::exception_detail::error_info_container"*)*** %10, align 8, !tbaa !8
  %12 = getelementptr inbounds i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %11, i64 4
  %13 = load i1 (%"struct.boost::exception_detail::error_info_container"*)*, i1 (%"struct.boost::exception_detail::error_info_container"*)** %12, align 8
  %14 = invoke zeroext i1 %13(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %7)
          to label %15 unwind label %17

15:                                               ; preds = %9
  br i1 %14, label %16, label %20

16:                                               ; preds = %15
  store %"struct.boost::exception_detail::error_info_container"* null, %"struct.boost::exception_detail::error_info_container"** %6, align 8, !tbaa !61
  br label %20

17:                                               ; preds = %9
  %18 = landingpad { i8*, i32 }
          catch i8* null
  %19 = extractvalue { i8*, i32 } %18, 0
  tail call void @__clang_call_terminate(i8* %19) #24
  unreachable

20:                                               ; preds = %1, %15, %16
  %21 = bitcast i32* %2 to %"class.std::bad_cast"*
  tail call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %21) #20
  %22 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* nonnull %22) #25
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5boost12bad_any_castD0Ev(%"class.boost::bad_any_cast"* nonnull align 8 dereferenceable(8) %0) unnamed_addr #17 comdat align 2 {
  %2 = getelementptr inbounds %"class.boost::bad_any_cast", %"class.boost::bad_any_cast"* %0, i64 0, i32 0
  tail call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %2) #20
  %3 = bitcast %"class.boost::bad_any_cast"* %0 to i8*
  tail call void @_ZdlPv(i8* nonnull %3) #25
  ret void
}

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #18

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEC1ERKS5_NS5_9clone_tagE(%"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %0, %"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %1) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5boost16exception_detail10clone_baseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !8
  %4 = bitcast %"class.boost::exception_detail::clone_impl"* %0 to %"struct.boost::exception_detail::error_info_injector"*
  %5 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %8 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %1, i64 0, i32 0, i32 1, i32 1, i32 0
  %9 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %8, align 8, !tbaa !61
  store %"struct.boost::exception_detail::error_info_container"* %9, %"struct.boost::exception_detail::error_info_container"** %7, align 8, !tbaa !61
  %10 = icmp eq %"struct.boost::exception_detail::error_info_container"* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %2
  %12 = bitcast %"struct.boost::exception_detail::error_info_container"* %9 to void (%"struct.boost::exception_detail::error_info_container"*)***
  %13 = load void (%"struct.boost::exception_detail::error_info_container"*)**, void (%"struct.boost::exception_detail::error_info_container"*)*** %12, align 8, !tbaa !8
  %14 = getelementptr inbounds void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %13, i64 3
  %15 = load void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %14, align 8
  invoke void %15(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %9)
          to label %19 unwind label %16

16:                                               ; preds = %11
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %18) #20
  br label %32

19:                                               ; preds = %11, %2
  %20 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 2
  %21 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %1, i64 0, i32 0, i32 1, i32 2
  %22 = bitcast i8** %20 to i8*
  %23 = bitcast i8** %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(20) %22, i8* noundef nonnull align 8 dereferenceable(20) %23, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !8
  %24 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr %"class.boost::exception.base", %"class.boost::exception.base"* %24, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %25, align 8, !tbaa !8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 2, i64 5) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !8
  %26 = bitcast %"class.boost::exception.base"* %24 to %"class.boost::exception"*
  %27 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %1, i64 0, i32 0, i32 1
  %28 = bitcast %"class.boost::exception.base"* %27 to %"class.boost::exception"*
  invoke void @_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(%"class.boost::exception"* nonnull %26, %"class.boost::exception"* nonnull %28)
          to label %29 unwind label %30

29:                                               ; preds = %19
  ret void

30:                                               ; preds = %19
  %31 = landingpad { i8*, i32 }
          cleanup
  tail call void @_ZN5boost16exception_detail19error_info_injectorINS_12bad_any_castEED2Ev(%"struct.boost::exception_detail::error_info_injector"* nonnull align 8 dereferenceable(44) %4) #20
  br label %32

32:                                               ; preds = %16, %30
  %33 = phi { i8*, i32 } [ %31, %30 ], [ %17, %16 ]
  resume { i8*, i32 } %33
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEC1ERKS5_(%"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %0, %"class.boost::exception_detail::clone_impl"* nonnull align 8 dereferenceable(44) %1) unnamed_addr #13 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5boost16exception_detail10clone_baseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5boost12bad_any_castE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %7 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %1, i64 0, i32 0, i32 1, i32 1, i32 0
  %8 = load %"struct.boost::exception_detail::error_info_container"*, %"struct.boost::exception_detail::error_info_container"** %7, align 8, !tbaa !61
  store %"struct.boost::exception_detail::error_info_container"* %8, %"struct.boost::exception_detail::error_info_container"** %6, align 8, !tbaa !61
  %9 = icmp eq %"struct.boost::exception_detail::error_info_container"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %2
  %11 = bitcast %"struct.boost::exception_detail::error_info_container"* %8 to void (%"struct.boost::exception_detail::error_info_container"*)***
  %12 = load void (%"struct.boost::exception_detail::error_info_container"*)**, void (%"struct.boost::exception_detail::error_info_container"*)*** %11, align 8, !tbaa !8
  %13 = getelementptr inbounds void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %12, i64 3
  %14 = load void (%"struct.boost::exception_detail::error_info_container"*)*, void (%"struct.boost::exception_detail::error_info_container"*)** %13, align 8
  invoke void %14(%"struct.boost::exception_detail::error_info_container"* nonnull align 8 dereferenceable(8) %8)
          to label %18 unwind label %15

15:                                               ; preds = %10
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNSt8bad_castD2Ev(%"class.std::bad_cast"* nonnull align 8 dereferenceable(8) %17) #20
  resume { i8*, i32 } %16

18:                                               ; preds = %10, %2
  %19 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %0, i64 0, i32 0, i32 1, i32 2
  %20 = getelementptr inbounds %"class.boost::exception_detail::clone_impl", %"class.boost::exception_detail::clone_impl"* %1, i64 0, i32 0, i32 1, i32 2
  %21 = bitcast i8** %19 to i8*
  %22 = bitcast i8** %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(20) %21, i8* noundef nonnull align 8 dereferenceable(20) %22, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [4 x i8*], [9 x i8*] }, { [8 x i8*], [4 x i8*], [9 x i8*] }* @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_12bad_any_castEEEEE, i64 0, inrange i32 2, i64 5) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !8
  ret void
}

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.boost::any::holder"* nonnull align 8 dereferenceable(40) %0) unnamed_addr #17 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !8
  %3 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8, !tbaa !18
  %5 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %0, i64 0, i32 1, i32 2
  %6 = bitcast %union.anon* %5 to i8*
  %7 = icmp eq i8* %4, %6
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  tail call void @_ZdlPv(i8* %4) #20
  br label %9

9:                                                ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED0Ev(%"class.boost::any::holder"* nonnull align 8 dereferenceable(40) %0) unnamed_addr #17 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !8
  %3 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8, !tbaa !18
  %5 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %0, i64 0, i32 1, i32 2
  %6 = bitcast %union.anon* %5 to i8*
  %7 = icmp eq i8* %4, %6
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  tail call void @_ZdlPv(i8* %4) #20
  br label %9

9:                                                ; preds = %1, %8
  %10 = bitcast %"class.boost::any::holder"* %0 to i8*
  tail call void @_ZdlPv(i8* nonnull %10) #25
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(16) %"class.std::type_info"* @_ZNK5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4typeEv(%"class.boost::any::holder"* nonnull align 8 dereferenceable(40) %0) unnamed_addr #12 comdat align 2 {
  ret %"class.std::type_info"* bitcast ({ i8*, i8* }* @_ZTINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE to %"class.std::type_info"*)
}

; Function Attrs: uwtable
define linkonce_odr dso_local %"class.boost::any::placeholder"* @_ZNK5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5cloneEv(%"class.boost::any::holder"* nonnull align 8 dereferenceable(40) %0) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca i64, align 8
  %3 = tail call noalias nonnull dereferenceable(40) i8* @_Znwm(i64 40) #23
  %4 = bitcast i8* %3 to %"class.boost::any::holder"*
  %5 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5boost3any6holderINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %4, i64 0, i32 1
  %7 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %4, i64 0, i32 1, i32 2
  %8 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  store %union.anon* %7, %union.anon** %8, align 8, !tbaa !13
  %9 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !tbaa !18
  %11 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %0, i64 0, i32 1, i32 1
  %12 = load i64, i64* %11, align 8, !tbaa !15
  %13 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #20
  store i64 %12, i64* %2, align 8, !tbaa !24
  %14 = icmp ugt i64 %12, 15
  br i1 %14, label %17, label %15

15:                                               ; preds = %1
  %16 = bitcast %union.anon* %7 to i8*
  br label %23

17:                                               ; preds = %1
  %18 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64* nonnull align 8 dereferenceable(8) %2, i64 0)
          to label %19 unwind label %35

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  store i8* %18, i8** %20, align 8, !tbaa !18
  %21 = load i64, i64* %2, align 8, !tbaa !24
  %22 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %4, i64 0, i32 1, i32 2, i32 0
  store i64 %21, i64* %22, align 8, !tbaa !12
  br label %23

23:                                               ; preds = %19, %15
  %24 = phi i8* [ %16, %15 ], [ %18, %19 ]
  switch i64 %12, label %27 [
    i64 1, label %25
    i64 0, label %28
  ]

25:                                               ; preds = %23
  %26 = load i8, i8* %10, align 1, !tbaa !12
  store i8 %26, i8* %24, align 1, !tbaa !12
  br label %28

27:                                               ; preds = %23
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %10, i64 %12, i1 false) #20
  br label %28

28:                                               ; preds = %27, %25, %23
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %30 = load i64, i64* %2, align 8, !tbaa !24
  %31 = getelementptr inbounds %"class.boost::any::holder", %"class.boost::any::holder"* %4, i64 0, i32 1, i32 1
  store i64 %30, i64* %31, align 8, !tbaa !15
  %32 = load i8*, i8** %29, align 8, !tbaa !18
  %33 = getelementptr inbounds i8, i8* %32, i64 %30
  store i8 0, i8* %33, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #20
  %34 = getelementptr %"class.boost::any::holder", %"class.boost::any::holder"* %4, i64 0, i32 0
  ret %"class.boost::any::placeholder"* %34

35:                                               ; preds = %17
  %36 = landingpad { i8*, i32 }
          cleanup
  call void @_ZdlPv(i8* nonnull %3) #25
  resume { i8*, i32 } %36
}

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #19

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #19

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nofree nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { noinline noreturn nounwind }
attributes #5 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #8 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { inlinehint noreturn uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #11 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { inlinehint uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { mustprogress nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { cold noreturn nounwind }
attributes #17 = { inlinehint nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #20 = { nounwind }
attributes #21 = { noreturn }
attributes #22 = { nounwind readonly willreturn }
attributes #23 = { builtin allocsize(0) }
attributes #24 = { noreturn nounwind }
attributes #25 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSN5boost3anyE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !9, i64 0}
!9 = !{!"vtable pointer", !7, i64 0}
!10 = !{!11, !5, i64 8}
!11 = !{!"_ZTSSt9type_info", !5, i64 8}
!12 = !{!6, !6, i64 0}
!13 = !{!14, !5, i64 0}
!14 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!15 = !{!16, !17, i64 8}
!16 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !14, i64 0, !17, i64 8, !6, i64 16}
!17 = !{!"long", !6, i64 0}
!18 = !{!16, !5, i64 0}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.mustprogress"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!23 = distinct !{!23, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!24 = !{!17, !17, i64 0}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_: argument 0"}
!27 = distinct !{!27, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!30 = distinct !{!30, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_: argument 0"}
!33 = distinct !{!33, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_"}
!34 = distinct !{!34, !20}
!35 = !{!36, !36, i64 0}
!36 = !{!"int", !6, i64 0}
!37 = !{!38, !38, i64 0}
!38 = !{!"double", !6, i64 0}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!41 = distinct !{!41, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_: argument 0"}
!44 = distinct !{!44, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!47 = distinct !{!47, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_: argument 0"}
!50 = distinct !{!50, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_"}
!51 = distinct !{!51, !20}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN5boost17enable_error_infoINS_12bad_any_castEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_: argument 0"}
!54 = distinct !{!54, !"_ZN5boost17enable_error_infoINS_12bad_any_castEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_"}
!55 = !{!56, !36, i64 32}
!56 = !{!"_ZTSN5boost9exceptionE", !57, i64 8, !5, i64 16, !5, i64 24, !36, i64 32}
!57 = !{!"_ZTSN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEE", !5, i64 0}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_12bad_any_castEEEEENS1_10clone_implIT_EERKS6_: argument 0"}
!60 = distinct !{!60, !"_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_12bad_any_castEEEEENS1_10clone_implIT_EERKS6_"}
!61 = !{!57, !5, i64 0}
!62 = !{!56, !5, i64 24}
!63 = !{!56, !5, i64 16}
