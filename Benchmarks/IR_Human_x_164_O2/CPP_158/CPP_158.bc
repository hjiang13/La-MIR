; ModuleID = '../../Human_xBenchmarks_164/CPP_158/CPP_158.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_158/CPP_158.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }

; Function Attrs: uwtable
define dso_local void @_Z8find_maxSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::vector"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %6, %union.anon** %7, align 8, !tbaa !3
  %8 = bitcast %union.anon* %6 to i8*
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %10, align 8, !tbaa !8
  store i8 0, i8* %8, align 8, !tbaa !11
  %11 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %15 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  %16 = bitcast %union.anon* %14 to i8*
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %19 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %21 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  %22 = bitcast i64* %3 to i8*
  %23 = bitcast %union.anon* %20 to i8*
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %28 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %11, align 8, !tbaa !12
  %29 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8, !tbaa !14
  %30 = icmp eq %"class.std::__cxx11::basic_string"* %28, %29
  br i1 %30, label %248, label %31

31:                                               ; preds = %2
  %32 = bitcast i64* %26 to <2 x i64>*
  %33 = bitcast i64* %18 to <2 x i64>*
  br label %34

34:                                               ; preds = %31, %230
  %35 = phi %"class.std::__cxx11::basic_string"* [ %233, %230 ], [ %29, %31 ]
  %36 = phi i64 [ %231, %230 ], [ 0, %31 ]
  %37 = phi i32 [ %226, %230 ], [ 0, %31 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #7
  store %union.anon* %14, %union.anon** %15, align 8, !tbaa !3
  store i64 0, i64* %18, align 8, !tbaa !8
  store i8 0, i8* %16, align 8, !tbaa !11
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %36, i32 1
  %39 = load i64, i64* %38, align 8, !tbaa !8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %49

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %35, i64 %36
  %43 = sext i32 %37 to i64
  br label %191

44:                                               ; preds = %182
  %45 = load i64, i64* %18, align 8, !tbaa !8
  %46 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %183, i64 %36
  %47 = sext i32 %37 to i64
  %48 = icmp ugt i64 %45, %47
  br i1 %48, label %218, label %191

49:                                               ; preds = %34, %188
  %50 = phi %"class.std::__cxx11::basic_string"* [ %183, %188 ], [ %35, %34 ]
  %51 = phi i64 [ %190, %188 ], [ 0, %34 ]
  %52 = phi i8* [ %189, %188 ], [ %16, %34 ]
  %53 = phi i64 [ %184, %188 ], [ 0, %34 ]
  %54 = getelementptr inbounds i8, i8* %52, i64 %51
  %55 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %50, i64 %36, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8, !tbaa !15
  %57 = getelementptr inbounds i8, i8* %56, i64 %53
  %58 = ptrtoint i8* %54 to i64
  %59 = icmp sgt i64 %51, 3
  br i1 %59, label %60, label %84

60:                                               ; preds = %49
  %61 = lshr i64 %51, 2
  %62 = load i8, i8* %57, align 1, !tbaa !11
  br label %63

63:                                               ; preds = %80, %60
  %64 = phi i64 [ %61, %60 ], [ %82, %80 ]
  %65 = phi i8* [ %52, %60 ], [ %81, %80 ]
  %66 = load i8, i8* %65, align 1, !tbaa !11
  %67 = icmp eq i8 %66, %62
  br i1 %67, label %118, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds i8, i8* %65, i64 1
  %70 = load i8, i8* %69, align 1, !tbaa !11
  %71 = icmp eq i8 %70, %62
  br i1 %71, label %116, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds i8, i8* %65, i64 2
  %74 = load i8, i8* %73, align 1, !tbaa !11
  %75 = icmp eq i8 %74, %62
  br i1 %75, label %114, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds i8, i8* %65, i64 3
  %78 = load i8, i8* %77, align 1, !tbaa !11
  %79 = icmp eq i8 %78, %62
  br i1 %79, label %112, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds i8, i8* %65, i64 4
  %82 = add nsw i64 %64, -1
  %83 = icmp sgt i64 %64, 1
  br i1 %83, label %63, label %84, !llvm.loop !16

84:                                               ; preds = %80, %49
  %85 = phi i8* [ %52, %49 ], [ %81, %80 ]
  %86 = ptrtoint i8* %85 to i64
  %87 = sub i64 %58, %86
  switch i64 %87, label %88 [
    i64 3, label %94
    i64 2, label %92
    i64 1, label %90
  ]

88:                                               ; preds = %84
  %89 = load i8, i8* %57, align 1, !tbaa !11
  br label %122

90:                                               ; preds = %84
  %91 = load i8, i8* %57, align 1, !tbaa !11
  br label %107

92:                                               ; preds = %84
  %93 = load i8, i8* %57, align 1, !tbaa !11
  br label %100

94:                                               ; preds = %84
  %95 = load i8, i8* %85, align 1, !tbaa !11
  %96 = load i8, i8* %57, align 1, !tbaa !11
  %97 = icmp eq i8 %95, %96
  br i1 %97, label %118, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds i8, i8* %85, i64 1
  br label %100

100:                                              ; preds = %98, %92
  %101 = phi i8 [ %93, %92 ], [ %96, %98 ]
  %102 = phi i8* [ %85, %92 ], [ %99, %98 ]
  %103 = load i8, i8* %102, align 1, !tbaa !11
  %104 = icmp eq i8 %103, %101
  br i1 %104, label %118, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds i8, i8* %102, i64 1
  br label %107

107:                                              ; preds = %105, %90
  %108 = phi i8 [ %91, %90 ], [ %101, %105 ]
  %109 = phi i8* [ %85, %90 ], [ %106, %105 ]
  %110 = load i8, i8* %109, align 1, !tbaa !11
  %111 = icmp eq i8 %110, %108
  br i1 %111, label %118, label %122

112:                                              ; preds = %76
  %113 = getelementptr inbounds i8, i8* %65, i64 3
  br label %118

114:                                              ; preds = %72
  %115 = getelementptr inbounds i8, i8* %65, i64 2
  br label %118

116:                                              ; preds = %68
  %117 = getelementptr inbounds i8, i8* %65, i64 1
  br label %118

118:                                              ; preds = %63, %112, %114, %116, %107, %100, %94
  %119 = phi i8 [ %95, %94 ], [ %101, %100 ], [ %108, %107 ], [ %62, %116 ], [ %62, %114 ], [ %62, %112 ], [ %62, %63 ]
  %120 = phi i8* [ %85, %94 ], [ %102, %100 ], [ %109, %107 ], [ %117, %116 ], [ %115, %114 ], [ %113, %112 ], [ %65, %63 ]
  %121 = icmp eq i8* %120, %54
  br i1 %121, label %122, label %182

122:                                              ; preds = %88, %107, %118
  %123 = phi i8 [ %89, %88 ], [ %108, %107 ], [ %119, %118 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !18)
  store %union.anon* %20, %union.anon** %21, align 8, !tbaa !3, !alias.scope !18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #7, !noalias !18
  store i64 %51, i64* %3, align 8, !tbaa !21, !noalias !18
  %124 = icmp ugt i64 %51, 15
  br i1 %124, label %125, label %129

125:                                              ; preds = %122
  %126 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %127 unwind label %178

127:                                              ; preds = %125
  store i8* %126, i8** %24, align 8, !tbaa !15, !alias.scope !18
  %128 = load i64, i64* %3, align 8, !tbaa !21, !noalias !18
  store i64 %128, i64* %25, align 8, !tbaa !11, !alias.scope !18
  br label %129

129:                                              ; preds = %122, %127
  %130 = phi i8* [ %126, %127 ], [ %23, %122 ]
  switch i64 %51, label %133 [
    i64 1, label %131
    i64 0, label %134
  ]

131:                                              ; preds = %129
  %132 = load i8, i8* %52, align 1, !tbaa !11
  store i8 %132, i8* %130, align 1, !tbaa !11
  br label %134

133:                                              ; preds = %129
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %130, i8* align 1 %52, i64 %51, i1 false) #7
  br label %134

134:                                              ; preds = %133, %131, %129
  %135 = load i64, i64* %3, align 8, !tbaa !21, !noalias !18
  store i64 %135, i64* %26, align 8, !tbaa !8, !alias.scope !18
  %136 = load i8*, i8** %24, align 8, !tbaa !15, !alias.scope !18
  %137 = getelementptr inbounds i8, i8* %136, i64 %135
  store i8 0, i8* %137, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #7, !noalias !18
  %138 = load i64, i64* %26, align 8, !tbaa !8, !alias.scope !18
  %139 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i64 %138, i64 0, i64 1, i8 signext %123)
          to label %145 unwind label %140

140:                                              ; preds = %134
  %141 = landingpad { i8*, i32 }
          cleanup
  %142 = load i8*, i8** %24, align 8, !tbaa !15, !alias.scope !18
  %143 = icmp eq i8* %142, %23
  br i1 %143, label %180, label %144

144:                                              ; preds = %140
  call void @_ZdlPv(i8* %142) #7
  br label %180

145:                                              ; preds = %134
  %146 = load i8*, i8** %24, align 8, !tbaa !15
  %147 = icmp eq i8* %146, %23
  br i1 %147, label %148, label %162

148:                                              ; preds = %145
  %149 = load i64, i64* %26, align 8, !tbaa !8
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %157, label %151

151:                                              ; preds = %148
  %152 = load i8*, i8** %17, align 8, !tbaa !15
  %153 = icmp eq i64 %149, 1
  br i1 %153, label %154, label %156

154:                                              ; preds = %151
  %155 = load i8, i8* %23, align 8, !tbaa !11
  store i8 %155, i8* %152, align 1, !tbaa !11
  br label %157

156:                                              ; preds = %151
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %152, i8* nonnull align 8 %23, i64 %149, i1 false) #7
  br label %157

157:                                              ; preds = %156, %154, %148
  %158 = load i64, i64* %26, align 8, !tbaa !8
  store i64 %158, i64* %18, align 8, !tbaa !8
  %159 = load i8*, i8** %17, align 8, !tbaa !15
  %160 = getelementptr inbounds i8, i8* %159, i64 %158
  store i8 0, i8* %160, align 1, !tbaa !11
  %161 = load i8*, i8** %24, align 8, !tbaa !15
  br label %171

162:                                              ; preds = %145
  %163 = load i8*, i8** %17, align 8, !tbaa !15
  %164 = icmp eq i8* %163, %16
  %165 = load i64, i64* %27, align 8
  store i8* %146, i8** %17, align 8, !tbaa !15
  %166 = load <2 x i64>, <2 x i64>* %32, align 8, !tbaa !11
  store <2 x i64> %166, <2 x i64>* %33, align 8, !tbaa !11
  %167 = icmp eq i8* %163, null
  %168 = or i1 %164, %167
  br i1 %168, label %170, label %169

169:                                              ; preds = %162
  store i8* %163, i8** %24, align 8, !tbaa !15
  store i64 %165, i64* %25, align 8, !tbaa !11
  br label %171

170:                                              ; preds = %162
  store %union.anon* %20, %union.anon** %21, align 8, !tbaa !15
  br label %171

171:                                              ; preds = %157, %169, %170
  %172 = phi i8* [ %161, %157 ], [ %163, %169 ], [ %23, %170 ]
  store i64 0, i64* %26, align 8, !tbaa !8
  store i8 0, i8* %172, align 1, !tbaa !11
  %173 = load i8*, i8** %24, align 8, !tbaa !15
  %174 = icmp eq i8* %173, %23
  br i1 %174, label %176, label %175

175:                                              ; preds = %171
  call void @_ZdlPv(i8* %173) #7
  br label %176

176:                                              ; preds = %171, %175
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #7
  %177 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8, !tbaa !14
  br label %182

178:                                              ; preds = %125
  %179 = landingpad { i8*, i32 }
          cleanup
  br label %180

180:                                              ; preds = %140, %144, %178
  %181 = phi { i8*, i32 } [ %179, %178 ], [ %141, %144 ], [ %141, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #7
  br label %239

182:                                              ; preds = %118, %176
  %183 = phi %"class.std::__cxx11::basic_string"* [ %50, %118 ], [ %177, %176 ]
  %184 = add nuw i64 %53, 1
  %185 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %183, i64 %36, i32 1
  %186 = load i64, i64* %185, align 8, !tbaa !8
  %187 = icmp ugt i64 %186, %184
  br i1 %187, label %188, label %44, !llvm.loop !22

188:                                              ; preds = %182
  %189 = load i8*, i8** %17, align 8, !tbaa !15
  %190 = load i64, i64* %18, align 8, !tbaa !8
  br label %49

191:                                              ; preds = %41, %44
  %192 = phi i64 [ %43, %41 ], [ %47, %44 ]
  %193 = phi %"class.std::__cxx11::basic_string"* [ %42, %41 ], [ %46, %44 ]
  %194 = phi i64 [ 0, %41 ], [ %186, %44 ]
  %195 = phi i64 [ 0, %41 ], [ %45, %44 ]
  %196 = icmp eq i64 %195, %192
  br i1 %196, label %197, label %225

197:                                              ; preds = %191
  %198 = load i64, i64* %10, align 8, !tbaa !8
  %199 = icmp ugt i64 %194, %198
  %200 = select i1 %199, i64 %198, i64 %194
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %208, label %202

202:                                              ; preds = %197
  %203 = load i8*, i8** %9, align 8, !tbaa !15
  %204 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %193, i64 0, i32 0, i32 0
  %205 = load i8*, i8** %204, align 8, !tbaa !15
  %206 = call i32 @memcmp(i8* %205, i8* %203, i64 %200) #7
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %202, %197
  %209 = sub i64 %194, %198
  %210 = icmp sgt i64 %209, -2147483648
  %211 = select i1 %210, i64 %209, i64 -2147483648
  %212 = icmp slt i64 %211, 2147483647
  %213 = select i1 %212, i64 %211, i64 2147483647
  %214 = trunc i64 %213 to i32
  br label %215

215:                                              ; preds = %202, %208
  %216 = phi i32 [ %206, %202 ], [ %214, %208 ]
  %217 = icmp slt i32 %216, 0
  br i1 %217, label %218, label %225

218:                                              ; preds = %215, %44
  %219 = phi %"class.std::__cxx11::basic_string"* [ %193, %215 ], [ %46, %44 ]
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %219)
          to label %220 unwind label %223

220:                                              ; preds = %218
  %221 = load i64, i64* %18, align 8, !tbaa !8
  %222 = trunc i64 %221 to i32
  br label %225

223:                                              ; preds = %218
  %224 = landingpad { i8*, i32 }
          cleanup
  br label %239

225:                                              ; preds = %220, %215, %191
  %226 = phi i32 [ %222, %220 ], [ %37, %215 ], [ %37, %191 ]
  %227 = load i8*, i8** %17, align 8, !tbaa !15
  %228 = icmp eq i8* %227, %16
  br i1 %228, label %230, label %229

229:                                              ; preds = %225
  call void @_ZdlPv(i8* %227) #7
  br label %230

230:                                              ; preds = %225, %229
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #7
  %231 = add nuw i64 %36, 1
  %232 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %11, align 8, !tbaa !12
  %233 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8, !tbaa !14
  %234 = ptrtoint %"class.std::__cxx11::basic_string"* %232 to i64
  %235 = ptrtoint %"class.std::__cxx11::basic_string"* %233 to i64
  %236 = sub i64 %234, %235
  %237 = ashr exact i64 %236, 5
  %238 = icmp ugt i64 %237, %231
  br i1 %238, label %34, label %248, !llvm.loop !23

239:                                              ; preds = %180, %223
  %240 = phi { i8*, i32 } [ %224, %223 ], [ %181, %180 ]
  %241 = load i8*, i8** %17, align 8, !tbaa !15
  %242 = icmp eq i8* %241, %16
  br i1 %242, label %244, label %243

243:                                              ; preds = %239
  call void @_ZdlPv(i8* %241) #7
  br label %244

244:                                              ; preds = %243, %239
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #7
  %245 = load i8*, i8** %9, align 8, !tbaa !15
  %246 = icmp eq i8* %245, %8
  br i1 %246, label %249, label %247

247:                                              ; preds = %244
  call void @_ZdlPv(i8* %245) #7
  br label %249

248:                                              ; preds = %230, %2
  ret void

249:                                              ; preds = %247, %244
  resume { i8*, i32 } %240
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare dso_local i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #6

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!13, !5, i64 8}
!13 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!14 = !{!13, !5, i64 0}
!15 = !{!9, !5, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.mustprogress"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!20 = distinct !{!20, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!21 = !{!10, !10, i64 0}
!22 = distinct !{!22, !17}
!23 = distinct !{!23, !17}
