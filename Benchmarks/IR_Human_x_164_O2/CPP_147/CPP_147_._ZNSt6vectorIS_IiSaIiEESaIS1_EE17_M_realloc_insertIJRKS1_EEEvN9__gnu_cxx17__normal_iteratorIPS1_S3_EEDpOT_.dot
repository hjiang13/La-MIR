digraph "CFG for '_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_' function" {
	label="CFG for '_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_' function";

	Node0x559932929de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%3:\l  %4 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 1\l  %5 = load %\"class.std::vector\"*, %\"class.std::vector\"** %4, align 8, !tbaa !3\l  %6 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 0\l  %7 = load %\"class.std::vector\"*, %\"class.std::vector\"** %6, align 8, !tbaa !8\l  %8 = ptrtoint %\"class.std::vector\"* %5 to i64\l  %9 = ptrtoint %\"class.std::vector\"* %7 to i64\l  %10 = sub i64 %8, %9\l  %11 = sdiv exact i64 %10, 24\l  %12 = icmp eq i64 %10, 9223372036854775800\l  br i1 %12, label %13, label %14\l|{<s0>T|<s1>F}}"];
	Node0x559932929de0:s0 -> Node0x559932929f50;
	Node0x559932929de0:s1 -> Node0x55993292a430;
	Node0x559932929f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%13:\l13:                                               \l  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds\l... ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #10\l  unreachable\l}"];
	Node0x55993292a430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%14:\l14:                                               \l  %15 = icmp eq i64 %10, 0\l  %16 = select i1 %15, i64 1, i64 %11\l  %17 = add nsw i64 %16, %11\l  %18 = icmp ult i64 %17, %11\l  %19 = icmp ugt i64 %17, 384307168202282325\l  %20 = or i1 %18, %19\l  %21 = select i1 %20, i64 384307168202282325, i64 %17\l  %22 = ptrtoint %\"class.std::vector\"* %1 to i64\l  %23 = sub i64 %22, %9\l  %24 = sdiv exact i64 %23, 24\l  %25 = icmp eq i64 %21, 0\l  br i1 %25, label %30, label %26\l|{<s0>T|<s1>F}}"];
	Node0x55993292a430:s0 -> Node0x55993292ac60;
	Node0x55993292a430:s1 -> Node0x55993292acb0;
	Node0x55993292acb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%26:\l26:                                               \l  %27 = mul nuw nsw i64 %21, 24\l  %28 = tail call noalias nonnull i8* @_Znwm(i64 %27) #11\l  %29 = bitcast i8* %28 to %\"class.std::vector\"*\l  br label %30\l}"];
	Node0x55993292acb0 -> Node0x55993292ac60;
	Node0x55993292ac60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%30:\l30:                                               \l  %31 = phi %\"class.std::vector\"* [ %29, %26 ], [ null, %14 ]\l  %32 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %31, i64 %24\l  %33 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %2,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %34 = load i32*, i32** %33, align 8, !tbaa !9\l  %35 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %2,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %36 = load i32*, i32** %35, align 8, !tbaa !11\l  %37 = ptrtoint i32* %34 to i64\l  %38 = ptrtoint i32* %36 to i64\l  %39 = sub i64 %37, %38\l  %40 = ashr exact i64 %39, 2\l  %41 = bitcast %\"class.std::vector\"* %32 to i8*\l  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %41, i8 0, i64 24, i1 false) #12\l  %42 = icmp eq i64 %39, 0\l  br i1 %42, label %56, label %43\l|{<s0>T|<s1>F}}"];
	Node0x55993292ac60:s0 -> Node0x55993292b900;
	Node0x55993292ac60:s1 -> Node0x55993292b950;
	Node0x55993292b950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%43:\l43:                                               \l  %44 = icmp ugt i64 %40, 2305843009213693951\l  br i1 %44, label %45, label %47\l|{<s0>T|<s1>F}}"];
	Node0x55993292b950:s0 -> Node0x55993292bae0;
	Node0x55993292b950:s1 -> Node0x55993292bb30;
	Node0x55993292bae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%45:\l45:                                               \l  invoke void @_ZSt17__throw_bad_allocv() #10\l          to label %46 unwind label %112\l}"];
	Node0x55993292bae0 -> Node0x55993292bc30;
	Node0x55993292bae0 -> Node0x55993292bc80;
	Node0x55993292bc30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%46:\l46:                                               \l  unreachable\l}"];
	Node0x55993292bb30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%47:\l47:                                               \l  %48 = invoke noalias nonnull i8* @_Znwm(i64 %39) #11\l          to label %49 unwind label %112\l}"];
	Node0x55993292bb30 -> Node0x55993292be30;
	Node0x55993292bb30 -> Node0x55993292bc80;
	Node0x55993292be30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%49:\l49:                                               \l  %50 = bitcast i8* %48 to i32*\l  %51 = load i32*, i32** %35, align 8, !tbaa !12\l  %52 = load i32*, i32** %33, align 8, !tbaa !12\l  %53 = ptrtoint i32* %52 to i64\l  %54 = ptrtoint i32* %51 to i64\l  %55 = sub i64 %53, %54\l  br label %56\l}"];
	Node0x55993292be30 -> Node0x55993292b900;
	Node0x55993292b900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%56:\l56:                                               \l  %57 = phi i64 [ %55, %49 ], [ 0, %30 ]\l  %58 = phi i32* [ %51, %49 ], [ %36, %30 ]\l  %59 = phi i32* [ %50, %49 ], [ null, %30 ]\l  %60 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %32, i64 0, i32 0, i32 0, i32 0, i32 0\l  store i32* %59, i32** %60, align 8, !tbaa !11\l  %61 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %31, i64 %24, i32 0, i32 0, i32 0, i32 1\l  store i32* %59, i32** %61, align 8, !tbaa !9\l  %62 = getelementptr inbounds i32, i32* %59, i64 %40\l  %63 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %31, i64 %24, i32 0, i32 0, i32 0, i32 2\l  store i32* %62, i32** %63, align 8, !tbaa !13\l  %64 = icmp eq i64 %57, 0\l  br i1 %64, label %68, label %65\l|{<s0>T|<s1>F}}"];
	Node0x55993292b900:s0 -> Node0x55993292ca90;
	Node0x55993292b900:s1 -> Node0x55993292cae0;
	Node0x55993292cae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%65:\l65:                                               \l  %66 = bitcast i32* %59 to i8*\l  %67 = bitcast i32* %58 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %67,\l... i64 %57, i1 false) #12\l  br label %68\l}"];
	Node0x55993292cae0 -> Node0x55993292ca90;
	Node0x55993292ca90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%68:\l68:                                               \l  %69 = ashr exact i64 %57, 2\l  %70 = getelementptr inbounds i32, i32* %59, i64 %69\l  store i32* %70, i32** %61, align 8, !tbaa !9\l  %71 = icmp eq %\"class.std::vector\"* %7, %1\l  br i1 %71, label %85, label %72\l|{<s0>T|<s1>F}}"];
	Node0x55993292ca90:s0 -> Node0x55993292d110;
	Node0x55993292ca90:s1 -> Node0x55993292d160;
	Node0x55993292d160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  %73 = phi %\"class.std::vector\"* [ %83, %72 ], [ %31, %68 ]\l  %74 = phi %\"class.std::vector\"* [ %82, %72 ], [ %7, %68 ]\l  %75 = bitcast %\"class.std::vector\"* %74 to \<2 x i32*\>*\l  %76 = load \<2 x i32*\>, \<2 x i32*\>* %75, align 8, !tbaa !12\l  %77 = bitcast %\"class.std::vector\"* %73 to \<2 x i32*\>*\l  store \<2 x i32*\> %76, \<2 x i32*\>* %77, align 8, !tbaa !12\l  %78 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %73, i64 0, i32 0, i32 0, i32 0, i32 2\l  %79 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %74, i64 0, i32 0, i32 0, i32 0, i32 2\l  %80 = load i32*, i32** %79, align 8, !tbaa !13\l  store i32* %80, i32** %78, align 8, !tbaa !13\l  %81 = bitcast %\"class.std::vector\"* %74 to i8*\l  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %81, i8 0, i64 24, i1 false) #12\l  %82 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %74, i64 1\l  %83 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %73, i64 1\l  %84 = icmp eq %\"class.std::vector\"* %82, %1\l  br i1 %84, label %85, label %72, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x55993292d160:s0 -> Node0x55993292d110;
	Node0x55993292d160:s1 -> Node0x55993292d160;
	Node0x55993292d110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%85:\l85:                                               \l  %86 = phi %\"class.std::vector\"* [ %31, %68 ], [ %83, %72 ]\l  %87 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %86, i64 1\l  %88 = icmp eq %\"class.std::vector\"* %5, %1\l  br i1 %88, label %102, label %89\l|{<s0>T|<s1>F}}"];
	Node0x55993292d110:s0 -> Node0x55993292fdc0;
	Node0x55993292d110:s1 -> Node0x55993292fe10;
	Node0x55993292fe10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%89:\l89:                                               \l  %90 = phi %\"class.std::vector\"* [ %100, %89 ], [ %87, %85 ]\l  %91 = phi %\"class.std::vector\"* [ %99, %89 ], [ %1, %85 ]\l  %92 = bitcast %\"class.std::vector\"* %91 to \<2 x i32*\>*\l  %93 = load \<2 x i32*\>, \<2 x i32*\>* %92, align 8, !tbaa !12\l  %94 = bitcast %\"class.std::vector\"* %90 to \<2 x i32*\>*\l  store \<2 x i32*\> %93, \<2 x i32*\>* %94, align 8, !tbaa !12\l  %95 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %90, i64 0, i32 0, i32 0, i32 0, i32 2\l  %96 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %91, i64 0, i32 0, i32 0, i32 0, i32 2\l  %97 = load i32*, i32** %96, align 8, !tbaa !13\l  store i32* %97, i32** %95, align 8, !tbaa !13\l  %98 = bitcast %\"class.std::vector\"* %91 to i8*\l  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %98, i8 0, i64 24, i1 false) #12\l  %99 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %91, i64 1\l  %100 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %90, i64 1\l  %101 = icmp eq %\"class.std::vector\"* %99, %5\l  br i1 %101, label %102, label %89, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x55993292fe10:s0 -> Node0x55993292fdc0;
	Node0x55993292fe10:s1 -> Node0x55993292fe10;
	Node0x55993292fdc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%102:\l102:                                              \l  %103 = phi %\"class.std::vector\"* [ %87, %85 ], [ %100, %89 ]\l  %104 = icmp eq %\"class.std::vector\"* %7, null\l  br i1 %104, label %107, label %105\l|{<s0>T|<s1>F}}"];
	Node0x55993292fdc0:s0 -> Node0x559932931160;
	Node0x55993292fdc0:s1 -> Node0x5599329311b0;
	Node0x5599329311b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%105:\l105:                                              \l  %106 = bitcast %\"class.std::vector\"* %7 to i8*\l  tail call void @_ZdlPv(i8* nonnull %106) #12\l  br label %107\l}"];
	Node0x5599329311b0 -> Node0x559932931160;
	Node0x559932931160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%107:\l107:                                              \l  %108 = getelementptr inbounds %\"class.std::vector.0\",\l... %\"class.std::vector.0\"* %0, i64 0, i32 0, i32 0, i32 0, i32 2\l  store %\"class.std::vector\"* %31, %\"class.std::vector\"** %6, align 8, !tbaa !8\l  store %\"class.std::vector\"* %103, %\"class.std::vector\"** %4, align 8, !tbaa\l... !3\l  %109 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %31, i64 %21\l  store %\"class.std::vector\"* %109, %\"class.std::vector\"** %108, align 8,\l... !tbaa !16\l  ret void\l}"];
	Node0x559932931840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%110:\l110:                                              \l  %111 = landingpad \{ i8*, i32 \}\l          cleanup\l  invoke void @__cxa_end_catch()\l          to label %117 unwind label %118\l}"];
	Node0x559932931840 -> Node0x5599329318e0;
	Node0x559932931840 -> Node0x559932931930;
	Node0x55993292bc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%112:\l112:                                              \l  %113 = landingpad \{ i8*, i32 \}\l          catch i8* null\l  %114 = extractvalue \{ i8*, i32 \} %113, 0\l  %115 = tail call i8* @__cxa_begin_catch(i8* %114) #12\l  %116 = bitcast %\"class.std::vector\"* %31 to i8*\l  tail call void @_ZdlPv(i8* nonnull %116) #12\l  invoke void @__cxa_rethrow() #10\l          to label %121 unwind label %110\l}"];
	Node0x55993292bc80 -> Node0x559932931e70;
	Node0x55993292bc80 -> Node0x559932931840;
	Node0x5599329318e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%117:\l117:                                              \l  resume \{ i8*, i32 \} %111\l}"];
	Node0x559932931930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%118:\l118:                                              \l  %119 = landingpad \{ i8*, i32 \}\l          catch i8* null\l  %120 = extractvalue \{ i8*, i32 \} %119, 0\l  tail call void @__clang_call_terminate(i8* %120) #13\l  unreachable\l}"];
	Node0x559932931e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#536edd70",label="{%121:\l121:                                              \l  unreachable\l}"];
}
