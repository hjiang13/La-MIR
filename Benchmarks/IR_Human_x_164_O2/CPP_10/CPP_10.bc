; ModuleID = '../../Human_xBenchmarks_164/CPP_10/CPP_10.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_10/CPP_10.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: uwtable
define dso_local zeroext i1 @_Z13is_palindromeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nocapture readonly %0) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca i64, align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8, !tbaa !3, !noalias !10
  %7 = ptrtoint i8* %6 to i64
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8, !tbaa !13, !noalias !10
  %10 = getelementptr inbounds i8, i8* %6, i64 %9
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %12 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  store %union.anon* %11, %union.anon** %12, align 8, !tbaa !14
  %13 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  store i64 %9, i64* %2, align 8, !tbaa !15
  %14 = icmp ugt i64 %9, 15
  br i1 %14, label %15, label %20

15:                                               ; preds = %1
  %16 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3, i64* nonnull align 8 dereferenceable(8) %2, i64 0)
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8, !tbaa !3
  %18 = load i64, i64* %2, align 8, !tbaa !15
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2, i32 0
  store i64 %18, i64* %19, align 8, !tbaa !16
  br label %23

20:                                               ; preds = %1
  %21 = bitcast %union.anon* %11 to i8*
  %22 = icmp eq i64 %9, 0
  br i1 %22, label %134, label %23

23:                                               ; preds = %15, %20
  %24 = phi i8* [ %16, %15 ], [ %21, %20 ]
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %26 = icmp ult i64 %9, 4
  br i1 %26, label %81, label %27

27:                                               ; preds = %23
  %28 = getelementptr i8, i8* %24, i64 %9
  %29 = icmp ult i8* %24, %10
  %30 = icmp ult i8* %6, %28
  %31 = and i1 %29, %30
  br i1 %31, label %81, label %32

32:                                               ; preds = %27
  %33 = icmp ult i64 %9, 32
  br i1 %33, label %62, label %34

34:                                               ; preds = %32
  %35 = and i64 %9, -32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %52, %36 ]
  %38 = getelementptr i8, i8* %24, i64 %37
  %39 = xor i64 %37, -1
  %40 = getelementptr i8, i8* %10, i64 %39
  %41 = getelementptr inbounds i8, i8* %40, i64 -15
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1, !tbaa !16, !alias.scope !17
  %44 = shufflevector <16 x i8> %43, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %45 = getelementptr inbounds i8, i8* %40, i64 -31
  %46 = bitcast i8* %45 to <16 x i8>*
  %47 = load <16 x i8>, <16 x i8>* %46, align 1, !tbaa !16, !alias.scope !17
  %48 = shufflevector <16 x i8> %47, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %49 = bitcast i8* %38 to <16 x i8>*
  store <16 x i8> %44, <16 x i8>* %49, align 1, !tbaa !16, !alias.scope !20, !noalias !17
  %50 = getelementptr i8, i8* %38, i64 16
  %51 = bitcast i8* %50 to <16 x i8>*
  store <16 x i8> %48, <16 x i8>* %51, align 1, !tbaa !16, !alias.scope !20, !noalias !17
  %52 = add nuw i64 %37, 32
  %53 = icmp eq i64 %52, %35
  br i1 %53, label %54, label %36, !llvm.loop !22

54:                                               ; preds = %36
  %55 = icmp eq i64 %9, %35
  br i1 %55, label %131, label %56

56:                                               ; preds = %54
  %57 = getelementptr i8, i8* %24, i64 %35
  %58 = sub i64 0, %35
  %59 = getelementptr i8, i8* %10, i64 %58
  %60 = and i64 %9, 28
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %81, label %62

62:                                               ; preds = %32, %56
  %63 = phi i64 [ %35, %56 ], [ 0, %32 ]
  %64 = and i64 %9, -4
  %65 = sub i64 0, %64
  %66 = getelementptr i8, i8* %10, i64 %65
  %67 = getelementptr i8, i8* %24, i64 %64
  br label %68

68:                                               ; preds = %68, %62
  %69 = phi i64 [ %63, %62 ], [ %77, %68 ]
  %70 = getelementptr i8, i8* %24, i64 %69
  %71 = sub nuw nsw i64 -4, %69
  %72 = getelementptr i8, i8* %10, i64 %71
  %73 = bitcast i8* %72 to <4 x i8>*
  %74 = load <4 x i8>, <4 x i8>* %73, align 1, !tbaa !16
  %75 = shufflevector <4 x i8> %74, <4 x i8> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %76 = bitcast i8* %70 to <4 x i8>*
  store <4 x i8> %75, <4 x i8>* %76, align 1, !tbaa !16
  %77 = add nuw i64 %69, 4
  %78 = icmp eq i64 %77, %64
  br i1 %78, label %79, label %68, !llvm.loop !25

79:                                               ; preds = %68
  %80 = icmp eq i64 %9, %64
  br i1 %80, label %131, label %81

81:                                               ; preds = %27, %23, %56, %79
  %82 = phi i8* [ %10, %23 ], [ %10, %27 ], [ %59, %56 ], [ %66, %79 ]
  %83 = phi i8* [ %24, %23 ], [ %24, %27 ], [ %57, %56 ], [ %67, %79 ]
  %84 = ptrtoint i8* %82 to i64
  %85 = sub i64 %84, %7
  %86 = xor i64 %7, -1
  %87 = add i64 %86, %84
  %88 = and i64 %85, 7
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %99, label %90

90:                                               ; preds = %81, %90
  %91 = phi i8* [ %94, %90 ], [ %82, %81 ]
  %92 = phi i8* [ %96, %90 ], [ %83, %81 ]
  %93 = phi i64 [ %97, %90 ], [ %88, %81 ]
  %94 = getelementptr inbounds i8, i8* %91, i64 -1
  %95 = load i8, i8* %94, align 1, !tbaa !16
  store i8 %95, i8* %92, align 1, !tbaa !16
  %96 = getelementptr inbounds i8, i8* %92, i64 1
  %97 = add i64 %93, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %90, !llvm.loop !26

99:                                               ; preds = %90, %81
  %100 = phi i8* [ %82, %81 ], [ %94, %90 ]
  %101 = phi i8* [ %83, %81 ], [ %96, %90 ]
  %102 = icmp ult i64 %87, 7
  br i1 %102, label %131, label %103

103:                                              ; preds = %99, %103
  %104 = phi i8* [ %127, %103 ], [ %100, %99 ]
  %105 = phi i8* [ %129, %103 ], [ %101, %99 ]
  %106 = getelementptr inbounds i8, i8* %104, i64 -1
  %107 = load i8, i8* %106, align 1, !tbaa !16
  store i8 %107, i8* %105, align 1, !tbaa !16
  %108 = getelementptr inbounds i8, i8* %105, i64 1
  %109 = getelementptr inbounds i8, i8* %104, i64 -2
  %110 = load i8, i8* %109, align 1, !tbaa !16
  store i8 %110, i8* %108, align 1, !tbaa !16
  %111 = getelementptr inbounds i8, i8* %105, i64 2
  %112 = getelementptr inbounds i8, i8* %104, i64 -3
  %113 = load i8, i8* %112, align 1, !tbaa !16
  store i8 %113, i8* %111, align 1, !tbaa !16
  %114 = getelementptr inbounds i8, i8* %105, i64 3
  %115 = getelementptr inbounds i8, i8* %104, i64 -4
  %116 = load i8, i8* %115, align 1, !tbaa !16
  store i8 %116, i8* %114, align 1, !tbaa !16
  %117 = getelementptr inbounds i8, i8* %105, i64 4
  %118 = getelementptr inbounds i8, i8* %104, i64 -5
  %119 = load i8, i8* %118, align 1, !tbaa !16
  store i8 %119, i8* %117, align 1, !tbaa !16
  %120 = getelementptr inbounds i8, i8* %105, i64 5
  %121 = getelementptr inbounds i8, i8* %104, i64 -6
  %122 = load i8, i8* %121, align 1, !tbaa !16
  store i8 %122, i8* %120, align 1, !tbaa !16
  %123 = getelementptr inbounds i8, i8* %105, i64 6
  %124 = getelementptr inbounds i8, i8* %104, i64 -7
  %125 = load i8, i8* %124, align 1, !tbaa !16
  store i8 %125, i8* %123, align 1, !tbaa !16
  %126 = getelementptr inbounds i8, i8* %105, i64 7
  %127 = getelementptr inbounds i8, i8* %104, i64 -8
  %128 = load i8, i8* %127, align 1, !tbaa !16
  store i8 %128, i8* %126, align 1, !tbaa !16
  %129 = getelementptr inbounds i8, i8* %105, i64 8
  %130 = icmp eq i8* %127, %6
  br i1 %130, label %131, label %103, !llvm.loop !28

131:                                              ; preds = %99, %103, %79, %54
  %132 = load i64, i64* %2, align 8, !tbaa !15
  %133 = load i8*, i8** %25, align 8, !tbaa !3
  br label %134

134:                                              ; preds = %131, %20
  %135 = phi i8* [ %133, %131 ], [ %21, %20 ]
  %136 = phi i64 [ %132, %131 ], [ 0, %20 ]
  %137 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %138 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  store i64 %136, i64* %138, align 8, !tbaa !13
  %139 = getelementptr inbounds i8, i8* %135, i64 %136
  store i8 0, i8* %139, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  %140 = load i64, i64* %138, align 8, !tbaa !13
  %141 = load i64, i64* %8, align 8, !tbaa !13
  %142 = icmp eq i64 %140, %141
  br i1 %142, label %143, label %150

143:                                              ; preds = %134
  %144 = icmp eq i64 %140, 0
  br i1 %144, label %150, label %145

145:                                              ; preds = %143
  %146 = load i8*, i8** %5, align 8, !tbaa !3
  %147 = load i8*, i8** %137, align 8, !tbaa !3
  %148 = call i32 @bcmp(i8* %147, i8* %146, i64 %140) #7
  %149 = icmp eq i32 %148, 0
  br label %150

150:                                              ; preds = %134, %143, %145
  %151 = phi i1 [ false, %134 ], [ %149, %145 ], [ true, %143 ]
  %152 = load i8*, i8** %137, align 8, !tbaa !3
  %153 = bitcast %union.anon* %11 to i8*
  %154 = icmp eq i8* %152, %153
  br i1 %154, label %156, label %155

155:                                              ; preds = %150
  call void @_ZdlPv(i8* %152) #7
  br label %156

156:                                              ; preds = %150, %155
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #7
  ret i1 %151
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
define dso_local void @_Z15make_palindromeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = alloca %"class.std::__cxx11::basic_string", align 8
  %12 = alloca %"class.std::__cxx11::basic_string", align 8
  %13 = alloca %"class.std::__cxx11::basic_string", align 8
  %14 = alloca %"class.std::__cxx11::basic_string", align 8
  %15 = alloca %"class.std::__cxx11::basic_string", align 8
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %17 = bitcast %"class.std::__cxx11::basic_string"* %10 to i8*
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2
  %19 = bitcast %"class.std::__cxx11::basic_string"* %10 to %union.anon**
  %20 = bitcast %union.anon* %18 to i8*
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %22 = bitcast i64* %9 to i8*
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2, i32 0
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 1
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %11, i64 0, i32 2
  %27 = bitcast %"class.std::__cxx11::basic_string"* %11 to %union.anon**
  %28 = bitcast i64* %8 to i8*
  %29 = bitcast %union.anon* %26 to i8*
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %11, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %11, i64 0, i32 2, i32 0
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %11, i64 0, i32 1
  %33 = bitcast %"class.std::__cxx11::basic_string"* %12 to i8*
  %34 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 2
  %35 = bitcast %"class.std::__cxx11::basic_string"* %12 to %union.anon**
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 1
  %37 = bitcast %union.anon* %34 to i8*
  %38 = bitcast %"class.std::__cxx11::basic_string"* %13 to i8*
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 2
  %40 = bitcast %"class.std::__cxx11::basic_string"* %13 to %union.anon**
  %41 = bitcast %union.anon* %39 to i8*
  %42 = bitcast i64* %7 to i8*
  %43 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 2, i32 0
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %13, i64 0, i32 1
  %46 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %12, i64 0, i32 2, i32 0
  %48 = bitcast %"class.std::__cxx11::basic_string"* %14 to i8*
  %49 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i64 0, i32 2
  %50 = bitcast %"class.std::__cxx11::basic_string"* %14 to %union.anon**
  %51 = bitcast i64* %6 to i8*
  %52 = bitcast %union.anon* %49 to i8*
  %53 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i64 0, i32 2, i32 0
  %55 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i64 0, i32 1
  %56 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %57 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  %58 = bitcast i64* %5 to i8*
  %59 = bitcast %union.anon* %56 to i8*
  %60 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %62 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %63 = load i64, i64* %16, align 8, !tbaa !13
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %360, label %65

65:                                               ; preds = %2, %350
  %66 = phi i64 [ %351, %350 ], [ 0, %2 ]
  %67 = phi i64 [ %352, %350 ], [ %63, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !29)
  store %union.anon* %18, %union.anon** %19, align 8, !tbaa !14, !alias.scope !29
  %68 = load i8*, i8** %21, align 8, !tbaa !3, !noalias !29
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  %70 = sub i64 %67, %66
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #7, !noalias !29
  store i64 %70, i64* %9, align 8, !tbaa !15, !noalias !29
  %71 = icmp ugt i64 %70, 15
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i64* nonnull align 8 dereferenceable(8) %9, i64 0)
  store i8* %73, i8** %23, align 8, !tbaa !3, !alias.scope !29
  %74 = load i64, i64* %9, align 8, !tbaa !15, !noalias !29
  store i64 %74, i64* %24, align 8, !tbaa !16, !alias.scope !29
  br label %75

75:                                               ; preds = %72, %65
  %76 = phi i8* [ %73, %72 ], [ %20, %65 ]
  switch i64 %70, label %79 [
    i64 1, label %77
    i64 0, label %80
  ]

77:                                               ; preds = %75
  %78 = load i8, i8* %69, align 1, !tbaa !16
  store i8 %78, i8* %76, align 1, !tbaa !16
  br label %80

79:                                               ; preds = %75
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %76, i8* align 1 %69, i64 %70, i1 false) #7
  br label %80

80:                                               ; preds = %75, %77, %79
  %81 = load i64, i64* %9, align 8, !tbaa !15, !noalias !29
  store i64 %81, i64* %25, align 8, !tbaa !13, !alias.scope !29
  %82 = load i8*, i8** %23, align 8, !tbaa !3, !alias.scope !29
  %83 = getelementptr inbounds i8, i8* %82, i64 %81
  store i8 0, i8* %83, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #7, !noalias !29
  store %union.anon* %26, %union.anon** %27, align 8, !tbaa !14
  %84 = load i8*, i8** %23, align 8, !tbaa !3
  %85 = load i64, i64* %25, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7
  store i64 %85, i64* %8, align 8, !tbaa !15
  %86 = icmp ugt i64 %85, 15
  br i1 %86, label %87, label %91

87:                                               ; preds = %80
  %88 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i64* nonnull align 8 dereferenceable(8) %8, i64 0)
          to label %89 unwind label %320

89:                                               ; preds = %87
  store i8* %88, i8** %30, align 8, !tbaa !3
  %90 = load i64, i64* %8, align 8, !tbaa !15
  store i64 %90, i64* %31, align 8, !tbaa !16
  br label %91

91:                                               ; preds = %80, %89
  %92 = phi i8* [ %88, %89 ], [ %29, %80 ]
  switch i64 %85, label %95 [
    i64 1, label %93
    i64 0, label %96
  ]

93:                                               ; preds = %91
  %94 = load i8, i8* %84, align 1, !tbaa !16
  store i8 %94, i8* %92, align 1, !tbaa !16
  br label %96

95:                                               ; preds = %91
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %92, i8* align 1 %84, i64 %85, i1 false) #7
  br label %96

96:                                               ; preds = %95, %93, %91
  %97 = load i64, i64* %8, align 8, !tbaa !15
  store i64 %97, i64* %32, align 8, !tbaa !13
  %98 = load i8*, i8** %30, align 8, !tbaa !3
  %99 = getelementptr inbounds i8, i8* %98, i64 %97
  store i8 0, i8* %99, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7
  %100 = invoke zeroext i1 @_Z13is_palindromeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nonnull %11)
          to label %101 unwind label %322

101:                                              ; preds = %96
  %102 = load i8*, i8** %30, align 8, !tbaa !3
  %103 = icmp eq i8* %102, %29
  br i1 %103, label %105, label %104

104:                                              ; preds = %101
  call void @_ZdlPv(i8* %102) #7
  br label %105

105:                                              ; preds = %101, %104
  br i1 %100, label %106, label %346

106:                                              ; preds = %105
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #7
  store %union.anon* %34, %union.anon** %35, align 8, !tbaa !14
  store i64 0, i64* %36, align 8, !tbaa !13
  store i8 0, i8* %37, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !32)
  %107 = load i64, i64* %16, align 8, !tbaa !13, !noalias !32
  store %union.anon* %39, %union.anon** %40, align 8, !tbaa !14, !alias.scope !32
  %108 = load i8*, i8** %21, align 8, !tbaa !3, !noalias !32
  %109 = icmp ugt i64 %107, %66
  %110 = select i1 %109, i64 %66, i64 %107
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #7, !noalias !32
  store i64 %110, i64* %7, align 8, !tbaa !15, !noalias !32
  %111 = icmp ugt i64 %110, 15
  br i1 %111, label %112, label %116

112:                                              ; preds = %106
  %113 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %13, i64* nonnull align 8 dereferenceable(8) %7, i64 0)
          to label %114 unwind label %327

114:                                              ; preds = %112
  store i8* %113, i8** %43, align 8, !tbaa !3, !alias.scope !32
  %115 = load i64, i64* %7, align 8, !tbaa !15, !noalias !32
  store i64 %115, i64* %44, align 8, !tbaa !16, !alias.scope !32
  br label %116

116:                                              ; preds = %114, %106
  %117 = phi i8* [ %113, %114 ], [ %41, %106 ]
  %118 = trunc i64 %110 to i32
  switch i32 %118, label %121 [
    i32 1, label %119
    i32 0, label %122
  ]

119:                                              ; preds = %116
  %120 = load i8, i8* %108, align 1, !tbaa !16
  store i8 %120, i8* %117, align 1, !tbaa !16
  br label %122

121:                                              ; preds = %116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %117, i8* align 1 %108, i64 %110, i1 false) #7
  br label %122

122:                                              ; preds = %121, %119, %116
  %123 = load i64, i64* %7, align 8, !tbaa !15, !noalias !32
  store i64 %123, i64* %45, align 8, !tbaa !13, !alias.scope !32
  %124 = load i8*, i8** %43, align 8, !tbaa !3, !alias.scope !32
  %125 = getelementptr inbounds i8, i8* %124, i64 %123
  store i8 0, i8* %125, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #7, !noalias !32
  %126 = load i8*, i8** %43, align 8, !tbaa !3
  %127 = icmp eq i8* %126, %41
  br i1 %127, label %128, label %142

128:                                              ; preds = %122
  %129 = load i64, i64* %45, align 8, !tbaa !13
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %137, label %131

131:                                              ; preds = %128
  %132 = load i8*, i8** %46, align 8, !tbaa !3
  %133 = icmp eq i64 %129, 1
  br i1 %133, label %134, label %136

134:                                              ; preds = %131
  %135 = load i8, i8* %41, align 8, !tbaa !16
  store i8 %135, i8* %132, align 1, !tbaa !16
  br label %137

136:                                              ; preds = %131
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %132, i8* nonnull align 8 %41, i64 %129, i1 false) #7
  br label %137

137:                                              ; preds = %136, %134, %128
  %138 = load i64, i64* %45, align 8, !tbaa !13
  store i64 %138, i64* %36, align 8, !tbaa !13
  %139 = load i8*, i8** %46, align 8, !tbaa !3
  %140 = getelementptr inbounds i8, i8* %139, i64 %138
  store i8 0, i8* %140, align 1, !tbaa !16
  %141 = load i8*, i8** %43, align 8, !tbaa !3
  br label %153

142:                                              ; preds = %122
  %143 = load i8*, i8** %46, align 8, !tbaa !3
  %144 = icmp eq i8* %143, %37
  %145 = load i64, i64* %47, align 8
  store i8* %126, i8** %46, align 8, !tbaa !3
  %146 = bitcast i64* %45 to <2 x i64>*
  %147 = load <2 x i64>, <2 x i64>* %146, align 8, !tbaa !16
  %148 = bitcast i64* %36 to <2 x i64>*
  store <2 x i64> %147, <2 x i64>* %148, align 8, !tbaa !16
  %149 = icmp eq i8* %143, null
  %150 = or i1 %144, %149
  br i1 %150, label %152, label %151

151:                                              ; preds = %142
  store i8* %143, i8** %43, align 8, !tbaa !3
  store i64 %145, i64* %44, align 8, !tbaa !16
  br label %153

152:                                              ; preds = %142
  store %union.anon* %39, %union.anon** %40, align 8, !tbaa !3
  br label %153

153:                                              ; preds = %137, %151, %152
  %154 = phi i8* [ %141, %137 ], [ %143, %151 ], [ %41, %152 ]
  store i64 0, i64* %45, align 8, !tbaa !13
  store i8 0, i8* %154, align 1, !tbaa !16
  %155 = load i8*, i8** %43, align 8, !tbaa !3
  %156 = icmp eq i8* %155, %41
  br i1 %156, label %158, label %157

157:                                              ; preds = %153
  call void @_ZdlPv(i8* %155) #7
  br label %158

158:                                              ; preds = %153, %157
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #7
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #7
  %159 = load i8*, i8** %46, align 8, !tbaa !3, !noalias !35
  %160 = ptrtoint i8* %159 to i64
  %161 = load i64, i64* %36, align 8, !tbaa !13, !noalias !35
  %162 = getelementptr inbounds i8, i8* %159, i64 %161
  store %union.anon* %49, %union.anon** %50, align 8, !tbaa !14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #7
  store i64 %161, i64* %6, align 8, !tbaa !15
  %163 = icmp ugt i64 %161, 15
  br i1 %163, label %164, label %168

164:                                              ; preds = %158
  %165 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %14, i64* nonnull align 8 dereferenceable(8) %6, i64 0)
          to label %166 unwind label %329

166:                                              ; preds = %164
  store i8* %165, i8** %53, align 8, !tbaa !3
  %167 = load i64, i64* %6, align 8, !tbaa !15
  store i64 %167, i64* %54, align 8, !tbaa !16
  br label %170

168:                                              ; preds = %158
  %169 = icmp eq i64 %161, 0
  br i1 %169, label %280, label %170

170:                                              ; preds = %166, %168
  %171 = phi i8* [ %165, %166 ], [ %52, %168 ]
  %172 = icmp ult i64 %161, 4
  br i1 %172, label %227, label %173

173:                                              ; preds = %170
  %174 = getelementptr i8, i8* %171, i64 %161
  %175 = icmp ult i8* %171, %162
  %176 = icmp ult i8* %159, %174
  %177 = and i1 %175, %176
  br i1 %177, label %227, label %178

178:                                              ; preds = %173
  %179 = icmp ult i64 %161, 32
  br i1 %179, label %208, label %180

180:                                              ; preds = %178
  %181 = and i64 %161, -32
  br label %182

182:                                              ; preds = %182, %180
  %183 = phi i64 [ 0, %180 ], [ %198, %182 ]
  %184 = getelementptr i8, i8* %171, i64 %183
  %185 = xor i64 %183, -1
  %186 = getelementptr i8, i8* %162, i64 %185
  %187 = getelementptr inbounds i8, i8* %186, i64 -15
  %188 = bitcast i8* %187 to <16 x i8>*
  %189 = load <16 x i8>, <16 x i8>* %188, align 1, !tbaa !16, !alias.scope !38
  %190 = shufflevector <16 x i8> %189, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %191 = getelementptr inbounds i8, i8* %186, i64 -31
  %192 = bitcast i8* %191 to <16 x i8>*
  %193 = load <16 x i8>, <16 x i8>* %192, align 1, !tbaa !16, !alias.scope !38
  %194 = shufflevector <16 x i8> %193, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %195 = bitcast i8* %184 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %195, align 1, !tbaa !16, !alias.scope !41, !noalias !38
  %196 = getelementptr i8, i8* %184, i64 16
  %197 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %197, align 1, !tbaa !16, !alias.scope !41, !noalias !38
  %198 = add nuw i64 %183, 32
  %199 = icmp eq i64 %198, %181
  br i1 %199, label %200, label %182, !llvm.loop !43

200:                                              ; preds = %182
  %201 = icmp eq i64 %161, %181
  br i1 %201, label %277, label %202

202:                                              ; preds = %200
  %203 = getelementptr i8, i8* %171, i64 %181
  %204 = sub i64 0, %181
  %205 = getelementptr i8, i8* %162, i64 %204
  %206 = and i64 %161, 28
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %227, label %208

208:                                              ; preds = %178, %202
  %209 = phi i64 [ %181, %202 ], [ 0, %178 ]
  %210 = and i64 %161, -4
  %211 = sub i64 0, %210
  %212 = getelementptr i8, i8* %162, i64 %211
  %213 = getelementptr i8, i8* %171, i64 %210
  br label %214

214:                                              ; preds = %214, %208
  %215 = phi i64 [ %209, %208 ], [ %223, %214 ]
  %216 = getelementptr i8, i8* %171, i64 %215
  %217 = sub nuw nsw i64 -4, %215
  %218 = getelementptr i8, i8* %162, i64 %217
  %219 = bitcast i8* %218 to <4 x i8>*
  %220 = load <4 x i8>, <4 x i8>* %219, align 1, !tbaa !16
  %221 = shufflevector <4 x i8> %220, <4 x i8> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %222 = bitcast i8* %216 to <4 x i8>*
  store <4 x i8> %221, <4 x i8>* %222, align 1, !tbaa !16
  %223 = add nuw i64 %215, 4
  %224 = icmp eq i64 %223, %210
  br i1 %224, label %225, label %214, !llvm.loop !44

225:                                              ; preds = %214
  %226 = icmp eq i64 %161, %210
  br i1 %226, label %277, label %227

227:                                              ; preds = %173, %170, %202, %225
  %228 = phi i8* [ %162, %170 ], [ %162, %173 ], [ %205, %202 ], [ %212, %225 ]
  %229 = phi i8* [ %171, %170 ], [ %171, %173 ], [ %203, %202 ], [ %213, %225 ]
  %230 = ptrtoint i8* %228 to i64
  %231 = sub i64 %230, %160
  %232 = xor i64 %160, -1
  %233 = add i64 %232, %230
  %234 = and i64 %231, 7
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %245, label %236

236:                                              ; preds = %227, %236
  %237 = phi i8* [ %240, %236 ], [ %228, %227 ]
  %238 = phi i8* [ %242, %236 ], [ %229, %227 ]
  %239 = phi i64 [ %243, %236 ], [ %234, %227 ]
  %240 = getelementptr inbounds i8, i8* %237, i64 -1
  %241 = load i8, i8* %240, align 1, !tbaa !16
  store i8 %241, i8* %238, align 1, !tbaa !16
  %242 = getelementptr inbounds i8, i8* %238, i64 1
  %243 = add i64 %239, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %236, !llvm.loop !45

245:                                              ; preds = %236, %227
  %246 = phi i8* [ %228, %227 ], [ %240, %236 ]
  %247 = phi i8* [ %229, %227 ], [ %242, %236 ]
  %248 = icmp ult i64 %233, 7
  br i1 %248, label %277, label %249

249:                                              ; preds = %245, %249
  %250 = phi i8* [ %273, %249 ], [ %246, %245 ]
  %251 = phi i8* [ %275, %249 ], [ %247, %245 ]
  %252 = getelementptr inbounds i8, i8* %250, i64 -1
  %253 = load i8, i8* %252, align 1, !tbaa !16
  store i8 %253, i8* %251, align 1, !tbaa !16
  %254 = getelementptr inbounds i8, i8* %251, i64 1
  %255 = getelementptr inbounds i8, i8* %250, i64 -2
  %256 = load i8, i8* %255, align 1, !tbaa !16
  store i8 %256, i8* %254, align 1, !tbaa !16
  %257 = getelementptr inbounds i8, i8* %251, i64 2
  %258 = getelementptr inbounds i8, i8* %250, i64 -3
  %259 = load i8, i8* %258, align 1, !tbaa !16
  store i8 %259, i8* %257, align 1, !tbaa !16
  %260 = getelementptr inbounds i8, i8* %251, i64 3
  %261 = getelementptr inbounds i8, i8* %250, i64 -4
  %262 = load i8, i8* %261, align 1, !tbaa !16
  store i8 %262, i8* %260, align 1, !tbaa !16
  %263 = getelementptr inbounds i8, i8* %251, i64 4
  %264 = getelementptr inbounds i8, i8* %250, i64 -5
  %265 = load i8, i8* %264, align 1, !tbaa !16
  store i8 %265, i8* %263, align 1, !tbaa !16
  %266 = getelementptr inbounds i8, i8* %251, i64 5
  %267 = getelementptr inbounds i8, i8* %250, i64 -6
  %268 = load i8, i8* %267, align 1, !tbaa !16
  store i8 %268, i8* %266, align 1, !tbaa !16
  %269 = getelementptr inbounds i8, i8* %251, i64 6
  %270 = getelementptr inbounds i8, i8* %250, i64 -7
  %271 = load i8, i8* %270, align 1, !tbaa !16
  store i8 %271, i8* %269, align 1, !tbaa !16
  %272 = getelementptr inbounds i8, i8* %251, i64 7
  %273 = getelementptr inbounds i8, i8* %250, i64 -8
  %274 = load i8, i8* %273, align 1, !tbaa !16
  store i8 %274, i8* %272, align 1, !tbaa !16
  %275 = getelementptr inbounds i8, i8* %251, i64 8
  %276 = icmp eq i8* %273, %159
  br i1 %276, label %277, label %249, !llvm.loop !46

277:                                              ; preds = %245, %249, %225, %200
  %278 = load i64, i64* %6, align 8, !tbaa !15
  %279 = load i8*, i8** %53, align 8, !tbaa !3
  br label %280

280:                                              ; preds = %277, %168
  %281 = phi i8* [ %279, %277 ], [ %52, %168 ]
  %282 = phi i64 [ %278, %277 ], [ %161, %168 ]
  store i64 %282, i64* %55, align 8, !tbaa !13
  %283 = getelementptr inbounds i8, i8* %281, i64 %282
  store i8 0, i8* %283, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !47)
  store %union.anon* %56, %union.anon** %57, align 8, !tbaa !14, !alias.scope !47
  %284 = load i8*, i8** %21, align 8, !tbaa !3, !noalias !47
  %285 = load i64, i64* %16, align 8, !tbaa !13, !noalias !47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #7, !noalias !47
  store i64 %285, i64* %5, align 8, !tbaa !15, !noalias !47
  %286 = icmp ugt i64 %285, 15
  br i1 %286, label %287, label %291

287:                                              ; preds = %280
  %288 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
          to label %289 unwind label %331

289:                                              ; preds = %287
  store i8* %288, i8** %60, align 8, !tbaa !3, !alias.scope !47
  %290 = load i64, i64* %5, align 8, !tbaa !15, !noalias !47
  store i64 %290, i64* %61, align 8, !tbaa !16, !alias.scope !47
  br label %291

291:                                              ; preds = %280, %289
  %292 = phi i8* [ %288, %289 ], [ %59, %280 ]
  switch i64 %285, label %295 [
    i64 1, label %293
    i64 0, label %296
  ]

293:                                              ; preds = %291
  %294 = load i8, i8* %284, align 1, !tbaa !16
  store i8 %294, i8* %292, align 1, !tbaa !16
  br label %296

295:                                              ; preds = %291
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %292, i8* align 1 %284, i64 %285, i1 false) #7
  br label %296

296:                                              ; preds = %295, %293, %291
  %297 = load i64, i64* %5, align 8, !tbaa !15, !noalias !47
  store i64 %297, i64* %62, align 8, !tbaa !13, !alias.scope !47
  %298 = load i8*, i8** %60, align 8, !tbaa !3, !alias.scope !47
  %299 = getelementptr inbounds i8, i8* %298, i64 %297
  store i8 0, i8* %299, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #7, !noalias !47
  %300 = load i8*, i8** %53, align 8, !tbaa !3, !noalias !47
  %301 = load i64, i64* %55, align 8, !tbaa !13, !noalias !47
  %302 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %300, i64 %301)
          to label %308 unwind label %303

303:                                              ; preds = %296
  %304 = landingpad { i8*, i32 }
          cleanup
  %305 = load i8*, i8** %60, align 8, !tbaa !3, !alias.scope !47
  %306 = icmp eq i8* %305, %59
  br i1 %306, label %333, label %307

307:                                              ; preds = %303
  call void @_ZdlPv(i8* %305) #7
  br label %333

308:                                              ; preds = %296
  %309 = load i8*, i8** %53, align 8, !tbaa !3
  %310 = icmp eq i8* %309, %52
  br i1 %310, label %312, label %311

311:                                              ; preds = %308
  call void @_ZdlPv(i8* %309) #7
  br label %312

312:                                              ; preds = %308, %311
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #7
  %313 = load i8*, i8** %46, align 8, !tbaa !3
  %314 = icmp eq i8* %313, %37
  br i1 %314, label %316, label %315

315:                                              ; preds = %312
  call void @_ZdlPv(i8* %313) #7
  br label %316

316:                                              ; preds = %312, %315
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #7
  %317 = load i8*, i8** %23, align 8, !tbaa !3
  %318 = icmp eq i8* %317, %20
  br i1 %318, label %539, label %319

319:                                              ; preds = %316
  call void @_ZdlPv(i8* %317) #7
  br label %539

320:                                              ; preds = %87
  %321 = landingpad { i8*, i32 }
          cleanup
  br label %354

322:                                              ; preds = %96
  %323 = landingpad { i8*, i32 }
          cleanup
  %324 = load i8*, i8** %30, align 8, !tbaa !3
  %325 = icmp eq i8* %324, %29
  br i1 %325, label %354, label %326

326:                                              ; preds = %322
  call void @_ZdlPv(i8* %324) #7
  br label %354

327:                                              ; preds = %112
  %328 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #7
  br label %340

329:                                              ; preds = %164
  %330 = landingpad { i8*, i32 }
          cleanup
  br label %338

331:                                              ; preds = %287
  %332 = landingpad { i8*, i32 }
          cleanup
  br label %333

333:                                              ; preds = %303, %307, %331
  %334 = phi { i8*, i32 } [ %332, %331 ], [ %304, %307 ], [ %304, %303 ]
  %335 = load i8*, i8** %53, align 8, !tbaa !3
  %336 = icmp eq i8* %335, %52
  br i1 %336, label %338, label %337

337:                                              ; preds = %333
  call void @_ZdlPv(i8* %335) #7
  br label %338

338:                                              ; preds = %337, %333, %329
  %339 = phi { i8*, i32 } [ %330, %329 ], [ %334, %333 ], [ %334, %337 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #7
  br label %340

340:                                              ; preds = %338, %327
  %341 = phi { i8*, i32 } [ %339, %338 ], [ %328, %327 ]
  %342 = load i8*, i8** %46, align 8, !tbaa !3
  %343 = icmp eq i8* %342, %37
  br i1 %343, label %345, label %344

344:                                              ; preds = %340
  call void @_ZdlPv(i8* %342) #7
  br label %345

345:                                              ; preds = %340, %344
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #7
  br label %354

346:                                              ; preds = %105
  %347 = load i8*, i8** %23, align 8, !tbaa !3
  %348 = icmp eq i8* %347, %20
  br i1 %348, label %350, label %349

349:                                              ; preds = %346
  call void @_ZdlPv(i8* %347) #7
  br label %350

350:                                              ; preds = %349, %346
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #7
  %351 = add i64 %66, 1
  %352 = load i64, i64* %16, align 8, !tbaa !13
  %353 = icmp ugt i64 %352, %351
  br i1 %353, label %65, label %360, !llvm.loop !50

354:                                              ; preds = %326, %322, %345, %320
  %355 = phi { i8*, i32 } [ %341, %345 ], [ %321, %320 ], [ %323, %322 ], [ %323, %326 ]
  %356 = load i8*, i8** %23, align 8, !tbaa !3
  %357 = icmp eq i8* %356, %20
  br i1 %357, label %359, label %358

358:                                              ; preds = %354
  call void @_ZdlPv(i8* %356) #7
  br label %359

359:                                              ; preds = %354, %358
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #7
  br label %541

360:                                              ; preds = %350, %2
  %361 = phi i64 [ 0, %2 ], [ %352, %350 ]
  %362 = bitcast %"class.std::__cxx11::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %362) #7
  %363 = load i8*, i8** %21, align 8, !tbaa !3, !noalias !51
  %364 = ptrtoint i8* %363 to i64
  %365 = getelementptr inbounds i8, i8* %363, i64 %361
  %366 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 2
  %367 = bitcast %"class.std::__cxx11::basic_string"* %15 to %union.anon**
  store %union.anon* %366, %union.anon** %367, align 8, !tbaa !14
  %368 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %368) #7
  store i64 %361, i64* %4, align 8, !tbaa !15
  %369 = icmp ugt i64 %361, 15
  br i1 %369, label %370, label %376

370:                                              ; preds = %360
  %371 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %15, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %372 unwind label %527

372:                                              ; preds = %370
  %373 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 0, i32 0
  store i8* %371, i8** %373, align 8, !tbaa !3
  %374 = load i64, i64* %4, align 8, !tbaa !15
  %375 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 2, i32 0
  store i64 %374, i64* %375, align 8, !tbaa !16
  br label %379

376:                                              ; preds = %360
  %377 = bitcast %union.anon* %366 to i8*
  %378 = icmp eq i64 %361, 0
  br i1 %378, label %490, label %379

379:                                              ; preds = %372, %376
  %380 = phi i8* [ %371, %372 ], [ %377, %376 ]
  %381 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 0, i32 0
  %382 = icmp ult i64 %361, 4
  br i1 %382, label %437, label %383

383:                                              ; preds = %379
  %384 = getelementptr i8, i8* %380, i64 %361
  %385 = icmp ult i8* %380, %365
  %386 = icmp ult i8* %363, %384
  %387 = and i1 %385, %386
  br i1 %387, label %437, label %388

388:                                              ; preds = %383
  %389 = icmp ult i64 %361, 32
  br i1 %389, label %418, label %390

390:                                              ; preds = %388
  %391 = and i64 %361, -32
  br label %392

392:                                              ; preds = %392, %390
  %393 = phi i64 [ 0, %390 ], [ %408, %392 ]
  %394 = getelementptr i8, i8* %380, i64 %393
  %395 = xor i64 %393, -1
  %396 = getelementptr i8, i8* %365, i64 %395
  %397 = getelementptr inbounds i8, i8* %396, i64 -15
  %398 = bitcast i8* %397 to <16 x i8>*
  %399 = load <16 x i8>, <16 x i8>* %398, align 1, !tbaa !16, !alias.scope !54
  %400 = shufflevector <16 x i8> %399, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %401 = getelementptr inbounds i8, i8* %396, i64 -31
  %402 = bitcast i8* %401 to <16 x i8>*
  %403 = load <16 x i8>, <16 x i8>* %402, align 1, !tbaa !16, !alias.scope !54
  %404 = shufflevector <16 x i8> %403, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %405 = bitcast i8* %394 to <16 x i8>*
  store <16 x i8> %400, <16 x i8>* %405, align 1, !tbaa !16, !alias.scope !57, !noalias !54
  %406 = getelementptr i8, i8* %394, i64 16
  %407 = bitcast i8* %406 to <16 x i8>*
  store <16 x i8> %404, <16 x i8>* %407, align 1, !tbaa !16, !alias.scope !57, !noalias !54
  %408 = add nuw i64 %393, 32
  %409 = icmp eq i64 %408, %391
  br i1 %409, label %410, label %392, !llvm.loop !59

410:                                              ; preds = %392
  %411 = icmp eq i64 %361, %391
  br i1 %411, label %487, label %412

412:                                              ; preds = %410
  %413 = getelementptr i8, i8* %380, i64 %391
  %414 = sub i64 0, %391
  %415 = getelementptr i8, i8* %365, i64 %414
  %416 = and i64 %361, 28
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %437, label %418

418:                                              ; preds = %388, %412
  %419 = phi i64 [ %391, %412 ], [ 0, %388 ]
  %420 = and i64 %361, -4
  %421 = sub i64 0, %420
  %422 = getelementptr i8, i8* %365, i64 %421
  %423 = getelementptr i8, i8* %380, i64 %420
  br label %424

424:                                              ; preds = %424, %418
  %425 = phi i64 [ %419, %418 ], [ %433, %424 ]
  %426 = getelementptr i8, i8* %380, i64 %425
  %427 = sub nuw nsw i64 -4, %425
  %428 = getelementptr i8, i8* %365, i64 %427
  %429 = bitcast i8* %428 to <4 x i8>*
  %430 = load <4 x i8>, <4 x i8>* %429, align 1, !tbaa !16
  %431 = shufflevector <4 x i8> %430, <4 x i8> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %432 = bitcast i8* %426 to <4 x i8>*
  store <4 x i8> %431, <4 x i8>* %432, align 1, !tbaa !16
  %433 = add nuw i64 %425, 4
  %434 = icmp eq i64 %433, %420
  br i1 %434, label %435, label %424, !llvm.loop !60

435:                                              ; preds = %424
  %436 = icmp eq i64 %361, %420
  br i1 %436, label %487, label %437

437:                                              ; preds = %383, %379, %412, %435
  %438 = phi i8* [ %365, %379 ], [ %365, %383 ], [ %415, %412 ], [ %422, %435 ]
  %439 = phi i8* [ %380, %379 ], [ %380, %383 ], [ %413, %412 ], [ %423, %435 ]
  %440 = ptrtoint i8* %438 to i64
  %441 = sub i64 %440, %364
  %442 = xor i64 %364, -1
  %443 = add i64 %442, %440
  %444 = and i64 %441, 7
  %445 = icmp eq i64 %444, 0
  br i1 %445, label %455, label %446

446:                                              ; preds = %437, %446
  %447 = phi i8* [ %450, %446 ], [ %438, %437 ]
  %448 = phi i8* [ %452, %446 ], [ %439, %437 ]
  %449 = phi i64 [ %453, %446 ], [ %444, %437 ]
  %450 = getelementptr inbounds i8, i8* %447, i64 -1
  %451 = load i8, i8* %450, align 1, !tbaa !16
  store i8 %451, i8* %448, align 1, !tbaa !16
  %452 = getelementptr inbounds i8, i8* %448, i64 1
  %453 = add i64 %449, -1
  %454 = icmp eq i64 %453, 0
  br i1 %454, label %455, label %446, !llvm.loop !61

455:                                              ; preds = %446, %437
  %456 = phi i8* [ %438, %437 ], [ %450, %446 ]
  %457 = phi i8* [ %439, %437 ], [ %452, %446 ]
  %458 = icmp ult i64 %443, 7
  br i1 %458, label %487, label %459

459:                                              ; preds = %455, %459
  %460 = phi i8* [ %483, %459 ], [ %456, %455 ]
  %461 = phi i8* [ %485, %459 ], [ %457, %455 ]
  %462 = getelementptr inbounds i8, i8* %460, i64 -1
  %463 = load i8, i8* %462, align 1, !tbaa !16
  store i8 %463, i8* %461, align 1, !tbaa !16
  %464 = getelementptr inbounds i8, i8* %461, i64 1
  %465 = getelementptr inbounds i8, i8* %460, i64 -2
  %466 = load i8, i8* %465, align 1, !tbaa !16
  store i8 %466, i8* %464, align 1, !tbaa !16
  %467 = getelementptr inbounds i8, i8* %461, i64 2
  %468 = getelementptr inbounds i8, i8* %460, i64 -3
  %469 = load i8, i8* %468, align 1, !tbaa !16
  store i8 %469, i8* %467, align 1, !tbaa !16
  %470 = getelementptr inbounds i8, i8* %461, i64 3
  %471 = getelementptr inbounds i8, i8* %460, i64 -4
  %472 = load i8, i8* %471, align 1, !tbaa !16
  store i8 %472, i8* %470, align 1, !tbaa !16
  %473 = getelementptr inbounds i8, i8* %461, i64 4
  %474 = getelementptr inbounds i8, i8* %460, i64 -5
  %475 = load i8, i8* %474, align 1, !tbaa !16
  store i8 %475, i8* %473, align 1, !tbaa !16
  %476 = getelementptr inbounds i8, i8* %461, i64 5
  %477 = getelementptr inbounds i8, i8* %460, i64 -6
  %478 = load i8, i8* %477, align 1, !tbaa !16
  store i8 %478, i8* %476, align 1, !tbaa !16
  %479 = getelementptr inbounds i8, i8* %461, i64 6
  %480 = getelementptr inbounds i8, i8* %460, i64 -7
  %481 = load i8, i8* %480, align 1, !tbaa !16
  store i8 %481, i8* %479, align 1, !tbaa !16
  %482 = getelementptr inbounds i8, i8* %461, i64 7
  %483 = getelementptr inbounds i8, i8* %460, i64 -8
  %484 = load i8, i8* %483, align 1, !tbaa !16
  store i8 %484, i8* %482, align 1, !tbaa !16
  %485 = getelementptr inbounds i8, i8* %461, i64 8
  %486 = icmp eq i8* %483, %363
  br i1 %486, label %487, label %459, !llvm.loop !62

487:                                              ; preds = %455, %459, %435, %410
  %488 = load i64, i64* %4, align 8, !tbaa !15
  %489 = load i8*, i8** %381, align 8, !tbaa !3
  br label %490

490:                                              ; preds = %487, %376
  %491 = phi i8* [ %489, %487 ], [ %377, %376 ]
  %492 = phi i64 [ %488, %487 ], [ 0, %376 ]
  %493 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 0, i32 0
  %494 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %15, i64 0, i32 1
  store i64 %492, i64* %494, align 8, !tbaa !13
  %495 = getelementptr inbounds i8, i8* %491, i64 %492
  store i8 0, i8* %495, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %368) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !63)
  store %union.anon* %56, %union.anon** %57, align 8, !tbaa !14, !alias.scope !63
  %496 = load i8*, i8** %21, align 8, !tbaa !3, !noalias !63
  %497 = load i64, i64* %16, align 8, !tbaa !13, !noalias !63
  %498 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %498) #7, !noalias !63
  store i64 %497, i64* %3, align 8, !tbaa !15, !noalias !63
  %499 = icmp ugt i64 %497, 15
  br i1 %499, label %500, label %504

500:                                              ; preds = %490
  %501 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %502 unwind label %529

502:                                              ; preds = %500
  store i8* %501, i8** %60, align 8, !tbaa !3, !alias.scope !63
  %503 = load i64, i64* %3, align 8, !tbaa !15, !noalias !63
  store i64 %503, i64* %61, align 8, !tbaa !16, !alias.scope !63
  br label %504

504:                                              ; preds = %490, %502
  %505 = phi i8* [ %501, %502 ], [ %59, %490 ]
  switch i64 %497, label %508 [
    i64 1, label %506
    i64 0, label %509
  ]

506:                                              ; preds = %504
  %507 = load i8, i8* %496, align 1, !tbaa !16
  store i8 %507, i8* %505, align 1, !tbaa !16
  br label %509

508:                                              ; preds = %504
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %505, i8* align 1 %496, i64 %497, i1 false) #7
  br label %509

509:                                              ; preds = %508, %506, %504
  %510 = load i64, i64* %3, align 8, !tbaa !15, !noalias !63
  store i64 %510, i64* %62, align 8, !tbaa !13, !alias.scope !63
  %511 = load i8*, i8** %60, align 8, !tbaa !3, !alias.scope !63
  %512 = getelementptr inbounds i8, i8* %511, i64 %510
  store i8 0, i8* %512, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %498) #7, !noalias !63
  %513 = load i8*, i8** %493, align 8, !tbaa !3, !noalias !63
  %514 = load i64, i64* %494, align 8, !tbaa !13, !noalias !63
  %515 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %513, i64 %514)
          to label %521 unwind label %516

516:                                              ; preds = %509
  %517 = landingpad { i8*, i32 }
          cleanup
  %518 = load i8*, i8** %60, align 8, !tbaa !3, !alias.scope !63
  %519 = icmp eq i8* %518, %59
  br i1 %519, label %531, label %520

520:                                              ; preds = %516
  call void @_ZdlPv(i8* %518) #7
  br label %531

521:                                              ; preds = %509
  %522 = load i8*, i8** %493, align 8, !tbaa !3
  %523 = bitcast %union.anon* %366 to i8*
  %524 = icmp eq i8* %522, %523
  br i1 %524, label %526, label %525

525:                                              ; preds = %521
  call void @_ZdlPv(i8* %522) #7
  br label %526

526:                                              ; preds = %521, %525
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %362) #7
  br label %540

527:                                              ; preds = %370
  %528 = landingpad { i8*, i32 }
          cleanup
  br label %537

529:                                              ; preds = %500
  %530 = landingpad { i8*, i32 }
          cleanup
  br label %531

531:                                              ; preds = %516, %520, %529
  %532 = phi { i8*, i32 } [ %530, %529 ], [ %517, %520 ], [ %517, %516 ]
  %533 = load i8*, i8** %493, align 8, !tbaa !3
  %534 = bitcast %union.anon* %366 to i8*
  %535 = icmp eq i8* %533, %534
  br i1 %535, label %537, label %536

536:                                              ; preds = %531
  call void @_ZdlPv(i8* %533) #7
  br label %537

537:                                              ; preds = %536, %531, %527
  %538 = phi { i8*, i32 } [ %528, %527 ], [ %532, %531 ], [ %532, %536 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %362) #7
  br label %541

539:                                              ; preds = %319, %316
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #7
  br label %540

540:                                              ; preds = %539, %526
  ret void

541:                                              ; preds = %537, %359
  %542 = phi { i8*, i32 } [ %355, %359 ], [ %538, %537 ]
  resume { i8*, i32 } %542
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #6

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly nofree nounwind readonly willreturn }
attributes #6 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !6, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv: argument 0"}
!12 = distinct !{!12, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv"}
!13 = !{!4, !9, i64 8}
!14 = !{!5, !6, i64 0}
!15 = !{!9, !9, i64 0}
!16 = !{!7, !7, i64 0}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !23, !24}
!23 = !{!"llvm.loop.mustprogress"}
!24 = !{!"llvm.loop.isvectorized", i32 1}
!25 = distinct !{!25, !23, !24}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.unroll.disable"}
!28 = distinct !{!28, !23, !24}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!31 = distinct !{!31, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!34 = distinct !{!34, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv: argument 0"}
!37 = distinct !{!37, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv"}
!38 = !{!39}
!39 = distinct !{!39, !40}
!40 = distinct !{!40, !"LVerDomain"}
!41 = !{!42}
!42 = distinct !{!42, !40}
!43 = distinct !{!43, !23, !24}
!44 = distinct !{!44, !23, !24}
!45 = distinct !{!45, !27}
!46 = distinct !{!46, !23, !24}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!49 = distinct !{!49, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!50 = distinct !{!50, !23}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv: argument 0"}
!53 = distinct !{!53, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv"}
!54 = !{!55}
!55 = distinct !{!55, !56}
!56 = distinct !{!56, !"LVerDomain"}
!57 = !{!58}
!58 = distinct !{!58, !56}
!59 = distinct !{!59, !23, !24}
!60 = distinct !{!60, !23, !24}
!61 = distinct !{!61, !27}
!62 = distinct !{!62, !23, !24}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!65 = distinct !{!65, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
