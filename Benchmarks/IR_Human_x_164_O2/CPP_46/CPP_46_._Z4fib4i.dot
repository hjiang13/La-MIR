digraph "CFG for '_Z4fib4i' function" {
	label="CFG for '_Z4fib4i' function";

	Node0x556aeed1c120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%1:\l  %2 = alloca [100 x i32], align 16\l  %3 = bitcast [100 x i32]* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 400, i8* nonnull %3) #2\l  %4 = bitcast [100 x i32]* %2 to \<4 x i32\>*\l  store \<4 x i32\> \<i32 0, i32 0, i32 2, i32 0\>, \<4 x i32\>* %4, align 16, !tbaa\l... !3\l  %5 = icmp slt i32 %0, 4\l  br i1 %5, label %34, label %6\l|{<s0>T|<s1>F}}"];
	Node0x556aeed1c120:s0 -> Node0x556aeed1e5f0;
	Node0x556aeed1c120:s1 -> Node0x556aeed1e680;
	Node0x556aeed1e680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%6:\l6:                                                \l  %7 = add nuw i32 %0, 1\l  %8 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 4\l  store i32 2, i32* %8, align 16, !tbaa !3\l  %9 = icmp eq i32 %7, 5\l  br i1 %9, label %34, label %10, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x556aeed1e680:s0 -> Node0x556aeed1e5f0;
	Node0x556aeed1e680:s1 -> Node0x556aeed1d830;
	Node0x556aeed1d830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%10:\l10:                                               \l  %11 = zext i32 %0 to i64\l  %12 = and i64 %11, 1\l  %13 = icmp eq i32 %7, 6\l  br i1 %13, label %17, label %14\l|{<s0>T|<s1>F}}"];
	Node0x556aeed1d830:s0 -> Node0x556aeed1f500;
	Node0x556aeed1d830:s1 -> Node0x556aeed1f550;
	Node0x556aeed1f550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%14:\l14:                                               \l  %15 = add nsw i64 %11, -4\l  %16 = and i64 %15, -2\l  br label %38\l}"];
	Node0x556aeed1f550 -> Node0x556aeed1f810;
	Node0x556aeed1f500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%17:\l17:                                               \l  %18 = phi i64 [ 5, %10 ], [ %65, %38 ]\l  %19 = phi i32 [ 2, %10 ], [ %63, %38 ]\l  %20 = phi i64 [ 4, %10 ], [ %54, %38 ]\l  %21 = phi i32 [ 2, %10 ], [ %59, %38 ]\l  %22 = icmp eq i64 %12, 0\l  br i1 %22, label %34, label %23\l|{<s0>T|<s1>F}}"];
	Node0x556aeed1f500:s0 -> Node0x556aeed1e5f0;
	Node0x556aeed1f500:s1 -> Node0x556aeed1fd40;
	Node0x556aeed1fd40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%23:\l23:                                               \l  %24 = add nsw i64 %20, -3\l  %25 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %24\l  %26 = add nsw i64 %20, -1\l  %27 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %26\l  %28 = load i32, i32* %27, align 4, !tbaa !3\l  %29 = load i32, i32* %25, align 4, !tbaa !3\l  %30 = add nsw i32 %28, %19\l  %31 = add nsw i32 %30, %21\l  %32 = add nsw i32 %31, %29\l  %33 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %18\l  store i32 %32, i32* %33, align 4, !tbaa !3\l  br label %34\l}"];
	Node0x556aeed1fd40 -> Node0x556aeed1e5f0;
	Node0x556aeed1e5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%34:\l34:                                               \l  %35 = sext i32 %0 to i64\l  %36 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %35\l  %37 = load i32, i32* %36, align 4, !tbaa !3\l  call void @llvm.lifetime.end.p0i8(i64 400, i8* nonnull %3) #2\l  ret i32 %37\l}"];
	Node0x556aeed1f810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi i64 [ 5, %14 ], [ %65, %38 ]\l  %40 = phi i32 [ 2, %14 ], [ %63, %38 ]\l  %41 = phi i64 [ 4, %14 ], [ %54, %38 ]\l  %42 = phi i32 [ 2, %14 ], [ %59, %38 ]\l  %43 = phi i64 [ %16, %14 ], [ %66, %38 ]\l  %44 = add nsw i64 %41, -3\l  %45 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %44\l  %46 = add nsw i64 %41, -1\l  %47 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %46\l  %48 = load i32, i32* %47, align 4, !tbaa !3\l  %49 = load i32, i32* %45, align 4, !tbaa !3\l  %50 = add nsw i32 %48, %40\l  %51 = add nsw i32 %50, %42\l  %52 = add nsw i32 %51, %49\l  %53 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %39\l  store i32 %52, i32* %53, align 4, !tbaa !3\l  %54 = add nuw nsw i64 %39, 1\l  %55 = add nsw i64 %39, -3\l  %56 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %55\l  %57 = add nsw i64 %39, -1\l  %58 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %57\l  %59 = load i32, i32* %58, align 4, !tbaa !3\l  %60 = load i32, i32* %56, align 4, !tbaa !3\l  %61 = add nsw i32 %59, %52\l  %62 = add nsw i32 %61, %48\l  %63 = add nsw i32 %62, %60\l  %64 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %54\l  store i32 %63, i32* %64, align 4, !tbaa !3\l  %65 = add nuw nsw i64 %39, 2\l  %66 = add i64 %43, -2\l  %67 = icmp eq i64 %66, 0\l  br i1 %67, label %17, label %38, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x556aeed1f810:s0 -> Node0x556aeed1f500;
	Node0x556aeed1f810:s1 -> Node0x556aeed1f810;
}
