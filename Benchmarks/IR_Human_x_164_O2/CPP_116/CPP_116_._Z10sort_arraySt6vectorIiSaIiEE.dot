digraph "CFG for '_Z10sort_arraySt6vectorIiSaIiEE' function" {
	label="CFG for '_Z10sort_arraySt6vectorIiSaIiEE' function";

	Node0x559bb965f520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = load i32*, i32** %3, align 8, !tbaa !3\l  %6 = load i32*, i32** %4, align 8, !tbaa !8\l  %7 = icmp eq i32* %5, %6\l  br i1 %7, label %98, label %11\l|{<s0>T|<s1>F}}"];
	Node0x559bb965f520:s0 -> Node0x559bb9660c20;
	Node0x559bb965f520:s1 -> Node0x559bb9660cb0;
	Node0x559bb9660df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%8:\l8:                                                \l  %9 = icmp ugt i64 %82, 1\l  %10 = icmp eq i64 %81, 0\l  br i1 %10, label %98, label %94\l|{<s0>T|<s1>F}}"];
	Node0x559bb9660df0:s0 -> Node0x559bb9660c20;
	Node0x559bb9660df0:s1 -> Node0x559bb965fe90;
	Node0x559bb9660cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%11:\l11:                                               \l  %12 = phi i32* [ %72, %71 ], [ %6, %2 ]\l  %13 = phi i32* [ %73, %71 ], [ %5, %2 ]\l  %14 = phi i64 [ %78, %71 ], [ 0, %2 ]\l  %15 = phi i32* [ %76, %71 ], [ null, %2 ]\l  %16 = phi i32* [ %77, %71 ], [ null, %2 ]\l  %17 = phi i32* [ %74, %71 ], [ null, %2 ]\l  %18 = getelementptr inbounds i32, i32* %12, i64 %14\l  %19 = load i32, i32* %18, align 4, !tbaa !9\l  %20 = icmp eq i32 %19, 0\l  br i1 %20, label %30, label %21\l|{<s0>T|<s1>F}}"];
	Node0x559bb9660cb0:s0 -> Node0x559bb9661b20;
	Node0x559bb9660cb0:s1 -> Node0x559bb9661bb0;
	Node0x559bb9661bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%21:\l21:                                               \l  %22 = tail call i32 @llvm.abs.i32(i32 %19, i1 true)\l  br label %23\l}"];
	Node0x559bb9661bb0 -> Node0x559bb9661f90;
	Node0x559bb9661f90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi i32 [ %28, %23 ], [ %22, %21 ]\l  %25 = phi i32 [ %27, %23 ], [ 0, %21 ]\l  %26 = and i32 %24, 1\l  %27 = add nuw nsw i32 %26, %25\l  %28 = lshr i32 %24, 1\l  %29 = icmp ult i32 %24, 2\l  br i1 %29, label %30, label %23, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x559bb9661f90:s0 -> Node0x559bb9661b20;
	Node0x559bb9661f90:s1 -> Node0x559bb9661f90;
	Node0x559bb9661b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%30:\l30:                                               \l  %31 = phi i32 [ 0, %11 ], [ %27, %23 ]\l  %32 = icmp eq i32* %16, %15\l  br i1 %32, label %34, label %33\l|{<s0>T|<s1>F}}"];
	Node0x559bb9661b20:s0 -> Node0x559bb9662910;
	Node0x559bb9661b20:s1 -> Node0x559bb9662960;
	Node0x559bb9662960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%33:\l33:                                               \l  store i32 %31, i32* %16, align 4, !tbaa !9\l  br label %71\l}"];
	Node0x559bb9662960 -> Node0x559bb96611f0;
	Node0x559bb9662910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%34:\l34:                                               \l  %35 = ptrtoint i32* %15 to i64\l  %36 = ptrtoint i32* %17 to i64\l  %37 = sub i64 %35, %36\l  %38 = ashr exact i64 %37, 2\l  %39 = icmp eq i64 %37, 9223372036854775804\l  br i1 %39, label %40, label %42\l|{<s0>T|<s1>F}}"];
	Node0x559bb9662910:s0 -> Node0x559bb9663470;
	Node0x559bb9662910:s1 -> Node0x559bb96634c0;
	Node0x559bb9663470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%40:\l40:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #7\l          to label %41 unwind label %86\l}"];
	Node0x559bb9663470 -> Node0x559bb9663680;
	Node0x559bb9663470 -> Node0x559bb96636d0;
	Node0x559bb9663680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%41:\l41:                                               \l  unreachable\l}"];
	Node0x559bb96634c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%42:\l42:                                               \l  %43 = icmp eq i64 %37, 0\l  %44 = select i1 %43, i64 1, i64 %38\l  %45 = add nsw i64 %44, %38\l  %46 = icmp ult i64 %45, %38\l  %47 = icmp ugt i64 %45, 2305843009213693951\l  %48 = or i1 %46, %47\l  %49 = select i1 %48, i64 2305843009213693951, i64 %45\l  %50 = icmp eq i64 %49, 0\l  br i1 %50, label %56, label %51\l|{<s0>T|<s1>F}}"];
	Node0x559bb96634c0:s0 -> Node0x559bb9663e30;
	Node0x559bb96634c0:s1 -> Node0x559bb9663e80;
	Node0x559bb9663e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%51:\l51:                                               \l  %52 = shl nuw nsw i64 %49, 2\l  %53 = invoke noalias nonnull i8* @_Znwm(i64 %52) #8\l          to label %54 unwind label %84\l}"];
	Node0x559bb9663e80 -> Node0x559bb9664010;
	Node0x559bb9663e80 -> Node0x559bb9664060;
	Node0x559bb9664010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%54:\l54:                                               \l  %55 = bitcast i8* %53 to i32*\l  br label %56\l}"];
	Node0x559bb9664010 -> Node0x559bb9663e30;
	Node0x559bb9663e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%56:\l56:                                               \l  %57 = phi i32* [ %55, %54 ], [ null, %42 ]\l  %58 = getelementptr inbounds i32, i32* %57, i64 %38\l  store i32 %31, i32* %58, align 4, !tbaa !9\l  %59 = icmp sgt i64 %37, 0\l  br i1 %59, label %60, label %63\l|{<s0>T|<s1>F}}"];
	Node0x559bb9663e30:s0 -> Node0x559bb9664620;
	Node0x559bb9663e30:s1 -> Node0x559bb9664670;
	Node0x559bb9664620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%60:\l60:                                               \l  %61 = bitcast i32* %57 to i8*\l  %62 = bitcast i32* %17 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %62,\l... i64 %37, i1 false) #9\l  br label %63\l}"];
	Node0x559bb9664620 -> Node0x559bb9664670;
	Node0x559bb9664670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%63:\l63:                                               \l  %64 = icmp eq i32* %17, null\l  br i1 %64, label %67, label %65\l|{<s0>T|<s1>F}}"];
	Node0x559bb9664670:s0 -> Node0x559bb96650a0;
	Node0x559bb9664670:s1 -> Node0x559bb96650f0;
	Node0x559bb96650f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%65:\l65:                                               \l  %66 = bitcast i32* %17 to i8*\l  tail call void @_ZdlPv(i8* nonnull %66) #9\l  br label %67\l}"];
	Node0x559bb96650f0 -> Node0x559bb96650a0;
	Node0x559bb96650a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%67:\l67:                                               \l  %68 = getelementptr inbounds i32, i32* %57, i64 %49\l  %69 = load i32*, i32** %3, align 8, !tbaa !3\l  %70 = load i32*, i32** %4, align 8, !tbaa !8\l  br label %71\l}"];
	Node0x559bb96650a0 -> Node0x559bb96611f0;
	Node0x559bb96611f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%71:\l71:                                               \l  %72 = phi i32* [ %70, %67 ], [ %12, %33 ]\l  %73 = phi i32* [ %69, %67 ], [ %13, %33 ]\l  %74 = phi i32* [ %57, %67 ], [ %17, %33 ]\l  %75 = phi i32* [ %58, %67 ], [ %16, %33 ]\l  %76 = phi i32* [ %68, %67 ], [ %15, %33 ]\l  %77 = getelementptr inbounds i32, i32* %75, i64 1\l  %78 = add nuw i64 %14, 1\l  %79 = ptrtoint i32* %73 to i64\l  %80 = ptrtoint i32* %72 to i64\l  %81 = sub i64 %79, %80\l  %82 = ashr exact i64 %81, 2\l  %83 = icmp ugt i64 %82, %78\l  br i1 %83, label %11, label %8, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x559bb96611f0:s0 -> Node0x559bb9660cb0;
	Node0x559bb96611f0:s1 -> Node0x559bb9660df0;
	Node0x559bb9664060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%84:\l84:                                               \l  %85 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %88\l}"];
	Node0x559bb9664060 -> Node0x559bb9666bd0;
	Node0x559bb96636d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%86:\l86:                                               \l  %87 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %88\l}"];
	Node0x559bb96636d0 -> Node0x559bb9666bd0;
	Node0x559bb9666bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%88:\l88:                                               \l  %89 = phi \{ i8*, i32 \} [ %85, %84 ], [ %87, %86 ]\l  %90 = icmp eq i32* %17, null\l  br i1 %90, label %93, label %91\l|{<s0>T|<s1>F}}"];
	Node0x559bb9666bd0:s0 -> Node0x559bb9666eb0;
	Node0x559bb9666bd0:s1 -> Node0x559bb9666f00;
	Node0x559bb9666f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%91:\l91:                                               \l  %92 = bitcast i32* %17 to i8*\l  tail call void @_ZdlPv(i8* nonnull %92) #9\l  br label %93\l}"];
	Node0x559bb9666f00 -> Node0x559bb9666eb0;
	Node0x559bb9666eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%93:\l93:                                               \l  resume \{ i8*, i32 \} %89\l}"];
	Node0x559bb965fe90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%94:\l94:                                               \l  %95 = phi i64 [ %113, %112 ], [ 0, %8 ]\l  br i1 %9, label %96, label %112\l|{<s0>T|<s1>F}}"];
	Node0x559bb965fe90:s0 -> Node0x559bb9667380;
	Node0x559bb965fe90:s1 -> Node0x559bb9667280;
	Node0x559bb9667380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%96:\l96:                                               \l  %97 = load i32, i32* %74, align 4, !tbaa !9\l  br label %115\l}"];
	Node0x559bb9667380 -> Node0x559bb96674f0;
	Node0x559bb9660c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%98:\l98:                                               \l  %99 = phi i32* [ %72, %8 ], [ %6, %2 ], [ %72, %112 ]\l  %100 = phi i32* [ %73, %8 ], [ %5, %2 ], [ %73, %112 ]\l  %101 = phi i32* [ %74, %8 ], [ null, %2 ], [ %74, %112 ]\l  %102 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 0\l  store i32* %99, i32** %102, align 8, !tbaa !8\l  %103 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 1\l  store i32* %100, i32** %103, align 8, !tbaa !3\l  %104 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 2\l  %105 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %1, i64 0, i32 0, i32 0, i32 0, i32 2\l  %106 = load i32*, i32** %105, align 8, !tbaa !14\l  store i32* %106, i32** %104, align 8, !tbaa !14\l  %107 = bitcast %\"class.std::vector\"* %1 to i8*\l  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %107, i8 0, i64 24, i1 false) #9\l  %108 = icmp eq i32* %101, null\l  br i1 %108, label %111, label %109\l|{<s0>T|<s1>F}}"];
	Node0x559bb9660c20:s0 -> Node0x559bb96688f0;
	Node0x559bb9660c20:s1 -> Node0x559bb9668940;
	Node0x559bb9668940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%109:\l109:                                              \l  %110 = bitcast i32* %101 to i8*\l  tail call void @_ZdlPv(i8* nonnull %110) #9\l  br label %111\l}"];
	Node0x559bb9668940 -> Node0x559bb96688f0;
	Node0x559bb96688f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%111:\l111:                                              \l  ret void\l}"];
	Node0x559bb9667280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%112:\l112:                                              \l  %113 = add nuw nsw i64 %95, 1\l  %114 = icmp eq i64 %113, %82\l  br i1 %114, label %98, label %94, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x559bb9667280:s0 -> Node0x559bb9660c20;
	Node0x559bb9667280:s1 -> Node0x559bb965fe90;
	Node0x559bb96674f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%115:\l115:                                              \l  %116 = phi i32 [ %97, %96 ], [ %144, %143 ]\l  %117 = phi i64 [ 1, %96 ], [ %145, %143 ]\l  %118 = getelementptr inbounds i32, i32* %74, i64 %117\l  %119 = load i32, i32* %118, align 4, !tbaa !9\l  %120 = add nsw i64 %117, -1\l  %121 = getelementptr inbounds i32, i32* %74, i64 %120\l  %122 = icmp slt i32 %119, %116\l  br i1 %122, label %123, label %128\l|{<s0>T|<s1>F}}"];
	Node0x559bb96674f0:s0 -> Node0x559bb9669330;
	Node0x559bb96674f0:s1 -> Node0x559bb9669380;
	Node0x559bb9669330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%123:\l123:                                              \l  %124 = getelementptr inbounds i32, i32* %72, i64 %117\l  %125 = load i32, i32* %124, align 4, !tbaa !9\l  %126 = getelementptr inbounds i32, i32* %72, i64 %120\l  %127 = load i32, i32* %126, align 4, !tbaa !9\l  br label %136\l}"];
	Node0x559bb9669330 -> Node0x559bb96696a0;
	Node0x559bb9669380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%128:\l128:                                              \l  %129 = icmp eq i32 %119, %116\l  br i1 %129, label %130, label %143\l|{<s0>T|<s1>F}}"];
	Node0x559bb9669380:s0 -> Node0x559bb966a000;
	Node0x559bb9669380:s1 -> Node0x559bb9668eb0;
	Node0x559bb966a000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%130:\l130:                                              \l  %131 = getelementptr inbounds i32, i32* %72, i64 %117\l  %132 = load i32, i32* %131, align 4, !tbaa !9\l  %133 = getelementptr inbounds i32, i32* %72, i64 %120\l  %134 = load i32, i32* %133, align 4, !tbaa !9\l  %135 = icmp slt i32 %132, %134\l  br i1 %135, label %136, label %143\l|{<s0>T|<s1>F}}"];
	Node0x559bb966a000:s0 -> Node0x559bb96696a0;
	Node0x559bb966a000:s1 -> Node0x559bb9668eb0;
	Node0x559bb96696a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%136:\l136:                                              \l  %137 = phi i32 [ %127, %123 ], [ %134, %130 ]\l  %138 = phi i32 [ %125, %123 ], [ %132, %130 ]\l  %139 = getelementptr inbounds i32, i32* %72, i64 %117\l  %140 = getelementptr inbounds i32, i32* %72, i64 %120\l  store i32 %137, i32* %139, align 4, !tbaa !9\l  store i32 %138, i32* %140, align 4, !tbaa !9\l  %141 = load i32, i32* %118, align 4, !tbaa !9\l  %142 = load i32, i32* %121, align 4, !tbaa !9\l  store i32 %142, i32* %118, align 4, !tbaa !9\l  store i32 %141, i32* %121, align 4, !tbaa !9\l  br label %143\l}"];
	Node0x559bb96696a0 -> Node0x559bb9668eb0;
	Node0x559bb9668eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%143:\l143:                                              \l  %144 = phi i32 [ %119, %128 ], [ %116, %130 ], [ %142, %136 ]\l  %145 = add nuw nsw i64 %117, 1\l  %146 = icmp eq i64 %145, %82\l  br i1 %146, label %112, label %115, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x559bb9668eb0:s0 -> Node0x559bb9667280;
	Node0x559bb9668eb0:s1 -> Node0x559bb96674f0;
}
