digraph "CFG for '_ZNSt6vectorIiSaIiEE13_M_assign_auxIPKiEEvT_S5_St20forward_iterator_tag' function" {
	label="CFG for '_ZNSt6vectorIiSaIiEE13_M_assign_auxIPKiEEvT_S5_St20forward_iterator_tag' function";

	Node0x55f354e218b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = ptrtoint i32* %2 to i64\l  %5 = ptrtoint i32* %1 to i64\l  %6 = sub i64 %4, %5\l  %7 = ashr exact i64 %6, 2\l  %8 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %9 = load i32*, i32** %8, align 8, !tbaa !3\l  %10 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %11 = load i32*, i32** %10, align 8, !tbaa !8\l  %12 = ptrtoint i32* %9 to i64\l  %13 = ptrtoint i32* %11 to i64\l  %14 = sub i64 %12, %13\l  %15 = ashr exact i64 %14, 2\l  %16 = icmp ugt i64 %7, %15\l  br i1 %16, label %17, label %35\l|{<s0>T|<s1>F}}"];
	Node0x55f354e218b0:s0 -> Node0x55f354e21900;
	Node0x55f354e218b0:s1 -> Node0x55f354e22300;
	Node0x55f354e21900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%17:\l17:                                               \l  %18 = icmp ugt i64 %7, 2305843009213693951\l  br i1 %18, label %19, label %20\l|{<s0>T|<s1>F}}"];
	Node0x55f354e21900:s0 -> Node0x55f354e22440;
	Node0x55f354e21900:s1 -> Node0x55f354e22490;
	Node0x55f354e22440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%19:\l19:                                               \l  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds\l... ([49 x i8], [49 x i8]* @.str, i64 0, i64 0)) #7\l  unreachable\l}"];
	Node0x55f354e22490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%20:\l20:                                               \l  %21 = tail call noalias nonnull i8* @_Znwm(i64 %6) #8\l  %22 = bitcast i8* %21 to i32*\l  %23 = icmp eq i64 %6, 0\l  br i1 %23, label %26, label %24\l|{<s0>T|<s1>F}}"];
	Node0x55f354e22490:s0 -> Node0x55f354e22bd0;
	Node0x55f354e22490:s1 -> Node0x55f354e22c20;
	Node0x55f354e22c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%24:\l24:                                               \l  %25 = bitcast i32* %1 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align\l... 4 %25, i64 %6, i1 false) #9\l  br label %26\l}"];
	Node0x55f354e22c20 -> Node0x55f354e22bd0;
	Node0x55f354e22bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%26:\l26:                                               \l  %27 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %28 = load i32*, i32** %10, align 8, !tbaa !8\l  %29 = icmp eq i32* %28, null\l  br i1 %29, label %32, label %30\l|{<s0>T|<s1>F}}"];
	Node0x55f354e22bd0:s0 -> Node0x55f354e23380;
	Node0x55f354e22bd0:s1 -> Node0x55f354e233d0;
	Node0x55f354e233d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%30:\l30:                                               \l  %31 = bitcast i32* %28 to i8*\l  tail call void @_ZdlPv(i8* nonnull %31) #9\l  br label %32\l}"];
	Node0x55f354e233d0 -> Node0x55f354e23380;
	Node0x55f354e23380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%32:\l32:                                               \l  %33 = bitcast %\"class.std::vector\"* %0 to i8**\l  store i8* %21, i8** %33, align 8, !tbaa !8\l  %34 = getelementptr inbounds i32, i32* %22, i64 %7\l  store i32* %34, i32** %27, align 8, !tbaa !9\l  store i32* %34, i32** %8, align 8, !tbaa !3\l  br label %71\l}"];
	Node0x55f354e23380 -> Node0x55f354e23fb0;
	Node0x55f354e22300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%35:\l35:                                               \l  %36 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %37 = load i32*, i32** %36, align 8, !tbaa !9\l  %38 = ptrtoint i32* %37 to i64\l  %39 = sub i64 %38, %13\l  %40 = ashr exact i64 %39, 2\l  %41 = icmp ult i64 %40, %7\l  br i1 %41, label %53, label %42\l|{<s0>T|<s1>F}}"];
	Node0x55f354e22300:s0 -> Node0x55f354e24420;
	Node0x55f354e22300:s1 -> Node0x55f354e24470;
	Node0x55f354e24470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%42:\l42:                                               \l  %43 = icmp eq i64 %6, 0\l  br i1 %43, label %48, label %44\l|{<s0>T|<s1>F}}"];
	Node0x55f354e24470:s0 -> Node0x55f354e24600;
	Node0x55f354e24470:s1 -> Node0x55f354e24650;
	Node0x55f354e24650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%44:\l44:                                               \l  %45 = bitcast i32* %11 to i8*\l  %46 = bitcast i32* %1 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %46,\l... i64 %6, i1 false) #9\l  %47 = load i32*, i32** %36, align 8, !tbaa !9\l  br label %48\l}"];
	Node0x55f354e24650 -> Node0x55f354e24600;
	Node0x55f354e24600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%48:\l48:                                               \l  %49 = phi i32* [ %37, %42 ], [ %47, %44 ]\l  %50 = getelementptr inbounds i32, i32* %11, i64 %7\l  %51 = icmp eq i32* %49, %50\l  br i1 %51, label %71, label %52\l|{<s0>T|<s1>F}}"];
	Node0x55f354e24600:s0 -> Node0x55f354e23fb0;
	Node0x55f354e24600:s1 -> Node0x55f354e24e10;
	Node0x55f354e24e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%52:\l52:                                               \l  store i32* %50, i32** %36, align 8, !tbaa !9\l  br label %71\l}"];
	Node0x55f354e24e10 -> Node0x55f354e23fb0;
	Node0x55f354e24420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%53:\l53:                                               \l  %54 = getelementptr inbounds i32, i32* %1, i64 %40\l  %55 = ptrtoint i32* %54 to i64\l  %56 = icmp eq i64 %39, 0\l  br i1 %56, label %61, label %57\l|{<s0>T|<s1>F}}"];
	Node0x55f354e24420:s0 -> Node0x55f354e251b0;
	Node0x55f354e24420:s1 -> Node0x55f354e25200;
	Node0x55f354e25200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%57:\l57:                                               \l  %58 = bitcast i32* %11 to i8*\l  %59 = bitcast i32* %1 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %59,\l... i64 %39, i1 false) #9\l  %60 = load i32*, i32** %36, align 8, !tbaa !9\l  br label %61\l}"];
	Node0x55f354e25200 -> Node0x55f354e251b0;
	Node0x55f354e251b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%61:\l61:                                               \l  %62 = phi i32* [ %37, %53 ], [ %60, %57 ]\l  %63 = sub i64 %4, %55\l  %64 = icmp eq i64 %63, 0\l  br i1 %64, label %68, label %65\l|{<s0>T|<s1>F}}"];
	Node0x55f354e251b0:s0 -> Node0x55f354e25c40;
	Node0x55f354e251b0:s1 -> Node0x55f354e25c90;
	Node0x55f354e25c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%65:\l65:                                               \l  %66 = bitcast i32* %62 to i8*\l  %67 = bitcast i32* %54 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %67,\l... i64 %63, i1 false) #9\l  br label %68\l}"];
	Node0x55f354e25c90 -> Node0x55f354e25c40;
	Node0x55f354e25c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%68:\l68:                                               \l  %69 = ashr exact i64 %63, 2\l  %70 = getelementptr inbounds i32, i32* %62, i64 %69\l  store i32* %70, i32** %36, align 8, !tbaa !9\l  br label %71\l}"];
	Node0x55f354e25c40 -> Node0x55f354e23fb0;
	Node0x55f354e23fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  ret void\l}"];
}
