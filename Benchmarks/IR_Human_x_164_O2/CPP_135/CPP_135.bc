; ModuleID = '../../Human_xBenchmarks_164/CPP_135/CPP_135.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_135/CPP_135.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local i32 @_Z11can_arrangeSt6vectorIiSaIiEE(%"class.std::vector"* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32*, i32** %2, align 8, !tbaa !3
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8, !tbaa !8
  %6 = ptrtoint i32* %3 to i64
  %7 = ptrtoint i32* %5 to i64
  %8 = sub i64 %6, %7
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %1
  %11 = ashr exact i64 %8, 2
  %12 = call i64 @llvm.umax.i64(i64 %11, i64 1)
  %13 = add i64 %12, -1
  %14 = and i64 %12, 3
  %15 = icmp ult i64 %13, 3
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = and i64 %12, -4
  br label %38

18:                                               ; preds = %38, %10
  %19 = phi i32 [ undef, %10 ], [ %68, %38 ]
  %20 = phi i64 [ 0, %10 ], [ %69, %38 ]
  %21 = phi i32 [ -1, %10 ], [ %68, %38 ]
  %22 = icmp eq i64 %14, 0
  br i1 %22, label %36, label %23

23:                                               ; preds = %18, %23
  %24 = phi i64 [ %33, %23 ], [ %20, %18 ]
  %25 = phi i32 [ %32, %23 ], [ %21, %18 ]
  %26 = phi i64 [ %34, %23 ], [ %14, %18 ]
  %27 = getelementptr inbounds i32, i32* %5, i64 %24
  %28 = load i32, i32* %27, align 4, !tbaa !9
  %29 = sext i32 %28 to i64
  %30 = icmp slt i64 %24, %29
  %31 = trunc i64 %24 to i32
  %32 = select i1 %30, i32 %25, i32 %31
  %33 = add nuw nsw i64 %24, 1
  %34 = add i64 %26, -1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %23, !llvm.loop !11

36:                                               ; preds = %18, %23, %1
  %37 = phi i32 [ -1, %1 ], [ %19, %18 ], [ %32, %23 ]
  ret i32 %37

38:                                               ; preds = %38, %16
  %39 = phi i64 [ 0, %16 ], [ %69, %38 ]
  %40 = phi i32 [ -1, %16 ], [ %68, %38 ]
  %41 = phi i64 [ %17, %16 ], [ %70, %38 ]
  %42 = getelementptr inbounds i32, i32* %5, i64 %39
  %43 = load i32, i32* %42, align 4, !tbaa !9
  %44 = sext i32 %43 to i64
  %45 = icmp slt i64 %39, %44
  %46 = trunc i64 %39 to i32
  %47 = select i1 %45, i32 %40, i32 %46
  %48 = or i64 %39, 1
  %49 = getelementptr inbounds i32, i32* %5, i64 %48
  %50 = load i32, i32* %49, align 4, !tbaa !9
  %51 = sext i32 %50 to i64
  %52 = icmp slt i64 %48, %51
  %53 = trunc i64 %48 to i32
  %54 = select i1 %52, i32 %47, i32 %53
  %55 = or i64 %39, 2
  %56 = getelementptr inbounds i32, i32* %5, i64 %55
  %57 = load i32, i32* %56, align 4, !tbaa !9
  %58 = sext i32 %57 to i64
  %59 = icmp slt i64 %55, %58
  %60 = trunc i64 %55 to i32
  %61 = select i1 %59, i32 %54, i32 %60
  %62 = or i64 %39, 3
  %63 = getelementptr inbounds i32, i32* %5, i64 %62
  %64 = load i32, i32* %63, align 4, !tbaa !9
  %65 = sext i32 %64 to i64
  %66 = icmp slt i64 %62, %65
  %67 = trunc i64 %62 to i32
  %68 = select i1 %66, i32 %61, i32 %67
  %69 = add nuw nsw i64 %39, 4
  %70 = add i64 %41, -4
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %18, label %38, !llvm.loop !13
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 8}
!4 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!4, !5, i64 0}
!9 = !{!10, !10, i64 0}
!10 = !{!"int", !6, i64 0}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.mustprogress"}
