digraph "CFG for '_Z11max_elementSt6vectorIfSaIfEE' function" {
	label="CFG for '_Z11max_elementSt6vectorIfSaIfEE' function";

	Node0x56258aee25b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%1:\l  %2 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %3 = load float*, float** %2, align 8, !tbaa !3\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = load float*, float** %4, align 8, !tbaa !8\l  %6 = ptrtoint float* %3 to i64\l  %7 = ptrtoint float* %5 to i64\l  %8 = sub i64 %6, %7\l  %9 = icmp eq i64 %8, 0\l  br i1 %9, label %34, label %10\l|{<s0>T|<s1>F}}"];
	Node0x56258aee25b0:s0 -> Node0x56258aee3a60;
	Node0x56258aee25b0:s1 -> Node0x56258aee3ef0;
	Node0x56258aee3ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%10:\l10:                                               \l  %11 = ashr exact i64 %8, 2\l  %12 = call i64 @llvm.umax.i64(i64 %11, i64 1)\l  %13 = add i64 %12, -1\l  %14 = and i64 %12, 3\l  %15 = icmp ult i64 %13, 3\l  br i1 %15, label %18, label %16\l|{<s0>T|<s1>F}}"];
	Node0x56258aee3ef0:s0 -> Node0x56258aee4510;
	Node0x56258aee3ef0:s1 -> Node0x56258aee4560;
	Node0x56258aee4560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%16:\l16:                                               \l  %17 = and i64 %12, -4\l  br label %36\l}"];
	Node0x56258aee4560 -> Node0x56258aee46d0;
	Node0x56258aee4510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%18:\l18:                                               \l  %19 = phi float [ undef, %10 ], [ %58, %36 ]\l  %20 = phi i64 [ 0, %10 ], [ %59, %36 ]\l  %21 = phi float [ -1.000000e+04, %10 ], [ %58, %36 ]\l  %22 = icmp eq i64 %14, 0\l  br i1 %22, label %34, label %23\l|{<s0>T|<s1>F}}"];
	Node0x56258aee4510:s0 -> Node0x56258aee3a60;
	Node0x56258aee4510:s1 -> Node0x56258aee5930;
	Node0x56258aee5930 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi i64 [ %31, %23 ], [ %20, %18 ]\l  %25 = phi float [ %30, %23 ], [ %21, %18 ]\l  %26 = phi i64 [ %32, %23 ], [ %14, %18 ]\l  %27 = getelementptr inbounds float, float* %5, i64 %24\l  %28 = load float, float* %27, align 4, !tbaa !9\l  %29 = fcmp olt float %25, %28\l  %30 = select i1 %29, float %28, float %25\l  %31 = add nuw nsw i64 %24, 1\l  %32 = add i64 %26, -1\l  %33 = icmp eq i64 %32, 0\l  br i1 %33, label %34, label %23, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x56258aee5930:s0 -> Node0x56258aee3a60;
	Node0x56258aee5930:s1 -> Node0x56258aee5930;
	Node0x56258aee3a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%34:\l34:                                               \l  %35 = phi float [ -1.000000e+04, %1 ], [ %19, %18 ], [ %30, %23 ]\l  ret float %35\l}"];
	Node0x56258aee46d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%36:\l36:                                               \l  %37 = phi i64 [ 0, %16 ], [ %59, %36 ]\l  %38 = phi float [ -1.000000e+04, %16 ], [ %58, %36 ]\l  %39 = phi i64 [ %17, %16 ], [ %60, %36 ]\l  %40 = getelementptr inbounds float, float* %5, i64 %37\l  %41 = load float, float* %40, align 4, !tbaa !9\l  %42 = fcmp olt float %38, %41\l  %43 = select i1 %42, float %41, float %38\l  %44 = or i64 %37, 1\l  %45 = getelementptr inbounds float, float* %5, i64 %44\l  %46 = load float, float* %45, align 4, !tbaa !9\l  %47 = fcmp olt float %43, %46\l  %48 = select i1 %47, float %46, float %43\l  %49 = or i64 %37, 2\l  %50 = getelementptr inbounds float, float* %5, i64 %49\l  %51 = load float, float* %50, align 4, !tbaa !9\l  %52 = fcmp olt float %48, %51\l  %53 = select i1 %52, float %51, float %48\l  %54 = or i64 %37, 3\l  %55 = getelementptr inbounds float, float* %5, i64 %54\l  %56 = load float, float* %55, align 4, !tbaa !9\l  %57 = fcmp olt float %53, %56\l  %58 = select i1 %57, float %56, float %53\l  %59 = add nuw nsw i64 %37, 4\l  %60 = add i64 %39, -4\l  %61 = icmp eq i64 %60, 0\l  br i1 %61, label %18, label %36, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x56258aee46d0:s0 -> Node0x56258aee4510;
	Node0x56258aee46d0:s1 -> Node0x56258aee46d0;
}
