digraph "CFG for '_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_5__ops15_Iter_less_iterEEvT_SC_T0_' function" {
	label="CFG for '_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_5__ops15_Iter_less_iterEEvT_SC_T0_' function";

	Node0x56004dbb1a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%2:\l  %3 = ptrtoint i8* %1 to i64\l  %4 = ptrtoint i8* %0 to i64\l  %5 = sub i64 %3, %4\l  %6 = icmp sgt i64 %5, 16\l  br i1 %6, label %7, label %76\l|{<s0>T|<s1>F}}"];
	Node0x56004dbb1a00:s0 -> Node0x56004dbb1c10;
	Node0x56004dbb1a00:s1 -> Node0x56004dbb1c60;
	Node0x56004dbb1c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%7:\l7:                                                \l  %8 = getelementptr inbounds i8, i8* %0, i64 1\l  br label %9\l}"];
	Node0x56004dbb1c10 -> Node0x56004dbb1b30;
	Node0x56004dbb1b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%9:\l9:                                                \l  %10 = phi i64 [ %29, %27 ], [ 1, %7 ]\l  %11 = phi i8* [ %12, %27 ], [ %0, %7 ]\l  %12 = getelementptr inbounds i8, i8* %0, i64 %10\l  %13 = load i8, i8* %12, align 1, !tbaa !3\l  %14 = load i8, i8* %0, align 1, !tbaa !3\l  %15 = icmp slt i8 %13, %14\l  br i1 %15, label %16, label %17\l|{<s0>T|<s1>F}}"];
	Node0x56004dbb1b30:s0 -> Node0x56004dbc73c0;
	Node0x56004dbb1b30:s1 -> Node0x56004dbc7410;
	Node0x56004dbc73c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%16:\l16:                                               \l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 1 %8,\l... i8* noundef nonnull align 1 %0, i64 %10, i1 false) #7\l  br label %27\l}"];
	Node0x56004dbc73c0 -> Node0x56004dbb1e90;
	Node0x56004dbc7410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%17:\l17:                                               \l  %18 = load i8, i8* %11, align 1, !tbaa !3\l  %19 = icmp slt i8 %13, %18\l  br i1 %19, label %20, label %27\l|{<s0>T|<s1>F}}"];
	Node0x56004dbc7410:s0 -> Node0x56004dbc7830;
	Node0x56004dbc7410:s1 -> Node0x56004dbb1e90;
	Node0x56004dbc7830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = phi i8 [ %25, %20 ], [ %18, %17 ]\l  %22 = phi i8* [ %24, %20 ], [ %11, %17 ]\l  %23 = phi i8* [ %22, %20 ], [ %12, %17 ]\l  store i8 %21, i8* %23, align 1, !tbaa !3\l  %24 = getelementptr inbounds i8, i8* %22, i64 -1\l  %25 = load i8, i8* %24, align 1, !tbaa !3\l  %26 = icmp slt i8 %13, %25\l  br i1 %26, label %20, label %27, !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x56004dbc7830:s0 -> Node0x56004dbc7830;
	Node0x56004dbc7830:s1 -> Node0x56004dbb1e90;
	Node0x56004dbb1e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%27:\l27:                                               \l  %28 = phi i8* [ %0, %16 ], [ %12, %17 ], [ %22, %20 ]\l  store i8 %13, i8* %28, align 1, !tbaa !3\l  %29 = add nuw nsw i64 %10, 1\l  %30 = icmp eq i64 %29, 16\l  br i1 %30, label %31, label %9, !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x56004dbb1e90:s0 -> Node0x56004dbc7ec0;
	Node0x56004dbb1e90:s1 -> Node0x56004dbb1b30;
	Node0x56004dbc7ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%31:\l31:                                               \l  %32 = getelementptr inbounds i8, i8* %0, i64 16\l  %33 = icmp eq i8* %32, %1\l  br i1 %33, label %106, label %34\l|{<s0>T|<s1>F}}"];
	Node0x56004dbc7ec0:s0 -> Node0x56004dbca4b0;
	Node0x56004dbc7ec0:s1 -> Node0x56004dbca500;
	Node0x56004dbca500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%34:\l34:                                               \l  %35 = sub i64 %3, %4\l  %36 = add i64 %3, -17\l  %37 = and i64 %35, 1\l  %38 = icmp eq i64 %37, 0\l  br i1 %38, label %54, label %39\l|{<s0>T|<s1>F}}"];
	Node0x56004dbca500:s0 -> Node0x56004dbca880;
	Node0x56004dbca500:s1 -> Node0x56004dbca8d0;
	Node0x56004dbca8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%39:\l39:                                               \l  %40 = load i8, i8* %32, align 1, !tbaa !3\l  %41 = getelementptr inbounds i8, i8* %0, i64 15\l  %42 = load i8, i8* %41, align 1, !tbaa !3\l  %43 = icmp slt i8 %40, %42\l  br i1 %43, label %44, label %51\l|{<s0>T|<s1>F}}"];
	Node0x56004dbca8d0:s0 -> Node0x56004dbcac20;
	Node0x56004dbca8d0:s1 -> Node0x56004dbcac70;
	Node0x56004dbcac20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%44:\l44:                                               \l  %45 = phi i8 [ %49, %44 ], [ %42, %39 ]\l  %46 = phi i8* [ %48, %44 ], [ %41, %39 ]\l  %47 = phi i8* [ %46, %44 ], [ %32, %39 ]\l  store i8 %45, i8* %47, align 1, !tbaa !3\l  %48 = getelementptr inbounds i8, i8* %46, i64 -1\l  %49 = load i8, i8* %48, align 1, !tbaa !3\l  %50 = icmp slt i8 %40, %49\l  br i1 %50, label %44, label %51, !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x56004dbcac20:s0 -> Node0x56004dbcac20;
	Node0x56004dbcac20:s1 -> Node0x56004dbcac70;
	Node0x56004dbcac70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%51:\l51:                                               \l  %52 = phi i8* [ %32, %39 ], [ %46, %44 ]\l  store i8 %40, i8* %52, align 1, !tbaa !3\l  %53 = getelementptr inbounds i8, i8* %0, i64 17\l  br label %54\l}"];
	Node0x56004dbcac70 -> Node0x56004dbca880;
	Node0x56004dbca880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%54:\l54:                                               \l  %55 = phi i8* [ %32, %34 ], [ %53, %51 ]\l  %56 = icmp eq i64 %36, %4\l  br i1 %56, label %106, label %57\l|{<s0>T|<s1>F}}"];
	Node0x56004dbca880:s0 -> Node0x56004dbca4b0;
	Node0x56004dbca880:s1 -> Node0x56004dbcbc80;
	Node0x56004dbcbc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%57:\l57:                                               \l  %58 = phi i8* [ %116, %114 ], [ %55, %54 ]\l  %59 = load i8, i8* %58, align 1, !tbaa !3\l  %60 = getelementptr inbounds i8, i8* %58, i64 -1\l  %61 = load i8, i8* %60, align 1, !tbaa !3\l  %62 = icmp slt i8 %59, %61\l  br i1 %62, label %63, label %70\l|{<s0>T|<s1>F}}"];
	Node0x56004dbcbc80:s0 -> Node0x56004dbcc090;
	Node0x56004dbcbc80:s1 -> Node0x56004dbcc0e0;
	Node0x56004dbcc090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%63:\l63:                                               \l  %64 = phi i8 [ %68, %63 ], [ %61, %57 ]\l  %65 = phi i8* [ %67, %63 ], [ %60, %57 ]\l  %66 = phi i8* [ %65, %63 ], [ %58, %57 ]\l  store i8 %64, i8* %66, align 1, !tbaa !3\l  %67 = getelementptr inbounds i8, i8* %65, i64 -1\l  %68 = load i8, i8* %67, align 1, !tbaa !3\l  %69 = icmp slt i8 %59, %68\l  br i1 %69, label %63, label %70, !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x56004dbcc090:s0 -> Node0x56004dbcc090;
	Node0x56004dbcc090:s1 -> Node0x56004dbcc0e0;
	Node0x56004dbcc0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%70:\l70:                                               \l  %71 = phi i8* [ %58, %57 ], [ %65, %63 ]\l  store i8 %59, i8* %71, align 1, !tbaa !3\l  %72 = getelementptr inbounds i8, i8* %58, i64 1\l  %73 = load i8, i8* %72, align 1, !tbaa !3\l  %74 = load i8, i8* %58, align 1, !tbaa !3\l  %75 = icmp slt i8 %73, %74\l  br i1 %75, label %107, label %114\l|{<s0>T|<s1>F}}"];
	Node0x56004dbcc0e0:s0 -> Node0x56004dbcca90;
	Node0x56004dbcc0e0:s1 -> Node0x56004dbcbd80;
	Node0x56004dbb1c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%76:\l76:                                               \l  %77 = icmp eq i8* %0, %1\l  br i1 %77, label %106, label %78\l|{<s0>T|<s1>F}}"];
	Node0x56004dbb1c60:s0 -> Node0x56004dbca4b0;
	Node0x56004dbb1c60:s1 -> Node0x56004dbccc20;
	Node0x56004dbccc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%78:\l78:                                               \l  %79 = getelementptr inbounds i8, i8* %0, i64 1\l  %80 = icmp eq i8* %79, %1\l  br i1 %80, label %106, label %81\l|{<s0>T|<s1>F}}"];
	Node0x56004dbccc20:s0 -> Node0x56004dbca4b0;
	Node0x56004dbccc20:s1 -> Node0x56004dbcce50;
	Node0x56004dbcce50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%81:\l81:                                               \l  %82 = phi i8* [ %104, %102 ], [ %79, %78 ]\l  %83 = phi i8* [ %82, %102 ], [ %0, %78 ]\l  %84 = load i8, i8* %82, align 1, !tbaa !3\l  %85 = load i8, i8* %0, align 1, !tbaa !3\l  %86 = icmp slt i8 %84, %85\l  br i1 %86, label %87, label %92\l|{<s0>T|<s1>F}}"];
	Node0x56004dbcce50:s0 -> Node0x56004dbcd270;
	Node0x56004dbcce50:s1 -> Node0x56004dbcd2c0;
	Node0x56004dbcd270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%87:\l87:                                               \l  %88 = ptrtoint i8* %82 to i64\l  %89 = sub i64 %88, %4\l  %90 = icmp eq i64 %89, 0\l  br i1 %90, label %102, label %91\l|{<s0>T|<s1>F}}"];
	Node0x56004dbcd270:s0 -> Node0x56004dbccf50;
	Node0x56004dbcd270:s1 -> Node0x56004dbcd590;
	Node0x56004dbcd590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%91:\l91:                                               \l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %79, i8*\l... nonnull align 1 %0, i64 %89, i1 false) #7\l  br label %102\l}"];
	Node0x56004dbcd590 -> Node0x56004dbccf50;
	Node0x56004dbcd2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%92:\l92:                                               \l  %93 = load i8, i8* %83, align 1, !tbaa !3\l  %94 = icmp slt i8 %84, %93\l  br i1 %94, label %95, label %102\l|{<s0>T|<s1>F}}"];
	Node0x56004dbcd2c0:s0 -> Node0x56004dbcda30;
	Node0x56004dbcd2c0:s1 -> Node0x56004dbccf50;
	Node0x56004dbcda30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%95:\l95:                                               \l  %96 = phi i8 [ %100, %95 ], [ %93, %92 ]\l  %97 = phi i8* [ %99, %95 ], [ %83, %92 ]\l  %98 = phi i8* [ %97, %95 ], [ %82, %92 ]\l  store i8 %96, i8* %98, align 1, !tbaa !3\l  %99 = getelementptr inbounds i8, i8* %97, i64 -1\l  %100 = load i8, i8* %99, align 1, !tbaa !3\l  %101 = icmp slt i8 %84, %100\l  br i1 %101, label %95, label %102, !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x56004dbcda30:s0 -> Node0x56004dbcda30;
	Node0x56004dbcda30:s1 -> Node0x56004dbccf50;
	Node0x56004dbccf50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%102:\l102:                                              \l  %103 = phi i8* [ %0, %87 ], [ %0, %91 ], [ %82, %92 ], [ %97, %95 ]\l  store i8 %84, i8* %103, align 1, !tbaa !3\l  %104 = getelementptr inbounds i8, i8* %82, i64 1\l  %105 = icmp eq i8* %104, %1\l  br i1 %105, label %106, label %81, !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x56004dbccf50:s0 -> Node0x56004dbca4b0;
	Node0x56004dbccf50:s1 -> Node0x56004dbcce50;
	Node0x56004dbca4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%106:\l106:                                              \l  ret void\l}"];
	Node0x56004dbcca90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%107:\l107:                                              \l  %108 = phi i8 [ %112, %107 ], [ %74, %70 ]\l  %109 = phi i8* [ %111, %107 ], [ %58, %70 ]\l  %110 = phi i8* [ %109, %107 ], [ %72, %70 ]\l  store i8 %108, i8* %110, align 1, !tbaa !3\l  %111 = getelementptr inbounds i8, i8* %109, i64 -1\l  %112 = load i8, i8* %111, align 1, !tbaa !3\l  %113 = icmp slt i8 %73, %112\l  br i1 %113, label %107, label %114, !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x56004dbcca90:s0 -> Node0x56004dbcca90;
	Node0x56004dbcca90:s1 -> Node0x56004dbcbd80;
	Node0x56004dbcbd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%114:\l114:                                              \l  %115 = phi i8* [ %72, %70 ], [ %109, %107 ]\l  store i8 %73, i8* %115, align 1, !tbaa !3\l  %116 = getelementptr inbounds i8, i8* %58, i64 2\l  %117 = icmp eq i8* %116, %1\l  br i1 %117, label %106, label %57, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x56004dbcbd80:s0 -> Node0x56004dbca4b0;
	Node0x56004dbcbd80:s1 -> Node0x56004dbcbc80;
}
