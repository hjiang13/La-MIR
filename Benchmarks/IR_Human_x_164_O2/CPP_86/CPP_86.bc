; ModuleID = '../../Human_xBenchmarks_164/CPP_86/CPP_86.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_86/CPP_86.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEElNS0_5__ops15_Iter_less_iterEEvT_SC_T0_T1_ = comdat any

$_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_5__ops15_Iter_less_iterEEvT_SC_T0_ = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: uwtable
define dso_local void @_Z12anti_shuffleNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = alloca %"class.std::__cxx11::basic_string", align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = alloca %"class.std::__cxx11::basic_string", align 8
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3
  %14 = bitcast %union.anon* %12 to i8*
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %16, align 8, !tbaa !8
  store i8 0, i8* %14, align 8, !tbaa !11
  %17 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #7
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %19 = bitcast %"class.std::__cxx11::basic_string"* %7 to %union.anon**
  store %union.anon* %18, %union.anon** %19, align 8, !tbaa !3
  %20 = bitcast %union.anon* %18 to i8*
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  store i64 0, i64* %22, align 8, !tbaa !8
  store i8 0, i8* %20, align 8, !tbaa !11
  %23 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !12)
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %25 = bitcast %"class.std::__cxx11::basic_string"* %8 to %union.anon**
  store %union.anon* %24, %union.anon** %25, align 8, !tbaa !3, !alias.scope !12
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8, !tbaa !15, !noalias !12
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %29 = load i64, i64* %28, align 8, !tbaa !8, !noalias !12
  %30 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #7, !noalias !12
  store i64 %29, i64* %6, align 8, !tbaa !16, !noalias !12
  %31 = icmp ugt i64 %29, 15
  br i1 %31, label %34, label %32

32:                                               ; preds = %2
  %33 = bitcast %union.anon* %24 to i8*
  br label %40

34:                                               ; preds = %2
  %35 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64* nonnull align 8 dereferenceable(8) %6, i64 0)
          to label %36 unwind label %138

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  store i8* %35, i8** %37, align 8, !tbaa !15, !alias.scope !12
  %38 = load i64, i64* %6, align 8, !tbaa !16, !noalias !12
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  store i64 %38, i64* %39, align 8, !tbaa !11, !alias.scope !12
  br label %40

40:                                               ; preds = %36, %32
  %41 = phi i8* [ %33, %32 ], [ %35, %36 ]
  switch i64 %29, label %44 [
    i64 1, label %42
    i64 0, label %45
  ]

42:                                               ; preds = %40
  %43 = load i8, i8* %27, align 1, !tbaa !11
  store i8 %43, i8* %41, align 1, !tbaa !11
  br label %45

44:                                               ; preds = %40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* align 1 %27, i64 %29, i1 false) #7
  br label %45

45:                                               ; preds = %44, %42, %40
  %46 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %47 = load i64, i64* %6, align 8, !tbaa !16, !noalias !12
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 1
  store i64 %47, i64* %48, align 8, !tbaa !8, !alias.scope !12
  %49 = load i8*, i8** %46, align 8, !tbaa !15, !alias.scope !12
  %50 = getelementptr inbounds i8, i8* %49, i64 %47
  store i8 0, i8* %50, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #7, !noalias !12
  %51 = load i64, i64* %48, align 8, !tbaa !8, !alias.scope !12
  %52 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64 %51, i64 0, i64 1, i8 signext 32)
          to label %59 unwind label %53

53:                                               ; preds = %45
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = load i8*, i8** %46, align 8, !tbaa !15, !alias.scope !12
  %56 = bitcast %union.anon* %24 to i8*
  %57 = icmp eq i8* %55, %56
  br i1 %57, label %140, label %58

58:                                               ; preds = %53
  call void @_ZdlPv(i8* %55) #7
  br label %140

59:                                               ; preds = %45
  %60 = load i8*, i8** %46, align 8, !tbaa !15
  %61 = bitcast %union.anon* %24 to i8*
  %62 = icmp eq i8* %60, %61
  br i1 %62, label %63, label %77

63:                                               ; preds = %59
  %64 = load i64, i64* %48, align 8, !tbaa !8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %63
  %67 = load i8*, i8** %26, align 8, !tbaa !15
  %68 = icmp eq i64 %64, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = load i8, i8* %61, align 8, !tbaa !11
  store i8 %70, i8* %67, align 1, !tbaa !11
  br label %72

71:                                               ; preds = %66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %67, i8* nonnull align 8 %61, i64 %64, i1 false) #7
  br label %72

72:                                               ; preds = %71, %69, %63
  %73 = load i64, i64* %48, align 8, !tbaa !8
  store i64 %73, i64* %28, align 8, !tbaa !8
  %74 = load i8*, i8** %26, align 8, !tbaa !15
  %75 = getelementptr inbounds i8, i8* %74, i64 %73
  store i8 0, i8* %75, align 1, !tbaa !11
  %76 = load i8*, i8** %46, align 8, !tbaa !15
  br label %92

77:                                               ; preds = %59
  %78 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 2
  %79 = bitcast %union.anon* %78 to i8*
  %80 = load i8*, i8** %26, align 8, !tbaa !15
  %81 = icmp eq i8* %80, %79
  %82 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 2, i32 0
  %83 = load i64, i64* %82, align 8
  store i8* %60, i8** %26, align 8, !tbaa !15
  %84 = bitcast i64* %48 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !tbaa !11
  %86 = bitcast i64* %28 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %86, align 8, !tbaa !11
  %87 = icmp eq i8* %80, null
  %88 = or i1 %81, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %77
  store i8* %80, i8** %46, align 8, !tbaa !15
  %90 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  store i64 %83, i64* %90, align 8, !tbaa !11
  br label %92

91:                                               ; preds = %77
  store %union.anon* %24, %union.anon** %25, align 8, !tbaa !15
  br label %92

92:                                               ; preds = %72, %89, %91
  %93 = phi i8* [ %76, %72 ], [ %80, %89 ], [ %61, %91 ]
  store i64 0, i64* %48, align 8, !tbaa !8
  store i8 0, i8* %93, align 1, !tbaa !11
  %94 = load i8*, i8** %46, align 8, !tbaa !15
  %95 = icmp eq i8* %94, %61
  br i1 %95, label %97, label %96

96:                                               ; preds = %92
  call void @_ZdlPv(i8* %94) #7
  br label %97

97:                                               ; preds = %92, %96
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #7
  %98 = bitcast %"class.std::__cxx11::basic_string"* %11 to i8*
  %99 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %11, i64 0, i32 2
  %100 = bitcast %"class.std::__cxx11::basic_string"* %11 to %union.anon**
  %101 = bitcast i64* %3 to i8*
  %102 = bitcast %union.anon* %99 to i8*
  %103 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %11, i64 0, i32 0, i32 0
  %104 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %11, i64 0, i32 2, i32 0
  %105 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %11, i64 0, i32 1
  %106 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 0
  %107 = bitcast %"class.std::__cxx11::basic_string"* %9 to i8*
  %108 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2
  %109 = bitcast %"class.std::__cxx11::basic_string"* %9 to %union.anon**
  %110 = bitcast i64* %5 to i8*
  %111 = bitcast %union.anon* %108 to i8*
  %112 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2, i32 0
  %114 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 1
  %115 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %116 = bitcast %"class.std::__cxx11::basic_string"* %10 to i8*
  %117 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2
  %118 = bitcast %"class.std::__cxx11::basic_string"* %10 to %union.anon**
  %119 = bitcast i64* %4 to i8*
  %120 = bitcast %union.anon* %117 to i8*
  %121 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 2, i32 0
  %123 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %10, i64 0, i32 1
  %124 = load i64, i64* %28, align 8, !tbaa !8
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %133, label %126

126:                                              ; preds = %97
  %127 = bitcast i64* %105 to <2 x i64>*
  %128 = bitcast i64* %22 to <2 x i64>*
  %129 = bitcast i64* %114 to <2 x i64>*
  %130 = bitcast i64* %16 to <2 x i64>*
  %131 = bitcast i64* %123 to <2 x i64>*
  %132 = bitcast i64* %16 to <2 x i64>*
  br label %142

133:                                              ; preds = %347, %97
  %134 = load i8*, i8** %21, align 8, !tbaa !15
  %135 = icmp eq i8* %134, %20
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  call void @_ZdlPv(i8* %134) #7
  br label %137

137:                                              ; preds = %133, %136
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #7
  ret void

138:                                              ; preds = %34
  %139 = landingpad { i8*, i32 }
          cleanup
  br label %140

140:                                              ; preds = %53, %58, %138
  %141 = phi { i8*, i32 } [ %139, %138 ], [ %54, %58 ], [ %54, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #7
  br label %351

142:                                              ; preds = %126, %347
  %143 = phi i64 [ %348, %347 ], [ 0, %126 ]
  %144 = load i8*, i8** %26, align 8, !tbaa !15
  %145 = getelementptr inbounds i8, i8* %144, i64 %143
  %146 = load i8, i8* %145, align 1, !tbaa !11
  %147 = icmp eq i8 %146, 32
  br i1 %147, label %148, label %287

148:                                              ; preds = %142
  %149 = load i8*, i8** %21, align 8, !tbaa !15
  %150 = load i64, i64* %22, align 8, !tbaa !8
  %151 = getelementptr inbounds i8, i8* %149, i64 %150
  %152 = icmp eq i64 %150, 0
  br i1 %152, label %158, label %153

153:                                              ; preds = %148
  %154 = call i64 @llvm.ctlz.i64(i64 %150, i1 true) #7, !range !17
  %155 = shl nuw nsw i64 %154, 1
  %156 = xor i64 %155, 126
  invoke void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEElNS0_5__ops15_Iter_less_iterEEvT_SC_T0_T1_(i8* %149, i8* nonnull %151, i64 %156)
          to label %157 unwind label %218

157:                                              ; preds = %153
  invoke void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_5__ops15_Iter_less_iterEEvT_SC_T0_(i8* %149, i8* nonnull %151)
          to label %158 unwind label %218

158:                                              ; preds = %148, %157
  %159 = load i64, i64* %16, align 8, !tbaa !8
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %224, label %161

161:                                              ; preds = %158
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %107) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !18)
  store %union.anon* %108, %union.anon** %109, align 8, !tbaa !3, !alias.scope !18
  %162 = load i8*, i8** %15, align 8, !tbaa !15, !noalias !18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #7, !noalias !18
  store i64 %159, i64* %5, align 8, !tbaa !16, !noalias !18
  %163 = icmp ugt i64 %159, 15
  br i1 %163, label %164, label %168

164:                                              ; preds = %161
  %165 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %9, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
          to label %166 unwind label %220

166:                                              ; preds = %164
  store i8* %165, i8** %112, align 8, !tbaa !15, !alias.scope !18
  %167 = load i64, i64* %5, align 8, !tbaa !16, !noalias !18
  store i64 %167, i64* %113, align 8, !tbaa !11, !alias.scope !18
  br label %172

168:                                              ; preds = %161
  %169 = icmp eq i64 %159, 1
  br i1 %169, label %170, label %172

170:                                              ; preds = %168
  %171 = load i8, i8* %162, align 1, !tbaa !11
  store i8 %171, i8* %111, align 8, !tbaa !11
  br label %174

172:                                              ; preds = %166, %168
  %173 = phi i8* [ %165, %166 ], [ %111, %168 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %173, i8* align 1 %162, i64 %159, i1 false) #7
  br label %174

174:                                              ; preds = %172, %170
  %175 = load i64, i64* %5, align 8, !tbaa !16, !noalias !18
  store i64 %175, i64* %114, align 8, !tbaa !8, !alias.scope !18
  %176 = load i8*, i8** %112, align 8, !tbaa !15, !alias.scope !18
  %177 = getelementptr inbounds i8, i8* %176, i64 %175
  store i8 0, i8* %177, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #7, !noalias !18
  %178 = load i64, i64* %114, align 8, !tbaa !8, !alias.scope !18
  %179 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %9, i64 %178, i64 0, i64 1, i8 signext 32)
          to label %185 unwind label %180

180:                                              ; preds = %174
  %181 = landingpad { i8*, i32 }
          cleanup
  %182 = load i8*, i8** %112, align 8, !tbaa !15, !alias.scope !18
  %183 = icmp eq i8* %182, %111
  br i1 %183, label %222, label %184

184:                                              ; preds = %180
  call void @_ZdlPv(i8* %182) #7
  br label %222

185:                                              ; preds = %174
  %186 = load i8*, i8** %112, align 8, !tbaa !15
  %187 = icmp eq i8* %186, %111
  br i1 %187, label %188, label %202

188:                                              ; preds = %185
  %189 = load i64, i64* %114, align 8, !tbaa !8
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %197, label %191

191:                                              ; preds = %188
  %192 = load i8*, i8** %15, align 8, !tbaa !15
  %193 = icmp eq i64 %189, 1
  br i1 %193, label %194, label %196

194:                                              ; preds = %191
  %195 = load i8, i8* %111, align 8, !tbaa !11
  store i8 %195, i8* %192, align 1, !tbaa !11
  br label %197

196:                                              ; preds = %191
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %192, i8* nonnull align 8 %111, i64 %189, i1 false) #7
  br label %197

197:                                              ; preds = %196, %194, %188
  %198 = load i64, i64* %114, align 8, !tbaa !8
  store i64 %198, i64* %16, align 8, !tbaa !8
  %199 = load i8*, i8** %15, align 8, !tbaa !15
  %200 = getelementptr inbounds i8, i8* %199, i64 %198
  store i8 0, i8* %200, align 1, !tbaa !11
  %201 = load i8*, i8** %112, align 8, !tbaa !15
  br label %211

202:                                              ; preds = %185
  %203 = load i8*, i8** %15, align 8, !tbaa !15
  %204 = icmp eq i8* %203, %14
  %205 = load i64, i64* %115, align 8
  store i8* %186, i8** %15, align 8, !tbaa !15
  %206 = load <2 x i64>, <2 x i64>* %129, align 8, !tbaa !11
  store <2 x i64> %206, <2 x i64>* %130, align 8, !tbaa !11
  %207 = icmp eq i8* %203, null
  %208 = or i1 %204, %207
  br i1 %208, label %210, label %209

209:                                              ; preds = %202
  store i8* %203, i8** %112, align 8, !tbaa !15
  store i64 %205, i64* %113, align 8, !tbaa !11
  br label %211

210:                                              ; preds = %202
  store %union.anon* %108, %union.anon** %109, align 8, !tbaa !15
  br label %211

211:                                              ; preds = %197, %209, %210
  %212 = phi i8* [ %201, %197 ], [ %203, %209 ], [ %111, %210 ]
  store i64 0, i64* %114, align 8, !tbaa !8
  store i8 0, i8* %212, align 1, !tbaa !11
  %213 = load i8*, i8** %112, align 8, !tbaa !15
  %214 = icmp eq i8* %213, %111
  br i1 %214, label %216, label %215

215:                                              ; preds = %211
  call void @_ZdlPv(i8* %213) #7
  br label %216

216:                                              ; preds = %211, %215
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %107) #7
  %217 = load i64, i64* %16, align 8, !tbaa !8, !noalias !21
  br label %224

218:                                              ; preds = %280, %157, %153
  %219 = landingpad { i8*, i32 }
          cleanup
  br label %351

220:                                              ; preds = %164
  %221 = landingpad { i8*, i32 }
          cleanup
  br label %222

222:                                              ; preds = %180, %184, %220
  %223 = phi { i8*, i32 } [ %221, %220 ], [ %181, %184 ], [ %181, %180 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %107) #7
  br label %351

224:                                              ; preds = %216, %158
  %225 = phi i64 [ %217, %216 ], [ 0, %158 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %116) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !21)
  store %union.anon* %117, %union.anon** %118, align 8, !tbaa !3, !alias.scope !21
  %226 = load i8*, i8** %15, align 8, !tbaa !15, !noalias !21
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #7, !noalias !21
  store i64 %225, i64* %4, align 8, !tbaa !16, !noalias !21
  %227 = icmp ugt i64 %225, 15
  br i1 %227, label %228, label %232

228:                                              ; preds = %224
  %229 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %230 unwind label %283

230:                                              ; preds = %228
  store i8* %229, i8** %121, align 8, !tbaa !15, !alias.scope !21
  %231 = load i64, i64* %4, align 8, !tbaa !16, !noalias !21
  store i64 %231, i64* %122, align 8, !tbaa !11, !alias.scope !21
  br label %232

232:                                              ; preds = %224, %230
  %233 = phi i8* [ %229, %230 ], [ %120, %224 ]
  switch i64 %225, label %236 [
    i64 1, label %234
    i64 0, label %237
  ]

234:                                              ; preds = %232
  %235 = load i8, i8* %226, align 1, !tbaa !11
  store i8 %235, i8* %233, align 1, !tbaa !11
  br label %237

236:                                              ; preds = %232
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %233, i8* align 1 %226, i64 %225, i1 false) #7
  br label %237

237:                                              ; preds = %236, %234, %232
  %238 = load i64, i64* %4, align 8, !tbaa !16, !noalias !21
  store i64 %238, i64* %123, align 8, !tbaa !8, !alias.scope !21
  %239 = load i8*, i8** %121, align 8, !tbaa !15, !alias.scope !21
  %240 = getelementptr inbounds i8, i8* %239, i64 %238
  store i8 0, i8* %240, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #7, !noalias !21
  %241 = load i8*, i8** %21, align 8, !tbaa !15, !noalias !21
  %242 = load i64, i64* %22, align 8, !tbaa !8, !noalias !21
  %243 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i8* %241, i64 %242)
          to label %249 unwind label %244

244:                                              ; preds = %237
  %245 = landingpad { i8*, i32 }
          cleanup
  %246 = load i8*, i8** %121, align 8, !tbaa !15, !alias.scope !21
  %247 = icmp eq i8* %246, %120
  br i1 %247, label %285, label %248

248:                                              ; preds = %244
  call void @_ZdlPv(i8* %246) #7
  br label %285

249:                                              ; preds = %237
  %250 = load i8*, i8** %121, align 8, !tbaa !15
  %251 = icmp eq i8* %250, %120
  br i1 %251, label %252, label %266

252:                                              ; preds = %249
  %253 = load i64, i64* %123, align 8, !tbaa !8
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %261, label %255

255:                                              ; preds = %252
  %256 = load i8*, i8** %15, align 8, !tbaa !15
  %257 = icmp eq i64 %253, 1
  br i1 %257, label %258, label %260

258:                                              ; preds = %255
  %259 = load i8, i8* %120, align 8, !tbaa !11
  store i8 %259, i8* %256, align 1, !tbaa !11
  br label %261

260:                                              ; preds = %255
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %256, i8* nonnull align 8 %120, i64 %253, i1 false) #7
  br label %261

261:                                              ; preds = %260, %258, %252
  %262 = load i64, i64* %123, align 8, !tbaa !8
  store i64 %262, i64* %16, align 8, !tbaa !8
  %263 = load i8*, i8** %15, align 8, !tbaa !15
  %264 = getelementptr inbounds i8, i8* %263, i64 %262
  store i8 0, i8* %264, align 1, !tbaa !11
  %265 = load i8*, i8** %121, align 8, !tbaa !15
  br label %275

266:                                              ; preds = %249
  %267 = load i8*, i8** %15, align 8, !tbaa !15
  %268 = icmp eq i8* %267, %14
  %269 = load i64, i64* %115, align 8
  store i8* %250, i8** %15, align 8, !tbaa !15
  %270 = load <2 x i64>, <2 x i64>* %131, align 8, !tbaa !11
  store <2 x i64> %270, <2 x i64>* %132, align 8, !tbaa !11
  %271 = icmp eq i8* %267, null
  %272 = or i1 %268, %271
  br i1 %272, label %274, label %273

273:                                              ; preds = %266
  store i8* %267, i8** %121, align 8, !tbaa !15
  store i64 %269, i64* %122, align 8, !tbaa !11
  br label %275

274:                                              ; preds = %266
  store %union.anon* %117, %union.anon** %118, align 8, !tbaa !15
  br label %275

275:                                              ; preds = %261, %273, %274
  %276 = phi i8* [ %265, %261 ], [ %267, %273 ], [ %120, %274 ]
  store i64 0, i64* %123, align 8, !tbaa !8
  store i8 0, i8* %276, align 1, !tbaa !11
  %277 = load i8*, i8** %121, align 8, !tbaa !15
  %278 = icmp eq i8* %277, %120
  br i1 %278, label %280, label %279

279:                                              ; preds = %275
  call void @_ZdlPv(i8* %277) #7
  br label %280

280:                                              ; preds = %275, %279
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %116) #7
  %281 = load i64, i64* %22, align 8, !tbaa !8
  %282 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i64 0, i64 %281, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0)
          to label %347 unwind label %218

283:                                              ; preds = %228
  %284 = landingpad { i8*, i32 }
          cleanup
  br label %285

285:                                              ; preds = %244, %248, %283
  %286 = phi { i8*, i32 } [ %284, %283 ], [ %245, %248 ], [ %245, %244 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %116) #7
  br label %351

287:                                              ; preds = %142
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %98) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !24)
  store %union.anon* %99, %union.anon** %100, align 8, !tbaa !3, !alias.scope !24
  %288 = load i8*, i8** %21, align 8, !tbaa !15, !noalias !24
  %289 = load i64, i64* %22, align 8, !tbaa !8, !noalias !24
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #7, !noalias !24
  store i64 %289, i64* %3, align 8, !tbaa !16, !noalias !24
  %290 = icmp ugt i64 %289, 15
  br i1 %290, label %291, label %295

291:                                              ; preds = %287
  %292 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %293 unwind label %343

293:                                              ; preds = %291
  store i8* %292, i8** %103, align 8, !tbaa !15, !alias.scope !24
  %294 = load i64, i64* %3, align 8, !tbaa !16, !noalias !24
  store i64 %294, i64* %104, align 8, !tbaa !11, !alias.scope !24
  br label %295

295:                                              ; preds = %287, %293
  %296 = phi i8* [ %292, %293 ], [ %102, %287 ]
  switch i64 %289, label %299 [
    i64 1, label %297
    i64 0, label %300
  ]

297:                                              ; preds = %295
  %298 = load i8, i8* %288, align 1, !tbaa !11
  store i8 %298, i8* %296, align 1, !tbaa !11
  br label %300

299:                                              ; preds = %295
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %296, i8* align 1 %288, i64 %289, i1 false) #7
  br label %300

300:                                              ; preds = %299, %297, %295
  %301 = load i64, i64* %3, align 8, !tbaa !16, !noalias !24
  store i64 %301, i64* %105, align 8, !tbaa !8, !alias.scope !24
  %302 = load i8*, i8** %103, align 8, !tbaa !15, !alias.scope !24
  %303 = getelementptr inbounds i8, i8* %302, i64 %301
  store i8 0, i8* %303, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #7, !noalias !24
  %304 = load i64, i64* %105, align 8, !tbaa !8, !alias.scope !24
  %305 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i64 %304, i64 0, i64 1, i8 signext %146)
          to label %311 unwind label %306

306:                                              ; preds = %300
  %307 = landingpad { i8*, i32 }
          cleanup
  %308 = load i8*, i8** %103, align 8, !tbaa !15, !alias.scope !24
  %309 = icmp eq i8* %308, %102
  br i1 %309, label %345, label %310

310:                                              ; preds = %306
  call void @_ZdlPv(i8* %308) #7
  br label %345

311:                                              ; preds = %300
  %312 = load i8*, i8** %103, align 8, !tbaa !15
  %313 = icmp eq i8* %312, %102
  br i1 %313, label %314, label %328

314:                                              ; preds = %311
  %315 = load i64, i64* %105, align 8, !tbaa !8
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %323, label %317

317:                                              ; preds = %314
  %318 = load i8*, i8** %21, align 8, !tbaa !15
  %319 = icmp eq i64 %315, 1
  br i1 %319, label %320, label %322

320:                                              ; preds = %317
  %321 = load i8, i8* %102, align 8, !tbaa !11
  store i8 %321, i8* %318, align 1, !tbaa !11
  br label %323

322:                                              ; preds = %317
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %318, i8* nonnull align 8 %102, i64 %315, i1 false) #7
  br label %323

323:                                              ; preds = %322, %320, %314
  %324 = load i64, i64* %105, align 8, !tbaa !8
  store i64 %324, i64* %22, align 8, !tbaa !8
  %325 = load i8*, i8** %21, align 8, !tbaa !15
  %326 = getelementptr inbounds i8, i8* %325, i64 %324
  store i8 0, i8* %326, align 1, !tbaa !11
  %327 = load i8*, i8** %103, align 8, !tbaa !15
  br label %337

328:                                              ; preds = %311
  %329 = load i8*, i8** %21, align 8, !tbaa !15
  %330 = icmp eq i8* %329, %20
  %331 = load i64, i64* %106, align 8
  store i8* %312, i8** %21, align 8, !tbaa !15
  %332 = load <2 x i64>, <2 x i64>* %127, align 8, !tbaa !11
  store <2 x i64> %332, <2 x i64>* %128, align 8, !tbaa !11
  %333 = icmp eq i8* %329, null
  %334 = or i1 %330, %333
  br i1 %334, label %336, label %335

335:                                              ; preds = %328
  store i8* %329, i8** %103, align 8, !tbaa !15
  store i64 %331, i64* %104, align 8, !tbaa !11
  br label %337

336:                                              ; preds = %328
  store %union.anon* %99, %union.anon** %100, align 8, !tbaa !15
  br label %337

337:                                              ; preds = %323, %335, %336
  %338 = phi i8* [ %327, %323 ], [ %329, %335 ], [ %102, %336 ]
  store i64 0, i64* %105, align 8, !tbaa !8
  store i8 0, i8* %338, align 1, !tbaa !11
  %339 = load i8*, i8** %103, align 8, !tbaa !15
  %340 = icmp eq i8* %339, %102
  br i1 %340, label %342, label %341

341:                                              ; preds = %337
  call void @_ZdlPv(i8* %339) #7
  br label %342

342:                                              ; preds = %337, %341
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %98) #7
  br label %347

343:                                              ; preds = %291
  %344 = landingpad { i8*, i32 }
          cleanup
  br label %345

345:                                              ; preds = %306, %310, %343
  %346 = phi { i8*, i32 } [ %344, %343 ], [ %307, %310 ], [ %307, %306 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %98) #7
  br label %351

347:                                              ; preds = %280, %342
  %348 = add nuw i64 %143, 1
  %349 = load i64, i64* %28, align 8, !tbaa !8
  %350 = icmp ugt i64 %349, %348
  br i1 %350, label %142, label %133, !llvm.loop !27

351:                                              ; preds = %218, %222, %285, %345, %140
  %352 = phi { i8*, i32 } [ %141, %140 ], [ %219, %218 ], [ %286, %285 ], [ %223, %222 ], [ %346, %345 ]
  %353 = load i8*, i8** %21, align 8, !tbaa !15
  %354 = icmp eq i8* %353, %20
  br i1 %354, label %356, label %355

355:                                              ; preds = %351
  call void @_ZdlPv(i8* %353) #7
  br label %356

356:                                              ; preds = %355, %351
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #7
  %357 = load i8*, i8** %15, align 8, !tbaa !15
  %358 = icmp eq i8* %357, %14
  br i1 %358, label %360, label %359

359:                                              ; preds = %356
  call void @_ZdlPv(i8* %357) #7
  br label %360

360:                                              ; preds = %359, %356
  resume { i8*, i32 } %352
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #3

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEElNS0_5__ops15_Iter_less_iterEEvT_SC_T0_T1_(i8* %0, i8* %1, i64 %2) local_unnamed_addr #0 comdat {
  %4 = ptrtoint i8* %0 to i64
  %5 = getelementptr inbounds i8, i8* %0, i64 1
  %6 = ptrtoint i8* %1 to i64
  %7 = sub i64 %6, %4
  %8 = icmp sgt i64 %7, 16
  br i1 %8, label %9, label %175

9:                                                ; preds = %3, %171
  %10 = phi i64 [ %173, %171 ], [ %7, %3 ]
  %11 = phi i64 [ %127, %171 ], [ %2, %3 ]
  %12 = phi i8* [ %159, %171 ], [ %1, %3 ]
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %14, label %126

14:                                               ; preds = %9
  %15 = add nsw i64 %10, -2
  %16 = lshr i64 %15, 1
  %17 = add nsw i64 %10, -1
  %18 = lshr i64 %17, 1
  %19 = and i64 %10, 1
  %20 = icmp eq i64 %19, 0
  %21 = or i64 %15, 1
  %22 = getelementptr inbounds i8, i8* %0, i64 %21
  %23 = getelementptr inbounds i8, i8* %0, i64 %16
  br label %24

24:                                               ; preds = %63, %14
  %25 = phi i64 [ %16, %14 ], [ %67, %63 ]
  %26 = getelementptr inbounds i8, i8* %0, i64 %25
  %27 = load i8, i8* %26, align 1, !tbaa !11
  %28 = icmp sgt i64 %18, %25
  br i1 %28, label %29, label %44

29:                                               ; preds = %24, %29
  %30 = phi i64 [ %39, %29 ], [ %25, %24 ]
  %31 = shl i64 %30, 1
  %32 = add i64 %31, 2
  %33 = getelementptr inbounds i8, i8* %0, i64 %32
  %34 = or i64 %31, 1
  %35 = getelementptr inbounds i8, i8* %0, i64 %34
  %36 = load i8, i8* %33, align 1, !tbaa !11
  %37 = load i8, i8* %35, align 1, !tbaa !11
  %38 = icmp slt i8 %36, %37
  %39 = select i1 %38, i64 %34, i64 %32
  %40 = getelementptr inbounds i8, i8* %0, i64 %39
  %41 = load i8, i8* %40, align 1, !tbaa !11
  %42 = getelementptr inbounds i8, i8* %0, i64 %30
  store i8 %41, i8* %42, align 1, !tbaa !11
  %43 = icmp slt i64 %39, %18
  br i1 %43, label %29, label %44, !llvm.loop !29

44:                                               ; preds = %29, %24
  %45 = phi i64 [ %25, %24 ], [ %39, %29 ]
  %46 = icmp eq i64 %45, %16
  %47 = select i1 %20, i1 %46, i1 false
  br i1 %47, label %48, label %50

48:                                               ; preds = %44
  %49 = load i8, i8* %22, align 1, !tbaa !11
  store i8 %49, i8* %23, align 1, !tbaa !11
  br label %50

50:                                               ; preds = %48, %44
  %51 = phi i64 [ %21, %48 ], [ %45, %44 ]
  %52 = icmp sgt i64 %51, %25
  br i1 %52, label %53, label %63

53:                                               ; preds = %50, %60
  %54 = phi i64 [ %56, %60 ], [ %51, %50 ]
  %55 = add nsw i64 %54, -1
  %56 = sdiv i64 %55, 2
  %57 = getelementptr inbounds i8, i8* %0, i64 %56
  %58 = load i8, i8* %57, align 1, !tbaa !11
  %59 = icmp slt i8 %58, %27
  br i1 %59, label %60, label %63

60:                                               ; preds = %53
  %61 = getelementptr inbounds i8, i8* %0, i64 %54
  store i8 %58, i8* %61, align 1, !tbaa !11
  %62 = icmp sgt i64 %56, %25
  br i1 %62, label %53, label %63, !llvm.loop !30

63:                                               ; preds = %60, %53, %50
  %64 = phi i64 [ %51, %50 ], [ %56, %60 ], [ %54, %53 ]
  %65 = getelementptr inbounds i8, i8* %0, i64 %64
  store i8 %27, i8* %65, align 1, !tbaa !11
  %66 = icmp eq i64 %25, 0
  %67 = add nsw i64 %25, -1
  br i1 %66, label %68, label %24, !llvm.loop !31

68:                                               ; preds = %63
  %69 = icmp sgt i64 %10, 1
  br i1 %69, label %70, label %175

70:                                               ; preds = %68, %122
  %71 = phi i8* [ %72, %122 ], [ %12, %68 ]
  %72 = getelementptr inbounds i8, i8* %71, i64 -1
  %73 = load i8, i8* %72, align 1, !tbaa !11
  %74 = load i8, i8* %0, align 1, !tbaa !11
  store i8 %74, i8* %72, align 1, !tbaa !11
  %75 = ptrtoint i8* %72 to i64
  %76 = sub i64 %75, %4
  %77 = add nsw i64 %76, -1
  %78 = sdiv i64 %77, 2
  %79 = icmp sgt i64 %76, 2
  br i1 %79, label %80, label %95

80:                                               ; preds = %70, %80
  %81 = phi i64 [ %90, %80 ], [ 0, %70 ]
  %82 = shl i64 %81, 1
  %83 = add i64 %82, 2
  %84 = getelementptr inbounds i8, i8* %0, i64 %83
  %85 = or i64 %82, 1
  %86 = getelementptr inbounds i8, i8* %0, i64 %85
  %87 = load i8, i8* %84, align 1, !tbaa !11
  %88 = load i8, i8* %86, align 1, !tbaa !11
  %89 = icmp slt i8 %87, %88
  %90 = select i1 %89, i64 %85, i64 %83
  %91 = getelementptr inbounds i8, i8* %0, i64 %90
  %92 = load i8, i8* %91, align 1, !tbaa !11
  %93 = getelementptr inbounds i8, i8* %0, i64 %81
  store i8 %92, i8* %93, align 1, !tbaa !11
  %94 = icmp slt i64 %90, %78
  br i1 %94, label %80, label %95, !llvm.loop !29

95:                                               ; preds = %80, %70
  %96 = phi i64 [ 0, %70 ], [ %90, %80 ]
  %97 = and i64 %76, 1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %109

99:                                               ; preds = %95
  %100 = add nsw i64 %76, -2
  %101 = sdiv i64 %100, 2
  %102 = icmp eq i64 %96, %101
  br i1 %102, label %103, label %109

103:                                              ; preds = %99
  %104 = shl i64 %96, 1
  %105 = or i64 %104, 1
  %106 = getelementptr inbounds i8, i8* %0, i64 %105
  %107 = load i8, i8* %106, align 1, !tbaa !11
  %108 = getelementptr inbounds i8, i8* %0, i64 %96
  store i8 %107, i8* %108, align 1, !tbaa !11
  br label %109

109:                                              ; preds = %103, %99, %95
  %110 = phi i64 [ %105, %103 ], [ %96, %99 ], [ %96, %95 ]
  %111 = icmp sgt i64 %110, 0
  br i1 %111, label %112, label %122

112:                                              ; preds = %109, %119
  %113 = phi i64 [ %115, %119 ], [ %110, %109 ]
  %114 = add nsw i64 %113, -1
  %115 = lshr i64 %114, 1
  %116 = getelementptr inbounds i8, i8* %0, i64 %115
  %117 = load i8, i8* %116, align 1, !tbaa !11
  %118 = icmp slt i8 %117, %73
  br i1 %118, label %119, label %122

119:                                              ; preds = %112
  %120 = getelementptr inbounds i8, i8* %0, i64 %113
  store i8 %117, i8* %120, align 1, !tbaa !11
  %121 = icmp ult i64 %114, 2
  br i1 %121, label %122, label %112, !llvm.loop !30

122:                                              ; preds = %119, %112, %109
  %123 = phi i64 [ %110, %109 ], [ %113, %112 ], [ 0, %119 ]
  %124 = getelementptr inbounds i8, i8* %0, i64 %123
  store i8 %73, i8* %124, align 1, !tbaa !11
  %125 = icmp sgt i64 %76, 1
  br i1 %125, label %70, label %175, !llvm.loop !32

126:                                              ; preds = %9
  %127 = add nsw i64 %11, -1
  %128 = lshr i64 %10, 1
  %129 = getelementptr inbounds i8, i8* %0, i64 %128
  %130 = getelementptr inbounds i8, i8* %12, i64 -1
  %131 = load i8, i8* %5, align 1, !tbaa !11
  %132 = load i8, i8* %129, align 1, !tbaa !11
  %133 = icmp slt i8 %131, %132
  %134 = load i8, i8* %130, align 1, !tbaa !11
  br i1 %133, label %135, label %144

135:                                              ; preds = %126
  %136 = icmp slt i8 %132, %134
  br i1 %136, label %137, label %139

137:                                              ; preds = %135
  %138 = load i8, i8* %0, align 1, !tbaa !11
  store i8 %132, i8* %0, align 1, !tbaa !11
  store i8 %138, i8* %129, align 1, !tbaa !11
  br label %153

139:                                              ; preds = %135
  %140 = icmp slt i8 %131, %134
  %141 = load i8, i8* %0, align 1, !tbaa !11
  br i1 %140, label %142, label %143

142:                                              ; preds = %139
  store i8 %134, i8* %0, align 1, !tbaa !11
  store i8 %141, i8* %130, align 1, !tbaa !11
  br label %153

143:                                              ; preds = %139
  store i8 %131, i8* %0, align 1, !tbaa !11
  store i8 %141, i8* %5, align 1, !tbaa !11
  br label %153

144:                                              ; preds = %126
  %145 = icmp slt i8 %131, %134
  br i1 %145, label %146, label %148

146:                                              ; preds = %144
  %147 = load i8, i8* %0, align 1, !tbaa !11
  store i8 %131, i8* %0, align 1, !tbaa !11
  store i8 %147, i8* %5, align 1, !tbaa !11
  br label %153

148:                                              ; preds = %144
  %149 = icmp slt i8 %132, %134
  %150 = load i8, i8* %0, align 1, !tbaa !11
  br i1 %149, label %151, label %152

151:                                              ; preds = %148
  store i8 %134, i8* %0, align 1, !tbaa !11
  store i8 %150, i8* %130, align 1, !tbaa !11
  br label %153

152:                                              ; preds = %148
  store i8 %132, i8* %0, align 1, !tbaa !11
  store i8 %150, i8* %129, align 1, !tbaa !11
  br label %153

153:                                              ; preds = %152, %151, %146, %143, %142, %137
  br label %154

154:                                              ; preds = %153, %170
  %155 = phi i8* [ %162, %170 ], [ %5, %153 ]
  %156 = phi i8* [ %165, %170 ], [ %12, %153 ]
  %157 = load i8, i8* %0, align 1, !tbaa !11
  br label %158

158:                                              ; preds = %158, %154
  %159 = phi i8* [ %155, %154 ], [ %162, %158 ]
  %160 = load i8, i8* %159, align 1, !tbaa !11
  %161 = icmp slt i8 %160, %157
  %162 = getelementptr inbounds i8, i8* %159, i64 1
  br i1 %161, label %158, label %163, !llvm.loop !33

163:                                              ; preds = %158, %163
  %164 = phi i8* [ %165, %163 ], [ %156, %158 ]
  %165 = getelementptr inbounds i8, i8* %164, i64 -1
  %166 = load i8, i8* %165, align 1, !tbaa !11
  %167 = icmp slt i8 %157, %166
  br i1 %167, label %163, label %168, !llvm.loop !34

168:                                              ; preds = %163
  %169 = icmp ult i8* %159, %165
  br i1 %169, label %170, label %171

170:                                              ; preds = %168
  store i8 %166, i8* %159, align 1, !tbaa !11
  store i8 %160, i8* %165, align 1, !tbaa !11
  br label %154, !llvm.loop !35

171:                                              ; preds = %168
  tail call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEElNS0_5__ops15_Iter_less_iterEEvT_SC_T0_T1_(i8* nonnull %159, i8* %12, i64 %127)
  %172 = ptrtoint i8* %159 to i64
  %173 = sub i64 %172, %4
  %174 = icmp sgt i64 %173, 16
  br i1 %174, label %9, label %175, !llvm.loop !36

175:                                              ; preds = %171, %122, %3, %68
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_5__ops15_Iter_less_iterEEvT_SC_T0_(i8* %0, i8* %1) local_unnamed_addr #0 comdat {
  %3 = ptrtoint i8* %1 to i64
  %4 = ptrtoint i8* %0 to i64
  %5 = sub i64 %3, %4
  %6 = icmp sgt i64 %5, 16
  br i1 %6, label %7, label %76

7:                                                ; preds = %2
  %8 = getelementptr inbounds i8, i8* %0, i64 1
  br label %9

9:                                                ; preds = %7, %27
  %10 = phi i64 [ %29, %27 ], [ 1, %7 ]
  %11 = phi i8* [ %12, %27 ], [ %0, %7 ]
  %12 = getelementptr inbounds i8, i8* %0, i64 %10
  %13 = load i8, i8* %12, align 1, !tbaa !11
  %14 = load i8, i8* %0, align 1, !tbaa !11
  %15 = icmp slt i8 %13, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %9
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 1 %8, i8* noundef nonnull align 1 %0, i64 %10, i1 false) #7
  br label %27

17:                                               ; preds = %9
  %18 = load i8, i8* %11, align 1, !tbaa !11
  %19 = icmp slt i8 %13, %18
  br i1 %19, label %20, label %27

20:                                               ; preds = %17, %20
  %21 = phi i8 [ %25, %20 ], [ %18, %17 ]
  %22 = phi i8* [ %24, %20 ], [ %11, %17 ]
  %23 = phi i8* [ %22, %20 ], [ %12, %17 ]
  store i8 %21, i8* %23, align 1, !tbaa !11
  %24 = getelementptr inbounds i8, i8* %22, i64 -1
  %25 = load i8, i8* %24, align 1, !tbaa !11
  %26 = icmp slt i8 %13, %25
  br i1 %26, label %20, label %27, !llvm.loop !37

27:                                               ; preds = %20, %17, %16
  %28 = phi i8* [ %0, %16 ], [ %12, %17 ], [ %22, %20 ]
  store i8 %13, i8* %28, align 1, !tbaa !11
  %29 = add nuw nsw i64 %10, 1
  %30 = icmp eq i64 %29, 16
  br i1 %30, label %31, label %9, !llvm.loop !38

31:                                               ; preds = %27
  %32 = getelementptr inbounds i8, i8* %0, i64 16
  %33 = icmp eq i8* %32, %1
  br i1 %33, label %106, label %34

34:                                               ; preds = %31
  %35 = sub i64 %3, %4
  %36 = add i64 %3, -17
  %37 = and i64 %35, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %54, label %39

39:                                               ; preds = %34
  %40 = load i8, i8* %32, align 1, !tbaa !11
  %41 = getelementptr inbounds i8, i8* %0, i64 15
  %42 = load i8, i8* %41, align 1, !tbaa !11
  %43 = icmp slt i8 %40, %42
  br i1 %43, label %44, label %51

44:                                               ; preds = %39, %44
  %45 = phi i8 [ %49, %44 ], [ %42, %39 ]
  %46 = phi i8* [ %48, %44 ], [ %41, %39 ]
  %47 = phi i8* [ %46, %44 ], [ %32, %39 ]
  store i8 %45, i8* %47, align 1, !tbaa !11
  %48 = getelementptr inbounds i8, i8* %46, i64 -1
  %49 = load i8, i8* %48, align 1, !tbaa !11
  %50 = icmp slt i8 %40, %49
  br i1 %50, label %44, label %51, !llvm.loop !37

51:                                               ; preds = %44, %39
  %52 = phi i8* [ %32, %39 ], [ %46, %44 ]
  store i8 %40, i8* %52, align 1, !tbaa !11
  %53 = getelementptr inbounds i8, i8* %0, i64 17
  br label %54

54:                                               ; preds = %51, %34
  %55 = phi i8* [ %32, %34 ], [ %53, %51 ]
  %56 = icmp eq i64 %36, %4
  br i1 %56, label %106, label %57

57:                                               ; preds = %54, %114
  %58 = phi i8* [ %116, %114 ], [ %55, %54 ]
  %59 = load i8, i8* %58, align 1, !tbaa !11
  %60 = getelementptr inbounds i8, i8* %58, i64 -1
  %61 = load i8, i8* %60, align 1, !tbaa !11
  %62 = icmp slt i8 %59, %61
  br i1 %62, label %63, label %70

63:                                               ; preds = %57, %63
  %64 = phi i8 [ %68, %63 ], [ %61, %57 ]
  %65 = phi i8* [ %67, %63 ], [ %60, %57 ]
  %66 = phi i8* [ %65, %63 ], [ %58, %57 ]
  store i8 %64, i8* %66, align 1, !tbaa !11
  %67 = getelementptr inbounds i8, i8* %65, i64 -1
  %68 = load i8, i8* %67, align 1, !tbaa !11
  %69 = icmp slt i8 %59, %68
  br i1 %69, label %63, label %70, !llvm.loop !37

70:                                               ; preds = %63, %57
  %71 = phi i8* [ %58, %57 ], [ %65, %63 ]
  store i8 %59, i8* %71, align 1, !tbaa !11
  %72 = getelementptr inbounds i8, i8* %58, i64 1
  %73 = load i8, i8* %72, align 1, !tbaa !11
  %74 = load i8, i8* %58, align 1, !tbaa !11
  %75 = icmp slt i8 %73, %74
  br i1 %75, label %107, label %114

76:                                               ; preds = %2
  %77 = icmp eq i8* %0, %1
  br i1 %77, label %106, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds i8, i8* %0, i64 1
  %80 = icmp eq i8* %79, %1
  br i1 %80, label %106, label %81

81:                                               ; preds = %78, %102
  %82 = phi i8* [ %104, %102 ], [ %79, %78 ]
  %83 = phi i8* [ %82, %102 ], [ %0, %78 ]
  %84 = load i8, i8* %82, align 1, !tbaa !11
  %85 = load i8, i8* %0, align 1, !tbaa !11
  %86 = icmp slt i8 %84, %85
  br i1 %86, label %87, label %92

87:                                               ; preds = %81
  %88 = ptrtoint i8* %82 to i64
  %89 = sub i64 %88, %4
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %102, label %91

91:                                               ; preds = %87
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %79, i8* nonnull align 1 %0, i64 %89, i1 false) #7
  br label %102

92:                                               ; preds = %81
  %93 = load i8, i8* %83, align 1, !tbaa !11
  %94 = icmp slt i8 %84, %93
  br i1 %94, label %95, label %102

95:                                               ; preds = %92, %95
  %96 = phi i8 [ %100, %95 ], [ %93, %92 ]
  %97 = phi i8* [ %99, %95 ], [ %83, %92 ]
  %98 = phi i8* [ %97, %95 ], [ %82, %92 ]
  store i8 %96, i8* %98, align 1, !tbaa !11
  %99 = getelementptr inbounds i8, i8* %97, i64 -1
  %100 = load i8, i8* %99, align 1, !tbaa !11
  %101 = icmp slt i8 %84, %100
  br i1 %101, label %95, label %102, !llvm.loop !37

102:                                              ; preds = %95, %92, %91, %87
  %103 = phi i8* [ %0, %87 ], [ %0, %91 ], [ %82, %92 ], [ %97, %95 ]
  store i8 %84, i8* %103, align 1, !tbaa !11
  %104 = getelementptr inbounds i8, i8* %82, i64 1
  %105 = icmp eq i8* %104, %1
  br i1 %105, label %106, label %81, !llvm.loop !38

106:                                              ; preds = %102, %54, %114, %78, %76, %31
  ret void

107:                                              ; preds = %70, %107
  %108 = phi i8 [ %112, %107 ], [ %74, %70 ]
  %109 = phi i8* [ %111, %107 ], [ %58, %70 ]
  %110 = phi i8* [ %109, %107 ], [ %72, %70 ]
  store i8 %108, i8* %110, align 1, !tbaa !11
  %111 = getelementptr inbounds i8, i8* %109, i64 -1
  %112 = load i8, i8* %111, align 1, !tbaa !11
  %113 = icmp slt i8 %73, %112
  br i1 %113, label %107, label %114, !llvm.loop !37

114:                                              ; preds = %107, %70
  %115 = phi i8* [ %72, %70 ], [ %109, %107 ]
  store i8 %73, i8* %115, align 1, !tbaa !11
  %116 = getelementptr inbounds i8, i8* %58, i64 2
  %117 = icmp eq i8* %116, %1
  br i1 %117, label %106, label %57, !llvm.loop !39
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #5

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #3

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #6

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!14 = distinct !{!14, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!15 = !{!9, !5, i64 0}
!16 = !{!10, !10, i64 0}
!17 = !{i64 0, i64 65}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!20 = distinct !{!20, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!23 = distinct !{!23, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!26 = distinct !{!26, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!27 = distinct !{!27, !28}
!28 = !{!"llvm.loop.mustprogress"}
!29 = distinct !{!29, !28}
!30 = distinct !{!30, !28}
!31 = distinct !{!31, !28}
!32 = distinct !{!32, !28}
!33 = distinct !{!33, !28}
!34 = distinct !{!34, !28}
!35 = distinct !{!35, !28}
!36 = distinct !{!36, !28}
!37 = distinct !{!37, !28}
!38 = distinct !{!38, !28}
!39 = distinct !{!39, !28}
