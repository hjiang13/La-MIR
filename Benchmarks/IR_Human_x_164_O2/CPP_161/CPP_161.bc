; ModuleID = '../../Human_xBenchmarks_164/CPP_161/CPP_161.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_161/CPP_161.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: uwtable
define dso_local void @_Z5solveNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %9 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  store %union.anon* %8, %union.anon** %9, align 8, !tbaa !3
  %10 = bitcast %union.anon* %8 to i8*
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  store i64 0, i64* %12, align 8, !tbaa !8
  store i8 0, i8* %10, align 8, !tbaa !11
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %15 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %17 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  %18 = bitcast i64* %4 to i8*
  %19 = bitcast %union.anon* %16 to i8*
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %24 = load i64, i64* %13, align 8, !tbaa !8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %2
  %27 = bitcast i64* %22 to <2 x i64>*
  %28 = bitcast i64* %12 to <2 x i64>*
  br label %34

29:                                               ; preds = %108, %2
  %30 = phi i32 [ 0, %2 ], [ %52, %108 ]
  %31 = phi i64 [ 0, %2 ], [ %110, %108 ]
  %32 = sext i32 %30 to i64
  %33 = icmp eq i64 %31, %32
  br i1 %33, label %116, label %246

34:                                               ; preds = %26, %108
  %35 = phi i64 [ %109, %108 ], [ 0, %26 ]
  %36 = phi i32 [ %52, %108 ], [ 0, %26 ]
  %37 = load i8*, i8** %14, align 8, !tbaa !12
  %38 = getelementptr inbounds i8, i8* %37, i64 %35
  %39 = load i8, i8* %38, align 1, !tbaa !11
  %40 = add i8 %39, -65
  %41 = icmp ult i8 %40, 26
  br i1 %41, label %42, label %44

42:                                               ; preds = %34
  %43 = add nuw nsw i8 %39, 32
  br label %51

44:                                               ; preds = %34
  %45 = add i8 %39, -97
  %46 = icmp ult i8 %45, 26
  br i1 %46, label %47, label %49

47:                                               ; preds = %44
  %48 = add nsw i8 %39, -32
  br label %51

49:                                               ; preds = %44
  %50 = add nsw i32 %36, 1
  br label %51

51:                                               ; preds = %47, %49, %42
  %52 = phi i32 [ %36, %42 ], [ %36, %47 ], [ %50, %49 ]
  %53 = phi i8 [ %43, %42 ], [ %48, %47 ], [ %39, %49 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #6
  call void @llvm.experimental.noalias.scope.decl(metadata !13)
  store %union.anon* %16, %union.anon** %17, align 8, !tbaa !3, !alias.scope !13
  %54 = load i8*, i8** %11, align 8, !tbaa !12, !noalias !13
  %55 = load i64, i64* %12, align 8, !tbaa !8, !noalias !13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6, !noalias !13
  store i64 %55, i64* %4, align 8, !tbaa !16, !noalias !13
  %56 = icmp ugt i64 %55, 15
  br i1 %56, label %57, label %61

57:                                               ; preds = %51
  %58 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %59 unwind label %112

59:                                               ; preds = %57
  store i8* %58, i8** %20, align 8, !tbaa !12, !alias.scope !13
  %60 = load i64, i64* %4, align 8, !tbaa !16, !noalias !13
  store i64 %60, i64* %21, align 8, !tbaa !11, !alias.scope !13
  br label %61

61:                                               ; preds = %51, %59
  %62 = phi i8* [ %58, %59 ], [ %19, %51 ]
  switch i64 %55, label %65 [
    i64 1, label %63
    i64 0, label %66
  ]

63:                                               ; preds = %61
  %64 = load i8, i8* %54, align 1, !tbaa !11
  store i8 %64, i8* %62, align 1, !tbaa !11
  br label %66

65:                                               ; preds = %61
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %62, i8* align 1 %54, i64 %55, i1 false) #6
  br label %66

66:                                               ; preds = %65, %63, %61
  %67 = load i64, i64* %4, align 8, !tbaa !16, !noalias !13
  store i64 %67, i64* %22, align 8, !tbaa !8, !alias.scope !13
  %68 = load i8*, i8** %20, align 8, !tbaa !12, !alias.scope !13
  %69 = getelementptr inbounds i8, i8* %68, i64 %67
  store i8 0, i8* %69, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6, !noalias !13
  %70 = load i64, i64* %22, align 8, !tbaa !8, !alias.scope !13
  %71 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64 %70, i64 0, i64 1, i8 signext %53)
          to label %77 unwind label %72

72:                                               ; preds = %66
  %73 = landingpad { i8*, i32 }
          cleanup
  %74 = load i8*, i8** %20, align 8, !tbaa !12, !alias.scope !13
  %75 = icmp eq i8* %74, %19
  br i1 %75, label %114, label %76

76:                                               ; preds = %72
  call void @_ZdlPv(i8* %74) #6
  br label %114

77:                                               ; preds = %66
  %78 = load i8*, i8** %20, align 8, !tbaa !12
  %79 = icmp eq i8* %78, %19
  br i1 %79, label %80, label %94

80:                                               ; preds = %77
  %81 = load i64, i64* %22, align 8, !tbaa !8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %80
  %84 = load i8*, i8** %11, align 8, !tbaa !12
  %85 = icmp eq i64 %81, 1
  br i1 %85, label %86, label %88

86:                                               ; preds = %83
  %87 = load i8, i8* %19, align 8, !tbaa !11
  store i8 %87, i8* %84, align 1, !tbaa !11
  br label %89

88:                                               ; preds = %83
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* nonnull align 8 %19, i64 %81, i1 false) #6
  br label %89

89:                                               ; preds = %88, %86, %80
  %90 = load i64, i64* %22, align 8, !tbaa !8
  store i64 %90, i64* %12, align 8, !tbaa !8
  %91 = load i8*, i8** %11, align 8, !tbaa !12
  %92 = getelementptr inbounds i8, i8* %91, i64 %90
  store i8 0, i8* %92, align 1, !tbaa !11
  %93 = load i8*, i8** %20, align 8, !tbaa !12
  br label %103

94:                                               ; preds = %77
  %95 = load i8*, i8** %11, align 8, !tbaa !12
  %96 = icmp eq i8* %95, %10
  %97 = load i64, i64* %23, align 8
  store i8* %78, i8** %11, align 8, !tbaa !12
  %98 = load <2 x i64>, <2 x i64>* %27, align 8, !tbaa !11
  store <2 x i64> %98, <2 x i64>* %28, align 8, !tbaa !11
  %99 = icmp eq i8* %95, null
  %100 = or i1 %96, %99
  br i1 %100, label %102, label %101

101:                                              ; preds = %94
  store i8* %95, i8** %20, align 8, !tbaa !12
  store i64 %97, i64* %21, align 8, !tbaa !11
  br label %103

102:                                              ; preds = %94
  store %union.anon* %16, %union.anon** %17, align 8, !tbaa !12
  br label %103

103:                                              ; preds = %89, %101, %102
  %104 = phi i8* [ %95, %101 ], [ %19, %102 ], [ %93, %89 ]
  store i64 0, i64* %22, align 8, !tbaa !8
  store i8 0, i8* %104, align 1, !tbaa !11
  %105 = load i8*, i8** %20, align 8, !tbaa !12
  %106 = icmp eq i8* %105, %19
  br i1 %106, label %108, label %107

107:                                              ; preds = %103
  call void @_ZdlPv(i8* %105) #6
  br label %108

108:                                              ; preds = %103, %107
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #6
  %109 = add nuw i64 %35, 1
  %110 = load i64, i64* %13, align 8, !tbaa !8
  %111 = icmp ugt i64 %110, %109
  br i1 %111, label %34, label %29, !llvm.loop !17

112:                                              ; preds = %57
  %113 = landingpad { i8*, i32 }
          cleanup
  br label %114

114:                                              ; preds = %72, %76, %112
  %115 = phi { i8*, i32 } [ %113, %112 ], [ %73, %76 ], [ %73, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #6
  br label %269

116:                                              ; preds = %29
  %117 = load i8*, i8** %14, align 8, !tbaa !12, !noalias !19
  %118 = ptrtoint i8* %117 to i64
  %119 = getelementptr inbounds i8, i8* %117, i64 %31
  %120 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %121 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %120, %union.anon** %121, align 8, !tbaa !3
  %122 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #6
  store i64 %31, i64* %3, align 8, !tbaa !16
  %123 = icmp ugt i64 %31, 15
  br i1 %123, label %124, label %130

124:                                              ; preds = %116
  %125 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %126 unwind label %244

126:                                              ; preds = %124
  %127 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %125, i8** %127, align 8, !tbaa !12
  %128 = load i64, i64* %3, align 8, !tbaa !16
  %129 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %128, i64* %129, align 8, !tbaa !11
  br label %133

130:                                              ; preds = %116
  %131 = bitcast %union.anon* %120 to i8*
  %132 = icmp eq i64 %31, 0
  br i1 %132, label %260, label %133

133:                                              ; preds = %126, %130
  %134 = phi i8* [ %125, %126 ], [ %131, %130 ]
  %135 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %136 = icmp ult i64 %31, 4
  br i1 %136, label %191, label %137

137:                                              ; preds = %133
  %138 = getelementptr i8, i8* %134, i64 %31
  %139 = icmp ult i8* %134, %119
  %140 = icmp ult i8* %117, %138
  %141 = and i1 %139, %140
  br i1 %141, label %191, label %142

142:                                              ; preds = %137
  %143 = icmp ult i64 %31, 32
  br i1 %143, label %172, label %144

144:                                              ; preds = %142
  %145 = and i64 %31, -32
  br label %146

146:                                              ; preds = %146, %144
  %147 = phi i64 [ 0, %144 ], [ %162, %146 ]
  %148 = getelementptr i8, i8* %134, i64 %147
  %149 = xor i64 %147, -1
  %150 = getelementptr i8, i8* %119, i64 %149
  %151 = getelementptr inbounds i8, i8* %150, i64 -15
  %152 = bitcast i8* %151 to <16 x i8>*
  %153 = load <16 x i8>, <16 x i8>* %152, align 1, !tbaa !11, !alias.scope !22
  %154 = shufflevector <16 x i8> %153, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %155 = getelementptr inbounds i8, i8* %150, i64 -31
  %156 = bitcast i8* %155 to <16 x i8>*
  %157 = load <16 x i8>, <16 x i8>* %156, align 1, !tbaa !11, !alias.scope !22
  %158 = shufflevector <16 x i8> %157, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %159 = bitcast i8* %148 to <16 x i8>*
  store <16 x i8> %154, <16 x i8>* %159, align 1, !tbaa !11, !alias.scope !25, !noalias !22
  %160 = getelementptr i8, i8* %148, i64 16
  %161 = bitcast i8* %160 to <16 x i8>*
  store <16 x i8> %158, <16 x i8>* %161, align 1, !tbaa !11, !alias.scope !25, !noalias !22
  %162 = add nuw i64 %147, 32
  %163 = icmp eq i64 %162, %145
  br i1 %163, label %164, label %146, !llvm.loop !27

164:                                              ; preds = %146
  %165 = icmp eq i64 %31, %145
  br i1 %165, label %241, label %166

166:                                              ; preds = %164
  %167 = getelementptr i8, i8* %134, i64 %145
  %168 = sub i64 0, %145
  %169 = getelementptr i8, i8* %119, i64 %168
  %170 = and i64 %31, 28
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %191, label %172

172:                                              ; preds = %142, %166
  %173 = phi i64 [ %145, %166 ], [ 0, %142 ]
  %174 = and i64 %31, -4
  %175 = sub i64 0, %174
  %176 = getelementptr i8, i8* %119, i64 %175
  %177 = getelementptr i8, i8* %134, i64 %174
  br label %178

178:                                              ; preds = %178, %172
  %179 = phi i64 [ %173, %172 ], [ %187, %178 ]
  %180 = getelementptr i8, i8* %134, i64 %179
  %181 = sub nuw nsw i64 -4, %179
  %182 = getelementptr i8, i8* %119, i64 %181
  %183 = bitcast i8* %182 to <4 x i8>*
  %184 = load <4 x i8>, <4 x i8>* %183, align 1, !tbaa !11
  %185 = shufflevector <4 x i8> %184, <4 x i8> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %186 = bitcast i8* %180 to <4 x i8>*
  store <4 x i8> %185, <4 x i8>* %186, align 1, !tbaa !11
  %187 = add nuw i64 %179, 4
  %188 = icmp eq i64 %187, %174
  br i1 %188, label %189, label %178, !llvm.loop !29

189:                                              ; preds = %178
  %190 = icmp eq i64 %31, %174
  br i1 %190, label %241, label %191

191:                                              ; preds = %137, %133, %166, %189
  %192 = phi i8* [ %119, %133 ], [ %119, %137 ], [ %169, %166 ], [ %176, %189 ]
  %193 = phi i8* [ %134, %133 ], [ %134, %137 ], [ %167, %166 ], [ %177, %189 ]
  %194 = ptrtoint i8* %192 to i64
  %195 = sub i64 %194, %118
  %196 = xor i64 %118, -1
  %197 = add i64 %196, %194
  %198 = and i64 %195, 7
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %209, label %200

200:                                              ; preds = %191, %200
  %201 = phi i8* [ %204, %200 ], [ %192, %191 ]
  %202 = phi i8* [ %206, %200 ], [ %193, %191 ]
  %203 = phi i64 [ %207, %200 ], [ %198, %191 ]
  %204 = getelementptr inbounds i8, i8* %201, i64 -1
  %205 = load i8, i8* %204, align 1, !tbaa !11
  store i8 %205, i8* %202, align 1, !tbaa !11
  %206 = getelementptr inbounds i8, i8* %202, i64 1
  %207 = add i64 %203, -1
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %200, !llvm.loop !30

209:                                              ; preds = %200, %191
  %210 = phi i8* [ %192, %191 ], [ %204, %200 ]
  %211 = phi i8* [ %193, %191 ], [ %206, %200 ]
  %212 = icmp ult i64 %197, 7
  br i1 %212, label %241, label %213

213:                                              ; preds = %209, %213
  %214 = phi i8* [ %237, %213 ], [ %210, %209 ]
  %215 = phi i8* [ %239, %213 ], [ %211, %209 ]
  %216 = getelementptr inbounds i8, i8* %214, i64 -1
  %217 = load i8, i8* %216, align 1, !tbaa !11
  store i8 %217, i8* %215, align 1, !tbaa !11
  %218 = getelementptr inbounds i8, i8* %215, i64 1
  %219 = getelementptr inbounds i8, i8* %214, i64 -2
  %220 = load i8, i8* %219, align 1, !tbaa !11
  store i8 %220, i8* %218, align 1, !tbaa !11
  %221 = getelementptr inbounds i8, i8* %215, i64 2
  %222 = getelementptr inbounds i8, i8* %214, i64 -3
  %223 = load i8, i8* %222, align 1, !tbaa !11
  store i8 %223, i8* %221, align 1, !tbaa !11
  %224 = getelementptr inbounds i8, i8* %215, i64 3
  %225 = getelementptr inbounds i8, i8* %214, i64 -4
  %226 = load i8, i8* %225, align 1, !tbaa !11
  store i8 %226, i8* %224, align 1, !tbaa !11
  %227 = getelementptr inbounds i8, i8* %215, i64 4
  %228 = getelementptr inbounds i8, i8* %214, i64 -5
  %229 = load i8, i8* %228, align 1, !tbaa !11
  store i8 %229, i8* %227, align 1, !tbaa !11
  %230 = getelementptr inbounds i8, i8* %215, i64 5
  %231 = getelementptr inbounds i8, i8* %214, i64 -6
  %232 = load i8, i8* %231, align 1, !tbaa !11
  store i8 %232, i8* %230, align 1, !tbaa !11
  %233 = getelementptr inbounds i8, i8* %215, i64 6
  %234 = getelementptr inbounds i8, i8* %214, i64 -7
  %235 = load i8, i8* %234, align 1, !tbaa !11
  store i8 %235, i8* %233, align 1, !tbaa !11
  %236 = getelementptr inbounds i8, i8* %215, i64 7
  %237 = getelementptr inbounds i8, i8* %214, i64 -8
  %238 = load i8, i8* %237, align 1, !tbaa !11
  store i8 %238, i8* %236, align 1, !tbaa !11
  %239 = getelementptr inbounds i8, i8* %215, i64 8
  %240 = icmp eq i8* %237, %117
  br i1 %240, label %241, label %213, !llvm.loop !32

241:                                              ; preds = %209, %213, %189, %164
  %242 = load i64, i64* %3, align 8, !tbaa !16
  %243 = load i8*, i8** %135, align 8, !tbaa !12
  br label %260

244:                                              ; preds = %124
  %245 = landingpad { i8*, i32 }
          cleanup
  br label %269

246:                                              ; preds = %29
  %247 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %248 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %247, %union.anon** %248, align 8, !tbaa !3
  %249 = load i8*, i8** %11, align 8, !tbaa !12
  %250 = icmp eq i8* %249, %10
  br i1 %250, label %251, label %253

251:                                              ; preds = %246
  %252 = bitcast %union.anon* %247 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %252, i8* noundef nonnull align 8 dereferenceable(16) %10, i64 16, i1 false) #6
  br label %257

253:                                              ; preds = %246
  %254 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %249, i8** %254, align 8, !tbaa !12
  %255 = load i64, i64* %23, align 8, !tbaa !11
  %256 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %255, i64* %256, align 8, !tbaa !11
  br label %257

257:                                              ; preds = %253, %251
  %258 = load i64, i64* %12, align 8, !tbaa !8
  %259 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %258, i64* %259, align 8, !tbaa !8
  store %union.anon* %8, %union.anon** %9, align 8, !tbaa !12
  br label %268

260:                                              ; preds = %130, %241
  %261 = phi i8* [ %243, %241 ], [ %131, %130 ]
  %262 = phi i64 [ %242, %241 ], [ 0, %130 ]
  %263 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %262, i64* %263, align 8, !tbaa !8
  %264 = getelementptr inbounds i8, i8* %261, i64 %262
  store i8 0, i8* %264, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #6
  %265 = load i8*, i8** %11, align 8, !tbaa !12
  %266 = icmp eq i8* %265, %10
  br i1 %266, label %268, label %267

267:                                              ; preds = %260
  call void @_ZdlPv(i8* %265) #6
  br label %268

268:                                              ; preds = %257, %260, %267
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #6
  ret void

269:                                              ; preds = %244, %114
  %270 = phi { i8*, i32 } [ %115, %114 ], [ %245, %244 ]
  %271 = load i8*, i8** %11, align 8, !tbaa !12
  %272 = icmp eq i8* %271, %10
  br i1 %272, label %274, label %273

273:                                              ; preds = %269
  call void @_ZdlPv(i8* %271) #6
  br label %274

274:                                              ; preds = %273, %269
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #6
  resume { i8*, i32 } %270
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #4

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #5

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!15 = distinct !{!15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!16 = !{!10, !10, i64 0}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.mustprogress"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv: argument 0"}
!21 = distinct !{!21, !"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv"}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !18, !28}
!28 = !{!"llvm.loop.isvectorized", i32 1}
!29 = distinct !{!29, !18, !28}
!30 = distinct !{!30, !31}
!31 = !{!"llvm.loop.unroll.disable"}
!32 = distinct !{!32, !18, !28}
