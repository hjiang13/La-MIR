; ModuleID = '../../Human_xBenchmarks_164/CPP_38/CPP_38.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_38/CPP_38.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@.str = private unnamed_addr constant [21 x i8] c"basic_string::substr\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"%s: __pos (which is %zu) > this->size() (which is %zu)\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z13encode_cyclicNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !3
  %11 = trunc i64 %10 to i32
  %12 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #7
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %14 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  store %union.anon* %13, %union.anon** %14, align 8, !tbaa !10
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  store i64 0, i64* %15, align 8, !tbaa !3
  %16 = bitcast %union.anon* %13 to i8*
  store i8 0, i8* %16, align 8, !tbaa !11
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %18 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %17, %union.anon** %18, align 8, !tbaa !10
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %19, align 8, !tbaa !3
  %20 = bitcast %union.anon* %17 to i8*
  store i8 0, i8* %20, align 8, !tbaa !11
  %21 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %23 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  %24 = bitcast %union.anon* %22 to i8*
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %30 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  %31 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %33 = bitcast %"class.std::__cxx11::basic_string"* %7 to %union.anon**
  %34 = bitcast %union.anon* %32 to i8*
  %35 = bitcast %union.anon* %32 to i16*
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %39 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  %40 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %42 = bitcast %union.anon* %38 to i8*
  %43 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  %44 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %46 = bitcast %"class.std::__cxx11::basic_string"* %8 to %union.anon**
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %48 = bitcast i64* %3 to i8*
  %49 = bitcast %union.anon* %45 to i8*
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  %52 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 1
  %53 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %54 = icmp sgt i32 %11, 0
  br i1 %54, label %55, label %241

55:                                               ; preds = %2
  %56 = getelementptr inbounds i8, i8* %34, i64 2
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #7
  %57 = bitcast i64* %43 to <2 x i64>*
  %58 = bitcast i64* %15 to <2 x i64>*
  %59 = bitcast i64* %52 to <2 x i64>*
  %60 = bitcast i64* %19 to <2 x i64>*
  br label %64

61:                                               ; preds = %219
  %62 = zext i32 %217 to i64
  invoke void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 %62, i64 %220) #8
          to label %63 unwind label %150

63:                                               ; preds = %61
  unreachable

64:                                               ; preds = %55, %219
  %65 = phi i64 [ 0, %55 ], [ %221, %219 ]
  %66 = phi i64 [ 0, %55 ], [ %215, %219 ]
  %67 = phi i64 [ %10, %55 ], [ %220, %219 ]
  call void @llvm.experimental.noalias.scope.decl(metadata !12)
  store %union.anon* %22, %union.anon** %23, align 8, !tbaa !10, !alias.scope !12
  %68 = load i8*, i8** %25, align 8, !tbaa !15, !noalias !12
  %69 = getelementptr inbounds i8, i8* %68, i64 %65
  %70 = sub i64 %67, %65
  %71 = icmp ult i64 %70, 3
  %72 = select i1 %71, i64 %70, i64 3
  switch i64 %72, label %80 [
    i64 1, label %75
    i64 0, label %73
  ]

73:                                               ; preds = %64
  store i64 %72, i64* %27, align 8, !tbaa !3, !alias.scope !12
  %74 = getelementptr inbounds i8, i8* %24, i64 %72
  store i8 0, i8* %74, align 1, !tbaa !11
  br label %83

75:                                               ; preds = %64
  %76 = load i8, i8* %69, align 1, !tbaa !11
  store i8 %76, i8* %24, align 8, !tbaa !11
  store i64 %72, i64* %27, align 8, !tbaa !3, !alias.scope !12
  %77 = getelementptr inbounds i8, i8* %24, i64 %72
  store i8 0, i8* %77, align 1, !tbaa !11
  %78 = load i8*, i8** %28, align 8, !tbaa !15
  %79 = load i8, i8* %24, align 8, !tbaa !11
  store i8 %79, i8* %78, align 1, !tbaa !11
  br label %83

80:                                               ; preds = %64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 1 %69, i64 %72, i1 false) #7
  store i64 %72, i64* %27, align 8, !tbaa !3, !alias.scope !12
  %81 = getelementptr inbounds i8, i8* %24, i64 %72
  store i8 0, i8* %81, align 1, !tbaa !11
  %82 = load i8*, i8** %28, align 8, !tbaa !15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %82, i8* nonnull align 8 %24, i64 %72, i1 false) #7
  br label %83

83:                                               ; preds = %75, %80, %73
  %84 = load i64, i64* %27, align 8, !tbaa !3
  store i64 %84, i64* %15, align 8, !tbaa !3
  %85 = load i8*, i8** %28, align 8, !tbaa !15
  %86 = getelementptr inbounds i8, i8* %85, i64 %84
  store i8 0, i8* %86, align 1, !tbaa !11
  %87 = load i8*, i8** %26, align 8, !tbaa !15
  store i64 0, i64* %27, align 8, !tbaa !3
  store i8 0, i8* %87, align 1, !tbaa !11
  %88 = load i8*, i8** %26, align 8, !tbaa !15
  %89 = icmp eq i8* %88, %24
  br i1 %89, label %91, label %90

90:                                               ; preds = %83
  call void @_ZdlPv(i8* %88) #7
  br label %91

91:                                               ; preds = %83, %90
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #7
  %92 = load i64, i64* %15, align 8, !tbaa !3
  %93 = icmp eq i64 %92, 3
  br i1 %93, label %94, label %158

94:                                               ; preds = %91
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #7
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #7
  store %union.anon* %32, %union.anon** %33, align 8, !tbaa !10, !alias.scope !16
  %95 = load i8*, i8** %28, align 8, !tbaa !15
  %96 = getelementptr inbounds i8, i8* %95, i64 1
  %97 = bitcast i8* %96 to i16*
  %98 = load i16, i16* %97, align 1
  store i16 %98, i16* %35, align 8
  store i64 2, i64* %37, align 8, !tbaa !3, !alias.scope !16
  store i8 0, i8* %56, align 2, !tbaa !11
  %99 = load i8, i8* %95, align 1, !tbaa !11
  %100 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i64 2, i64 0, i64 1, i8 signext %99)
          to label %101 unwind label %152

101:                                              ; preds = %94
  store %union.anon* %38, %union.anon** %39, align 8, !tbaa !10, !alias.scope !19
  %102 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %100, i64 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8, !tbaa !15
  %104 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %100, i64 0, i32 2
  %105 = bitcast %union.anon* %104 to i8*
  %106 = icmp eq i8* %103, %105
  br i1 %106, label %107, label %108

107:                                              ; preds = %101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %42, i8* noundef nonnull align 8 dereferenceable(16) %103, i64 16, i1 false) #7
  br label %111

108:                                              ; preds = %101
  store i8* %103, i8** %40, align 8, !tbaa !15, !alias.scope !19
  %109 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %100, i64 0, i32 2, i32 0
  %110 = load i64, i64* %109, align 8, !tbaa !11
  store i64 %110, i64* %41, align 8, !tbaa !11, !alias.scope !19
  br label %111

111:                                              ; preds = %108, %107
  %112 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %100, i64 0, i32 1
  %113 = load i64, i64* %112, align 8, !tbaa !3
  store i64 %113, i64* %43, align 8, !tbaa !3, !alias.scope !19
  %114 = bitcast %"class.std::__cxx11::basic_string"* %100 to %union.anon**
  store %union.anon* %104, %union.anon** %114, align 8, !tbaa !15
  store i64 0, i64* %112, align 8, !tbaa !3
  store i8 0, i8* %105, align 8, !tbaa !11
  %115 = load i8*, i8** %40, align 8, !tbaa !15
  %116 = icmp eq i8* %115, %42
  br i1 %116, label %117, label %131

117:                                              ; preds = %111
  %118 = load i64, i64* %43, align 8, !tbaa !3
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %126, label %120

120:                                              ; preds = %117
  %121 = load i8*, i8** %28, align 8, !tbaa !15
  %122 = icmp eq i64 %118, 1
  br i1 %122, label %123, label %125

123:                                              ; preds = %120
  %124 = load i8, i8* %42, align 8, !tbaa !11
  store i8 %124, i8* %121, align 1, !tbaa !11
  br label %126

125:                                              ; preds = %120
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %121, i8* nonnull align 8 %42, i64 %118, i1 false) #7
  br label %126

126:                                              ; preds = %125, %123, %117
  %127 = load i64, i64* %43, align 8, !tbaa !3
  store i64 %127, i64* %15, align 8, !tbaa !3
  %128 = load i8*, i8** %28, align 8, !tbaa !15
  %129 = getelementptr inbounds i8, i8* %128, i64 %127
  store i8 0, i8* %129, align 1, !tbaa !11
  %130 = load i8*, i8** %40, align 8, !tbaa !15
  br label %140

131:                                              ; preds = %111
  %132 = load i8*, i8** %28, align 8, !tbaa !15
  %133 = icmp eq i8* %132, %16
  %134 = load i64, i64* %29, align 8
  store i8* %115, i8** %28, align 8, !tbaa !15
  %135 = load <2 x i64>, <2 x i64>* %57, align 8, !tbaa !11
  store <2 x i64> %135, <2 x i64>* %58, align 8, !tbaa !11
  %136 = icmp eq i8* %132, null
  %137 = or i1 %133, %136
  br i1 %137, label %139, label %138

138:                                              ; preds = %131
  store i8* %132, i8** %40, align 8, !tbaa !15
  store i64 %134, i64* %41, align 8, !tbaa !11
  br label %140

139:                                              ; preds = %131
  store %union.anon* %38, %union.anon** %39, align 8, !tbaa !15
  br label %140

140:                                              ; preds = %126, %138, %139
  %141 = phi i8* [ %130, %126 ], [ %132, %138 ], [ %42, %139 ]
  store i64 0, i64* %43, align 8, !tbaa !3
  store i8 0, i8* %141, align 1, !tbaa !11
  %142 = load i8*, i8** %40, align 8, !tbaa !15
  %143 = icmp eq i8* %142, %42
  br i1 %143, label %145, label %144

144:                                              ; preds = %140
  call void @_ZdlPv(i8* %142) #7
  br label %145

145:                                              ; preds = %140, %144
  %146 = load i8*, i8** %36, align 8, !tbaa !15
  %147 = icmp eq i8* %146, %34
  br i1 %147, label %149, label %148

148:                                              ; preds = %145
  call void @_ZdlPv(i8* %146) #7
  br label %149

149:                                              ; preds = %145, %148
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #7
  br label %158

150:                                              ; preds = %61
  %151 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #7
  br label %227

152:                                              ; preds = %94
  %153 = landingpad { i8*, i32 }
          cleanup
  %154 = load i8*, i8** %36, align 8, !tbaa !15
  %155 = icmp eq i8* %154, %34
  br i1 %155, label %157, label %156

156:                                              ; preds = %152
  call void @_ZdlPv(i8* %154) #7
  br label %157

157:                                              ; preds = %156, %152
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #7
  br label %227

158:                                              ; preds = %149, %91
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !22)
  store %union.anon* %45, %union.anon** %46, align 8, !tbaa !10, !alias.scope !22
  %159 = load i8*, i8** %47, align 8, !tbaa !15, !noalias !22
  %160 = load i64, i64* %19, align 8, !tbaa !3, !noalias !22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #7, !noalias !22
  store i64 %160, i64* %3, align 8, !tbaa !25, !noalias !22
  %161 = icmp ugt i64 %160, 15
  br i1 %161, label %162, label %166

162:                                              ; preds = %158
  %163 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %164 unwind label %223

164:                                              ; preds = %162
  store i8* %163, i8** %50, align 8, !tbaa !15, !alias.scope !22
  %165 = load i64, i64* %3, align 8, !tbaa !25, !noalias !22
  store i64 %165, i64* %51, align 8, !tbaa !11, !alias.scope !22
  br label %166

166:                                              ; preds = %158, %164
  %167 = phi i8* [ %163, %164 ], [ %49, %158 ]
  switch i64 %160, label %170 [
    i64 1, label %168
    i64 0, label %171
  ]

168:                                              ; preds = %166
  %169 = load i8, i8* %159, align 1, !tbaa !11
  store i8 %169, i8* %167, align 1, !tbaa !11
  br label %171

170:                                              ; preds = %166
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %167, i8* align 1 %159, i64 %160, i1 false) #7
  br label %171

171:                                              ; preds = %170, %168, %166
  %172 = load i64, i64* %3, align 8, !tbaa !25, !noalias !22
  store i64 %172, i64* %52, align 8, !tbaa !3, !alias.scope !22
  %173 = load i8*, i8** %50, align 8, !tbaa !15, !alias.scope !22
  %174 = getelementptr inbounds i8, i8* %173, i64 %172
  store i8 0, i8* %174, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #7, !noalias !22
  %175 = load i8*, i8** %28, align 8, !tbaa !15, !noalias !22
  %176 = load i64, i64* %15, align 8, !tbaa !3, !noalias !22
  %177 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i8* %175, i64 %176)
          to label %183 unwind label %178

178:                                              ; preds = %171
  %179 = landingpad { i8*, i32 }
          cleanup
  %180 = load i8*, i8** %50, align 8, !tbaa !15, !alias.scope !22
  %181 = icmp eq i8* %180, %49
  br i1 %181, label %225, label %182

182:                                              ; preds = %178
  call void @_ZdlPv(i8* %180) #7
  br label %225

183:                                              ; preds = %171
  %184 = load i8*, i8** %50, align 8, !tbaa !15
  %185 = icmp eq i8* %184, %49
  br i1 %185, label %186, label %200

186:                                              ; preds = %183
  %187 = load i64, i64* %52, align 8, !tbaa !3
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %195, label %189

189:                                              ; preds = %186
  %190 = load i8*, i8** %47, align 8, !tbaa !15
  %191 = icmp eq i64 %187, 1
  br i1 %191, label %192, label %194

192:                                              ; preds = %189
  %193 = load i8, i8* %49, align 8, !tbaa !11
  store i8 %193, i8* %190, align 1, !tbaa !11
  br label %195

194:                                              ; preds = %189
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %190, i8* nonnull align 8 %49, i64 %187, i1 false) #7
  br label %195

195:                                              ; preds = %194, %192, %186
  %196 = load i64, i64* %52, align 8, !tbaa !3
  store i64 %196, i64* %19, align 8, !tbaa !3
  %197 = load i8*, i8** %47, align 8, !tbaa !15
  %198 = getelementptr inbounds i8, i8* %197, i64 %196
  store i8 0, i8* %198, align 1, !tbaa !11
  %199 = load i8*, i8** %50, align 8, !tbaa !15
  br label %209

200:                                              ; preds = %183
  %201 = load i8*, i8** %47, align 8, !tbaa !15
  %202 = icmp eq i8* %201, %20
  %203 = load i64, i64* %53, align 8
  store i8* %184, i8** %47, align 8, !tbaa !15
  %204 = load <2 x i64>, <2 x i64>* %59, align 8, !tbaa !11
  store <2 x i64> %204, <2 x i64>* %60, align 8, !tbaa !11
  %205 = icmp eq i8* %201, null
  %206 = or i1 %202, %205
  br i1 %206, label %208, label %207

207:                                              ; preds = %200
  store i8* %201, i8** %50, align 8, !tbaa !15
  store i64 %203, i64* %51, align 8, !tbaa !11
  br label %209

208:                                              ; preds = %200
  store %union.anon* %45, %union.anon** %46, align 8, !tbaa !15
  br label %209

209:                                              ; preds = %195, %207, %208
  %210 = phi i8* [ %199, %195 ], [ %201, %207 ], [ %49, %208 ]
  store i64 0, i64* %52, align 8, !tbaa !3
  store i8 0, i8* %210, align 1, !tbaa !11
  %211 = load i8*, i8** %50, align 8, !tbaa !15
  %212 = icmp eq i8* %211, %49
  br i1 %212, label %214, label %213

213:                                              ; preds = %209
  call void @_ZdlPv(i8* %211) #7
  br label %214

214:                                              ; preds = %209, %213
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #7
  %215 = add nuw i64 %66, 1
  %216 = trunc i64 %215 to i32
  %217 = mul nsw i32 %216, 3
  %218 = icmp slt i32 %217, %11
  br i1 %218, label %219, label %237, !llvm.loop !26

219:                                              ; preds = %214
  %220 = load i64, i64* %9, align 8, !tbaa !3, !noalias !12
  %221 = zext i32 %217 to i64
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #7
  %222 = icmp ult i64 %220, %221
  br i1 %222, label %61, label %64

223:                                              ; preds = %162
  %224 = landingpad { i8*, i32 }
          cleanup
  br label %225

225:                                              ; preds = %178, %182, %223
  %226 = phi { i8*, i32 } [ %224, %223 ], [ %179, %182 ], [ %179, %178 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #7
  br label %227

227:                                              ; preds = %225, %157, %150
  %228 = phi { i8*, i32 } [ %226, %225 ], [ %153, %157 ], [ %151, %150 ]
  %229 = load i8*, i8** %47, align 8, !tbaa !15
  %230 = icmp eq i8* %229, %20
  br i1 %230, label %232, label %231

231:                                              ; preds = %227
  call void @_ZdlPv(i8* %229) #7
  br label %232

232:                                              ; preds = %227, %231
  %233 = load i8*, i8** %28, align 8, !tbaa !15
  %234 = icmp eq i8* %233, %16
  br i1 %234, label %236, label %235

235:                                              ; preds = %232
  call void @_ZdlPv(i8* %233) #7
  br label %236

236:                                              ; preds = %232, %235
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #7
  resume { i8*, i32 } %228

237:                                              ; preds = %214
  %238 = load i8*, i8** %28, align 8, !tbaa !15
  %239 = icmp eq i8* %238, %16
  br i1 %239, label %241, label %240

240:                                              ; preds = %237
  call void @_ZdlPv(i8* %238) #7
  br label %241

241:                                              ; preds = %2, %237, %240
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #7
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
define dso_local void @_Z13decode_cyclicNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !3
  %11 = trunc i64 %10 to i32
  %12 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #7
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %14 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  store %union.anon* %13, %union.anon** %14, align 8, !tbaa !10
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  store i64 0, i64* %15, align 8, !tbaa !3
  %16 = bitcast %union.anon* %13 to i8*
  store i8 0, i8* %16, align 8, !tbaa !11
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %18 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %17, %union.anon** %18, align 8, !tbaa !10
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %19, align 8, !tbaa !3
  %20 = bitcast %union.anon* %17 to i8*
  store i8 0, i8* %20, align 8, !tbaa !11
  %21 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %23 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  %24 = bitcast %union.anon* %22 to i8*
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %30 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  %31 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %33 = bitcast %"class.std::__cxx11::basic_string"* %7 to %union.anon**
  %34 = bitcast %union.anon* %32 to i8*
  %35 = bitcast %union.anon* %32 to i16*
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %39 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  %40 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %42 = bitcast %union.anon* %38 to i8*
  %43 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  %44 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %46 = bitcast %"class.std::__cxx11::basic_string"* %8 to %union.anon**
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %48 = bitcast i64* %3 to i8*
  %49 = bitcast %union.anon* %45 to i8*
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  %52 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 1
  %53 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %54 = icmp sgt i32 %11, 0
  br i1 %54, label %55, label %241

55:                                               ; preds = %2
  %56 = getelementptr inbounds i8, i8* %34, i64 2
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #7
  %57 = bitcast i64* %43 to <2 x i64>*
  %58 = bitcast i64* %15 to <2 x i64>*
  %59 = bitcast i64* %52 to <2 x i64>*
  %60 = bitcast i64* %19 to <2 x i64>*
  br label %64

61:                                               ; preds = %219
  %62 = zext i32 %217 to i64
  invoke void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 %62, i64 %220) #8
          to label %63 unwind label %150

63:                                               ; preds = %61
  unreachable

64:                                               ; preds = %55, %219
  %65 = phi i64 [ 0, %55 ], [ %221, %219 ]
  %66 = phi i64 [ 0, %55 ], [ %215, %219 ]
  %67 = phi i64 [ %10, %55 ], [ %220, %219 ]
  call void @llvm.experimental.noalias.scope.decl(metadata !28)
  store %union.anon* %22, %union.anon** %23, align 8, !tbaa !10, !alias.scope !28
  %68 = load i8*, i8** %25, align 8, !tbaa !15, !noalias !28
  %69 = getelementptr inbounds i8, i8* %68, i64 %65
  %70 = sub i64 %67, %65
  %71 = icmp ult i64 %70, 3
  %72 = select i1 %71, i64 %70, i64 3
  switch i64 %72, label %80 [
    i64 1, label %75
    i64 0, label %73
  ]

73:                                               ; preds = %64
  store i64 %72, i64* %27, align 8, !tbaa !3, !alias.scope !28
  %74 = getelementptr inbounds i8, i8* %24, i64 %72
  store i8 0, i8* %74, align 1, !tbaa !11
  br label %83

75:                                               ; preds = %64
  %76 = load i8, i8* %69, align 1, !tbaa !11
  store i8 %76, i8* %24, align 8, !tbaa !11
  store i64 %72, i64* %27, align 8, !tbaa !3, !alias.scope !28
  %77 = getelementptr inbounds i8, i8* %24, i64 %72
  store i8 0, i8* %77, align 1, !tbaa !11
  %78 = load i8*, i8** %28, align 8, !tbaa !15
  %79 = load i8, i8* %24, align 8, !tbaa !11
  store i8 %79, i8* %78, align 1, !tbaa !11
  br label %83

80:                                               ; preds = %64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 1 %69, i64 %72, i1 false) #7
  store i64 %72, i64* %27, align 8, !tbaa !3, !alias.scope !28
  %81 = getelementptr inbounds i8, i8* %24, i64 %72
  store i8 0, i8* %81, align 1, !tbaa !11
  %82 = load i8*, i8** %28, align 8, !tbaa !15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %82, i8* nonnull align 8 %24, i64 %72, i1 false) #7
  br label %83

83:                                               ; preds = %75, %80, %73
  %84 = load i64, i64* %27, align 8, !tbaa !3
  store i64 %84, i64* %15, align 8, !tbaa !3
  %85 = load i8*, i8** %28, align 8, !tbaa !15
  %86 = getelementptr inbounds i8, i8* %85, i64 %84
  store i8 0, i8* %86, align 1, !tbaa !11
  %87 = load i8*, i8** %26, align 8, !tbaa !15
  store i64 0, i64* %27, align 8, !tbaa !3
  store i8 0, i8* %87, align 1, !tbaa !11
  %88 = load i8*, i8** %26, align 8, !tbaa !15
  %89 = icmp eq i8* %88, %24
  br i1 %89, label %91, label %90

90:                                               ; preds = %83
  call void @_ZdlPv(i8* %88) #7
  br label %91

91:                                               ; preds = %83, %90
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #7
  %92 = load i64, i64* %15, align 8, !tbaa !3
  %93 = icmp eq i64 %92, 3
  br i1 %93, label %94, label %158

94:                                               ; preds = %91
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #7
  %95 = load i8*, i8** %28, align 8, !tbaa !15
  %96 = getelementptr inbounds i8, i8* %95, i64 2
  %97 = load i8, i8* %96, align 1, !tbaa !11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #7
  store %union.anon* %32, %union.anon** %33, align 8, !tbaa !10, !alias.scope !31
  %98 = bitcast i8* %95 to i16*
  %99 = load i16, i16* %98, align 1
  store i16 %99, i16* %35, align 8
  store i64 2, i64* %37, align 8, !tbaa !3, !alias.scope !31
  store i8 0, i8* %56, align 2, !tbaa !11
  %100 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i64 0, i64 0, i64 1, i8 signext %97)
          to label %101 unwind label %152

101:                                              ; preds = %94
  store %union.anon* %38, %union.anon** %39, align 8, !tbaa !10, !alias.scope !34
  %102 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %100, i64 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8, !tbaa !15
  %104 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %100, i64 0, i32 2
  %105 = bitcast %union.anon* %104 to i8*
  %106 = icmp eq i8* %103, %105
  br i1 %106, label %107, label %108

107:                                              ; preds = %101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %42, i8* noundef nonnull align 8 dereferenceable(16) %103, i64 16, i1 false) #7
  br label %111

108:                                              ; preds = %101
  store i8* %103, i8** %40, align 8, !tbaa !15, !alias.scope !34
  %109 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %100, i64 0, i32 2, i32 0
  %110 = load i64, i64* %109, align 8, !tbaa !11
  store i64 %110, i64* %41, align 8, !tbaa !11, !alias.scope !34
  br label %111

111:                                              ; preds = %108, %107
  %112 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %100, i64 0, i32 1
  %113 = load i64, i64* %112, align 8, !tbaa !3
  store i64 %113, i64* %43, align 8, !tbaa !3, !alias.scope !34
  %114 = bitcast %"class.std::__cxx11::basic_string"* %100 to %union.anon**
  store %union.anon* %104, %union.anon** %114, align 8, !tbaa !15
  store i64 0, i64* %112, align 8, !tbaa !3
  store i8 0, i8* %105, align 8, !tbaa !11
  %115 = load i8*, i8** %40, align 8, !tbaa !15
  %116 = icmp eq i8* %115, %42
  br i1 %116, label %117, label %131

117:                                              ; preds = %111
  %118 = load i64, i64* %43, align 8, !tbaa !3
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %126, label %120

120:                                              ; preds = %117
  %121 = load i8*, i8** %28, align 8, !tbaa !15
  %122 = icmp eq i64 %118, 1
  br i1 %122, label %123, label %125

123:                                              ; preds = %120
  %124 = load i8, i8* %42, align 8, !tbaa !11
  store i8 %124, i8* %121, align 1, !tbaa !11
  br label %126

125:                                              ; preds = %120
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %121, i8* nonnull align 8 %42, i64 %118, i1 false) #7
  br label %126

126:                                              ; preds = %125, %123, %117
  %127 = load i64, i64* %43, align 8, !tbaa !3
  store i64 %127, i64* %15, align 8, !tbaa !3
  %128 = load i8*, i8** %28, align 8, !tbaa !15
  %129 = getelementptr inbounds i8, i8* %128, i64 %127
  store i8 0, i8* %129, align 1, !tbaa !11
  %130 = load i8*, i8** %40, align 8, !tbaa !15
  br label %140

131:                                              ; preds = %111
  %132 = load i8*, i8** %28, align 8, !tbaa !15
  %133 = icmp eq i8* %132, %16
  %134 = load i64, i64* %29, align 8
  store i8* %115, i8** %28, align 8, !tbaa !15
  %135 = load <2 x i64>, <2 x i64>* %57, align 8, !tbaa !11
  store <2 x i64> %135, <2 x i64>* %58, align 8, !tbaa !11
  %136 = icmp eq i8* %132, null
  %137 = or i1 %133, %136
  br i1 %137, label %139, label %138

138:                                              ; preds = %131
  store i8* %132, i8** %40, align 8, !tbaa !15
  store i64 %134, i64* %41, align 8, !tbaa !11
  br label %140

139:                                              ; preds = %131
  store %union.anon* %38, %union.anon** %39, align 8, !tbaa !15
  br label %140

140:                                              ; preds = %126, %138, %139
  %141 = phi i8* [ %130, %126 ], [ %132, %138 ], [ %42, %139 ]
  store i64 0, i64* %43, align 8, !tbaa !3
  store i8 0, i8* %141, align 1, !tbaa !11
  %142 = load i8*, i8** %40, align 8, !tbaa !15
  %143 = icmp eq i8* %142, %42
  br i1 %143, label %145, label %144

144:                                              ; preds = %140
  call void @_ZdlPv(i8* %142) #7
  br label %145

145:                                              ; preds = %140, %144
  %146 = load i8*, i8** %36, align 8, !tbaa !15
  %147 = icmp eq i8* %146, %34
  br i1 %147, label %149, label %148

148:                                              ; preds = %145
  call void @_ZdlPv(i8* %146) #7
  br label %149

149:                                              ; preds = %145, %148
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #7
  br label %158

150:                                              ; preds = %61
  %151 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #7
  br label %227

152:                                              ; preds = %94
  %153 = landingpad { i8*, i32 }
          cleanup
  %154 = load i8*, i8** %36, align 8, !tbaa !15
  %155 = icmp eq i8* %154, %34
  br i1 %155, label %157, label %156

156:                                              ; preds = %152
  call void @_ZdlPv(i8* %154) #7
  br label %157

157:                                              ; preds = %156, %152
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #7
  br label %227

158:                                              ; preds = %149, %91
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !37)
  store %union.anon* %45, %union.anon** %46, align 8, !tbaa !10, !alias.scope !37
  %159 = load i8*, i8** %47, align 8, !tbaa !15, !noalias !37
  %160 = load i64, i64* %19, align 8, !tbaa !3, !noalias !37
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #7, !noalias !37
  store i64 %160, i64* %3, align 8, !tbaa !25, !noalias !37
  %161 = icmp ugt i64 %160, 15
  br i1 %161, label %162, label %166

162:                                              ; preds = %158
  %163 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %164 unwind label %223

164:                                              ; preds = %162
  store i8* %163, i8** %50, align 8, !tbaa !15, !alias.scope !37
  %165 = load i64, i64* %3, align 8, !tbaa !25, !noalias !37
  store i64 %165, i64* %51, align 8, !tbaa !11, !alias.scope !37
  br label %166

166:                                              ; preds = %158, %164
  %167 = phi i8* [ %163, %164 ], [ %49, %158 ]
  switch i64 %160, label %170 [
    i64 1, label %168
    i64 0, label %171
  ]

168:                                              ; preds = %166
  %169 = load i8, i8* %159, align 1, !tbaa !11
  store i8 %169, i8* %167, align 1, !tbaa !11
  br label %171

170:                                              ; preds = %166
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %167, i8* align 1 %159, i64 %160, i1 false) #7
  br label %171

171:                                              ; preds = %170, %168, %166
  %172 = load i64, i64* %3, align 8, !tbaa !25, !noalias !37
  store i64 %172, i64* %52, align 8, !tbaa !3, !alias.scope !37
  %173 = load i8*, i8** %50, align 8, !tbaa !15, !alias.scope !37
  %174 = getelementptr inbounds i8, i8* %173, i64 %172
  store i8 0, i8* %174, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #7, !noalias !37
  %175 = load i8*, i8** %28, align 8, !tbaa !15, !noalias !37
  %176 = load i64, i64* %15, align 8, !tbaa !3, !noalias !37
  %177 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i8* %175, i64 %176)
          to label %183 unwind label %178

178:                                              ; preds = %171
  %179 = landingpad { i8*, i32 }
          cleanup
  %180 = load i8*, i8** %50, align 8, !tbaa !15, !alias.scope !37
  %181 = icmp eq i8* %180, %49
  br i1 %181, label %225, label %182

182:                                              ; preds = %178
  call void @_ZdlPv(i8* %180) #7
  br label %225

183:                                              ; preds = %171
  %184 = load i8*, i8** %50, align 8, !tbaa !15
  %185 = icmp eq i8* %184, %49
  br i1 %185, label %186, label %200

186:                                              ; preds = %183
  %187 = load i64, i64* %52, align 8, !tbaa !3
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %195, label %189

189:                                              ; preds = %186
  %190 = load i8*, i8** %47, align 8, !tbaa !15
  %191 = icmp eq i64 %187, 1
  br i1 %191, label %192, label %194

192:                                              ; preds = %189
  %193 = load i8, i8* %49, align 8, !tbaa !11
  store i8 %193, i8* %190, align 1, !tbaa !11
  br label %195

194:                                              ; preds = %189
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %190, i8* nonnull align 8 %49, i64 %187, i1 false) #7
  br label %195

195:                                              ; preds = %194, %192, %186
  %196 = load i64, i64* %52, align 8, !tbaa !3
  store i64 %196, i64* %19, align 8, !tbaa !3
  %197 = load i8*, i8** %47, align 8, !tbaa !15
  %198 = getelementptr inbounds i8, i8* %197, i64 %196
  store i8 0, i8* %198, align 1, !tbaa !11
  %199 = load i8*, i8** %50, align 8, !tbaa !15
  br label %209

200:                                              ; preds = %183
  %201 = load i8*, i8** %47, align 8, !tbaa !15
  %202 = icmp eq i8* %201, %20
  %203 = load i64, i64* %53, align 8
  store i8* %184, i8** %47, align 8, !tbaa !15
  %204 = load <2 x i64>, <2 x i64>* %59, align 8, !tbaa !11
  store <2 x i64> %204, <2 x i64>* %60, align 8, !tbaa !11
  %205 = icmp eq i8* %201, null
  %206 = or i1 %202, %205
  br i1 %206, label %208, label %207

207:                                              ; preds = %200
  store i8* %201, i8** %50, align 8, !tbaa !15
  store i64 %203, i64* %51, align 8, !tbaa !11
  br label %209

208:                                              ; preds = %200
  store %union.anon* %45, %union.anon** %46, align 8, !tbaa !15
  br label %209

209:                                              ; preds = %195, %207, %208
  %210 = phi i8* [ %199, %195 ], [ %201, %207 ], [ %49, %208 ]
  store i64 0, i64* %52, align 8, !tbaa !3
  store i8 0, i8* %210, align 1, !tbaa !11
  %211 = load i8*, i8** %50, align 8, !tbaa !15
  %212 = icmp eq i8* %211, %49
  br i1 %212, label %214, label %213

213:                                              ; preds = %209
  call void @_ZdlPv(i8* %211) #7
  br label %214

214:                                              ; preds = %209, %213
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #7
  %215 = add nuw i64 %66, 1
  %216 = trunc i64 %215 to i32
  %217 = mul nsw i32 %216, 3
  %218 = icmp slt i32 %217, %11
  br i1 %218, label %219, label %237, !llvm.loop !40

219:                                              ; preds = %214
  %220 = load i64, i64* %9, align 8, !tbaa !3, !noalias !28
  %221 = zext i32 %217 to i64
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #7
  %222 = icmp ult i64 %220, %221
  br i1 %222, label %61, label %64

223:                                              ; preds = %162
  %224 = landingpad { i8*, i32 }
          cleanup
  br label %225

225:                                              ; preds = %178, %182, %223
  %226 = phi { i8*, i32 } [ %224, %223 ], [ %179, %182 ], [ %179, %178 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #7
  br label %227

227:                                              ; preds = %225, %157, %150
  %228 = phi { i8*, i32 } [ %226, %225 ], [ %153, %157 ], [ %151, %150 ]
  %229 = load i8*, i8** %47, align 8, !tbaa !15
  %230 = icmp eq i8* %229, %20
  br i1 %230, label %232, label %231

231:                                              ; preds = %227
  call void @_ZdlPv(i8* %229) #7
  br label %232

232:                                              ; preds = %227, %231
  %233 = load i8*, i8** %28, align 8, !tbaa !15
  %234 = icmp eq i8* %233, %16
  br i1 %234, label %236, label %235

235:                                              ; preds = %232
  call void @_ZdlPv(i8* %233) #7
  br label %236

236:                                              ; preds = %232, %235
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #7
  resume { i8*, i32 } %228

237:                                              ; preds = %214
  %238 = load i8*, i8** %28, align 8, !tbaa !15
  %239 = icmp eq i8* %238, %16
  br i1 %239, label %241, label %240

240:                                              ; preds = %237
  call void @_ZdlPv(i8* %238) #7
  br label %241

241:                                              ; preds = %2, %237, %240
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare dso_local void @_ZSt24__throw_out_of_range_fmtPKcz(i8*, ...) local_unnamed_addr #3

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #4

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #6

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #6 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #7 = { nounwind }
attributes #8 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!5, !6, i64 0}
!11 = !{!7, !7, i64 0}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!14 = distinct !{!14, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!15 = !{!4, !6, i64 0}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!18 = distinct !{!18, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_: argument 0"}
!21 = distinct !{!21, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!24 = distinct !{!24, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!25 = !{!9, !9, i64 0}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.mustprogress"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!30 = distinct !{!30, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!33 = distinct !{!33, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EES5_OS8_: argument 0"}
!36 = distinct !{!36, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EES5_OS8_"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!39 = distinct !{!39, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!40 = distinct !{!40, !27}
