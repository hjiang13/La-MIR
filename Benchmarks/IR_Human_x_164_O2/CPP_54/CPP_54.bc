; ModuleID = '../../Human_xBenchmarks_164/CPP_54/CPP_54.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_54/CPP_54.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: nofree nosync nounwind readonly uwtable
define dso_local zeroext i1 @_Z10same_charsNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_(%"class.std::__cxx11::basic_string"* nocapture readonly %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8, !tbaa !3
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8, !tbaa !3
  br label %22

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8, !tbaa !10
  %14 = load i64, i64* %11, align 8, !tbaa !3
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  %16 = load i8*, i8** %10, align 8, !tbaa !10
  %17 = ptrtoint i8* %15 to i64
  %18 = icmp sgt i64 %14, 3
  %19 = lshr i64 %14, 2
  br label %34

20:                                               ; preds = %92
  %21 = icmp eq i64 %95, %4
  br i1 %21, label %22, label %34, !llvm.loop !11

22:                                               ; preds = %20, %6
  %23 = phi i64 [ %8, %6 ], [ %14, %20 ]
  %24 = icmp sgt i64 %4, 3
  %25 = lshr i64 %4, 2
  %26 = icmp eq i64 %23, 0
  br i1 %26, label %162, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8, !tbaa !10
  %31 = getelementptr inbounds i8, i8* %30, i64 %4
  %32 = load i8*, i8** %28, align 8, !tbaa !10
  %33 = ptrtoint i8* %31 to i64
  br label %99

34:                                               ; preds = %9, %20
  %35 = phi i64 [ 0, %9 ], [ %95, %20 ]
  %36 = getelementptr inbounds i8, i8* %16, i64 %35
  br i1 %18, label %37, label %60

37:                                               ; preds = %34
  %38 = load i8, i8* %36, align 1, !tbaa !13
  br label %39

39:                                               ; preds = %56, %37
  %40 = phi i64 [ %19, %37 ], [ %58, %56 ]
  %41 = phi i8* [ %13, %37 ], [ %57, %56 ]
  %42 = load i8, i8* %41, align 1, !tbaa !13
  %43 = icmp eq i8 %42, %38
  br i1 %43, label %92, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds i8, i8* %41, i64 1
  %46 = load i8, i8* %45, align 1, !tbaa !13
  %47 = icmp eq i8 %46, %38
  br i1 %47, label %86, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds i8, i8* %41, i64 2
  %50 = load i8, i8* %49, align 1, !tbaa !13
  %51 = icmp eq i8 %50, %38
  br i1 %51, label %88, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds i8, i8* %41, i64 3
  %54 = load i8, i8* %53, align 1, !tbaa !13
  %55 = icmp eq i8 %54, %38
  br i1 %55, label %90, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds i8, i8* %41, i64 4
  %58 = add nsw i64 %40, -1
  %59 = icmp sgt i64 %40, 1
  br i1 %59, label %39, label %60, !llvm.loop !14

60:                                               ; preds = %56, %34
  %61 = phi i8* [ %13, %34 ], [ %57, %56 ]
  %62 = ptrtoint i8* %61 to i64
  %63 = sub i64 %17, %62
  switch i64 %63, label %165 [
    i64 3, label %68
    i64 2, label %66
    i64 1, label %64
  ]

64:                                               ; preds = %60
  %65 = load i8, i8* %36, align 1, !tbaa !13
  br label %81

66:                                               ; preds = %60
  %67 = load i8, i8* %36, align 1, !tbaa !13
  br label %74

68:                                               ; preds = %60
  %69 = load i8, i8* %61, align 1, !tbaa !13
  %70 = load i8, i8* %36, align 1, !tbaa !13
  %71 = icmp eq i8 %69, %70
  br i1 %71, label %92, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds i8, i8* %61, i64 1
  br label %74

74:                                               ; preds = %72, %66
  %75 = phi i8 [ %67, %66 ], [ %70, %72 ]
  %76 = phi i8* [ %61, %66 ], [ %73, %72 ]
  %77 = load i8, i8* %76, align 1, !tbaa !13
  %78 = icmp eq i8 %77, %75
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds i8, i8* %76, i64 1
  br label %81

81:                                               ; preds = %79, %64
  %82 = phi i8 [ %65, %64 ], [ %75, %79 ]
  %83 = phi i8* [ %61, %64 ], [ %80, %79 ]
  %84 = load i8, i8* %83, align 1, !tbaa !13
  %85 = icmp eq i8 %84, %82
  br i1 %85, label %92, label %165

86:                                               ; preds = %44
  %87 = getelementptr inbounds i8, i8* %41, i64 1
  br label %92

88:                                               ; preds = %48
  %89 = getelementptr inbounds i8, i8* %41, i64 2
  br label %92

90:                                               ; preds = %52
  %91 = getelementptr inbounds i8, i8* %41, i64 3
  br label %92

92:                                               ; preds = %39, %86, %88, %90, %68, %74, %81
  %93 = phi i8* [ %61, %68 ], [ %76, %74 ], [ %83, %81 ], [ %87, %86 ], [ %89, %88 ], [ %91, %90 ], [ %41, %39 ]
  %94 = icmp eq i8* %93, %15
  %95 = add nuw i64 %35, 1
  br i1 %94, label %165, label %20

96:                                               ; preds = %158
  %97 = icmp ugt i64 %23, %161
  %98 = icmp eq i64 %161, %23
  br i1 %98, label %162, label %99, !llvm.loop !15

99:                                               ; preds = %27, %96
  %100 = phi i64 [ 0, %27 ], [ %161, %96 ]
  %101 = phi i1 [ true, %27 ], [ %97, %96 ]
  %102 = getelementptr inbounds i8, i8* %32, i64 %100
  br i1 %24, label %103, label %126

103:                                              ; preds = %99
  %104 = load i8, i8* %102, align 1, !tbaa !13
  br label %105

105:                                              ; preds = %122, %103
  %106 = phi i64 [ %25, %103 ], [ %124, %122 ]
  %107 = phi i8* [ %30, %103 ], [ %123, %122 ]
  %108 = load i8, i8* %107, align 1, !tbaa !13
  %109 = icmp eq i8 %108, %104
  br i1 %109, label %158, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds i8, i8* %107, i64 1
  %112 = load i8, i8* %111, align 1, !tbaa !13
  %113 = icmp eq i8 %112, %104
  br i1 %113, label %152, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds i8, i8* %107, i64 2
  %116 = load i8, i8* %115, align 1, !tbaa !13
  %117 = icmp eq i8 %116, %104
  br i1 %117, label %154, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds i8, i8* %107, i64 3
  %120 = load i8, i8* %119, align 1, !tbaa !13
  %121 = icmp eq i8 %120, %104
  br i1 %121, label %156, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds i8, i8* %107, i64 4
  %124 = add nsw i64 %106, -1
  %125 = icmp sgt i64 %106, 1
  br i1 %125, label %105, label %126, !llvm.loop !14

126:                                              ; preds = %122, %99
  %127 = phi i8* [ %30, %99 ], [ %123, %122 ]
  %128 = ptrtoint i8* %127 to i64
  %129 = sub i64 %33, %128
  switch i64 %129, label %162 [
    i64 3, label %134
    i64 2, label %132
    i64 1, label %130
  ]

130:                                              ; preds = %126
  %131 = load i8, i8* %102, align 1, !tbaa !13
  br label %147

132:                                              ; preds = %126
  %133 = load i8, i8* %102, align 1, !tbaa !13
  br label %140

134:                                              ; preds = %126
  %135 = load i8, i8* %127, align 1, !tbaa !13
  %136 = load i8, i8* %102, align 1, !tbaa !13
  %137 = icmp eq i8 %135, %136
  br i1 %137, label %158, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds i8, i8* %127, i64 1
  br label %140

140:                                              ; preds = %138, %132
  %141 = phi i8 [ %133, %132 ], [ %136, %138 ]
  %142 = phi i8* [ %127, %132 ], [ %139, %138 ]
  %143 = load i8, i8* %142, align 1, !tbaa !13
  %144 = icmp eq i8 %143, %141
  br i1 %144, label %158, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds i8, i8* %142, i64 1
  br label %147

147:                                              ; preds = %145, %130
  %148 = phi i8 [ %131, %130 ], [ %141, %145 ]
  %149 = phi i8* [ %127, %130 ], [ %146, %145 ]
  %150 = load i8, i8* %149, align 1, !tbaa !13
  %151 = icmp eq i8 %150, %148
  br i1 %151, label %158, label %162

152:                                              ; preds = %110
  %153 = getelementptr inbounds i8, i8* %107, i64 1
  br label %158

154:                                              ; preds = %114
  %155 = getelementptr inbounds i8, i8* %107, i64 2
  br label %158

156:                                              ; preds = %118
  %157 = getelementptr inbounds i8, i8* %107, i64 3
  br label %158

158:                                              ; preds = %105, %152, %154, %156, %134, %140, %147
  %159 = phi i8* [ %127, %134 ], [ %142, %140 ], [ %149, %147 ], [ %153, %152 ], [ %155, %154 ], [ %157, %156 ], [ %107, %105 ]
  %160 = icmp eq i8* %159, %31
  %161 = add nuw i64 %100, 1
  br i1 %160, label %162, label %96

162:                                              ; preds = %96, %158, %126, %147, %22
  %163 = phi i1 [ false, %22 ], [ %101, %147 ], [ %101, %126 ], [ %101, %158 ], [ %97, %96 ]
  %164 = xor i1 %163, true
  br label %165

165:                                              ; preds = %81, %60, %92, %162
  %166 = phi i1 [ %164, %162 ], [ false, %92 ], [ false, %60 ], [ false, %81 ]
  ret i1 %166
}

declare dso_local i32 @__gxx_personality_v0(...)

attributes #0 = { nofree nosync nounwind readonly uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!4, !6, i64 0}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.mustprogress"}
!13 = !{!7, !7, i64 0}
!14 = distinct !{!14, !12}
!15 = distinct !{!15, !12}
