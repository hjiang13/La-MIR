digraph "CFG for '_Z10prod_signsSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z10prod_signsSt6vectorIiSaIiEE' function";

	Node0x559b2deb3580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%1:\l  %2 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %3 = load i32*, i32** %2, align 8, !tbaa !3\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = load i32*, i32** %4, align 8, !tbaa !8\l  %6 = ptrtoint i32* %3 to i64\l  %7 = ptrtoint i32* %5 to i64\l  %8 = sub i64 %6, %7\l  %9 = icmp eq i64 %8, 0\l  br i1 %9, label %65, label %10\l|{<s0>T|<s1>F}}"];
	Node0x559b2deb3580:s0 -> Node0x559b2deb4a30;
	Node0x559b2deb3580:s1 -> Node0x559b2deb4ec0;
	Node0x559b2deb4ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%10:\l10:                                               \l  %11 = ashr exact i64 %8, 2\l  %12 = call i64 @llvm.umax.i64(i64 %11, i64 1)\l  %13 = and i64 %12, 1\l  %14 = icmp ult i64 %11, 2\l  br i1 %14, label %44, label %15\l|{<s0>T|<s1>F}}"];
	Node0x559b2deb4ec0:s0 -> Node0x559b2deb5450;
	Node0x559b2deb4ec0:s1 -> Node0x559b2deb54a0;
	Node0x559b2deb54a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%15:\l15:                                               \l  %16 = and i64 %12, -2\l  br label %17\l}"];
	Node0x559b2deb54a0 -> Node0x559b2deb56a0;
	Node0x559b2deb56a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = phi i64 [ 0, %15 ], [ %41, %17 ]\l  %19 = phi i32 [ 1, %15 ], [ %40, %17 ]\l  %20 = phi i32 [ 0, %15 ], [ %35, %17 ]\l  %21 = phi i64 [ %16, %15 ], [ %42, %17 ]\l  %22 = getelementptr inbounds i32, i32* %5, i64 %18\l  %23 = load i32, i32* %22, align 4, !tbaa !9\l  %24 = tail call i32 @llvm.abs.i32(i32 %23, i1 true)\l  %25 = add nuw nsw i32 %24, %20\l  %26 = icmp eq i32 %23, 0\l  %27 = select i1 %26, i32 0, i32 %19\l  %28 = icmp slt i32 %23, 0\l  %29 = sub nsw i32 0, %27\l  %30 = select i1 %28, i32 %29, i32 %27\l  %31 = or i64 %18, 1\l  %32 = getelementptr inbounds i32, i32* %5, i64 %31\l  %33 = load i32, i32* %32, align 4, !tbaa !9\l  %34 = tail call i32 @llvm.abs.i32(i32 %33, i1 true)\l  %35 = add nuw nsw i32 %34, %25\l  %36 = icmp eq i32 %33, 0\l  %37 = select i1 %36, i32 0, i32 %30\l  %38 = icmp slt i32 %33, 0\l  %39 = sub nsw i32 0, %37\l  %40 = select i1 %38, i32 %39, i32 %37\l  %41 = add nuw nsw i64 %18, 2\l  %42 = add i64 %21, -2\l  %43 = icmp eq i64 %42, 0\l  br i1 %43, label %44, label %17, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x559b2deb56a0:s0 -> Node0x559b2deb5450;
	Node0x559b2deb56a0:s1 -> Node0x559b2deb56a0;
	Node0x559b2deb5450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%44:\l44:                                               \l  %45 = phi i32 [ undef, %10 ], [ %35, %17 ]\l  %46 = phi i32 [ undef, %10 ], [ %40, %17 ]\l  %47 = phi i64 [ 0, %10 ], [ %41, %17 ]\l  %48 = phi i32 [ 1, %10 ], [ %40, %17 ]\l  %49 = phi i32 [ 0, %10 ], [ %35, %17 ]\l  %50 = icmp eq i64 %13, 0\l  br i1 %50, label %61, label %51\l|{<s0>T|<s1>F}}"];
	Node0x559b2deb5450:s0 -> Node0x559b2deb7ca0;
	Node0x559b2deb5450:s1 -> Node0x559b2deb7cf0;
	Node0x559b2deb7cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%51:\l51:                                               \l  %52 = getelementptr inbounds i32, i32* %5, i64 %47\l  %53 = load i32, i32* %52, align 4, !tbaa !9\l  %54 = icmp eq i32 %53, 0\l  %55 = select i1 %54, i32 0, i32 %48\l  %56 = icmp slt i32 %53, 0\l  %57 = sub nsw i32 0, %55\l  %58 = select i1 %56, i32 %57, i32 %55\l  %59 = tail call i32 @llvm.abs.i32(i32 %53, i1 true)\l  %60 = add nuw nsw i32 %59, %49\l  br label %61\l}"];
	Node0x559b2deb7cf0 -> Node0x559b2deb7ca0;
	Node0x559b2deb7ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%61:\l61:                                               \l  %62 = phi i32 [ %45, %44 ], [ %60, %51 ]\l  %63 = phi i32 [ %46, %44 ], [ %58, %51 ]\l  %64 = mul nsw i32 %63, %62\l  br label %65\l}"];
	Node0x559b2deb7ca0 -> Node0x559b2deb4a30;
	Node0x559b2deb4a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%65:\l65:                                               \l  %66 = phi i32 [ %64, %61 ], [ -32768, %1 ]\l  ret i32 %66\l}"];
}
