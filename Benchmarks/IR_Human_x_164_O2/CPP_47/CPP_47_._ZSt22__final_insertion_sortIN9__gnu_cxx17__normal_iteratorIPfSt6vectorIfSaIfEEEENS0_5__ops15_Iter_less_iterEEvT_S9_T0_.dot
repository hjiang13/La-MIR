digraph "CFG for '_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_' function" {
	label="CFG for '_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_' function";

	Node0x55611339a1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%2:\l  %3 = ptrtoint float* %1 to i64\l  %4 = ptrtoint float* %0 to i64\l  %5 = sub i64 %3, %4\l  %6 = icmp sgt i64 %5, 64\l  br i1 %6, label %7, label %54\l|{<s0>T|<s1>F}}"];
	Node0x55611339a1b0:s0 -> Node0x55611339a3c0;
	Node0x55611339a1b0:s1 -> Node0x55611339a410;
	Node0x55611339a3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%7:\l7:                                                \l  %8 = bitcast float* %0 to i8*\l  %9 = getelementptr float, float* %0, i64 1\l  %10 = bitcast float* %9 to i8*\l  br label %11\l}"];
	Node0x55611339a3c0 -> Node0x55611339a2e0;
	Node0x55611339a2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%11:\l11:                                               \l  %12 = phi i64 [ %32, %30 ], [ 1, %7 ]\l  %13 = phi float* [ %14, %30 ], [ %0, %7 ]\l  %14 = getelementptr inbounds float, float* %0, i64 %12\l  %15 = load float, float* %14, align 4, !tbaa !3\l  %16 = load float, float* %0, align 4, !tbaa !3\l  %17 = fcmp olt float %15, %16\l  br i1 %17, label %18, label %20\l|{<s0>T|<s1>F}}"];
	Node0x55611339a2e0:s0 -> Node0x55611339e850;
	Node0x55611339a2e0:s1 -> Node0x55611339e8a0;
	Node0x55611339e850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%18:\l18:                                               \l  %19 = shl nsw i64 %12, 2\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %10, i8*\l... nonnull align 4 %8, i64 %19, i1 false) #3\l  br label %30\l}"];
	Node0x55611339e850 -> Node0x55611339e4a0;
	Node0x55611339e8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%20:\l20:                                               \l  %21 = load float, float* %13, align 4, !tbaa !3\l  %22 = fcmp olt float %15, %21\l  br i1 %22, label %23, label %30\l|{<s0>T|<s1>F}}"];
	Node0x55611339e8a0:s0 -> Node0x55611339ee70;
	Node0x55611339e8a0:s1 -> Node0x55611339e4a0;
	Node0x55611339ee70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%23:\l23:                                               \l  %24 = phi float [ %28, %23 ], [ %21, %20 ]\l  %25 = phi float* [ %27, %23 ], [ %13, %20 ]\l  %26 = phi float* [ %25, %23 ], [ %14, %20 ]\l  store float %24, float* %26, align 4, !tbaa !3\l  %27 = getelementptr inbounds float, float* %25, i64 -1\l  %28 = load float, float* %27, align 4, !tbaa !3\l  %29 = fcmp olt float %15, %28\l  br i1 %29, label %23, label %30, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x55611339ee70:s0 -> Node0x55611339ee70;
	Node0x55611339ee70:s1 -> Node0x55611339e4a0;
	Node0x55611339e4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%30:\l30:                                               \l  %31 = phi float* [ %0, %18 ], [ %14, %20 ], [ %25, %23 ]\l  store float %15, float* %31, align 4, !tbaa !3\l  %32 = add nuw nsw i64 %12, 1\l  %33 = icmp eq i64 %32, 16\l  br i1 %33, label %34, label %11, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x55611339e4a0:s0 -> Node0x55611339f660;
	Node0x55611339e4a0:s1 -> Node0x55611339a2e0;
	Node0x55611339f660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%34:\l34:                                               \l  %35 = getelementptr inbounds float, float* %0, i64 16\l  %36 = icmp eq float* %35, %1\l  br i1 %36, label %89, label %37\l|{<s0>T|<s1>F}}"];
	Node0x55611339f660:s0 -> Node0x55611339f8f0;
	Node0x55611339f660:s1 -> Node0x55611339f940;
	Node0x55611339f940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%37:\l37:                                               \l  %38 = phi float* [ %52, %50 ], [ %35, %34 ]\l  %39 = load float, float* %38, align 4, !tbaa !3\l  %40 = getelementptr inbounds float, float* %38, i64 -1\l  %41 = load float, float* %40, align 4, !tbaa !3\l  %42 = fcmp olt float %39, %41\l  br i1 %42, label %43, label %50\l|{<s0>T|<s1>F}}"];
	Node0x55611339f940:s0 -> Node0x55611339fdd0;
	Node0x55611339f940:s1 -> Node0x55611339fa80;
	Node0x55611339fdd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = phi float [ %48, %43 ], [ %41, %37 ]\l  %45 = phi float* [ %47, %43 ], [ %40, %37 ]\l  %46 = phi float* [ %45, %43 ], [ %38, %37 ]\l  store float %44, float* %46, align 4, !tbaa !3\l  %47 = getelementptr inbounds float, float* %45, i64 -1\l  %48 = load float, float* %47, align 4, !tbaa !3\l  %49 = fcmp olt float %39, %48\l  br i1 %49, label %43, label %50, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x55611339fdd0:s0 -> Node0x55611339fdd0;
	Node0x55611339fdd0:s1 -> Node0x55611339fa80;
	Node0x55611339fa80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%50:\l50:                                               \l  %51 = phi float* [ %38, %37 ], [ %45, %43 ]\l  store float %39, float* %51, align 4, !tbaa !3\l  %52 = getelementptr inbounds float, float* %38, i64 1\l  %53 = icmp eq float* %52, %1\l  br i1 %53, label %89, label %37, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x55611339fa80:s0 -> Node0x55611339f8f0;
	Node0x55611339fa80:s1 -> Node0x55611339f940;
	Node0x55611339a410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%54:\l54:                                               \l  %55 = icmp eq float* %0, %1\l  br i1 %55, label %89, label %56\l|{<s0>T|<s1>F}}"];
	Node0x55611339a410:s0 -> Node0x55611339f8f0;
	Node0x55611339a410:s1 -> Node0x5561133a0ed0;
	Node0x5561133a0ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%56:\l56:                                               \l  %57 = bitcast float* %0 to i8*\l  %58 = getelementptr inbounds float, float* %0, i64 1\l  %59 = icmp eq float* %58, %1\l  br i1 %59, label %89, label %60\l|{<s0>T|<s1>F}}"];
	Node0x5561133a0ed0:s0 -> Node0x55611339f8f0;
	Node0x5561133a0ed0:s1 -> Node0x5561133a1170;
	Node0x5561133a1170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%60:\l60:                                               \l  %61 = phi float* [ %87, %85 ], [ %58, %56 ]\l  %62 = phi float* [ %61, %85 ], [ %0, %56 ]\l  %63 = load float, float* %61, align 4, !tbaa !3\l  %64 = load float, float* %0, align 4, !tbaa !3\l  %65 = fcmp olt float %63, %64\l  br i1 %65, label %66, label %75\l|{<s0>T|<s1>F}}"];
	Node0x5561133a1170:s0 -> Node0x5561133a19a0;
	Node0x5561133a1170:s1 -> Node0x5561133a19f0;
	Node0x5561133a19a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%66:\l66:                                               \l  %67 = ptrtoint float* %61 to i64\l  %68 = sub i64 %67, %4\l  %69 = icmp eq i64 %68, 0\l  br i1 %69, label %85, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5561133a19a0:s0 -> Node0x5561133a1270;
	Node0x5561133a19a0:s1 -> Node0x5561133a1cc0;
	Node0x5561133a1cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%70:\l70:                                               \l  %71 = ashr exact i64 %68, 2\l  %72 = sub nsw i64 2, %71\l  %73 = getelementptr inbounds float, float* %62, i64 %72\l  %74 = bitcast float* %73 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8*\l... nonnull align 4 %57, i64 %68, i1 false) #3\l  br label %85\l}"];
	Node0x5561133a1cc0 -> Node0x5561133a1270;
	Node0x5561133a19f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%75:\l75:                                               \l  %76 = load float, float* %62, align 4, !tbaa !3\l  %77 = fcmp olt float %63, %76\l  br i1 %77, label %78, label %85\l|{<s0>T|<s1>F}}"];
	Node0x5561133a19f0:s0 -> Node0x5561133a2310;
	Node0x5561133a19f0:s1 -> Node0x5561133a1270;
	Node0x5561133a2310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%78:\l78:                                               \l  %79 = phi float [ %83, %78 ], [ %76, %75 ]\l  %80 = phi float* [ %82, %78 ], [ %62, %75 ]\l  %81 = phi float* [ %80, %78 ], [ %61, %75 ]\l  store float %79, float* %81, align 4, !tbaa !3\l  %82 = getelementptr inbounds float, float* %80, i64 -1\l  %83 = load float, float* %82, align 4, !tbaa !3\l  %84 = fcmp olt float %63, %83\l  br i1 %84, label %78, label %85, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x5561133a2310:s0 -> Node0x5561133a2310;
	Node0x5561133a2310:s1 -> Node0x5561133a1270;
	Node0x5561133a1270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%85:\l85:                                               \l  %86 = phi float* [ %0, %66 ], [ %0, %70 ], [ %61, %75 ], [ %80, %78 ]\l  store float %63, float* %86, align 4, !tbaa !3\l  %87 = getelementptr inbounds float, float* %61, i64 1\l  %88 = icmp eq float* %87, %1\l  br i1 %88, label %89, label %60, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x5561133a1270:s0 -> Node0x55611339f8f0;
	Node0x5561133a1270:s1 -> Node0x5561133a1170;
	Node0x55611339f8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%89:\l89:                                               \l  ret void\l}"];
}
