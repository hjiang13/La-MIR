digraph "CFG for '_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_' function" {
	label="CFG for '_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_' function";

	Node0x5561133933b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%3:\l  %4 = ptrtoint float* %0 to i64\l  %5 = getelementptr inbounds float, float* %0, i64 1\l  %6 = ptrtoint float* %1 to i64\l  %7 = sub i64 %6, %4\l  %8 = icmp sgt i64 %7, 64\l  br i1 %8, label %9, label %177\l|{<s0>T|<s1>F}}"];
	Node0x5561133933b0:s0 -> Node0x556113393470;
	Node0x5561133933b0:s1 -> Node0x5561133936f0;
	Node0x556113393470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%9:\l9:                                                \l  %10 = phi i64 [ %175, %173 ], [ %7, %3 ]\l  %11 = phi i64 [ %129, %173 ], [ %2, %3 ]\l  %12 = phi float* [ %161, %173 ], [ %1, %3 ]\l  %13 = icmp eq i64 %11, 0\l  br i1 %13, label %14, label %128\l|{<s0>T|<s1>F}}"];
	Node0x556113393470:s0 -> Node0x556113393be0;
	Node0x556113393470:s1 -> Node0x556113393c70;
	Node0x556113393be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%14:\l14:                                               \l  %15 = lshr exact i64 %10, 2\l  %16 = add nsw i64 %15, -2\l  %17 = lshr i64 %16, 1\l  %18 = add nsw i64 %15, -1\l  %19 = lshr i64 %18, 1\l  %20 = and i64 %10, 4\l  %21 = icmp eq i64 %20, 0\l  %22 = or i64 %16, 1\l  %23 = getelementptr inbounds float, float* %0, i64 %22\l  %24 = getelementptr inbounds float, float* %0, i64 %17\l  br label %25\l}"];
	Node0x556113393be0 -> Node0x556113394310;
	Node0x556113394310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%25:\l25:                                               \l  %26 = phi i64 [ %17, %14 ], [ %68, %64 ]\l  %27 = getelementptr inbounds float, float* %0, i64 %26\l  %28 = load float, float* %27, align 4, !tbaa !3\l  %29 = icmp sgt i64 %19, %26\l  br i1 %29, label %30, label %45\l|{<s0>T|<s1>F}}"];
	Node0x556113394310:s0 -> Node0x5561133946e0;
	Node0x556113394310:s1 -> Node0x556113394770;
	Node0x5561133946e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%30:\l30:                                               \l  %31 = phi i64 [ %40, %30 ], [ %26, %25 ]\l  %32 = shl i64 %31, 1\l  %33 = add i64 %32, 2\l  %34 = getelementptr inbounds float, float* %0, i64 %33\l  %35 = or i64 %32, 1\l  %36 = getelementptr inbounds float, float* %0, i64 %35\l  %37 = load float, float* %34, align 4, !tbaa !3\l  %38 = load float, float* %36, align 4, !tbaa !3\l  %39 = fcmp olt float %37, %38\l  %40 = select i1 %39, i64 %35, i64 %33\l  %41 = getelementptr inbounds float, float* %0, i64 %40\l  %42 = load float, float* %41, align 4, !tbaa !3\l  %43 = getelementptr inbounds float, float* %0, i64 %31\l  store float %42, float* %43, align 4, !tbaa !3\l  %44 = icmp slt i64 %40, %19\l  br i1 %44, label %30, label %45, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x5561133946e0:s0 -> Node0x5561133946e0;
	Node0x5561133946e0:s1 -> Node0x556113394770;
	Node0x556113394770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%45:\l45:                                               \l  %46 = phi i64 [ %26, %25 ], [ %40, %30 ]\l  %47 = icmp eq i64 %46, %17\l  %48 = select i1 %21, i1 %47, i1 false\l  br i1 %48, label %49, label %51\l|{<s0>T|<s1>F}}"];
	Node0x556113394770:s0 -> Node0x556113395450;
	Node0x556113394770:s1 -> Node0x5561133954a0;
	Node0x556113395450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%49:\l49:                                               \l  %50 = load float, float* %23, align 4, !tbaa !3\l  store float %50, float* %24, align 4, !tbaa !3\l  br label %51\l}"];
	Node0x556113395450 -> Node0x5561133954a0;
	Node0x5561133954a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%51:\l51:                                               \l  %52 = phi i64 [ %22, %49 ], [ %46, %45 ]\l  %53 = icmp sgt i64 %52, %26\l  br i1 %53, label %54, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5561133954a0:s0 -> Node0x556113395890;
	Node0x5561133954a0:s1 -> Node0x556113394400;
	Node0x556113395890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%54:\l54:                                               \l  %55 = phi i64 [ %57, %61 ], [ %52, %51 ]\l  %56 = add nsw i64 %55, -1\l  %57 = sdiv i64 %56, 2\l  %58 = getelementptr inbounds float, float* %0, i64 %57\l  %59 = load float, float* %58, align 4, !tbaa !3\l  %60 = fcmp olt float %59, %28\l  br i1 %60, label %61, label %64\l|{<s0>T|<s1>F}}"];
	Node0x556113395890:s0 -> Node0x5561133959c0;
	Node0x556113395890:s1 -> Node0x556113394400;
	Node0x5561133959c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%61:\l61:                                               \l  %62 = getelementptr inbounds float, float* %0, i64 %55\l  store float %59, float* %62, align 4, !tbaa !3\l  %63 = icmp sgt i64 %57, %26\l  br i1 %63, label %54, label %64, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x5561133959c0:s0 -> Node0x556113395890;
	Node0x5561133959c0:s1 -> Node0x556113394400;
	Node0x556113394400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%64:\l64:                                               \l  %65 = phi i64 [ %52, %51 ], [ %57, %61 ], [ %55, %54 ]\l  %66 = getelementptr inbounds float, float* %0, i64 %65\l  store float %28, float* %66, align 4, !tbaa !3\l  %67 = icmp eq i64 %26, 0\l  %68 = add nsw i64 %26, -1\l  br i1 %67, label %69, label %25, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x556113394400:s0 -> Node0x5561133967d0;
	Node0x556113394400:s1 -> Node0x556113394310;
	Node0x5561133967d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%69:\l69:                                               \l  %70 = icmp sgt i64 %10, 4\l  br i1 %70, label %71, label %177\l|{<s0>T|<s1>F}}"];
	Node0x5561133967d0:s0 -> Node0x556113396a40;
	Node0x5561133967d0:s1 -> Node0x5561133936f0;
	Node0x556113396a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%71:\l71:                                               \l  %72 = phi float* [ %73, %124 ], [ %12, %69 ]\l  %73 = getelementptr inbounds float, float* %72, i64 -1\l  %74 = load float, float* %73, align 4, !tbaa !3\l  %75 = load float, float* %0, align 4, !tbaa !3\l  store float %75, float* %73, align 4, !tbaa !3\l  %76 = ptrtoint float* %73 to i64\l  %77 = sub i64 %76, %4\l  %78 = ashr exact i64 %77, 2\l  %79 = add nsw i64 %78, -1\l  %80 = sdiv i64 %79, 2\l  %81 = icmp sgt i64 %77, 8\l  br i1 %81, label %82, label %97\l|{<s0>T|<s1>F}}"];
	Node0x556113396a40:s0 -> Node0x5561133971d0;
	Node0x556113396a40:s1 -> Node0x556113397220;
	Node0x5561133971d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%82:\l82:                                               \l  %83 = phi i64 [ %92, %82 ], [ 0, %71 ]\l  %84 = shl i64 %83, 1\l  %85 = add i64 %84, 2\l  %86 = getelementptr inbounds float, float* %0, i64 %85\l  %87 = or i64 %84, 1\l  %88 = getelementptr inbounds float, float* %0, i64 %87\l  %89 = load float, float* %86, align 4, !tbaa !3\l  %90 = load float, float* %88, align 4, !tbaa !3\l  %91 = fcmp olt float %89, %90\l  %92 = select i1 %91, i64 %87, i64 %85\l  %93 = getelementptr inbounds float, float* %0, i64 %92\l  %94 = load float, float* %93, align 4, !tbaa !3\l  %95 = getelementptr inbounds float, float* %0, i64 %83\l  store float %94, float* %95, align 4, !tbaa !3\l  %96 = icmp slt i64 %92, %80\l  br i1 %96, label %82, label %97, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x5561133971d0:s0 -> Node0x5561133971d0;
	Node0x5561133971d0:s1 -> Node0x556113397220;
	Node0x556113397220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%97:\l97:                                               \l  %98 = phi i64 [ 0, %71 ], [ %92, %82 ]\l  %99 = and i64 %77, 4\l  %100 = icmp eq i64 %99, 0\l  br i1 %100, label %101, label %111\l|{<s0>T|<s1>F}}"];
	Node0x556113397220:s0 -> Node0x556113398480;
	Node0x556113397220:s1 -> Node0x5561133984d0;
	Node0x556113398480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%101:\l101:                                              \l  %102 = add nsw i64 %78, -2\l  %103 = sdiv i64 %102, 2\l  %104 = icmp eq i64 %98, %103\l  br i1 %104, label %105, label %111\l|{<s0>T|<s1>F}}"];
	Node0x556113398480:s0 -> Node0x556113398780;
	Node0x556113398480:s1 -> Node0x5561133984d0;
	Node0x556113398780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%105:\l105:                                              \l  %106 = shl i64 %98, 1\l  %107 = or i64 %106, 1\l  %108 = getelementptr inbounds float, float* %0, i64 %107\l  %109 = load float, float* %108, align 4, !tbaa !3\l  %110 = getelementptr inbounds float, float* %0, i64 %98\l  store float %109, float* %110, align 4, !tbaa !3\l  br label %111\l}"];
	Node0x556113398780 -> Node0x5561133984d0;
	Node0x5561133984d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%111:\l111:                                              \l  %112 = phi i64 [ %107, %105 ], [ %98, %101 ], [ %98, %97 ]\l  %113 = icmp sgt i64 %112, 0\l  br i1 %113, label %114, label %124\l|{<s0>T|<s1>F}}"];
	Node0x5561133984d0:s0 -> Node0x556113398db0;
	Node0x5561133984d0:s1 -> Node0x556113396b40;
	Node0x556113398db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%114:\l114:                                              \l  %115 = phi i64 [ %117, %121 ], [ %112, %111 ]\l  %116 = add nsw i64 %115, -1\l  %117 = lshr i64 %116, 1\l  %118 = getelementptr inbounds float, float* %0, i64 %117\l  %119 = load float, float* %118, align 4, !tbaa !3\l  %120 = fcmp olt float %119, %74\l  br i1 %120, label %121, label %124\l|{<s0>T|<s1>F}}"];
	Node0x556113398db0:s0 -> Node0x556113398eb0;
	Node0x556113398db0:s1 -> Node0x556113396b40;
	Node0x556113398eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%121:\l121:                                              \l  %122 = getelementptr inbounds float, float* %0, i64 %115\l  store float %119, float* %122, align 4, !tbaa !3\l  %123 = icmp ult i64 %116, 2\l  br i1 %123, label %124, label %114, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x556113398eb0:s0 -> Node0x556113396b40;
	Node0x556113398eb0:s1 -> Node0x556113398db0;
	Node0x556113396b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%124:\l124:                                              \l  %125 = phi i64 [ %112, %111 ], [ 0, %121 ], [ %115, %114 ]\l  %126 = getelementptr inbounds float, float* %0, i64 %125\l  store float %74, float* %126, align 4, !tbaa !3\l  %127 = icmp sgt i64 %77, 4\l  br i1 %127, label %71, label %177, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x556113396b40:s0 -> Node0x556113396a40;
	Node0x556113396b40:s1 -> Node0x5561133936f0;
	Node0x556113393c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%128:\l128:                                              \l  %129 = add nsw i64 %11, -1\l  %130 = lshr i64 %10, 3\l  %131 = getelementptr inbounds float, float* %0, i64 %130\l  %132 = getelementptr inbounds float, float* %12, i64 -1\l  %133 = load float, float* %5, align 4, !tbaa !3\l  %134 = load float, float* %131, align 4, !tbaa !3\l  %135 = fcmp olt float %133, %134\l  %136 = load float, float* %132, align 4, !tbaa !3\l  br i1 %135, label %137, label %146\l|{<s0>T|<s1>F}}"];
	Node0x556113393c70:s0 -> Node0x55611339abd0;
	Node0x556113393c70:s1 -> Node0x55611339ac20;
	Node0x55611339abd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%137:\l137:                                              \l  %138 = fcmp olt float %134, %136\l  br i1 %138, label %139, label %141\l|{<s0>T|<s1>F}}"];
	Node0x55611339abd0:s0 -> Node0x55611339adb0;
	Node0x55611339abd0:s1 -> Node0x55611339ae00;
	Node0x55611339adb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%139:\l139:                                              \l  %140 = load float, float* %0, align 4, !tbaa !3\l  store float %134, float* %0, align 4, !tbaa !3\l  store float %140, float* %131, align 4, !tbaa !3\l  br label %155\l}"];
	Node0x55611339adb0 -> Node0x55611339b090;
	Node0x55611339ae00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%141:\l141:                                              \l  %142 = fcmp olt float %133, %136\l  %143 = load float, float* %0, align 4, !tbaa !3\l  br i1 %142, label %144, label %145\l|{<s0>T|<s1>F}}"];
	Node0x55611339ae00:s0 -> Node0x55611339b250;
	Node0x55611339ae00:s1 -> Node0x55611339b2a0;
	Node0x55611339b250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%144:\l144:                                              \l  store float %136, float* %0, align 4, !tbaa !3\l  store float %143, float* %132, align 4, !tbaa !3\l  br label %155\l}"];
	Node0x55611339b250 -> Node0x55611339b090;
	Node0x55611339b2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%145:\l145:                                              \l  store float %133, float* %0, align 4, !tbaa !3\l  store float %143, float* %5, align 4, !tbaa !3\l  br label %155\l}"];
	Node0x55611339b2a0 -> Node0x55611339b090;
	Node0x55611339ac20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%146:\l146:                                              \l  %147 = fcmp olt float %133, %136\l  br i1 %147, label %148, label %150\l|{<s0>T|<s1>F}}"];
	Node0x55611339ac20:s0 -> Node0x55611339b790;
	Node0x55611339ac20:s1 -> Node0x55611339b7e0;
	Node0x55611339b790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%148:\l148:                                              \l  %149 = load float, float* %0, align 4, !tbaa !3\l  store float %133, float* %0, align 4, !tbaa !3\l  store float %149, float* %5, align 4, !tbaa !3\l  br label %155\l}"];
	Node0x55611339b790 -> Node0x55611339b090;
	Node0x55611339b7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%150:\l150:                                              \l  %151 = fcmp olt float %134, %136\l  %152 = load float, float* %0, align 4, !tbaa !3\l  br i1 %151, label %153, label %154\l|{<s0>T|<s1>F}}"];
	Node0x55611339b7e0:s0 -> Node0x556113391da0;
	Node0x55611339b7e0:s1 -> Node0x556113391df0;
	Node0x556113391da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%153:\l153:                                              \l  store float %136, float* %0, align 4, !tbaa !3\l  store float %152, float* %132, align 4, !tbaa !3\l  br label %155\l}"];
	Node0x556113391da0 -> Node0x55611339b090;
	Node0x556113391df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%154:\l154:                                              \l  store float %134, float* %0, align 4, !tbaa !3\l  store float %152, float* %131, align 4, !tbaa !3\l  br label %155\l}"];
	Node0x556113391df0 -> Node0x55611339b090;
	Node0x55611339b090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%155:\l155:                                              \l  br label %156\l}"];
	Node0x55611339b090 -> Node0x55611338ee70;
	Node0x55611338ee70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%156:\l156:                                              \l  %157 = phi float* [ %164, %172 ], [ %5, %155 ]\l  %158 = phi float* [ %167, %172 ], [ %12, %155 ]\l  %159 = load float, float* %0, align 4, !tbaa !3\l  br label %160\l}"];
	Node0x55611338ee70 -> Node0x55611338f180;
	Node0x55611338f180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%160:\l160:                                              \l  %161 = phi float* [ %157, %156 ], [ %164, %160 ]\l  %162 = load float, float* %161, align 4, !tbaa !3\l  %163 = fcmp olt float %162, %159\l  %164 = getelementptr inbounds float, float* %161, i64 1\l  br i1 %163, label %160, label %165, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x55611338f180:s0 -> Node0x55611338f180;
	Node0x55611338f180:s1 -> Node0x55611338f490;
	Node0x55611338f490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%165:\l165:                                              \l  %166 = phi float* [ %167, %165 ], [ %158, %160 ]\l  %167 = getelementptr inbounds float, float* %166, i64 -1\l  %168 = load float, float* %167, align 4, !tbaa !3\l  %169 = fcmp olt float %159, %168\l  br i1 %169, label %165, label %170, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x55611338f490:s0 -> Node0x55611338f490;
	Node0x55611338f490:s1 -> Node0x55611339d490;
	Node0x55611339d490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%170:\l170:                                              \l  %171 = icmp ult float* %161, %167\l  br i1 %171, label %172, label %173\l|{<s0>T|<s1>F}}"];
	Node0x55611339d490:s0 -> Node0x55611338ef30;
	Node0x55611339d490:s1 -> Node0x556113393830;
	Node0x55611338ef30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%172:\l172:                                              \l  store float %168, float* %161, align 4, !tbaa !3\l  store float %162, float* %167, align 4, !tbaa !3\l  br label %156, !llvm.loop !14\l}"];
	Node0x55611338ef30 -> Node0x55611338ee70;
	Node0x556113393830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%173:\l173:                                              \l  tail call void\l... @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEElN\l...S0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(float* nonnull %161, float* %12, i64\l... %129)\l  %174 = ptrtoint float* %161 to i64\l  %175 = sub i64 %174, %4\l  %176 = icmp sgt i64 %175, 64\l  br i1 %176, label %9, label %177, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x556113393830:s0 -> Node0x556113393470;
	Node0x556113393830:s1 -> Node0x5561133936f0;
	Node0x5561133936f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%177:\l177:                                              \l  ret void\l}"];
}
