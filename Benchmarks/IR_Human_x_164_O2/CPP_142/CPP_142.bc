; ModuleID = '../../Human_xBenchmarks_164/CPP_142/CPP_142.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_142/CPP_142.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local i32 @_Z11sum_squaresSt6vectorIiSaIiEE(%"class.std::vector"* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32*, i32** %2, align 8, !tbaa !3
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8, !tbaa !8
  %6 = ptrtoint i32* %3 to i64
  %7 = ptrtoint i32* %5 to i64
  %8 = sub i64 %6, %7
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = ashr exact i64 %8, 2
  %12 = call i64 @llvm.umax.i64(i64 %11, i64 1)
  br label %15

13:                                               ; preds = %33, %1
  %14 = phi i32 [ 0, %1 ], [ %35, %33 ]
  ret i32 %14

15:                                               ; preds = %10, %33
  %16 = phi i64 [ 0, %10 ], [ %36, %33 ]
  %17 = phi i32 [ 0, %10 ], [ %35, %33 ]
  %18 = trunc i64 %16 to i32
  %19 = urem i32 %18, 3
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %15
  %22 = getelementptr inbounds i32, i32* %5, i64 %16
  %23 = load i32, i32* %22, align 4, !tbaa !9
  %24 = mul nsw i32 %23, %23
  br label %33

25:                                               ; preds = %15
  %26 = and i32 %18, 3
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds i32, i32* %5, i64 %16
  %29 = load i32, i32* %28, align 4, !tbaa !9
  br i1 %27, label %30, label %33

30:                                               ; preds = %25
  %31 = mul nsw i32 %29, %29
  %32 = mul nsw i32 %31, %29
  br label %33

33:                                               ; preds = %25, %21, %30
  %34 = phi i32 [ %24, %21 ], [ %32, %30 ], [ %29, %25 ]
  %35 = add nsw i32 %34, %17
  %36 = add nuw nsw i64 %16, 1
  %37 = icmp eq i64 %36, %12
  br i1 %37, label %13, label %15, !llvm.loop !11
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 8}
!4 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!4, !5, i64 0}
!9 = !{!10, !10, i64 0}
!10 = !{!"int", !6, i64 0}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.mustprogress"}
