; ModuleID = '../../Human_xBenchmarks_164/CPP_119/CPP_119.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_119/CPP_119.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_ = comdat any

@.str.1 = private unnamed_addr constant [4 x i8] c"Yes\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z12match_parensSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::vector"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8, !tbaa !3
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 1
  call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %3, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8)
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !8
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i64 %10, 0
  br i1 %13, label %80, label %14

14:                                               ; preds = %2
  %15 = and i64 %10, 1
  %16 = icmp eq i64 %10, 1
  br i1 %16, label %48, label %17

17:                                               ; preds = %14
  %18 = and i64 %10, -2
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i64 [ 0, %17 ], [ %45, %19 ]
  %21 = phi i8 [ 1, %17 ], [ %44, %19 ]
  %22 = phi i32 [ 0, %17 ], [ %41, %19 ]
  %23 = phi i64 [ %18, %17 ], [ %46, %19 ]
  %24 = getelementptr inbounds i8, i8* %12, i64 %20
  %25 = load i8, i8* %24, align 1, !tbaa !12
  %26 = icmp eq i8 %25, 40
  %27 = zext i1 %26 to i32
  %28 = add nsw i32 %22, %27
  %29 = icmp eq i8 %25, 41
  %30 = sext i1 %29 to i32
  %31 = add nsw i32 %28, %30
  %32 = icmp slt i32 %31, 0
  %33 = or i64 %20, 1
  %34 = getelementptr inbounds i8, i8* %12, i64 %33
  %35 = load i8, i8* %34, align 1, !tbaa !12
  %36 = icmp eq i8 %35, 40
  %37 = zext i1 %36 to i32
  %38 = add nsw i32 %31, %37
  %39 = icmp eq i8 %35, 41
  %40 = sext i1 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = icmp slt i32 %41, 0
  %43 = select i1 %42, i1 true, i1 %32
  %44 = select i1 %43, i8 0, i8 %21
  %45 = add nuw nsw i64 %20, 2
  %46 = add i64 %23, -2
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %19, !llvm.loop !13

48:                                               ; preds = %19, %14
  %49 = phi i32 [ undef, %14 ], [ %41, %19 ]
  %50 = phi i8 [ undef, %14 ], [ %44, %19 ]
  %51 = phi i64 [ 0, %14 ], [ %45, %19 ]
  %52 = phi i8 [ 1, %14 ], [ %44, %19 ]
  %53 = phi i32 [ 0, %14 ], [ %41, %19 ]
  %54 = icmp eq i64 %15, 0
  br i1 %54, label %66, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds i8, i8* %12, i64 %51
  %57 = load i8, i8* %56, align 1, !tbaa !12
  %58 = icmp eq i8 %57, 40
  %59 = zext i1 %58 to i32
  %60 = add nsw i32 %53, %59
  %61 = icmp eq i8 %57, 41
  %62 = sext i1 %61 to i32
  %63 = add nsw i32 %60, %62
  %64 = icmp slt i32 %63, 0
  %65 = select i1 %64, i8 0, i8 %52
  br label %66

66:                                               ; preds = %48, %55
  %67 = phi i32 [ %49, %48 ], [ %63, %55 ]
  %68 = phi i8 [ %50, %48 ], [ %65, %55 ]
  %69 = icmp eq i32 %67, 0
  br i1 %69, label %77, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %72 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %71, %union.anon** %72, align 8, !tbaa !15
  %73 = bitcast %union.anon* %71 to i16*
  store i16 28494, i16* %73, align 8
  %74 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 2, i64* %74, align 8, !tbaa !8
  %75 = bitcast %union.anon* %71 to i8*
  %76 = getelementptr inbounds i8, i8* %75, i64 2
  store i8 0, i8* %76, align 2, !tbaa !12
  br label %212

77:                                               ; preds = %66
  %78 = and i8 %68, 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %2, %77
  %81 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %82 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %81, %union.anon** %82, align 8, !tbaa !15
  %83 = bitcast %union.anon* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(3) %83, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3, i1 false) #5
  %84 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 3, i64* %84, align 8, !tbaa !8
  %85 = getelementptr inbounds i8, i8* %83, i64 3
  store i8 0, i8* %85, align 1, !tbaa !12
  br label %212

86:                                               ; preds = %77
  %87 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %87) #5
  %88 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8, !tbaa !3
  %89 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %88, i64 1
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %4, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %89, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %88)
          to label %90 unwind label %172

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8, !tbaa !16
  %93 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %94 = bitcast %union.anon* %93 to i8*
  %95 = icmp eq i8* %92, %94
  br i1 %95, label %96, label %111

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %98 = load i64, i64* %97, align 8, !tbaa !8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %106, label %100

100:                                              ; preds = %96
  %101 = load i8*, i8** %11, align 8, !tbaa !16
  %102 = icmp eq i64 %98, 1
  br i1 %102, label %103, label %105

103:                                              ; preds = %100
  %104 = load i8, i8* %92, align 1, !tbaa !12
  store i8 %104, i8* %101, align 1, !tbaa !12
  br label %106

105:                                              ; preds = %100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %101, i8* align 1 %92, i64 %98, i1 false) #5
  br label %106

106:                                              ; preds = %105, %103, %96
  %107 = load i64, i64* %97, align 8, !tbaa !8
  store i64 %107, i64* %9, align 8, !tbaa !8
  %108 = load i8*, i8** %11, align 8, !tbaa !16
  %109 = getelementptr inbounds i8, i8* %108, i64 %107
  store i8 0, i8* %109, align 1, !tbaa !12
  %110 = load i8*, i8** %91, align 8, !tbaa !16
  br label %128

111:                                              ; preds = %90
  %112 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %113 = bitcast %union.anon* %112 to i8*
  %114 = load i8*, i8** %11, align 8, !tbaa !16
  %115 = icmp eq i8* %114, %113
  %116 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2, i32 0
  %117 = load i64, i64* %116, align 8
  store i8* %92, i8** %11, align 8, !tbaa !16
  %118 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %119 = bitcast i64* %118 to <2 x i64>*
  %120 = load <2 x i64>, <2 x i64>* %119, align 8, !tbaa !12
  %121 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> %120, <2 x i64>* %121, align 8, !tbaa !12
  %122 = icmp eq i8* %114, null
  %123 = or i1 %115, %122
  br i1 %123, label %126, label %124

124:                                              ; preds = %111
  store i8* %114, i8** %91, align 8, !tbaa !16
  %125 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  store i64 %117, i64* %125, align 8, !tbaa !12
  br label %128

126:                                              ; preds = %111
  %127 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  store %union.anon* %93, %union.anon** %127, align 8, !tbaa !16
  br label %128

128:                                              ; preds = %106, %124, %126
  %129 = phi i8* [ %110, %106 ], [ %114, %124 ], [ %94, %126 ]
  %130 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  store i64 0, i64* %130, align 8, !tbaa !8
  store i8 0, i8* %129, align 1, !tbaa !12
  %131 = load i8*, i8** %91, align 8, !tbaa !16
  %132 = icmp eq i8* %131, %94
  br i1 %132, label %134, label %133

133:                                              ; preds = %128
  call void @_ZdlPv(i8* %131) #5
  br label %134

134:                                              ; preds = %128, %133
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %87) #5
  %135 = load i64, i64* %9, align 8, !tbaa !8
  %136 = load i8*, i8** %11, align 8
  %137 = icmp eq i64 %135, 0
  br i1 %137, label %199, label %138

138:                                              ; preds = %134
  %139 = and i64 %135, 1
  %140 = icmp eq i64 %135, 1
  br i1 %140, label %178, label %141

141:                                              ; preds = %138
  %142 = and i64 %135, -2
  br label %143

143:                                              ; preds = %143, %141
  %144 = phi i64 [ 0, %141 ], [ %169, %143 ]
  %145 = phi i8 [ 1, %141 ], [ %168, %143 ]
  %146 = phi i32 [ 0, %141 ], [ %165, %143 ]
  %147 = phi i64 [ %142, %141 ], [ %170, %143 ]
  %148 = getelementptr inbounds i8, i8* %136, i64 %144
  %149 = load i8, i8* %148, align 1, !tbaa !12
  %150 = icmp eq i8 %149, 40
  %151 = zext i1 %150 to i32
  %152 = add nsw i32 %146, %151
  %153 = icmp eq i8 %149, 41
  %154 = sext i1 %153 to i32
  %155 = add nsw i32 %152, %154
  %156 = icmp slt i32 %155, 0
  %157 = or i64 %144, 1
  %158 = getelementptr inbounds i8, i8* %136, i64 %157
  %159 = load i8, i8* %158, align 1, !tbaa !12
  %160 = icmp eq i8 %159, 40
  %161 = zext i1 %160 to i32
  %162 = add nsw i32 %155, %161
  %163 = icmp eq i8 %159, 41
  %164 = sext i1 %163 to i32
  %165 = add nsw i32 %162, %164
  %166 = icmp slt i32 %165, 0
  %167 = select i1 %166, i1 true, i1 %156
  %168 = select i1 %167, i8 0, i8 %145
  %169 = add nuw nsw i64 %144, 2
  %170 = add i64 %147, -2
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %178, label %143, !llvm.loop !17

172:                                              ; preds = %86
  %173 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %87) #5
  %174 = load i8*, i8** %11, align 8, !tbaa !16
  %175 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %176 = bitcast %union.anon* %175 to i8*
  %177 = icmp eq i8* %174, %176
  br i1 %177, label %220, label %219

178:                                              ; preds = %143, %138
  %179 = phi i8 [ undef, %138 ], [ %168, %143 ]
  %180 = phi i64 [ 0, %138 ], [ %169, %143 ]
  %181 = phi i8 [ 1, %138 ], [ %168, %143 ]
  %182 = phi i32 [ 0, %138 ], [ %165, %143 ]
  %183 = icmp eq i64 %139, 0
  br i1 %183, label %195, label %184

184:                                              ; preds = %178
  %185 = getelementptr inbounds i8, i8* %136, i64 %180
  %186 = load i8, i8* %185, align 1, !tbaa !12
  %187 = icmp eq i8 %186, 40
  %188 = zext i1 %187 to i32
  %189 = add nsw i32 %182, %188
  %190 = icmp eq i8 %186, 41
  %191 = sext i1 %190 to i32
  %192 = add nsw i32 %189, %191
  %193 = icmp slt i32 %192, 0
  %194 = select i1 %193, i8 0, i8 %181
  br label %195

195:                                              ; preds = %178, %184
  %196 = phi i8 [ %179, %178 ], [ %194, %184 ]
  %197 = and i8 %196, 1
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %205, label %199

199:                                              ; preds = %134, %195
  %200 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %201 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %200, %union.anon** %201, align 8, !tbaa !15
  %202 = bitcast %union.anon* %200 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(3) %202, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3, i1 false) #5
  %203 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 3, i64* %203, align 8, !tbaa !8
  %204 = getelementptr inbounds i8, i8* %202, i64 3
  store i8 0, i8* %204, align 1, !tbaa !12
  br label %212

205:                                              ; preds = %195
  %206 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %207 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %206, %union.anon** %207, align 8, !tbaa !15
  %208 = bitcast %union.anon* %206 to i16*
  store i16 28494, i16* %208, align 8
  %209 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 2, i64* %209, align 8, !tbaa !8
  %210 = bitcast %union.anon* %206 to i8*
  %211 = getelementptr inbounds i8, i8* %210, i64 2
  store i8 0, i8* %211, align 2, !tbaa !12
  br label %212

212:                                              ; preds = %205, %199, %80, %70
  %213 = phi i8* [ %136, %205 ], [ %136, %199 ], [ %12, %80 ], [ %12, %70 ]
  %214 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %215 = bitcast %union.anon* %214 to i8*
  %216 = icmp eq i8* %213, %215
  br i1 %216, label %218, label %217

217:                                              ; preds = %212
  call void @_ZdlPv(i8* %213) #5
  br label %218

218:                                              ; preds = %212, %217
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #5
  ret void

219:                                              ; preds = %172
  call void @_ZdlPv(i8* %174) #5
  br label %220

220:                                              ; preds = %172, %219
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #5
  resume { i8*, i32 } %173
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !15
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !16
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !8
  %11 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #5
  store i64 %10, i64* %4, align 8, !tbaa !18
  %12 = icmp ugt i64 %10, 15
  br i1 %12, label %15, label %13

13:                                               ; preds = %3
  %14 = bitcast %union.anon* %5 to i8*
  br label %20

15:                                               ; preds = %3
  %16 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8, !tbaa !16
  %18 = load i64, i64* %4, align 8, !tbaa !18
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %18, i64* %19, align 8, !tbaa !12
  br label %20

20:                                               ; preds = %15, %13
  %21 = phi i8* [ %14, %13 ], [ %16, %15 ]
  switch i64 %10, label %24 [
    i64 1, label %22
    i64 0, label %25
  ]

22:                                               ; preds = %20
  %23 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %23, i8* %21, align 1, !tbaa !12
  br label %25

24:                                               ; preds = %20
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %8, i64 %10, i1 false) #5
  br label %25

25:                                               ; preds = %20, %22, %24
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %27 = load i64, i64* %4, align 8, !tbaa !18
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %27, i64* %28, align 8, !tbaa !8
  %29 = load i8*, i8** %26, align 8, !tbaa !16
  %30 = getelementptr inbounds i8, i8* %29, i64 %27
  store i8 0, i8* %30, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #5
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8, !tbaa !16
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  %34 = load i64, i64* %33, align 8, !tbaa !8
  %35 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %32, i64 %34)
          to label %43 unwind label %36

36:                                               ; preds = %25
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = load i8*, i8** %26, align 8, !tbaa !16
  %39 = bitcast %union.anon* %5 to i8*
  %40 = icmp eq i8* %38, %39
  br i1 %40, label %42, label %41

41:                                               ; preds = %36
  call void @_ZdlPv(i8* %38) #5
  br label %42

42:                                               ; preds = %36, %41
  resume { i8*, i32 } %37

43:                                               ; preds = %25
  ret void
}

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #3

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !11, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !10, i64 0, !11, i64 8, !6, i64 16}
!10 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!11 = !{!"long", !6, i64 0}
!12 = !{!6, !6, i64 0}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.mustprogress"}
!15 = !{!10, !5, i64 0}
!16 = !{!9, !5, i64 0}
!17 = distinct !{!17, !14}
!18 = !{!11, !11, i64 0}
