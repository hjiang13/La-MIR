digraph "CFG for '_Z10sort_thirdSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z10sort_thirdSt6vectorIiSaIiEE' function";

	Node0x556e5062d570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = load i32*, i32** %3, align 8, !tbaa !3\l  %6 = load i32*, i32** %4, align 8, !tbaa !8\l  %7 = icmp eq i32* %5, %6\l  br i1 %7, label %92, label %8\l|{<s0>T|<s1>F}}"];
	Node0x556e5062d570:s0 -> Node0x556e5062ec70;
	Node0x556e5062d570:s1 -> Node0x556e5062ed00;
	Node0x556e5062ed00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l8:                                                \l  %9 = phi i32* [ %59, %58 ], [ %6, %2 ]\l  %10 = phi i32* [ %60, %58 ], [ %5, %2 ]\l  %11 = phi i64 [ %65, %58 ], [ 0, %2 ]\l  %12 = phi i64 [ %67, %58 ], [ 0, %2 ]\l  %13 = phi i32* [ %63, %58 ], [ null, %2 ]\l  %14 = phi i32* [ %64, %58 ], [ null, %2 ]\l  %15 = phi i32* [ %61, %58 ], [ null, %2 ]\l  %16 = getelementptr inbounds i32, i32* %9, i64 %12\l  %17 = icmp eq i32* %14, %13\l  br i1 %17, label %20, label %18\l|{<s0>T|<s1>F}}"];
	Node0x556e5062ed00:s0 -> Node0x556e5062f740;
	Node0x556e5062ed00:s1 -> Node0x556e5062f7d0;
	Node0x556e5062f7d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%18:\l18:                                               \l  %19 = load i32, i32* %16, align 4, !tbaa !9\l  store i32 %19, i32* %14, align 4, !tbaa !9\l  br label %58\l}"];
	Node0x556e5062f7d0 -> Node0x556e5062dee0;
	Node0x556e5062f740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%20:\l20:                                               \l  %21 = ptrtoint i32* %13 to i64\l  %22 = ptrtoint i32* %15 to i64\l  %23 = sub i64 %21, %22\l  %24 = ashr exact i64 %23, 2\l  %25 = icmp eq i64 %23, 9223372036854775804\l  br i1 %25, label %26, label %28\l|{<s0>T|<s1>F}}"];
	Node0x556e5062f740:s0 -> Node0x556e50630480;
	Node0x556e5062f740:s1 -> Node0x556e506304d0;
	Node0x556e50630480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%26:\l26:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #7\l          to label %27 unwind label %75\l}"];
	Node0x556e50630480 -> Node0x556e506306d0;
	Node0x556e50630480 -> Node0x556e50630720;
	Node0x556e506306d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%27:\l27:                                               \l  unreachable\l}"];
	Node0x556e506304d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%28:\l28:                                               \l  %29 = icmp eq i64 %23, 0\l  %30 = select i1 %29, i64 1, i64 %24\l  %31 = add nsw i64 %30, %24\l  %32 = icmp ult i64 %31, %24\l  %33 = icmp ugt i64 %31, 2305843009213693951\l  %34 = or i1 %32, %33\l  %35 = select i1 %34, i64 2305843009213693951, i64 %31\l  %36 = icmp eq i64 %35, 0\l  br i1 %36, label %42, label %37\l|{<s0>T|<s1>F}}"];
	Node0x556e506304d0:s0 -> Node0x556e506310c0;
	Node0x556e506304d0:s1 -> Node0x556e50631110;
	Node0x556e50631110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%37:\l37:                                               \l  %38 = shl nuw nsw i64 %35, 2\l  %39 = invoke noalias nonnull i8* @_Znwm(i64 %38) #8\l          to label %40 unwind label %73\l}"];
	Node0x556e50631110 -> Node0x556e506312a0;
	Node0x556e50631110 -> Node0x556e506312f0;
	Node0x556e506312a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%40:\l40:                                               \l  %41 = bitcast i8* %39 to i32*\l  br label %42\l}"];
	Node0x556e506312a0 -> Node0x556e506310c0;
	Node0x556e506310c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%42:\l42:                                               \l  %43 = phi i32* [ %41, %40 ], [ null, %28 ]\l  %44 = getelementptr inbounds i32, i32* %43, i64 %24\l  %45 = load i32, i32* %16, align 4, !tbaa !9\l  store i32 %45, i32* %44, align 4, !tbaa !9\l  %46 = icmp sgt i64 %23, 0\l  br i1 %46, label %47, label %50\l|{<s0>T|<s1>F}}"];
	Node0x556e506310c0:s0 -> Node0x556e50631920;
	Node0x556e506310c0:s1 -> Node0x556e50631970;
	Node0x556e50631920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%47:\l47:                                               \l  %48 = bitcast i32* %43 to i8*\l  %49 = bitcast i32* %15 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %48, i8* align 4 %49,\l... i64 %23, i1 false) #9\l  br label %50\l}"];
	Node0x556e50631920 -> Node0x556e50631970;
	Node0x556e50631970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%50:\l50:                                               \l  %51 = icmp eq i32* %15, null\l  br i1 %51, label %54, label %52\l|{<s0>T|<s1>F}}"];
	Node0x556e50631970:s0 -> Node0x556e50631f90;
	Node0x556e50631970:s1 -> Node0x556e50631fe0;
	Node0x556e50631fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%52:\l52:                                               \l  %53 = bitcast i32* %15 to i8*\l  tail call void @_ZdlPv(i8* nonnull %53) #9\l  br label %54\l}"];
	Node0x556e50631fe0 -> Node0x556e50631f90;
	Node0x556e50631f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%54:\l54:                                               \l  %55 = getelementptr inbounds i32, i32* %43, i64 %35\l  %56 = load i32*, i32** %3, align 8, !tbaa !3\l  %57 = load i32*, i32** %4, align 8, !tbaa !8\l  br label %58\l}"];
	Node0x556e50631f90 -> Node0x556e5062dee0;
	Node0x556e5062dee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = phi i32* [ %57, %54 ], [ %9, %18 ]\l  %60 = phi i32* [ %56, %54 ], [ %10, %18 ]\l  %61 = phi i32* [ %43, %54 ], [ %15, %18 ]\l  %62 = phi i32* [ %44, %54 ], [ %14, %18 ]\l  %63 = phi i32* [ %55, %54 ], [ %13, %18 ]\l  %64 = getelementptr inbounds i32, i32* %62, i64 1\l  %65 = add nuw i64 %11, 1\l  %66 = mul i64 %65, 3\l  %67 = and i64 %66, 4294967295\l  %68 = ptrtoint i32* %60 to i64\l  %69 = ptrtoint i32* %59 to i64\l  %70 = sub i64 %68, %69\l  %71 = ashr exact i64 %70, 2\l  %72 = icmp ugt i64 %71, %67\l  br i1 %72, label %8, label %78, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x556e5062dee0:s0 -> Node0x556e5062ed00;
	Node0x556e5062dee0:s1 -> Node0x556e50633e50;
	Node0x556e506312f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%73:\l73:                                               \l  %74 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %146\l}"];
	Node0x556e506312f0 -> Node0x556e50634040;
	Node0x556e50630720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%75:\l75:                                               \l  %76 = phi i32* [ %61, %80 ], [ %61, %88 ], [ %15, %26 ]\l  %77 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %146\l}"];
	Node0x556e50630720 -> Node0x556e50634040;
	Node0x556e50633e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%78:\l78:                                               \l  %79 = icmp eq i32* %61, %64\l  br i1 %79, label %92, label %80\l|{<s0>T|<s1>F}}"];
	Node0x556e50633e50:s0 -> Node0x556e5062ec70;
	Node0x556e50633e50:s1 -> Node0x556e50634100;
	Node0x556e50634100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%80:\l80:                                               \l  %81 = ptrtoint i32* %64 to i64\l  %82 = ptrtoint i32* %61 to i64\l  %83 = sub i64 %81, %82\l  %84 = ashr exact i64 %83, 2\l  %85 = tail call i64 @llvm.ctlz.i64(i64 %84, i1 true) #9, !range !13\l  %86 = shl nuw nsw i64 %85, 1\l  %87 = xor i64 %86, 126\l  invoke void\l... @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElN\l...S0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i32* %61, i32* nonnull %64, i64 %87)\l          to label %88 unwind label %75\l}"];
	Node0x556e50634100 -> Node0x556e50634150;
	Node0x556e50634100 -> Node0x556e50630720;
	Node0x556e50634150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%88:\l88:                                               \l  invoke void\l... @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIi\l...EEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* %61, i32* nonnull %64)\l          to label %89 unwind label %75\l}"];
	Node0x556e50634150 -> Node0x556e50634e10;
	Node0x556e50634150 -> Node0x556e50630720;
	Node0x556e50634e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%89:\l89:                                               \l  %90 = load i32*, i32** %3, align 8, !tbaa !3\l  %91 = load i32*, i32** %4, align 8, !tbaa !8\l  br label %92\l}"];
	Node0x556e50634e10 -> Node0x556e5062ec70;
	Node0x556e5062ec70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%92:\l92:                                               \l  %93 = phi i32* [ %61, %89 ], [ %61, %78 ], [ null, %2 ]\l  %94 = phi i32* [ %91, %89 ], [ %59, %78 ], [ %5, %2 ]\l  %95 = phi i32* [ %90, %89 ], [ %60, %78 ], [ %5, %2 ]\l  %96 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %97 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %98 = icmp eq i32* %95, %94\l  %99 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %99, i8 0, i64 24, i1 false)\l  br i1 %98, label %141, label %100\l|{<s0>T|<s1>F}}"];
	Node0x556e5062ec70:s0 -> Node0x556e50635b30;
	Node0x556e5062ec70:s1 -> Node0x556e50635b80;
	Node0x556e50635b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%100:\l100:                                              \l  %101 = phi i64 [ %133, %132 ], [ 0, %92 ]\l  %102 = phi i32* [ %135, %132 ], [ %94, %92 ]\l  %103 = trunc i64 %101 to i32\l  %104 = urem i32 %103, 3\l  %105 = udiv i32 %103, 3\l  %106 = icmp eq i32 %104, 0\l  br i1 %106, label %107, label %121\l|{<s0>T|<s1>F}}"];
	Node0x556e50635b80:s0 -> Node0x556e506360b0;
	Node0x556e50635b80:s1 -> Node0x556e50636100;
	Node0x556e506360b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%107:\l107:                                              \l  %108 = zext i32 %105 to i64\l  %109 = getelementptr inbounds i32, i32* %93, i64 %108\l  %110 = load i32*, i32** %96, align 8, !tbaa !3\l  %111 = load i32*, i32** %97, align 8, !tbaa !14\l  %112 = icmp eq i32* %110, %111\l  br i1 %112, label %113, label %127\l|{<s0>T|<s1>F}}"];
	Node0x556e506360b0:s0 -> Node0x556e50636500;
	Node0x556e506360b0:s1 -> Node0x556e50636590;
	Node0x556e50636500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%113:\l113:                                              \l  invoke void\l... @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iterato\l...rIPiS1_EEDpOT_(%\"class.std::vector\"* nonnull align 8 dereferenceable(24) %0,\l... i32* %110, i32* nonnull align 4 dereferenceable(4) %109)\l          to label %132 unwind label %114\l}"];
	Node0x556e50636500 -> Node0x556e50635c80;
	Node0x556e50636500 -> Node0x556e506367e0;
	Node0x556e506367e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%114:\l114:                                              \l  %115 = landingpad \{ i8*, i32 \}\l          cleanup\l  %116 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 0\l  %117 = load i32*, i32** %116, align 8, !tbaa !8\l  %118 = icmp eq i32* %117, null\l  br i1 %118, label %146, label %119\l|{<s0>T|<s1>F}}"];
	Node0x556e506367e0:s0 -> Node0x556e50634040;
	Node0x556e506367e0:s1 -> Node0x556e50636d70;
	Node0x556e50636d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%119:\l119:                                              \l  %120 = bitcast i32* %117 to i8*\l  tail call void @_ZdlPv(i8* nonnull %120) #9\l  br label %146\l}"];
	Node0x556e50636d70 -> Node0x556e50634040;
	Node0x556e50636100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%121:\l121:                                              \l  %122 = getelementptr inbounds i32, i32* %102, i64 %101\l  %123 = load i32*, i32** %96, align 8, !tbaa !3\l  %124 = load i32*, i32** %97, align 8, !tbaa !14\l  %125 = icmp eq i32* %123, %124\l  br i1 %125, label %126, label %127\l|{<s0>T|<s1>F}}"];
	Node0x556e50636100:s0 -> Node0x556e50637880;
	Node0x556e50636100:s1 -> Node0x556e50636590;
	Node0x556e50637880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%126:\l126:                                              \l  invoke void\l... @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iterato\l...rIPiS1_EEDpOT_(%\"class.std::vector\"* nonnull align 8 dereferenceable(24) %0,\l... i32* %123, i32* nonnull align 4 dereferenceable(4) %122)\l          to label %132 unwind label %114\l}"];
	Node0x556e50637880 -> Node0x556e50635c80;
	Node0x556e50637880 -> Node0x556e506367e0;
	Node0x556e50636590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%127:\l127:                                              \l  %128 = phi i32* [ %109, %107 ], [ %122, %121 ]\l  %129 = phi i32* [ %110, %107 ], [ %123, %121 ]\l  %130 = load i32, i32* %128, align 4, !tbaa !9\l  store i32 %130, i32* %129, align 4, !tbaa !9\l  %131 = getelementptr inbounds i32, i32* %129, i64 1\l  store i32* %131, i32** %96, align 8, !tbaa !3\l  br label %132\l}"];
	Node0x556e50636590 -> Node0x556e50635c80;
	Node0x556e50635c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%132:\l132:                                              \l  %133 = add nuw i64 %101, 1\l  %134 = load i32*, i32** %3, align 8, !tbaa !3\l  %135 = load i32*, i32** %4, align 8, !tbaa !8\l  %136 = ptrtoint i32* %134 to i64\l  %137 = ptrtoint i32* %135 to i64\l  %138 = sub i64 %136, %137\l  %139 = ashr exact i64 %138, 2\l  %140 = icmp ugt i64 %139, %133\l  br i1 %140, label %100, label %141, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x556e50635c80:s0 -> Node0x556e50635b80;
	Node0x556e50635c80:s1 -> Node0x556e50635b30;
	Node0x556e50635b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%141:\l141:                                              \l  %142 = icmp eq i32* %93, null\l  br i1 %142, label %145, label %143\l|{<s0>T|<s1>F}}"];
	Node0x556e50635b30:s0 -> Node0x556e50638d10;
	Node0x556e50635b30:s1 -> Node0x556e50638d60;
	Node0x556e50638d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%143:\l143:                                              \l  %144 = bitcast i32* %93 to i8*\l  tail call void @_ZdlPv(i8* nonnull %144) #9\l  br label %145\l}"];
	Node0x556e50638d60 -> Node0x556e50638d10;
	Node0x556e50638d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%145:\l145:                                              \l  ret void\l}"];
	Node0x556e50634040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%146:\l146:                                              \l  %147 = phi i32* [ %93, %114 ], [ %93, %119 ], [ %15, %73 ], [ %76, %75 ]\l  %148 = phi \{ i8*, i32 \} [ %115, %114 ], [ %115, %119 ], [ %74, %73 ], [ %77,\l... %75 ]\l  %149 = icmp eq i32* %147, null\l  br i1 %149, label %152, label %150\l|{<s0>T|<s1>F}}"];
	Node0x556e50634040:s0 -> Node0x556e50639330;
	Node0x556e50634040:s1 -> Node0x556e50639380;
	Node0x556e50639380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%150:\l150:                                              \l  %151 = bitcast i32* %147 to i8*\l  tail call void @_ZdlPv(i8* nonnull %151) #9\l  br label %152\l}"];
	Node0x556e50639380 -> Node0x556e50639330;
	Node0x556e50639330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%152:\l152:                                              \l  resume \{ i8*, i32 \} %148\l}"];
}
