; ModuleID = '../../Human_xBenchmarks_164/CPP_141/CPP_141.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_141/CPP_141.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::allocator" = type { i8 }

@.str = private unnamed_addr constant [3 x i8] c"No\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c".txt\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c".exe\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c".dll\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"Yes\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z15file_name_checkNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca %"class.std::allocator", align 1
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8, !tbaa !3
  %7 = icmp ult i64 %6, 5
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %10 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %9, %union.anon** %10, align 8, !tbaa !10
  %11 = bitcast %union.anon* %9 to i16*
  store i16 28494, i16* %11, align 8
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 2, i64* %12, align 8, !tbaa !3
  %13 = bitcast %union.anon* %9 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 2
  store i8 0, i8* %14, align 2, !tbaa !11
  br label %143

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8, !tbaa !12
  %18 = load i8, i8* %17, align 1, !tbaa !11
  %19 = icmp slt i8 %18, 65
  br i1 %19, label %21, label %20

20:                                               ; preds = %15
  switch i8 %18, label %28 [
    i8 127, label %21
    i8 126, label %21
    i8 125, label %21
    i8 124, label %21
    i8 123, label %21
    i8 96, label %21
    i8 95, label %21
    i8 94, label %21
    i8 93, label %21
    i8 92, label %21
    i8 91, label %21
  ]

21:                                               ; preds = %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %15
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %23 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %22, %union.anon** %23, align 8, !tbaa !10
  %24 = bitcast %union.anon* %22 to i16*
  store i16 28494, i16* %24, align 8
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 2, i64* %25, align 8, !tbaa !3
  %26 = bitcast %union.anon* %22 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 2
  store i8 0, i8* %27, align 2, !tbaa !11
  br label %143

28:                                               ; preds = %20
  %29 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #6
  %30 = add i64 %6, -4
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %32 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  store %union.anon* %31, %union.anon** %32, align 8, !tbaa !10, !alias.scope !13
  %33 = bitcast %union.anon* %31 to i8*
  %34 = getelementptr inbounds i8, i8* %17, i64 %30
  %35 = bitcast i8* %34 to i32*
  %36 = bitcast %union.anon* %31 to i32*
  %37 = load i32, i32* %35, align 1
  store i32 %37, i32* %36, align 8
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  store i64 4, i64* %39, align 8, !tbaa !3, !alias.scope !13
  %40 = getelementptr inbounds i8, i8* %33, i64 4
  store i8 0, i8* %40, align 4, !tbaa !11
  %41 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #6
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %56, label %43

43:                                               ; preds = %28
  %44 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #6
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %43
  %47 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #6
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %50) #6
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %"class.std::allocator"* nonnull align 1 dereferenceable(1) %4)
          to label %51 unwind label %52

51:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %50) #6
  br label %136

52:                                               ; preds = %49
  %53 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %50) #6
  %54 = load i8*, i8** %38, align 8, !tbaa !12
  %55 = icmp eq i8* %54, %33
  br i1 %55, label %142, label %141

56:                                               ; preds = %46, %43, %28
  %57 = load i64, i64* %5, align 8, !tbaa !3
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %123, label %59

59:                                               ; preds = %56
  %60 = load i8*, i8** %16, align 8, !tbaa !12
  %61 = icmp ult i64 %57, 8
  br i1 %61, label %98, label %62

62:                                               ; preds = %59
  %63 = and i64 %57, -8
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %90, %64 ]
  %66 = phi <4 x i32> [ zeroinitializer, %62 ], [ %82, %64 ]
  %67 = phi <4 x i32> [ zeroinitializer, %62 ], [ %83, %64 ]
  %68 = phi <4 x i32> [ zeroinitializer, %62 ], [ %88, %64 ]
  %69 = phi <4 x i32> [ zeroinitializer, %62 ], [ %89, %64 ]
  %70 = getelementptr inbounds i8, i8* %60, i64 %65
  %71 = bitcast i8* %70 to <4 x i8>*
  %72 = load <4 x i8>, <4 x i8>* %71, align 1, !tbaa !11
  %73 = getelementptr inbounds i8, i8* %70, i64 4
  %74 = bitcast i8* %73 to <4 x i8>*
  %75 = load <4 x i8>, <4 x i8>* %74, align 1, !tbaa !11
  %76 = add <4 x i8> %72, <i8 -48, i8 -48, i8 -48, i8 -48>
  %77 = add <4 x i8> %75, <i8 -48, i8 -48, i8 -48, i8 -48>
  %78 = icmp ult <4 x i8> %76, <i8 10, i8 10, i8 10, i8 10>
  %79 = icmp ult <4 x i8> %77, <i8 10, i8 10, i8 10, i8 10>
  %80 = zext <4 x i1> %78 to <4 x i32>
  %81 = zext <4 x i1> %79 to <4 x i32>
  %82 = add <4 x i32> %66, %80
  %83 = add <4 x i32> %67, %81
  %84 = icmp eq <4 x i8> %72, <i8 46, i8 46, i8 46, i8 46>
  %85 = icmp eq <4 x i8> %75, <i8 46, i8 46, i8 46, i8 46>
  %86 = zext <4 x i1> %84 to <4 x i32>
  %87 = zext <4 x i1> %85 to <4 x i32>
  %88 = add <4 x i32> %68, %86
  %89 = add <4 x i32> %69, %87
  %90 = add nuw i64 %65, 8
  %91 = icmp eq i64 %90, %63
  br i1 %91, label %92, label %64, !llvm.loop !16

92:                                               ; preds = %64
  %93 = add <4 x i32> %89, %88
  %94 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %93)
  %95 = add <4 x i32> %83, %82
  %96 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %95)
  %97 = icmp eq i64 %57, %63
  br i1 %97, label %102, label %98

98:                                               ; preds = %59, %92
  %99 = phi i64 [ 0, %59 ], [ %63, %92 ]
  %100 = phi i32 [ 0, %59 ], [ %96, %92 ]
  %101 = phi i32 [ 0, %59 ], [ %94, %92 ]
  br label %108

102:                                              ; preds = %108, %92
  %103 = phi i32 [ %96, %92 ], [ %117, %108 ]
  %104 = phi i32 [ %94, %92 ], [ %120, %108 ]
  %105 = icmp ugt i32 %103, 3
  %106 = icmp ne i32 %104, 1
  %107 = select i1 %105, i1 true, i1 %106
  br i1 %107, label %123, label %130

108:                                              ; preds = %98, %108
  %109 = phi i64 [ %121, %108 ], [ %99, %98 ]
  %110 = phi i32 [ %117, %108 ], [ %100, %98 ]
  %111 = phi i32 [ %120, %108 ], [ %101, %98 ]
  %112 = getelementptr inbounds i8, i8* %60, i64 %109
  %113 = load i8, i8* %112, align 1, !tbaa !11
  %114 = add i8 %113, -48
  %115 = icmp ult i8 %114, 10
  %116 = zext i1 %115 to i32
  %117 = add nuw nsw i32 %110, %116
  %118 = icmp eq i8 %113, 46
  %119 = zext i1 %118 to i32
  %120 = add nuw nsw i32 %111, %119
  %121 = add nuw nsw i64 %109, 1
  %122 = icmp eq i64 %121, %57
  br i1 %122, label %102, label %108, !llvm.loop !19

123:                                              ; preds = %56, %102
  %124 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %125 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %124, %union.anon** %125, align 8, !tbaa !10
  %126 = bitcast %union.anon* %124 to i16*
  store i16 28494, i16* %126, align 8
  %127 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 2, i64* %127, align 8, !tbaa !3
  %128 = bitcast %union.anon* %124 to i8*
  %129 = getelementptr inbounds i8, i8* %128, i64 2
  store i8 0, i8* %129, align 2, !tbaa !11
  br label %136

130:                                              ; preds = %102
  %131 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %132 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %131, %union.anon** %132, align 8, !tbaa !10
  %133 = bitcast %union.anon* %131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(3) %133, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3, i1 false) #6
  %134 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 3, i64* %134, align 8, !tbaa !3
  %135 = getelementptr inbounds i8, i8* %133, i64 3
  store i8 0, i8* %135, align 1, !tbaa !11
  br label %136

136:                                              ; preds = %130, %123, %51
  %137 = load i8*, i8** %38, align 8, !tbaa !12
  %138 = icmp eq i8* %137, %33
  br i1 %138, label %140, label %139

139:                                              ; preds = %136
  call void @_ZdlPv(i8* %137) #6
  br label %140

140:                                              ; preds = %136, %139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #6
  br label %143

141:                                              ; preds = %52
  call void @_ZdlPv(i8* %54) #6
  br label %142

142:                                              ; preds = %52, %141
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #6
  resume { i8*, i32 } %53

143:                                              ; preds = %21, %140, %8
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, %"class.std::allocator"* nonnull align 1 dereferenceable(1)) unnamed_addr #0 align 2

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind
declare dso_local i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*) local_unnamed_addr #4

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #5

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #4 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nofree nosync nounwind readnone willreturn }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!5, !6, i64 0}
!11 = !{!7, !7, i64 0}
!12 = !{!4, !6, i64 0}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: argument 0"}
!15 = distinct !{!15, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!16 = distinct !{!16, !17, !18}
!17 = !{!"llvm.loop.mustprogress"}
!18 = !{!"llvm.loop.isvectorized", i32 1}
!19 = distinct !{!19, !17, !20, !18}
!20 = !{!"llvm.loop.unroll.runtime.disable"}
