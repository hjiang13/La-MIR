digraph "CFG for '_Z15file_name_checkNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function" {
	label="CFG for '_Z15file_name_checkNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function";

	Node0x56103e8118f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %4 = alloca %\"class.std::allocator\", align 1\l  %5 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %1, i64 0, i32 1\l  %6 = load i64, i64* %5, align 8, !tbaa !3\l  %7 = icmp ult i64 %6, 5\l  br i1 %7, label %8, label %15\l|{<s0>T|<s1>F}}"];
	Node0x56103e8118f0:s0 -> Node0x56103e813850;
	Node0x56103e8118f0:s1 -> Node0x56103e8138e0;
	Node0x56103e813850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%8:\l8:                                                \l  %9 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2\l  %10 = bitcast %\"class.std::__cxx11::basic_string\"* %0 to %union.anon**\l  store %union.anon* %9, %union.anon** %10, align 8, !tbaa !10\l  %11 = bitcast %union.anon* %9 to i16*\l  store i16 28494, i16* %11, align 8\l  %12 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  store i64 2, i64* %12, align 8, !tbaa !3\l  %13 = bitcast %union.anon* %9 to i8*\l  %14 = getelementptr inbounds i8, i8* %13, i64 2\l  store i8 0, i8* %14, align 2, !tbaa !11\l  br label %143\l}"];
	Node0x56103e813850 -> Node0x56103e812b40;
	Node0x56103e8138e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%15:\l15:                                               \l  %16 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %1, i64 0, i32 0, i32 0\l  %17 = load i8*, i8** %16, align 8, !tbaa !12\l  %18 = load i8, i8* %17, align 1, !tbaa !11\l  %19 = icmp slt i8 %18, 65\l  br i1 %19, label %21, label %20\l|{<s0>T|<s1>F}}"];
	Node0x56103e8138e0:s0 -> Node0x56103e8151f0;
	Node0x56103e8138e0:s1 -> Node0x56103e815280;
	Node0x56103e815280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%20:\l20:                                               \l  switch i8 %18, label %28 [\l    i8 127, label %21\l    i8 126, label %21\l    i8 125, label %21\l    i8 124, label %21\l    i8 123, label %21\l    i8 96, label %21\l    i8 95, label %21\l    i8 94, label %21\l    i8 93, label %21\l    i8 92, label %21\l    i8 91, label %21\l  ]\l|{<s0>def|<s1>127|<s2>126|<s3>125|<s4>124|<s5>123|<s6>96|<s7>95|<s8>94|<s9>93|<s10>92|<s11>91}}"];
	Node0x56103e815280:s0 -> Node0x56103e8153c0;
	Node0x56103e815280:s1 -> Node0x56103e8151f0;
	Node0x56103e815280:s2 -> Node0x56103e8151f0;
	Node0x56103e815280:s3 -> Node0x56103e8151f0;
	Node0x56103e815280:s4 -> Node0x56103e8151f0;
	Node0x56103e815280:s5 -> Node0x56103e8151f0;
	Node0x56103e815280:s6 -> Node0x56103e8151f0;
	Node0x56103e815280:s7 -> Node0x56103e8151f0;
	Node0x56103e815280:s8 -> Node0x56103e8151f0;
	Node0x56103e815280:s9 -> Node0x56103e8151f0;
	Node0x56103e815280:s10 -> Node0x56103e8151f0;
	Node0x56103e815280:s11 -> Node0x56103e8151f0;
	Node0x56103e8151f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%21:\l21:                                               \l  %22 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2\l  %23 = bitcast %\"class.std::__cxx11::basic_string\"* %0 to %union.anon**\l  store %union.anon* %22, %union.anon** %23, align 8, !tbaa !10\l  %24 = bitcast %union.anon* %22 to i16*\l  store i16 28494, i16* %24, align 8\l  %25 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  store i64 2, i64* %25, align 8, !tbaa !3\l  %26 = bitcast %union.anon* %22 to i8*\l  %27 = getelementptr inbounds i8, i8* %26, i64 2\l  store i8 0, i8* %27, align 2, !tbaa !11\l  br label %143\l}"];
	Node0x56103e8151f0 -> Node0x56103e812b40;
	Node0x56103e8153c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%28:\l28:                                               \l  %29 = bitcast %\"class.std::__cxx11::basic_string\"* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #6\l  %30 = add i64 %6, -4\l  %31 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 2\l  %32 = bitcast %\"class.std::__cxx11::basic_string\"* %3 to %union.anon**\l  store %union.anon* %31, %union.anon** %32, align 8, !tbaa !10, !alias.scope\l... !13\l  %33 = bitcast %union.anon* %31 to i8*\l  %34 = getelementptr inbounds i8, i8* %17, i64 %30\l  %35 = bitcast i8* %34 to i32*\l  %36 = bitcast %union.anon* %31 to i32*\l  %37 = load i32, i32* %35, align 1\l  store i32 %37, i32* %36, align 8\l  %38 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 0, i32 0\l  %39 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 1\l  store i64 4, i64* %39, align 8, !tbaa !3, !alias.scope !13\l  %40 = getelementptr inbounds i8, i8* %33, i64 4\l  store i8 0, i8* %40, align 4, !tbaa !11\l  %41 = call i32\l... @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%\"class.st\l...d::__cxx11::basic_string\"* nonnull align 8 dereferenceable(32) %3, i8*\l... getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #6\l  %42 = icmp eq i32 %41, 0\l  br i1 %42, label %56, label %43\l|{<s0>T|<s1>F}}"];
	Node0x56103e8153c0:s0 -> Node0x56103e817a90;
	Node0x56103e8153c0:s1 -> Node0x56103e817f50;
	Node0x56103e817f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%43:\l43:                                               \l  %44 = call i32\l... @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%\"class.st\l...d::__cxx11::basic_string\"* nonnull align 8 dereferenceable(32) %3, i8*\l... getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #6\l  %45 = icmp eq i32 %44, 0\l  br i1 %45, label %56, label %46\l|{<s0>T|<s1>F}}"];
	Node0x56103e817f50:s0 -> Node0x56103e817a90;
	Node0x56103e817f50:s1 -> Node0x56103e818090;
	Node0x56103e818090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%46:\l46:                                               \l  %47 = call i32\l... @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%\"class.st\l...d::__cxx11::basic_string\"* nonnull align 8 dereferenceable(32) %3, i8*\l... getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #6\l  %48 = icmp eq i32 %47, 0\l  br i1 %48, label %56, label %49\l|{<s0>T|<s1>F}}"];
	Node0x56103e818090:s0 -> Node0x56103e817a90;
	Node0x56103e818090:s1 -> Node0x56103e8183e0;
	Node0x56103e8183e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%49:\l49:                                               \l  %50 = getelementptr inbounds %\"class.std::allocator\",\l... %\"class.std::allocator\"* %4, i64 0, i32 0\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %50) #6\l  invoke void\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%\"class.std:\l...:__cxx11::basic_string\"* nonnull align 8 dereferenceable(32) %0, i8*\l... getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0),\l... %\"class.std::allocator\"* nonnull align 1 dereferenceable(1) %4)\l          to label %51 unwind label %52\l}"];
	Node0x56103e8183e0 -> Node0x56103e818ae0;
	Node0x56103e8183e0 -> Node0x56103e818b30;
	Node0x56103e818ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%51:\l51:                                               \l  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %50) #6\l  br label %136\l}"];
	Node0x56103e818ae0 -> Node0x56103e819070;
	Node0x56103e818b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%52:\l52:                                               \l  %53 = landingpad \{ i8*, i32 \}\l          cleanup\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %50) #6\l  %54 = load i8*, i8** %38, align 8, !tbaa !12\l  %55 = icmp eq i8* %54, %33\l  br i1 %55, label %142, label %141\l|{<s0>T|<s1>F}}"];
	Node0x56103e818b30:s0 -> Node0x56103e819c40;
	Node0x56103e818b30:s1 -> Node0x56103e819c90;
	Node0x56103e817a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%56:\l56:                                               \l  %57 = load i64, i64* %5, align 8, !tbaa !3\l  %58 = icmp eq i64 %57, 0\l  br i1 %58, label %123, label %59\l|{<s0>T|<s1>F}}"];
	Node0x56103e817a90:s0 -> Node0x56103e819ed0;
	Node0x56103e817a90:s1 -> Node0x56103e819f20;
	Node0x56103e819f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%59:\l59:                                               \l  %60 = load i8*, i8** %16, align 8, !tbaa !12\l  %61 = icmp ult i64 %57, 8\l  br i1 %61, label %98, label %62\l|{<s0>T|<s1>F}}"];
	Node0x56103e819f20:s0 -> Node0x56103e81a160;
	Node0x56103e819f20:s1 -> Node0x56103e81a1b0;
	Node0x56103e81a1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%62:\l62:                                               \l  %63 = and i64 %57, -8\l  br label %64\l}"];
	Node0x56103e81a1b0 -> Node0x56103e81a380;
	Node0x56103e81a380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%64:\l64:                                               \l  %65 = phi i64 [ 0, %62 ], [ %90, %64 ]\l  %66 = phi \<4 x i32\> [ zeroinitializer, %62 ], [ %82, %64 ]\l  %67 = phi \<4 x i32\> [ zeroinitializer, %62 ], [ %83, %64 ]\l  %68 = phi \<4 x i32\> [ zeroinitializer, %62 ], [ %88, %64 ]\l  %69 = phi \<4 x i32\> [ zeroinitializer, %62 ], [ %89, %64 ]\l  %70 = getelementptr inbounds i8, i8* %60, i64 %65\l  %71 = bitcast i8* %70 to \<4 x i8\>*\l  %72 = load \<4 x i8\>, \<4 x i8\>* %71, align 1, !tbaa !11\l  %73 = getelementptr inbounds i8, i8* %70, i64 4\l  %74 = bitcast i8* %73 to \<4 x i8\>*\l  %75 = load \<4 x i8\>, \<4 x i8\>* %74, align 1, !tbaa !11\l  %76 = add \<4 x i8\> %72, \<i8 -48, i8 -48, i8 -48, i8 -48\>\l  %77 = add \<4 x i8\> %75, \<i8 -48, i8 -48, i8 -48, i8 -48\>\l  %78 = icmp ult \<4 x i8\> %76, \<i8 10, i8 10, i8 10, i8 10\>\l  %79 = icmp ult \<4 x i8\> %77, \<i8 10, i8 10, i8 10, i8 10\>\l  %80 = zext \<4 x i1\> %78 to \<4 x i32\>\l  %81 = zext \<4 x i1\> %79 to \<4 x i32\>\l  %82 = add \<4 x i32\> %66, %80\l  %83 = add \<4 x i32\> %67, %81\l  %84 = icmp eq \<4 x i8\> %72, \<i8 46, i8 46, i8 46, i8 46\>\l  %85 = icmp eq \<4 x i8\> %75, \<i8 46, i8 46, i8 46, i8 46\>\l  %86 = zext \<4 x i1\> %84 to \<4 x i32\>\l  %87 = zext \<4 x i1\> %85 to \<4 x i32\>\l  %88 = add \<4 x i32\> %68, %86\l  %89 = add \<4 x i32\> %69, %87\l  %90 = add nuw i64 %65, 8\l  %91 = icmp eq i64 %90, %63\l  br i1 %91, label %92, label %64, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x56103e81a380:s0 -> Node0x56103e81c470;
	Node0x56103e81a380:s1 -> Node0x56103e81a380;
	Node0x56103e81c470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%92:\l92:                                               \l  %93 = add \<4 x i32\> %89, %88\l  %94 = call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %93)\l  %95 = add \<4 x i32\> %83, %82\l  %96 = call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %95)\l  %97 = icmp eq i64 %57, %63\l  br i1 %97, label %102, label %98\l|{<s0>T|<s1>F}}"];
	Node0x56103e81c470:s0 -> Node0x56103e81cab0;
	Node0x56103e81c470:s1 -> Node0x56103e81a160;
	Node0x56103e81a160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%98:\l98:                                               \l  %99 = phi i64 [ 0, %59 ], [ %63, %92 ]\l  %100 = phi i32 [ 0, %59 ], [ %96, %92 ]\l  %101 = phi i32 [ 0, %59 ], [ %94, %92 ]\l  br label %108\l}"];
	Node0x56103e81a160 -> Node0x56103e81cdc0;
	Node0x56103e81cab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%102:\l102:                                              \l  %103 = phi i32 [ %96, %92 ], [ %117, %108 ]\l  %104 = phi i32 [ %94, %92 ], [ %120, %108 ]\l  %105 = icmp ugt i32 %103, 3\l  %106 = icmp ne i32 %104, 1\l  %107 = select i1 %105, i1 true, i1 %106\l  br i1 %107, label %123, label %130\l|{<s0>T|<s1>F}}"];
	Node0x56103e81cab0:s0 -> Node0x56103e819ed0;
	Node0x56103e81cab0:s1 -> Node0x56103e81d210;
	Node0x56103e81cdc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%108:\l108:                                              \l  %109 = phi i64 [ %121, %108 ], [ %99, %98 ]\l  %110 = phi i32 [ %117, %108 ], [ %100, %98 ]\l  %111 = phi i32 [ %120, %108 ], [ %101, %98 ]\l  %112 = getelementptr inbounds i8, i8* %60, i64 %109\l  %113 = load i8, i8* %112, align 1, !tbaa !11\l  %114 = add i8 %113, -48\l  %115 = icmp ult i8 %114, 10\l  %116 = zext i1 %115 to i32\l  %117 = add nuw nsw i32 %110, %116\l  %118 = icmp eq i8 %113, 46\l  %119 = zext i1 %118 to i32\l  %120 = add nuw nsw i32 %111, %119\l  %121 = add nuw nsw i64 %109, 1\l  %122 = icmp eq i64 %121, %57\l  br i1 %122, label %102, label %108, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x56103e81cdc0:s0 -> Node0x56103e81cab0;
	Node0x56103e81cdc0:s1 -> Node0x56103e81cdc0;
	Node0x56103e819ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%123:\l123:                                              \l  %124 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2\l  %125 = bitcast %\"class.std::__cxx11::basic_string\"* %0 to %union.anon**\l  store %union.anon* %124, %union.anon** %125, align 8, !tbaa !10\l  %126 = bitcast %union.anon* %124 to i16*\l  store i16 28494, i16* %126, align 8\l  %127 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  store i64 2, i64* %127, align 8, !tbaa !3\l  %128 = bitcast %union.anon* %124 to i8*\l  %129 = getelementptr inbounds i8, i8* %128, i64 2\l  store i8 0, i8* %129, align 2, !tbaa !11\l  br label %136\l}"];
	Node0x56103e819ed0 -> Node0x56103e819070;
	Node0x56103e81d210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%130:\l130:                                              \l  %131 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2\l  %132 = bitcast %\"class.std::__cxx11::basic_string\"* %0 to %union.anon**\l  store %union.anon* %131, %union.anon** %132, align 8, !tbaa !10\l  %133 = bitcast %union.anon* %131 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(3) %133, i8* noundef nonnull align 1 dereferenceable(3)\l... getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3, i1\l... false) #6\l  %134 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  store i64 3, i64* %134, align 8, !tbaa !3\l  %135 = getelementptr inbounds i8, i8* %133, i64 3\l  store i8 0, i8* %135, align 1, !tbaa !11\l  br label %136\l}"];
	Node0x56103e81d210 -> Node0x56103e819070;
	Node0x56103e819070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%136:\l136:                                              \l  %137 = load i8*, i8** %38, align 8, !tbaa !12\l  %138 = icmp eq i8* %137, %33\l  br i1 %138, label %140, label %139\l|{<s0>T|<s1>F}}"];
	Node0x56103e819070:s0 -> Node0x56103e81f540;
	Node0x56103e819070:s1 -> Node0x56103e81f590;
	Node0x56103e81f590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%139:\l139:                                              \l  call void @_ZdlPv(i8* %137) #6\l  br label %140\l}"];
	Node0x56103e81f590 -> Node0x56103e81f540;
	Node0x56103e81f540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%140:\l140:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #6\l  br label %143\l}"];
	Node0x56103e81f540 -> Node0x56103e812b40;
	Node0x56103e819c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%141:\l141:                                              \l  call void @_ZdlPv(i8* %54) #6\l  br label %142\l}"];
	Node0x56103e819c90 -> Node0x56103e819c40;
	Node0x56103e819c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%142:\l142:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #6\l  resume \{ i8*, i32 \} %53\l}"];
	Node0x56103e812b40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%143:\l143:                                              \l  ret void\l}"];
}
