; ModuleID = '../../Human_xBenchmarks_164/CPP_79/CPP_79.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_79/CPP_79.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_ = comdat any

$_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z = comdat any

@.str.1 = private unnamed_addr constant [6 x i8] c"db0db\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"db\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z17decimal_to_binaryB5cxx11i(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %10 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  store %union.anon* %9, %union.anon** %10, align 8, !tbaa !3
  %11 = bitcast %union.anon* %9 to i8*
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  store i64 0, i64* %13, align 8, !tbaa !8
  store i8 0, i8* %11, align 8, !tbaa !11
  %14 = icmp eq i32 %1, 0
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  %17 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %19 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  %22 = bitcast %union.anon* %18 to i8*
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2, i32 0
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %27 = bitcast %union.anon* %26 to i8*
  %28 = icmp sgt i32 %1, 0
  br i1 %28, label %29, label %105

29:                                               ; preds = %15
  %30 = bitcast i64* %23 to <2 x i64>*
  %31 = bitcast i64* %13 to <2 x i64>*
  br label %38

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %34 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %33, %union.anon** %34, align 8, !tbaa !3
  %35 = bitcast %union.anon* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(5) %35, i8* noundef nonnull align 1 dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5, i1 false) #10
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 5, i64* %36, align 8, !tbaa !8
  %37 = getelementptr inbounds i8, i8* %35, i64 5
  store i8 0, i8* %37, align 1, !tbaa !11
  br label %205

38:                                               ; preds = %29, %93
  %39 = phi i32 [ %94, %93 ], [ %1, %29 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #10
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #10
  %40 = and i32 %39, 1
  invoke void (%"class.std::__cxx11::basic_string"*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i64, i8*, ...) @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %5, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* nonnull @vsnprintf, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 %40)
          to label %41 unwind label %96

41:                                               ; preds = %38
  call void @llvm.experimental.noalias.scope.decl(metadata !12)
  %42 = load i8*, i8** %12, align 8, !tbaa !15, !noalias !12
  %43 = load i64, i64* %13, align 8, !tbaa !8, !noalias !12
  %44 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i8* %42, i64 %43)
          to label %45 unwind label %98

45:                                               ; preds = %41
  store %union.anon* %18, %union.anon** %19, align 8, !tbaa !3, !alias.scope !12
  %46 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %44, i64 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8, !tbaa !15
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %44, i64 0, i32 2
  %49 = bitcast %union.anon* %48 to i8*
  %50 = icmp eq i8* %47, %49
  br i1 %50, label %51, label %52

51:                                               ; preds = %45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %22, i8* noundef nonnull align 8 dereferenceable(16) %47, i64 16, i1 false) #10
  br label %55

52:                                               ; preds = %45
  store i8* %47, i8** %20, align 8, !tbaa !15, !alias.scope !12
  %53 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %44, i64 0, i32 2, i32 0
  %54 = load i64, i64* %53, align 8, !tbaa !11
  store i64 %54, i64* %21, align 8, !tbaa !11, !alias.scope !12
  br label %55

55:                                               ; preds = %52, %51
  %56 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %44, i64 0, i32 1
  %57 = load i64, i64* %56, align 8, !tbaa !8
  store i64 %57, i64* %23, align 8, !tbaa !8, !alias.scope !12
  %58 = bitcast %"class.std::__cxx11::basic_string"* %44 to %union.anon**
  store %union.anon* %48, %union.anon** %58, align 8, !tbaa !15
  store i64 0, i64* %56, align 8, !tbaa !8
  store i8 0, i8* %49, align 8, !tbaa !11
  %59 = load i8*, i8** %20, align 8, !tbaa !15
  %60 = icmp eq i8* %59, %22
  br i1 %60, label %61, label %75

61:                                               ; preds = %55
  %62 = load i64, i64* %23, align 8, !tbaa !8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %70, label %64

64:                                               ; preds = %61
  %65 = load i8*, i8** %12, align 8, !tbaa !15
  %66 = icmp eq i64 %62, 1
  br i1 %66, label %67, label %69

67:                                               ; preds = %64
  %68 = load i8, i8* %22, align 8, !tbaa !11
  store i8 %68, i8* %65, align 1, !tbaa !11
  br label %70

69:                                               ; preds = %64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* nonnull align 8 %22, i64 %62, i1 false) #10
  br label %70

70:                                               ; preds = %69, %67, %61
  %71 = load i64, i64* %23, align 8, !tbaa !8
  store i64 %71, i64* %13, align 8, !tbaa !8
  %72 = load i8*, i8** %12, align 8, !tbaa !15
  %73 = getelementptr inbounds i8, i8* %72, i64 %71
  store i8 0, i8* %73, align 1, !tbaa !11
  %74 = load i8*, i8** %20, align 8, !tbaa !15
  br label %84

75:                                               ; preds = %55
  %76 = load i8*, i8** %12, align 8, !tbaa !15
  %77 = icmp eq i8* %76, %11
  %78 = load i64, i64* %24, align 8
  store i8* %59, i8** %12, align 8, !tbaa !15
  %79 = load <2 x i64>, <2 x i64>* %30, align 8, !tbaa !11
  store <2 x i64> %79, <2 x i64>* %31, align 8, !tbaa !11
  %80 = icmp eq i8* %76, null
  %81 = or i1 %77, %80
  br i1 %81, label %83, label %82

82:                                               ; preds = %75
  store i8* %76, i8** %20, align 8, !tbaa !15
  store i64 %78, i64* %21, align 8, !tbaa !11
  br label %84

83:                                               ; preds = %75
  store %union.anon* %18, %union.anon** %19, align 8, !tbaa !15
  br label %84

84:                                               ; preds = %70, %82, %83
  %85 = phi i8* [ %74, %70 ], [ %76, %82 ], [ %22, %83 ]
  store i64 0, i64* %23, align 8, !tbaa !8
  store i8 0, i8* %85, align 1, !tbaa !11
  %86 = load i8*, i8** %20, align 8, !tbaa !15
  %87 = icmp eq i8* %86, %22
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  call void @_ZdlPv(i8* %86) #10
  br label %89

89:                                               ; preds = %84, %88
  %90 = load i8*, i8** %25, align 8, !tbaa !15
  %91 = icmp eq i8* %90, %27
  br i1 %91, label %93, label %92

92:                                               ; preds = %89
  call void @_ZdlPv(i8* %90) #10
  br label %93

93:                                               ; preds = %89, %92
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #10
  %94 = lshr i32 %39, 1
  %95 = icmp ult i32 %39, 2
  br i1 %95, label %105, label %38, !llvm.loop !16

96:                                               ; preds = %38
  %97 = landingpad { i8*, i32 }
          cleanup
  br label %103

98:                                               ; preds = %41
  %99 = landingpad { i8*, i32 }
          cleanup
  %100 = load i8*, i8** %25, align 8, !tbaa !15
  %101 = icmp eq i8* %100, %27
  br i1 %101, label %103, label %102

102:                                              ; preds = %98
  call void @_ZdlPv(i8* %100) #10
  br label %103

103:                                              ; preds = %102, %98, %96
  %104 = phi { i8*, i32 } [ %97, %96 ], [ %99, %98 ], [ %99, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #10
  br label %206

105:                                              ; preds = %93, %15
  %106 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %106) #10
  %107 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %107) #10
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3)
          to label %108 unwind label %193

108:                                              ; preds = %105
  call void @llvm.experimental.noalias.scope.decl(metadata !18)
  %109 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  %110 = load i64, i64* %109, align 8, !tbaa !8, !noalias !18
  %111 = and i64 %110, -2
  %112 = icmp eq i64 %111, 4611686018427387902
  br i1 %112, label %113, label %115

113:                                              ; preds = %108
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)) #11
          to label %114 unwind label %195

114:                                              ; preds = %113
  unreachable

115:                                              ; preds = %108
  %116 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2)
          to label %117 unwind label %195

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %119 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  store %union.anon* %118, %union.anon** %119, align 8, !tbaa !3, !alias.scope !18
  %120 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %116, i64 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8, !tbaa !15
  %122 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %116, i64 0, i32 2
  %123 = bitcast %union.anon* %122 to i8*
  %124 = icmp eq i8* %121, %123
  br i1 %124, label %125, label %127

125:                                              ; preds = %117
  %126 = bitcast %union.anon* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %126, i8* noundef nonnull align 8 dereferenceable(16) %121, i64 16, i1 false) #10
  br label %132

127:                                              ; preds = %117
  %128 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  store i8* %121, i8** %128, align 8, !tbaa !15, !alias.scope !18
  %129 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %116, i64 0, i32 2, i32 0
  %130 = load i64, i64* %129, align 8, !tbaa !11
  %131 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  store i64 %130, i64* %131, align 8, !tbaa !11, !alias.scope !18
  br label %132

132:                                              ; preds = %127, %125
  %133 = bitcast %union.anon* %118 to i8*
  %134 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %116, i64 0, i32 1
  %135 = load i64, i64* %134, align 8, !tbaa !8
  %136 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  store i64 %135, i64* %136, align 8, !tbaa !8, !alias.scope !18
  %137 = bitcast %"class.std::__cxx11::basic_string"* %116 to %union.anon**
  store %union.anon* %122, %union.anon** %137, align 8, !tbaa !15
  store i64 0, i64* %134, align 8, !tbaa !8
  store i8 0, i8* %123, align 8, !tbaa !11
  %138 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8, !tbaa !15
  %140 = icmp eq i8* %139, %133
  br i1 %140, label %141, label %155

141:                                              ; preds = %132
  %142 = load i64, i64* %136, align 8, !tbaa !8
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %150, label %144

144:                                              ; preds = %141
  %145 = load i8*, i8** %12, align 8, !tbaa !15
  %146 = icmp eq i64 %142, 1
  br i1 %146, label %147, label %149

147:                                              ; preds = %144
  %148 = load i8, i8* %133, align 8, !tbaa !11
  store i8 %148, i8* %145, align 1, !tbaa !11
  br label %150

149:                                              ; preds = %144
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %145, i8* nonnull align 8 %133, i64 %142, i1 false) #10
  br label %150

150:                                              ; preds = %149, %147, %141
  %151 = load i64, i64* %136, align 8, !tbaa !8
  store i64 %151, i64* %13, align 8, !tbaa !8
  %152 = load i8*, i8** %12, align 8, !tbaa !15
  %153 = getelementptr inbounds i8, i8* %152, i64 %151
  store i8 0, i8* %153, align 1, !tbaa !11
  %154 = load i8*, i8** %138, align 8, !tbaa !15
  br label %167

155:                                              ; preds = %132
  %156 = load i8*, i8** %12, align 8, !tbaa !15
  %157 = icmp eq i8* %156, %11
  %158 = load i64, i64* %24, align 8
  store i8* %139, i8** %12, align 8, !tbaa !15
  %159 = bitcast i64* %136 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 8, !tbaa !11
  %161 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %161, align 8, !tbaa !11
  %162 = icmp eq i8* %156, null
  %163 = or i1 %157, %162
  br i1 %163, label %166, label %164

164:                                              ; preds = %155
  store i8* %156, i8** %138, align 8, !tbaa !15
  %165 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  store i64 %158, i64* %165, align 8, !tbaa !11
  br label %167

166:                                              ; preds = %155
  store %union.anon* %118, %union.anon** %119, align 8, !tbaa !15
  br label %167

167:                                              ; preds = %150, %164, %166
  %168 = phi i8* [ %154, %150 ], [ %156, %164 ], [ %133, %166 ]
  store i64 0, i64* %136, align 8, !tbaa !8
  store i8 0, i8* %168, align 1, !tbaa !11
  %169 = load i8*, i8** %138, align 8, !tbaa !15
  %170 = icmp eq i8* %169, %133
  br i1 %170, label %172, label %171

171:                                              ; preds = %167
  call void @_ZdlPv(i8* %169) #10
  br label %172

172:                                              ; preds = %167, %171
  %173 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8, !tbaa !15
  %175 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %176 = bitcast %union.anon* %175 to i8*
  %177 = icmp eq i8* %174, %176
  br i1 %177, label %179, label %178

178:                                              ; preds = %172
  call void @_ZdlPv(i8* %174) #10
  br label %179

179:                                              ; preds = %172, %178
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %107) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %106) #10
  %180 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %181 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %180, %union.anon** %181, align 8, !tbaa !3
  %182 = load i8*, i8** %12, align 8, !tbaa !15
  %183 = icmp eq i8* %182, %11
  br i1 %183, label %184, label %186

184:                                              ; preds = %179
  %185 = bitcast %union.anon* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %185, i8* noundef nonnull align 8 dereferenceable(16) %11, i64 16, i1 false) #10
  br label %190

186:                                              ; preds = %179
  %187 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %182, i8** %187, align 8, !tbaa !15
  %188 = load i64, i64* %24, align 8, !tbaa !11
  %189 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %188, i64* %189, align 8, !tbaa !11
  br label %190

190:                                              ; preds = %184, %186
  %191 = load i64, i64* %13, align 8, !tbaa !8
  %192 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %191, i64* %192, align 8, !tbaa !8
  br label %205

193:                                              ; preds = %105
  %194 = landingpad { i8*, i32 }
          cleanup
  br label %203

195:                                              ; preds = %115, %113
  %196 = landingpad { i8*, i32 }
          cleanup
  %197 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8, !tbaa !15
  %199 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %200 = bitcast %union.anon* %199 to i8*
  %201 = icmp eq i8* %198, %200
  br i1 %201, label %203, label %202

202:                                              ; preds = %195
  call void @_ZdlPv(i8* %198) #10
  br label %203

203:                                              ; preds = %202, %195, %193
  %204 = phi { i8*, i32 } [ %194, %193 ], [ %196, %195 ], [ %196, %202 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %107) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %106) #10
  br label %206

205:                                              ; preds = %32, %190
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #10
  ret void

206:                                              ; preds = %203, %103
  %207 = phi { i8*, i32 } [ %104, %103 ], [ %204, %203 ]
  %208 = load i8*, i8** %12, align 8, !tbaa !15
  %209 = icmp eq i8* %208, %11
  br i1 %209, label %211, label %210

210:                                              ; preds = %206
  call void @_ZdlPv(i8* %208) #10
  br label %211

211:                                              ; preds = %210, %206
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #10
  resume { i8*, i32 } %207
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i8* %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = tail call i64 @strlen(i8* noundef nonnull dereferenceable(1) %1) #10
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !3
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %7, align 8, !tbaa !8
  %8 = bitcast %union.anon* %5 to i8*
  store i8 0, i8* %8, align 8, !tbaa !11
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !8
  %11 = add i64 %10, %4
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64 %11)
          to label %12 unwind label %25

12:                                               ; preds = %3
  %13 = load i64, i64* %7, align 8, !tbaa !8
  %14 = sub i64 4611686018427387903, %13
  %15 = icmp ult i64 %14, %4
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)) #11
          to label %17 unwind label %25

17:                                               ; preds = %16
  unreachable

18:                                               ; preds = %12
  %19 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %1, i64 %4)
          to label %20 unwind label %25

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !tbaa !15
  %23 = load i64, i64* %9, align 8, !tbaa !8
  %24 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %22, i64 %23)
          to label %32 unwind label %25

25:                                               ; preds = %20, %18, %16, %3
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !tbaa !15
  %29 = icmp eq i8* %28, %8
  br i1 %29, label %31, label %30

30:                                               ; preds = %25
  tail call void @_ZdlPv(i8* %28) #10
  br label %31

31:                                               ; preds = %25, %30
  resume { i8*, i32 } %26

32:                                               ; preds = %20
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* %1, i64 %2, i8* %3, ...) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca i64, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = alloca i8, i64 %2, align 16
  %8 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %8)
  %10 = call i32 %1(i8* nonnull %7, i64 %2, i8* %3, %struct.__va_list_tag* nonnull %9)
  call void @llvm.va_end(i8* nonnull %8)
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3
  %14 = bitcast %union.anon* %12 to i8*
  %15 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  store i64 %11, i64* %5, align 8, !tbaa !21
  %16 = icmp ugt i32 %10, 15
  br i1 %16, label %17, label %22

17:                                               ; preds = %4
  %18 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8, !tbaa !15
  %20 = load i64, i64* %5, align 8, !tbaa !21
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %20, i64* %21, align 8, !tbaa !11
  br label %22

22:                                               ; preds = %17, %4
  %23 = phi i8* [ %18, %17 ], [ %14, %4 ]
  switch i64 %11, label %26 [
    i64 1, label %24
    i64 0, label %27
  ]

24:                                               ; preds = %22
  %25 = load i8, i8* %7, align 16, !tbaa !11
  store i8 %25, i8* %23, align 1, !tbaa !11
  br label %27

26:                                               ; preds = %22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* nonnull align 16 %7, i64 %11, i1 false) #10
  br label %27

27:                                               ; preds = %26, %24, %22
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %29 = load i64, i64* %5, align 8, !tbaa !21
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %29, i64* %30, align 8, !tbaa !8
  %31 = load i8*, i8** %28, align 8, !tbaa !15
  %32 = getelementptr inbounds i8, i8* %31, i64 %29
  store i8 0, i8* %32, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @vsnprintf(i8* nocapture noundef, i64 noundef, i8* nocapture noundef readonly, %struct.__va_list_tag* noundef) #2

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #3

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #3

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #4

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #8

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #9

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nofree nosync nounwind willreturn }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #6 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #10 = { nounwind }
attributes #11 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_: argument 0"}
!14 = distinct !{!14, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_"}
!15 = !{!9, !5, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.mustprogress"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_: argument 0"}
!20 = distinct !{!20, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"}
!21 = !{!10, !10, i64 0}
