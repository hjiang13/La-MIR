; ModuleID = '../../Human_xBenchmarks_164/CPP_84/CPP_84.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_84/CPP_84.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z = comdat any

@.str.1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z5solveB5cxx11i(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %9 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  store %union.anon* %8, %union.anon** %9, align 8, !tbaa !3
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  store i64 0, i64* %10, align 8, !tbaa !8
  %11 = bitcast %union.anon* %8 to i8*
  store i8 0, i8* %11, align 8, !tbaa !11
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3
  %14 = bitcast %union.anon* %12 to i8*
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %16, align 8, !tbaa !8
  store i8 0, i8* %14, align 8, !tbaa !11
  %17 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #9
  invoke void (%"class.std::__cxx11::basic_string"*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i64, i8*, ...) @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %4, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* nonnull @vsnprintf, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32 %1)
          to label %18 unwind label %157

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8, !tbaa !12
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %23 = bitcast %union.anon* %22 to i8*
  %24 = icmp eq i8* %21, %23
  br i1 %24, label %25, label %40

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %27 = load i64, i64* %26, align 8, !tbaa !8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = load i8*, i8** %19, align 8, !tbaa !12
  %31 = icmp eq i64 %27, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = load i8, i8* %21, align 1, !tbaa !11
  store i8 %33, i8* %30, align 1, !tbaa !11
  br label %35

34:                                               ; preds = %29
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %21, i64 %27, i1 false) #9
  br label %35

35:                                               ; preds = %34, %32, %25
  %36 = load i64, i64* %26, align 8, !tbaa !8
  store i64 %36, i64* %10, align 8, !tbaa !8
  %37 = load i8*, i8** %19, align 8, !tbaa !12
  %38 = getelementptr inbounds i8, i8* %37, i64 %36
  store i8 0, i8* %38, align 1, !tbaa !11
  %39 = load i8*, i8** %20, align 8, !tbaa !12
  br label %55

40:                                               ; preds = %18
  %41 = load i8*, i8** %19, align 8, !tbaa !12
  %42 = icmp eq i8* %41, %11
  %43 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2, i32 0
  %44 = load i64, i64* %43, align 8
  store i8* %21, i8** %19, align 8, !tbaa !12
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  %46 = bitcast i64* %45 to <2 x i64>*
  %47 = load <2 x i64>, <2 x i64>* %46, align 8, !tbaa !11
  %48 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8, !tbaa !11
  %49 = icmp eq i8* %41, null
  %50 = or i1 %42, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %40
  store i8* %41, i8** %20, align 8, !tbaa !12
  %52 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  store i64 %44, i64* %52, align 8, !tbaa !11
  br label %55

53:                                               ; preds = %40
  %54 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  store %union.anon* %22, %union.anon** %54, align 8, !tbaa !12
  br label %55

55:                                               ; preds = %35, %51, %53
  %56 = phi i8* [ %39, %35 ], [ %41, %51 ], [ %23, %53 ]
  %57 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  store i64 0, i64* %57, align 8, !tbaa !8
  store i8 0, i8* %56, align 1, !tbaa !11
  %58 = load i8*, i8** %20, align 8, !tbaa !12
  %59 = icmp eq i8* %58, %23
  br i1 %59, label %61, label %60

60:                                               ; preds = %55
  call void @_ZdlPv(i8* %58) #9
  br label %61

61:                                               ; preds = %55, %60
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #9
  %62 = load i64, i64* %10, align 8, !tbaa !8
  %63 = load i8*, i8** %19, align 8
  %64 = icmp eq i64 %62, 0
  br i1 %64, label %139, label %65

65:                                               ; preds = %61
  %66 = icmp ult i64 %62, 8
  br i1 %66, label %136, label %67

67:                                               ; preds = %65
  %68 = and i64 %62, -8
  %69 = add i64 %68, -8
  %70 = lshr exact i64 %69, 3
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 1
  %73 = icmp eq i64 %69, 0
  br i1 %73, label %112, label %74

74:                                               ; preds = %67
  %75 = and i64 %71, 4611686018427387902
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i64 [ 0, %74 ], [ %106, %76 ]
  %78 = phi <4 x i32> [ zeroinitializer, %74 ], [ %104, %76 ]
  %79 = phi <4 x i32> [ zeroinitializer, %74 ], [ %105, %76 ]
  %80 = phi i64 [ %75, %74 ], [ %107, %76 ]
  %81 = getelementptr inbounds i8, i8* %63, i64 %77
  %82 = bitcast i8* %81 to <4 x i8>*
  %83 = load <4 x i8>, <4 x i8>* %82, align 1, !tbaa !11
  %84 = getelementptr inbounds i8, i8* %81, i64 4
  %85 = bitcast i8* %84 to <4 x i8>*
  %86 = load <4 x i8>, <4 x i8>* %85, align 1, !tbaa !11
  %87 = sext <4 x i8> %83 to <4 x i32>
  %88 = sext <4 x i8> %86 to <4 x i32>
  %89 = add <4 x i32> %78, <i32 -48, i32 -48, i32 -48, i32 -48>
  %90 = add <4 x i32> %79, <i32 -48, i32 -48, i32 -48, i32 -48>
  %91 = add <4 x i32> %89, %87
  %92 = add <4 x i32> %90, %88
  %93 = or i64 %77, 8
  %94 = getelementptr inbounds i8, i8* %63, i64 %93
  %95 = bitcast i8* %94 to <4 x i8>*
  %96 = load <4 x i8>, <4 x i8>* %95, align 1, !tbaa !11
  %97 = getelementptr inbounds i8, i8* %94, i64 4
  %98 = bitcast i8* %97 to <4 x i8>*
  %99 = load <4 x i8>, <4 x i8>* %98, align 1, !tbaa !11
  %100 = sext <4 x i8> %96 to <4 x i32>
  %101 = sext <4 x i8> %99 to <4 x i32>
  %102 = add <4 x i32> %91, <i32 -48, i32 -48, i32 -48, i32 -48>
  %103 = add <4 x i32> %92, <i32 -48, i32 -48, i32 -48, i32 -48>
  %104 = add <4 x i32> %102, %100
  %105 = add <4 x i32> %103, %101
  %106 = add nuw i64 %77, 16
  %107 = add i64 %80, -2
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %76, !llvm.loop !13

109:                                              ; preds = %76
  %110 = add <4 x i32> %104, <i32 -48, i32 -48, i32 -48, i32 -48>
  %111 = add <4 x i32> %105, <i32 -48, i32 -48, i32 -48, i32 -48>
  br label %112

112:                                              ; preds = %109, %67
  %113 = phi <4 x i32> [ undef, %67 ], [ %104, %109 ]
  %114 = phi <4 x i32> [ undef, %67 ], [ %105, %109 ]
  %115 = phi i64 [ 0, %67 ], [ %106, %109 ]
  %116 = phi <4 x i32> [ <i32 -48, i32 -48, i32 -48, i32 -48>, %67 ], [ %110, %109 ]
  %117 = phi <4 x i32> [ <i32 -48, i32 -48, i32 -48, i32 -48>, %67 ], [ %111, %109 ]
  %118 = icmp eq i64 %72, 0
  br i1 %118, label %130, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds i8, i8* %63, i64 %115
  %121 = getelementptr inbounds i8, i8* %120, i64 4
  %122 = bitcast i8* %121 to <4 x i8>*
  %123 = load <4 x i8>, <4 x i8>* %122, align 1, !tbaa !11
  %124 = sext <4 x i8> %123 to <4 x i32>
  %125 = add <4 x i32> %117, %124
  %126 = bitcast i8* %120 to <4 x i8>*
  %127 = load <4 x i8>, <4 x i8>* %126, align 1, !tbaa !11
  %128 = sext <4 x i8> %127 to <4 x i32>
  %129 = add <4 x i32> %116, %128
  br label %130

130:                                              ; preds = %112, %119
  %131 = phi <4 x i32> [ %113, %112 ], [ %129, %119 ]
  %132 = phi <4 x i32> [ %114, %112 ], [ %125, %119 ]
  %133 = add <4 x i32> %132, %131
  %134 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %133)
  %135 = icmp eq i64 %62, %68
  br i1 %135, label %139, label %136

136:                                              ; preds = %65, %130
  %137 = phi i64 [ 0, %65 ], [ %68, %130 ]
  %138 = phi i32 [ 0, %65 ], [ %134, %130 ]
  br label %159

139:                                              ; preds = %159, %130, %61
  %140 = phi i32 [ 0, %61 ], [ %134, %130 ], [ %166, %159 ]
  %141 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %142 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  %143 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %144 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  %145 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %146 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %147 = bitcast %union.anon* %143 to i8*
  %148 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  %149 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %150 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %151 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %152 = bitcast %union.anon* %151 to i8*
  %153 = icmp sgt i32 %140, 0
  br i1 %153, label %154, label %238

154:                                              ; preds = %139
  %155 = bitcast i64* %148 to <2 x i64>*
  %156 = bitcast i64* %16 to <2 x i64>*
  br label %169

157:                                              ; preds = %2
  %158 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #9
  br label %243

159:                                              ; preds = %136, %159
  %160 = phi i64 [ %167, %159 ], [ %137, %136 ]
  %161 = phi i32 [ %166, %159 ], [ %138, %136 ]
  %162 = getelementptr inbounds i8, i8* %63, i64 %160
  %163 = load i8, i8* %162, align 1, !tbaa !11
  %164 = sext i8 %163 to i32
  %165 = add i32 %161, -48
  %166 = add i32 %165, %164
  %167 = add nuw nsw i64 %160, 1
  %168 = icmp eq i64 %167, %62
  br i1 %168, label %139, label %159, !llvm.loop !16

169:                                              ; preds = %154, %224
  %170 = phi i32 [ %225, %224 ], [ %140, %154 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %141) #9
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %142) #9
  %171 = and i32 %170, 1
  invoke void (%"class.std::__cxx11::basic_string"*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i64, i8*, ...) @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %6, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* nonnull @vsnprintf, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32 %171)
          to label %172 unwind label %227

172:                                              ; preds = %169
  call void @llvm.experimental.noalias.scope.decl(metadata !18)
  %173 = load i8*, i8** %15, align 8, !tbaa !12, !noalias !18
  %174 = load i64, i64* %16, align 8, !tbaa !8, !noalias !18
  %175 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i8* %173, i64 %174)
          to label %176 unwind label %229

176:                                              ; preds = %172
  store %union.anon* %143, %union.anon** %144, align 8, !tbaa !3, !alias.scope !18
  %177 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %175, i64 0, i32 0, i32 0
  %178 = load i8*, i8** %177, align 8, !tbaa !12
  %179 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %175, i64 0, i32 2
  %180 = bitcast %union.anon* %179 to i8*
  %181 = icmp eq i8* %178, %180
  br i1 %181, label %182, label %183

182:                                              ; preds = %176
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %147, i8* noundef nonnull align 8 dereferenceable(16) %178, i64 16, i1 false) #9
  br label %186

183:                                              ; preds = %176
  store i8* %178, i8** %145, align 8, !tbaa !12, !alias.scope !18
  %184 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %175, i64 0, i32 2, i32 0
  %185 = load i64, i64* %184, align 8, !tbaa !11
  store i64 %185, i64* %146, align 8, !tbaa !11, !alias.scope !18
  br label %186

186:                                              ; preds = %183, %182
  %187 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %175, i64 0, i32 1
  %188 = load i64, i64* %187, align 8, !tbaa !8
  store i64 %188, i64* %148, align 8, !tbaa !8, !alias.scope !18
  %189 = bitcast %"class.std::__cxx11::basic_string"* %175 to %union.anon**
  store %union.anon* %179, %union.anon** %189, align 8, !tbaa !12
  store i64 0, i64* %187, align 8, !tbaa !8
  store i8 0, i8* %180, align 8, !tbaa !11
  %190 = load i8*, i8** %145, align 8, !tbaa !12
  %191 = icmp eq i8* %190, %147
  br i1 %191, label %192, label %206

192:                                              ; preds = %186
  %193 = load i64, i64* %148, align 8, !tbaa !8
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %201, label %195

195:                                              ; preds = %192
  %196 = load i8*, i8** %15, align 8, !tbaa !12
  %197 = icmp eq i64 %193, 1
  br i1 %197, label %198, label %200

198:                                              ; preds = %195
  %199 = load i8, i8* %147, align 8, !tbaa !11
  store i8 %199, i8* %196, align 1, !tbaa !11
  br label %201

200:                                              ; preds = %195
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %196, i8* nonnull align 8 %147, i64 %193, i1 false) #9
  br label %201

201:                                              ; preds = %200, %198, %192
  %202 = load i64, i64* %148, align 8, !tbaa !8
  store i64 %202, i64* %16, align 8, !tbaa !8
  %203 = load i8*, i8** %15, align 8, !tbaa !12
  %204 = getelementptr inbounds i8, i8* %203, i64 %202
  store i8 0, i8* %204, align 1, !tbaa !11
  %205 = load i8*, i8** %145, align 8, !tbaa !12
  br label %215

206:                                              ; preds = %186
  %207 = load i8*, i8** %15, align 8, !tbaa !12
  %208 = icmp eq i8* %207, %14
  %209 = load i64, i64* %149, align 8
  store i8* %190, i8** %15, align 8, !tbaa !12
  %210 = load <2 x i64>, <2 x i64>* %155, align 8, !tbaa !11
  store <2 x i64> %210, <2 x i64>* %156, align 8, !tbaa !11
  %211 = icmp eq i8* %207, null
  %212 = or i1 %208, %211
  br i1 %212, label %214, label %213

213:                                              ; preds = %206
  store i8* %207, i8** %145, align 8, !tbaa !12
  store i64 %209, i64* %146, align 8, !tbaa !11
  br label %215

214:                                              ; preds = %206
  store %union.anon* %143, %union.anon** %144, align 8, !tbaa !12
  br label %215

215:                                              ; preds = %201, %213, %214
  %216 = phi i8* [ %205, %201 ], [ %207, %213 ], [ %147, %214 ]
  store i64 0, i64* %148, align 8, !tbaa !8
  store i8 0, i8* %216, align 1, !tbaa !11
  %217 = load i8*, i8** %145, align 8, !tbaa !12
  %218 = icmp eq i8* %217, %147
  br i1 %218, label %220, label %219

219:                                              ; preds = %215
  call void @_ZdlPv(i8* %217) #9
  br label %220

220:                                              ; preds = %215, %219
  %221 = load i8*, i8** %150, align 8, !tbaa !12
  %222 = icmp eq i8* %221, %152
  br i1 %222, label %224, label %223

223:                                              ; preds = %220
  call void @_ZdlPv(i8* %221) #9
  br label %224

224:                                              ; preds = %220, %223
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %142) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %141) #9
  %225 = lshr i32 %170, 1
  %226 = icmp ult i32 %170, 2
  br i1 %226, label %236, label %169, !llvm.loop !21

227:                                              ; preds = %169
  %228 = landingpad { i8*, i32 }
          cleanup
  br label %234

229:                                              ; preds = %172
  %230 = landingpad { i8*, i32 }
          cleanup
  %231 = load i8*, i8** %150, align 8, !tbaa !12
  %232 = icmp eq i8* %231, %152
  br i1 %232, label %234, label %233

233:                                              ; preds = %229
  call void @_ZdlPv(i8* %231) #9
  br label %234

234:                                              ; preds = %233, %229, %227
  %235 = phi { i8*, i32 } [ %228, %227 ], [ %230, %229 ], [ %230, %233 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %142) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %141) #9
  br label %243

236:                                              ; preds = %224
  %237 = load i8*, i8** %19, align 8, !tbaa !12
  br label %238

238:                                              ; preds = %236, %139
  %239 = phi i8* [ %237, %236 ], [ %63, %139 ]
  %240 = icmp eq i8* %239, %11
  br i1 %240, label %242, label %241

241:                                              ; preds = %238
  call void @_ZdlPv(i8* %239) #9
  br label %242

242:                                              ; preds = %238, %241
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void

243:                                              ; preds = %234, %157
  %244 = phi { i8*, i32 } [ %235, %234 ], [ %158, %157 ]
  %245 = load i8*, i8** %15, align 8, !tbaa !12
  %246 = icmp eq i8* %245, %14
  br i1 %246, label %248, label %247

247:                                              ; preds = %243
  call void @_ZdlPv(i8* %245) #9
  br label %248

248:                                              ; preds = %247, %243
  %249 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %250 = load i8*, i8** %249, align 8, !tbaa !12
  %251 = icmp eq i8* %250, %11
  br i1 %251, label %253, label %252

252:                                              ; preds = %248
  call void @_ZdlPv(i8* %250) #9
  br label %253

253:                                              ; preds = %248, %252
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  resume { i8*, i32 } %244
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* %1, i64 %2, i8* %3, ...) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca i64, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = alloca i8, i64 %2, align 16
  %8 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %8)
  %10 = call i32 %1(i8* nonnull %7, i64 %2, i8* %3, %struct.__va_list_tag* nonnull %9)
  call void @llvm.va_end(i8* nonnull %8)
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3
  %14 = bitcast %union.anon* %12 to i8*
  %15 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  store i64 %11, i64* %5, align 8, !tbaa !22
  %16 = icmp ugt i32 %10, 15
  br i1 %16, label %17, label %22

17:                                               ; preds = %4
  %18 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8, !tbaa !12
  %20 = load i64, i64* %5, align 8, !tbaa !22
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %20, i64* %21, align 8, !tbaa !11
  br label %22

22:                                               ; preds = %17, %4
  %23 = phi i8* [ %18, %17 ], [ %14, %4 ]
  switch i64 %11, label %26 [
    i64 1, label %24
    i64 0, label %27
  ]

24:                                               ; preds = %22
  %25 = load i8, i8* %7, align 16, !tbaa !11
  store i8 %25, i8* %23, align 1, !tbaa !11
  br label %27

26:                                               ; preds = %22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* nonnull align 16 %7, i64 %11, i1 false) #9
  br label %27

27:                                               ; preds = %26, %24, %22
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %29 = load i64, i64* %5, align 8, !tbaa !22
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %29, i64* %30, align 8, !tbaa !8
  %31 = load i8*, i8** %28, align 8, !tbaa !12
  %32 = getelementptr inbounds i8, i8* %31, i64 %29
  store i8 0, i8* %32, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @vsnprintf(i8* nocapture noundef, i64 noundef, i8* nocapture noundef readonly, %struct.__va_list_tag* noundef) #2

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #3

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #3

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #6

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #4

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #7

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #8

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nofree nosync nounwind willreturn }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #6 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #8 = { nofree nosync nounwind readnone willreturn }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = distinct !{!13, !14, !15}
!14 = !{!"llvm.loop.mustprogress"}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !14, !17, !15}
!17 = !{!"llvm.loop.unroll.runtime.disable"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_: argument 0"}
!20 = distinct !{!20, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_"}
!21 = distinct !{!21, !14}
!22 = !{!10, !10, i64 0}
