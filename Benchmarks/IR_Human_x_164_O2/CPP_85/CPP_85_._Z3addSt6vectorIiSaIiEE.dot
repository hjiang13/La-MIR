digraph "CFG for '_Z3addSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z3addSt6vectorIiSaIiEE' function";

	Node0x5566d8f3ea20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%1:\l  %2 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %3 = load i32*, i32** %2, align 8, !tbaa !3\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = load i32*, i32** %4, align 8, !tbaa !8\l  %6 = ptrtoint i32* %3 to i64\l  %7 = ptrtoint i32* %5 to i64\l  %8 = sub i64 %6, %7\l  %9 = ashr exact i64 %8, 2\l  %10 = icmp ugt i64 %9, 1\l  br i1 %10, label %11, label %75\l|{<s0>T|<s1>F}}"];
	Node0x5566d8f3ea20:s0 -> Node0x5566d8f3fed0;
	Node0x5566d8f3ea20:s1 -> Node0x5566d8f40420;
	Node0x5566d8f3fed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%11:\l11:                                               \l  %12 = add nsw i64 %9, -2\l  %13 = lshr i64 %12, 1\l  %14 = add nuw i64 %13, 1\l  %15 = icmp ult i64 %12, 14\l  br i1 %15, label %71, label %16\l|{<s0>T|<s1>F}}"];
	Node0x5566d8f3fed0:s0 -> Node0x5566d8f40800;
	Node0x5566d8f3fed0:s1 -> Node0x5566d8f40850;
	Node0x5566d8f40850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%16:\l16:                                               \l  %17 = and i64 %14, -8\l  %18 = shl i64 %17, 1\l  %19 = or i64 %18, 1\l  br label %20\l}"];
	Node0x5566d8f40850 -> Node0x5566d8f40ae0;
	Node0x5566d8f40ae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%20:\l20:                                               \l  %21 = phi i64 [ 0, %16 ], [ %65, %20 ]\l  %22 = phi \<4 x i32\> [ zeroinitializer, %16 ], [ %63, %20 ]\l  %23 = phi \<4 x i32\> [ zeroinitializer, %16 ], [ %64, %20 ]\l  %24 = shl i64 %21, 1\l  %25 = or i64 %24, 1\l  %26 = or i64 %24, 3\l  %27 = or i64 %24, 5\l  %28 = or i64 %24, 7\l  %29 = or i64 %24, 9\l  %30 = or i64 %24, 11\l  %31 = or i64 %24, 13\l  %32 = or i64 %24, 15\l  %33 = getelementptr inbounds i32, i32* %5, i64 %25\l  %34 = getelementptr inbounds i32, i32* %5, i64 %26\l  %35 = getelementptr inbounds i32, i32* %5, i64 %27\l  %36 = getelementptr inbounds i32, i32* %5, i64 %28\l  %37 = getelementptr inbounds i32, i32* %5, i64 %29\l  %38 = getelementptr inbounds i32, i32* %5, i64 %30\l  %39 = getelementptr inbounds i32, i32* %5, i64 %31\l  %40 = getelementptr inbounds i32, i32* %5, i64 %32\l  %41 = load i32, i32* %33, align 4, !tbaa !9\l  %42 = load i32, i32* %34, align 4, !tbaa !9\l  %43 = load i32, i32* %35, align 4, !tbaa !9\l  %44 = load i32, i32* %36, align 4, !tbaa !9\l  %45 = insertelement \<4 x i32\> poison, i32 %41, i32 0\l  %46 = insertelement \<4 x i32\> %45, i32 %42, i32 1\l  %47 = insertelement \<4 x i32\> %46, i32 %43, i32 2\l  %48 = insertelement \<4 x i32\> %47, i32 %44, i32 3\l  %49 = load i32, i32* %37, align 4, !tbaa !9\l  %50 = load i32, i32* %38, align 4, !tbaa !9\l  %51 = load i32, i32* %39, align 4, !tbaa !9\l  %52 = load i32, i32* %40, align 4, !tbaa !9\l  %53 = insertelement \<4 x i32\> poison, i32 %49, i32 0\l  %54 = insertelement \<4 x i32\> %53, i32 %50, i32 1\l  %55 = insertelement \<4 x i32\> %54, i32 %51, i32 2\l  %56 = insertelement \<4 x i32\> %55, i32 %52, i32 3\l  %57 = and \<4 x i32\> %48, \<i32 1, i32 1, i32 1, i32 1\>\l  %58 = and \<4 x i32\> %56, \<i32 1, i32 1, i32 1, i32 1\>\l  %59 = icmp eq \<4 x i32\> %57, zeroinitializer\l  %60 = icmp eq \<4 x i32\> %58, zeroinitializer\l  %61 = select \<4 x i1\> %59, \<4 x i32\> %48, \<4 x i32\> zeroinitializer\l  %62 = select \<4 x i1\> %60, \<4 x i32\> %56, \<4 x i32\> zeroinitializer\l  %63 = add \<4 x i32\> %61, %22\l  %64 = add \<4 x i32\> %62, %23\l  %65 = add nuw i64 %21, 8\l  %66 = icmp eq i64 %65, %17\l  br i1 %66, label %67, label %20, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5566d8f40ae0:s0 -> Node0x5566d8f44670;
	Node0x5566d8f40ae0:s1 -> Node0x5566d8f40ae0;
	Node0x5566d8f44670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%67:\l67:                                               \l  %68 = add \<4 x i32\> %64, %63\l  %69 = call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %68)\l  %70 = icmp eq i64 %14, %17\l  br i1 %70, label %75, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5566d8f44670:s0 -> Node0x5566d8f40420;
	Node0x5566d8f44670:s1 -> Node0x5566d8f40800;
	Node0x5566d8f40800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%71:\l71:                                               \l  %72 = phi i64 [ 0, %11 ], [ %17, %67 ]\l  %73 = phi i64 [ 1, %11 ], [ %19, %67 ]\l  %74 = phi i32 [ 0, %11 ], [ %69, %67 ]\l  br label %77\l}"];
	Node0x5566d8f40800 -> Node0x5566d8f44e20;
	Node0x5566d8f40420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%75:\l75:                                               \l  %76 = phi i32 [ 0, %1 ], [ %69, %67 ], [ %86, %77 ]\l  ret i32 %76\l}"];
	Node0x5566d8f44e20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi i64 [ %87, %77 ], [ %72, %71 ]\l  %79 = phi i64 [ %89, %77 ], [ %73, %71 ]\l  %80 = phi i32 [ %86, %77 ], [ %74, %71 ]\l  %81 = getelementptr inbounds i32, i32* %5, i64 %79\l  %82 = load i32, i32* %81, align 4, !tbaa !9\l  %83 = and i32 %82, 1\l  %84 = icmp eq i32 %83, 0\l  %85 = select i1 %84, i32 %82, i32 0\l  %86 = add nsw i32 %85, %80\l  %87 = add nuw nsw i64 %78, 1\l  %88 = shl nuw nsw i64 %87, 1\l  %89 = or i64 %88, 1\l  %90 = icmp eq i64 %78, %13\l  br i1 %90, label %75, label %77, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5566d8f44e20:s0 -> Node0x5566d8f40420;
	Node0x5566d8f44e20:s1 -> Node0x5566d8f44e20;
}
