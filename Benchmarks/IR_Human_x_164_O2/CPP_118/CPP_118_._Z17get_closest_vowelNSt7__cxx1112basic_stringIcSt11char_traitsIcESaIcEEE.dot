digraph "CFG for '_Z17get_closest_vowelNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function" {
	label="CFG for '_Z17get_closest_vowelNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function";

	Node0x5580f7ca61e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%2:\l  %3 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %4 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %5 = bitcast %\"class.std::__cxx11::basic_string\"* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #5\l  %6 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 2\l  %7 = bitcast %\"class.std::__cxx11::basic_string\"* %3 to %union.anon**\l  store %union.anon* %6, %union.anon** %7, align 8, !tbaa !3\l  %8 = bitcast %union.anon* %6 to i8*\l  %9 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 0, i32 0\l  %10 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %3, i64 0, i32 1\l  store i64 0, i64* %10, align 8, !tbaa !8\l  store i8 0, i8* %8, align 8, !tbaa !11\l  %11 = bitcast %\"class.std::__cxx11::basic_string\"* %4 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #5\l  %12 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2\l  %13 = bitcast %\"class.std::__cxx11::basic_string\"* %4 to %union.anon**\l  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3\l  %14 = bitcast %union.anon* %12 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(10) %14, i8* noundef nonnull align 1 dereferenceable(10)\l... getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i64 10,\l... i1 false) #5\l  %15 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 0, i32 0\l  %16 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 1\l  store i64 10, i64* %16, align 8, !tbaa !8\l  %17 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2, i32 1, i64 2\l  store i8 0, i8* %17, align 2, !tbaa !11\l  %18 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %1, i64 0, i32 1\l  %19 = load i64, i64* %18, align 8, !tbaa !8\l  %20 = trunc i64 %19 to i32\l  %21 = add i32 %20, -2\l  %22 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2, i32 1, i64 2\l  %23 = icmp sgt i32 %21, 0\l  br i1 %23, label %24, label %191\l|{<s0>T|<s1>F}}"];
	Node0x5580f7ca61e0:s0 -> Node0x5580f7caa000;
	Node0x5580f7ca61e0:s1 -> Node0x5580f7caa090;
	Node0x5580f7caa000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%24:\l24:                                               \l  %25 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %1, i64 0, i32 0, i32 0\l  %26 = load i8*, i8** %25, align 8, !tbaa !12\l  %27 = zext i32 %21 to i64\l  %28 = load i8, i8* %14, align 8, !tbaa !11\l  %29 = getelementptr inbounds i8, i8* %14, i64 1\l  %30 = load i8, i8* %29, align 1\l  %31 = getelementptr inbounds i8, i8* %14, i64 2\l  %32 = load i8, i8* %31, align 2\l  %33 = getelementptr inbounds i8, i8* %14, i64 3\l  %34 = load i8, i8* %33, align 1\l  %35 = getelementptr inbounds i8, i8* %14, i64 4\l  %36 = load i8, i8* %35, align 4\l  %37 = getelementptr inbounds i8, i8* %14, i64 5\l  %38 = load i8, i8* %37, align 1\l  %39 = getelementptr inbounds i8, i8* %14, i64 6\l  %40 = load i8, i8* %39, align 2\l  %41 = getelementptr inbounds i8, i8* %14, i64 7\l  %42 = load i8, i8* %41, align 1\l  %43 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2, i32 1, i64 0\l  %44 = load i8, i8* %43, align 8\l  %45 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2, i32 1, i64 1\l  %46 = load i8, i8* %14, align 8\l  %47 = getelementptr inbounds i8, i8* %14, i64 1\l  %48 = load i8, i8* %47, align 1\l  %49 = getelementptr inbounds i8, i8* %14, i64 2\l  %50 = load i8, i8* %49, align 2\l  %51 = getelementptr inbounds i8, i8* %14, i64 3\l  %52 = load i8, i8* %51, align 1\l  %53 = getelementptr inbounds i8, i8* %14, i64 4\l  %54 = load i8, i8* %53, align 4\l  %55 = getelementptr inbounds i8, i8* %14, i64 5\l  %56 = load i8, i8* %55, align 1\l  %57 = getelementptr inbounds i8, i8* %14, i64 6\l  %58 = load i8, i8* %57, align 2\l  %59 = getelementptr inbounds i8, i8* %14, i64 7\l  %60 = load i8, i8* %59, align 1\l  %61 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2, i32 1, i64 0\l  %62 = load i8, i8* %61, align 8\l  %63 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2, i32 1, i64 1\l  %64 = load i8, i8* %14, align 8\l  %65 = getelementptr inbounds i8, i8* %14, i64 1\l  %66 = load i8, i8* %65, align 1\l  %67 = getelementptr inbounds i8, i8* %14, i64 2\l  %68 = load i8, i8* %67, align 2\l  %69 = getelementptr inbounds i8, i8* %14, i64 3\l  %70 = load i8, i8* %69, align 1\l  %71 = getelementptr inbounds i8, i8* %14, i64 4\l  %72 = load i8, i8* %71, align 4\l  %73 = getelementptr inbounds i8, i8* %14, i64 5\l  %74 = load i8, i8* %73, align 1\l  %75 = getelementptr inbounds i8, i8* %14, i64 6\l  %76 = load i8, i8* %75, align 2\l  %77 = getelementptr inbounds i8, i8* %14, i64 7\l  %78 = load i8, i8* %77, align 1\l  %79 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2, i32 1, i64 0\l  %80 = load i8, i8* %79, align 8\l  %81 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %4, i64 0, i32 2, i32 1, i64 1\l  br label %82\l}"];
	Node0x5580f7caa000 -> Node0x5580f7cac9a0;
	Node0x5580f7cac9a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  %83 = phi i64 [ %27, %24 ], [ %186, %183 ]\l  %84 = phi i32 [ %21, %24 ], [ %184, %183 ]\l  %85 = getelementptr inbounds i8, i8* %26, i64 %83\l  %86 = load i8, i8* %85, align 1, !tbaa !11\l  %87 = icmp eq i8 %28, %86\l  br i1 %87, label %108, label %88\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cac9a0:s0 -> Node0x5580f7caced0;
	Node0x5580f7cac9a0:s1 -> Node0x5580f7cacf60;
	Node0x5580f7cacf60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%88:\l88:                                               \l  %89 = icmp eq i8 %30, %86\l  br i1 %89, label %105, label %90\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cacf60:s0 -> Node0x5580f7cad130;
	Node0x5580f7cacf60:s1 -> Node0x5580f7cad180;
	Node0x5580f7cad180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%90:\l90:                                               \l  %91 = icmp eq i8 %32, %86\l  br i1 %91, label %102, label %92\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cad180:s0 -> Node0x5580f7cad350;
	Node0x5580f7cad180:s1 -> Node0x5580f7cad3a0;
	Node0x5580f7cad3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%92:\l92:                                               \l  %93 = icmp eq i8 %34, %86\l  br i1 %93, label %99, label %94\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cad3a0:s0 -> Node0x5580f7cad570;
	Node0x5580f7cad3a0:s1 -> Node0x5580f7cad5c0;
	Node0x5580f7cad5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%94:\l94:                                               \l  %95 = icmp eq i8 %36, %86\l  br i1 %95, label %108, label %210\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cad5c0:s0 -> Node0x5580f7caced0;
	Node0x5580f7cad5c0:s1 -> Node0x5580f7cad790;
	Node0x5580f7cad890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%96:\l96:                                               \l  %97 = load i8, i8* %45, align 1, !tbaa !11\l  %98 = icmp eq i8 %97, %217\l  br i1 %98, label %108, label %183\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cad890:s0 -> Node0x5580f7caced0;
	Node0x5580f7cad890:s1 -> Node0x5580f7cacad0;
	Node0x5580f7cad570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%99:\l99:                                               \l  %100 = phi i8* [ %14, %92 ], [ %35, %214 ]\l  %101 = getelementptr inbounds i8, i8* %100, i64 3\l  br label %108\l}"];
	Node0x5580f7cad570 -> Node0x5580f7caced0;
	Node0x5580f7cad350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%102:\l102:                                              \l  %103 = phi i8* [ %14, %90 ], [ %35, %212 ]\l  %104 = getelementptr inbounds i8, i8* %103, i64 2\l  br label %108\l}"];
	Node0x5580f7cad350 -> Node0x5580f7caced0;
	Node0x5580f7cad130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%105:\l105:                                              \l  %106 = phi i8* [ %14, %88 ], [ %35, %210 ]\l  %107 = getelementptr inbounds i8, i8* %106, i64 1\l  br label %108\l}"];
	Node0x5580f7cad130 -> Node0x5580f7caced0;
	Node0x5580f7caced0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%108:\l108:                                              \l  %109 = phi i8 [ %217, %216 ], [ %217, %96 ], [ %86, %105 ], [ %86, %102 ], [\l... %86, %99 ], [ %86, %94 ], [ %86, %82 ]\l  %110 = phi i8* [ %43, %216 ], [ %45, %96 ], [ %107, %105 ], [ %104, %102 ],\l... [ %101, %99 ], [ %14, %82 ], [ %35, %94 ]\l  %111 = icmp eq i8* %110, %22\l  br i1 %111, label %183, label %112\l|{<s0>T|<s1>F}}"];
	Node0x5580f7caced0:s0 -> Node0x5580f7cacad0;
	Node0x5580f7caced0:s1 -> Node0x5580f7cae4a0;
	Node0x5580f7cae4a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%112:\l112:                                              \l  %113 = shl i64 %83, 32\l  %114 = add i64 %113, 4294967296\l  %115 = ashr exact i64 %114, 32\l  %116 = getelementptr inbounds i8, i8* %26, i64 %115\l  %117 = load i8, i8* %116, align 1, !tbaa !11\l  %118 = icmp eq i8 %46, %117\l  br i1 %118, label %139, label %119\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cae4a0:s0 -> Node0x5580f7cae920;
	Node0x5580f7cae4a0:s1 -> Node0x5580f7cae970;
	Node0x5580f7cae970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%119:\l119:                                              \l  %120 = icmp eq i8 %48, %117\l  br i1 %120, label %136, label %121\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cae970:s0 -> Node0x5580f7caeb40;
	Node0x5580f7cae970:s1 -> Node0x5580f7caeb90;
	Node0x5580f7caeb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%121:\l121:                                              \l  %122 = icmp eq i8 %50, %117\l  br i1 %122, label %133, label %123\l|{<s0>T|<s1>F}}"];
	Node0x5580f7caeb90:s0 -> Node0x5580f7caed60;
	Node0x5580f7caeb90:s1 -> Node0x5580f7caedb0;
	Node0x5580f7caedb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%123:\l123:                                              \l  %124 = icmp eq i8 %52, %117\l  br i1 %124, label %130, label %125\l|{<s0>T|<s1>F}}"];
	Node0x5580f7caedb0:s0 -> Node0x5580f7caef80;
	Node0x5580f7caedb0:s1 -> Node0x5580f7caefd0;
	Node0x5580f7caefd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%125:\l125:                                              \l  %126 = icmp eq i8 %54, %117\l  br i1 %126, label %139, label %219\l|{<s0>T|<s1>F}}"];
	Node0x5580f7caefd0:s0 -> Node0x5580f7cae920;
	Node0x5580f7caefd0:s1 -> Node0x5580f7caf1a0;
	Node0x5580f7caf2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%127:\l127:                                              \l  %128 = load i8, i8* %63, align 1, !tbaa !11\l  %129 = icmp eq i8 %128, %226\l  br i1 %129, label %139, label %142\l|{<s0>T|<s1>F}}"];
	Node0x5580f7caf2a0:s0 -> Node0x5580f7cae920;
	Node0x5580f7caf2a0:s1 -> Node0x5580f7cafc70;
	Node0x5580f7caef80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%130:\l130:                                              \l  %131 = phi i8* [ %14, %123 ], [ %53, %223 ]\l  %132 = getelementptr inbounds i8, i8* %131, i64 3\l  br label %139\l}"];
	Node0x5580f7caef80 -> Node0x5580f7cae920;
	Node0x5580f7caed60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%133:\l133:                                              \l  %134 = phi i8* [ %14, %121 ], [ %53, %221 ]\l  %135 = getelementptr inbounds i8, i8* %134, i64 2\l  br label %139\l}"];
	Node0x5580f7caed60 -> Node0x5580f7cae920;
	Node0x5580f7caeb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%136:\l136:                                              \l  %137 = phi i8* [ %14, %119 ], [ %53, %219 ]\l  %138 = getelementptr inbounds i8, i8* %137, i64 1\l  br label %139\l}"];
	Node0x5580f7caeb40 -> Node0x5580f7cae920;
	Node0x5580f7cae920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%139:\l139:                                              \l  %140 = phi i8* [ %61, %225 ], [ %63, %127 ], [ %132, %130 ], [ %135, %133 ],\l... [ %138, %136 ], [ %14, %112 ], [ %53, %125 ]\l  %141 = icmp eq i8* %140, %22\l  br i1 %141, label %142, label %183\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cae920:s0 -> Node0x5580f7cafc70;
	Node0x5580f7cae920:s1 -> Node0x5580f7cacad0;
	Node0x5580f7cafc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%142:\l142:                                              \l  %143 = add nsw i32 %84, -1\l  %144 = zext i32 %143 to i64\l  %145 = getelementptr inbounds i8, i8* %26, i64 %144\l  %146 = load i8, i8* %145, align 1, !tbaa !11\l  %147 = icmp eq i8 %64, %146\l  br i1 %147, label %168, label %148\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cafc70:s0 -> Node0x5580f7cb0960;
	Node0x5580f7cafc70:s1 -> Node0x5580f7cb09b0;
	Node0x5580f7cb09b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%148:\l148:                                              \l  %149 = icmp eq i8 %66, %146\l  br i1 %149, label %165, label %150\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cb09b0:s0 -> Node0x5580f7cb0b40;
	Node0x5580f7cb09b0:s1 -> Node0x5580f7cb0b90;
	Node0x5580f7cb0b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%150:\l150:                                              \l  %151 = icmp eq i8 %68, %146\l  br i1 %151, label %162, label %152\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cb0b90:s0 -> Node0x5580f7cb0d60;
	Node0x5580f7cb0b90:s1 -> Node0x5580f7cb0db0;
	Node0x5580f7cb0db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%152:\l152:                                              \l  %153 = icmp eq i8 %70, %146\l  br i1 %153, label %159, label %154\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cb0db0:s0 -> Node0x5580f7cb0f80;
	Node0x5580f7cb0db0:s1 -> Node0x5580f7cb0fd0;
	Node0x5580f7cb0fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%154:\l154:                                              \l  %155 = icmp eq i8 %72, %146\l  br i1 %155, label %168, label %228\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cb0fd0:s0 -> Node0x5580f7cb0960;
	Node0x5580f7cb0fd0:s1 -> Node0x5580f7cb11a0;
	Node0x5580f7cb12a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%156:\l156:                                              \l  %157 = load i8, i8* %81, align 1, !tbaa !11\l  %158 = icmp eq i8 %157, %235\l  br i1 %158, label %168, label %171\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cb12a0:s0 -> Node0x5580f7cb0960;
	Node0x5580f7cb12a0:s1 -> Node0x5580f7cb1460;
	Node0x5580f7cb0f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%159:\l159:                                              \l  %160 = phi i8* [ %14, %152 ], [ %71, %232 ]\l  %161 = getelementptr inbounds i8, i8* %160, i64 3\l  br label %168\l}"];
	Node0x5580f7cb0f80 -> Node0x5580f7cb0960;
	Node0x5580f7cb0d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%162:\l162:                                              \l  %163 = phi i8* [ %14, %150 ], [ %71, %230 ]\l  %164 = getelementptr inbounds i8, i8* %163, i64 2\l  br label %168\l}"];
	Node0x5580f7cb0d60 -> Node0x5580f7cb0960;
	Node0x5580f7cb0b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%165:\l165:                                              \l  %166 = phi i8* [ %14, %148 ], [ %71, %228 ]\l  %167 = getelementptr inbounds i8, i8* %166, i64 1\l  br label %168\l}"];
	Node0x5580f7cb0b40 -> Node0x5580f7cb0960;
	Node0x5580f7cb0960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%168:\l168:                                              \l  %169 = phi i8* [ %79, %234 ], [ %81, %156 ], [ %161, %159 ], [ %164, %162 ],\l... [ %167, %165 ], [ %14, %142 ], [ %71, %154 ]\l  %170 = icmp eq i8* %169, %22\l  br i1 %170, label %171, label %183\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cb0960:s0 -> Node0x5580f7cb1460;
	Node0x5580f7cb0960:s1 -> Node0x5580f7cacad0;
	Node0x5580f7cb1460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%171:\l171:                                              \l  %172 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2\l  %173 = bitcast %\"class.std::__cxx11::basic_string\"* %0 to %union.anon**\l  store %union.anon* %172, %union.anon** %173, align 8, !tbaa !3, !alias.scope\l... !13\l  %174 = bitcast %union.anon* %172 to i8*\l  %175 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  store i64 0, i64* %175, align 8, !tbaa !8, !alias.scope !13\l  store i8 0, i8* %174, align 8, !tbaa !11\l  %176 = invoke nonnull align 8 dereferenceable(32)\l... %\"class.std::__cxx11::basic_string\"*\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%\"\l...class.std::__cxx11::basic_string\"* nonnull align 8 dereferenceable(32) %0, i64\l... 0, i64 0, i64 1, i8 signext %109)\l          to label %196 unwind label %177\l}"];
	Node0x5580f7cb1460 -> Node0x5580f7cb2a90;
	Node0x5580f7cb1460 -> Node0x5580f7cb2b20;
	Node0x5580f7cb2b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%177:\l177:                                              \l  %178 = landingpad \{ i8*, i32 \}\l          cleanup\l  %179 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %180 = load i8*, i8** %179, align 8, !tbaa !12, !alias.scope !13\l  %181 = icmp eq i8* %180, %174\l  br i1 %181, label %187, label %182\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cb2b20:s0 -> Node0x5580f7cb3680;
	Node0x5580f7cb2b20:s1 -> Node0x5580f7cb3710;
	Node0x5580f7cb3710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%182:\l182:                                              \l  call void @_ZdlPv(i8* %180) #5\l  br label %187\l}"];
	Node0x5580f7cb3710 -> Node0x5580f7cb3680;
	Node0x5580f7cacad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%183:\l183:                                              \l  %184 = add nsw i32 %84, -1\l  %185 = icmp sgt i64 %83, 1\l  %186 = add nsw i64 %83, -1\l  br i1 %185, label %82, label %191, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cacad0:s0 -> Node0x5580f7cac9a0;
	Node0x5580f7cacad0:s1 -> Node0x5580f7caa090;
	Node0x5580f7cb3680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%187:\l187:                                              \l  %188 = load i8*, i8** %15, align 8, !tbaa !12\l  %189 = icmp eq i8* %188, %14\l  br i1 %189, label %205, label %190\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cb3680:s0 -> Node0x5580f7cb3e70;
	Node0x5580f7cb3680:s1 -> Node0x5580f7cb3ec0;
	Node0x5580f7cb3ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%190:\l190:                                              \l  call void @_ZdlPv(i8* %188) #5\l  br label %205\l}"];
	Node0x5580f7cb3ec0 -> Node0x5580f7cb3e70;
	Node0x5580f7caa090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%191:\l191:                                              \l  %192 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 2\l  %193 = bitcast %\"class.std::__cxx11::basic_string\"* %0 to %union.anon**\l  store %union.anon* %192, %union.anon** %193, align 8, !tbaa !3\l  %194 = bitcast %union.anon* %192 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %194, i8* noundef nonnull align 8 dereferenceable(16) %8,\l... i64 16, i1 false) #5\l  %195 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  store i64 0, i64* %195, align 8, !tbaa !8\l  store %union.anon* %6, %union.anon** %7, align 8, !tbaa !12\l  store i64 0, i64* %10, align 8, !tbaa !8\l  store i8 0, i8* %8, align 8, !tbaa !11\l  br label %200\l}"];
	Node0x5580f7caa090 -> Node0x5580f7cb48e0;
	Node0x5580f7cb2a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%196:\l196:                                              \l  %197 = load i8*, i8** %15, align 8, !tbaa !12\l  %198 = icmp eq i8* %197, %14\l  br i1 %198, label %200, label %199\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cb2a90:s0 -> Node0x5580f7cb48e0;
	Node0x5580f7cb2a90:s1 -> Node0x5580f7cb4aa0;
	Node0x5580f7cb4aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%199:\l199:                                              \l  call void @_ZdlPv(i8* %197) #5\l  br label %200\l}"];
	Node0x5580f7cb4aa0 -> Node0x5580f7cb48e0;
	Node0x5580f7cb48e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%200:\l200:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #5\l  %201 = load i8*, i8** %9, align 8, !tbaa !12\l  %202 = icmp eq i8* %201, %8\l  br i1 %202, label %204, label %203\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cb48e0:s0 -> Node0x5580f7cb5040;
	Node0x5580f7cb48e0:s1 -> Node0x5580f7cb5090;
	Node0x5580f7cb5090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%203:\l203:                                              \l  call void @_ZdlPv(i8* %201) #5\l  br label %204\l}"];
	Node0x5580f7cb5090 -> Node0x5580f7cb5040;
	Node0x5580f7cb5040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%204:\l204:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #5\l  ret void\l}"];
	Node0x5580f7cb3e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%205:\l205:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #5\l  %206 = load i8*, i8** %9, align 8, !tbaa !12\l  %207 = icmp eq i8* %206, %8\l  br i1 %207, label %209, label %208\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cb3e70:s0 -> Node0x5580f7cb5710;
	Node0x5580f7cb3e70:s1 -> Node0x5580f7cb5760;
	Node0x5580f7cb5760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%208:\l208:                                              \l  call void @_ZdlPv(i8* %206) #5\l  br label %209\l}"];
	Node0x5580f7cb5760 -> Node0x5580f7cb5710;
	Node0x5580f7cb5710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%209:\l209:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #5\l  resume \{ i8*, i32 \} %178\l}"];
	Node0x5580f7cad790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%210:\l210:                                              \l  %211 = icmp eq i8 %38, %86\l  br i1 %211, label %105, label %212\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cad790:s0 -> Node0x5580f7cad130;
	Node0x5580f7cad790:s1 -> Node0x5580f7cadd10;
	Node0x5580f7cadd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%212:\l212:                                              \l  %213 = icmp eq i8 %40, %86\l  br i1 %213, label %102, label %214\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cadd10:s0 -> Node0x5580f7cad350;
	Node0x5580f7cadd10:s1 -> Node0x5580f7cadb00;
	Node0x5580f7cadb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%214:\l214:                                              \l  %215 = icmp eq i8 %42, %86\l  br i1 %215, label %99, label %216\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cadb00:s0 -> Node0x5580f7cad570;
	Node0x5580f7cadb00:s1 -> Node0x5580f7cae0e0;
	Node0x5580f7cae0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%216:\l216:                                              \l  %217 = load i8, i8* %85, align 1, !tbaa !11\l  %218 = icmp eq i8 %44, %217\l  br i1 %218, label %108, label %96\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cae0e0:s0 -> Node0x5580f7caced0;
	Node0x5580f7cae0e0:s1 -> Node0x5580f7cad890;
	Node0x5580f7caf1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%219:\l219:                                              \l  %220 = icmp eq i8 %56, %117\l  br i1 %220, label %136, label %221\l|{<s0>T|<s1>F}}"];
	Node0x5580f7caf1a0:s0 -> Node0x5580f7caeb40;
	Node0x5580f7caf1a0:s1 -> Node0x5580f7caffc0;
	Node0x5580f7caffc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%221:\l221:                                              \l  %222 = icmp eq i8 %58, %117\l  br i1 %222, label %133, label %223\l|{<s0>T|<s1>F}}"];
	Node0x5580f7caffc0:s0 -> Node0x5580f7caed60;
	Node0x5580f7caffc0:s1 -> Node0x5580f7cafdb0;
	Node0x5580f7cafdb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%223:\l223:                                              \l  %224 = icmp eq i8 %60, %117\l  br i1 %224, label %130, label %225\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cafdb0:s0 -> Node0x5580f7caef80;
	Node0x5580f7cafdb0:s1 -> Node0x5580f7cb0390;
	Node0x5580f7cb0390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%225:\l225:                                              \l  %226 = load i8, i8* %116, align 1, !tbaa !11\l  %227 = icmp eq i8 %62, %226\l  br i1 %227, label %139, label %127\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cb0390:s0 -> Node0x5580f7cae920;
	Node0x5580f7cb0390:s1 -> Node0x5580f7caf2a0;
	Node0x5580f7cb11a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%228:\l228:                                              \l  %229 = icmp eq i8 %74, %146\l  br i1 %229, label %165, label %230\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cb11a0:s0 -> Node0x5580f7cb0b40;
	Node0x5580f7cb11a0:s1 -> Node0x5580f7cb17b0;
	Node0x5580f7cb17b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%230:\l230:                                              \l  %231 = icmp eq i8 %76, %146\l  br i1 %231, label %162, label %232\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cb17b0:s0 -> Node0x5580f7cb0d60;
	Node0x5580f7cb17b0:s1 -> Node0x5580f7cb15a0;
	Node0x5580f7cb15a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%232:\l232:                                              \l  %233 = icmp eq i8 %78, %146\l  br i1 %233, label %159, label %234\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cb15a0:s0 -> Node0x5580f7cb0f80;
	Node0x5580f7cb15a0:s1 -> Node0x5580f7cb1b80;
	Node0x5580f7cb1b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%234:\l234:                                              \l  %235 = load i8, i8* %145, align 1, !tbaa !11\l  %236 = icmp eq i8 %80, %235\l  br i1 %236, label %168, label %156\l|{<s0>T|<s1>F}}"];
	Node0x5580f7cb1b80:s0 -> Node0x5580f7cb0960;
	Node0x5580f7cb1b80:s1 -> Node0x5580f7cb12a0;
}
