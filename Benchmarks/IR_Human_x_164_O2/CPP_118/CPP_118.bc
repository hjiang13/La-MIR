; ModuleID = '../../Human_xBenchmarks_164/CPP_118/CPP_118.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_118/CPP_118.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@.str.1 = private unnamed_addr constant [11 x i8] c"AEIOUaeiou\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z17get_closest_vowelNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %7 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  store %union.anon* %6, %union.anon** %7, align 8, !tbaa !3
  %8 = bitcast %union.anon* %6 to i8*
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  store i64 0, i64* %10, align 8, !tbaa !8
  store i8 0, i8* %8, align 8, !tbaa !11
  %11 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #5
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3
  %14 = bitcast %union.anon* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(10) %14, i8* noundef nonnull align 1 dereferenceable(10) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i64 10, i1 false) #5
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  store i64 10, i64* %16, align 8, !tbaa !8
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 1, i64 2
  store i8 0, i8* %17, align 2, !tbaa !11
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %19 = load i64, i64* %18, align 8, !tbaa !8
  %20 = trunc i64 %19 to i32
  %21 = add i32 %20, -2
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 1, i64 2
  %23 = icmp sgt i32 %21, 0
  br i1 %23, label %24, label %191

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8, !tbaa !12
  %27 = zext i32 %21 to i64
  %28 = load i8, i8* %14, align 8, !tbaa !11
  %29 = getelementptr inbounds i8, i8* %14, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = getelementptr inbounds i8, i8* %14, i64 2
  %32 = load i8, i8* %31, align 2
  %33 = getelementptr inbounds i8, i8* %14, i64 3
  %34 = load i8, i8* %33, align 1
  %35 = getelementptr inbounds i8, i8* %14, i64 4
  %36 = load i8, i8* %35, align 4
  %37 = getelementptr inbounds i8, i8* %14, i64 5
  %38 = load i8, i8* %37, align 1
  %39 = getelementptr inbounds i8, i8* %14, i64 6
  %40 = load i8, i8* %39, align 2
  %41 = getelementptr inbounds i8, i8* %14, i64 7
  %42 = load i8, i8* %41, align 1
  %43 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 1, i64 0
  %44 = load i8, i8* %43, align 8
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 1, i64 1
  %46 = load i8, i8* %14, align 8
  %47 = getelementptr inbounds i8, i8* %14, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = getelementptr inbounds i8, i8* %14, i64 2
  %50 = load i8, i8* %49, align 2
  %51 = getelementptr inbounds i8, i8* %14, i64 3
  %52 = load i8, i8* %51, align 1
  %53 = getelementptr inbounds i8, i8* %14, i64 4
  %54 = load i8, i8* %53, align 4
  %55 = getelementptr inbounds i8, i8* %14, i64 5
  %56 = load i8, i8* %55, align 1
  %57 = getelementptr inbounds i8, i8* %14, i64 6
  %58 = load i8, i8* %57, align 2
  %59 = getelementptr inbounds i8, i8* %14, i64 7
  %60 = load i8, i8* %59, align 1
  %61 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 1, i64 0
  %62 = load i8, i8* %61, align 8
  %63 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 1, i64 1
  %64 = load i8, i8* %14, align 8
  %65 = getelementptr inbounds i8, i8* %14, i64 1
  %66 = load i8, i8* %65, align 1
  %67 = getelementptr inbounds i8, i8* %14, i64 2
  %68 = load i8, i8* %67, align 2
  %69 = getelementptr inbounds i8, i8* %14, i64 3
  %70 = load i8, i8* %69, align 1
  %71 = getelementptr inbounds i8, i8* %14, i64 4
  %72 = load i8, i8* %71, align 4
  %73 = getelementptr inbounds i8, i8* %14, i64 5
  %74 = load i8, i8* %73, align 1
  %75 = getelementptr inbounds i8, i8* %14, i64 6
  %76 = load i8, i8* %75, align 2
  %77 = getelementptr inbounds i8, i8* %14, i64 7
  %78 = load i8, i8* %77, align 1
  %79 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 1, i64 0
  %80 = load i8, i8* %79, align 8
  %81 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 1, i64 1
  br label %82

82:                                               ; preds = %183, %24
  %83 = phi i64 [ %27, %24 ], [ %186, %183 ]
  %84 = phi i32 [ %21, %24 ], [ %184, %183 ]
  %85 = getelementptr inbounds i8, i8* %26, i64 %83
  %86 = load i8, i8* %85, align 1, !tbaa !11
  %87 = icmp eq i8 %28, %86
  br i1 %87, label %108, label %88

88:                                               ; preds = %82
  %89 = icmp eq i8 %30, %86
  br i1 %89, label %105, label %90

90:                                               ; preds = %88
  %91 = icmp eq i8 %32, %86
  br i1 %91, label %102, label %92

92:                                               ; preds = %90
  %93 = icmp eq i8 %34, %86
  br i1 %93, label %99, label %94

94:                                               ; preds = %92
  %95 = icmp eq i8 %36, %86
  br i1 %95, label %108, label %210

96:                                               ; preds = %216
  %97 = load i8, i8* %45, align 1, !tbaa !11
  %98 = icmp eq i8 %97, %217
  br i1 %98, label %108, label %183

99:                                               ; preds = %214, %92
  %100 = phi i8* [ %14, %92 ], [ %35, %214 ]
  %101 = getelementptr inbounds i8, i8* %100, i64 3
  br label %108

102:                                              ; preds = %212, %90
  %103 = phi i8* [ %14, %90 ], [ %35, %212 ]
  %104 = getelementptr inbounds i8, i8* %103, i64 2
  br label %108

105:                                              ; preds = %210, %88
  %106 = phi i8* [ %14, %88 ], [ %35, %210 ]
  %107 = getelementptr inbounds i8, i8* %106, i64 1
  br label %108

108:                                              ; preds = %82, %94, %99, %102, %105, %96, %216
  %109 = phi i8 [ %217, %216 ], [ %217, %96 ], [ %86, %105 ], [ %86, %102 ], [ %86, %99 ], [ %86, %94 ], [ %86, %82 ]
  %110 = phi i8* [ %43, %216 ], [ %45, %96 ], [ %107, %105 ], [ %104, %102 ], [ %101, %99 ], [ %14, %82 ], [ %35, %94 ]
  %111 = icmp eq i8* %110, %22
  br i1 %111, label %183, label %112

112:                                              ; preds = %108
  %113 = shl i64 %83, 32
  %114 = add i64 %113, 4294967296
  %115 = ashr exact i64 %114, 32
  %116 = getelementptr inbounds i8, i8* %26, i64 %115
  %117 = load i8, i8* %116, align 1, !tbaa !11
  %118 = icmp eq i8 %46, %117
  br i1 %118, label %139, label %119

119:                                              ; preds = %112
  %120 = icmp eq i8 %48, %117
  br i1 %120, label %136, label %121

121:                                              ; preds = %119
  %122 = icmp eq i8 %50, %117
  br i1 %122, label %133, label %123

123:                                              ; preds = %121
  %124 = icmp eq i8 %52, %117
  br i1 %124, label %130, label %125

125:                                              ; preds = %123
  %126 = icmp eq i8 %54, %117
  br i1 %126, label %139, label %219

127:                                              ; preds = %225
  %128 = load i8, i8* %63, align 1, !tbaa !11
  %129 = icmp eq i8 %128, %226
  br i1 %129, label %139, label %142

130:                                              ; preds = %223, %123
  %131 = phi i8* [ %14, %123 ], [ %53, %223 ]
  %132 = getelementptr inbounds i8, i8* %131, i64 3
  br label %139

133:                                              ; preds = %221, %121
  %134 = phi i8* [ %14, %121 ], [ %53, %221 ]
  %135 = getelementptr inbounds i8, i8* %134, i64 2
  br label %139

136:                                              ; preds = %219, %119
  %137 = phi i8* [ %14, %119 ], [ %53, %219 ]
  %138 = getelementptr inbounds i8, i8* %137, i64 1
  br label %139

139:                                              ; preds = %112, %125, %130, %133, %136, %127, %225
  %140 = phi i8* [ %61, %225 ], [ %63, %127 ], [ %132, %130 ], [ %135, %133 ], [ %138, %136 ], [ %14, %112 ], [ %53, %125 ]
  %141 = icmp eq i8* %140, %22
  br i1 %141, label %142, label %183

142:                                              ; preds = %139, %127
  %143 = add nsw i32 %84, -1
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds i8, i8* %26, i64 %144
  %146 = load i8, i8* %145, align 1, !tbaa !11
  %147 = icmp eq i8 %64, %146
  br i1 %147, label %168, label %148

148:                                              ; preds = %142
  %149 = icmp eq i8 %66, %146
  br i1 %149, label %165, label %150

150:                                              ; preds = %148
  %151 = icmp eq i8 %68, %146
  br i1 %151, label %162, label %152

152:                                              ; preds = %150
  %153 = icmp eq i8 %70, %146
  br i1 %153, label %159, label %154

154:                                              ; preds = %152
  %155 = icmp eq i8 %72, %146
  br i1 %155, label %168, label %228

156:                                              ; preds = %234
  %157 = load i8, i8* %81, align 1, !tbaa !11
  %158 = icmp eq i8 %157, %235
  br i1 %158, label %168, label %171

159:                                              ; preds = %232, %152
  %160 = phi i8* [ %14, %152 ], [ %71, %232 ]
  %161 = getelementptr inbounds i8, i8* %160, i64 3
  br label %168

162:                                              ; preds = %230, %150
  %163 = phi i8* [ %14, %150 ], [ %71, %230 ]
  %164 = getelementptr inbounds i8, i8* %163, i64 2
  br label %168

165:                                              ; preds = %228, %148
  %166 = phi i8* [ %14, %148 ], [ %71, %228 ]
  %167 = getelementptr inbounds i8, i8* %166, i64 1
  br label %168

168:                                              ; preds = %142, %154, %159, %162, %165, %156, %234
  %169 = phi i8* [ %79, %234 ], [ %81, %156 ], [ %161, %159 ], [ %164, %162 ], [ %167, %165 ], [ %14, %142 ], [ %71, %154 ]
  %170 = icmp eq i8* %169, %22
  br i1 %170, label %171, label %183

171:                                              ; preds = %168, %156
  %172 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %173 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %172, %union.anon** %173, align 8, !tbaa !3, !alias.scope !13
  %174 = bitcast %union.anon* %172 to i8*
  %175 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %175, align 8, !tbaa !8, !alias.scope !13
  store i8 0, i8* %174, align 8, !tbaa !11
  %176 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64 0, i64 0, i64 1, i8 signext %109)
          to label %196 unwind label %177

177:                                              ; preds = %171
  %178 = landingpad { i8*, i32 }
          cleanup
  %179 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %180 = load i8*, i8** %179, align 8, !tbaa !12, !alias.scope !13
  %181 = icmp eq i8* %180, %174
  br i1 %181, label %187, label %182

182:                                              ; preds = %177
  call void @_ZdlPv(i8* %180) #5
  br label %187

183:                                              ; preds = %96, %108, %168, %139
  %184 = add nsw i32 %84, -1
  %185 = icmp sgt i64 %83, 1
  %186 = add nsw i64 %83, -1
  br i1 %185, label %82, label %191, !llvm.loop !16

187:                                              ; preds = %182, %177
  %188 = load i8*, i8** %15, align 8, !tbaa !12
  %189 = icmp eq i8* %188, %14
  br i1 %189, label %205, label %190

190:                                              ; preds = %187
  call void @_ZdlPv(i8* %188) #5
  br label %205

191:                                              ; preds = %183, %2
  %192 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %193 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %192, %union.anon** %193, align 8, !tbaa !3
  %194 = bitcast %union.anon* %192 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %194, i8* noundef nonnull align 8 dereferenceable(16) %8, i64 16, i1 false) #5
  %195 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %195, align 8, !tbaa !8
  store %union.anon* %6, %union.anon** %7, align 8, !tbaa !12
  store i64 0, i64* %10, align 8, !tbaa !8
  store i8 0, i8* %8, align 8, !tbaa !11
  br label %200

196:                                              ; preds = %171
  %197 = load i8*, i8** %15, align 8, !tbaa !12
  %198 = icmp eq i8* %197, %14
  br i1 %198, label %200, label %199

199:                                              ; preds = %196
  call void @_ZdlPv(i8* %197) #5
  br label %200

200:                                              ; preds = %191, %196, %199
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #5
  %201 = load i8*, i8** %9, align 8, !tbaa !12
  %202 = icmp eq i8* %201, %8
  br i1 %202, label %204, label %203

203:                                              ; preds = %200
  call void @_ZdlPv(i8* %201) #5
  br label %204

204:                                              ; preds = %200, %203
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #5
  ret void

205:                                              ; preds = %190, %187
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #5
  %206 = load i8*, i8** %9, align 8, !tbaa !12
  %207 = icmp eq i8* %206, %8
  br i1 %207, label %209, label %208

208:                                              ; preds = %205
  call void @_ZdlPv(i8* %206) #5
  br label %209

209:                                              ; preds = %208, %205
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #5
  resume { i8*, i32 } %178

210:                                              ; preds = %94
  %211 = icmp eq i8 %38, %86
  br i1 %211, label %105, label %212

212:                                              ; preds = %210
  %213 = icmp eq i8 %40, %86
  br i1 %213, label %102, label %214

214:                                              ; preds = %212
  %215 = icmp eq i8 %42, %86
  br i1 %215, label %99, label %216

216:                                              ; preds = %214
  %217 = load i8, i8* %85, align 1, !tbaa !11
  %218 = icmp eq i8 %44, %217
  br i1 %218, label %108, label %96

219:                                              ; preds = %125
  %220 = icmp eq i8 %56, %117
  br i1 %220, label %136, label %221

221:                                              ; preds = %219
  %222 = icmp eq i8 %58, %117
  br i1 %222, label %133, label %223

223:                                              ; preds = %221
  %224 = icmp eq i8 %60, %117
  br i1 %224, label %130, label %225

225:                                              ; preds = %223
  %226 = load i8, i8* %116, align 1, !tbaa !11
  %227 = icmp eq i8 %62, %226
  br i1 %227, label %139, label %127

228:                                              ; preds = %154
  %229 = icmp eq i8 %74, %146
  br i1 %229, label %165, label %230

230:                                              ; preds = %228
  %231 = icmp eq i8 %76, %146
  br i1 %231, label %162, label %232

232:                                              ; preds = %230
  %233 = icmp eq i8 %78, %146
  br i1 %233, label %159, label %234

234:                                              ; preds = %232
  %235 = load i8, i8* %145, align 1, !tbaa !11
  %236 = icmp eq i8 %80, %235
  br i1 %236, label %168, label %156
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #4

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!15 = distinct !{!15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.mustprogress"}
