; ModuleID = '../../Human_xBenchmarks_164/CPP_51/CPP_51.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_51/CPP_51.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@.str.1 = private unnamed_addr constant [11 x i8] c"AEIOUaeiou\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z13remove_vowelsNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %6, %union.anon** %7, align 8, !tbaa !3
  %8 = bitcast %union.anon* %6 to i8*
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %10, align 8, !tbaa !8
  store i8 0, i8* %8, align 8, !tbaa !11
  %11 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !3
  %14 = bitcast %union.anon* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(10) %14, i8* noundef nonnull align 1 dereferenceable(10) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i64 10, i1 false) #6
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  store i64 10, i64* %16, align 8, !tbaa !8
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 1, i64 2
  store i8 0, i8* %17, align 2, !tbaa !11
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %20 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %22 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  %23 = bitcast i64* %3 to i8*
  %24 = bitcast %union.anon* %21 to i8*
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  %29 = load i64, i64* %18, align 8, !tbaa !8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %2
  %32 = bitcast i64* %27 to <2 x i64>*
  %33 = bitcast i64* %10 to <2 x i64>*
  br label %38

34:                                               ; preds = %174
  %35 = icmp eq i8* %178, %14
  br i1 %35, label %37, label %36

36:                                               ; preds = %34
  call void @_ZdlPv(i8* %178) #6
  br label %37

37:                                               ; preds = %2, %34, %36
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6
  ret void

38:                                               ; preds = %31, %179
  %39 = phi i64 [ %175, %179 ], [ %29, %31 ]
  %40 = phi i64 [ %180, %179 ], [ 10, %31 ]
  %41 = phi i8* [ %178, %179 ], [ %14, %31 ]
  %42 = phi i64 [ %176, %179 ], [ 0, %31 ]
  %43 = getelementptr inbounds i8, i8* %41, i64 %40
  %44 = load i8*, i8** %19, align 8, !tbaa !12
  %45 = getelementptr inbounds i8, i8* %44, i64 %42
  %46 = ptrtoint i8* %43 to i64
  %47 = icmp sgt i64 %40, 3
  br i1 %47, label %48, label %72

48:                                               ; preds = %38
  %49 = lshr i64 %40, 2
  %50 = load i8, i8* %45, align 1, !tbaa !11
  br label %51

51:                                               ; preds = %68, %48
  %52 = phi i64 [ %49, %48 ], [ %70, %68 ]
  %53 = phi i8* [ %41, %48 ], [ %69, %68 ]
  %54 = load i8, i8* %53, align 1, !tbaa !11
  %55 = icmp eq i8 %54, %50
  br i1 %55, label %106, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds i8, i8* %53, i64 1
  %58 = load i8, i8* %57, align 1, !tbaa !11
  %59 = icmp eq i8 %58, %50
  br i1 %59, label %104, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds i8, i8* %53, i64 2
  %62 = load i8, i8* %61, align 1, !tbaa !11
  %63 = icmp eq i8 %62, %50
  br i1 %63, label %102, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds i8, i8* %53, i64 3
  %66 = load i8, i8* %65, align 1, !tbaa !11
  %67 = icmp eq i8 %66, %50
  br i1 %67, label %100, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds i8, i8* %53, i64 4
  %70 = add nsw i64 %52, -1
  %71 = icmp sgt i64 %52, 1
  br i1 %71, label %51, label %72, !llvm.loop !13

72:                                               ; preds = %68, %38
  %73 = phi i8* [ %41, %38 ], [ %69, %68 ]
  %74 = ptrtoint i8* %73 to i64
  %75 = sub i64 %46, %74
  switch i64 %75, label %76 [
    i64 3, label %82
    i64 2, label %80
    i64 1, label %78
  ]

76:                                               ; preds = %72
  %77 = load i8, i8* %45, align 1, !tbaa !11
  br label %110

78:                                               ; preds = %72
  %79 = load i8, i8* %45, align 1, !tbaa !11
  br label %95

80:                                               ; preds = %72
  %81 = load i8, i8* %45, align 1, !tbaa !11
  br label %88

82:                                               ; preds = %72
  %83 = load i8, i8* %73, align 1, !tbaa !11
  %84 = load i8, i8* %45, align 1, !tbaa !11
  %85 = icmp eq i8 %83, %84
  br i1 %85, label %106, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds i8, i8* %73, i64 1
  br label %88

88:                                               ; preds = %86, %80
  %89 = phi i8 [ %81, %80 ], [ %84, %86 ]
  %90 = phi i8* [ %73, %80 ], [ %87, %86 ]
  %91 = load i8, i8* %90, align 1, !tbaa !11
  %92 = icmp eq i8 %91, %89
  br i1 %92, label %106, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds i8, i8* %90, i64 1
  br label %95

95:                                               ; preds = %93, %78
  %96 = phi i8 [ %79, %78 ], [ %89, %93 ]
  %97 = phi i8* [ %73, %78 ], [ %94, %93 ]
  %98 = load i8, i8* %97, align 1, !tbaa !11
  %99 = icmp eq i8 %98, %96
  br i1 %99, label %106, label %110

100:                                              ; preds = %64
  %101 = getelementptr inbounds i8, i8* %53, i64 3
  br label %106

102:                                              ; preds = %60
  %103 = getelementptr inbounds i8, i8* %53, i64 2
  br label %106

104:                                              ; preds = %56
  %105 = getelementptr inbounds i8, i8* %53, i64 1
  br label %106

106:                                              ; preds = %51, %100, %102, %104, %95, %88, %82
  %107 = phi i8 [ %83, %82 ], [ %89, %88 ], [ %96, %95 ], [ %50, %104 ], [ %50, %102 ], [ %50, %100 ], [ %50, %51 ]
  %108 = phi i8* [ %73, %82 ], [ %90, %88 ], [ %97, %95 ], [ %105, %104 ], [ %103, %102 ], [ %101, %100 ], [ %53, %51 ]
  %109 = icmp eq i8* %108, %43
  br i1 %109, label %110, label %174

110:                                              ; preds = %76, %95, %106
  %111 = phi i8 [ %77, %76 ], [ %96, %95 ], [ %107, %106 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #6
  call void @llvm.experimental.noalias.scope.decl(metadata !15)
  store %union.anon* %21, %union.anon** %22, align 8, !tbaa !3, !alias.scope !15
  %112 = load i8*, i8** %9, align 8, !tbaa !12, !noalias !15
  %113 = load i64, i64* %10, align 8, !tbaa !8, !noalias !15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6, !noalias !15
  store i64 %113, i64* %3, align 8, !tbaa !18, !noalias !15
  %114 = icmp ugt i64 %113, 15
  br i1 %114, label %115, label %119

115:                                              ; preds = %110
  %116 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %117 unwind label %168

117:                                              ; preds = %115
  store i8* %116, i8** %25, align 8, !tbaa !12, !alias.scope !15
  %118 = load i64, i64* %3, align 8, !tbaa !18, !noalias !15
  store i64 %118, i64* %26, align 8, !tbaa !11, !alias.scope !15
  br label %119

119:                                              ; preds = %110, %117
  %120 = phi i8* [ %116, %117 ], [ %24, %110 ]
  switch i64 %113, label %123 [
    i64 1, label %121
    i64 0, label %124
  ]

121:                                              ; preds = %119
  %122 = load i8, i8* %112, align 1, !tbaa !11
  store i8 %122, i8* %120, align 1, !tbaa !11
  br label %124

123:                                              ; preds = %119
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %120, i8* align 1 %112, i64 %113, i1 false) #6
  br label %124

124:                                              ; preds = %123, %121, %119
  %125 = load i64, i64* %3, align 8, !tbaa !18, !noalias !15
  store i64 %125, i64* %27, align 8, !tbaa !8, !alias.scope !15
  %126 = load i8*, i8** %25, align 8, !tbaa !12, !alias.scope !15
  %127 = getelementptr inbounds i8, i8* %126, i64 %125
  store i8 0, i8* %127, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6, !noalias !15
  %128 = load i64, i64* %27, align 8, !tbaa !8, !alias.scope !15
  %129 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i64 %128, i64 0, i64 1, i8 signext %111)
          to label %135 unwind label %130

130:                                              ; preds = %124
  %131 = landingpad { i8*, i32 }
          cleanup
  %132 = load i8*, i8** %25, align 8, !tbaa !12, !alias.scope !15
  %133 = icmp eq i8* %132, %24
  br i1 %133, label %170, label %134

134:                                              ; preds = %130
  call void @_ZdlPv(i8* %132) #6
  br label %170

135:                                              ; preds = %124
  %136 = load i8*, i8** %25, align 8, !tbaa !12
  %137 = icmp eq i8* %136, %24
  br i1 %137, label %138, label %152

138:                                              ; preds = %135
  %139 = load i64, i64* %27, align 8, !tbaa !8
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %147, label %141

141:                                              ; preds = %138
  %142 = load i8*, i8** %9, align 8, !tbaa !12
  %143 = icmp eq i64 %139, 1
  br i1 %143, label %144, label %146

144:                                              ; preds = %141
  %145 = load i8, i8* %24, align 8, !tbaa !11
  store i8 %145, i8* %142, align 1, !tbaa !11
  br label %147

146:                                              ; preds = %141
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %142, i8* nonnull align 8 %24, i64 %139, i1 false) #6
  br label %147

147:                                              ; preds = %146, %144, %138
  %148 = load i64, i64* %27, align 8, !tbaa !8
  store i64 %148, i64* %10, align 8, !tbaa !8
  %149 = load i8*, i8** %9, align 8, !tbaa !12
  %150 = getelementptr inbounds i8, i8* %149, i64 %148
  store i8 0, i8* %150, align 1, !tbaa !11
  %151 = load i8*, i8** %25, align 8, !tbaa !12
  br label %161

152:                                              ; preds = %135
  %153 = load i8*, i8** %9, align 8, !tbaa !12
  %154 = icmp eq i8* %153, %8
  %155 = load i64, i64* %28, align 8
  store i8* %136, i8** %9, align 8, !tbaa !12
  %156 = load <2 x i64>, <2 x i64>* %32, align 8, !tbaa !11
  store <2 x i64> %156, <2 x i64>* %33, align 8, !tbaa !11
  %157 = icmp eq i8* %153, null
  %158 = or i1 %154, %157
  br i1 %158, label %160, label %159

159:                                              ; preds = %152
  store i8* %153, i8** %25, align 8, !tbaa !12
  store i64 %155, i64* %26, align 8, !tbaa !11
  br label %161

160:                                              ; preds = %152
  store %union.anon* %21, %union.anon** %22, align 8, !tbaa !12
  br label %161

161:                                              ; preds = %147, %159, %160
  %162 = phi i8* [ %151, %147 ], [ %153, %159 ], [ %24, %160 ]
  store i64 0, i64* %27, align 8, !tbaa !8
  store i8 0, i8* %162, align 1, !tbaa !11
  %163 = load i8*, i8** %25, align 8, !tbaa !12
  %164 = icmp eq i8* %163, %24
  br i1 %164, label %166, label %165

165:                                              ; preds = %161
  call void @_ZdlPv(i8* %163) #6
  br label %166

166:                                              ; preds = %161, %165
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #6
  %167 = load i64, i64* %18, align 8, !tbaa !8
  br label %174

168:                                              ; preds = %115
  %169 = landingpad { i8*, i32 }
          cleanup
  br label %170

170:                                              ; preds = %130, %134, %168
  %171 = phi { i8*, i32 } [ %169, %168 ], [ %131, %134 ], [ %131, %130 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #6
  %172 = load i8*, i8** %15, align 8, !tbaa !12
  %173 = icmp eq i8* %172, %14
  br i1 %173, label %182, label %181

174:                                              ; preds = %106, %166
  %175 = phi i64 [ %39, %106 ], [ %167, %166 ]
  %176 = add nuw i64 %42, 1
  %177 = icmp ugt i64 %175, %176
  %178 = load i8*, i8** %15, align 8, !tbaa !12
  br i1 %177, label %179, label %34, !llvm.loop !19

179:                                              ; preds = %174
  %180 = load i64, i64* %16, align 8, !tbaa !8
  br label %38

181:                                              ; preds = %170
  call void @_ZdlPv(i8* %172) #6
  br label %182

182:                                              ; preds = %181, %170
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6
  %183 = load i8*, i8** %9, align 8, !tbaa !12
  %184 = icmp eq i8* %183, %8
  br i1 %184, label %186, label %185

185:                                              ; preds = %182
  call void @_ZdlPv(i8* %183) #6
  br label %186

186:                                              ; preds = %185, %182
  resume { i8*, i32 } %171
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #3

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #5

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.mustprogress"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!17 = distinct !{!17, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!18 = !{!10, !10, i64 0}
!19 = distinct !{!19, !14}
