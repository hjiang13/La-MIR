; ModuleID = '../../Human_xBenchmarks_164/CPP_162/CPP_162.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_162/CPP_162.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%struct.MD5state_st = type { i32, i32, i32, i32, i32, i32, [16 x i32], i32 }

; Function Attrs: uwtable
define dso_local void @_Z13string_to_md5NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nocapture readonly %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca [16 x i8], align 16
  %6 = alloca %struct.MD5state_st, align 4
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = alloca %"class.std::__cxx11::basic_string", align 8
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8, !tbaa !3
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %16 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %15, %union.anon** %16, align 8, !tbaa !10
  %17 = bitcast %union.anon* %15 to i32*
  store i32 1701736270, i32* %17, align 8
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 4, i64* %18, align 8, !tbaa !3
  %19 = bitcast %union.anon* %15 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 4
  store i8 0, i8* %20, align 4, !tbaa !11
  br label %214

21:                                               ; preds = %2
  %22 = bitcast %struct.MD5state_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %22) #6
  %23 = call i32 @MD5_Init(%struct.MD5state_st* nonnull %6)
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !tbaa !12
  %26 = load i64, i64* %11, align 8, !tbaa !3
  %27 = call i32 @MD5_Update(%struct.MD5state_st* nonnull %6, i8* %25, i64 %26)
  %28 = call i32 @MD5_Final(i8* nonnull %10, %struct.MD5state_st* nonnull %6)
  %29 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #6
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %31 = bitcast %"class.std::__cxx11::basic_string"* %7 to %union.anon**
  store %union.anon* %30, %union.anon** %31, align 8, !tbaa !10
  %32 = bitcast %union.anon* %30 to i8*
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  store i64 0, i64* %34, align 8, !tbaa !3
  store i8 0, i8* %32, align 8, !tbaa !11
  %35 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %37 = bitcast %"class.std::__cxx11::basic_string"* %8 to %union.anon**
  %38 = bitcast i64* %4 to i8*
  %39 = bitcast %union.anon* %36 to i8*
  %40 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 1
  %43 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 0
  %44 = bitcast %"class.std::__cxx11::basic_string"* %9 to i8*
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2
  %46 = bitcast %"class.std::__cxx11::basic_string"* %9 to %union.anon**
  %47 = bitcast i64* %3 to i8*
  %48 = bitcast %union.anon* %45 to i8*
  %49 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 2, i32 0
  %51 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 0, i32 1
  %52 = bitcast i64* %42 to <2 x i64>*
  %53 = bitcast i64* %34 to <2 x i64>*
  %54 = bitcast i64* %51 to <2 x i64>*
  %55 = bitcast i64* %34 to <2 x i64>*
  br label %70

56:                                               ; preds = %198
  %57 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %58 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %57, %union.anon** %58, align 8, !tbaa !10
  %59 = load i8*, i8** %33, align 8, !tbaa !12
  %60 = icmp eq i8* %59, %32
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  %62 = bitcast %union.anon* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %62, i8* noundef nonnull align 8 dereferenceable(16) %32, i64 16, i1 false) #6
  br label %67

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %59, i8** %64, align 8, !tbaa !12
  %65 = load i64, i64* %43, align 8, !tbaa !11
  %66 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %65, i64* %66, align 8, !tbaa !11
  br label %67

67:                                               ; preds = %61, %63
  %68 = load i64, i64* %34, align 8, !tbaa !3
  %69 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %68, i64* %69, align 8, !tbaa !3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #6
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %22) #6
  br label %214

70:                                               ; preds = %201, %21
  %71 = phi i64 [ 0, %21 ], [ %203, %201 ]
  %72 = phi i8* [ %32, %21 ], [ %202, %201 ]
  %73 = phi i64 [ 0, %21 ], [ %199, %201 ]
  %74 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 %73
  %75 = load i8, i8* %74, align 1, !tbaa !11
  %76 = icmp ult i8 %75, -96
  %77 = lshr i8 %75, 4
  %78 = or i8 %77, 48
  %79 = add nuw nsw i8 %77, 87
  %80 = select i1 %76, i8 %78, i8 %79
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #6
  call void @llvm.experimental.noalias.scope.decl(metadata !13)
  store %union.anon* %36, %union.anon** %37, align 8, !tbaa !10, !alias.scope !13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #6, !noalias !13
  store i64 %71, i64* %4, align 8, !tbaa !16, !noalias !13
  %81 = icmp ugt i64 %71, 15
  br i1 %81, label %82, label %86

82:                                               ; preds = %70
  %83 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %84 unwind label %163

84:                                               ; preds = %82
  store i8* %83, i8** %40, align 8, !tbaa !12, !alias.scope !13
  %85 = load i64, i64* %4, align 8, !tbaa !16, !noalias !13
  store i64 %85, i64* %41, align 8, !tbaa !11, !alias.scope !13
  br label %86

86:                                               ; preds = %70, %84
  %87 = phi i8* [ %83, %84 ], [ %39, %70 ]
  switch i64 %71, label %90 [
    i64 1, label %88
    i64 0, label %91
  ]

88:                                               ; preds = %86
  %89 = load i8, i8* %72, align 1, !tbaa !11
  store i8 %89, i8* %87, align 1, !tbaa !11
  br label %91

90:                                               ; preds = %86
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %72, i64 %71, i1 false) #6
  br label %91

91:                                               ; preds = %90, %88, %86
  %92 = load i64, i64* %4, align 8, !tbaa !16, !noalias !13
  store i64 %92, i64* %42, align 8, !tbaa !3, !alias.scope !13
  %93 = load i8*, i8** %40, align 8, !tbaa !12, !alias.scope !13
  %94 = getelementptr inbounds i8, i8* %93, i64 %92
  store i8 0, i8* %94, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #6, !noalias !13
  %95 = load i64, i64* %42, align 8, !tbaa !3, !alias.scope !13
  %96 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64 %95, i64 0, i64 1, i8 signext %80)
          to label %102 unwind label %97

97:                                               ; preds = %91
  %98 = landingpad { i8*, i32 }
          cleanup
  %99 = load i8*, i8** %40, align 8, !tbaa !12, !alias.scope !13
  %100 = icmp eq i8* %99, %39
  br i1 %100, label %165, label %101

101:                                              ; preds = %97
  call void @_ZdlPv(i8* %99) #6
  br label %165

102:                                              ; preds = %91
  %103 = load i8*, i8** %40, align 8, !tbaa !12
  %104 = icmp eq i8* %103, %39
  br i1 %104, label %105, label %119

105:                                              ; preds = %102
  %106 = load i64, i64* %42, align 8, !tbaa !3
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %114, label %108

108:                                              ; preds = %105
  %109 = load i8*, i8** %33, align 8, !tbaa !12
  %110 = icmp eq i64 %106, 1
  br i1 %110, label %111, label %113

111:                                              ; preds = %108
  %112 = load i8, i8* %39, align 8, !tbaa !11
  store i8 %112, i8* %109, align 1, !tbaa !11
  br label %114

113:                                              ; preds = %108
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %109, i8* nonnull align 8 %39, i64 %106, i1 false) #6
  br label %114

114:                                              ; preds = %113, %111, %105
  %115 = load i64, i64* %42, align 8, !tbaa !3
  store i64 %115, i64* %34, align 8, !tbaa !3
  %116 = load i8*, i8** %33, align 8, !tbaa !12
  %117 = getelementptr inbounds i8, i8* %116, i64 %115
  store i8 0, i8* %117, align 1, !tbaa !11
  %118 = load i8*, i8** %40, align 8, !tbaa !12
  br label %128

119:                                              ; preds = %102
  %120 = load i8*, i8** %33, align 8, !tbaa !12
  %121 = icmp eq i8* %120, %32
  %122 = load i64, i64* %43, align 8
  store i8* %103, i8** %33, align 8, !tbaa !12
  %123 = load <2 x i64>, <2 x i64>* %52, align 8, !tbaa !11
  store <2 x i64> %123, <2 x i64>* %53, align 8, !tbaa !11
  %124 = icmp eq i8* %120, null
  %125 = or i1 %121, %124
  br i1 %125, label %127, label %126

126:                                              ; preds = %119
  store i8* %120, i8** %40, align 8, !tbaa !12
  store i64 %122, i64* %41, align 8, !tbaa !11
  br label %128

127:                                              ; preds = %119
  store %union.anon* %36, %union.anon** %37, align 8, !tbaa !12
  br label %128

128:                                              ; preds = %114, %126, %127
  %129 = phi i8* [ %120, %126 ], [ %39, %127 ], [ %118, %114 ]
  store i64 0, i64* %42, align 8, !tbaa !3
  store i8 0, i8* %129, align 1, !tbaa !11
  %130 = load i8*, i8** %40, align 8, !tbaa !12
  %131 = icmp eq i8* %130, %39
  br i1 %131, label %133, label %132

132:                                              ; preds = %128
  call void @_ZdlPv(i8* %130) #6
  br label %133

133:                                              ; preds = %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #6
  %134 = load i8, i8* %74, align 1, !tbaa !11
  %135 = and i8 %134, 15
  %136 = icmp ult i8 %135, 10
  %137 = or i8 %135, 48
  %138 = add nuw nsw i8 %135, 87
  %139 = select i1 %136, i8 %137, i8 %138
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #6
  call void @llvm.experimental.noalias.scope.decl(metadata !17)
  store %union.anon* %45, %union.anon** %46, align 8, !tbaa !10, !alias.scope !17
  %140 = load i8*, i8** %33, align 8, !tbaa !12, !noalias !17
  %141 = load i64, i64* %34, align 8, !tbaa !3, !noalias !17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #6, !noalias !17
  store i64 %141, i64* %3, align 8, !tbaa !16, !noalias !17
  %142 = icmp ugt i64 %141, 15
  br i1 %142, label %143, label %147

143:                                              ; preds = %133
  %144 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %9, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %145 unwind label %204

145:                                              ; preds = %143
  store i8* %144, i8** %49, align 8, !tbaa !12, !alias.scope !17
  %146 = load i64, i64* %3, align 8, !tbaa !16, !noalias !17
  store i64 %146, i64* %50, align 8, !tbaa !11, !alias.scope !17
  br label %147

147:                                              ; preds = %133, %145
  %148 = phi i8* [ %144, %145 ], [ %48, %133 ]
  switch i64 %141, label %151 [
    i64 1, label %149
    i64 0, label %152
  ]

149:                                              ; preds = %147
  %150 = load i8, i8* %140, align 1, !tbaa !11
  store i8 %150, i8* %148, align 1, !tbaa !11
  br label %152

151:                                              ; preds = %147
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %148, i8* align 1 %140, i64 %141, i1 false) #6
  br label %152

152:                                              ; preds = %151, %149, %147
  %153 = load i64, i64* %3, align 8, !tbaa !16, !noalias !17
  store i64 %153, i64* %51, align 8, !tbaa !3, !alias.scope !17
  %154 = load i8*, i8** %49, align 8, !tbaa !12, !alias.scope !17
  %155 = getelementptr inbounds i8, i8* %154, i64 %153
  store i8 0, i8* %155, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #6, !noalias !17
  %156 = load i64, i64* %51, align 8, !tbaa !3, !alias.scope !17
  %157 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %9, i64 %156, i64 0, i64 1, i8 signext %139)
          to label %167 unwind label %158

158:                                              ; preds = %152
  %159 = landingpad { i8*, i32 }
          cleanup
  %160 = load i8*, i8** %49, align 8, !tbaa !12, !alias.scope !17
  %161 = icmp eq i8* %160, %48
  br i1 %161, label %206, label %162

162:                                              ; preds = %158
  call void @_ZdlPv(i8* %160) #6
  br label %206

163:                                              ; preds = %82
  %164 = landingpad { i8*, i32 }
          cleanup
  br label %165

165:                                              ; preds = %97, %101, %163
  %166 = phi { i8*, i32 } [ %164, %163 ], [ %98, %101 ], [ %98, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #6
  br label %208

167:                                              ; preds = %152
  %168 = load i8*, i8** %49, align 8, !tbaa !12
  %169 = icmp eq i8* %168, %48
  br i1 %169, label %170, label %184

170:                                              ; preds = %167
  %171 = load i64, i64* %51, align 8, !tbaa !3
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %179, label %173

173:                                              ; preds = %170
  %174 = load i8*, i8** %33, align 8, !tbaa !12
  %175 = icmp eq i64 %171, 1
  br i1 %175, label %176, label %178

176:                                              ; preds = %173
  %177 = load i8, i8* %48, align 8, !tbaa !11
  store i8 %177, i8* %174, align 1, !tbaa !11
  br label %179

178:                                              ; preds = %173
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %174, i8* nonnull align 8 %48, i64 %171, i1 false) #6
  br label %179

179:                                              ; preds = %178, %176, %170
  %180 = load i64, i64* %51, align 8, !tbaa !3
  store i64 %180, i64* %34, align 8, !tbaa !3
  %181 = load i8*, i8** %33, align 8, !tbaa !12
  %182 = getelementptr inbounds i8, i8* %181, i64 %180
  store i8 0, i8* %182, align 1, !tbaa !11
  %183 = load i8*, i8** %49, align 8, !tbaa !12
  br label %193

184:                                              ; preds = %167
  %185 = load i8*, i8** %33, align 8, !tbaa !12
  %186 = icmp eq i8* %185, %32
  %187 = load i64, i64* %43, align 8
  store i8* %168, i8** %33, align 8, !tbaa !12
  %188 = load <2 x i64>, <2 x i64>* %54, align 8, !tbaa !11
  store <2 x i64> %188, <2 x i64>* %55, align 8, !tbaa !11
  %189 = icmp eq i8* %185, null
  %190 = or i1 %186, %189
  br i1 %190, label %192, label %191

191:                                              ; preds = %184
  store i8* %185, i8** %49, align 8, !tbaa !12
  store i64 %187, i64* %50, align 8, !tbaa !11
  br label %193

192:                                              ; preds = %184
  store %union.anon* %45, %union.anon** %46, align 8, !tbaa !12
  br label %193

193:                                              ; preds = %179, %191, %192
  %194 = phi i8* [ %185, %191 ], [ %48, %192 ], [ %183, %179 ]
  store i64 0, i64* %51, align 8, !tbaa !3
  store i8 0, i8* %194, align 1, !tbaa !11
  %195 = load i8*, i8** %49, align 8, !tbaa !12
  %196 = icmp eq i8* %195, %48
  br i1 %196, label %198, label %197

197:                                              ; preds = %193
  call void @_ZdlPv(i8* %195) #6
  br label %198

198:                                              ; preds = %193, %197
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #6
  %199 = add nuw nsw i64 %73, 1
  %200 = icmp eq i64 %199, 16
  br i1 %200, label %56, label %201, !llvm.loop !20

201:                                              ; preds = %198
  %202 = load i8*, i8** %33, align 8, !tbaa !12, !noalias !13
  %203 = load i64, i64* %34, align 8, !tbaa !3, !noalias !13
  br label %70

204:                                              ; preds = %143
  %205 = landingpad { i8*, i32 }
          cleanup
  br label %206

206:                                              ; preds = %158, %162, %204
  %207 = phi { i8*, i32 } [ %205, %204 ], [ %159, %162 ], [ %159, %158 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #6
  br label %208

208:                                              ; preds = %206, %165
  %209 = phi { i8*, i32 } [ %207, %206 ], [ %166, %165 ]
  %210 = load i8*, i8** %33, align 8, !tbaa !12
  %211 = icmp eq i8* %210, %32
  br i1 %211, label %213, label %212

212:                                              ; preds = %208
  call void @_ZdlPv(i8* %210) #6
  br label %213

213:                                              ; preds = %212, %208
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #6
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %22) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  resume { i8*, i32 } %209

214:                                              ; preds = %67, %14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @MD5_Init(%struct.MD5state_st*) local_unnamed_addr #2

declare dso_local i32 @MD5_Update(%struct.MD5state_st*, i8*, i64) local_unnamed_addr #2

declare dso_local i32 @MD5_Final(i8*, %struct.MD5state_st*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #2

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #2

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #5

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #5 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!5, !6, i64 0}
!11 = !{!7, !7, i64 0}
!12 = !{!4, !6, i64 0}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!15 = distinct !{!15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!16 = !{!9, !9, i64 0}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!19 = distinct !{!19, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.mustprogress"}
