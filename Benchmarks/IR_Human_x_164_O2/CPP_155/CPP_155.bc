; ModuleID = '../../Human_xBenchmarks_164/CPP_155/CPP_155.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_155/CPP_155.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z = comdat any

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1

; Function Attrs: uwtable
define dso_local void @_Z14even_odd_counti(%"class.std::vector"* noalias nocapture sret(%"class.std::vector") align 8 %0, i32 %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #11
  %5 = tail call i32 @llvm.abs.i32(i32 %1, i1 true)
  call void (%"class.std::__cxx11::basic_string"*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i64, i8*, ...) @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %3, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* nonnull @vsnprintf, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %5)
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  %7 = load i64, i64* %6, align 8, !tbaa !3
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i64 %7, 0
  br i1 %10, label %53, label %11

11:                                               ; preds = %2
  %12 = icmp ult i64 %7, 8
  br i1 %12, label %49, label %13

13:                                               ; preds = %11
  %14 = and i64 %7, -8
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %41, %15 ]
  %17 = phi <4 x i32> [ zeroinitializer, %13 ], [ %39, %15 ]
  %18 = phi <4 x i32> [ zeroinitializer, %13 ], [ %40, %15 ]
  %19 = phi <4 x i32> [ zeroinitializer, %13 ], [ %35, %15 ]
  %20 = phi <4 x i32> [ zeroinitializer, %13 ], [ %36, %15 ]
  %21 = getelementptr inbounds i8, i8* %9, i64 %16
  %22 = bitcast i8* %21 to <4 x i8>*
  %23 = load <4 x i8>, <4 x i8>* %22, align 1, !tbaa !10
  %24 = getelementptr inbounds i8, i8* %21, i64 4
  %25 = bitcast i8* %24 to <4 x i8>*
  %26 = load <4 x i8>, <4 x i8>* %25, align 1, !tbaa !10
  %27 = srem <4 x i8> %23, <i8 2, i8 2, i8 2, i8 2>
  %28 = srem <4 x i8> %26, <i8 2, i8 2, i8 2, i8 2>
  %29 = icmp eq <4 x i8> %27, <i8 1, i8 1, i8 1, i8 1>
  %30 = icmp eq <4 x i8> %28, <i8 1, i8 1, i8 1, i8 1>
  %31 = xor <4 x i1> %29, <i1 true, i1 true, i1 true, i1 true>
  %32 = xor <4 x i1> %30, <i1 true, i1 true, i1 true, i1 true>
  %33 = zext <4 x i1> %31 to <4 x i32>
  %34 = zext <4 x i1> %32 to <4 x i32>
  %35 = add <4 x i32> %19, %33
  %36 = add <4 x i32> %20, %34
  %37 = zext <4 x i1> %29 to <4 x i32>
  %38 = zext <4 x i1> %30 to <4 x i32>
  %39 = add <4 x i32> %17, %37
  %40 = add <4 x i32> %18, %38
  %41 = add nuw i64 %16, 8
  %42 = icmp eq i64 %41, %14
  br i1 %42, label %43, label %15, !llvm.loop !11

43:                                               ; preds = %15
  %44 = add <4 x i32> %36, %35
  %45 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %44)
  %46 = add <4 x i32> %40, %39
  %47 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %46)
  %48 = icmp eq i64 %7, %14
  br i1 %48, label %53, label %49

49:                                               ; preds = %11, %43
  %50 = phi i64 [ 0, %11 ], [ %14, %43 ]
  %51 = phi i32 [ 0, %11 ], [ %47, %43 ]
  %52 = phi i32 [ 0, %11 ], [ %45, %43 ]
  br label %58

53:                                               ; preds = %58, %43, %2
  %54 = phi i32 [ 0, %2 ], [ %45, %43 ], [ %68, %58 ]
  %55 = phi i32 [ 0, %2 ], [ %47, %43 ], [ %70, %58 ]
  %56 = bitcast %"class.std::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %56, i8 0, i64 24, i1 false) #11
  %57 = invoke noalias nonnull i8* @_Znwm(i64 8) #12
          to label %73 unwind label %89

58:                                               ; preds = %49, %58
  %59 = phi i64 [ %71, %58 ], [ %50, %49 ]
  %60 = phi i32 [ %70, %58 ], [ %51, %49 ]
  %61 = phi i32 [ %68, %58 ], [ %52, %49 ]
  %62 = getelementptr inbounds i8, i8* %9, i64 %59
  %63 = load i8, i8* %62, align 1, !tbaa !10
  %64 = srem i8 %63, 2
  %65 = icmp eq i8 %64, 1
  %66 = xor i1 %65, true
  %67 = zext i1 %66 to i32
  %68 = add nuw nsw i32 %61, %67
  %69 = zext i1 %65 to i32
  %70 = add nuw nsw i32 %60, %69
  %71 = add nuw nsw i64 %59, 1
  %72 = icmp eq i64 %71, %7
  br i1 %72, label %53, label %58, !llvm.loop !14

73:                                               ; preds = %53
  %74 = bitcast i8* %57 to i32*
  %75 = bitcast %"class.std::vector"* %0 to i8**
  store i8* %57, i8** %75, align 8, !tbaa !16
  %76 = getelementptr inbounds i8, i8* %57, i64 8
  %77 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %78 = bitcast i32** %77 to i8**
  store i8* %76, i8** %78, align 8, !tbaa !18
  store i32 %54, i32* %74, align 4
  %79 = getelementptr inbounds i8, i8* %57, i64 4
  %80 = bitcast i8* %79 to i32*
  store i32 %55, i32* %80, align 4
  %81 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %82 = bitcast i32** %81 to i8**
  store i8* %76, i8** %82, align 8, !tbaa !19
  %83 = load i8*, i8** %8, align 8, !tbaa !20
  %84 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %85 = bitcast %union.anon* %84 to i8*
  %86 = icmp eq i8* %83, %85
  br i1 %86, label %88, label %87

87:                                               ; preds = %73
  call void @_ZdlPv(i8* %83) #11
  br label %88

88:                                               ; preds = %73, %87
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #11
  ret void

89:                                               ; preds = %53
  %90 = landingpad { i8*, i32 }
          cleanup
  %91 = load i8*, i8** %8, align 8, !tbaa !20
  %92 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %93 = bitcast %union.anon* %92 to i8*
  %94 = icmp eq i8* %91, %93
  br i1 %94, label %96, label %95

95:                                               ; preds = %89
  call void @_ZdlPv(i8* %91) #11
  br label %96

96:                                               ; preds = %89, %95
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #11
  resume { i8*, i32 } %90
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* %1, i64 %2, i8* %3, ...) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca i64, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = alloca i8, i64 %2, align 16
  %8 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %8)
  %10 = call i32 %1(i8* nonnull %7, i64 %2, i8* %3, %struct.__va_list_tag* nonnull %9)
  call void @llvm.va_end(i8* nonnull %8)
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %12, %union.anon** %13, align 8, !tbaa !21
  %14 = bitcast %union.anon* %12 to i8*
  %15 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  store i64 %11, i64* %5, align 8, !tbaa !22
  %16 = icmp ugt i32 %10, 15
  br i1 %16, label %17, label %22

17:                                               ; preds = %4
  %18 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i64* nonnull align 8 dereferenceable(8) %5, i64 0)
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8, !tbaa !20
  %20 = load i64, i64* %5, align 8, !tbaa !22
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %20, i64* %21, align 8, !tbaa !10
  br label %22

22:                                               ; preds = %17, %4
  %23 = phi i8* [ %18, %17 ], [ %14, %4 ]
  switch i64 %11, label %26 [
    i64 1, label %24
    i64 0, label %27
  ]

24:                                               ; preds = %22
  %25 = load i8, i8* %7, align 16, !tbaa !10
  store i8 %25, i8* %23, align 1, !tbaa !10
  br label %27

26:                                               ; preds = %22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* nonnull align 16 %7, i64 %11, i1 false) #11
  br label %27

27:                                               ; preds = %26, %24, %22
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %29 = load i64, i64* %5, align 8, !tbaa !22
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %29, i64* %30, align 8, !tbaa !3
  %31 = load i8*, i8** %28, align 8, !tbaa !20
  %32 = getelementptr inbounds i8, i8* %31, i64 %29
  store i8 0, i8* %32, align 1, !tbaa !10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @vsnprintf(i8* nocapture noundef, i64 noundef, i8* nocapture noundef readonly, %struct.__va_list_tag* noundef) #2

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #3

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #3

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #8

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #10

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nofree nosync nounwind willreturn }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #6 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #9 = { argmemonly nofree nounwind willreturn writeonly }
attributes #10 = { nofree nosync nounwind readnone willreturn }
attributes #11 = { nounwind }
attributes #12 = { allocsize(0) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!7, !7, i64 0}
!11 = distinct !{!11, !12, !13}
!12 = !{!"llvm.loop.mustprogress"}
!13 = !{!"llvm.loop.isvectorized", i32 1}
!14 = distinct !{!14, !12, !15, !13}
!15 = !{!"llvm.loop.unroll.runtime.disable"}
!16 = !{!17, !6, i64 0}
!17 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
!18 = !{!17, !6, i64 16}
!19 = !{!17, !6, i64 8}
!20 = !{!4, !6, i64 0}
!21 = !{!5, !6, i64 0}
!22 = !{!9, !9, i64 0}
