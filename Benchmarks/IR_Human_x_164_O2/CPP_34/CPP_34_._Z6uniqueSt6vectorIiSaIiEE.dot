digraph "CFG for '_Z6uniqueSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z6uniqueSt6vectorIiSaIiEE' function";

	Node0x55acb4a55570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %6 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %7 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %8 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %8, i8 0, i64 24, i1 false)\l  %9 = load i32*, i32** %3, align 8, !tbaa !3\l  %10 = load i32*, i32** %4, align 8, !tbaa !8\l  %11 = icmp eq i32* %9, %10\l  br i1 %11, label %121, label %23\l|{<s0>T|<s1>F}}"];
	Node0x55acb4a55570:s0 -> Node0x55acb4a57430;
	Node0x55acb4a55570:s1 -> Node0x55acb4a574c0;
	Node0x55acb4a57600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%12:\l12:                                               \l  %13 = icmp eq i32* %117, %118\l  br i1 %13, label %121, label %14\l|{<s0>T|<s1>F}}"];
	Node0x55acb4a57600:s0 -> Node0x55acb4a57430;
	Node0x55acb4a57600:s1 -> Node0x55acb4a57790;
	Node0x55acb4a57790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%14:\l14:                                               \l  %15 = ptrtoint i32* %118 to i64\l  %16 = ptrtoint i32* %117 to i64\l  %17 = sub i64 %15, %16\l  %18 = ashr exact i64 %17, 2\l  %19 = tail call i64 @llvm.ctlz.i64(i64 %18, i1 true) #7, !range !9\l  %20 = shl nuw nsw i64 %19, 1\l  %21 = xor i64 %20, 126\l  invoke void\l... @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElN\l...S0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i32* %117, i32* %118, i64 %21)\l          to label %22 unwind label %119\l}"];
	Node0x55acb4a57790 -> Node0x55acb4a57ff0;
	Node0x55acb4a57790 -> Node0x55acb4a58080;
	Node0x55acb4a57ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%22:\l22:                                               \l  invoke void\l... @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIi\l...EEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* %117, i32* %118)\l          to label %121 unwind label %119\l}"];
	Node0x55acb4a57ff0 -> Node0x55acb4a57430;
	Node0x55acb4a57ff0 -> Node0x55acb4a58080;
	Node0x55acb4a574c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%23:\l23:                                               \l  %24 = phi i32* [ %109, %108 ], [ %10, %2 ]\l  %25 = phi i32* [ %110, %108 ], [ %9, %2 ]\l  %26 = phi i32* [ %118, %108 ], [ null, %2 ]\l  %27 = phi i32* [ %117, %108 ], [ null, %2 ]\l  %28 = phi i64 [ %111, %108 ], [ 0, %2 ]\l  %29 = getelementptr inbounds i32, i32* %24, i64 %28\l  %30 = ptrtoint i32* %26 to i64\l  %31 = ptrtoint i32* %27 to i64\l  %32 = sub i64 %30, %31\l  %33 = icmp sgt i64 %32, 15\l  br i1 %33, label %34, label %61\l|{<s0>T|<s1>F}}"];
	Node0x55acb4a574c0:s0 -> Node0x55acb4a590e0;
	Node0x55acb4a574c0:s1 -> Node0x55acb4a59170;
	Node0x55acb4a590e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%34:\l34:                                               \l  %35 = lshr i64 %32, 4\l  %36 = load i32, i32* %29, align 4, !tbaa !10\l  br label %37\l}"];
	Node0x55acb4a590e0 -> Node0x55acb4a59420;
	Node0x55acb4a59420 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = phi i64 [ %35, %34 ], [ %56, %54 ]\l  %39 = phi i32* [ %27, %34 ], [ %55, %54 ]\l  %40 = load i32, i32* %39, align 4, !tbaa !10\l  %41 = icmp eq i32 %40, %36\l  br i1 %41, label %93, label %42\l|{<s0>T|<s1>F}}"];
	Node0x55acb4a59420:s0 -> Node0x55acb4a59ec0;
	Node0x55acb4a59420:s1 -> Node0x55acb4a59f50;
	Node0x55acb4a59f50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = getelementptr inbounds i32, i32* %39, i64 1\l  %44 = load i32, i32* %43, align 4, !tbaa !10\l  %45 = icmp eq i32 %44, %36\l  br i1 %45, label %91, label %46\l|{<s0>T|<s1>F}}"];
	Node0x55acb4a59f50:s0 -> Node0x55acb4a5a230;
	Node0x55acb4a59f50:s1 -> Node0x55acb4a5a280;
	Node0x55acb4a5a280 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = getelementptr inbounds i32, i32* %39, i64 2\l  %48 = load i32, i32* %47, align 4, !tbaa !10\l  %49 = icmp eq i32 %48, %36\l  br i1 %49, label %89, label %50\l|{<s0>T|<s1>F}}"];
	Node0x55acb4a5a280:s0 -> Node0x55acb4a5a560;
	Node0x55acb4a5a280:s1 -> Node0x55acb4a5a5b0;
	Node0x55acb4a5a5b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = getelementptr inbounds i32, i32* %39, i64 3\l  %52 = load i32, i32* %51, align 4, !tbaa !10\l  %53 = icmp eq i32 %52, %36\l  br i1 %53, label %87, label %54\l|{<s0>T|<s1>F}}"];
	Node0x55acb4a5a5b0:s0 -> Node0x55acb4a5a8c0;
	Node0x55acb4a5a5b0:s1 -> Node0x55acb4a59550;
	Node0x55acb4a59550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%54:\l54:                                               \l  %55 = getelementptr inbounds i32, i32* %39, i64 4\l  %56 = add nsw i64 %38, -1\l  %57 = icmp sgt i64 %38, 1\l  br i1 %57, label %37, label %58, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x55acb4a59550:s0 -> Node0x55acb4a59420;
	Node0x55acb4a59550:s1 -> Node0x55acb4a5ab80;
	Node0x55acb4a5ab80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%58:\l58:                                               \l  %59 = ptrtoint i32* %55 to i64\l  %60 = sub i64 %30, %59\l  br label %61\l}"];
	Node0x55acb4a5ab80 -> Node0x55acb4a59170;
	Node0x55acb4a59170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%61:\l61:                                               \l  %62 = phi i64 [ %60, %58 ], [ %32, %23 ]\l  %63 = phi i32* [ %55, %58 ], [ %27, %23 ]\l  %64 = ashr exact i64 %62, 2\l  switch i64 %64, label %96 [\l    i64 3, label %69\l    i64 2, label %67\l    i64 1, label %65\l  ]\l|{<s0>def|<s1>3|<s2>2|<s3>1}}"];
	Node0x55acb4a59170:s0 -> Node0x55acb4a5b490;
	Node0x55acb4a59170:s1 -> Node0x55acb4a5b4e0;
	Node0x55acb4a59170:s2 -> Node0x55acb4a5b530;
	Node0x55acb4a59170:s3 -> Node0x55acb4a5b5c0;
	Node0x55acb4a5b5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%65:\l65:                                               \l  %66 = load i32, i32* %29, align 4, !tbaa !10\l  br label %82\l}"];
	Node0x55acb4a5b5c0 -> Node0x55acb4a5b710;
	Node0x55acb4a5b530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%67:\l67:                                               \l  %68 = load i32, i32* %29, align 4, !tbaa !10\l  br label %75\l}"];
	Node0x55acb4a5b530 -> Node0x55acb4a5b840;
	Node0x55acb4a5b4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%69:\l69:                                               \l  %70 = load i32, i32* %63, align 4, !tbaa !10\l  %71 = load i32, i32* %29, align 4, !tbaa !10\l  %72 = icmp eq i32 %70, %71\l  br i1 %72, label %93, label %73\l|{<s0>T|<s1>F}}"];
	Node0x55acb4a5b4e0:s0 -> Node0x55acb4a59ec0;
	Node0x55acb4a5b4e0:s1 -> Node0x55acb4a5ba70;
	Node0x55acb4a5ba70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%73:\l73:                                               \l  %74 = getelementptr inbounds i32, i32* %63, i64 1\l  br label %75\l}"];
	Node0x55acb4a5ba70 -> Node0x55acb4a5b840;
	Node0x55acb4a5b840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%75:\l75:                                               \l  %76 = phi i32 [ %68, %67 ], [ %71, %73 ]\l  %77 = phi i32* [ %63, %67 ], [ %74, %73 ]\l  %78 = load i32, i32* %77, align 4, !tbaa !10\l  %79 = icmp eq i32 %78, %76\l  br i1 %79, label %93, label %80\l|{<s0>T|<s1>F}}"];
	Node0x55acb4a5b840:s0 -> Node0x55acb4a59ec0;
	Node0x55acb4a5b840:s1 -> Node0x55acb4a5bee0;
	Node0x55acb4a5bee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%80:\l80:                                               \l  %81 = getelementptr inbounds i32, i32* %77, i64 1\l  br label %82\l}"];
	Node0x55acb4a5bee0 -> Node0x55acb4a5b710;
	Node0x55acb4a5b710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%82:\l82:                                               \l  %83 = phi i32 [ %66, %65 ], [ %76, %80 ]\l  %84 = phi i32* [ %63, %65 ], [ %81, %80 ]\l  %85 = load i32, i32* %84, align 4, !tbaa !10\l  %86 = icmp eq i32 %85, %83\l  br i1 %86, label %93, label %96\l|{<s0>T|<s1>F}}"];
	Node0x55acb4a5b710:s0 -> Node0x55acb4a59ec0;
	Node0x55acb4a5b710:s1 -> Node0x55acb4a5b490;
	Node0x55acb4a5a8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%87:\l87:                                               \l  %88 = getelementptr inbounds i32, i32* %39, i64 3\l  br label %93\l}"];
	Node0x55acb4a5a8c0 -> Node0x55acb4a59ec0;
	Node0x55acb4a5a560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%89:\l89:                                               \l  %90 = getelementptr inbounds i32, i32* %39, i64 2\l  br label %93\l}"];
	Node0x55acb4a5a560 -> Node0x55acb4a59ec0;
	Node0x55acb4a5a230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%91:\l91:                                               \l  %92 = getelementptr inbounds i32, i32* %39, i64 1\l  br label %93\l}"];
	Node0x55acb4a5a230 -> Node0x55acb4a59ec0;
	Node0x55acb4a59ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%93:\l93:                                               \l  %94 = phi i32* [ %63, %69 ], [ %77, %75 ], [ %84, %82 ], [ %88, %87 ], [\l... %90, %89 ], [ %92, %91 ], [ %39, %37 ]\l  %95 = icmp eq i32* %94, %26\l  br i1 %95, label %96, label %108\l|{<s0>T|<s1>F}}"];
	Node0x55acb4a59ec0:s0 -> Node0x55acb4a5b490;
	Node0x55acb4a59ec0:s1 -> Node0x55acb4a58760;
	Node0x55acb4a5b490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%96:\l96:                                               \l  %97 = load i32*, i32** %7, align 8, !tbaa !14\l  %98 = icmp eq i32* %26, %97\l  br i1 %98, label %102, label %99\l|{<s0>T|<s1>F}}"];
	Node0x55acb4a5b490:s0 -> Node0x55acb4a5cb80;
	Node0x55acb4a5b490:s1 -> Node0x55acb4a5cbd0;
	Node0x55acb4a5cbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%99:\l99:                                               \l  %100 = load i32, i32* %29, align 4, !tbaa !10\l  store i32 %100, i32* %26, align 4, !tbaa !10\l  %101 = getelementptr inbounds i32, i32* %26, i64 1\l  store i32* %101, i32** %6, align 8, !tbaa !3\l  br label %108\l}"];
	Node0x55acb4a5cbd0 -> Node0x55acb4a58760;
	Node0x55acb4a5cb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%102:\l102:                                              \l  invoke void\l... @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iterato\l...rIPiS1_EEDpOT_(%\"class.std::vector\"* nonnull align 8 dereferenceable(24) %0,\l... i32* %26, i32* nonnull align 4 dereferenceable(4) %29)\l          to label %103 unwind label %106\l}"];
	Node0x55acb4a5cb80 -> Node0x55acb4a5d690;
	Node0x55acb4a5cb80 -> Node0x55acb4a5d6e0;
	Node0x55acb4a5d690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%103:\l103:                                              \l  %104 = load i32*, i32** %3, align 8, !tbaa !3\l  %105 = load i32*, i32** %4, align 8, !tbaa !8\l  br label %108\l}"];
	Node0x55acb4a5d690 -> Node0x55acb4a58760;
	Node0x55acb4a5d6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%106:\l106:                                              \l  %107 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %122\l}"];
	Node0x55acb4a5d6e0 -> Node0x55acb4a5e140;
	Node0x55acb4a58760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%108:\l108:                                              \l  %109 = phi i32* [ %105, %103 ], [ %24, %99 ], [ %24, %93 ]\l  %110 = phi i32* [ %104, %103 ], [ %25, %99 ], [ %25, %93 ]\l  %111 = add nuw i64 %28, 1\l  %112 = ptrtoint i32* %110 to i64\l  %113 = ptrtoint i32* %109 to i64\l  %114 = sub i64 %112, %113\l  %115 = ashr exact i64 %114, 2\l  %116 = icmp ugt i64 %115, %111\l  %117 = load i32*, i32** %5, align 8, !tbaa !15\l  %118 = load i32*, i32** %6, align 8, !tbaa !15\l  br i1 %116, label %23, label %12, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x55acb4a58760:s0 -> Node0x55acb4a574c0;
	Node0x55acb4a58760:s1 -> Node0x55acb4a57600;
	Node0x55acb4a58080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%119:\l119:                                              \l  %120 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %122\l}"];
	Node0x55acb4a58080 -> Node0x55acb4a5e140;
	Node0x55acb4a57430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%121:\l121:                                              \l  ret void\l}"];
	Node0x55acb4a5e140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%122:\l122:                                              \l  %123 = phi \{ i8*, i32 \} [ %120, %119 ], [ %107, %106 ]\l  %124 = load i32*, i32** %5, align 8, !tbaa !8\l  %125 = icmp eq i32* %124, null\l  br i1 %125, label %128, label %126\l|{<s0>T|<s1>F}}"];
	Node0x55acb4a5e140:s0 -> Node0x55acb4a5f220;
	Node0x55acb4a5e140:s1 -> Node0x55acb4a5f270;
	Node0x55acb4a5f270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%126:\l126:                                              \l  %127 = bitcast i32* %124 to i8*\l  tail call void @_ZdlPv(i8* nonnull %127) #7\l  br label %128\l}"];
	Node0x55acb4a5f270 -> Node0x55acb4a5f220;
	Node0x55acb4a5f220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%128:\l128:                                              \l  resume \{ i8*, i32 \} %123\l}"];
}
