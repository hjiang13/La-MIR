digraph "CFG for '_Z11count_upperNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function" {
	label="CFG for '_Z11count_upperNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function";

	Node0x556521866c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%1:\l  %2 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %3 = bitcast %\"class.std::__cxx11::basic_string\"* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #3\l  %4 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 2\l  %5 = bitcast %\"class.std::__cxx11::basic_string\"* %2 to %union.anon**\l  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !3\l  %6 = bitcast %union.anon* %4 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(5) %6, i8* noundef nonnull align 1 dereferenceable(5)\l... getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5, i1\l... false) #3\l  %7 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 1\l  store i64 5, i64* %7, align 8, !tbaa !8\l  %8 = getelementptr inbounds i8, i8* %6, i64 5\l  store i8 0, i8* %8, align 1, !tbaa !11\l  %9 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  %10 = load i64, i64* %9, align 8, !tbaa !8\l  %11 = icmp eq i64 %10, 0\l  br i1 %11, label %21, label %12\l|{<s0>T|<s1>F}}"];
	Node0x556521866c20:s0 -> Node0x556521868180;
	Node0x556521866c20:s1 -> Node0x55652186a000;
	Node0x55652186a000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%12:\l12:                                               \l  %13 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %14 = load i8*, i8** %13, align 8, !tbaa !12\l  %15 = add i64 %10, -1\l  %16 = lshr i64 %15, 1\l  %17 = bitcast %union.anon* %4 to \<4 x i8\>*\l  %18 = load \<4 x i8\>, \<4 x i8\>* %17, align 8\l  %19 = getelementptr inbounds i8, i8* %6, i64 4\l  %20 = load i8, i8* %19, align 4\l  br label %23\l}"];
	Node0x55652186a000 -> Node0x55652186ac70;
	Node0x556521868180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%21:\l21:                                               \l  %22 = phi i32 [ 0, %1 ], [ %41, %39 ]\l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #3\l  ret i32 %22\l}"];
	Node0x55652186ac70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi i64 [ 0, %12 ], [ %42, %39 ]\l  %25 = phi i64 [ 0, %12 ], [ %43, %39 ]\l  %26 = phi i32 [ 0, %12 ], [ %41, %39 ]\l  %27 = getelementptr inbounds i8, i8* %14, i64 %25\l  %28 = load i8, i8* %27, align 1, !tbaa !11\l  %29 = insertelement \<4 x i8\> poison, i8 %28, i32 0\l  %30 = shufflevector \<4 x i8\> %29, \<4 x i8\> poison, \<4 x i32\> zeroinitializer\l  %31 = icmp eq \<4 x i8\> %18, %30\l  %32 = freeze \<4 x i1\> %31\l  %33 = bitcast \<4 x i1\> %32 to i4\l  %34 = icmp eq i4 %33, 0\l  br i1 %34, label %35, label %39\l|{<s0>T|<s1>F}}"];
	Node0x55652186ac70:s0 -> Node0x55652186cd10;
	Node0x55652186ac70:s1 -> Node0x55652186ada0;
	Node0x55652186cd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%35:\l35:                                               \l  %36 = load i8, i8* %27, align 1, !tbaa !11\l  %37 = icmp eq i8 %20, %36\l  %38 = zext i1 %37 to i32\l  br label %39\l}"];
	Node0x55652186cd10 -> Node0x55652186ada0;
	Node0x55652186ada0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi i32 [ 1, %23 ], [ %38, %35 ]\l  %41 = add nuw nsw i32 %26, %40\l  %42 = add nuw nsw i64 %24, 1\l  %43 = shl nuw nsw i64 %42, 1\l  %44 = icmp eq i64 %24, %16\l  br i1 %44, label %21, label %23, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x55652186ada0:s0 -> Node0x556521868180;
	Node0x55652186ada0:s1 -> Node0x55652186ac70;
}
