digraph "CFG for '_Z8digitSumNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function" {
	label="CFG for '_Z8digitSumNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function";

	Node0x556c16c02d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%1:\l  %2 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  %3 = load i64, i64* %2, align 8, !tbaa !3\l  %4 = icmp eq i64 %3, 0\l  br i1 %4, label %92, label %5\l|{<s0>T|<s1>F}}"];
	Node0x556c16c02d80:s0 -> Node0x556c16c047d0;
	Node0x556c16c02d80:s1 -> Node0x556c16c04860;
	Node0x556c16c04860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%5:\l5:                                                \l  %6 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %7 = load i8*, i8** %6, align 8, !tbaa !10\l  %8 = icmp ult i64 %3, 8\l  br i1 %8, label %89, label %9\l|{<s0>T|<s1>F}}"];
	Node0x556c16c04860:s0 -> Node0x556c16c04780;
	Node0x556c16c04860:s1 -> Node0x556c16c04c60;
	Node0x556c16c04c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%9:\l9:                                                \l  %10 = and i64 %3, -8\l  %11 = add i64 %10, -8\l  %12 = lshr exact i64 %11, 3\l  %13 = add nuw nsw i64 %12, 1\l  %14 = and i64 %13, 1\l  %15 = icmp eq i64 %11, 0\l  br i1 %15, label %59, label %16\l|{<s0>T|<s1>F}}"];
	Node0x556c16c04c60:s0 -> Node0x556c16c05190;
	Node0x556c16c04c60:s1 -> Node0x556c16c051e0;
	Node0x556c16c051e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%16:\l16:                                               \l  %17 = and i64 %13, 4611686018427387902\l  br label %18\l}"];
	Node0x556c16c051e0 -> Node0x556c16c05370;
	Node0x556c16c05370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%18:\l18:                                               \l  %19 = phi i64 [ 0, %16 ], [ %56, %18 ]\l  %20 = phi \<4 x i32\> [ zeroinitializer, %16 ], [ %54, %18 ]\l  %21 = phi \<4 x i32\> [ zeroinitializer, %16 ], [ %55, %18 ]\l  %22 = phi i64 [ %17, %16 ], [ %57, %18 ]\l  %23 = getelementptr inbounds i8, i8* %7, i64 %19\l  %24 = bitcast i8* %23 to \<4 x i8\>*\l  %25 = load \<4 x i8\>, \<4 x i8\>* %24, align 1, !tbaa !11\l  %26 = getelementptr inbounds i8, i8* %23, i64 4\l  %27 = bitcast i8* %26 to \<4 x i8\>*\l  %28 = load \<4 x i8\>, \<4 x i8\>* %27, align 1, !tbaa !11\l  %29 = add \<4 x i8\> %25, \<i8 -65, i8 -65, i8 -65, i8 -65\>\l  %30 = add \<4 x i8\> %28, \<i8 -65, i8 -65, i8 -65, i8 -65\>\l  %31 = icmp ult \<4 x i8\> %29, \<i8 26, i8 26, i8 26, i8 26\>\l  %32 = icmp ult \<4 x i8\> %30, \<i8 26, i8 26, i8 26, i8 26\>\l  %33 = select \<4 x i1\> %31, \<4 x i8\> %25, \<4 x i8\> zeroinitializer\l  %34 = select \<4 x i1\> %32, \<4 x i8\> %28, \<4 x i8\> zeroinitializer\l  %35 = zext \<4 x i8\> %33 to \<4 x i32\>\l  %36 = zext \<4 x i8\> %34 to \<4 x i32\>\l  %37 = add \<4 x i32\> %20, %35\l  %38 = add \<4 x i32\> %21, %36\l  %39 = or i64 %19, 8\l  %40 = getelementptr inbounds i8, i8* %7, i64 %39\l  %41 = bitcast i8* %40 to \<4 x i8\>*\l  %42 = load \<4 x i8\>, \<4 x i8\>* %41, align 1, !tbaa !11\l  %43 = getelementptr inbounds i8, i8* %40, i64 4\l  %44 = bitcast i8* %43 to \<4 x i8\>*\l  %45 = load \<4 x i8\>, \<4 x i8\>* %44, align 1, !tbaa !11\l  %46 = add \<4 x i8\> %42, \<i8 -65, i8 -65, i8 -65, i8 -65\>\l  %47 = add \<4 x i8\> %45, \<i8 -65, i8 -65, i8 -65, i8 -65\>\l  %48 = icmp ult \<4 x i8\> %46, \<i8 26, i8 26, i8 26, i8 26\>\l  %49 = icmp ult \<4 x i8\> %47, \<i8 26, i8 26, i8 26, i8 26\>\l  %50 = select \<4 x i1\> %48, \<4 x i8\> %42, \<4 x i8\> zeroinitializer\l  %51 = select \<4 x i1\> %49, \<4 x i8\> %45, \<4 x i8\> zeroinitializer\l  %52 = zext \<4 x i8\> %50 to \<4 x i32\>\l  %53 = zext \<4 x i8\> %51 to \<4 x i32\>\l  %54 = add \<4 x i32\> %37, %52\l  %55 = add \<4 x i32\> %38, %53\l  %56 = add nuw i64 %19, 16\l  %57 = add i64 %22, -2\l  %58 = icmp eq i64 %57, 0\l  br i1 %58, label %59, label %18, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x556c16c05370:s0 -> Node0x556c16c05190;
	Node0x556c16c05370:s1 -> Node0x556c16c05370;
	Node0x556c16c05190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%59:\l59:                                               \l  %60 = phi \<4 x i32\> [ undef, %9 ], [ %54, %18 ]\l  %61 = phi \<4 x i32\> [ undef, %9 ], [ %55, %18 ]\l  %62 = phi i64 [ 0, %9 ], [ %56, %18 ]\l  %63 = phi \<4 x i32\> [ zeroinitializer, %9 ], [ %54, %18 ]\l  %64 = phi \<4 x i32\> [ zeroinitializer, %9 ], [ %55, %18 ]\l  %65 = icmp eq i64 %14, 0\l  br i1 %65, label %83, label %66\l|{<s0>T|<s1>F}}"];
	Node0x556c16c05190:s0 -> Node0x556c16c08f30;
	Node0x556c16c05190:s1 -> Node0x556c16c08f80;
	Node0x556c16c08f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%66:\l66:                                               \l  %67 = getelementptr inbounds i8, i8* %7, i64 %62\l  %68 = bitcast i8* %67 to \<4 x i8\>*\l  %69 = load \<4 x i8\>, \<4 x i8\>* %68, align 1, !tbaa !11\l  %70 = getelementptr inbounds i8, i8* %67, i64 4\l  %71 = bitcast i8* %70 to \<4 x i8\>*\l  %72 = load \<4 x i8\>, \<4 x i8\>* %71, align 1, !tbaa !11\l  %73 = add \<4 x i8\> %72, \<i8 -65, i8 -65, i8 -65, i8 -65\>\l  %74 = icmp ult \<4 x i8\> %73, \<i8 26, i8 26, i8 26, i8 26\>\l  %75 = select \<4 x i1\> %74, \<4 x i8\> %72, \<4 x i8\> zeroinitializer\l  %76 = zext \<4 x i8\> %75 to \<4 x i32\>\l  %77 = add \<4 x i32\> %64, %76\l  %78 = add \<4 x i8\> %69, \<i8 -65, i8 -65, i8 -65, i8 -65\>\l  %79 = icmp ult \<4 x i8\> %78, \<i8 26, i8 26, i8 26, i8 26\>\l  %80 = select \<4 x i1\> %79, \<4 x i8\> %69, \<4 x i8\> zeroinitializer\l  %81 = zext \<4 x i8\> %80 to \<4 x i32\>\l  %82 = add \<4 x i32\> %63, %81\l  br label %83\l}"];
	Node0x556c16c08f80 -> Node0x556c16c08f30;
	Node0x556c16c08f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%83:\l83:                                               \l  %84 = phi \<4 x i32\> [ %60, %59 ], [ %82, %66 ]\l  %85 = phi \<4 x i32\> [ %61, %59 ], [ %77, %66 ]\l  %86 = add \<4 x i32\> %85, %84\l  %87 = call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %86)\l  %88 = icmp eq i64 %3, %10\l  br i1 %88, label %92, label %89\l|{<s0>T|<s1>F}}"];
	Node0x556c16c08f30:s0 -> Node0x556c16c047d0;
	Node0x556c16c08f30:s1 -> Node0x556c16c04780;
	Node0x556c16c04780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%89:\l89:                                               \l  %90 = phi i64 [ 0, %5 ], [ %10, %83 ]\l  %91 = phi i32 [ 0, %5 ], [ %87, %83 ]\l  br label %94\l}"];
	Node0x556c16c04780 -> Node0x556c16c0a050;
	Node0x556c16c047d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%92:\l92:                                               \l  %93 = phi i32 [ 0, %1 ], [ %87, %83 ], [ %103, %94 ]\l  ret i32 %93\l}"];
	Node0x556c16c0a050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%94:\l94:                                               \l  %95 = phi i64 [ %104, %94 ], [ %90, %89 ]\l  %96 = phi i32 [ %103, %94 ], [ %91, %89 ]\l  %97 = getelementptr inbounds i8, i8* %7, i64 %95\l  %98 = load i8, i8* %97, align 1, !tbaa !11\l  %99 = add i8 %98, -65\l  %100 = icmp ult i8 %99, 26\l  %101 = select i1 %100, i8 %98, i8 0\l  %102 = zext i8 %101 to i32\l  %103 = add nuw nsw i32 %96, %102\l  %104 = add nuw nsw i64 %95, 1\l  %105 = icmp eq i64 %104, %3\l  br i1 %105, label %92, label %94, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x556c16c0a050:s0 -> Node0x556c16c047d0;
	Node0x556c16c0a050:s1 -> Node0x556c16c0a050;
}
