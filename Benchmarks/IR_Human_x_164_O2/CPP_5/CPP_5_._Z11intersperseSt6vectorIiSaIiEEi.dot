digraph "CFG for '_Z11intersperseSt6vectorIiSaIiEEi' function" {
	label="CFG for '_Z11intersperseSt6vectorIiSaIiEEi' function";

	Node0x560574dd0cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%3:\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %5 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %5, i8 0, i64 24, i1 false)\l  %6 = load i32*, i32** %4, align 8, !tbaa !3\l  %7 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %8 = load i32*, i32** %7, align 8, !tbaa !8\l  %9 = icmp eq i32* %6, %8\l  br i1 %9, label %16, label %10\l|{<s0>T|<s1>F}}"];
	Node0x560574dd0cc0:s0 -> Node0x560574dd14e0;
	Node0x560574dd0cc0:s1 -> Node0x560574dd2850;
	Node0x560574dd2850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%10:\l10:                                               \l  invoke void\l... @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iterato\l...rIPiS1_EEDpOT_(%\"class.std::vector\"* nonnull align 8 dereferenceable(24) %0,\l... i32* null, i32* nonnull align 4 dereferenceable(4) %8)\l          to label %11 unwind label %14\l}"];
	Node0x560574dd2850 -> Node0x560574dd2ac0;
	Node0x560574dd2850 -> Node0x560574dd2b10;
	Node0x560574dd2ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%11:\l11:                                               \l  %12 = load i32*, i32** %4, align 8, !tbaa !3\l  %13 = load i32*, i32** %7, align 8, !tbaa !8\l  br label %16\l}"];
	Node0x560574dd2ac0 -> Node0x560574dd14e0;
	Node0x560574dd2b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%14:\l14:                                               \l  %15 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %99\l}"];
	Node0x560574dd2b10 -> Node0x560574dd3e10;
	Node0x560574dd14e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%16:\l16:                                               \l  %17 = phi i32* [ %13, %11 ], [ %6, %3 ]\l  %18 = phi i32* [ %12, %11 ], [ %6, %3 ]\l  %19 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %20 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %21 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %22 = ptrtoint i32* %18 to i64\l  %23 = ptrtoint i32* %17 to i64\l  %24 = sub i64 %22, %23\l  %25 = ashr exact i64 %24, 2\l  %26 = icmp ugt i64 %25, 1\l  br i1 %26, label %27, label %98\l|{<s0>T|<s1>F}}"];
	Node0x560574dd14e0:s0 -> Node0x560574dd4620;
	Node0x560574dd14e0:s1 -> Node0x560574dd4670;
	Node0x560574dd4620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i32* [ %86, %85 ], [ %17, %16 ]\l  %29 = phi i64 [ %87, %85 ], [ 1, %16 ]\l  %30 = load i32*, i32** %19, align 8, !tbaa !3\l  %31 = load i32*, i32** %20, align 8, !tbaa !9\l  %32 = icmp eq i32* %30, %31\l  br i1 %32, label %35, label %33\l|{<s0>T|<s1>F}}"];
	Node0x560574dd4620:s0 -> Node0x560574dd4e80;
	Node0x560574dd4620:s1 -> Node0x560574dd4f10;
	Node0x560574dd4f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%33:\l33:                                               \l  store i32 %2, i32* %30, align 4, !tbaa !10\l  %34 = getelementptr inbounds i32, i32* %30, i64 1\l  store i32* %34, i32** %19, align 8, !tbaa !3\l  br label %73\l}"];
	Node0x560574dd4f10 -> Node0x560574dd52f0;
	Node0x560574dd4e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%35:\l35:                                               \l  %36 = load i32*, i32** %21, align 8, !tbaa !8\l  %37 = ptrtoint i32* %30 to i64\l  %38 = ptrtoint i32* %36 to i64\l  %39 = sub i64 %37, %38\l  %40 = ashr exact i64 %39, 2\l  %41 = icmp eq i64 %39, 9223372036854775804\l  br i1 %41, label %42, label %44\l|{<s0>T|<s1>F}}"];
	Node0x560574dd4e80:s0 -> Node0x560574dd5740;
	Node0x560574dd4e80:s1 -> Node0x560574dd5790;
	Node0x560574dd5740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%42:\l42:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #6\l          to label %43 unwind label %96\l}"];
	Node0x560574dd5740 -> Node0x560574dd5990;
	Node0x560574dd5740 -> Node0x560574dd59e0;
	Node0x560574dd5990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%43:\l43:                                               \l  unreachable\l}"];
	Node0x560574dd5790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%44:\l44:                                               \l  %45 = icmp eq i64 %39, 0\l  %46 = select i1 %45, i64 1, i64 %40\l  %47 = add nsw i64 %46, %40\l  %48 = icmp ult i64 %47, %40\l  %49 = icmp ugt i64 %47, 2305843009213693951\l  %50 = or i1 %48, %49\l  %51 = select i1 %50, i64 2305843009213693951, i64 %47\l  %52 = icmp eq i64 %51, 0\l  br i1 %52, label %58, label %53\l|{<s0>T|<s1>F}}"];
	Node0x560574dd5790:s0 -> Node0x560574dd6140;
	Node0x560574dd5790:s1 -> Node0x560574dd6190;
	Node0x560574dd6190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%53:\l53:                                               \l  %54 = shl nuw nsw i64 %51, 2\l  %55 = invoke noalias nonnull i8* @_Znwm(i64 %54) #7\l          to label %56 unwind label %94\l}"];
	Node0x560574dd6190 -> Node0x560574dd6320;
	Node0x560574dd6190 -> Node0x560574dd6370;
	Node0x560574dd6320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%56:\l56:                                               \l  %57 = bitcast i8* %55 to i32*\l  br label %58\l}"];
	Node0x560574dd6320 -> Node0x560574dd6140;
	Node0x560574dd6140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%58:\l58:                                               \l  %59 = phi i32* [ %57, %56 ], [ null, %44 ]\l  %60 = getelementptr inbounds i32, i32* %59, i64 %40\l  store i32 %2, i32* %60, align 4, !tbaa !10\l  %61 = icmp sgt i64 %39, 0\l  br i1 %61, label %62, label %65\l|{<s0>T|<s1>F}}"];
	Node0x560574dd6140:s0 -> Node0x560574dd6f40;
	Node0x560574dd6140:s1 -> Node0x560574dd6f90;
	Node0x560574dd6f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%62:\l62:                                               \l  %63 = bitcast i32* %59 to i8*\l  %64 = bitcast i32* %36 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %64,\l... i64 %39, i1 false) #8\l  br label %65\l}"];
	Node0x560574dd6f40 -> Node0x560574dd6f90;
	Node0x560574dd6f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%65:\l65:                                               \l  %66 = getelementptr inbounds i32, i32* %60, i64 1\l  %67 = icmp eq i32* %36, null\l  br i1 %67, label %70, label %68\l|{<s0>T|<s1>F}}"];
	Node0x560574dd6f90:s0 -> Node0x560574dd7a30;
	Node0x560574dd6f90:s1 -> Node0x560574dd7a80;
	Node0x560574dd7a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%68:\l68:                                               \l  %69 = bitcast i32* %36 to i8*\l  tail call void @_ZdlPv(i8* nonnull %69) #8\l  br label %70\l}"];
	Node0x560574dd7a80 -> Node0x560574dd7a30;
	Node0x560574dd7a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%70:\l70:                                               \l  store i32* %59, i32** %21, align 8, !tbaa !8\l  store i32* %66, i32** %19, align 8, !tbaa !3\l  %71 = getelementptr inbounds i32, i32* %59, i64 %51\l  store i32* %71, i32** %20, align 8, !tbaa !9\l  %72 = load i32*, i32** %7, align 8, !tbaa !8\l  br label %73\l}"];
	Node0x560574dd7a30 -> Node0x560574dd52f0;
	Node0x560574dd52f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  %74 = phi i32* [ %72, %70 ], [ %28, %33 ]\l  %75 = phi i32* [ %71, %70 ], [ %31, %33 ]\l  %76 = phi i32* [ %66, %70 ], [ %34, %33 ]\l  %77 = getelementptr inbounds i32, i32* %74, i64 %29\l  %78 = icmp eq i32* %76, %75\l  br i1 %78, label %82, label %79\l|{<s0>T|<s1>F}}"];
	Node0x560574dd52f0:s0 -> Node0x560574dd8b00;
	Node0x560574dd52f0:s1 -> Node0x560574dd8b50;
	Node0x560574dd8b50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%79:\l79:                                               \l  %80 = load i32, i32* %77, align 4, !tbaa !10\l  store i32 %80, i32* %76, align 4, !tbaa !10\l  %81 = getelementptr inbounds i32, i32* %76, i64 1\l  store i32* %81, i32** %19, align 8, !tbaa !3\l  br label %85\l}"];
	Node0x560574dd8b50 -> Node0x560574dd47a0;
	Node0x560574dd8b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%82:\l82:                                               \l  invoke void\l... @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iterato\l...rIPiS1_EEDpOT_(%\"class.std::vector\"* nonnull align 8 dereferenceable(24) %0,\l... i32* %75, i32* nonnull align 4 dereferenceable(4) %77)\l          to label %83 unwind label %94\l}"];
	Node0x560574dd8b00 -> Node0x560574dd8f60;
	Node0x560574dd8b00 -> Node0x560574dd6370;
	Node0x560574dd8f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%83:\l83:                                               \l  %84 = load i32*, i32** %7, align 8, !tbaa !8\l  br label %85\l}"];
	Node0x560574dd8f60 -> Node0x560574dd47a0;
	Node0x560574dd47a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  %86 = phi i32* [ %84, %83 ], [ %74, %79 ]\l  %87 = add nuw i64 %29, 1\l  %88 = load i32*, i32** %4, align 8, !tbaa !3\l  %89 = ptrtoint i32* %88 to i64\l  %90 = ptrtoint i32* %86 to i64\l  %91 = sub i64 %89, %90\l  %92 = ashr exact i64 %91, 2\l  %93 = icmp ugt i64 %92, %87\l  br i1 %93, label %27, label %98, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x560574dd47a0:s0 -> Node0x560574dd4620;
	Node0x560574dd47a0:s1 -> Node0x560574dd4670;
	Node0x560574dd6370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%94:\l94:                                               \l  %95 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %99\l}"];
	Node0x560574dd6370 -> Node0x560574dd3e10;
	Node0x560574dd59e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%96:\l96:                                               \l  %97 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %99\l}"];
	Node0x560574dd59e0 -> Node0x560574dd3e10;
	Node0x560574dd4670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%98:\l98:                                               \l  ret void\l}"];
	Node0x560574dd3e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%99:\l99:                                               \l  %100 = phi \{ i8*, i32 \} [ %15, %14 ], [ %95, %94 ], [ %97, %96 ]\l  %101 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 0\l  %102 = load i32*, i32** %101, align 8, !tbaa !8\l  %103 = icmp eq i32* %102, null\l  br i1 %103, label %106, label %104\l|{<s0>T|<s1>F}}"];
	Node0x560574dd3e10:s0 -> Node0x560574dd9c30;
	Node0x560574dd3e10:s1 -> Node0x560574dd9c80;
	Node0x560574dd9c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%104:\l104:                                              \l  %105 = bitcast i32* %102 to i8*\l  tail call void @_ZdlPv(i8* nonnull %105) #8\l  br label %106\l}"];
	Node0x560574dd9c80 -> Node0x560574dd9c30;
	Node0x560574dd9c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%106:\l106:                                              \l  resume \{ i8*, i32 \} %100\l}"];
}
