digraph "CFG for '_Z9factorizei' function" {
	label="CFG for '_Z9factorizei' function";

	Node0x5555fcc41fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %6 = icmp slt i32 %1, 4\l  %7 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %7, i8 0, i64 24, i1 false)\l  br i1 %6, label %12, label %51\l|{<s0>T|<s1>F}}"];
	Node0x5555fcc41fe0:s0 -> Node0x5555fcc42fb0;
	Node0x5555fcc41fe0:s1 -> Node0x5555fcc43000;
	Node0x5555fcc43140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%8:\l8:                                                \l  %9 = icmp eq i32* %112, %111\l  br i1 %9, label %12, label %10\l|{<s0>T|<s1>F}}"];
	Node0x5555fcc43140:s0 -> Node0x5555fcc42fb0;
	Node0x5555fcc43140:s1 -> Node0x5555fcc429b0;
	Node0x5555fcc429b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%10:\l10:                                               \l  store i32 %113, i32* %112, align 4, !tbaa !3\l  %11 = getelementptr inbounds i32, i32* %112, i64 1\l  store i32* %11, i32** %3, align 8, !tbaa !7\l  br label %120\l}"];
	Node0x5555fcc429b0 -> Node0x5555fcc442a0;
	Node0x5555fcc42fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%12:\l12:                                               \l  %13 = phi i32 [ %113, %8 ], [ %1, %2 ]\l  %14 = phi i32* [ %111, %8 ], [ null, %2 ]\l  %15 = phi i32* [ %110, %8 ], [ null, %2 ]\l  %16 = ptrtoint i32* %14 to i64\l  %17 = ptrtoint i32* %15 to i64\l  %18 = sub i64 %16, %17\l  %19 = ashr exact i64 %18, 2\l  %20 = icmp eq i64 %18, 9223372036854775804\l  br i1 %20, label %21, label %23\l|{<s0>T|<s1>F}}"];
	Node0x5555fcc42fb0:s0 -> Node0x5555fcc44880;
	Node0x5555fcc42fb0:s1 -> Node0x5555fcc44910;
	Node0x5555fcc44880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%21:\l21:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #6\l          to label %22 unwind label %118\l}"];
	Node0x5555fcc44880 -> Node0x5555fcc44b10;
	Node0x5555fcc44880 -> Node0x5555fcc44b60;
	Node0x5555fcc44b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%22:\l22:                                               \l  unreachable\l}"];
	Node0x5555fcc44910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%23:\l23:                                               \l  %24 = icmp eq i64 %18, 0\l  %25 = select i1 %24, i64 1, i64 %19\l  %26 = add nsw i64 %25, %19\l  %27 = icmp ult i64 %26, %19\l  %28 = icmp ugt i64 %26, 2305843009213693951\l  %29 = or i1 %27, %28\l  %30 = select i1 %29, i64 2305843009213693951, i64 %26\l  %31 = icmp eq i64 %30, 0\l  br i1 %31, label %37, label %32\l|{<s0>T|<s1>F}}"];
	Node0x5555fcc44910:s0 -> Node0x5555fcc452c0;
	Node0x5555fcc44910:s1 -> Node0x5555fcc45310;
	Node0x5555fcc45310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%32:\l32:                                               \l  %33 = shl nuw nsw i64 %30, 2\l  %34 = invoke noalias nonnull i8* @_Znwm(i64 %33) #7\l          to label %35 unwind label %118\l}"];
	Node0x5555fcc45310 -> Node0x5555fcc456b0;
	Node0x5555fcc45310 -> Node0x5555fcc44b60;
	Node0x5555fcc456b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%35:\l35:                                               \l  %36 = bitcast i8* %34 to i32*\l  br label %37\l}"];
	Node0x5555fcc456b0 -> Node0x5555fcc452c0;
	Node0x5555fcc452c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%37:\l37:                                               \l  %38 = phi i32* [ %36, %35 ], [ null, %23 ]\l  %39 = getelementptr inbounds i32, i32* %38, i64 %19\l  store i32 %13, i32* %39, align 4, !tbaa !3\l  %40 = icmp sgt i64 %18, 0\l  br i1 %40, label %41, label %44\l|{<s0>T|<s1>F}}"];
	Node0x5555fcc452c0:s0 -> Node0x5555fcc46240;
	Node0x5555fcc452c0:s1 -> Node0x5555fcc46290;
	Node0x5555fcc46240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%41:\l41:                                               \l  %42 = bitcast i32* %38 to i8*\l  %43 = bitcast i32* %15 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %42, i8* align 4 %43,\l... i64 %18, i1 false) #8\l  br label %44\l}"];
	Node0x5555fcc46240 -> Node0x5555fcc46290;
	Node0x5555fcc46290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%44:\l44:                                               \l  %45 = getelementptr inbounds i32, i32* %39, i64 1\l  %46 = icmp eq i32* %15, null\l  br i1 %46, label %49, label %47\l|{<s0>T|<s1>F}}"];
	Node0x5555fcc46290:s0 -> Node0x5555fcc46920;
	Node0x5555fcc46290:s1 -> Node0x5555fcc46970;
	Node0x5555fcc46970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%47:\l47:                                               \l  %48 = bitcast i32* %15 to i8*\l  tail call void @_ZdlPv(i8* nonnull %48) #8\l  br label %49\l}"];
	Node0x5555fcc46970 -> Node0x5555fcc46920;
	Node0x5555fcc46920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%49:\l49:                                               \l  store i32* %38, i32** %5, align 8, !tbaa !10\l  store i32* %45, i32** %3, align 8, !tbaa !7\l  %50 = getelementptr inbounds i32, i32* %38, i64 %30\l  store i32* %50, i32** %4, align 8, !tbaa !11\l  br label %120\l}"];
	Node0x5555fcc46920 -> Node0x5555fcc442a0;
	Node0x5555fcc43000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi i32* [ %110, %109 ], [ null, %2 ]\l  %53 = phi i32* [ %111, %109 ], [ null, %2 ]\l  %54 = phi i32* [ %112, %109 ], [ null, %2 ]\l  %55 = phi i32 [ %115, %109 ], [ 2, %2 ]\l  %56 = phi i32 [ %113, %109 ], [ %1, %2 ]\l  %57 = srem i32 %56, %55\l  %58 = sdiv i32 %56, %55\l  %59 = icmp eq i32 %57, 0\l  br i1 %59, label %60, label %109\l|{<s0>T|<s1>F}}"];
	Node0x5555fcc43000:s0 -> Node0x5555fcc47e00;
	Node0x5555fcc43000:s1 -> Node0x5555fcc47820;
	Node0x5555fcc47e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%60:\l60:                                               \l  %61 = icmp eq i32* %54, %53\l  br i1 %61, label %64, label %62\l|{<s0>T|<s1>F}}"];
	Node0x5555fcc47e00:s0 -> Node0x5555fcc47fd0;
	Node0x5555fcc47e00:s1 -> Node0x5555fcc48020;
	Node0x5555fcc48020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%62:\l62:                                               \l  store i32 %55, i32* %54, align 4, !tbaa !3\l  %63 = getelementptr inbounds i32, i32* %54, i64 1\l  store i32* %63, i32** %3, align 8, !tbaa !7\l  br label %100\l}"];
	Node0x5555fcc48020 -> Node0x5555fcc48320;
	Node0x5555fcc47fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%64:\l64:                                               \l  %65 = ptrtoint i32* %53 to i64\l  %66 = ptrtoint i32* %52 to i64\l  %67 = sub i64 %65, %66\l  %68 = ashr exact i64 %67, 2\l  %69 = icmp eq i64 %67, 9223372036854775804\l  br i1 %69, label %70, label %72\l|{<s0>T|<s1>F}}"];
	Node0x5555fcc47fd0:s0 -> Node0x5555fcc48aa0;
	Node0x5555fcc47fd0:s1 -> Node0x5555fcc48af0;
	Node0x5555fcc48aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%70:\l70:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #6\l          to label %71 unwind label %107\l}"];
	Node0x5555fcc48aa0 -> Node0x5555fcc48c60;
	Node0x5555fcc48aa0 -> Node0x5555fcc48cb0;
	Node0x5555fcc48c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%71:\l71:                                               \l  unreachable\l}"];
	Node0x5555fcc48af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%72:\l72:                                               \l  %73 = icmp eq i64 %67, 0\l  %74 = select i1 %73, i64 1, i64 %68\l  %75 = add nsw i64 %74, %68\l  %76 = icmp ult i64 %75, %68\l  %77 = icmp ugt i64 %75, 2305843009213693951\l  %78 = or i1 %76, %77\l  %79 = select i1 %78, i64 2305843009213693951, i64 %75\l  %80 = icmp eq i64 %79, 0\l  br i1 %80, label %86, label %81\l|{<s0>T|<s1>F}}"];
	Node0x5555fcc48af0:s0 -> Node0x5555fcc492f0;
	Node0x5555fcc48af0:s1 -> Node0x5555fcc49340;
	Node0x5555fcc49340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%81:\l81:                                               \l  %82 = shl nuw nsw i64 %79, 2\l  %83 = invoke noalias nonnull i8* @_Znwm(i64 %82) #7\l          to label %84 unwind label %105\l}"];
	Node0x5555fcc49340 -> Node0x5555fcc494d0;
	Node0x5555fcc49340 -> Node0x5555fcc49520;
	Node0x5555fcc494d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%84:\l84:                                               \l  %85 = bitcast i8* %83 to i32*\l  br label %86\l}"];
	Node0x5555fcc494d0 -> Node0x5555fcc492f0;
	Node0x5555fcc492f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%86:\l86:                                               \l  %87 = phi i32* [ %85, %84 ], [ null, %72 ]\l  %88 = getelementptr inbounds i32, i32* %87, i64 %68\l  store i32 %55, i32* %88, align 4, !tbaa !3\l  %89 = icmp sgt i64 %67, 0\l  br i1 %89, label %90, label %93\l|{<s0>T|<s1>F}}"];
	Node0x5555fcc492f0:s0 -> Node0x5555fcc49970;
	Node0x5555fcc492f0:s1 -> Node0x5555fcc499c0;
	Node0x5555fcc49970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%90:\l90:                                               \l  %91 = bitcast i32* %87 to i8*\l  %92 = bitcast i32* %52 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %92,\l... i64 %67, i1 false) #8\l  br label %93\l}"];
	Node0x5555fcc49970 -> Node0x5555fcc499c0;
	Node0x5555fcc499c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%93:\l93:                                               \l  %94 = getelementptr inbounds i32, i32* %88, i64 1\l  %95 = icmp eq i32* %52, null\l  br i1 %95, label %98, label %96\l|{<s0>T|<s1>F}}"];
	Node0x5555fcc499c0:s0 -> Node0x5555fcc49ed0;
	Node0x5555fcc499c0:s1 -> Node0x5555fcc49f20;
	Node0x5555fcc49f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%96:\l96:                                               \l  %97 = bitcast i32* %52 to i8*\l  tail call void @_ZdlPv(i8* nonnull %97) #8\l  br label %98\l}"];
	Node0x5555fcc49f20 -> Node0x5555fcc49ed0;
	Node0x5555fcc49ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%98:\l98:                                               \l  store i32* %87, i32** %5, align 8, !tbaa !10\l  store i32* %94, i32** %3, align 8, !tbaa !7\l  %99 = getelementptr inbounds i32, i32* %87, i64 %79\l  store i32* %99, i32** %4, align 8, !tbaa !11\l  br label %100\l}"];
	Node0x5555fcc49ed0 -> Node0x5555fcc48320;
	Node0x5555fcc48320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%100:\l100:                                              \l  %101 = phi i32* [ %87, %98 ], [ %52, %62 ]\l  %102 = phi i32* [ %99, %98 ], [ %53, %62 ]\l  %103 = phi i32* [ %94, %98 ], [ %63, %62 ]\l  %104 = add nsw i32 %55, -1\l  br label %109\l}"];
	Node0x5555fcc48320 -> Node0x5555fcc47820;
	Node0x5555fcc49520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%105:\l105:                                              \l  %106 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %121\l}"];
	Node0x5555fcc49520 -> Node0x5555fcc4b430;
	Node0x5555fcc48cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%107:\l107:                                              \l  %108 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %121\l}"];
	Node0x5555fcc48cb0 -> Node0x5555fcc4b430;
	Node0x5555fcc47820 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%109:\l109:                                              \l  %110 = phi i32* [ %101, %100 ], [ %52, %51 ]\l  %111 = phi i32* [ %102, %100 ], [ %53, %51 ]\l  %112 = phi i32* [ %103, %100 ], [ %54, %51 ]\l  %113 = phi i32 [ %58, %100 ], [ %56, %51 ]\l  %114 = phi i32 [ %104, %100 ], [ %55, %51 ]\l  %115 = add nsw i32 %114, 1\l  %116 = mul nsw i32 %115, %115\l  %117 = icmp sgt i32 %116, %113\l  br i1 %117, label %8, label %51, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5555fcc47820:s0 -> Node0x5555fcc43140;
	Node0x5555fcc47820:s1 -> Node0x5555fcc43000;
	Node0x5555fcc44b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%118:\l118:                                              \l  %119 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %121\l}"];
	Node0x5555fcc44b60 -> Node0x5555fcc4b430;
	Node0x5555fcc442a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%120:\l120:                                              \l  ret void\l}"];
	Node0x5555fcc4b430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%121:\l121:                                              \l  %122 = phi i32* [ %15, %118 ], [ %52, %105 ], [ %52, %107 ]\l  %123 = phi \{ i8*, i32 \} [ %119, %118 ], [ %106, %105 ], [ %108, %107 ]\l  %124 = icmp eq i32* %122, null\l  br i1 %124, label %127, label %125\l|{<s0>T|<s1>F}}"];
	Node0x5555fcc4b430:s0 -> Node0x5555fcc4bfa0;
	Node0x5555fcc4b430:s1 -> Node0x5555fcc4bff0;
	Node0x5555fcc4bff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%125:\l125:                                              \l  %126 = bitcast i32* %122 to i8*\l  tail call void @_ZdlPv(i8* nonnull %126) #8\l  br label %127\l}"];
	Node0x5555fcc4bff0 -> Node0x5555fcc4bfa0;
	Node0x5555fcc4bfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%127:\l127:                                              \l  resume \{ i8*, i32 \} %123\l}"];
}
