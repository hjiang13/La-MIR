; ModuleID = '../../Human_xBenchmarks_164/CPP_67/CPP_67.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_67/CPP_67.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

; Function Attrs: uwtable
define dso_local i32 @_Z18fruit_distributionNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(%"class.std::__cxx11::basic_string"* nocapture readonly %0, i32 %1) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %11 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  store %union.anon* %10, %union.anon** %11, align 8, !tbaa !3
  %12 = bitcast %union.anon* %10 to i8*
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  store i64 0, i64* %14, align 8, !tbaa !8
  store i8 0, i8* %12, align 8, !tbaa !11
  %15 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %17 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  store %union.anon* %16, %union.anon** %17, align 8, !tbaa !3
  %18 = bitcast %union.anon* %16 to i8*
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  store i64 0, i64* %20, align 8, !tbaa !8
  store i8 0, i8* %18, align 8, !tbaa !11
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %23 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2
  %25 = bitcast %"class.std::__cxx11::basic_string"* %8 to %union.anon**
  %26 = bitcast i64* %3 to i8*
  %27 = bitcast %union.anon* %24 to i8*
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 2, i32 0
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  %32 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %34 = bitcast %"class.std::__cxx11::basic_string"* %7 to %union.anon**
  %35 = bitcast i64* %4 to i8*
  %36 = bitcast %union.anon* %33 to i8*
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 0
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  %40 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  %41 = load i64, i64* %21, align 8, !tbaa !8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %2
  %44 = bitcast i64* %30 to <2 x i64>*
  %45 = bitcast i64* %20 to <2 x i64>*
  %46 = bitcast i64* %39 to <2 x i64>*
  %47 = bitcast i64* %14 to <2 x i64>*
  br label %67

48:                                               ; preds = %202
  %49 = load i8*, i8** %13, align 8, !tbaa !12
  br label %50

50:                                               ; preds = %48, %2
  %51 = phi i8* [ %49, %48 ], [ %12, %2 ]
  %52 = call i64 @strtol(i8* nocapture nonnull %51, i8** null, i32 10) #7
  %53 = load i8*, i8** %19, align 8, !tbaa !12
  %54 = call i64 @strtol(i8* nocapture nonnull %53, i8** null, i32 10) #7
  %55 = load i8*, i8** %19, align 8, !tbaa !12
  %56 = icmp eq i8* %55, %18
  br i1 %56, label %58, label %57

57:                                               ; preds = %50
  call void @_ZdlPv(i8* %55) #7
  br label %58

58:                                               ; preds = %50, %57
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #7
  %59 = load i8*, i8** %13, align 8, !tbaa !12
  %60 = icmp eq i8* %59, %12
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  call void @_ZdlPv(i8* %59) #7
  br label %62

62:                                               ; preds = %58, %61
  %63 = trunc i64 %52 to i32
  %64 = trunc i64 %54 to i32
  %65 = add i32 %63, %64
  %66 = sub i32 %1, %65
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #7
  ret i32 %66

67:                                               ; preds = %43, %202
  %68 = phi i64 [ %204, %202 ], [ 0, %43 ]
  %69 = phi i32 [ %203, %202 ], [ 0, %43 ]
  %70 = load i8*, i8** %22, align 8, !tbaa !12
  %71 = getelementptr inbounds i8, i8* %70, i64 %68
  %72 = load i8, i8* %71, align 1, !tbaa !11
  %73 = add i8 %72, -48
  %74 = icmp ult i8 %73, 10
  br i1 %74, label %75, label %196

75:                                               ; preds = %67
  switch i32 %69, label %202 [
    i32 0, label %76
    i32 1, label %136
  ]

76:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !13)
  store %union.anon* %33, %union.anon** %34, align 8, !tbaa !3, !alias.scope !13
  %77 = load i8*, i8** %13, align 8, !tbaa !12, !noalias !13
  %78 = load i64, i64* %14, align 8, !tbaa !8, !noalias !13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7, !noalias !13
  store i64 %78, i64* %4, align 8, !tbaa !16, !noalias !13
  %79 = icmp ugt i64 %78, 15
  br i1 %79, label %80, label %84

80:                                               ; preds = %76
  %81 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i64* nonnull align 8 dereferenceable(8) %4, i64 0)
          to label %82 unwind label %132

82:                                               ; preds = %80
  store i8* %81, i8** %37, align 8, !tbaa !12, !alias.scope !13
  %83 = load i64, i64* %4, align 8, !tbaa !16, !noalias !13
  store i64 %83, i64* %38, align 8, !tbaa !11, !alias.scope !13
  br label %84

84:                                               ; preds = %76, %82
  %85 = phi i8* [ %81, %82 ], [ %36, %76 ]
  switch i64 %78, label %88 [
    i64 1, label %86
    i64 0, label %89
  ]

86:                                               ; preds = %84
  %87 = load i8, i8* %77, align 1, !tbaa !11
  store i8 %87, i8* %85, align 1, !tbaa !11
  br label %89

88:                                               ; preds = %84
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %85, i8* align 1 %77, i64 %78, i1 false) #7
  br label %89

89:                                               ; preds = %88, %86, %84
  %90 = load i64, i64* %4, align 8, !tbaa !16, !noalias !13
  store i64 %90, i64* %39, align 8, !tbaa !8, !alias.scope !13
  %91 = load i8*, i8** %37, align 8, !tbaa !12, !alias.scope !13
  %92 = getelementptr inbounds i8, i8* %91, i64 %90
  store i8 0, i8* %92, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7, !noalias !13
  %93 = load i64, i64* %39, align 8, !tbaa !8, !alias.scope !13
  %94 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i64 %93, i64 0, i64 1, i8 signext %72)
          to label %100 unwind label %95

95:                                               ; preds = %89
  %96 = landingpad { i8*, i32 }
          cleanup
  %97 = load i8*, i8** %37, align 8, !tbaa !12, !alias.scope !13
  %98 = icmp eq i8* %97, %36
  br i1 %98, label %134, label %99

99:                                               ; preds = %95
  call void @_ZdlPv(i8* %97) #7
  br label %134

100:                                              ; preds = %89
  %101 = load i8*, i8** %37, align 8, !tbaa !12
  %102 = icmp eq i8* %101, %36
  br i1 %102, label %103, label %117

103:                                              ; preds = %100
  %104 = load i64, i64* %39, align 8, !tbaa !8
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %112, label %106

106:                                              ; preds = %103
  %107 = load i8*, i8** %13, align 8, !tbaa !12
  %108 = icmp eq i64 %104, 1
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  %110 = load i8, i8* %36, align 8, !tbaa !11
  store i8 %110, i8* %107, align 1, !tbaa !11
  br label %112

111:                                              ; preds = %106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %107, i8* nonnull align 8 %36, i64 %104, i1 false) #7
  br label %112

112:                                              ; preds = %111, %109, %103
  %113 = load i64, i64* %39, align 8, !tbaa !8
  store i64 %113, i64* %14, align 8, !tbaa !8
  %114 = load i8*, i8** %13, align 8, !tbaa !12
  %115 = getelementptr inbounds i8, i8* %114, i64 %113
  store i8 0, i8* %115, align 1, !tbaa !11
  %116 = load i8*, i8** %37, align 8, !tbaa !12
  br label %126

117:                                              ; preds = %100
  %118 = load i8*, i8** %13, align 8, !tbaa !12
  %119 = icmp eq i8* %118, %12
  %120 = load i64, i64* %40, align 8
  store i8* %101, i8** %13, align 8, !tbaa !12
  %121 = load <2 x i64>, <2 x i64>* %46, align 8, !tbaa !11
  store <2 x i64> %121, <2 x i64>* %47, align 8, !tbaa !11
  %122 = icmp eq i8* %118, null
  %123 = or i1 %119, %122
  br i1 %123, label %125, label %124

124:                                              ; preds = %117
  store i8* %118, i8** %37, align 8, !tbaa !12
  store i64 %120, i64* %38, align 8, !tbaa !11
  br label %126

125:                                              ; preds = %117
  store %union.anon* %33, %union.anon** %34, align 8, !tbaa !12
  br label %126

126:                                              ; preds = %112, %124, %125
  %127 = phi i8* [ %116, %112 ], [ %118, %124 ], [ %36, %125 ]
  store i64 0, i64* %39, align 8, !tbaa !8
  store i8 0, i8* %127, align 1, !tbaa !11
  %128 = load i8*, i8** %37, align 8, !tbaa !12
  %129 = icmp eq i8* %128, %36
  br i1 %129, label %131, label %130

130:                                              ; preds = %126
  call void @_ZdlPv(i8* %128) #7
  br label %131

131:                                              ; preds = %126, %130
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #7
  br label %202

132:                                              ; preds = %80
  %133 = landingpad { i8*, i32 }
          cleanup
  br label %134

134:                                              ; preds = %95, %99, %132
  %135 = phi { i8*, i32 } [ %133, %132 ], [ %96, %99 ], [ %96, %95 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #7
  br label %207

136:                                              ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #7
  call void @llvm.experimental.noalias.scope.decl(metadata !17)
  store %union.anon* %24, %union.anon** %25, align 8, !tbaa !3, !alias.scope !17
  %137 = load i8*, i8** %19, align 8, !tbaa !12, !noalias !17
  %138 = load i64, i64* %20, align 8, !tbaa !8, !noalias !17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #7, !noalias !17
  store i64 %138, i64* %3, align 8, !tbaa !16, !noalias !17
  %139 = icmp ugt i64 %138, 15
  br i1 %139, label %140, label %144

140:                                              ; preds = %136
  %141 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64* nonnull align 8 dereferenceable(8) %3, i64 0)
          to label %142 unwind label %192

142:                                              ; preds = %140
  store i8* %141, i8** %28, align 8, !tbaa !12, !alias.scope !17
  %143 = load i64, i64* %3, align 8, !tbaa !16, !noalias !17
  store i64 %143, i64* %29, align 8, !tbaa !11, !alias.scope !17
  br label %144

144:                                              ; preds = %136, %142
  %145 = phi i8* [ %141, %142 ], [ %27, %136 ]
  switch i64 %138, label %148 [
    i64 1, label %146
    i64 0, label %149
  ]

146:                                              ; preds = %144
  %147 = load i8, i8* %137, align 1, !tbaa !11
  store i8 %147, i8* %145, align 1, !tbaa !11
  br label %149

148:                                              ; preds = %144
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %145, i8* align 1 %137, i64 %138, i1 false) #7
  br label %149

149:                                              ; preds = %148, %146, %144
  %150 = load i64, i64* %3, align 8, !tbaa !16, !noalias !17
  store i64 %150, i64* %30, align 8, !tbaa !8, !alias.scope !17
  %151 = load i8*, i8** %28, align 8, !tbaa !12, !alias.scope !17
  %152 = getelementptr inbounds i8, i8* %151, i64 %150
  store i8 0, i8* %152, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #7, !noalias !17
  %153 = load i64, i64* %30, align 8, !tbaa !8, !alias.scope !17
  %154 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i64 %153, i64 0, i64 1, i8 signext %72)
          to label %160 unwind label %155

155:                                              ; preds = %149
  %156 = landingpad { i8*, i32 }
          cleanup
  %157 = load i8*, i8** %28, align 8, !tbaa !12, !alias.scope !17
  %158 = icmp eq i8* %157, %27
  br i1 %158, label %194, label %159

159:                                              ; preds = %155
  call void @_ZdlPv(i8* %157) #7
  br label %194

160:                                              ; preds = %149
  %161 = load i8*, i8** %28, align 8, !tbaa !12
  %162 = icmp eq i8* %161, %27
  br i1 %162, label %163, label %177

163:                                              ; preds = %160
  %164 = load i64, i64* %30, align 8, !tbaa !8
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %172, label %166

166:                                              ; preds = %163
  %167 = load i8*, i8** %19, align 8, !tbaa !12
  %168 = icmp eq i64 %164, 1
  br i1 %168, label %169, label %171

169:                                              ; preds = %166
  %170 = load i8, i8* %27, align 8, !tbaa !11
  store i8 %170, i8* %167, align 1, !tbaa !11
  br label %172

171:                                              ; preds = %166
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %167, i8* nonnull align 8 %27, i64 %164, i1 false) #7
  br label %172

172:                                              ; preds = %171, %169, %163
  %173 = load i64, i64* %30, align 8, !tbaa !8
  store i64 %173, i64* %20, align 8, !tbaa !8
  %174 = load i8*, i8** %19, align 8, !tbaa !12
  %175 = getelementptr inbounds i8, i8* %174, i64 %173
  store i8 0, i8* %175, align 1, !tbaa !11
  %176 = load i8*, i8** %28, align 8, !tbaa !12
  br label %186

177:                                              ; preds = %160
  %178 = load i8*, i8** %19, align 8, !tbaa !12
  %179 = icmp eq i8* %178, %18
  %180 = load i64, i64* %31, align 8
  store i8* %161, i8** %19, align 8, !tbaa !12
  %181 = load <2 x i64>, <2 x i64>* %44, align 8, !tbaa !11
  store <2 x i64> %181, <2 x i64>* %45, align 8, !tbaa !11
  %182 = icmp eq i8* %178, null
  %183 = or i1 %179, %182
  br i1 %183, label %185, label %184

184:                                              ; preds = %177
  store i8* %178, i8** %28, align 8, !tbaa !12
  store i64 %180, i64* %29, align 8, !tbaa !11
  br label %186

185:                                              ; preds = %177
  store %union.anon* %24, %union.anon** %25, align 8, !tbaa !12
  br label %186

186:                                              ; preds = %172, %184, %185
  %187 = phi i8* [ %176, %172 ], [ %178, %184 ], [ %27, %185 ]
  store i64 0, i64* %30, align 8, !tbaa !8
  store i8 0, i8* %187, align 1, !tbaa !11
  %188 = load i8*, i8** %28, align 8, !tbaa !12
  %189 = icmp eq i8* %188, %27
  br i1 %189, label %191, label %190

190:                                              ; preds = %186
  call void @_ZdlPv(i8* %188) #7
  br label %191

191:                                              ; preds = %186, %190
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #7
  br label %202

192:                                              ; preds = %140
  %193 = landingpad { i8*, i32 }
          cleanup
  br label %194

194:                                              ; preds = %155, %159, %192
  %195 = phi { i8*, i32 } [ %193, %192 ], [ %156, %159 ], [ %156, %155 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #7
  br label %207

196:                                              ; preds = %67
  %197 = icmp eq i32 %69, 0
  br i1 %197, label %198, label %202

198:                                              ; preds = %196
  %199 = load i64, i64* %14, align 8, !tbaa !8
  %200 = icmp ne i64 %199, 0
  %201 = zext i1 %200 to i32
  br label %202

202:                                              ; preds = %131, %198, %75, %191, %196
  %203 = phi i32 [ 1, %191 ], [ 0, %131 ], [ 1, %196 ], [ 0, %75 ], [ %201, %198 ]
  %204 = add nuw i64 %68, 1
  %205 = load i64, i64* %21, align 8, !tbaa !8
  %206 = icmp ugt i64 %205, %204
  br i1 %206, label %67, label %48, !llvm.loop !20

207:                                              ; preds = %194, %134
  %208 = phi { i8*, i32 } [ %195, %194 ], [ %135, %134 ]
  %209 = load i8*, i8** %19, align 8, !tbaa !12
  %210 = icmp eq i8* %209, %18
  br i1 %210, label %212, label %211

211:                                              ; preds = %207
  call void @_ZdlPv(i8* %209) #7
  br label %212

212:                                              ; preds = %211, %207
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #7
  %213 = load i8*, i8** %13, align 8, !tbaa !12
  %214 = icmp eq i8* %213, %12
  br i1 %214, label %216, label %215

215:                                              ; preds = %212
  call void @_ZdlPv(i8* %213) #7
  br label %216

216:                                              ; preds = %215, %212
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #7
  resume { i8*, i32 } %208
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: mustprogress nofree nounwind willreturn
declare dso_local i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #3

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i64, i8 signext) local_unnamed_addr #4

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #6

attributes #0 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { mustprogress nofree nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #6 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!9, !5, i64 0}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!15 = distinct !{!15, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!16 = !{!10, !10, i64 0}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_: argument 0"}
!19 = distinct !{!19, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_"}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.mustprogress"}
