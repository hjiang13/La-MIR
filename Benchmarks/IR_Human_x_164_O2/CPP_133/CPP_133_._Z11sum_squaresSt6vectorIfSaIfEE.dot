digraph "CFG for '_Z11sum_squaresSt6vectorIfSaIfEE' function" {
	label="CFG for '_Z11sum_squaresSt6vectorIfSaIfEE' function";

	Node0x55ed1553c4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%1:\l  %2 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %3 = load float*, float** %2, align 8, !tbaa !3\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = load float*, float** %4, align 8, !tbaa !8\l  %6 = ptrtoint float* %3 to i64\l  %7 = ptrtoint float* %5 to i64\l  %8 = sub i64 %6, %7\l  %9 = icmp eq i64 %8, 0\l  br i1 %9, label %31, label %10\l|{<s0>T|<s1>F}}"];
	Node0x55ed1553c4f0:s0 -> Node0x55ed1553d9a0;
	Node0x55ed1553c4f0:s1 -> Node0x55ed1553de30;
	Node0x55ed1553de30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%10:\l10:                                               \l  %11 = ashr exact i64 %8, 2\l  %12 = call i64 @llvm.umax.i64(i64 %11, i64 1)\l  %13 = and i64 %12, 1\l  %14 = icmp ult i64 %11, 2\l  br i1 %14, label %19, label %15\l|{<s0>T|<s1>F}}"];
	Node0x55ed1553de30:s0 -> Node0x55ed1553e360;
	Node0x55ed1553de30:s1 -> Node0x55ed1553e3b0;
	Node0x55ed1553e3b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%15:\l15:                                               \l  %16 = and i64 %12, -2\l  br label %33\l}"];
	Node0x55ed1553e3b0 -> Node0x55ed1553e5b0;
	Node0x55ed1553e670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%17:\l17:                                               \l  %18 = sitofp i32 %51 to float\l  br label %19\l}"];
	Node0x55ed1553e670 -> Node0x55ed1553e360;
	Node0x55ed1553e360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%19:\l19:                                               \l  %20 = phi i32 [ undef, %10 ], [ %51, %17 ]\l  %21 = phi i64 [ 0, %10 ], [ %52, %17 ]\l  %22 = phi float [ 0.000000e+00, %10 ], [ %18, %17 ]\l  %23 = icmp eq i64 %13, 0\l  br i1 %23, label %31, label %24\l|{<s0>T|<s1>F}}"];
	Node0x55ed1553e360:s0 -> Node0x55ed1553d9a0;
	Node0x55ed1553e360:s1 -> Node0x55ed1553f8b0;
	Node0x55ed1553f8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%24:\l24:                                               \l  %25 = getelementptr inbounds float, float* %5, i64 %21\l  %26 = load float, float* %25, align 4, !tbaa !9\l  %27 = tail call float @llvm.ceil.f32(float %26) #2\l  %28 = fmul float %27, %27\l  %29 = fadd float %28, %22\l  %30 = fptosi float %29 to i32\l  br label %31\l}"];
	Node0x55ed1553f8b0 -> Node0x55ed1553d9a0;
	Node0x55ed1553d9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%31:\l31:                                               \l  %32 = phi i32 [ 0, %1 ], [ %20, %19 ], [ %30, %24 ]\l  ret i32 %32\l}"];
	Node0x55ed1553e5b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i64 [ 0, %15 ], [ %52, %33 ]\l  %35 = phi i32 [ 0, %15 ], [ %51, %33 ]\l  %36 = phi i64 [ %16, %15 ], [ %53, %33 ]\l  %37 = getelementptr inbounds float, float* %5, i64 %34\l  %38 = load float, float* %37, align 4, !tbaa !9\l  %39 = tail call float @llvm.ceil.f32(float %38) #2\l  %40 = fmul float %39, %39\l  %41 = sitofp i32 %35 to float\l  %42 = fadd float %40, %41\l  %43 = fptosi float %42 to i32\l  %44 = or i64 %34, 1\l  %45 = getelementptr inbounds float, float* %5, i64 %44\l  %46 = load float, float* %45, align 4, !tbaa !9\l  %47 = tail call float @llvm.ceil.f32(float %46) #2\l  %48 = fmul float %47, %47\l  %49 = sitofp i32 %43 to float\l  %50 = fadd float %48, %49\l  %51 = fptosi float %50 to i32\l  %52 = add nuw nsw i64 %34, 2\l  %53 = add i64 %36, -2\l  %54 = icmp eq i64 %53, 0\l  br i1 %54, label %17, label %33, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x55ed1553e5b0:s0 -> Node0x55ed1553e670;
	Node0x55ed1553e5b0:s1 -> Node0x55ed1553e5b0;
}
