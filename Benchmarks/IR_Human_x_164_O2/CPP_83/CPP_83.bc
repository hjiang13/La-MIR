; ModuleID = '../../Human_xBenchmarks_164/CPP_83/CPP_83.cpp'
source_filename = "../../Human_xBenchmarks_164/CPP_83/CPP_83.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local i32 @_Z15starts_one_endsi(i32 %0) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 1
  br i1 %2, label %57, label %3

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 1
  br i1 %4, label %57, label %5

5:                                                ; preds = %3
  %6 = icmp sgt i32 %0, 2
  br i1 %6, label %7, label %57

7:                                                ; preds = %5
  %8 = add i32 %0, -2
  %9 = icmp ult i32 %8, 8
  br i1 %9, label %48, label %10

10:                                               ; preds = %7
  %11 = and i32 %8, -8
  %12 = or i32 %11, 2
  %13 = add i32 %11, -8
  %14 = lshr exact i32 %13, 3
  %15 = add nuw nsw i32 %14, 1
  %16 = and i32 %15, 7
  %17 = icmp ult i32 %13, 56
  br i1 %17, label %28, label %18

18:                                               ; preds = %10
  %19 = and i32 %15, 1073741816
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi <4 x i32> [ <i32 18, i32 1, i32 1, i32 1>, %18 ], [ %24, %20 ]
  %22 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %18 ], [ %25, %20 ]
  %23 = phi i32 [ %19, %18 ], [ %26, %20 ]
  %24 = mul <4 x i32> %21, <i32 100000000, i32 100000000, i32 100000000, i32 100000000>
  %25 = mul <4 x i32> %22, <i32 100000000, i32 100000000, i32 100000000, i32 100000000>
  %26 = add i32 %23, -8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %20, !llvm.loop !3

28:                                               ; preds = %20, %10
  %29 = phi <4 x i32> [ undef, %10 ], [ %24, %20 ]
  %30 = phi <4 x i32> [ undef, %10 ], [ %25, %20 ]
  %31 = phi <4 x i32> [ <i32 18, i32 1, i32 1, i32 1>, %10 ], [ %24, %20 ]
  %32 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %10 ], [ %25, %20 ]
  %33 = icmp eq i32 %16, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %28, %34
  %35 = phi <4 x i32> [ %38, %34 ], [ %31, %28 ]
  %36 = phi <4 x i32> [ %39, %34 ], [ %32, %28 ]
  %37 = phi i32 [ %40, %34 ], [ %16, %28 ]
  %38 = mul <4 x i32> %35, <i32 10, i32 10, i32 10, i32 10>
  %39 = mul <4 x i32> %36, <i32 10, i32 10, i32 10, i32 10>
  %40 = add i32 %37, -1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !6

42:                                               ; preds = %34, %28
  %43 = phi <4 x i32> [ %29, %28 ], [ %38, %34 ]
  %44 = phi <4 x i32> [ %30, %28 ], [ %39, %34 ]
  %45 = mul <4 x i32> %44, %43
  %46 = call i32 @llvm.vector.reduce.mul.v4i32(<4 x i32> %45)
  %47 = icmp eq i32 %8, %11
  br i1 %47, label %57, label %48

48:                                               ; preds = %7, %42
  %49 = phi i32 [ 2, %7 ], [ %12, %42 ]
  %50 = phi i32 [ 18, %7 ], [ %46, %42 ]
  br label %51

51:                                               ; preds = %48, %51
  %52 = phi i32 [ %55, %51 ], [ %49, %48 ]
  %53 = phi i32 [ %54, %51 ], [ %50, %48 ]
  %54 = mul nsw i32 %53, 10
  %55 = add nuw nsw i32 %52, 1
  %56 = icmp eq i32 %55, %0
  br i1 %56, label %57, label %51, !llvm.loop !8

57:                                               ; preds = %51, %42, %5, %3, %1
  %58 = phi i32 [ 0, %1 ], [ 1, %3 ], [ 18, %5 ], [ %46, %42 ], [ %54, %51 ]
  ret i32 %58
}

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i32 @llvm.vector.reduce.mul.v4i32(<4 x i32>) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone willreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = distinct !{!3, !4, !5}
!4 = !{!"llvm.loop.mustprogress"}
!5 = !{!"llvm.loop.isvectorized", i32 1}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !4, !9, !5}
!9 = !{!"llvm.loop.unroll.runtime.disable"}
